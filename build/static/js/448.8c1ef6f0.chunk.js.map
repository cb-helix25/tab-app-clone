{"version":3,"file":"static/js/448.8c1ef6f0.chunk.js","mappings":"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","sources":["tabs/instructions/componentTokens.ts","utils/storageUtils.ts","components/modern/EnquiryMetricsV2.tsx","components/modern/TimeMetricsV2.tsx","hooks/useHomeMetricsStream.ts","tabs/resources/ResourceDetails.tsx","services/gitHistoryService.ts","tabs/home/RecentWorkFeed.tsx","services/teamIssuesService.ts","tabs/home/TeamIssuesBoard.tsx","tabs/transactions/TransactionCard.tsx","tabs/transactions/TransactionApprovalPopup.tsx","tabs/transactions/OutstandingBalanceCard.tsx","tabs/home/ActionSection.tsx","tabs/home/SectionCard.tsx","tabs/home/QuickActionsCard.tsx","tabs/home/QuickActionsBar.tsx","tabs/home/ImmediateActionChip.tsx","tabs/home/ImmediateActionsBar.tsx","tabs/transactions/OutstandingBalancesList.tsx","tabs/home/WeeklyAttendanceView.tsx","tabs/home/EnhancedAttendanceNew.tsx","tabs/home/PersonalAttendanceConfirm.tsx","tabs/home/Home.tsx","app/functionality/pitchBuilderUtils.ts","tabs/home/InstructionsPrompt.tsx","tabs/forms/FormDetails.tsx","app/functionality/BespokePanel.tsx","components/ToggleSwitch.tsx"],"sourcesContent":["import { IStackTokens, IStackStyles } from '@fluentui/react';\r\n// invisible change 2.1\r\n//\r\nimport { colours } from '../../app/styles/colours';\r\n\r\nexport const dashboardTokens: IStackTokens = {\r\n  // Reduce vertical gap between stacked sections to reclaim space\r\n  childrenGap: 12,\r\n};\r\n\r\nexport const cardTokens: IStackTokens = {\r\n  childrenGap: 8,\r\n};\r\n\r\nexport const cardStyles: IStackStyles = {\r\n  root: {\r\n    padding: 20,\r\n    borderRadius: 8,\r\n    boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\r\n    backgroundColor: colours.light.sectionBackground,\r\n  },\r\n};\r\n\r\nexport const statusColors = {\r\n  pending: colours.orange,\r\n  completed: colours.green,\r\n  awaiting: colours.yellow,\r\n  notStarted: colours.greyText,\r\n};","/**\r\n * Safe localStorage utilities with quota management\r\n */\r\n\r\nexport interface StorageQuotaInfo {\r\n  used: number;\r\n  total: number;\r\n  available: number;\r\n  percentUsed: number;\r\n}\r\n\r\n/**\r\n * Get localStorage usage information\r\n */\r\nexport const getStorageQuota = (): StorageQuotaInfo => {\r\n  let used = 0;\r\n  let total = 5 * 1024 * 1024; // Default 5MB assumption\r\n  \r\n  try {\r\n    // Calculate used space\r\n    for (const key in localStorage) {\r\n      if (localStorage.hasOwnProperty(key)) {\r\n        used += localStorage[key].length;\r\n      }\r\n    }\r\n    \r\n    // Try to estimate total space (this is approximate)\r\n    if ('storage' in navigator && 'estimate' in navigator.storage) {\r\n      // This is async, but we'll return the default for now\r\n      navigator.storage.estimate().then(estimate => {\r\n        if (estimate.quota) {\r\n          total = estimate.quota;\r\n        }\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.warn('Could not calculate storage usage:', error);\r\n  }\r\n  \r\n  return {\r\n    used,\r\n    total,\r\n    available: total - used,\r\n    percentUsed: (used / total) * 100\r\n  };\r\n};\r\n\r\n/**\r\n * Clear old/large items from localStorage when quota is exceeded\r\n */\r\nexport const cleanupLocalStorage = (): void => {\r\n  if (process.env.REACT_APP_DEBUG_VERBOSE === 'true') {\r\n    // eslint-disable-next-line no-console\r\n    console.log('🧹 Starting localStorage cleanup...');\r\n  }\r\n  \r\n  const itemsToCheck = [];\r\n  \r\n  // Collect all items with their sizes\r\n  for (const key in localStorage) {\r\n    if (localStorage.hasOwnProperty(key)) {\r\n      const value = localStorage[key];\r\n      itemsToCheck.push({\r\n        key,\r\n        size: value.length,\r\n        value\r\n      });\r\n    }\r\n  }\r\n  \r\n  // Sort by size (largest first)\r\n  itemsToCheck.sort((a, b) => b.size - a.size);\r\n  \r\n  if (process.env.REACT_APP_DEBUG_VERBOSE === 'true') {\r\n    // eslint-disable-next-line no-console\r\n    console.log('📊 Current localStorage items:', itemsToCheck.map(item => ({\r\n      key: item.key,\r\n      sizeKB: Math.round(item.size / 1024)\r\n    })));\r\n  }\r\n  \r\n  // Remove largest items first, prioritizing cache data\r\n  const keysToRemove = [];\r\n  \r\n  for (const item of itemsToCheck) {\r\n    // Prioritize removing cache data and large items\r\n    if (item.key.includes('cache') || \r\n        item.key.includes('Data') || \r\n        item.key.includes('prefetched') ||\r\n        item.size > 100000) { // Items larger than ~100KB\r\n      keysToRemove.push(item.key);\r\n    }\r\n  }\r\n  \r\n  // Remove items\r\n  keysToRemove.forEach((key: string) => {\r\n    try {\r\n      localStorage.removeItem(key);\r\n      if (process.env.REACT_APP_DEBUG_VERBOSE === 'true') {\r\n        // eslint-disable-next-line no-console\r\n        console.log(`🗑️ Removed localStorage item: ${key}`);\r\n      }\r\n    } catch (error) {\r\n      console.warn(`Failed to remove localStorage item ${key}:`, error);\r\n    }\r\n  });\r\n  \r\n  const quota = getStorageQuota();\r\n  if (process.env.REACT_APP_DEBUG_VERBOSE === 'true') {\r\n    // eslint-disable-next-line no-console\r\n    console.log(`✅ Cleanup complete. Storage usage: ${quota.percentUsed.toFixed(1)}%`);\r\n  }\r\n};\r\n\r\n/**\r\n * Safely set item in localStorage with quota management\r\n */\r\nexport const safeSetItem = (key: string, value: string): boolean => {\r\n  try {\r\n    localStorage.setItem(key, value);\r\n    return true;\r\n  } catch (error) {\r\n    if (error instanceof DOMException && error.name === 'QuotaExceededError') {\r\n      console.warn('🚨 localStorage quota exceeded, attempting cleanup...');\r\n      \r\n      // Try cleanup and retry\r\n      cleanupLocalStorage();\r\n      \r\n      try {\r\n        localStorage.setItem(key, value);\r\n        if (process.env.REACT_APP_DEBUG_VERBOSE === 'true') {\r\n          // eslint-disable-next-line no-console\r\n          console.log(`✅ Successfully stored ${key} after cleanup`);\r\n        }\r\n        return true;\r\n      } catch (retryError) {\r\n        console.error(`❌ Failed to store ${key} even after cleanup:`, retryError);\r\n        return false;\r\n      }\r\n    } else {\r\n      console.error(`❌ Failed to store ${key}:`, error);\r\n      return false;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Safely get item from localStorage\r\n */\r\nexport const safeGetItem = (key: string): string | null => {\r\n  try {\r\n    return localStorage.getItem(key);\r\n  } catch (error) {\r\n    console.warn(`Failed to get localStorage item ${key}:`, error);\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n * Safely remove item from localStorage\r\n */\r\nexport const safeRemoveItem = (key: string): boolean => {\r\n  try {\r\n    localStorage.removeItem(key);\r\n    return true;\r\n  } catch (error) {\r\n    console.warn(`Failed to remove localStorage item ${key}:`, error);\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * Check if localStorage has enough space for a value\r\n */\r\nexport const hasStorageSpace = (estimatedSize: number): boolean => {\r\n  const quota = getStorageQuota();\r\n  return quota.available > estimatedSize * 2; // 2x buffer\r\n};\r\n\r\n/**\r\n * Log current storage usage (for debugging)\r\n */\r\nexport const logStorageUsage = (): void => {\r\n  const quota = getStorageQuota();\r\n  console.log('📊 localStorage Usage:', {\r\n    usedMB: (quota.used / (1024 * 1024)).toFixed(2),\r\n    totalMB: (quota.total / (1024 * 1024)).toFixed(2),\r\n    percentUsed: quota.percentUsed.toFixed(1) + '%',\r\n    availableMB: (quota.available / (1024 * 1024)).toFixed(2)\r\n  });\r\n};","import React from 'react';\r\nimport { FiTrendingUp, FiTarget, FiUsers, FiCheckCircle } from 'react-icons/fi';\r\nimport { colours } from '../../app/styles/colours';\r\n\r\ninterface EnquiryMetric {\r\n  title: string;\r\n  count?: number;\r\n  prevCount?: number;\r\n  percentage?: number;\r\n  prevPercentage?: number;\r\n  isPercentage?: boolean;\r\n  showTrend?: boolean;\r\n}\r\n\r\ninterface EnquiryMetricsV2Props {\r\n  metrics: EnquiryMetric[];\r\n  isDarkMode: boolean;\r\n  /** Optional header actions rendered on the right side of the header (e.g., a toggle) */\r\n  headerActions?: React.ReactNode;\r\n  /** Optional title override; defaults to 'Enquiry & Conversion Metrics' */\r\n  title?: string;\r\n}\r\n\r\nconst EnquiryMetricsV2: React.FC<EnquiryMetricsV2Props> = ({ metrics, isDarkMode, headerActions, title }) => {\r\n  const [mounted, setMounted] = React.useState(false);\r\n  // One-time animation per browser session\r\n  const [enableAnimationThisMount] = React.useState<boolean>(() => {\r\n    try { return sessionStorage.getItem('emv2_animated') !== 'true'; } catch { return true; }\r\n  });\r\n  React.useEffect(() => {\r\n    if (enableAnimationThisMount) {\r\n      setMounted(false);\r\n      const t = setTimeout(() => {\r\n        setMounted(true);\r\n        try { sessionStorage.setItem('emv2_animated', 'true'); } catch {}\r\n      }, 0);\r\n      return () => clearTimeout(t);\r\n    }\r\n    setMounted(true);\r\n  }, [enableAnimationThisMount]);\r\n\r\n  // Count-up animation for primary numbers\r\n  const useCountUp = (target: number, durationMs: number = 700): number => {\r\n    const [value, setValue] = React.useState(0);\r\n    React.useEffect(() => {\r\n      if (!Number.isFinite(target)) { setValue(0); return; }\r\n      const start = performance.now();\r\n      let raf = 0;\r\n      const tick = (now: number) => {\r\n        const t = Math.min(1, (now - start) / durationMs);\r\n        const eased = 1 - Math.pow(1 - t, 3);\r\n        setValue(target * eased);\r\n        if (t < 1) raf = requestAnimationFrame(tick);\r\n      };\r\n      setValue(0);\r\n      raf = requestAnimationFrame(tick);\r\n      return () => cancelAnimationFrame(raf);\r\n    }, [target, durationMs]);\r\n    return value;\r\n  };\r\n\r\n  const AnimatedValueWithEnabled: React.FC<{ value: number; formatter: (n: number) => string; enabled: boolean; style?: React.CSSProperties }>\r\n    = ({ value, formatter, enabled, style }) => {\r\n      const animated = useCountUp(enabled ? value : 0);\r\n      const toRender = enabled ? animated : value;\r\n      return <span style={style}>{formatter(toRender)}</span>;\r\n    };\r\n\r\n  const staggerStyle = (index: number): React.CSSProperties => ({\r\n    opacity: mounted ? 1 : 0,\r\n    transform: mounted ? 'translateY(0)' : 'translateY(6px)',\r\n    transition: 'opacity 300ms ease, transform 300ms ease',\r\n    transitionDelay: `${index * 80}ms`,\r\n  });\r\n  \r\n  const getTrendDirection = (current: number, previous: number): 'up' | 'down' | 'neutral' => {\r\n    if (current > previous) return 'up';\r\n    if (current < previous) return 'down';\r\n    return 'neutral';\r\n  };\r\n\r\n  const getTrendColor = (trend: 'up' | 'down' | 'neutral'): string => {\r\n    switch (trend) {\r\n      case 'up': return colours.green;\r\n      case 'down': return colours.cta;\r\n      default: return isDarkMode ? colours.dark.subText : colours.light.subText;\r\n    }\r\n  };\r\n\r\n  const getIcon = (metric: EnquiryMetric) => {\r\n    if (metric.title.toLowerCase().includes('enquir')) return FiUsers;\r\n    if (metric.title.toLowerCase().includes('matter')) return FiCheckCircle;\r\n    if (metric.title.toLowerCase().includes('conversion')) return FiTarget;\r\n    if (metric.title.toLowerCase().includes('response')) return FiTrendingUp;\r\n    if (metric.title.toLowerCase().includes('satisfaction')) return FiCheckCircle;\r\n    return FiTarget;\r\n  };\r\n\r\n  const getCurrentValue = (metric: EnquiryMetric): number => {\r\n    return metric.isPercentage ? (metric.percentage || 0) : (metric.count || 0);\r\n  };\r\n\r\n  const getPrevValue = (metric: EnquiryMetric): number => {\r\n    return metric.isPercentage ? (metric.prevPercentage || 0) : (metric.prevCount || 0);\r\n  };\r\n\r\n  const formatValue = (metric: EnquiryMetric): string => {\r\n    if (metric.isPercentage) {\r\n      return `${(metric.percentage || 0).toFixed(1)}%`;\r\n    }\r\n    return (metric.count || 0).toLocaleString();\r\n  };\r\n\r\n  const formatTrendValue = (current: number, previous: number, isPercentage: boolean): string => {\r\n    const diff = current - previous;\r\n    const sign = diff > 0 ? '+' : '';\r\n    if (isPercentage) {\r\n      return `${sign}${diff.toFixed(1)}%`;\r\n    }\r\n    return `${sign}${diff}`;\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      padding: '0 16px',\r\n      margin: '0',\r\n      position: 'relative',\r\n      background: 'transparent',\r\n      width: '100%',\r\n      boxSizing: 'border-box',\r\n    }}>\r\n      {/* Unified Enquiry Metrics Container */}\r\n      <div style={{\r\n        background: isDarkMode \r\n          ? 'linear-gradient(135deg, #0B1224 0%, #0F1B33 100%)'\r\n          : `linear-gradient(135deg, ${colours.light.cardBackground} 0%, rgba(54, 144, 206, 0.05) 100%)`,\r\n        borderRadius: '12px',\r\n        border: isDarkMode \r\n          ? `1px solid ${colours.dark.border}` \r\n          : `1px solid ${colours.light.border}`,\r\n        boxShadow: isDarkMode\r\n          ? '0 4px 6px rgba(0, 0, 0, 0.3)'\r\n          : '0 1px 3px rgba(0, 0, 0, 0.1)',\r\n        marginBottom: '20px',\r\n        width: '100%',\r\n        boxSizing: 'border-box',\r\n      }}>\r\n        {/* Header */}\r\n        <div style={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'space-between',\r\n          padding: '12px 16px',\r\n          borderBottom: isDarkMode \r\n            ? `1px solid ${colours.dark.border}` \r\n            : `1px solid ${colours.light.border}`,\r\n          marginBottom: '12px',\r\n        }}>\r\n          <h2 style={{\r\n            margin: 0,\r\n            fontSize: '18px',\r\n            fontWeight: 600,\r\n            color: isDarkMode ? colours.dark.text : colours.light.text,\r\n            letterSpacing: '-0.025em',\r\n          }}>\r\n            {title || 'Enquiry & Conversion Metrics'}\r\n          </h2>\r\n          {headerActions && (\r\n            <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>\r\n              {headerActions}\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        {/* Metrics Content */}\r\n        <div style={{\r\n          padding: '0 16px 16px 16px',\r\n        }}>\r\n          {/* First row - first 3 metrics */}\r\n          <div style={{\r\n            display: 'grid',\r\n            gridTemplateColumns: 'repeat(3, 1fr)',\r\n            gap: '16px',\r\n            marginBottom: metrics.length > 3 ? '16px' : '0',\r\n          }}>\r\n            {metrics.slice(0, 3).map((metric, index) => {\r\n              const Icon = getIcon(metric);\r\n              const currentValue = getCurrentValue(metric);\r\n              const prevValue = getPrevValue(metric);\r\n              const trend = getTrendDirection(currentValue, prevValue);\r\n              const trendColor = getTrendColor(trend);\r\n\r\n              return (\r\n                <div\r\n                  key={metric.title}\r\n                  style={{\r\n                    background: isDarkMode \r\n                      ? colours.dark.cardBackground\r\n                      : colours.light.cardBackground,\r\n                    borderRadius: '8px',\r\n                    padding: '20px',\r\n                    border: isDarkMode \r\n                      ? `1px solid ${colours.dark.border}`\r\n                      : `1px solid ${colours.light.border}`,\r\n                    boxShadow: isDarkMode\r\n                      ? '0 2px 4px rgba(0, 0, 0, 0.3)'\r\n                      : '0 1px 3px rgba(0, 0, 0, 0.1)',\r\n                    transition: 'all 0.2s ease',\r\n                    cursor: 'default',\r\n                    ...staggerStyle(index),\r\n                  }}\r\n                  onMouseEnter={(e) => {\r\n                    e.currentTarget.style.transform = 'translateY(-2px)';\r\n                    e.currentTarget.style.boxShadow = isDarkMode\r\n                      ? '0 8px 25px rgba(0, 0, 0, 0.4)'\r\n                      : '0 8px 25px rgba(0, 0, 0, 0.1)';\r\n                  }}\r\n                  onMouseLeave={(e) => {\r\n                    e.currentTarget.style.transform = 'translateY(0)';\r\n                    e.currentTarget.style.boxShadow = isDarkMode\r\n                      ? '0 2px 4px rgba(0, 0, 0, 0.3)'\r\n                      : '0 1px 3px rgba(0, 0, 0, 0.1)';\r\n                  }}\r\n                >\r\n                  {/* Header with icon and trend */}\r\n                  <div style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'space-between',\r\n                    marginBottom: '12px',\r\n                  }}>\r\n                    <div style={{\r\n                      width: '32px',\r\n                      height: '32px',\r\n                      borderRadius: '8px',\r\n                      background: isDarkMode\r\n                        ? 'linear-gradient(135deg, #1E293B 0%, #334155 100%)'\r\n                        : `linear-gradient(135deg, ${colours.highlight} 0%, rgba(54, 144, 206, 0.8) 100%)`,\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center',\r\n                      color: 'white',\r\n                    }}>\r\n                      <Icon size={14} />\r\n                    </div>\r\n                    {trend !== 'neutral' && (\r\n                      <div style={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        gap: '4px',\r\n                        color: trendColor,\r\n                        fontSize: '12px',\r\n                        fontWeight: 500,\r\n                      }}>\r\n                        <FiTrendingUp \r\n                          size={12} \r\n                          style={{ \r\n                            transform: trend === 'down' ? 'rotate(180deg)' : 'none' \r\n                          }} \r\n                        />\r\n                        <span>{formatTrendValue(currentValue, prevValue, metric.isPercentage || false)}</span>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <h3 style={{\r\n                    margin: '0 0 8px 0',\r\n                    fontSize: '13px',\r\n                    fontWeight: 500,\r\n                    color: isDarkMode ? '#9CA3AF' : '#6B7280',\r\n                    lineHeight: '1.2',\r\n                  }}>\r\n                    {metric.title}\r\n                  </h3>\r\n\r\n                  {/* Main value */}\r\n                  <div style={{\r\n                    fontSize: '24px',\r\n                    fontWeight: 700,\r\n                    color: isDarkMode ? '#F9FAFB' : '#111827',\r\n                    letterSpacing: '-0.025em',\r\n                    fontVariantNumeric: 'tabular-nums',\r\n                    marginBottom: '8px',\r\n                  }}>\r\n                    <AnimatedValueWithEnabled\r\n                      value={getCurrentValue(metric)}\r\n                      formatter={(n) => metric.isPercentage ? `${n.toFixed(1)}%` : Math.round(n).toLocaleString()}\r\n                      enabled={enableAnimationThisMount}\r\n                    />\r\n                  </div>\r\n\r\n                  {/* Progress indicator for percentages */}\r\n                  {metric.isPercentage && (\r\n                    <div style={{\r\n                      marginTop: '12px',\r\n                    }}>\r\n                      <div style={{\r\n                        width: '100%',\r\n                        height: '6px',\r\n                        background: isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)',\r\n                        borderRadius: '3px',\r\n                        overflow: 'hidden',\r\n                      }}>\r\n                        <div style={{\r\n                          width: `${Math.min((metric.percentage || 0), 100)}%`,\r\n                          height: '100%',\r\n                          background: (metric.percentage || 0) >= 80 \r\n                            ? `linear-gradient(90deg, ${colours.green} 0%, rgba(32, 178, 108, 0.8) 100%)`\r\n                            : `linear-gradient(90deg, ${colours.highlight} 0%, rgba(54, 144, 206, 0.8) 100%)`,\r\n                          borderRadius: '3px',\r\n                          transition: enableAnimationThisMount ? 'width 0.3s ease' : 'none',\r\n                        }} />\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          {/* Second row - remaining metrics if any */}\r\n          {metrics.length > 3 && (\r\n            <div style={{\r\n              display: 'grid',\r\n              gridTemplateColumns: 'repeat(2, 1fr)',\r\n              gap: '16px',\r\n            }}>\r\n              {metrics.slice(3).map((metric, index) => {\r\n                const Icon = getIcon(metric);\r\n                const currentValue = getCurrentValue(metric);\r\n                const prevValue = getPrevValue(metric);\r\n                const trend = getTrendDirection(currentValue, prevValue);\r\n                const trendColor = getTrendColor(trend);\r\n\r\n                return (\r\n                  <div\r\n                    key={metric.title}\r\n                    style={{\r\n                      background: isDarkMode \r\n                        ? colours.dark.cardBackground\r\n                        : colours.light.cardBackground,\r\n                      borderRadius: '8px',\r\n                      padding: '20px',\r\n                      border: isDarkMode \r\n                        ? `1px solid ${colours.dark.border}`\r\n                        : `1px solid ${colours.light.border}`,\r\n                      boxShadow: isDarkMode\r\n                        ? '0 2px 4px rgba(0, 0, 0, 0.3)'\r\n                        : '0 1px 3px rgba(0, 0, 0, 0.1)',\r\n                      transition: 'all 0.2s ease',\r\n                      cursor: 'default',\r\n                      ...staggerStyle(index + 3),\r\n                    }}\r\n                  >\r\n                    {/* Header with icon and trend */}\r\n                    <div style={{\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      justifyContent: 'space-between',\r\n                      marginBottom: '12px',\r\n                    }}>\r\n                      <div style={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        gap: '8px',\r\n                      }}>\r\n                        <Icon size={16} style={{\r\n                          color: isDarkMode ? colours.dark.iconColor : colours.light.iconColor,\r\n                        }} />\r\n                        <span style={{\r\n                          fontSize: '13px',\r\n                          fontWeight: 500,\r\n                          color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n                        }}>\r\n                          {metric.title}\r\n                        </span>\r\n                      </div>\r\n                      {trend !== 'neutral' && (\r\n                        <div style={{\r\n                          display: 'flex',\r\n                          alignItems: 'center',\r\n                          gap: '4px',\r\n                          fontSize: '11px',\r\n                          color: trendColor,\r\n                          fontWeight: 600,\r\n                        }}>\r\n                          {trend === 'up' && '↗'}\r\n                          {trend === 'down' && '↘'}\r\n\r\n                          <span>{formatTrendValue(currentValue, prevValue, metric.isPercentage || false)}</span>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n\r\n                    {/* Main value */}\r\n                    <div style={{\r\n                      fontSize: '24px',\r\n                      fontWeight: 700,\r\n                      color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                      fontVariantNumeric: 'tabular-nums',\r\n                      marginBottom: '8px',\r\n                    }}>\r\n                      <AnimatedValueWithEnabled\r\n                        value={getCurrentValue(metric)}\r\n                        formatter={(n) => metric.isPercentage ? `${n.toFixed(1)}%` : Math.round(n).toLocaleString()}\r\n                        enabled={enableAnimationThisMount}\r\n                      />\r\n                    </div>\r\n\r\n                    {/* Progress indicator for percentages */}\r\n                    {metric.isPercentage && (\r\n                      <div style={{\r\n                        marginTop: '12px',\r\n                      }}>\r\n                        <div style={{\r\n                          width: '100%',\r\n                          height: '6px',\r\n                          background: isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)',\r\n                          borderRadius: '3px',\r\n                          overflow: 'hidden',\r\n                        }}>\r\n                          <div style={{\r\n                            width: `${Math.min((metric.percentage || 0), 100)}%`,\r\n                            height: '100%',\r\n                            background: (metric.percentage || 0) >= 80 \r\n                              ? `linear-gradient(90deg, ${colours.green} 0%, rgba(32, 178, 108, 0.8) 100%)`\r\n                              : `linear-gradient(90deg, ${colours.highlight} 0%, rgba(54, 144, 206, 0.8) 100%)`,\r\n                            borderRadius: '3px',\r\n                            transition: enableAnimationThisMount ? 'width 0.3s ease' : 'none',\r\n                          }} />\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EnquiryMetricsV2;","import React from 'react';\r\nimport { FiClock, FiTrendingUp, FiTarget } from 'react-icons/fi';\r\nimport { FaMoneyBillWave } from 'react-icons/fa';\r\nimport { colours } from '../../app/styles/colours';\r\nimport EnquiryMetricsV2 from './EnquiryMetricsV2';\r\n\r\ninterface TimeMetric {\r\n  title: string;\r\n  isTimeMoney?: boolean;\r\n  isMoneyOnly?: boolean;\r\n  money?: number;\r\n  hours?: number;\r\n  prevMoney?: number;\r\n  prevHours?: number;\r\n  showDial?: boolean;\r\n  dialTarget?: number;\r\n  count?: number;\r\n  prevCount?: number;\r\n}\r\n\r\ninterface EnquiryMetric {\r\n  title: string;\r\n  count?: number;\r\n  prevCount?: number;\r\n  percentage?: number;\r\n  prevPercentage?: number;\r\n  isPercentage?: boolean;\r\n}\r\n\r\ninterface TimeMetricsV2Props {\r\n  metrics: TimeMetric[];\r\n  enquiryMetrics?: EnquiryMetric[];\r\n  isDarkMode: boolean;\r\n}\r\n\r\nconst TimeMetricsV2: React.FC<TimeMetricsV2Props> = ({ metrics, enquiryMetrics, isDarkMode }) => {\r\n  const [showEnquiryMetrics, setShowEnquiryMetrics] = React.useState(false);\r\n  const [mounted, setMounted] = React.useState(false);\r\n  const formatCurrency = (amount: number): string => {\r\n    return new Intl.NumberFormat('en-GB', {\r\n      style: 'currency',\r\n      currency: 'GBP',\r\n      minimumFractionDigits: 0,\r\n      maximumFractionDigits: 0,\r\n    }).format(amount);\r\n  };\r\n\r\n  const formatHours = (hours: number): string => {\r\n    return `${hours.toFixed(1)}h`;\r\n  };\r\n\r\n  const calculateProgress = (metric: TimeMetric): number => {\r\n    if (metric.showDial && metric.dialTarget) {\r\n      const current = metric.isTimeMoney ? (metric.hours || 0) : (metric.count || 0);\r\n      return Math.min((current / metric.dialTarget) * 100, 100);\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  const getTrendDirection = (current: number, previous: number): 'up' | 'down' | 'neutral' => {\r\n    if (current > previous) return 'up';\r\n    if (current < previous) return 'down';\r\n    return 'neutral';\r\n  };\r\n\r\n  const getTrendColor = (direction: 'up' | 'down' | 'neutral'): string => {\r\n    switch (direction) {\r\n      case 'up': return '#10B981'; // Green\r\n      case 'down': return '#EF4444'; // Red\r\n      default: return isDarkMode ? '#9CA3AF' : '#6B7280'; // Gray\r\n    }\r\n  };\r\n\r\n  const getIcon = (metric: TimeMetric | EnquiryMetric) => {\r\n    if (metric.title.toLowerCase().includes('outstanding')) return FaMoneyBillWave;\r\n    if (metric.title.toLowerCase().includes('fees')) return FaMoneyBillWave;\r\n    if (metric.title.toLowerCase().includes('time')) return FiClock;\r\n    if (metric.title.toLowerCase().includes('enquir')) return FiTarget;\r\n    if (metric.title.toLowerCase().includes('matter')) return FiTarget;\r\n    if (metric.title.toLowerCase().includes('conversion')) return FiTarget;\r\n    return FiTarget;\r\n  };\r\n\r\n  // Count-up animation hook\r\n  const useCountUp = (target: number, durationMs: number = 700, animateOnce: boolean = false): number => {\r\n    const [value, setValue] = React.useState(0);\r\n    const previousTargetRef = React.useRef(0);\r\n    const hasAnimatedRef = React.useRef(false);\r\n    const rafRef = React.useRef<number | null>(null);\r\n    const initialTargetRef = React.useRef<number | null>(null);\r\n\r\n    // One-time animation on initial mount\r\n    React.useEffect(() => {\r\n      if (!animateOnce || hasAnimatedRef.current) return;\r\n\r\n      const initial = Number.isFinite(target) ? target : 0;\r\n      initialTargetRef.current = initial;\r\n      hasAnimatedRef.current = true; // Mark as started so rapid updates won't restart animation\r\n\r\n      const startValue = previousTargetRef.current; // typically 0\r\n      const delta = initial - startValue;\r\n      const startTime = performance.now();\r\n\r\n      const tick = (now: number) => {\r\n        const progress = Math.min(1, (now - startTime) / durationMs);\r\n        const eased = 1 - Math.pow(1 - progress, 3);\r\n        setValue(startValue + delta * eased);\r\n        if (progress < 1) {\r\n          rafRef.current = requestAnimationFrame(tick);\r\n        } else {\r\n          previousTargetRef.current = initial;\r\n          rafRef.current = null;\r\n        }\r\n      };\r\n\r\n      setValue(startValue);\r\n      rafRef.current = requestAnimationFrame(tick);\r\n\r\n      return () => {\r\n        if (rafRef.current) cancelAnimationFrame(rafRef.current);\r\n      };\r\n      // Intentionally exclude `target` to avoid restarting during first animation\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [animateOnce, durationMs]);\r\n\r\n    // After first animation, apply new targets instantly without animation\r\n    React.useEffect(() => {\r\n      if (!animateOnce) return; // handled by the non-animateOnce effect below\r\n      if (!hasAnimatedRef.current) return; // initial animation path handles its own value\r\n      const next = Number.isFinite(target) ? target : 0;\r\n      previousTargetRef.current = next;\r\n      setValue(next);\r\n    }, [animateOnce, target]);\r\n\r\n    // Standard animated updates when not in animate-once mode\r\n    React.useEffect(() => {\r\n      if (animateOnce) return;\r\n      const next = Number.isFinite(target) ? target : 0;\r\n      const startValue = previousTargetRef.current;\r\n      const delta = next - startValue;\r\n      const startTime = performance.now();\r\n      let raf: number | null = null;\r\n\r\n      const tick = (now: number) => {\r\n        const progress = Math.min(1, (now - startTime) / durationMs);\r\n        const eased = 1 - Math.pow(1 - progress, 3);\r\n        setValue(startValue + delta * eased);\r\n        if (progress < 1) {\r\n          raf = requestAnimationFrame(tick);\r\n        } else {\r\n          previousTargetRef.current = next;\r\n          raf = null;\r\n        }\r\n      };\r\n\r\n      setValue(startValue);\r\n      raf = requestAnimationFrame(tick);\r\n\r\n      return () => {\r\n        if (raf) cancelAnimationFrame(raf);\r\n      };\r\n    }, [target, durationMs, animateOnce]);\r\n\r\n    return value;\r\n  };\r\n\r\n  const AnimatedValue: React.FC<{ value: number; formatter: (n: number) => string; className?: string; style?: React.CSSProperties }>\r\n    = ({ value, formatter, className, style }) => {\r\n      const animated = useCountUp(value);\r\n      return <span className={className} style={style}>{formatter(animated)}</span>;\r\n    };\r\n    const AnimatedValueWithEnabled: React.FC<{ value: number; formatter: (n: number) => string; enabled: boolean; className?: string; style?: React.CSSProperties }>\r\n      = ({ value, formatter, enabled, className, style }) => {\r\n        // When enabled, animate once per component instance, then apply new values instantly\r\n        const animated = useCountUp(enabled ? value : 0, 700, enabled);\r\n        const toRender = enabled ? animated : value;\r\n        return <span className={className} style={style}>{formatter(toRender)}</span>;\r\n      };\r\n\r\n  const getDisplaySpec = (metric: TimeMetric): { value: number; formatter: (n: number) => string } => {\r\n    if (metric.isMoneyOnly) {\r\n      return { value: metric.money || 0, formatter: (n) => formatCurrency(Math.round(n)) };\r\n    }\r\n    if (metric.isTimeMoney) {\r\n      return { value: metric.hours || 0, formatter: (n) => formatHours(n) };\r\n    }\r\n    return { value: metric.count || 0, formatter: (n) => Math.round(n).toString() };\r\n  };\r\n\r\n  // Type guards\r\n  const isTimeMetric = (metric: TimeMetric | EnquiryMetric): metric is TimeMetric => {\r\n    return 'isTimeMoney' in metric || 'isMoneyOnly' in metric || 'money' in metric || 'hours' in metric;\r\n  };\r\n\r\n  const isEnquiryMetric = (metric: TimeMetric | EnquiryMetric): metric is EnquiryMetric => {\r\n    return 'isPercentage' in metric || 'percentage' in metric;\r\n  };\r\n\r\n  // Determine which metrics to display\r\n  const currentMetrics = showEnquiryMetrics ? (enquiryMetrics || []) : metrics;\r\n  // Run entrance/count-up animations only once per session/tab refresh\r\n  const [enableAnimationThisMount] = React.useState<boolean>(() => {\r\n    try { return sessionStorage.getItem('tmv2_animated') !== 'true'; } catch { return true; }\r\n  });\r\n  \r\n  // Freeze stagger styles after first animation to prevent re-renders from twitching cards\r\n  const [frozenStaggerStyles] = React.useState<Map<number, React.CSSProperties>>(() => new Map());\r\n  \r\n  React.useEffect(() => {\r\n    if (enableAnimationThisMount) {\r\n      setMounted(false);\r\n      const t = setTimeout(() => {\r\n        setMounted(true);\r\n        try { sessionStorage.setItem('tmv2_animated', 'true'); } catch {}\r\n      }, 0);\r\n      return () => clearTimeout(t);\r\n    }\r\n    setMounted(true);\r\n  }, [enableAnimationThisMount]);\r\n\r\n  const staggerStyle = (index: number): React.CSSProperties => {\r\n    // If we've already computed this card's style, return the frozen version\r\n    if (frozenStaggerStyles.has(index)) {\r\n      return frozenStaggerStyles.get(index)!;\r\n    }\r\n    \r\n    // Compute style once, freeze it\r\n    const style: React.CSSProperties = enableAnimationThisMount \r\n      ? {\r\n          opacity: mounted ? 1 : 0,\r\n          transform: mounted ? 'translateY(0)' : 'translateY(6px)',\r\n          transition: 'opacity 300ms ease, transform 300ms ease',\r\n          transitionDelay: `${index * 80}ms`,\r\n        }\r\n      : {\r\n          opacity: 1,\r\n          transform: 'translateY(0)',\r\n          transition: 'none',\r\n        };\r\n    \r\n    // After the animation completes, update to a transition-free style to prevent twitching\r\n    if (enableAnimationThisMount && mounted) {\r\n      setTimeout(() => {\r\n        frozenStaggerStyles.set(index, {\r\n          opacity: 1,\r\n          transform: 'translateY(0)',\r\n          transition: 'none',\r\n        });\r\n      }, 300 + index * 80);\r\n    }\r\n    \r\n    return style;\r\n  };\r\n  \r\n\r\n  // Helper function to get current value\r\n  const getCurrentValue = (metric: TimeMetric | EnquiryMetric): number => {\r\n    if (isTimeMetric(metric)) {\r\n      return metric.isMoneyOnly ? (metric.money || 0) : \r\n             metric.isTimeMoney ? (metric.hours || 0) : (metric.count || 0);\r\n    } else {\r\n      return metric.isPercentage ? (metric.percentage || 0) : (metric.count || 0);\r\n    }\r\n  };\r\n\r\n  // Helper function to get previous value\r\n  const getPrevValue = (metric: TimeMetric | EnquiryMetric): number => {\r\n    if (isTimeMetric(metric)) {\r\n      return metric.isMoneyOnly ? (metric.prevMoney || 0) : \r\n             metric.isTimeMoney ? (metric.prevHours || 0) : (metric.prevCount || 0);\r\n    } else {\r\n      return metric.isPercentage ? (metric.prevPercentage || 0) : (metric.prevCount || 0);\r\n    }\r\n  };\r\n\r\n  // Helper function to format value display\r\n  const formatValue = (metric: TimeMetric | EnquiryMetric): string => {\r\n    if (isTimeMetric(metric)) {\r\n      return metric.isMoneyOnly ? formatCurrency(metric.money || 0) :\r\n             metric.isTimeMoney ? formatHours(metric.hours || 0) :\r\n             (metric.count || 0).toString();\r\n    } else {\r\n      return metric.isPercentage ? `${(metric.percentage || 0)}%` : (metric.count || 0).toString();\r\n    }\r\n  };\r\n\r\n  // If showing enquiry metrics, render the EnquiryMetricsV2 component instead\r\n  if (showEnquiryMetrics && enquiryMetrics) {\r\n    const headerActions = (\r\n      <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>\r\n        <span style={{\r\n          fontSize: '13px',\r\n          color: isDarkMode ? '#E5E7EB' : '#111827',\r\n          fontWeight: showEnquiryMetrics ? 400 : 700,\r\n        }}>\r\n          Time\r\n        </span>\r\n        <button\r\n          onClick={() => setShowEnquiryMetrics(!showEnquiryMetrics)}\r\n          style={{\r\n            width: '50px',\r\n            height: '26px',\r\n            borderRadius: '13px',\r\n            border: `1px solid ${isDarkMode ? '#374151' : '#CBD5E1'}`,\r\n            background: showEnquiryMetrics \r\n              ? colours.highlight\r\n              : (isDarkMode ? '#111827' : '#FFFFFF'),\r\n            position: 'relative',\r\n            cursor: 'pointer',\r\n            transition: 'all 0.2s ease',\r\n            boxShadow: isDarkMode ? 'inset 0 0 0 1px rgba(255,255,255,0.04)' : 'inset 0 0 0 1px rgba(0,0,0,0.02)'\r\n          }}\r\n          aria-label=\"Toggle Time/Enquiries\"\r\n        >\r\n          <div style={{\r\n            width: '22px',\r\n            height: '22px',\r\n            borderRadius: '50%',\r\n            background: isDarkMode ? '#E5E7EB' : '#FFFFFF',\r\n            border: `1px solid ${isDarkMode ? '#4B5563' : '#E5E7EB'}`,\r\n            position: 'absolute',\r\n            top: '1px',\r\n            left: showEnquiryMetrics ? '24px' : '2px',\r\n            transition: 'all 0.2s ease',\r\n            boxShadow: isDarkMode ? '0 4px 6px rgba(0, 0, 0, 0.3)' : '0 4px 6px rgba(0, 0, 0, 0.07)',\r\n          }} />\r\n        </button>\r\n        <span style={{\r\n          fontSize: '13px',\r\n          color: isDarkMode ? '#E5E7EB' : '#111827',\r\n          fontWeight: showEnquiryMetrics ? 700 : 400,\r\n        }}>\r\n          Conversion\r\n        </span>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div style={{ padding: '0', margin: '0', position: 'relative', background: 'transparent' }}>\r\n        <EnquiryMetricsV2 \r\n          metrics={enquiryMetrics} \r\n          isDarkMode={isDarkMode} \r\n          headerActions={headerActions}\r\n          title={'Conversion Metrics'}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{\r\n      padding: '0 16px',\r\n      margin: '0',\r\n      position: 'relative',\r\n      background: 'transparent',\r\n    }}>\r\n      {/* Unified Time Metrics Container with integrated header (match SectionCard visuals) */}\r\n      <div style={{\r\n        background: isDarkMode \r\n          ? 'linear-gradient(135deg, #0B1224 0%, #0F1B33 100%)'\r\n          : `linear-gradient(135deg, ${colours.light.cardBackground} 0%, rgba(54, 144, 206, 0.05) 100%)`,\r\n        borderRadius: '8px',\r\n        border: isDarkMode \r\n          ? `1px solid ${colours.dark.border}` \r\n          : `1px solid ${colours.light.border}`,\r\n        boxShadow: isDarkMode\r\n          ? '0 2px 8px rgba(0,0,0,0.15), 0 1px 2px rgba(0,0,0,0.08)'\r\n          : '0 2px 8px rgba(0,0,0,0.03), 0 1px 2px rgba(0,0,0,0.01)',\r\n        marginBottom: '20px',\r\n        width: '100%',\r\n        boxSizing: 'border-box',\r\n      }}>\r\n        {/* Header inside the container */}\r\n        <div style={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'space-between',\r\n          padding: '12px 16px',\r\n          borderBottom: isDarkMode \r\n            ? `1px solid ${colours.dark.border}` \r\n            : `1px solid ${colours.light.border}`,\r\n          marginBottom: '12px',\r\n        }}>\r\n          <h2 style={{\r\n            margin: 0,\r\n            fontSize: '18px',\r\n            fontWeight: 600,\r\n            color: isDarkMode ? colours.dark.text : colours.light.text,\r\n            letterSpacing: '-0.025em',\r\n          }}>\r\n            Time Metrics\r\n          </h2>\r\n          \r\n          {/* Toggle Switch */}\r\n          <div style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            gap: '12px',\r\n          }}>\r\n            <span style={{ fontSize: '13px', color: isDarkMode ? '#E5E7EB' : '#111827', fontWeight: showEnquiryMetrics ? 400 : 700 }}>Time</span>\r\n            <button\r\n              onClick={() => setShowEnquiryMetrics(!showEnquiryMetrics)}\r\n              style={{\r\n                width: '50px',\r\n                height: '26px',\r\n                borderRadius: '13px',\r\n                border: `1px solid ${isDarkMode ? '#374151' : '#CBD5E1'}`,\r\n                background: showEnquiryMetrics \r\n                  ? colours.highlight\r\n                  : (isDarkMode ? '#111827' : '#FFFFFF'),\r\n                position: 'relative',\r\n                cursor: 'pointer',\r\n                transition: 'all 0.2s ease',\r\n                boxShadow: isDarkMode ? 'inset 0 0 0 1px rgba(255,255,255,0.04)' : 'inset 0 0 0 1px rgba(0,0,0,0.02)'\r\n              }}\r\n              aria-label=\"Toggle Time/Enquiries\"\r\n            >\r\n              <div style={{\r\n                width: '22px',\r\n                height: '22px',\r\n                borderRadius: '50%',\r\n                background: isDarkMode ? '#E5E7EB' : '#FFFFFF',\r\n                border: `1px solid ${isDarkMode ? '#4B5563' : '#E5E7EB'}`,\r\n                position: 'absolute',\r\n                top: '1px',\r\n                left: showEnquiryMetrics ? '24px' : '2px',\r\n                transition: 'all 0.2s ease',\r\n                boxShadow: isDarkMode ? '0 4px 6px rgba(0, 0, 0, 0.3)' : '0 4px 6px rgba(0, 0, 0, 0.07)',\r\n              }} />\r\n            </button>\r\n            <span style={{ fontSize: '13px', color: isDarkMode ? '#E5E7EB' : '#111827', fontWeight: showEnquiryMetrics ? 700 : 400 }}>Conversion</span>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Metrics content with padding */}\r\n        <div style={{\r\n          padding: '0 16px 16px 16px',\r\n        }}>\r\n          {/* Match original metricsGridThree layout */}\r\n          <div className=\"metricsGridThree\" style={{\r\n            display: 'grid',\r\n            gridTemplateColumns: 'repeat(3, 1fr)',\r\n            gap: '16px',\r\n            marginBottom: currentMetrics.length > 3 ? '16px' : '0',\r\n          }}>\r\n            {/* First row - first 3 metrics */}\r\n            {currentMetrics.slice(0, 3).map((metric, index) => {\r\n          const Icon = getIcon(metric);\r\n          const currentValue = getCurrentValue(metric);\r\n          const prevValue = getPrevValue(metric);\r\n          const progress = isTimeMetric(metric) ? calculateProgress(metric) : 0;\r\n          const trend = getTrendDirection(currentValue, prevValue);\r\n          const trendColor = getTrendColor(trend);\r\n\r\n          return (\r\n            <div\r\n              key={metric.title}\r\n              style={{\r\n                background: isDarkMode \r\n                  ? colours.dark.cardBackground\r\n                  : colours.light.cardBackground,\r\n                borderRadius: '8px',\r\n                padding: '20px',\r\n                border: isDarkMode \r\n                  ? `1px solid ${colours.dark.border}`\r\n                  : `1px solid ${colours.light.border}`,\r\n                boxShadow: isDarkMode\r\n                  ? '0 2px 4px rgba(0, 0, 0, 0.3)'\r\n                  : '0 1px 3px rgba(0, 0, 0, 0.1)',\r\n                transition: 'all 0.2s ease',\r\n                cursor: 'default',\r\n                // Natural card styling that sits on the page background\r\n                ...staggerStyle(index),\r\n              }}\r\n              onMouseEnter={(e) => {\r\n                e.currentTarget.style.transform = 'translateY(-2px)';\r\n                e.currentTarget.style.boxShadow = isDarkMode\r\n                  ? '0 8px 25px rgba(0, 0, 0, 0.4)'\r\n                  : '0 8px 25px rgba(0, 0, 0, 0.1)';\r\n              }}\r\n              onMouseLeave={(e) => {\r\n                e.currentTarget.style.transform = 'translateY(0)';\r\n                e.currentTarget.style.boxShadow = 'none';\r\n              }}\r\n            >\r\n              <div style={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'space-between',\r\n                marginBottom: '12px',\r\n              }}>\r\n                <div style={{\r\n                  width: '28px',\r\n                  height: '28px',\r\n                  borderRadius: '6px',\r\n                  background: isDarkMode \r\n                    ? 'rgba(59, 130, 246, 0.1)'\r\n                    : 'rgba(59, 130, 246, 0.1)',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  color: '#3B82F6',\r\n                }}>\r\n                  <Icon size={14} />\r\n                </div>\r\n                {prevValue > 0 && (\r\n                  <div style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    gap: '4px',\r\n                    fontSize: '11px',\r\n                    fontWeight: 500,\r\n                  }}>\r\n                    <span style={{ color: isDarkMode ? '#9CA3AF' : '#6B7280' }}>\r\n                      Last:\r\n                    </span>\r\n                    <span style={{ color: trendColor, fontWeight: 600 }}>\r\n                      {isTimeMetric(metric) && metric.isMoneyOnly \r\n                        ? formatCurrency(prevValue)\r\n                        : isTimeMetric(metric) && metric.isTimeMoney\r\n                        ? formatHours(prevValue)\r\n                        : prevValue.toFixed(0)}\r\n                    </span>\r\n                    <FiTrendingUp \r\n                      size={12} \r\n                      style={{ \r\n                        transform: trend === 'down' ? 'rotate(180deg)' : 'none',\r\n                        color: trendColor,\r\n                      }} \r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <h3 style={{\r\n                margin: '0 0 8px 0',\r\n                fontSize: '13px',\r\n                fontWeight: 500,\r\n                color: isDarkMode ? '#9CA3AF' : '#6B7280',\r\n                lineHeight: '1.2',\r\n              }}>\r\n                {metric.title}\r\n              </h3>\r\n\r\n              <div style={{\r\n                display: 'flex',\r\n                alignItems: 'baseline',\r\n                gap: '8px',\r\n                marginBottom: (isTimeMetric(metric) && metric.showDial) ? '16px' : '0',\r\n              }}>\r\n                <AnimatedValueWithEnabled\r\n                  value={getDisplaySpec(metric).value}\r\n                  formatter={getDisplaySpec(metric).formatter}\r\n                  enabled={enableAnimationThisMount}\r\n                  style={{\r\n                    fontSize: '24px',\r\n                    fontWeight: 700,\r\n                    color: isDarkMode ? '#F9FAFB' : '#111827',\r\n                    letterSpacing: '-0.025em',\r\n                  }}\r\n                />\r\n                {isTimeMetric(metric) && metric.isTimeMoney && metric.money && (\r\n                  <AnimatedValueWithEnabled\r\n                    value={metric.money || 0}\r\n                    formatter={(n) => formatCurrency(Math.round(n))}\r\n                    enabled={enableAnimationThisMount}\r\n                    style={{\r\n                      fontSize: '14px',\r\n                      fontWeight: 500,\r\n                      color: isDarkMode ? '#10B981' : '#059669',\r\n                    }}\r\n                  />\r\n                )}\r\n              </div>\r\n\r\n              {isTimeMetric(metric) && metric.showDial && metric.dialTarget && (\r\n                <div style={{\r\n                  position: 'relative',\r\n                  marginTop: '12px',\r\n                }}>\r\n                  <div style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'center',\r\n                    marginBottom: '8px',\r\n                  }}>\r\n                    <span style={{\r\n                      fontSize: '11px',\r\n                      color: isDarkMode ? '#9CA3AF' : '#6B7280',\r\n                      fontWeight: 500,\r\n                    }}>\r\n                      Progress\r\n                    </span>\r\n                    <span style={{\r\n                      fontSize: '11px',\r\n                      color: isDarkMode ? '#9CA3AF' : '#6B7280',\r\n                      fontWeight: 500,\r\n                    }}>\r\n                      Target: {isTimeMetric(metric) ? metric.dialTarget : 0}\r\n                    </span>\r\n                  </div>\r\n                  <div style={{\r\n                    width: '100%',\r\n                    height: '6px',\r\n                    background: isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)',\r\n                    borderRadius: '3px',\r\n                    overflow: 'hidden',\r\n                  }}>\r\n                    <div style={{\r\n                      width: `${progress}%`,\r\n                      height: '100%',\r\n                      background: progress >= 100 \r\n                        ? `linear-gradient(90deg, ${colours.green} 0%, rgba(32, 178, 108, 0.8) 100%)`\r\n                        : `linear-gradient(90deg, ${colours.highlight} 0%, rgba(54, 144, 206, 0.8) 100%)`,\r\n                      borderRadius: '3px',\r\n                      transition: enableAnimationThisMount ? 'width 0.3s ease' : 'none',\r\n                    }} />\r\n                  </div>\r\n                  <div style={{\r\n                    marginTop: '4px',\r\n                    fontSize: '10px',\r\n                    color: isDarkMode ? '#6B7280' : '#9CA3AF',\r\n                    textAlign: 'right',\r\n                  }}>\r\n                    {progress.toFixed(0)}%\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          );\r\n          })}\r\n        </div>\r\n        \r\n        {/* Second row - remaining metrics if any */}\r\n        {currentMetrics.length > 3 && (\r\n          <div style={{\r\n            display: 'grid',\r\n            gridTemplateColumns: 'repeat(2, 1fr)',\r\n            gap: '16px',\r\n            marginTop: '16px',\r\n          }}>\r\n            {currentMetrics.slice(3).map((metric, index) => {\r\n              const Icon = getIcon(metric);\r\n              const currentValue = getCurrentValue(metric);\r\n              const prevValue = getPrevValue(metric);\r\n              const progress = isTimeMetric(metric) ? calculateProgress(metric) : 0;\r\n              const trend = getTrendDirection(currentValue, prevValue);\r\n              const trendColor = getTrendColor(trend);\r\n\r\n              return (\r\n                <div\r\n                  key={metric.title}\r\n                  style={{\r\n                    background: isDarkMode \r\n                      ? colours.dark.cardBackground\r\n                      : colours.light.cardBackground,\r\n                    borderRadius: '8px',\r\n                    padding: '20px',\r\n                    border: isDarkMode \r\n                      ? `1px solid ${colours.dark.border}`\r\n                      : `1px solid ${colours.light.border}`,\r\n                    boxShadow: isDarkMode\r\n                      ? '0 2px 4px rgba(0, 0, 0, 0.3)'\r\n                      : '0 1px 3px rgba(0, 0, 0, 0.1)',\r\n                    transition: 'all 0.2s ease',\r\n                    cursor: 'default',\r\n                    ...staggerStyle(index + 3),\r\n                  }}\r\n                >\r\n                  {/* Same card content structure */}\r\n                  <div style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'space-between',\r\n                    marginBottom: '12px',\r\n                  }}>\r\n                    <div style={{\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      gap: '8px',\r\n                    }}>\r\n                      <Icon size={16} style={{\r\n                        color: isDarkMode ? colours.dark.iconColor : colours.light.iconColor,\r\n                      }} />\r\n                      <span style={{\r\n                        fontSize: '13px',\r\n                        fontWeight: 500,\r\n                        color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n                      }}>\r\n                        {metric.title}\r\n                      </span>\r\n                    </div>\r\n                    {/* Only show trend indicator if prevValue exists and is greater than 0 */}\r\n                    {prevValue > 0 && (\r\n                      <div style={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        gap: '4px',\r\n                        fontSize: '11px',\r\n                        color: trendColor,\r\n                        fontWeight: 600,\r\n                      }}>\r\n                        {trend === 'up' && '↗'}\r\n                        {trend === 'down' && '↘'}\r\n                        {trend === 'neutral' && '→'}\r\n                        <span>\r\n                          {trend === 'up' && '+'}\r\n                          {Math.abs(((currentValue - prevValue) / prevValue) * 100).toFixed(0)}%\r\n                        </span>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div style={{\r\n                    fontSize: '24px',\r\n                    fontWeight: 700,\r\n                    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                    marginBottom: '8px',\r\n                  }}>\r\n                    <AnimatedValueWithEnabled\r\n                      value={getDisplaySpec(metric as TimeMetric).value}\r\n                      formatter={getDisplaySpec(metric as TimeMetric).formatter}\r\n                      enabled={enableAnimationThisMount}\r\n                    />\r\n                  </div>\r\n\r\n                  {/* Show previous month value for money-only metrics */}\r\n                  {isTimeMetric(metric) && metric.isMoneyOnly && prevValue > 0 && (\r\n                    <div style={{\r\n                      fontSize: '11px',\r\n                      fontWeight: 500,\r\n                      color: isDarkMode ? '#9CA3AF' : '#6B7280',\r\n                      marginBottom: '8px',\r\n                    }}>\r\n                      Last month: {formatCurrency(prevValue)}\r\n                    </div>\r\n                  )}\r\n\r\n                  {isTimeMetric(metric) && metric.isTimeMoney && metric.money && (\r\n                    <div style={{\r\n                      fontSize: '12px',\r\n                      color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n                      marginBottom: '12px',\r\n                    }}>\r\n                      <AnimatedValueWithEnabled\r\n                        value={metric.money || 0}\r\n                        formatter={(n) => `£${Math.round(n).toLocaleString()}`}\r\n                        enabled={enableAnimationThisMount}\r\n                      />\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* Progress bar */}\r\n                  {isTimeMetric(metric) && metric.showDial && (\r\n                    <div style={{\r\n                      marginTop: '12px',\r\n                    }}>\r\n                      <div style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        alignItems: 'center',\r\n                        marginBottom: '6px',\r\n                      }}>\r\n                        <span style={{\r\n                          fontSize: '11px',\r\n                          color: isDarkMode ? '#9CA3AF' : '#6B7280',\r\n                          fontWeight: 500,\r\n                        }}>\r\n                          Progress\r\n                        </span>\r\n                        <span style={{\r\n                          fontSize: '11px',\r\n                          color: isDarkMode ? '#9CA3AF' : '#6B7280',\r\n                          fontWeight: 500,\r\n                        }}>\r\n                          Target: {isTimeMetric(metric) ? metric.dialTarget : 0}\r\n                        </span>\r\n                      </div>\r\n                      <div style={{\r\n                        width: '100%',\r\n                        height: '6px',\r\n                        background: isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)',\r\n                        borderRadius: '3px',\r\n                        overflow: 'hidden',\r\n                      }}>\r\n                        <div style={{\r\n                          width: `${progress}%`,\r\n                          height: '100%',\r\n                          background: progress >= 100 \r\n                            ? `linear-gradient(90deg, ${colours.green} 0%, rgba(32, 178, 108, 0.8) 100%)`\r\n                            : `linear-gradient(90deg, ${colours.highlight} 0%, rgba(54, 144, 206, 0.8) 100%)`,\r\n                          borderRadius: '3px',\r\n                          transition: enableAnimationThisMount ? 'width 0.3s ease' : 'none',\r\n                        }} />\r\n                      </div>\r\n                      <div style={{\r\n                        marginTop: '4px',\r\n                        fontSize: '10px',\r\n                        color: isDarkMode ? '#6B7280' : '#9CA3AF',\r\n                        textAlign: 'right',\r\n                      }}>\r\n                        {progress.toFixed(0)}%\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n        </div> {/* Close metrics content padding */}\r\n      </div> {/* Close unified Time Metrics container */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimeMetricsV2;","import { useCallback, useEffect, useRef, useState } from 'react';\r\n\r\nexport type HomeMetricName = 'transactions' | 'futureBookings' | 'outstandingBalances' | 'poid6Years';\r\n\r\nexport interface HomeMetricEvent {\r\n  type: 'init' | 'metric-complete' | 'metric-error' | 'complete';\r\n  metric?: HomeMetricName;\r\n  status?: 'loading' | 'ready' | 'error';\r\n  data?: unknown;\r\n  cached?: boolean;\r\n  error?: string;\r\n  metrics?: { name: HomeMetricName; status: 'loading' }[];\r\n}\r\n\r\ninterface UseHomeMetricsStreamOptions {\r\n  autoStart?: boolean;\r\n  metrics?: HomeMetricName[];\r\n  bypassCache?: boolean;\r\n  onMetric?: (name: HomeMetricName, data: unknown, cached: boolean) => void;\r\n  onError?: (name: HomeMetricName | 'stream', error: string) => void;\r\n  onComplete?: () => void;\r\n}\r\n\r\nexport function useHomeMetricsStream(opts: UseHomeMetricsStreamOptions = {}) {\r\n  const { autoStart = true, metrics, bypassCache = false, onMetric, onError, onComplete } = opts;\r\n  const sourceRef = useRef<EventSource | null>(null);\r\n  const [isStreaming, setIsStreaming] = useState(false);\r\n  // Keep the latest callbacks in refs so start() doesn't change identity on each render\r\n  const onMetricRef = useRef<typeof onMetric>();\r\n  const onErrorRef = useRef<typeof onError>();\r\n  const onCompleteRef = useRef<typeof onComplete>();\r\n  const lastErrorAtRef = useRef<number>(0);\r\n\r\n  useEffect(() => { onMetricRef.current = onMetric; }, [onMetric]);\r\n  useEffect(() => { onErrorRef.current = onError; }, [onError]);\r\n  useEffect(() => { onCompleteRef.current = onComplete; }, [onComplete]);\r\n\r\n  const start = useCallback(() => {\r\n    if (sourceRef.current) return; // already started\r\n    const metricParam = (metrics && metrics.length ? metrics : undefined)?.join(',');\r\n    const params = new URLSearchParams();\r\n    if (metricParam) params.set('metrics', metricParam);\r\n    if (bypassCache) params.set('bypassCache', 'true');\r\n    const url = `/api/home-metrics/stream?${params.toString()}`;\r\n\r\n    const es = new EventSource(url);\r\n    sourceRef.current = es;\r\n    setIsStreaming(true);\r\n\r\n    es.onmessage = (evt) => {\r\n      try {\r\n        const parsed: HomeMetricEvent = JSON.parse(evt.data);\r\n        if (parsed.type === 'metric-complete' && parsed.metric) {\r\n          onMetricRef.current?.(parsed.metric as HomeMetricName, parsed.data, !!parsed.cached);\r\n        } else if (parsed.type === 'metric-error') {\r\n          onErrorRef.current?.(parsed.metric as HomeMetricName, parsed.error || 'unknown error');\r\n        } else if (parsed.type === 'complete') {\r\n          onCompleteRef.current?.();\r\n          // Allow the server to finish naturally; we'll close on unmount or explicit stop\r\n          stop();\r\n        }\r\n      } catch (e) {\r\n        // ignore parse errors\r\n      }\r\n    };\r\n\r\n    es.onerror = () => {\r\n      // Throttle error notifications to avoid log spam; let EventSource retry automatically\r\n      const now = Date.now();\r\n      if (now - lastErrorAtRef.current > 5000) {\r\n        lastErrorAtRef.current = now;\r\n        onErrorRef.current?.('stream', 'EventSource error');\r\n      }\r\n      // Do NOT call stop() here; keep the EventSource open so built-in retry/backoff applies\r\n    };\r\n  }, [bypassCache, Array.isArray(metrics) ? metrics.join(',') : '']);\r\n\r\n  const stop = useCallback(() => {\r\n    const es = sourceRef.current;\r\n    if (es) {\r\n      try { es.close(); } catch { /* ignore */ }\r\n      sourceRef.current = null;\r\n    }\r\n    setIsStreaming(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (autoStart) start();\r\n    return () => { stop(); };\r\n    // Intentionally exclude onMetric/onError/onComplete from deps to avoid restart loops\r\n  }, [autoStart, start, stop]);\r\n\r\n  return { start, stop, isStreaming };\r\n}\r\n\r\nexport default useHomeMetricsStream;\r\n","// src/tabs/resources/ResourceDetails.tsx\r\n// invisible change\r\n\r\nimport React, { useCallback, useState } from 'react';\r\nimport {\r\n  Stack,\r\n  Text,\r\n  Link,\r\n  TooltipHost,\r\n  PrimaryButton,\r\n  DefaultButton,\r\n  Icon,\r\n  MessageBar,\r\n  MessageBarType,\r\n  mergeStyles,\r\n} from '@fluentui/react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { colours } from '../../app/styles/colours';\r\nimport { Resource } from './Resources';\r\nimport { useTheme } from '../../app/functionality/ThemeContext';\r\nimport BespokeForm from '../../CustomForms/BespokeForms';\r\nimport { sharedPrimaryButtonStyles, sharedDefaultButtonStyles } from '../../app/styles/ButtonStyles';\r\n\r\n// Import the custom BespokePanel\r\nimport BespokePanel from '../../app/functionality/BespokePanel';\r\nimport '../../app/styles/ResourceDetails.css'; // Ensure this path is correct\r\n\r\n// Define the props for ResourceDetails component\r\ninterface ResourceDetailsProps {\r\n  resource: Resource;\r\n  onClose: () => void;\r\n}\r\n\r\n// Define button styles similar to FormDetails\r\nconst iconButtonStyles = (iconColor: string) => ({\r\n  root: {\r\n    marginBottom: '8px',\r\n    color: iconColor,\r\n    backgroundColor: 'transparent',\r\n    border: 'none',\r\n    selectors: {\r\n      ':hover': {\r\n        backgroundColor: colours.cta,\r\n        color: '#ffffff',\r\n      },\r\n      ':focus': {\r\n        backgroundColor: colours.cta,\r\n        color: '#ffffff',\r\n      },\r\n    },\r\n    height: '24px',\r\n    width: '24px',\r\n    padding: '0px',\r\n    boxShadow: 'none',\r\n  },\r\n  icon: {\r\n    fontSize: '16px',\r\n    lineHeight: '20px',\r\n    color: iconColor,\r\n  },\r\n});\r\n\r\n// Define style functions using mergeStyles\r\nconst detailsContainerStyle = (isDarkMode: boolean) =>\r\n  mergeStyles({\r\n    padding: '20px',\r\n    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n    fontFamily: 'Raleway, sans-serif',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: '10px',\r\n  });\r\n\r\nconst buttonsContainerStyle = (isDarkMode: boolean) =>\r\n  mergeStyles({\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  });\r\n\r\nconst leftButtonsStyle = () =>\r\n  mergeStyles({\r\n    display: 'flex',\r\n    gap: '20px', // Increased spacing between buttons\r\n  });\r\n\r\n// Define button styles for action buttons\r\nconst actionButtonStyle = (isDarkMode: boolean, isSelected: boolean) =>\r\n  mergeStyles({\r\n    padding: '10px 20px',\r\n    backgroundColor: isSelected\r\n      ? isDarkMode\r\n        ? colours.dark.buttonBackground\r\n        : colours.light.buttonBackground\r\n      : isDarkMode\r\n      ? colours.dark.cardBackground\r\n      : colours.light.cardBackground,\r\n    border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n    borderRadius: '8px',\r\n    color: isSelected\r\n      ? isDarkMode\r\n        ? colours.dark.buttonText\r\n        : colours.light.buttonText\r\n      : isDarkMode\r\n      ? colours.dark.text\r\n      : colours.light.text,\r\n    transition: 'background-color 0.3s ease, color 0.3s ease',\r\n    cursor: 'pointer',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    height: '50px', // Adjusted height\r\n    ':hover': {\r\n      backgroundColor: isSelected\r\n        ? isDarkMode\r\n          ? colours.dark.hoverBackground\r\n          : colours.light.hoverBackground\r\n        : isDarkMode\r\n        ? colours.dark.cardHover\r\n        : colours.light.cardHover,\r\n    },\r\n  });\r\n\r\n// Define style for the form container\r\nconst formContainerStyle = mergeStyles({\r\n  marginTop: '10px', // Reduced margin to align closely under the button\r\n  padding: '20px',\r\n  backgroundColor: colours.grey, // Subtle grey background\r\n  borderRadius: '12px',\r\n  // No shadow as per requirement\r\n});\r\n\r\nconst ResourceDetails: React.FC<ResourceDetailsProps> = ({ resource, onClose }) => {\r\n  const { isDarkMode } = useTheme();\r\n  const [copySuccess, setCopySuccess] = useState<string | null>(null);\r\n  const [selectedAction, setSelectedAction] = useState<ResourceAction | null>(null);\r\n  const [actionInputs, setActionInputs] = useState<{ [key: string]: string }>({});\r\n\r\n  // Define the type for ResourceAction if not already defined\r\n  // Assuming ResourceAction has at least 'label' and 'requiredFields'\r\n  interface ResourceAction {\r\n    label: string;\r\n    requiredFields: string[];\r\n  }\r\n\r\n  // Example resourceActions mapping, adjust as per your actual implementation\r\n  const resourceActions: { [key: string]: ResourceAction[] } = {\r\n    // Add your resource-specific actions here\r\n    // Example:\r\n    // 'asana': [{ label: 'Create Task', requiredFields: ['taskName', 'dueDate'] }],\r\n  };\r\n\r\n  // Normalize the resource title to match the keys in resourceActions\r\n  const normalizedTitle = resource.title.toLowerCase().replace(/\\s+/g, '');\r\n  const actions: ResourceAction[] = resourceActions[normalizedTitle] || [];\r\n\r\n  // Handle Copy to Clipboard\r\n  const copyToClipboard = useCallback(() => {\r\n    navigator.clipboard\r\n      .writeText(resource.url)\r\n      .then(() => {\r\n        setCopySuccess(`Copied '${resource.title}' URL to clipboard!`);\r\n        setTimeout(() => setCopySuccess(null), 3000);\r\n      })\r\n      .catch((err) => {\r\n        console.error('Failed to copy: ', err);\r\n      });\r\n  }, [resource.url, resource.title]);\r\n\r\n  // Handle Go To Link\r\n  const goToLink = useCallback(() => {\r\n    window.open(resource.url, '_blank', 'noopener,noreferrer');\r\n  }, [resource.url]);\r\n\r\n  // Handle input changes for action forms\r\n  const handleInputChange = (\r\n    e: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    field: string\r\n  ): void => {\r\n    const value = e.currentTarget.value;\r\n    setActionInputs((prev) => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  // Handle action form submission\r\n  const handleActionSubmit = (action: ResourceAction) => {\r\n    const inputs = actionInputs;\r\n    // Replace the alert with actual API calls using the input values\r\n    console.log(`Executing action: ${action.label}`, inputs);\r\n    alert(`Executing action: ${action.label}\\nInputs: ${JSON.stringify(inputs)}`);\r\n    // Reset the form after submission\r\n    setSelectedAction(null);\r\n    setActionInputs({});\r\n  };\r\n\r\n  return (\r\n    <BespokePanel\r\n      isOpen={true}\r\n      onClose={onClose}\r\n      title={resource.title}\r\n      width=\"2000px\" // Match the width used in Forms\r\n    >\r\n      {/* Main container with flex layout */}\r\n      <div style={{ display: 'flex', flexDirection: 'column', height: '100%' }}>\r\n        {/* Form Content */}\r\n        <div style={{ flexGrow: 1, overflowY: 'auto', padding: '20px' }}>\r\n          {actions.length > 0 ? (\r\n            <Stack tokens={{ childrenGap: 20 }} className={mergeStyles({ width: '100%' })}>\r\n              {actions.map((action) => (\r\n                <div key={action.label} className=\"action-item\">\r\n                  <PrimaryButton\r\n                    text={action.label}\r\n                    onClick={() =>\r\n                      setSelectedAction(selectedAction === action ? null : action)\r\n                    }\r\n                    styles={{\r\n                      root: actionButtonStyle(isDarkMode, selectedAction === action),\r\n                      label: {\r\n                        color: isDarkMode\r\n                          ? selectedAction === action\r\n                            ? colours.dark.buttonText\r\n                            : colours.dark.text\r\n                          : selectedAction === action\r\n                          ? colours.light.buttonText\r\n                          : colours.light.text,\r\n                        fontWeight: '600',\r\n                      },\r\n                    }}\r\n                    ariaLabel={`Select action: ${action.label}`}\r\n                  />\r\n                  <CSSTransition\r\n                    in={selectedAction === action}\r\n                    timeout={300}\r\n                    classNames=\"intake-form\"\r\n                    unmountOnExit\r\n                  >\r\n                    <div className={formContainerStyle}>\r\n                      <BespokeForm\r\n                        fields={action.requiredFields.map((field) => ({\r\n                          label: field.charAt(0).toUpperCase() + field.slice(1),\r\n                          name: field,\r\n                          type: 'text', // Adjust type if required\r\n                          placeholder: `Enter ${field}`,\r\n                          required: true,\r\n                        }))}\r\n                        onSubmit={(values) => {\r\n                          console.log(`Action Submitted: ${action.label}`, values);\r\n                          handleActionSubmit(action);\r\n                        }}\r\n                        onCancel={() => {\r\n                          setSelectedAction(null);\r\n                          setActionInputs({});\r\n                        }}\r\n                        matters={[]}  // Pass an empty array for matters\r\n                      />\r\n                    </div>\r\n                  </CSSTransition>\r\n                </div>\r\n              ))}\r\n            </Stack>\r\n          ) : (\r\n            <Text>No actions available for this resource.</Text>\r\n          )}\r\n        </div>\r\n\r\n        {/* Footer: URL and Buttons */}\r\n        <div className={detailsContainerStyle(isDarkMode)}>\r\n          {/* URL Section */}\r\n          <Stack tokens={{ childrenGap: 6 }}>\r\n            <Text variant=\"mediumPlus\" styles={{ root: { fontWeight: '600' } }}>\r\n              URL:\r\n            </Text>\r\n            <Link href={resource.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              {resource.url}\r\n            </Link>\r\n          </Stack>\r\n\r\n          {/* Tags */}\r\n          {resource.tags && resource.tags.length > 0 && (\r\n            <Stack tokens={{ childrenGap: 6 }} styles={{ root: { marginTop: '20px' } }}>\r\n              <Text variant=\"mediumPlus\" styles={{ root: { fontWeight: '600' } }}>\r\n                Tags:\r\n              </Text>\r\n              <Stack horizontal tokens={{ childrenGap: 10 }} wrap>\r\n                {resource.tags.map((tag) => (\r\n                  <TooltipHost content={tag} key={tag}>\r\n                    <span\r\n                      className={mergeStyles({\r\n                        backgroundColor: isDarkMode\r\n                          ? colours.dark.sectionBackground\r\n                          : colours.light.sectionBackground,\r\n                        color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                        borderRadius: '12px',\r\n                        padding: '6px 12px',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        gap: '6px',\r\n                      })}\r\n                    >\r\n                      <Icon iconName=\"Tag\" />\r\n                      <Text variant=\"small\">{tag}</Text>\r\n                    </span>\r\n                  </TooltipHost>\r\n                ))}\r\n              </Stack>\r\n            </Stack>\r\n          )}\r\n\r\n          {/* Description */}\r\n          {resource.description && (\r\n            <Stack tokens={{ childrenGap: 6 }} styles={{ root: { marginTop: '20px' } }}>\r\n              <Text variant=\"mediumPlus\" styles={{ root: { fontWeight: '600' } }}>\r\n                Description:\r\n              </Text>\r\n              <Text>{resource.description}</Text>\r\n            </Stack>\r\n          )}\r\n\r\n          {/* Buttons */}\r\n          <div className={buttonsContainerStyle(isDarkMode)}>\r\n            <div className={leftButtonsStyle()}>\r\n              <PrimaryButton\r\n                text=\"Copy\"\r\n                onClick={copyToClipboard}\r\n                styles={sharedPrimaryButtonStyles}\r\n                ariaLabel=\"Copy URL to clipboard\"\r\n                iconProps={{ iconName: 'Copy' }}\r\n              />\r\n              <PrimaryButton\r\n                text=\"Go To\"\r\n                onClick={goToLink}\r\n                styles={sharedPrimaryButtonStyles}\r\n                ariaLabel=\"Go to URL\"\r\n                iconProps={{ iconName: 'NavigateExternalInline' }}\r\n              />\r\n            </div>\r\n            <DefaultButton\r\n              text=\"Close\"\r\n              onClick={onClose}\r\n              styles={sharedDefaultButtonStyles}\r\n              ariaLabel=\"Close Details\"\r\n              iconProps={{ iconName: 'Cancel' }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Copy Confirmation Message */}\r\n      {copySuccess && (\r\n        <MessageBar\r\n          messageBarType={MessageBarType.success}\r\n          isMultiline={false}\r\n          onDismiss={() => setCopySuccess(null)}\r\n          dismissButtonAriaLabel=\"Close\"\r\n          styles={{\r\n            root: {\r\n              position: 'fixed',\r\n              bottom: 20,\r\n              right: 20,\r\n              maxWidth: '300px',\r\n              zIndex: 1000,\r\n              borderRadius: '8px',\r\n              backgroundColor: colours.green,\r\n              color: 'white',\r\n            },\r\n          }}\r\n        >\r\n          {copySuccess}\r\n        </MessageBar>\r\n      )}\r\n    </BespokePanel>\r\n  );\r\n};\r\n\r\nexport default ResourceDetails;\r\n","// src/services/gitHistoryService.ts\r\n// Service for fetching and formatting git commit history data\r\n\r\nexport interface GitCommit {\r\n  hash: string;\r\n  message: string;\r\n  author: string;\r\n  date: string;\r\n  timestamp: number;\r\n  filesChanged: number;\r\n  insertions: number;\r\n  deletions: number;\r\n}\r\n\r\nexport interface GitHistoryResponse {\r\n  commits: GitCommit[];\r\n  totalCommits: number;\r\n  lastUpdated: string;\r\n}\r\n\r\n/**\r\n * Fetches recent git commit history from the Express server\r\n * @param limit Number of commits to fetch (default: 10)\r\n * @returns Promise<GitHistoryResponse>\r\n */\r\nexport const fetchGitHistory = async (limit: number = 10): Promise<GitHistoryResponse> => {\r\n  try {\r\n    const response = await fetch(`/api/git/history?limit=${limit}`);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`Failed to fetch git history: ${response.status} ${response.statusText}`);\r\n    }\r\n    \r\n    const data: GitHistoryResponse = await response.json();\r\n    \r\n    // Format dates and ensure data integrity\r\n    const formattedCommits = data.commits.map(commit => ({\r\n      ...commit,\r\n      timestamp: new Date(commit.date).getTime(),\r\n      // Ensure numeric values are numbers\r\n      filesChanged: Number(commit.filesChanged) || 0,\r\n      insertions: Number(commit.insertions) || 0,\r\n      deletions: Number(commit.deletions) || 0\r\n    }));\r\n    \r\n    return {\r\n      ...data,\r\n      commits: formattedCommits,\r\n      lastUpdated: new Date().toISOString()\r\n    };\r\n  } catch (error) {\r\n    // Log to console for front end debugging\r\n    console.error('[FRONTEND-ERROR] Error fetching git history:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Formats a commit message for display\r\n * Truncates long messages and capitalizes first letter\r\n */\r\nexport const formatCommitMessage = (message: string, maxLength: number = 80): string => {\r\n  if (!message) return 'No commit message';\r\n  \r\n  // Clean up common prefixes\r\n  let cleaned = message\r\n    .replace(/^(feat|fix|docs|style|refactor|test|chore)(\\([^)]*\\))?:\\s*/i, '')\r\n    .trim();\r\n  \r\n  // Capitalize first letter\r\n  cleaned = cleaned.charAt(0).toUpperCase() + cleaned.slice(1);\r\n  \r\n  // Truncate if too long\r\n  if (cleaned.length > maxLength) {\r\n    cleaned = cleaned.substring(0, maxLength - 3) + '...';\r\n  }\r\n  \r\n  return cleaned;\r\n};\r\n\r\n/**\r\n * Gets a relative time string for a commit date\r\n */\r\nexport const getRelativeTime = (timestamp: number): string => {\r\n  const now = Date.now();\r\n  const diff = now - timestamp;\r\n  \r\n  const minutes = Math.floor(diff / (1000 * 60));\r\n  const hours = Math.floor(diff / (1000 * 60 * 60));\r\n  const days = Math.floor(diff / (1000 * 60 * 60 * 24));\r\n  const weeks = Math.floor(days / 7);\r\n  const months = Math.floor(days / 30);\r\n  \r\n  if (minutes < 1) return 'Just now';\r\n  if (minutes < 60) return `${minutes}m ago`;\r\n  if (hours < 24) return `${hours}h ago`;\r\n  if (days < 7) return `${days}d ago`;\r\n  if (weeks < 4) return `${weeks}w ago`;\r\n  if (months < 12) return `${months}mo ago`;\r\n  \r\n  return new Date(timestamp).toLocaleDateString();\r\n};\r\n\r\n/**\r\n * Gets initials from author name for avatar display\r\n */\r\nexport const getAuthorInitials = (author: string): string => {\r\n  if (!author) return '??';\r\n  \r\n  // Remove email if present\r\n  const name = author.replace(/<[^>]*>/g, '').trim();\r\n  \r\n  const parts = name.split(' ').filter(part => part.length > 0);\r\n  if (parts.length === 0) return '??';\r\n  if (parts.length === 1) return parts[0].substring(0, 2).toUpperCase();\r\n  \r\n  return (parts[0][0] + parts[parts.length - 1][0]).toUpperCase();\r\n};\r\n\r\n/**\r\n * Determines the color for change statistics based on the type and amount\r\n */\r\nexport const getChangeColor = (insertions: number, deletions: number): string => {\r\n  const total = insertions + deletions;\r\n  if (total === 0) return '#666666';\r\n  \r\n  const ratio = insertions / (insertions + deletions);\r\n  \r\n  if (ratio > 0.7) return '#28a745'; // Mostly additions - green\r\n  if (ratio < 0.3) return '#dc3545'; // Mostly deletions - red\r\n  return '#ffc107'; // Mixed changes - yellow/orange\r\n};","// src/tabs/home/RecentWorkFeed.tsx\r\n// Component to display recent git commits as a work activity feed\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  Stack,\r\n  Text,\r\n  mergeStyles,\r\n  Icon,\r\n  Persona,\r\n  PersonaSize,\r\n  MessageBar,\r\n  MessageBarType,\r\n  Shimmer,\r\n  ShimmerElementType,\r\n  Separator,\r\n  TooltipHost\r\n} from '@fluentui/react';\r\nimport { useTheme } from '../../app/functionality/ThemeContext';\r\nimport { colours } from '../../app/styles/colours';\r\nimport {\r\n  fetchGitHistory,\r\n  formatCommitMessage,\r\n  getRelativeTime,\r\n  getAuthorInitials,\r\n  getChangeColor,\r\n  GitCommit,\r\n  GitHistoryResponse\r\n} from '../../services/gitHistoryService';\r\n\r\ninterface RecentWorkFeedProps {\r\n  maxItems?: number;\r\n  showHeader?: boolean;\r\n  compact?: boolean;\r\n}\r\n\r\nconst RecentWorkFeed: React.FC<RecentWorkFeedProps> = ({\r\n  maxItems = 10,\r\n  showHeader = true,\r\n  compact = false\r\n}) => {\r\n  const { isDarkMode } = useTheme();\r\n  const [commits, setCommits] = useState<GitCommit[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [lastUpdated, setLastUpdated] = useState<string>('');\r\n\r\n  // Load git history on component mount\r\n  useEffect(() => {\r\n    loadGitHistory();\r\n  }, [maxItems]);\r\n\r\n  const loadGitHistory = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const data: GitHistoryResponse = await fetchGitHistory(maxItems);\r\n      setCommits(data.commits);\r\n      setLastUpdated(data.lastUpdated);\r\n    } catch (err) {\r\n      console.error('Failed to load git history:', err);\r\n      setError(err instanceof Error ? err.message : 'Failed to load recent work');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Styles\r\n  const cardStyle = mergeStyles({\r\n    backgroundColor: isDarkMode ? colours.dark.cardBackground : colours.light.cardBackground,\r\n    border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n    borderRadius: '8px',\r\n    padding: compact ? '12px' : '16px',\r\n    marginBottom: '16px',\r\n    boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\r\n    '&:hover': {\r\n      boxShadow: '0 4px 8px rgba(0,0,0,0.15)',\r\n      transform: 'translateY(-1px)',\r\n      transition: 'all 0.2s ease-in-out'\r\n    }\r\n  });\r\n\r\n  const headerStyle = mergeStyles({\r\n    marginBottom: '16px'\r\n  });\r\n\r\n  const commitItemStyle = mergeStyles({\r\n    padding: compact ? '8px 0' : '12px 0',\r\n    borderBottom: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n    '&:last-child': {\r\n      borderBottom: 'none'\r\n    },\r\n    '&:hover': {\r\n      backgroundColor: isDarkMode ? colours.dark.cardHover : colours.light.cardHover,\r\n      margin: compact ? '0 -8px' : '0 -12px',\r\n      padding: compact ? '8px 8px' : '12px 12px',\r\n      borderRadius: '4px',\r\n      transition: 'all 0.15s ease-in-out'\r\n    }\r\n  });\r\n\r\n  const commitHashStyle = mergeStyles({\r\n    fontFamily: 'Monaco, Consolas, \"Lucida Console\", monospace',\r\n    fontSize: '11px',\r\n    color: isDarkMode ? colours.greyText : colours.greyText,\r\n    backgroundColor: isDarkMode ? colours.dark.cardHover : colours.light.cardHover,\r\n    padding: '2px 6px',\r\n    borderRadius: '3px',\r\n    border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n    marginRight: '8px'\r\n  });\r\n\r\n  const statsStyle = mergeStyles({\r\n    fontSize: '11px',\r\n    color: isDarkMode ? colours.greyText : colours.greyText,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    gap: '8px'\r\n  });\r\n\r\n  const refreshButtonStyle = mergeStyles({\r\n    cursor: 'pointer',\r\n    color: isDarkMode ? colours.blue : colours.blue,\r\n    '&:hover': {\r\n      color: isDarkMode ? colours.highlight : colours.highlight\r\n    }\r\n  });\r\n\r\n  // Loading shimmer\r\n  const renderLoadingShimmer = () => (\r\n    <Stack tokens={{ childrenGap: 12 }}>\r\n      {Array.from({ length: 5 }).map((_, index) => (\r\n        <Stack key={index} tokens={{ childrenGap: 8 }}>\r\n          <Stack horizontal tokens={{ childrenGap: 12 }} verticalAlign=\"center\">\r\n            <Shimmer \r\n              shimmerElements={[{ type: ShimmerElementType.circle, height: 32 }]} \r\n              width=\"32px\" \r\n            />\r\n            <Stack tokens={{ childrenGap: 4 }} styles={{ root: { flex: 1 } }}>\r\n              <Shimmer \r\n                shimmerElements={[{ type: ShimmerElementType.line, height: 14 }]} \r\n                width=\"70%\" \r\n              />\r\n              <Shimmer \r\n                shimmerElements={[{ type: ShimmerElementType.line, height: 12 }]} \r\n                width=\"40%\" \r\n              />\r\n            </Stack>\r\n          </Stack>\r\n          {index < 4 && <Separator />}\r\n        </Stack>\r\n      ))}\r\n    </Stack>\r\n  );\r\n\r\n  // Render individual commit\r\n  const renderCommit = (commit: GitCommit, index: number) => {\r\n    const changeColor = getChangeColor(commit.insertions, commit.deletions);\r\n    const totalChanges = commit.insertions + commit.deletions;\r\n    \r\n    return (\r\n      <div key={commit.hash} className={commitItemStyle}>\r\n        <Stack horizontal tokens={{ childrenGap: 12 }} verticalAlign=\"start\">\r\n          {/* Author Avatar */}\r\n          <Persona\r\n            size={PersonaSize.size32}\r\n            text={commit.author}\r\n            initialsTextColor=\"white\"\r\n            hidePersonaDetails\r\n          />\r\n          \r\n          {/* Commit Details */}\r\n          <Stack tokens={{ childrenGap: 4 }} styles={{ root: { flex: 1 } }}>\r\n            <Stack horizontal tokens={{ childrenGap: 8 }} verticalAlign=\"center\">\r\n              <Text \r\n                variant=\"small\" \r\n                styles={{ \r\n                  root: { \r\n                    fontWeight: 500,\r\n                    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                    lineHeight: '1.4',\r\n                    flex: 1\r\n                  } \r\n                }}\r\n              >\r\n                {formatCommitMessage(commit.message)}\r\n              </Text>\r\n              <Text \r\n                variant=\"tiny\" \r\n                styles={{ \r\n                  root: { \r\n                    color: isDarkMode ? colours.greyText : colours.greyText,\r\n                    whiteSpace: 'nowrap'\r\n                  } \r\n                }}\r\n              >\r\n                {getRelativeTime(commit.timestamp)}\r\n              </Text>\r\n            </Stack>\r\n            \r\n            <Stack horizontal tokens={{ childrenGap: 8 }} verticalAlign=\"center\">\r\n              <span className={commitHashStyle}>\r\n                {commit.hash.substring(0, 7)}\r\n              </span>\r\n              \r\n              {!compact && (\r\n                <div className={statsStyle}>\r\n                  <TooltipHost content={`${commit.insertions} additions, ${commit.deletions} deletions`}>\r\n                    <Stack horizontal tokens={{ childrenGap: 4 }} verticalAlign=\"center\">\r\n                      <Icon \r\n                        iconName=\"FileCode\" \r\n                        styles={{ root: { fontSize: '10px' } }} \r\n                      />\r\n                      <Text variant=\"tiny\">{commit.filesChanged}</Text>\r\n                      \r\n                      {totalChanges > 0 && (\r\n                        <>\r\n                          <div \r\n                            style={{\r\n                              width: '8px',\r\n                              height: '8px',\r\n                              borderRadius: '50%',\r\n                              backgroundColor: changeColor,\r\n                              marginLeft: '4px'\r\n                            }}\r\n                          />\r\n                          <Text variant=\"tiny\">+{commit.insertions}/-{commit.deletions}</Text>\r\n                        </>\r\n                      )}\r\n                    </Stack>\r\n                  </TooltipHost>\r\n                </div>\r\n              )}\r\n            </Stack>\r\n            \r\n            <Text \r\n              variant=\"tiny\" \r\n              styles={{ \r\n                root: { \r\n                  color: isDarkMode ? colours.greyText : colours.greyText \r\n                } \r\n              }}\r\n            >\r\n              by {commit.author.replace(/<[^>]*>/g, '').trim()}\r\n            </Text>\r\n          </Stack>\r\n        </Stack>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={cardStyle}>\r\n      {showHeader && (\r\n        <div className={headerStyle}>\r\n          <Stack horizontal tokens={{ childrenGap: 8 }} verticalAlign=\"center\">\r\n            <Icon \r\n              iconName=\"RecentActivities\" \r\n              styles={{ \r\n                root: { \r\n                  fontSize: '16px',\r\n                  color: isDarkMode ? colours.blue : colours.blue \r\n                } \r\n              }} \r\n            />\r\n            <Text \r\n              variant=\"mediumPlus\" \r\n              styles={{ \r\n                root: { \r\n                  fontWeight: 600,\r\n                  color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                  flex: 1\r\n                } \r\n              }}\r\n            >\r\n              Recent Work Completed\r\n            </Text>\r\n            {!loading && (\r\n              <TooltipHost content=\"Refresh\">\r\n                <Icon \r\n                  iconName=\"Refresh\" \r\n                  className={refreshButtonStyle}\r\n                  onClick={loadGitHistory}\r\n                  styles={{ root: { fontSize: '14px' } }}\r\n                />\r\n              </TooltipHost>\r\n            )}\r\n          </Stack>\r\n          \r\n          {lastUpdated && !loading && (\r\n            <Text \r\n              variant=\"tiny\" \r\n              styles={{ \r\n                root: { \r\n                  color: isDarkMode ? colours.greyText : colours.greyText,\r\n                  marginTop: '4px'\r\n                } \r\n              }}\r\n            >\r\n              Last updated: {new Date(lastUpdated).toLocaleTimeString()}\r\n            </Text>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Error State */}\r\n      {error && (\r\n        <MessageBar \r\n          messageBarType={MessageBarType.error}\r\n          onDismiss={() => setError(null)}\r\n          actions={\r\n            <button onClick={loadGitHistory} style={{ background: 'none', border: 'none', color: 'inherit', cursor: 'pointer' }}>\r\n              Retry\r\n            </button>\r\n          }\r\n        >\r\n          {error}\r\n        </MessageBar>\r\n      )}\r\n\r\n      {/* Loading State */}\r\n      {loading && renderLoadingShimmer()}\r\n\r\n      {/* Content State */}\r\n      {!loading && !error && (\r\n        <Stack tokens={{ childrenGap: 0 }}>\r\n          {commits.length === 0 ? (\r\n            <Stack horizontalAlign=\"center\" tokens={{ childrenGap: 12 }} styles={{ root: { padding: '24px' } }}>\r\n              <Icon \r\n                iconName=\"GitGraph\" \r\n                styles={{ \r\n                  root: { \r\n                    fontSize: '32px',\r\n                    color: isDarkMode ? colours.greyText : colours.greyText \r\n                  } \r\n                }} \r\n              />\r\n              <Text \r\n                variant=\"medium\" \r\n                styles={{ \r\n                  root: { \r\n                    color: isDarkMode ? colours.greyText : colours.greyText,\r\n                    textAlign: 'center'\r\n                  } \r\n                }}\r\n              >\r\n                No recent commits found\r\n              </Text>\r\n            </Stack>\r\n          ) : (\r\n            commits.map(renderCommit)\r\n          )}\r\n        </Stack>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecentWorkFeed;","// src/services/teamIssuesService.ts\r\n// Service for loading team issues data from local JSON or API endpoint\r\nimport localIssuesData from '../localData/localIssues.json';\r\n\r\nexport interface TeamIssue {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  status: 'new' | 'in-progress' | 'blocked' | 'resolved';\r\n  priority: 'low' | 'medium' | 'high';\r\n  reporter: string;\r\n  createdAt: string;\r\n  tags: string[];\r\n  resolvedAt?: string;\r\n}\r\n\r\nexport interface TeamIssuesResponse {\r\n  issues: TeamIssue[];\r\n  metadata: {\r\n    totalIssues: number;\r\n    lastUpdated: string;\r\n    statusCounts: {\r\n      new: number;\r\n      'in-progress': number;\r\n      blocked: number;\r\n      resolved: number;\r\n    };\r\n    priorityCounts: {\r\n      high: number;\r\n      medium: number;\r\n      low: number;\r\n    };\r\n  };\r\n}\r\n\r\n/**\r\n * Fetches team issues data from API or local JSON\r\n */\r\nexport const fetchTeamIssues = async (): Promise<TeamIssuesResponse> => {\r\n  const useLocalData = process.env.REACT_APP_USE_LOCAL_DATA === 'true';\r\n  \r\n  if (useLocalData) {\r\n    // Load from local JSON file using static import\r\n    try {\r\n      return localIssuesData as TeamIssuesResponse;\r\n    } catch (error) {\r\n      console.error('Error loading local issues data:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Try to fetch from API endpoint\r\n  try {\r\n    const response = await fetch('/api/team-issues');\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`Failed to fetch team issues: ${response.status}`);\r\n    }\r\n    \r\n    const data: TeamIssuesResponse = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    // Log to console for front end debugging\r\n    console.error('[FRONTEND-ERROR] Error fetching team issues from API:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\n\r\n/**\r\n * Gets the display color for issue priority\r\n */\r\nexport const getPriorityColor = (priority: TeamIssue['priority']): string => {\r\n  switch (priority) {\r\n    case 'high': return '#dc3545'; // Red\r\n    case 'medium': return '#ffc107'; // Yellow/Orange\r\n    case 'low': return '#28a745'; // Green\r\n    default: return '#6c757d'; // Gray\r\n  }\r\n};\r\n\r\n/**\r\n * Gets the display color for issue status\r\n */\r\nexport const getStatusColor = (status: TeamIssue['status']): string => {\r\n  switch (status) {\r\n    case 'new': return '#007bff'; // Blue\r\n    case 'in-progress': return '#17a2b8'; // Teal\r\n    case 'blocked': return '#dc3545'; // Red\r\n    case 'resolved': return '#28a745'; // Green\r\n    default: return '#6c757d'; // Gray\r\n  }\r\n};\r\n\r\n/**\r\n * Formats status text for display\r\n */\r\nexport const formatStatusText = (status: TeamIssue['status']): string => {\r\n  switch (status) {\r\n    case 'new': return 'New';\r\n    case 'in-progress': return 'In Progress';\r\n    case 'blocked': return 'Blocked';\r\n    case 'resolved': return 'Resolved';\r\n    default: return status;\r\n  }\r\n};\r\n\r\n/**\r\n * Gets relative time string for issue dates\r\n */\r\nexport const getRelativeTime = (dateString: string): string => {\r\n  const date = new Date(dateString);\r\n  const now = new Date();\r\n  const diffMs = now.getTime() - date.getTime();\r\n  \r\n  const minutes = Math.floor(diffMs / (1000 * 60));\r\n  const hours = Math.floor(diffMs / (1000 * 60 * 60));\r\n  const days = Math.floor(diffMs / (1000 * 60 * 60 * 24));\r\n  \r\n  if (minutes < 1) return 'Just now';\r\n  if (minutes < 60) return `${minutes}m ago`;\r\n  if (hours < 24) return `${hours}h ago`;\r\n  if (days < 7) return `${days}d ago`;\r\n  \r\n  return date.toLocaleDateString();\r\n};\r\n\r\n/**\r\n * Gets initials from name for avatar display\r\n */\r\nexport const getInitials = (name: string | null): string => {\r\n  if (!name) return '??';\r\n  \r\n  const parts = name.split(' ').filter(part => part.length > 0);\r\n  if (parts.length === 0) return '??';\r\n  if (parts.length === 1) return parts[0].substring(0, 2).toUpperCase();\r\n  \r\n  return (parts[0][0] + parts[parts.length - 1][0]).toUpperCase();\r\n};","// src/tabs/home/TeamIssuesBoard.tsx\r\n// Lightweight issues board for tracking team blockers and work ownership\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  Stack,\r\n  Text,\r\n  mergeStyles,\r\n  Icon,\r\n  Persona,\r\n  PersonaSize,\r\n  MessageBar,\r\n  MessageBarType,\r\n  Shimmer,\r\n  ShimmerElementType,\r\n  TooltipHost,\r\n  DefaultButton,\r\n  IconButton,\r\n  Panel,\r\n  PanelType,\r\n  TextField,\r\n  Dropdown,\r\n  IDropdownOption,\r\n  PrimaryButton,\r\n  ActionButton\r\n} from '@fluentui/react';\r\nimport { useTheme } from '../../app/functionality/ThemeContext';\r\nimport { colours } from '../../app/styles/colours';\r\nimport {\r\n  fetchTeamIssues,\r\n  TeamIssue,\r\n  TeamIssuesResponse,\r\n  getPriorityColor,\r\n  getStatusColor,\r\n  formatStatusText,\r\n  getRelativeTime,\r\n  getInitials\r\n} from '../../services/teamIssuesService';\r\n\r\ninterface TeamIssuesBoardProps {\r\n  showHeader?: boolean;\r\n  compact?: boolean;\r\n  maxItemsPerColumn?: number;\r\n}\r\n\r\nconst TeamIssuesBoard: React.FC<TeamIssuesBoardProps> = ({\r\n  showHeader = true,\r\n  compact = false,\r\n  maxItemsPerColumn = 4\r\n}) => {\r\n  const { isDarkMode } = useTheme();\r\n  const [issuesData, setIssuesData] = useState<TeamIssuesResponse | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [lastUpdated, setLastUpdated] = useState<string>('');\r\n  const [expandedColumns, setExpandedColumns] = useState<Set<string>>(new Set());\r\n  const [showNewIssuePanel, setShowNewIssuePanel] = useState(false);\r\n  const [newIssueForm, setNewIssueForm] = useState({\r\n    title: '',\r\n    description: '',\r\n    priority: 'medium' as TeamIssue['priority'],\r\n    reporter: '',\r\n    tags: ''\r\n  });\r\n\r\n  // Load issues data on component mount\r\n  useEffect(() => {\r\n    loadIssues();\r\n  }, []);\r\n\r\n  const loadIssues = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const data = await fetchTeamIssues();\r\n      setIssuesData(data);\r\n      setLastUpdated(data.metadata.lastUpdated);\r\n    } catch (err) {\r\n      console.error('Failed to load team issues:', err);\r\n      setError(err instanceof Error ? err.message : 'Failed to load team issues');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Toggle column expansion\r\n  const toggleColumnExpansion = (columnKey: string) => {\r\n    setExpandedColumns(prev => {\r\n      const newSet = new Set(prev);\r\n      if (newSet.has(columnKey)) {\r\n        newSet.delete(columnKey);\r\n      } else {\r\n        newSet.add(columnKey);\r\n      }\r\n      return newSet;\r\n    });\r\n  };\r\n\r\n  // Handle new issue form\r\n  const handleNewIssueSubmit = () => {\r\n    if (!newIssueForm.title.trim() || !newIssueForm.description.trim() || !newIssueForm.reporter.trim()) {\r\n      setError('Please fill in all required fields (Title, Description, Reporter)');\r\n      return;\r\n    }\r\n\r\n    // Generate a new issue ID\r\n    const newId = `ISSUE-${String(Date.now()).slice(-3).padStart(3, '0')}`;\r\n    \r\n    // Create new issue object\r\n    const newIssue: TeamIssue = {\r\n      id: newId,\r\n      title: newIssueForm.title.trim(),\r\n      description: newIssueForm.description.trim(),\r\n      status: 'new',\r\n      priority: newIssueForm.priority,\r\n      reporter: newIssueForm.reporter.trim(),\r\n      createdAt: new Date().toISOString(),\r\n      tags: newIssueForm.tags.split(',').map(tag => tag.trim()).filter(tag => tag.length > 0)\r\n    };\r\n\r\n    // Add to current issues data\r\n    if (issuesData) {\r\n      const updatedIssues = [...issuesData.issues, newIssue];\r\n      const updatedData: TeamIssuesResponse = {\r\n        ...issuesData,\r\n        issues: updatedIssues,\r\n        metadata: {\r\n          ...issuesData.metadata,\r\n          totalIssues: updatedIssues.length,\r\n          lastUpdated: new Date().toISOString(),\r\n          statusCounts: {\r\n            ...issuesData.metadata.statusCounts,\r\n            new: issuesData.metadata.statusCounts.new + 1\r\n          },\r\n          priorityCounts: {\r\n            ...issuesData.metadata.priorityCounts,\r\n            [newIssueForm.priority]: issuesData.metadata.priorityCounts[newIssueForm.priority] + 1\r\n          }\r\n        }\r\n      };\r\n      setIssuesData(updatedData);\r\n      setLastUpdated(updatedData.metadata.lastUpdated);\r\n    }\r\n\r\n    // Reset form and close panel\r\n    setNewIssueForm({\r\n      title: '',\r\n      description: '',\r\n      priority: 'medium',\r\n      reporter: '',\r\n      tags: ''\r\n    });\r\n    setShowNewIssuePanel(false);\r\n    setError(null);\r\n  };\r\n\r\n  const handleCancelNewIssue = () => {\r\n    setNewIssueForm({\r\n      title: '',\r\n      description: '',\r\n      priority: 'medium',\r\n      reporter: '',\r\n      tags: ''\r\n    });\r\n    setShowNewIssuePanel(false);\r\n    setError(null);\r\n  };\r\n\r\n  // Group issues by status\r\n  const groupedIssues = React.useMemo(() => {\r\n    if (!issuesData) return { new: [], 'in-progress': [], blocked: [], resolved: [] };\r\n    \r\n    return issuesData.issues.reduce((groups, issue) => {\r\n      if (!groups[issue.status]) groups[issue.status] = [];\r\n      groups[issue.status].push(issue);\r\n      return groups;\r\n    }, {\r\n      new: [],\r\n      'in-progress': [],\r\n      blocked: [],\r\n      resolved: []\r\n    } as Record<TeamIssue['status'], TeamIssue[]>);\r\n  }, [issuesData]);\r\n\r\n  // Styles\r\n  const boardStyle = mergeStyles({\r\n    backgroundColor: isDarkMode ? colours.dark.cardBackground : colours.light.cardBackground,\r\n    border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n    borderRadius: '8px',\r\n    padding: compact ? '12px' : '16px',\r\n    marginBottom: '16px',\r\n    boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\r\n  });\r\n\r\n  const headerStyle = mergeStyles({\r\n    marginBottom: '16px'\r\n  });\r\n\r\n  const columnsContainerStyle = mergeStyles({\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(auto-fit, minmax(240px, 1fr))',\r\n    gap: '16px',\r\n    '@media (max-width: 768px)': {\r\n      gridTemplateColumns: '1fr',\r\n      gap: '12px'\r\n    }\r\n  });\r\n\r\n  const columnStyle = mergeStyles({\r\n    backgroundColor: isDarkMode ? colours.dark.hoverBackground : colours.light.cardHover,\r\n    borderRadius: '6px',\r\n    padding: '12px',\r\n    minHeight: '200px'\r\n  });\r\n\r\n  const columnHeaderStyle = mergeStyles({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    marginBottom: '12px',\r\n    paddingBottom: '8px',\r\n    borderBottom: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`\r\n  });\r\n\r\n  const issueCardStyle = mergeStyles({\r\n    backgroundColor: isDarkMode ? colours.dark.cardBackground : colours.light.cardBackground,\r\n    border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n    borderRadius: '4px',\r\n    padding: '8px',\r\n    marginBottom: '8px',\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      boxShadow: '0 2px 8px rgba(0,0,0,0.15)',\r\n      transform: 'translateY(-1px)',\r\n      transition: 'all 0.2s ease-in-out'\r\n    }\r\n  });\r\n\r\n  const priorityDotStyle = (priority: TeamIssue['priority']) => mergeStyles({\r\n    width: '8px',\r\n    height: '8px',\r\n    borderRadius: '50%',\r\n    backgroundColor: getPriorityColor(priority),\r\n    marginRight: '6px'\r\n  });\r\n\r\n  const tagStyle = mergeStyles({\r\n    backgroundColor: isDarkMode ? colours.dark.border : colours.light.border,\r\n    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n    fontSize: '10px',\r\n    padding: '2px 6px',\r\n    borderRadius: '10px',\r\n    marginRight: '4px',\r\n    marginBottom: '2px'\r\n  });\r\n\r\n  const refreshButtonStyle = mergeStyles({\r\n    cursor: 'pointer',\r\n    color: isDarkMode ? colours.blue : colours.blue,\r\n    '&:hover': {\r\n      color: isDarkMode ? colours.highlight : colours.highlight\r\n    }\r\n  });\r\n\r\n  // Priority options for dropdown\r\n  const priorityOptions: IDropdownOption[] = [\r\n    { key: 'low', text: 'Low Priority' },\r\n    { key: 'medium', text: 'Medium Priority' },\r\n    { key: 'high', text: 'High Priority' }\r\n  ];\r\n\r\n  // Column configurations\r\n  const columns = [\r\n    { key: 'new' as const, title: 'New', icon: 'StatusCircleInner', color: '#007bff' },\r\n    { key: 'in-progress' as const, title: 'In Progress', icon: 'Processing', color: '#17a2b8' },\r\n    { key: 'blocked' as const, title: 'Blocked', icon: 'Blocked', color: '#dc3545' },\r\n    { key: 'resolved' as const, title: 'Resolved', icon: 'Completed', color: '#28a745' }\r\n  ];\r\n\r\n  // Loading shimmer\r\n  const renderLoadingShimmer = () => (\r\n    <div className={columnsContainerStyle}>\r\n      {columns.map((column) => (\r\n        <div key={column.key} className={columnStyle}>\r\n          <Stack tokens={{ childrenGap: 8 }}>\r\n            <Shimmer shimmerElements={[{ type: ShimmerElementType.line, height: 20 }]} width=\"60%\" />\r\n            {Array.from({ length: 3 }).map((_, index) => (\r\n              <div key={index} style={{ \r\n                backgroundColor: isDarkMode ? colours.dark.cardBackground : colours.light.cardBackground,\r\n                borderRadius: '4px',\r\n                padding: '8px'\r\n              }}>\r\n                <Shimmer shimmerElements={[{ type: ShimmerElementType.line, height: 14 }]} width=\"80%\" />\r\n                <Shimmer shimmerElements={[{ type: ShimmerElementType.line, height: 12 }]} width=\"60%\" />\r\n              </div>\r\n            ))}\r\n          </Stack>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  // Render individual issue card\r\n  const renderIssueCard = (issue: TeamIssue) => (\r\n    <TooltipHost\r\n      key={issue.id}\r\n      content={\r\n        <Stack tokens={{ childrenGap: 4 }}>\r\n          <Text variant=\"small\" styles={{ root: { fontWeight: 600 } }}>{issue.title}</Text>\r\n          <Text variant=\"tiny\">{issue.description}</Text>\r\n          <Text variant=\"tiny\">Reporter: {issue.reporter}</Text>\r\n          <Text variant=\"tiny\">Created: {getRelativeTime(issue.createdAt)}</Text>\r\n          {issue.tags.length > 0 && (\r\n            <Text variant=\"tiny\">Tags: {issue.tags.join(', ')}</Text>\r\n          )}\r\n        </Stack>\r\n      }\r\n    >\r\n      <div className={issueCardStyle}>\r\n        <Stack tokens={{ childrenGap: 4 }}>\r\n          {/* Title and Priority */}\r\n          <Stack horizontal tokens={{ childrenGap: 4 }} verticalAlign=\"center\">\r\n            <div className={priorityDotStyle(issue.priority)} />\r\n            <Text \r\n              variant=\"small\" \r\n              styles={{ \r\n                root: { \r\n                  fontWeight: 500,\r\n                  flex: 1,\r\n                  color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                  lineHeight: '1.3'\r\n                } \r\n              }}\r\n            >\r\n              {issue.title}\r\n            </Text>\r\n          </Stack>\r\n\r\n          {/* Issue ID and Reporter */}\r\n          <Stack horizontal tokens={{ childrenGap: 8 }} verticalAlign=\"center\">\r\n            <Text \r\n              variant=\"tiny\" \r\n              styles={{ \r\n                root: { \r\n                  color: isDarkMode ? colours.greyText : colours.greyText,\r\n                  fontFamily: 'Monaco, Consolas, monospace'\r\n                } \r\n              }}\r\n            >\r\n              {issue.id}\r\n            </Text>\r\n            \r\n            <Text \r\n              variant=\"tiny\" \r\n              styles={{ \r\n                root: { \r\n                  color: isDarkMode ? colours.greyText : colours.greyText \r\n                } \r\n              }}\r\n            >\r\n              by {issue.reporter}\r\n            </Text>\r\n          </Stack>\r\n\r\n          {/* Tags */}\r\n          {issue.tags.length > 0 && (\r\n            <Stack horizontal wrap tokens={{ childrenGap: 2 }}>\r\n              {issue.tags.slice(0, 2).map((tag) => (\r\n                <span key={tag} className={tagStyle}>\r\n                  {tag}\r\n                </span>\r\n              ))}\r\n              {issue.tags.length > 2 && (\r\n                <Text variant=\"tiny\" styles={{ root: { color: isDarkMode ? colours.greyText : colours.greyText } }}>\r\n                  +{issue.tags.length - 2} more\r\n                </Text>\r\n              )}\r\n            </Stack>\r\n          )}\r\n\r\n          {/* Created time */}\r\n          <Text \r\n            variant=\"tiny\" \r\n            styles={{ \r\n              root: { \r\n                color: isDarkMode ? colours.greyText : colours.greyText,\r\n                alignSelf: 'flex-end'\r\n              } \r\n            }}\r\n          >\r\n            {getRelativeTime(issue.createdAt)}\r\n          </Text>\r\n        </Stack>\r\n      </div>\r\n    </TooltipHost>\r\n  );\r\n\r\n  // Render column\r\n  const renderColumn = (column: { key: TeamIssue['status']; title: string; icon: string; color: string }) => {\r\n    const issues = groupedIssues[column.key] || [];\r\n    const isExpanded = expandedColumns.has(column.key);\r\n    const displayIssues = isExpanded ? issues : issues.slice(0, maxItemsPerColumn);\r\n    const hasMore = !isExpanded && issues.length > maxItemsPerColumn;\r\n\r\n    return (\r\n      <div key={column.key} className={columnStyle}>\r\n        <div className={columnHeaderStyle}>\r\n          <Stack horizontal tokens={{ childrenGap: 6 }} verticalAlign=\"center\">\r\n            <Icon \r\n              iconName={column.icon} \r\n              styles={{ \r\n                root: { \r\n                  fontSize: '14px',\r\n                  color: column.color\r\n                } \r\n              }} \r\n            />\r\n            <Text \r\n              variant=\"medium\" \r\n              styles={{ \r\n                root: { \r\n                  fontWeight: 600,\r\n                  color: isDarkMode ? colours.dark.text : colours.light.text\r\n                } \r\n              }}\r\n            >\r\n              {column.title}\r\n            </Text>\r\n            {column.key === 'new' && (\r\n              <TooltipHost content=\"Add new issue\">\r\n                <IconButton\r\n                  iconProps={{ iconName: 'Add' }}\r\n                  onClick={() => setShowNewIssuePanel(true)}\r\n                  styles={{\r\n                    root: {\r\n                      color: isDarkMode ? colours.blue : colours.blue,\r\n                      fontSize: '12px',\r\n                      width: '20px',\r\n                      height: '20px',\r\n                      '&:hover': {\r\n                        color: isDarkMode ? colours.highlight : colours.highlight,\r\n                        backgroundColor: isDarkMode ? colours.dark.hoverBackground : colours.light.cardHover\r\n                      }\r\n                    }\r\n                  }}\r\n                />\r\n              </TooltipHost>\r\n            )}\r\n          </Stack>\r\n          \r\n          <Text \r\n            variant=\"small\" \r\n            styles={{ \r\n              root: { \r\n                backgroundColor: column.color,\r\n                color: 'white',\r\n                padding: '2px 6px',\r\n                borderRadius: '10px',\r\n                fontSize: '11px',\r\n                fontWeight: 600\r\n              } \r\n            }}\r\n          >\r\n            {issues.length}\r\n          </Text>\r\n        </div>\r\n\r\n        <Stack tokens={{ childrenGap: 0 }}>\r\n          {displayIssues.map(renderIssueCard)}\r\n          \r\n          {hasMore && (\r\n            <Text \r\n              variant=\"tiny\" \r\n              styles={{ \r\n                root: { \r\n                  color: isDarkMode ? colours.blue : colours.blue,\r\n                  textAlign: 'center',\r\n                  padding: '8px',\r\n                  fontStyle: 'italic',\r\n                  cursor: 'pointer',\r\n                  '&:hover': {\r\n                    color: isDarkMode ? colours.highlight : colours.highlight,\r\n                    textDecoration: 'underline'\r\n                  }\r\n                } \r\n              }}\r\n              onClick={() => toggleColumnExpansion(column.key)}\r\n            >\r\n              +{issues.length - maxItemsPerColumn} more\r\n            </Text>\r\n          )}\r\n          \r\n          {isExpanded && issues.length > maxItemsPerColumn && (\r\n            <Text \r\n              variant=\"tiny\" \r\n              styles={{ \r\n                root: { \r\n                  color: isDarkMode ? colours.blue : colours.blue,\r\n                  textAlign: 'center',\r\n                  padding: '8px',\r\n                  fontStyle: 'italic',\r\n                  cursor: 'pointer',\r\n                  '&:hover': {\r\n                    color: isDarkMode ? colours.highlight : colours.highlight,\r\n                    textDecoration: 'underline'\r\n                  }\r\n                } \r\n              }}\r\n              onClick={() => toggleColumnExpansion(column.key)}\r\n            >\r\n              Show less\r\n            </Text>\r\n          )}\r\n          \r\n          {issues.length === 0 && (\r\n            <Stack horizontalAlign=\"center\" tokens={{ childrenGap: 8 }} styles={{ root: { padding: '16px' } }}>\r\n              <Icon \r\n                iconName=\"CheckMark\" \r\n                styles={{ \r\n                  root: { \r\n                    fontSize: '24px',\r\n                    color: isDarkMode ? colours.greyText : colours.greyText,\r\n                    opacity: 0.5\r\n                  } \r\n                }} \r\n              />\r\n              <Text \r\n                variant=\"small\" \r\n                styles={{ \r\n                  root: { \r\n                    color: isDarkMode ? colours.greyText : colours.greyText,\r\n                    textAlign: 'center',\r\n                    fontStyle: 'italic'\r\n                  } \r\n                }}\r\n              >\r\n                No issues\r\n              </Text>\r\n            </Stack>\r\n          )}\r\n        </Stack>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={boardStyle}>\r\n      {showHeader && (\r\n        <div className={headerStyle}>\r\n          <Stack horizontal tokens={{ childrenGap: 8 }} verticalAlign=\"center\">\r\n            <Icon \r\n              iconName=\"IssueTracking\" \r\n              styles={{ \r\n                root: { \r\n                  fontSize: '16px',\r\n                  color: isDarkMode ? colours.blue : colours.blue\r\n                } \r\n              }} \r\n            />\r\n            <Text \r\n              variant=\"mediumPlus\" \r\n              styles={{ \r\n                root: { \r\n                  fontWeight: 600,\r\n                  color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                  flex: 1\r\n                } \r\n              }}\r\n            >\r\n              Team Issues Board\r\n            </Text>\r\n            \r\n            {issuesData && (\r\n              <Text \r\n                variant=\"small\" \r\n                styles={{ \r\n                  root: { \r\n                    color: isDarkMode ? colours.greyText : colours.greyText \r\n                  } \r\n                }}\r\n              >\r\n                {issuesData.metadata.totalIssues} total\r\n              </Text>\r\n            )}\r\n            \r\n            {!loading && (\r\n              <TooltipHost content=\"Refresh\">\r\n                <IconButton\r\n                  iconProps={{ iconName: 'Refresh' }}\r\n                  className={refreshButtonStyle}\r\n                  onClick={loadIssues}\r\n                  styles={{ root: { fontSize: '14px' } }}\r\n                />\r\n              </TooltipHost>\r\n            )}\r\n          </Stack>\r\n          \r\n          {lastUpdated && !loading && (\r\n            <Text \r\n              variant=\"tiny\" \r\n              styles={{ \r\n                root: { \r\n                  color: isDarkMode ? colours.greyText : colours.greyText,\r\n                  marginTop: '4px'\r\n                } \r\n              }}\r\n            >\r\n              Updated: {getRelativeTime(lastUpdated)}\r\n            </Text>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Error State */}\r\n      {error && (\r\n        <MessageBar \r\n          messageBarType={MessageBarType.error}\r\n          onDismiss={() => setError(null)}\r\n          actions={\r\n            <DefaultButton onClick={loadIssues} text=\"Retry\" />\r\n          }\r\n        >\r\n          {error}\r\n        </MessageBar>\r\n      )}\r\n\r\n      {/* Loading State */}\r\n      {loading && renderLoadingShimmer()}\r\n\r\n      {/* Content State */}\r\n      {!loading && !error && issuesData && (\r\n        <div className={columnsContainerStyle}>\r\n          {columns.map(renderColumn)}\r\n        </div>\r\n      )}\r\n\r\n      {/* New Issue Panel */}\r\n      <Panel\r\n        isOpen={showNewIssuePanel}\r\n        onDismiss={handleCancelNewIssue}\r\n        type={PanelType.medium}\r\n        headerText=\"Create New Issue\"\r\n        closeButtonAriaLabel=\"Close\"\r\n        styles={{\r\n          content: {\r\n            backgroundColor: isDarkMode ? colours.dark.cardBackground : colours.light.cardBackground\r\n          },\r\n          header: {\r\n            backgroundColor: isDarkMode ? colours.dark.cardBackground : colours.light.cardBackground\r\n          }\r\n        }}\r\n      >\r\n        <Stack tokens={{ childrenGap: 16 }} styles={{ root: { padding: '16px 0' } }}>\r\n          <TextField\r\n            label=\"Title\"\r\n            required\r\n            placeholder=\"Enter issue title\"\r\n            value={newIssueForm.title}\r\n            onChange={(_, newValue) => setNewIssueForm(prev => ({ ...prev, title: newValue || '' }))}\r\n            styles={{\r\n              fieldGroup: {\r\n                backgroundColor: isDarkMode ? colours.dark.hoverBackground : colours.light.cardBackground,\r\n                border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`\r\n              }\r\n            }}\r\n          />\r\n\r\n          <TextField\r\n            label=\"Description\"\r\n            required\r\n            multiline\r\n            rows={4}\r\n            placeholder=\"Describe the issue in detail\"\r\n            value={newIssueForm.description}\r\n            onChange={(_, newValue) => setNewIssueForm(prev => ({ ...prev, description: newValue || '' }))}\r\n            styles={{\r\n              fieldGroup: {\r\n                backgroundColor: isDarkMode ? colours.dark.hoverBackground : colours.light.cardBackground,\r\n                border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`\r\n              }\r\n            }}\r\n          />\r\n\r\n          <Dropdown\r\n            label=\"Priority\"\r\n            required\r\n            options={priorityOptions}\r\n            selectedKey={newIssueForm.priority}\r\n            onChange={(_, option) => setNewIssueForm(prev => ({ ...prev, priority: option?.key as TeamIssue['priority'] || 'medium' }))}\r\n            styles={{\r\n              dropdown: {\r\n                backgroundColor: isDarkMode ? colours.dark.hoverBackground : colours.light.cardBackground,\r\n                border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`\r\n              }\r\n            }}\r\n          />\r\n\r\n          <TextField\r\n            label=\"Reporter\"\r\n            required\r\n            placeholder=\"Enter reporter initials (e.g., JD)\"\r\n            value={newIssueForm.reporter}\r\n            onChange={(_, newValue) => setNewIssueForm(prev => ({ ...prev, reporter: newValue || '' }))}\r\n            styles={{\r\n              fieldGroup: {\r\n                backgroundColor: isDarkMode ? colours.dark.hoverBackground : colours.light.cardBackground,\r\n                border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`\r\n              }\r\n            }}\r\n          />\r\n\r\n          <TextField\r\n            label=\"Tags\"\r\n            placeholder=\"Enter tags separated by commas (e.g., bug, ui, urgent)\"\r\n            value={newIssueForm.tags}\r\n            onChange={(_, newValue) => setNewIssueForm(prev => ({ ...prev, tags: newValue || '' }))}\r\n            styles={{\r\n              fieldGroup: {\r\n                backgroundColor: isDarkMode ? colours.dark.hoverBackground : colours.light.cardBackground,\r\n                border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`\r\n              }\r\n            }}\r\n          />\r\n\r\n          <Stack horizontal tokens={{ childrenGap: 12 }} horizontalAlign=\"end\" styles={{ root: { marginTop: '24px' } }}>\r\n            <DefaultButton\r\n              text=\"Cancel\"\r\n              onClick={handleCancelNewIssue}\r\n              styles={{\r\n                root: {\r\n                  border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n                  backgroundColor: isDarkMode ? colours.dark.hoverBackground : colours.light.cardBackground,\r\n                  color: isDarkMode ? colours.dark.text : colours.light.text\r\n                }\r\n              }}\r\n            />\r\n            <PrimaryButton\r\n              text=\"Create Issue\"\r\n              onClick={handleNewIssueSubmit}\r\n              disabled={!newIssueForm.title.trim() || !newIssueForm.description.trim() || !newIssueForm.reporter.trim()}\r\n            />\r\n          </Stack>\r\n        </Stack>\r\n      </Panel>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamIssuesBoard;","import React from 'react';\r\n// invisible change removed\r\nimport { mergeStyles, Text, Stack, TooltipHost, Icon } from '@fluentui/react';\r\nimport { Transaction } from '../../app/functionality/types';\r\nimport { colours } from '../../app/styles/colours';\r\nimport { useTheme } from '../../app/functionality/ThemeContext';\r\n\r\ninterface TransactionCardProps {\r\n  transaction: Transaction;\r\n  onClick?: () => void; // Add onClick as an optional prop\r\n}\r\n\r\nconst cardContainer = (isDarkMode: boolean, status?: string | null) =>\r\n  mergeStyles({\r\n    backgroundColor: isDarkMode\r\n      ? colours.dark.cardBackground\r\n      : colours.light.cardBackground,\r\n    borderRadius: 0,\r\n    boxShadow: isDarkMode\r\n      ? '0 2px 8px rgba(0,0,0,0.6)'\r\n      : '0 2px 8px rgba(0,0,0,0.1)',\r\n    borderLeft: `6px solid ${\r\n      status?.toLowerCase() === 'transfer' // Changed from 'processed' to 'transfer'\r\n        ? colours.green\r\n        : status\r\n        ? colours.yellow\r\n        : 'transparent'\r\n    }`,\r\n    transition: 'all 0.3s ease',\r\n    position: 'relative',\r\n    overflow: 'hidden',\r\n    fontSize: '13px',\r\n    selectors: {\r\n      ':hover': {\r\n        transform: 'scale(1.02)',\r\n        boxShadow: isDarkMode\r\n          ? '0 4px 12px rgba(0,0,0,0.8)'\r\n          : '0 4px 12px rgba(0,0,0,0.2)',\r\n        zIndex: 1,\r\n      },\r\n      ':hover .transaction-details': {\r\n        maxHeight: '200px',\r\n        padding: '12px',\r\n      },\r\n    },\r\n  });\r\n\r\nconst headerStyle = mergeStyles({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  padding: '10px 12px',\r\n});\r\n\r\nconst detailsStyle = mergeStyles({\r\n  maxHeight: 0,\r\n  padding: '0 12px',\r\n  overflow: 'hidden',\r\n  transition: 'max-height 0.4s ease-in-out, padding 0.4s ease-in-out',\r\n  backgroundColor: 'inherit',\r\n});\r\n\r\nconst separatorStyle = mergeStyles({\r\n  borderTop: `1px solid ${colours.grey}`,\r\n  margin: '8px 0',\r\n});\r\n\r\nconst backdropIconStyle = mergeStyles({\r\n  position: 'absolute',\r\n  top: '50%',\r\n  transform: 'translateY(-50%)',\r\n  right: '12px',\r\n  fontSize: '40px',\r\n  opacity: 0.3,\r\n  pointerEvents: 'none',\r\n  zIndex: -1,\r\n  color: colours.grey,\r\n});\r\n\r\nconst rowStyle = mergeStyles({\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  fontSize: '12px',\r\n});\r\n\r\nconst formatDate = (dateStr: string): string =>\r\n  new Date(dateStr).toLocaleDateString('en-GB');\r\n\r\nconst formatCurrency = (amount: number): string =>\r\n  amount.toLocaleString('en-GB', {\r\n    style: 'currency',\r\n    currency: 'GBP',\r\n    minimumFractionDigits: 2,\r\n  });\r\n\r\nconst TransactionCard: React.FC<TransactionCardProps> = ({ transaction, onClick }) => {\r\n  const { isDarkMode } = useTheme();\r\n\r\n  // Convert \"requested\" to \"pending\" for display\r\n  const displayStatus =\r\n    transaction.status?.toLowerCase() === 'requested'\r\n      ? 'pending'\r\n      : transaction.status;\r\n\r\n  return (\r\n    <div\r\n      className={`ms-Card ${cardContainer(isDarkMode, transaction.status)}`}\r\n      onClick={onClick} // Apply the onClick handler\r\n      style={{ cursor: onClick ? 'pointer' : 'default' }} // Show pointer cursor if clickable\r\n    >\r\n      {/* Collapsed Header: Matter Ref & Amount */}\r\n      <div className={headerStyle}>\r\n        <Text\r\n          variant=\"smallPlus\"\r\n          styles={{\r\n            root: {\r\n              fontWeight: 600,\r\n              fontSize: '13px',\r\n              color: isDarkMode ? colours.dark.text : colours.light.text,\r\n            },\r\n          }}\r\n        >\r\n          {transaction.matter_ref}\r\n        </Text>\r\n        <Text\r\n          variant=\"smallPlus\"\r\n          styles={{\r\n            root: {\r\n              fontWeight: 400,\r\n              fontSize: '13px',\r\n              color: isDarkMode ? colours.dark.text : colours.light.text,\r\n            },\r\n          }}\r\n        >\r\n          {formatCurrency(transaction.amount)}\r\n        </Text>\r\n      </div>\r\n\r\n      {/* Hover Expansion */}\r\n      <div className={`transaction-details ${detailsStyle}`}>\r\n        <div className={separatorStyle} />\r\n        <Stack tokens={{ childrenGap: 6 }}>\r\n          {/* Row 1: Date and Fee Earner */}\r\n          <div className={rowStyle}>\r\n            <TooltipHost content=\"Date\">\r\n              <Text variant=\"small\">\r\n                <strong>Date:</strong> {formatDate(transaction.transaction_date)}\r\n              </Text>\r\n            </TooltipHost>\r\n            <TooltipHost content=\"Fee Earner\">\r\n              <Text variant=\"small\">\r\n                <strong>FE:</strong> {transaction.fe}\r\n              </Text>\r\n            </TooltipHost>\r\n          </div>\r\n\r\n          {/* Row 2: Status and Type */}\r\n          <div className={rowStyle}>\r\n            {displayStatus && (\r\n              <TooltipHost content=\"Status\">\r\n                <Text\r\n                  variant=\"small\"\r\n                  styles={{\r\n                    root: {\r\n                      color:\r\n                        displayStatus.toLowerCase() === 'transfer' // Updated to match 'transfer'\r\n                          ? colours.green\r\n                          : colours.yellow,\r\n                      fontWeight: 600,\r\n                    },\r\n                  }}\r\n                >\r\n                  {displayStatus}\r\n                </Text>\r\n              </TooltipHost>\r\n            )}\r\n            <TooltipHost content=\"Transaction Type\">\r\n              <Text variant=\"small\">\r\n                <strong>Type:</strong> {transaction.type}\r\n              </Text>\r\n            </TooltipHost>\r\n          </div>\r\n\r\n          {/* Row 3: Money Source */}\r\n          <div className={rowStyle}>\r\n            <TooltipHost content=\"Money Source\">\r\n              <Text\r\n                variant=\"small\"\r\n                styles={{\r\n                  root: {\r\n                    color: transaction.from_client ? colours.green : colours.yellow,\r\n                    fontWeight: 600,\r\n                  },\r\n                }}\r\n              >\r\n                {transaction.from_client\r\n                  ? 'From Client'\r\n                  : `From ${transaction.money_sender || 'Unknown Sender'}`}\r\n              </Text>\r\n            </TooltipHost>\r\n            <div /> {/* Empty div to maintain layout balance */}\r\n          </div>\r\n\r\n          {/* Row 4: ID (at the bottom) */}\r\n          <div className={rowStyle}>\r\n            <TooltipHost content=\"Transaction ID\">\r\n              <Text variant=\"small\">\r\n                <strong>ID:</strong> {transaction.transaction_id}\r\n              </Text>\r\n            </TooltipHost>\r\n            <div /> {/* Empty div to maintain layout balance */}\r\n          </div>\r\n        </Stack>\r\n        <Icon iconName=\"Pound\" className={backdropIconStyle} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionCard;","import React, { useState, useEffect } from 'react';\r\n// invisible change removed\r\nimport { Stack, Text, Spinner, MessageBar, MessageBarType, DefaultButton, IButtonStyles, TextField, ITextFieldStyles } from '@fluentui/react';\r\nimport { getProxyBaseUrl } from '../../utils/getProxyBaseUrl';\r\nimport { Transaction, Matter } from '../../app/functionality/types';\r\nimport { colours } from '../../app/styles/colours';\r\nimport { debugLog, debugWarn } from '../../utils/debug';\r\n\r\n// Button styles\r\nconst selectionStyles: IButtonStyles = {\r\n  root: {\r\n    padding: '16px 28px',\r\n    borderRadius: '10px',\r\n    backgroundColor: colours.grey,\r\n    border: 'none',\r\n    height: '70px',\r\n    width: '220px',\r\n    fontWeight: 600,\r\n    fontSize: '18px',\r\n    color: colours.greyText,\r\n    transition: 'background 0.3s ease, color 0.3s ease, box-shadow 0.3s ease, transform 0.2s ease',\r\n    boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  rootHovered: {\r\n    backgroundColor: colours.highlight,\r\n    color: '#ffffff',\r\n    boxShadow: '0 8px 20px rgba(0,0,0,0.2)',\r\n    transform: 'translateY(-3px)',\r\n  },\r\n  rootPressed: {\r\n    backgroundColor: `${colours.highlight}cc`,\r\n    color: '#ffffff',\r\n    boxShadow: '0 4px 10px rgba(0,0,0,0.25)',\r\n    transform: 'translateY(2px)',\r\n  },\r\n};\r\n\r\n// Custom amount field styles aligned with buttons\r\nconst customAmountStyles: Partial<ITextFieldStyles> = {\r\n  fieldGroup: {\r\n    borderRadius: '10px',\r\n    border: `1px solid ${colours.grey}`,\r\n    height: '70px',\r\n    width: '300px',\r\n    padding: '0 16px',\r\n    backgroundColor: colours.grey,\r\n    boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\r\n  },\r\n  prefix: {\r\n    background: '#ffffff',\r\n    border: `1px solid ${colours.grey}`,\r\n    borderRadius: '6px',\r\n    padding: '2px 8px',\r\n    marginRight: 8,\r\n    boxShadow: '0 2px 4px rgba(0,0,0,0.15)',\r\n    transform: 'translateY(-6px)',\r\n  },\r\n  field: {\r\n    fontSize: '18px',\r\n    color: colours.greyText,\r\n    fontWeight: 600,\r\n    marginTop: 6,\r\n  },\r\n};\r\n\r\ninterface TransactionApprovalPopupProps {\r\n  transaction: Transaction;\r\n  matters: Matter[];\r\n  onSubmit: (values: { transferRequested: boolean; customAmount?: number; transferCustom?: boolean }, updatedTransaction: Transaction) => void;\r\n  onCancel: () => void;\r\n  isSubmitting?: boolean;\r\n  userInitials: string;\r\n}\r\n\r\nconst TransactionApprovalPopup: React.FC<TransactionApprovalPopupProps> = ({\r\n  transaction,\r\n  matters,\r\n  onSubmit,\r\n  onCancel,\r\n  isSubmitting = false,\r\n  userInitials,\r\n}) => {\r\n  const matter = matters.find((m) => m.DisplayNumber === transaction.matter_ref);\r\n  const matterId = matter?.UniqueID || '';\r\n  const clioLink = `https://eu.app.clio.com/nc/#/matters/${matterId}`;\r\n\r\n  const [selectedOption, setSelectedOption] = useState<'leave' | 'transfer' | 'transfer_custom' | null>(null);\r\n  const [customAmount, setCustomAmount] = useState<string>('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [submitStatus, setSubmitStatus] = useState<'success' | 'error' | null>(null);\r\n  const [errorMessage, setErrorMessage] = useState<string | null>(null);\r\n  const [localStatus, setLocalStatus] = useState(transaction.status || 'requested'); // Local state for status animation\r\n\r\n  const formatDate = (dateStr: string): string =>\r\n    new Date(dateStr).toLocaleDateString('en-GB');\r\n\r\n  const formatCurrency = (amount: number): string =>\r\n    amount.toLocaleString('en-GB', {\r\n      style: 'currency',\r\n      currency: 'GBP',\r\n      minimumFractionDigits: 2,\r\n    });\r\n\r\n  const handleSubmit = async () => {\r\n    setIsLoading(true);\r\n    setSubmitStatus(null);\r\n    setErrorMessage(null);\r\n\r\n    const submissionValues = {\r\n      transaction_id: transaction.transaction_id,\r\n      transferRequested: selectedOption === 'transfer' || selectedOption === 'transfer_custom',\r\n      customAmount: selectedOption === 'transfer_custom' ? parseFloat(customAmount) || undefined : undefined,\r\n      transferCustom: selectedOption === 'transfer_custom',\r\n      user_initials: userInitials,\r\n      matter_ref: transaction.matter_ref,\r\n      amount: transaction.amount,\r\n      matterId: matterId, // Add matterId to the payload\r\n    };\r\n\r\n    try {\r\n      // Optimistically update the status to 'transfer' for the animation\r\n      setLocalStatus('transfer');\r\n\r\n        const response = await fetch(\r\n          `${getProxyBaseUrl()}/${process.env.REACT_APP_UPDATE_TRANSACTIONS_PATH}?code=${process.env.REACT_APP_UPDATE_TRANSACTIONS_CODE}`,\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify([submissionValues]),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(`Failed to update transaction: ${response.status} - ${errorText}`);\r\n      }\r\n\r\n      const result = await response.json();\r\n      debugLog(\"Update successful:\", result);\r\n      setSubmitStatus('success');\r\n\r\n      // Update the transaction status in the parent component\r\n      const updatedTransaction = { ...transaction, status: 'transfer' };\r\n      onSubmit(submissionValues, updatedTransaction);\r\n\r\n      // Delay closing the panel to show the animation and confirmation\r\n      setTimeout(() => {\r\n        onCancel(); // Close the panel after 2 seconds\r\n      }, 2000);\r\n    } catch (error) {\r\n      debugWarn(\"Error updating transaction:\", error);\r\n      setSubmitStatus('error');\r\n      setErrorMessage(error instanceof Error ? error.message : 'Unknown error occurred');\r\n      setIsLoading(false); // Allow retry on error\r\n    }\r\n  };\r\n\r\n  const handleOptionSelect = (option: 'leave' | 'transfer' | 'transfer_custom') => {\r\n    setSelectedOption(option);\r\n    if (option !== 'transfer_custom') setCustomAmount('');\r\n  };\r\n\r\n  const getButtonStyles = (isSelected: boolean): IButtonStyles => ({\r\n    root: {\r\n      padding: '16px 28px',\r\n      borderRadius: '10px',\r\n      backgroundColor: isSelected ? colours.highlight : colours.grey,\r\n      border: 'none',\r\n      height: '70px',\r\n      width: '220px',\r\n      fontWeight: 600,\r\n      fontSize: '18px',\r\n      color: isSelected ? '#ffffff' : colours.greyText,\r\n      transition: 'background 0.3s ease, color 0.3s ease, box-shadow 0.3s ease, transform 0.2s ease',\r\n      boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    rootHovered: selectionStyles.rootHovered,\r\n    rootPressed: selectionStyles.rootPressed,\r\n  });\r\n\r\n  const isConfirmDisabled = selectedOption === 'transfer_custom' && (!customAmount || parseFloat(customAmount) <= 0 || parseFloat(customAmount) > transaction.amount);\r\n\r\n  // Determine status color based on local status\r\n  const statusColor = localStatus?.toLowerCase() === 'transfer' ? colours.green : colours.yellow;\r\n  const displayStatus = localStatus?.toLowerCase() === 'requested' ? 'pending' : localStatus;\r\n\r\n  return (\r\n    <Stack\r\n      tokens={{ childrenGap: 30 }}\r\n      styles={{\r\n        root: {\r\n          padding: '30px',\r\n          width: '100%',\r\n          maxWidth: '1000px',\r\n          boxSizing: 'border-box',\r\n        },\r\n      }}\r\n    >\r\n      {/* Instructions in Info Box */}\r\n      <Stack\r\n        tokens={{ childrenGap: 10 }}\r\n        styles={{\r\n          root: {\r\n            textAlign: 'left',\r\n            backgroundColor: '#f8f9fa',\r\n            border: `1px solid ${colours.grey}`,\r\n            borderRadius: '8px',\r\n            padding: '20px',\r\n            width: '100%',\r\n          },\r\n        }}\r\n      >\r\n        <Text styles={{ root: { fontSize: '18px', fontWeight: 600, color: colours.greyText } }}>\r\n          Transaction Approval\r\n        </Text>\r\n        <Text styles={{ root: { fontSize: '16px', color: colours.greyText, lineHeight: '1.5' } }}>\r\n          Please review the transaction details below and choose an action:\r\n        </Text>\r\n        <Text styles={{ root: { fontSize: '16px', color: colours.greyText, lineHeight: '1.5' } }}>\r\n          - <strong>Leave in Client:</strong> Keep the funds in the client account.<br />\r\n          - <strong>Request Transfer:</strong> Approve the transfer of the full amount.<br />\r\n          - <strong>Transfer Custom Amount:</strong> Specify a custom amount to transfer.\r\n        </Text>\r\n      </Stack>\r\n\r\n      {/* Transaction Details and Actions Section */}\r\n      <Stack\r\n        tokens={{ childrenGap: 30 }}\r\n        styles={{\r\n          root: {\r\n            textAlign: 'left',\r\n            backgroundColor: '#f8f9fa',\r\n            borderRadius: '8px',\r\n            padding: '20px',\r\n            position: 'relative',\r\n            width: '100%',\r\n          },\r\n        }}\r\n      >\r\n        {/* Status Indicator in Top-Right Corner */}\r\n        <div\r\n          style={{\r\n            position: 'absolute',\r\n            top: '10px',\r\n            right: '10px',\r\n            backgroundColor: statusColor,\r\n            color: '#ffffff',\r\n            padding: '4px 12px',\r\n            borderRadius: '12px',\r\n            fontSize: '12px',\r\n            fontWeight: 600,\r\n            textTransform: 'capitalize',\r\n            transition: 'background-color 0.5s ease',\r\n          }}\r\n        >\r\n          {displayStatus}\r\n        </div>\r\n\r\n        {/* Transaction Details */}\r\n        <Stack tokens={{ childrenGap: 16 }}>\r\n          <Text variant=\"mediumPlus\" styles={{ root: { color: colours.greyText } }}>\r\n            <strong>Date of Transaction:</strong> {formatDate(transaction.transaction_date)}\r\n          </Text>\r\n          <Text variant=\"mediumPlus\" styles={{ root: { color: colours.greyText } }}>\r\n            <strong>Matter Reference:</strong>{' '}\r\n            <a\r\n              href={clioLink}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              style={{ color: colours.highlight }}\r\n            >\r\n              {transaction.matter_ref}\r\n            </a>{' '}\r\n            - <strong>Amount:</strong> {formatCurrency(transaction.amount)}\r\n          </Text>\r\n          <Text variant=\"mediumPlus\" styles={{ root: { color: colours.greyText } }}>\r\n            <strong>Transaction Type:</strong> {transaction.type}<br />\r\n            <strong>From:</strong>{' '}\r\n            {transaction.from_client ? 'Client' : transaction.money_sender || 'Unknown Sender'}\r\n          </Text>\r\n        </Stack>\r\n\r\n        {/* Selection Buttons */}\r\n        <Stack\r\n          horizontal\r\n          tokens={{ childrenGap: 24 }}\r\n          styles={{\r\n            root: {\r\n              justifyContent: 'center',\r\n              width: '100%',\r\n              maxWidth: '720px',\r\n              margin: '0 auto',\r\n            },\r\n          }}\r\n        >\r\n          <DefaultButton\r\n            text=\"Leave in Client\"\r\n            onClick={() => handleOptionSelect('leave')}\r\n            styles={getButtonStyles(selectedOption === 'leave')}\r\n          />\r\n          <DefaultButton\r\n            text=\"Request Transfer\"\r\n            onClick={() => handleOptionSelect('transfer')}\r\n            styles={getButtonStyles(selectedOption === 'transfer')}\r\n          />\r\n          <DefaultButton\r\n            text=\"Transfer Custom Amount\"\r\n            onClick={() => handleOptionSelect('transfer_custom')}\r\n            styles={getButtonStyles(selectedOption === 'transfer_custom')}\r\n          />\r\n        </Stack>\r\n\r\n        {/* Custom Amount Input */}\r\n        {selectedOption === 'transfer_custom' && (\r\n          <Stack\r\n            tokens={{ childrenGap: 10 }}\r\n            styles={{ root: { alignItems: 'center', maxWidth: '720px', margin: '0 auto' } }}\r\n          >\r\n            <TextField\r\n              label=\"Custom Amount\"\r\n              prefix=\"£\"\r\n              value={customAmount}\r\n              onChange={(_, newValue) => setCustomAmount(newValue || '')}\r\n              styles={customAmountStyles}\r\n              placeholder={`Max: ${formatCurrency(transaction.amount)}`}\r\n              type=\"number\"\r\n              min={0}\r\n              max={transaction.amount}\r\n            />\r\n            <Text styles={{ root: { fontSize: '14px', color: colours.greyText } }}>\r\n              Enter an amount up to {formatCurrency(transaction.amount)}\r\n            </Text>\r\n          </Stack>\r\n        )}\r\n\r\n        {/* Confirmation Buttons */}\r\n        {selectedOption && !submitStatus && (\r\n          <Stack\r\n            horizontal\r\n            tokens={{ childrenGap: 20 }}\r\n            styles={{\r\n              root: {\r\n                justifyContent: 'center',\r\n                width: '100%',\r\n                maxWidth: '464px',\r\n                margin: '0 auto',\r\n              },\r\n            }}\r\n          >\r\n            <DefaultButton\r\n              text={isLoading ? \"Processing...\" : \"Confirm\"}\r\n              onClick={handleSubmit}\r\n              disabled={isConfirmDisabled || isLoading || isSubmitting}\r\n              styles={{\r\n                root: {\r\n                  padding: '16px 28px',\r\n                  borderRadius: '10px',\r\n                  backgroundColor: isLoading ? `${colours.green}33` : colours.highlight,\r\n                  border: isLoading ? `2px solid ${colours.green}` : 'none',\r\n                  height: '70px',\r\n                  width: '220px',\r\n                  fontWeight: 600,\r\n                  fontSize: '18px',\r\n                  color: '#ffffff',\r\n                  transition: 'background 0.3s ease, color 0.3s ease, box-shadow 0.3s ease, transform 0.2s ease',\r\n                  boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\r\n                  display: 'flex',\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                },\r\n                rootHovered: selectionStyles.rootHovered,\r\n                rootPressed: selectionStyles.rootPressed,\r\n              }}\r\n            />\r\n            <DefaultButton\r\n              text=\"Cancel\"\r\n              onClick={onCancel}\r\n              styles={getButtonStyles(false)}\r\n              disabled={isLoading}\r\n            />\r\n          </Stack>\r\n        )}\r\n      </Stack>\r\n\r\n      {/* Loading and Status Messages */}\r\n      {isLoading && !submitStatus && (\r\n        <Stack horizontalAlign=\"center\">\r\n          <Spinner label=\"Processing transaction...\" labelPosition=\"right\" styles={{ label: { color: colours.green } }} />\r\n        </Stack>\r\n      )}\r\n\r\n      {submitStatus === 'success' && (\r\n        <MessageBar messageBarType={MessageBarType.success}>\r\n          Transfer has been requested successfully!\r\n        </MessageBar>\r\n      )}\r\n\r\n      {submitStatus === 'error' && (\r\n        <MessageBar messageBarType={MessageBarType.error}>\r\n          {errorMessage || 'Failed to update transaction.'}\r\n        </MessageBar>\r\n      )}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default TransactionApprovalPopup;","import React, { useState } from 'react';\r\n// invisible change removed\r\nimport { Stack, Text, Link, Separator, Icon, TooltipHost } from '@fluentui/react';\r\nimport { mergeStyles } from '@fluentui/react';\r\nimport { colours } from '../../app/styles/colours';\r\nimport { OutstandingClientBalance, Matter } from '../../app/functionality/types';\r\n\r\n/**\r\n * Props for a single outstanding balance card.\r\n */\r\ninterface OutstandingBalanceCardProps {\r\n  balanceRecord: OutstandingClientBalance;  // The record for this client\r\n  matters: Matter[];                       // All matters (or only user matters)\r\n  computeDueStatus: (bill: any) => string; // A helper function from your code\r\n}\r\n\r\nconst containerStyle = mergeStyles({\r\n  padding: '10px',\r\n  backgroundColor: colours.light.sectionBackground,\r\n  borderRadius: 0,\r\n  boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\r\n  marginBottom: '16px',\r\n  position: 'relative',\r\n  transition: 'all 0.3s ease',\r\n  fontSize: '13px',\r\n});\r\n\r\nconst headerStyle = mergeStyles({\r\n  padding: '10px',\r\n  borderBottom: `1px solid ${colours.light.border}`,\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n});\r\n\r\nconst mattersContainerStyle = mergeStyles({\r\n  padding: '4px 8px',\r\n  marginTop: '4px',\r\n  marginBottom: '4px',\r\n});\r\n\r\nconst matterLinkStyle = mergeStyles({\r\n  fontWeight: 400,\r\n  fontSize: '13px',\r\n  textDecoration: 'none',\r\n  color: colours.highlight,\r\n});\r\n\r\n// We'll always render the bills container and animate its reveal:\r\nconst billsContainerBaseStyle = mergeStyles({\r\n  overflow: 'hidden',\r\n  transition: 'max-height 0.4s ease-in-out, padding 0.4s ease-in-out, opacity 0.4s ease-in-out',\r\n});\r\n\r\n// Use a helper function to create alternating background styles for bills:\r\nconst getBillContainerStyle = (index: number) =>\r\n  mergeStyles({\r\n    backgroundColor: index % 2 === 0 ? '#ffffff' : 'rgba(244,244,246,0.4)',\r\n    padding: '8px',\r\n    marginTop: '8px',\r\n    borderRadius: 0,\r\n  });\r\n\r\nconst verticalEquationStyle = mergeStyles({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'flex-end',\r\n  justifyContent: 'flex-start',\r\n});\r\n\r\nconst horizontalSeparatorStyle = mergeStyles({\r\n  margin: '4px 0',\r\n  borderTop: `1px solid ${colours.light.border}`,\r\n  width: '100%',\r\n});\r\n\r\nconst dateTextStyle: React.CSSProperties = {\r\n  color: '#555',\r\n  fontSize: '13px',\r\n};\r\n\r\nconst overdueStyle = mergeStyles({\r\n  color: 'red',\r\n  fontWeight: 600,\r\n  fontSize: '13px',\r\n});\r\n\r\nconst paymentStyle = mergeStyles({\r\n  fontWeight: 600,\r\n  fontSize: '13px',\r\n});\r\n\r\nconst OutstandingBalanceCard: React.FC<OutstandingBalanceCardProps> = ({\r\n  balanceRecord,\r\n  matters,\r\n  computeDueStatus,\r\n}) => {\r\n  // Track hover state so we can animate the bills reveal.\r\n  const [isHovered, setIsHovered] = useState(false);\r\n\r\n  // Filter the matters for this client.\r\n  const relevantMatters = matters.filter((m) =>\r\n    balanceRecord.associated_matter_ids.includes(Number(m.UniqueID))\r\n  );\r\n\r\n  // Bill details.\r\n  const bills = balanceRecord.outstanding_bills || [];\r\n\r\n  // Dynamic style for the bills container.\r\n  const billsContainerStyle = mergeStyles(billsContainerBaseStyle, {\r\n    maxHeight: isHovered ? '1000px' : '0px',  // Use a high enough maxHeight for full content\r\n    padding: isHovered ? '8px 0' : '0 0',\r\n    opacity: isHovered ? 1 : 0,\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className={containerStyle}\r\n      onMouseEnter={() => setIsHovered(true)}\r\n      onMouseLeave={() => setIsHovered(false)}\r\n    >\r\n      {/* HEADER */}\r\n      <div className={headerStyle}>\r\n        <Text style={{ fontWeight: 600, fontSize: '13px' }}>\r\n          {balanceRecord.contact?.name || 'Unknown Client'}\r\n        </Text>\r\n        <Text style={{ color: 'red', fontWeight: 700, fontSize: '13px' }}>\r\n          £{balanceRecord.total_outstanding_balance.toFixed(2)}\r\n        </Text>\r\n      </div>\r\n\r\n      {/* Matters */}\r\n      {relevantMatters.length > 0 && (\r\n        <div className={mattersContainerStyle}>\r\n          <Stack horizontal tokens={{ childrenGap: 8 }} verticalAlign=\"center\">\r\n            {relevantMatters.map((mat) => (\r\n              <Link\r\n                key={mat.UniqueID}\r\n                href={`https://eu.app.clio.com/nc/#/matters/${mat.UniqueID}`}\r\n                target=\"_blank\"\r\n                className={matterLinkStyle}\r\n              >\r\n                {mat.DisplayNumber}\r\n              </Link>\r\n            ))}\r\n          </Stack>\r\n        </div>\r\n      )}\r\n\r\n      {/* Separator */}\r\n      <Separator styles={{ root: { margin: '8px 0' } }} />\r\n\r\n      {/* Bills: Animated Reveal */}\r\n      <div className={billsContainerStyle}>\r\n        {bills.map((bill: any, index: number) => {\r\n          const total = bill.total || 0;\r\n          const paid = bill.paid || 0;\r\n          const balanceAmount = bill.due || 0;\r\n          const dueStatus = computeDueStatus(bill);\r\n\r\n          return (\r\n            <div key={bill.id} className={getBillContainerStyle(index)}>\r\n              <Stack\r\n                horizontal\r\n                tokens={{ childrenGap: 8 }}\r\n                verticalAlign=\"start\"\r\n                styles={{ root: { justifyContent: 'space-between' } }}\r\n              >\r\n                <Stack horizontal tokens={{ childrenGap: 4 }} verticalAlign=\"start\">\r\n                  <Link\r\n                    href={`https://eu.app.clio.com/nc/#/bills/${bill.id}`}\r\n                    target=\"_blank\"\r\n                    className={matterLinkStyle}\r\n                  >\r\n                    {bill.number}\r\n                  </Link>\r\n                  <Text className={overdueStyle}>- {dueStatus}</Text>\r\n                </Stack>\r\n\r\n                <div className={verticalEquationStyle}>\r\n                  <Text className={paymentStyle}>Total: £{total.toFixed(2)}</Text>\r\n                  {paid > 0 && (\r\n                    <Stack horizontal verticalAlign=\"center\" tokens={{ childrenGap: 4 }}>\r\n                      <TooltipHost\r\n                        content={\r\n                          <div>\r\n                            <Text>\r\n                              Last Payment: {new Date(bill.paid_at).toLocaleDateString()}\r\n                            </Text>\r\n                            <Text style={{ color: 'green', fontWeight: 600 }}>\r\n                              Amount: £{paid.toFixed(2)}\r\n                            </Text>\r\n                          </div>\r\n                        }\r\n                        calloutProps={{ gapSpace: 0 }}\r\n                      >\r\n                        <Icon iconName=\"Info\" style={{ cursor: 'pointer' }} />\r\n                      </TooltipHost>\r\n                      <Text className={paymentStyle} style={{ color: 'green' }}>\r\n                        - Paid: £{paid.toFixed(2)}\r\n                      </Text>\r\n                    </Stack>\r\n                  )}\r\n                  <div className={horizontalSeparatorStyle} />\r\n                  <Text className={paymentStyle}>Balance: £{balanceAmount.toFixed(2)}</Text>\r\n                </div>\r\n              </Stack>\r\n\r\n              <Stack tokens={{ childrenGap: 4 }} style={dateTextStyle}>\r\n                <Text style={dateTextStyle}>\r\n                  Issued:{' '}\r\n                  {bill.issued_at ? new Date(bill.issued_at).toLocaleDateString() : 'N/A'}\r\n                </Text>\r\n                <Text style={dateTextStyle}>\r\n                  Due:{' '}\r\n                  {bill.due_at ? new Date(bill.due_at).toLocaleDateString() : 'N/A'}\r\n                </Text>\r\n              </Stack>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OutstandingBalanceCard;\r\n","import React, { useState, useMemo } from 'react';\r\n// invisible change 2\r\nimport { Stack, Text, Toggle, mergeStyles, Icon, Separator } from '@fluentui/react';\r\nimport { Transaction, Matter, OutstandingClientBalance } from '../../app/functionality/types';\r\nimport { colours } from '../../app/styles/colours';\r\nimport { cardStyles } from '../instructions/componentTokens';\r\nimport { componentTokens } from '../../app/styles/componentTokens';\r\nimport TransactionCard from '../transactions/TransactionCard';\r\nimport TransactionApprovalPopup from '../transactions/TransactionApprovalPopup';\r\nimport BespokePanel from '../../app/functionality/BespokePanel';\r\nimport OutstandingBalanceCard from '../transactions/OutstandingBalanceCard';\r\n\r\ninterface ActionSectionProps {\r\n  transactions: Transaction[];\r\n  userInitials: string;\r\n  isDarkMode: boolean;\r\n  onTransactionClick: (transaction: Transaction) => void;\r\n  matters: Matter[];\r\n  updateTransaction: (updatedTransaction: Transaction) => void;\r\n  // NEW: Prop for outstanding balances (already filtered to only the user's balances)\r\n  outstandingBalances: OutstandingClientBalance[];\r\n}\r\n\r\nconst transfersGridStyle = mergeStyles({\r\n  display: 'grid',\r\n  gridTemplateColumns: 'repeat(4, 1fr)',\r\n  gap: '20px',\r\n  width: '100%',\r\n});\r\n\r\nconst balancesGridStyle = mergeStyles({\r\n  display: 'grid',\r\n  gridTemplateColumns: 'repeat(auto-fit, minmax(400px, 1fr))',\r\n  gap: '20px',\r\n  width: '100%',\r\n});\r\n\r\nconst noActionsClass = mergeStyles({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  gap: '6px',\r\n});\r\n\r\nconst CollapsibleSection: React.FC<{\r\n  title: string;\r\n  children: React.ReactNode;\r\n  isDarkMode: boolean;\r\n  defaultCollapsed?: boolean;\r\n  labels?: string[];\r\n}> = ({ title, children, isDarkMode, defaultCollapsed = false, labels = [] }) => {\r\n  const [collapsed, setCollapsed] = useState(defaultCollapsed);\r\n  const toggleCollapse = () => setCollapsed(!collapsed);\r\n  const trayHeight = 50;\r\n  const labelArray = labels;\r\n\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        marginBottom: '20px',\r\n        boxShadow: (cardStyles.root as React.CSSProperties).boxShadow,\r\n        borderTopLeftRadius: 0,\r\n        borderTopRightRadius: 0,\r\n        borderBottomLeftRadius: 0,\r\n        borderBottomRightRadius: 0,\r\n        overflow: 'hidden',\r\n      }}\r\n    >\r\n      <div\r\n        onClick={toggleCollapse}\r\n        style={{\r\n          backgroundColor: colours.darkBlue,\r\n          color: '#ffffff',\r\n          border: `1px solid ${colours.light.border}`,\r\n          padding: '6px 10px',\r\n          minHeight: '30px',\r\n          cursor: 'pointer',\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          alignItems: 'center',\r\n          fontSize: '14px',\r\n          borderRadius: 0,\r\n        }}\r\n      >\r\n        <span style={{ fontWeight: 600 }}>{title}</span>\r\n        <Icon\r\n          iconName=\"ChevronDown\"\r\n          styles={{\r\n            root: {\r\n              fontSize: '16px',\r\n              transform: collapsed ? 'rotate(0deg)' : 'rotate(180deg)',\r\n              transition: 'transform 0.3s ease',\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n      <div\r\n        style={{\r\n          padding: collapsed ? '6px 10px' : componentTokens.summaryPane.base.padding,\r\n          backgroundColor: isDarkMode\r\n            ? colours.dark.sectionBackground\r\n            : colours.light.sectionBackground,\r\n          boxShadow: componentTokens.summaryPane.base.boxShadow,\r\n          borderBottomLeftRadius: 0,\r\n          borderBottomRightRadius: 0,\r\n          maxHeight: collapsed ? trayHeight : '2000px',\r\n          overflow: 'hidden',\r\n          transition: 'max-height 0.3s ease, opacity 0.3s ease',\r\n        }}\r\n      >\r\n        {collapsed ? (\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexWrap: 'wrap',\r\n              gap: '6px',\r\n              fontSize: '12px',\r\n            }}\r\n          >\r\n            {labelArray.map((label, idx) => (\r\n              <span\r\n                key={idx}\r\n                style={{\r\n                  backgroundColor: colours.tagBackground,\r\n                  padding: '2px 8px',\r\n                  borderRadius: '12px',\r\n                }}\r\n              >\r\n                {label}\r\n              </span>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          children\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ActionSection: React.FC<ActionSectionProps> = ({\r\n  transactions,\r\n  userInitials,\r\n  isDarkMode,\r\n  onTransactionClick,\r\n  matters,\r\n  updateTransaction,\r\n  outstandingBalances,\r\n}) => {\r\n  // ----------------- Transfers Section -----------------\r\n  const [showOnlyMine, setShowOnlyMine] = useState(true);\r\n  const [isTransactionPopupOpen, setIsTransactionPopupOpen] = useState<boolean>(false);\r\n  const [selectedTransaction, setSelectedTransaction] = useState<Transaction | null>(null);\r\n\r\n  // Treat user \"LZ\" as \"AC\" for filtering purposes\r\n  const effectiveInitials = userInitials.toLowerCase() === 'lz' ? 'ac' : userInitials;\r\n\r\n  const filteredTransactions = useMemo(() => {\r\n    const relevantTransactions = transactions.filter(\r\n      (tx) => ['requested', 'transfer'].includes((tx.status || '').toLowerCase())\r\n    );\r\n    if (showOnlyMine) {\r\n      return relevantTransactions.filter(\r\n        (tx) => (tx.fe || '').toLowerCase() === effectiveInitials.toLowerCase()\r\n      );\r\n    }\r\n    return relevantTransactions;\r\n  }, [transactions, effectiveInitials, showOnlyMine]);\r\n\r\n  const defaultCollapsed = filteredTransactions.length === 0 && showOnlyMine;\r\n\r\n  const handleTransactionClickInternal = (tx: Transaction) => {\r\n    setSelectedTransaction(tx);\r\n    setIsTransactionPopupOpen(true);\r\n  };\r\n\r\n  const handleTransactionSubmit = (\r\n    values: { transferRequested: boolean; customAmount?: number; transferCustom?: boolean },\r\n    updatedTx: Transaction\r\n  ) => {\r\n    updateTransaction(updatedTx);\r\n  };\r\n\r\n  // ----------------- Helper Function -----------------\r\n  // Compute due status for a bill\r\n  const computeDueStatus = (bill: any): string => {\r\n    const today = new Date();\r\n    const dueDate = new Date(bill.due_at);\r\n    const diffTime = today.getTime() - dueDate.getTime();\r\n    const diffDays = Math.floor(diffTime / (1000 * 3600 * 24));\r\n    if (diffDays > 0) {\r\n      return `${diffDays} day${diffDays > 1 ? 's' : ''} overdue`;\r\n    } else if (diffDays < 0) {\r\n      return `Due in ${Math.abs(diffDays)} day${Math.abs(diffDays) > 1 ? 's' : ''}`;\r\n    } else {\r\n      return 'Due today';\r\n    }\r\n  };\r\n  const outerLabels = [\r\n    `${filteredTransactions.length} transfer${filteredTransactions.length === 1 ? '' : 's'}`,\r\n    `${outstandingBalances.length} balance${outstandingBalances.length === 1 ? '' : 's'}`,\r\n  ];\r\n\r\n  return (\r\n    <CollapsibleSection\r\n      title=\"Transfers and Outstanding Balances\"\r\n      isDarkMode={isDarkMode}\r\n      defaultCollapsed={defaultCollapsed}\r\n      labels={outerLabels}\r\n    >\r\n      {/* ---------- Transfers ---------- */}\r\n      <Text variant=\"large\" styles={{ root: { fontWeight: 600, marginBottom: '10px' } }}>\r\n        Transfers\r\n      </Text>\r\n      <Toggle\r\n        checked={showOnlyMine}\r\n        onText=\"Mine\"\r\n        offText=\"All\"\r\n        onChange={(e, checked) => setShowOnlyMine(!!checked)}\r\n        styles={{ root: { marginBottom: '10px' } }}\r\n      />\r\n      {filteredTransactions.length === 0 ? (\r\n        <div className={noActionsClass}>\r\n          <Icon iconName=\"CompletedSolid\" styles={{ root: { fontSize: '16px', color: colours.green } }} />\r\n          <Text>No transfers require action at this time.</Text>\r\n        </div>\r\n      ) : (\r\n          <div className={transfersGridStyle}>\r\n          {filteredTransactions.map((tx) => (\r\n            <TransactionCard\r\n              key={tx.transaction_id}\r\n              transaction={tx}\r\n              onClick={() => handleTransactionClickInternal(tx)}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      <BespokePanel\r\n        isOpen={isTransactionPopupOpen}\r\n        onClose={() => setIsTransactionPopupOpen(false)}\r\n        title=\"Approve Transaction\"\r\n        width=\"2000px\"\r\n      >\r\n        {selectedTransaction && (\r\n          <TransactionApprovalPopup\r\n            transaction={selectedTransaction}\r\n            matters={matters}\r\n            onSubmit={handleTransactionSubmit}\r\n            onCancel={() => setIsTransactionPopupOpen(false)}\r\n            userInitials={userInitials}\r\n          />\r\n        )}\r\n      </BespokePanel>\r\n\r\n      <Separator styles={{ root: { marginTop: 20, marginBottom: 20 } }} />\r\n\r\n      {/* ---------- Outstanding Balances Sub-Section ---------- */}\r\n      <CollapsibleSection\r\n        title=\"Outstanding Balances\"\r\n        isDarkMode={isDarkMode}\r\n        defaultCollapsed={true}\r\n        labels={[`${outstandingBalances.length} record${outstandingBalances.length === 1 ? '' : 's'}`]}\r\n      >\r\n        {outstandingBalances.length === 0 ? (\r\n          <div className={noActionsClass}>\r\n            <Icon iconName=\"CompletedSolid\" styles={{ root: { fontSize: '16px', color: colours.green } }} />\r\n            <Text>No outstanding balances found.</Text>\r\n          </div>\r\n        ) : (\r\n            <div className={balancesGridStyle}>\r\n            {outstandingBalances.map((bal) => (\r\n              <OutstandingBalanceCard\r\n                key={bal.id}\r\n                balanceRecord={bal}\r\n                matters={matters}\r\n                computeDueStatus={computeDueStatus}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </CollapsibleSection>\r\n    </CollapsibleSection>\r\n  );\r\n};\r\n\r\nexport default ActionSection;\r\n","import React from 'react';\r\nimport { mergeStyles, Stack, Text, keyframes } from '@fluentui/react';\r\nimport { useTheme } from '../../app/functionality/ThemeContext';\r\nimport { colours } from '../../app/styles/colours';\r\n\r\n/**\r\n * Enhanced section container with sophisticated styling and animations.\r\n * Provides consistent elevated surfaces with smooth transitions.\r\n */\r\ninterface SectionCardProps {\r\n  title?: string;\r\n  subtitle?: string;\r\n  actions?: React.ReactNode;\r\n  children: React.ReactNode;\r\n  styleOverrides?: React.CSSProperties;\r\n  id?: string;\r\n  variant?: 'default' | 'elevated' | 'minimal';\r\n  animationDelay?: number;\r\n}\r\n\r\nconst slideUpFade = keyframes({\r\n  '0%': {\r\n    opacity: 0,\r\n    transform: 'translateY(20px)',\r\n  },\r\n  '100%': {\r\n    opacity: 1,\r\n    transform: 'translateY(0)',\r\n  },\r\n});\r\n\r\nconst baseClass = (isDark: boolean, variant: string, animationDelay: number) => mergeStyles({\r\n  // Use a subtle dark gradient for default/elevated variants in dark mode; keep minimal flat\r\n  background: isDark\r\n    ? (variant === 'minimal'\r\n      ? colours.dark.sectionBackground\r\n      : 'linear-gradient(135deg, #0B1224 0%, #0F1B33 100%)')\r\n    : undefined,\r\n  backgroundColor: isDark ? undefined : colours.light.sectionBackground,\r\n  padding: variant === 'minimal' ? '12px' : '16px',\r\n  borderRadius: variant === 'minimal' ? '8px' : '8px',\r\n  border: `1px solid ${isDark ? colours.dark.border : colours.light.border}`,\r\n  boxShadow: variant === 'elevated' \r\n    ? isDark \r\n      ? '0 4px 16px rgba(0,0,0,0.2), 0 1px 4px rgba(0,0,0,0.1)' \r\n      : '0 4px 16px rgba(0,0,0,0.04), 0 1px 4px rgba(0,0,0,0.02)'\r\n    : isDark\r\n      ? '0 2px 8px rgba(0,0,0,0.15), 0 1px 2px rgba(0,0,0,0.08)'\r\n      : '0 2px 8px rgba(0,0,0,0.03), 0 1px 2px rgba(0,0,0,0.01)',\r\n  width: '100%',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  gap: variant === 'minimal' ? '8px' : '12px',\r\n  position: 'relative',\r\n  transition: 'all 0.2s ease',\r\n  animation: `${slideUpFade} 0.4s ease ${animationDelay}s both`,\r\n  overflow: 'hidden',\r\n  '&:hover': {\r\n    transform: 'translateY(-1px)',\r\n    boxShadow: variant === 'elevated'\r\n      ? isDark\r\n        ? '0 6px 24px rgba(0,0,0,0.25), 0 2px 8px rgba(0,0,0,0.15)'\r\n        : '0 6px 24px rgba(0,0,0,0.06), 0 2px 8px rgba(0,0,0,0.04)'\r\n      : isDark\r\n        ? '0 4px 16px rgba(0,0,0,0.2), 0 2px 4px rgba(0,0,0,0.1)'\r\n        : '0 4px 16px rgba(0,0,0,0.04), 0 2px 4px rgba(0,0,0,0.02)',\r\n  },\r\n});\r\n\r\nconst headerClass = (isDark: boolean, hasSubtitle: boolean) => mergeStyles({\r\n  display: 'flex',\r\n  alignItems: hasSubtitle ? 'flex-start' : 'center',\r\n  justifyContent: 'space-between',\r\n  marginBottom: hasSubtitle ? '8px' : '4px',\r\n  position: 'relative',\r\n});\r\n\r\nconst titleClass = (isDark: boolean) => mergeStyles({\r\n  fontWeight: '600',\r\n  fontSize: '18px',\r\n  lineHeight: '1.2',\r\n  color: isDark ? colours.dark.text : colours.light.text,\r\n  margin: 0,\r\n});\r\n\r\nconst subtitleClass = (isDark: boolean) => mergeStyles({\r\n  fontSize: '14px',\r\n  fontWeight: '500',\r\n  color: isDark ? colours.dark.text : colours.light.text,\r\n  marginTop: '4px',\r\n  lineHeight: '1.4',\r\n  opacity: 0.8,\r\n});\r\n\r\nconst contentContainerClass = mergeStyles({\r\n  position: 'relative',\r\n  zIndex: 1,\r\n});\r\n\r\nconst SectionCard: React.FC<SectionCardProps> = ({ \r\n  title, \r\n  subtitle, \r\n  actions, \r\n  children, \r\n  styleOverrides, \r\n  id, \r\n  variant = 'default',\r\n  animationDelay = 0\r\n}) => {\r\n  const { isDarkMode } = useTheme();\r\n  \r\n  return (\r\n    <section \r\n      id={id} \r\n      className={baseClass(isDarkMode, variant, animationDelay)} \r\n      style={styleOverrides} \r\n      aria-labelledby={title ? `${id || title}-heading` : undefined}\r\n    >\r\n      {(title || actions) && (\r\n        <div className={headerClass(isDarkMode, !!subtitle)}>\r\n          <div>\r\n            {title && (\r\n              <h2\r\n                id={`${id || title}-heading`}\r\n                className={titleClass(isDarkMode)}\r\n              >\r\n                {title}\r\n              </h2>\r\n            )}\r\n            {subtitle && (\r\n              <p className={subtitleClass(isDarkMode)}>\r\n                {subtitle}\r\n              </p>\r\n            )}\r\n          </div>\r\n          {actions && <div style={{ flexShrink: 0 }}>{actions}</div>}\r\n        </div>\r\n      )}\r\n      <div className={contentContainerClass}>\r\n        <Stack tokens={{ childrenGap: variant === 'minimal' ? 6 : 10 }}>\r\n          {children}\r\n        </Stack>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SectionCard;\r\n","import React from 'react';\r\nimport {\r\n  FaRegCheckSquare,\r\n  FaCheckSquare,\r\n  FaRegClock,\r\n  FaClock,\r\n  FaRegBuilding,\r\n  FaBuilding,\r\n  FaPhone,\r\n  FaRegUser,\r\n  FaUser,\r\n  FaRegFolder,\r\n  FaFolder,\r\n  FaRegIdBadge,\r\n  FaIdBadge,\r\n  FaUserCheck,\r\n  FaMobileAlt,\r\n  FaUmbrellaBeach,\r\n} from 'react-icons/fa';\r\nimport {\r\n  AiOutlinePlus,\r\n  AiFillPlusSquare,\r\n} from 'react-icons/ai';\r\nimport {\r\n  MdOutlineEventSeat,\r\n  MdEventSeat,\r\n  MdPhone,\r\n  MdCall,\r\n  MdOutlineAssessment,\r\n  MdAssessment,\r\n  MdOutlineArticle,\r\n  MdArticle,\r\n  MdOutlineLocationCity,\r\n  MdLocationCity,\r\n  MdOutlineConstruction,\r\n  MdConstruction,\r\n  MdSmartphone,\r\n  MdOutlineSlideshow,\r\n  MdSlideshow,\r\n} from 'react-icons/md';\r\nimport { Icon } from '@fluentui/react';\r\nimport { colours } from '../../app/styles/colours';\r\nimport '../../app/styles/QuickActionsCard.css';\r\nimport AnimatedPulsingDot from '../../components/AnimatedPulsingDot';\r\n\r\ninterface QuickActionsCardProps {\r\n  title: string;\r\n  icon: string;\r\n  isDarkMode: boolean;\r\n  onClick: () => void;\r\n  iconColor?: string;\r\n  selected?: boolean;\r\n  confirmed?: boolean;\r\n  disabled?: boolean;\r\n  style?: React.CSSProperties;\r\n  orientation?: 'row' | 'column';\r\n  alwaysShowText?: boolean;\r\n  showPulsingDot?: boolean;\r\n  panelActive?: boolean;\r\n}\r\n\r\n// Icon mapping with outline/filled pairs\r\ntype IconComponent = React.ComponentType<{ style?: React.CSSProperties; className?: string }>;\r\n\r\nconst CalendarDayIcon: IconComponent = (props) => {\r\n  const safeProps = props ?? {};\r\n  const { style, className } = safeProps;\r\n  return <Icon iconName=\"CalendarDay\" style={style} className={className} />;\r\n};\r\n\r\nconst iconMap: Record<string, { outline: IconComponent; filled: IconComponent }> = {\r\n  Accept: { outline: FaRegCheckSquare, filled: FaCheckSquare },\r\n  Checklist: { outline: FaRegCheckSquare, filled: FaCheckSquare },\r\n  Comment: { outline: MdSmartphone, filled: FaMobileAlt },\r\n  Calendar: { outline: CalendarDayIcon, filled: CalendarDayIcon },\r\n  CalendarCheck: { outline: FaRegUser, filled: FaUser },\r\n  Room: { outline: MdOutlineEventSeat, filled: MdEventSeat },\r\n  Building: { outline: FaRegBuilding, filled: FaBuilding },\r\n  Plus: { outline: AiOutlinePlus, filled: AiFillPlusSquare },\r\n  Phone: { outline: MdSmartphone, filled: FaMobileAlt },\r\n  Leave: { outline: FaUmbrellaBeach, filled: FaUmbrellaBeach },\r\n  PalmTree: { outline: FaUmbrellaBeach, filled: FaUmbrellaBeach },\r\n  OpenFile: { outline: FaRegFolder, filled: FaFolder },\r\n  IdCheck: { outline: FaRegIdBadge, filled: FaIdBadge },\r\n  Assessment: { outline: MdOutlineAssessment, filled: MdAssessment },\r\n  KnowledgeArticle: { outline: MdOutlineArticle, filled: MdArticle },\r\n  CityNext: { outline: MdOutlineLocationCity, filled: MdLocationCity },\r\n  ConstructionCone: { outline: MdOutlineConstruction, filled: MdConstruction },\r\n  Presentation: { outline: MdOutlineSlideshow, filled: MdSlideshow },\r\n};\r\n\r\n// Export function to get filled icon for panel headers\r\nexport const getQuickActionIcon = (iconName: string): React.ComponentType<any> | null => {\r\n  const mapping = iconMap[iconName];\r\n  if (!mapping) {\r\n    console.log(`❌ No mapping found for icon: ${iconName}`);\r\n    return null;\r\n  }\r\n  \r\n  const IconComponent = mapping.filled;\r\n  \r\n  console.log(`🔍 Processing icon \"${iconName}\":`, {\r\n    type: typeof IconComponent,\r\n    isFunction: typeof IconComponent === 'function',\r\n    hasDefault: IconComponent && typeof IconComponent === 'object' && (IconComponent as any).default,\r\n    iconComponent: IconComponent\r\n  });\r\n  \r\n  // React Icons are functions, but might be wrapped differently in different environments\r\n  if (typeof IconComponent === 'function') {\r\n    return IconComponent;\r\n  }\r\n  \r\n  // Try to get the default export if it's an object\r\n  if (IconComponent && typeof IconComponent === 'object' && (IconComponent as any).default) {\r\n    const defaultIcon = (IconComponent as any).default;\r\n    console.log(`🔧 Using default export for \"${iconName}\":`, typeof defaultIcon);\r\n    return defaultIcon;\r\n  }\r\n  \r\n  // If still not a function, return null\r\n  console.log(`❌ Could not resolve icon component for \"${iconName}\"`);\r\n  return null;\r\n};\r\n\r\nconst QuickActionsCard: React.FC<QuickActionsCardProps> = ({\r\n  title,\r\n  icon,\r\n  isDarkMode,\r\n  onClick,\r\n  selected = false,\r\n  disabled = false,\r\n  style = {},\r\n  orientation = 'row',\r\n  alwaysShowText = false,\r\n  showPulsingDot = false,\r\n  panelActive = false,\r\n}) => {\r\n  const [hovered, setHovered] = React.useState(false);\r\n  const [showLabel, setShowLabel] = React.useState(false);\r\n  const [forceUpdate, setForceUpdate] = React.useState(0);\r\n\r\n  // Get icon components\r\n  const getIcons = (iconName: string) => {\r\n    const mapping = iconMap[iconName];\r\n    if (mapping) {\r\n      return {\r\n        OutlineIcon: mapping.outline,\r\n        FilledIcon: mapping.filled,\r\n      };\r\n    }\r\n    // Fallback\r\n    return {\r\n      OutlineIcon: FaRegCheckSquare,\r\n      FilledIcon: FaCheckSquare,\r\n    };\r\n  };\r\n\r\n  const { OutlineIcon, FilledIcon } = getIcons(icon);\r\n\r\n  // Initialize showLabel based on alwaysShowText\r\n  React.useEffect(() => {\r\n    setShowLabel(alwaysShowText);\r\n  }, [alwaysShowText]);\r\n\r\n  // Dynamic classes\r\n  const cardClasses = [\r\n    'quickActionCard',\r\n    isDarkMode ? 'dark-mode' : 'light-mode',\r\n    selected && 'selected',\r\n    orientation === 'column' && 'vertical',\r\n    showLabel && 'show-label',\r\n    !showLabel && 'labels-locked',\r\n    hovered && 'hovered',\r\n    disabled && 'disabled',\r\n    panelActive && 'panel-active'\r\n  ].filter(Boolean).join(' ');\r\n\r\n  const iconStyle = {\r\n    fontSize: 15, // Match immediate actions icon size\r\n    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={cardClasses}\r\n      onClick={disabled ? undefined : onClick}\r\n      role=\"button\"\r\n      tabIndex={disabled ? -1 : 0}\r\n      style={{...style, transform: `translateZ(${forceUpdate}px)`}}\r\n      onMouseEnter={() => {\r\n        setHovered(true);\r\n        if (!alwaysShowText) {\r\n          setShowLabel(true);\r\n        }\r\n        setForceUpdate(prev => prev + 1);\r\n      }}\r\n      onMouseLeave={() => {\r\n        setHovered(false);\r\n        if (!alwaysShowText) {\r\n          setShowLabel(false);\r\n        }\r\n        setForceUpdate(prev => prev + 1);\r\n      }}\r\n      onKeyPress={(e) => {\r\n        if (!disabled && (e.key === 'Enter' || e.key === ' ')) {\r\n          onClick();\r\n        }\r\n      }}\r\n      data-action={title}\r\n    >\r\n      {/* Icon container */}\r\n      <div className=\"quick-action-icon\">\r\n        <OutlineIcon className=\"icon-outline\" style={iconStyle} />\r\n        <FilledIcon className=\"icon-filled\" style={iconStyle} />\r\n      </div>\r\n\r\n      {/* Label */}\r\n      <span className=\"quick-action-label\">\r\n        {title}\r\n        {showPulsingDot && (\r\n          <AnimatedPulsingDot \r\n            show={showPulsingDot} \r\n            size={6} \r\n            animationDuration={350} \r\n            style={{ marginLeft: 6 }}\r\n          />\r\n        )}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuickActionsCard;","import React from 'react';\r\n// Modern QuickActionsBar with professional animations and no layout jolts\r\nimport { mergeStyles, Icon } from '@fluentui/react';\r\nimport QuickActionsCard from './QuickActionsCard';\r\nimport { colours } from '../../app/styles/colours';\r\nimport ToggleSwitch from '../../components/ToggleSwitch';\r\n\r\ninterface QuickAction {\r\n    title: string;\r\n    icon: string;\r\n}\r\n\r\ninterface QuickActionsBarProps {\r\n    isDarkMode: boolean;\r\n    quickActions: QuickAction[];\r\n    handleActionClick: (action: QuickAction) => void;\r\n    currentUserConfirmed: boolean;\r\n    highlighted?: boolean;\r\n    resetSelectionRef?: React.MutableRefObject<(() => void) | null>;\r\n    panelActive?: boolean;\r\n    seamless?: boolean;\r\n    userDisplayName?: string;\r\n    userIdentifier?: string;\r\n    onToggleTheme?: () => void;\r\n}\r\n\r\nconst ACTION_BAR_HEIGHT = 30; // More compact header height\r\n\r\nconst quickLinksStyle = (isDarkMode: boolean, highlighted: boolean, seamless: boolean) =>\r\n    mergeStyles({\r\n        // Slightly lighter than CustomTabs nav bar for visual hierarchy\r\n        background: isDarkMode\r\n            ? 'linear-gradient(135deg, #081A36 0%, #0A1E3D 100%)'\r\n            : `linear-gradient(135deg, #FFFFFF 0%, ${colours.light.grey} 100%)`,\r\n\r\n        // Hairline borders top/bottom for structure (omit when seamless)\r\n        borderTop: seamless ? 'none' : `1px solid ${isDarkMode ? 'rgba(255,255,255,0.06)' : 'rgba(6,23,51,0.06)'}`,\r\n        borderBottom: seamless ? 'none' : `1px solid ${isDarkMode ? 'rgba(0,0,0,0.35)' : 'rgba(6,23,51,0.08)'}`,\r\n        \r\n    // Remove backdrop blur for crisp overlay\r\n    backdropFilter: 'none',\r\n        \r\n        // Professional shadows (removed when seamless)\r\n        boxShadow: seamless\r\n            ? 'none'\r\n            : (isDarkMode\r\n                ? '0 4px 6px rgba(0, 0, 0, 0.30)'\r\n                : '0 4px 6px rgba(6, 23, 51, 0.07)'),\r\n        \r\n        // Layout stability - padding with more vertical spacing above and below\r\n        // Align content to left (remove excessive left padding)\r\n        padding: '8px 10px',\r\n        minHeight: ACTION_BAR_HEIGHT,\r\n        height: 46, // Even more compact height\r\n    transition: 'all 0.35s cubic-bezier(0.25, 0.8, 0.25, 1)',\r\n        \r\n        // Flex layout: row so content reveals inline to the right of the label\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        gap: 8,\r\n\r\n        // Root should not scroll horizontally; the chip row will handle its own overflow\r\n        overflowX: 'hidden',\r\n        overflowY: 'hidden',\r\n        \r\n        // Position and layering\r\n        // Render inline within Navigator without sticky offset so it touches CustomTabs\r\n        position: 'relative',\r\n        zIndex: 200,\r\n        \r\n        // More compact rounding\r\n        borderRadius: 0,\r\n\r\n        // Full-bleed: negate Navigator padding (Navigator has ~12px X and ~8px Y padding)\r\n        // This makes the background span edge-to-edge and visually touch the tabs above.\r\n        marginLeft: -12,\r\n        marginRight: -12,\r\n        width: 'calc(100% + 24px)',\r\n        marginTop: -8,\r\n        \r\n        // Layout containment for performance\r\n        contain: 'layout style',\r\n        \r\n        // Highlighted state with smooth scaling\r\n        ...(highlighted && !seamless && {\r\n            transform: 'scale(1.0025)',\r\n            filter: 'brightness(1.02)',\r\n            boxShadow: isDarkMode\r\n                ? '0 6px 14px rgba(0, 0, 0, 0.28)'\r\n                : '0 6px 14px rgba(6, 23, 51, 0.10)',\r\n        }),\r\n        \r\n        // Hide scrollbars while maintaining functionality\r\n        selectors: {\r\n            '::-webkit-scrollbar': {\r\n                display: 'none',\r\n            },\r\n        },\r\n        \r\n        // Responsive design\r\n        '@media (max-width: 900px)': {\r\n            padding: '4px 16px',\r\n            gap: '4px',\r\n        },\r\n        '@media (max-width: 600px)': {\r\n            padding: '4px 12px',\r\n            gap: '2px',\r\n        },\r\n    });\r\n\r\nconst QuickActionsBar: React.FC<QuickActionsBarProps> = ({\r\n    isDarkMode,\r\n    quickActions,\r\n    handleActionClick,\r\n    currentUserConfirmed,\r\n    highlighted = false,\r\n    resetSelectionRef,\r\n    panelActive = false,\r\n    seamless = false,\r\n    userDisplayName,\r\n    userIdentifier,\r\n    onToggleTheme,\r\n}) => {\r\n    const [selected, setSelected] = React.useState<string | null>(null);\r\n    const [isLoading, setIsLoading] = React.useState<boolean>(false);\r\n    const [collapsed, setCollapsed] = React.useState<boolean>(true);\r\n    const [labelsExpanded, setLabelsExpanded] = React.useState<boolean>(false);\r\n    const [showGreeting, setShowGreeting] = React.useState<boolean>(false);\r\n    const iconRailWidth = React.useMemo(() => {\r\n        const chipCount = quickActions.length;\r\n        if (chipCount === 0) {\r\n            return 0;\r\n        }\r\n        const chipWidth = 44;\r\n        const horizontalPadding = 8;\r\n        return chipCount * chipWidth + horizontalPadding;\r\n    }, [quickActions.length]);\r\n    const containerRef = React.useRef<HTMLDivElement>(null);\r\n    const barRef = React.useRef<HTMLDivElement>(null);\r\n    const headerRef = React.useRef<HTMLButtonElement>(null);\r\n    const hasTriggeredGreetingRef = React.useRef<string | null>(null);\r\n\r\n    const greetingStorageKey = React.useMemo(() => {\r\n        if (!userDisplayName && !userIdentifier) {\r\n            return null;\r\n        }\r\n        const identifier = (userIdentifier || userDisplayName || '').toLowerCase().trim();\r\n        if (!identifier) {\r\n            return null;\r\n        }\r\n        return `quickActionsGreeting:${identifier}`;\r\n    }, [userDisplayName, userIdentifier]);\r\n\r\n    const greetingLabel = React.useMemo(() => {\r\n        if (!userDisplayName) {\r\n            return null;\r\n        }\r\n        const trimmed = userDisplayName.trim();\r\n        if (!trimmed) {\r\n            return null;\r\n        }\r\n        const firstToken = trimmed.split(' ')[0];\r\n        const capitalised = firstToken.charAt(0).toUpperCase() + firstToken.slice(1);\r\n        return `Hi ${capitalised}!`;\r\n    }, [userDisplayName]);\r\n\r\n    const greetingVisible = showGreeting && Boolean(greetingLabel);\r\n\r\n    React.useEffect(() => {\r\n        if (!greetingStorageKey || !greetingLabel) {\r\n            return;\r\n        }\r\n        if (hasTriggeredGreetingRef.current === greetingStorageKey) {\r\n            return;\r\n        }\r\n\r\n        let alreadySeen = false;\r\n        try {\r\n            alreadySeen = window.sessionStorage.getItem(greetingStorageKey) === 'seen';\r\n        } catch {\r\n            alreadySeen = false;\r\n        }\r\n\r\n        if (!alreadySeen) {\r\n            hasTriggeredGreetingRef.current = greetingStorageKey;\r\n            setShowGreeting(true);\r\n            try {\r\n                window.sessionStorage.setItem(greetingStorageKey, 'seen');\r\n            } catch {\r\n                // Ignore storage failures\r\n            }\r\n        }\r\n    }, [greetingLabel, greetingStorageKey]);\r\n\r\n    React.useEffect(() => {\r\n        if (!showGreeting) {\r\n            return;\r\n        }\r\n        const timeout = window.setTimeout(() => {\r\n            setShowGreeting(false);\r\n        }, 4200);\r\n\r\n        return () => {\r\n            window.clearTimeout(timeout);\r\n        };\r\n    }, [showGreeting]);\r\n\r\n    React.useEffect(() => {\r\n        if (!collapsed) {\r\n            setShowGreeting(false);\r\n        }\r\n    }, [collapsed]);\r\n\r\n    // Expose reset function via ref, but don't reset if panel is still active\r\n    React.useEffect(() => {\r\n        if (resetSelectionRef) {\r\n            resetSelectionRef.current = () => {\r\n                if (!panelActive) {\r\n                    setSelected(null);\r\n                }\r\n            };\r\n        }\r\n    }, [resetSelectionRef, panelActive]);\r\n\r\n    // Reset selection when component unmounts\r\n    React.useEffect(() => {\r\n        return () => {\r\n            setSelected(null);\r\n        };\r\n    }, []);\r\n\r\n    const evaluateLabelSpace = React.useCallback(() => {\r\n        if (collapsed) {\r\n            return;\r\n        }\r\n\r\n        const chipCount = quickActions.length;\r\n        if (chipCount === 0) {\r\n            setLabelsExpanded(false);\r\n            return;\r\n        }\r\n\r\n        const barWidth = barRef.current?.clientWidth ?? 0;\r\n        const headerWidth = headerRef.current?.getBoundingClientRect().width ?? 0;\r\n        const structuralAllowance = 40; // gaps + padding within the bar\r\n        const backControlAllowance = 32; // collapse button footprint\r\n\r\n        const usableWidth = Math.max(0, barWidth - headerWidth - structuralAllowance - backControlAllowance);\r\n        const availablePerChip = usableWidth / chipCount;\r\n        const nextExpanded = availablePerChip >= 120;\r\n        setLabelsExpanded((prev) => (prev === nextExpanded ? prev : nextExpanded));\r\n    }, [collapsed, quickActions.length]);\r\n\r\n    React.useLayoutEffect(() => {\r\n        if (collapsed) {\r\n            return undefined;\r\n        }\r\n\r\n        evaluateLabelSpace();\r\n        const frameId = window.requestAnimationFrame(() => {\r\n            window.requestAnimationFrame(evaluateLabelSpace);\r\n        });\r\n        const settleTimer = window.setTimeout(evaluateLabelSpace, 220);\r\n\r\n        const handleResize = () => evaluateLabelSpace();\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        const observer = new ResizeObserver(() => evaluateLabelSpace());\r\n        if (containerRef.current) {\r\n            observer.observe(containerRef.current);\r\n        }\r\n\r\n        return () => {\r\n            window.cancelAnimationFrame(frameId);\r\n            window.clearTimeout(settleTimer);\r\n            window.removeEventListener('resize', handleResize);\r\n            observer.disconnect();\r\n        };\r\n    }, [collapsed, evaluateLabelSpace]);\r\n\r\n    const onCardClick = (action: QuickAction) => {\r\n        // Smooth loading state transition\r\n        setSelected(action.title);\r\n        setIsLoading(true);\r\n        setShowGreeting(false);\r\n        \r\n        // Professional loading feedback\r\n        setTimeout(() => {\r\n            handleActionClick(action);\r\n            setIsLoading(false);\r\n        }, 150); // Brief loading state for smooth UX\r\n    };\r\n\r\n    // Optimized title mapping for better UX\r\n    const getShortTitle = (title: string) => {\r\n        switch (title) {\r\n            case 'Create a Task':\r\n                return 'New Task';\r\n            case 'Save Telephone Note':\r\n                return 'Attendance Note';\r\n            case 'Request Annual Leave':\r\n                return 'Book Leave';\r\n            case 'Update Attendance':\r\n                return 'Attendance';\r\n            case 'Confirm Attendance':\r\n                return 'Confirm Attendance';\r\n            case 'Book Space':\r\n                return 'Book Room';\r\n            default:\r\n                return title;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            ref={barRef}\r\n            className={quickLinksStyle(isDarkMode, highlighted, seamless)}\r\n            role=\"region\"\r\n            aria-label=\"Quick actions\"\r\n        >\r\n            {/* Header: compact label with chevron toggle (chevron to the right) */}\r\n            <button\r\n                ref={headerRef}\r\n                type=\"button\"\r\n                aria-expanded={!collapsed}\r\n                onClick={() => {\r\n                    setCollapsed((c) => !c);\r\n                }}\r\n                style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    gap: 6,\r\n                    height: ACTION_BAR_HEIGHT,\r\n                    width: 'auto',\r\n                    padding: '0 2px',\r\n                    background: 'transparent',\r\n                    border: 'none',\r\n                    color: isDarkMode ? '#E5E7EB' : '#0F172A',\r\n                    fontWeight: 600,\r\n                    cursor: 'pointer',\r\n                    textAlign: 'left',\r\n                    flex: '0 0 auto',\r\n                    minWidth: 110,\r\n                }}\r\n            >\r\n                <span style={{ fontSize: 13 }}>Quick actions</span>\r\n                <Icon\r\n                    iconName=\"DoubleChevronRight\"\r\n                    styles={{ root: {\r\n                        transition: 'transform 200ms ease, opacity 160ms ease',\r\n                        transform: collapsed ? 'translateX(0)' : 'translateX(6px)',\r\n                        opacity: collapsed ? 1 : 0,\r\n                        fontSize: 14,\r\n                        color: isDarkMode ? '#9CA3AF' : '#64748B',\r\n                    }}}\r\n                />\r\n            </button>\r\n\r\n            {greetingLabel && (\r\n                <div\r\n                    aria-live=\"polite\"\r\n                    role=\"status\"\r\n                    style={{\r\n                        position: 'absolute',\r\n                        right: seamless ? 12 : 10,\r\n                        top: '50%',\r\n                        transform: greetingVisible\r\n                            ? 'translateY(-50%) translateX(0)'\r\n                            : 'translateY(-50%) translateX(42px)',\r\n                        opacity: greetingVisible ? 1 : 0,\r\n                        transition: 'opacity 200ms ease, transform 260ms cubic-bezier(0.33, 1, 0.68, 1)',\r\n                        color: isDarkMode ? '#E5E7EB' : '#0F172A',\r\n                        fontSize: 13,\r\n                        fontWeight: 600,\r\n                        letterSpacing: 0.2,\r\n                        whiteSpace: 'nowrap',\r\n                        pointerEvents: 'none',\r\n                        textShadow: isDarkMode ? '0 1px 2px rgba(0,0,0,0.35)' : 'none',\r\n                    }}\r\n                >\r\n                    {greetingLabel}\r\n                </div>\r\n            )}\r\n\r\n            {/* Content: action chips list (expands inline to the right) */}\r\n            <div\r\n                ref={containerRef}\r\n                style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    gap: 0,\r\n                    paddingTop: collapsed ? 0 : 2,\r\n                    paddingBottom: collapsed ? 0 : 2,\r\n                    flexWrap: 'nowrap',\r\n                    overflowX: 'hidden', // Hide overflow instead of scrolling\r\n                    msOverflowStyle: 'none',\r\n                    scrollbarWidth: 'none',\r\n                    flex: collapsed ? '0 0 0' : '0 1 auto',\r\n                    minWidth: 0,\r\n                    width: collapsed ? 0 : 'auto',\r\n                    maxWidth: collapsed\r\n                        ? 0\r\n                        : (labelsExpanded ? '100%' : `${iconRailWidth}px`),\r\n                    opacity: collapsed ? 0 : 1,\r\n                    pointerEvents: collapsed ? 'none' : 'auto',\r\n                    transition: 'max-width 220ms ease, flex 220ms ease, opacity 180ms ease',\r\n                    // One big container box with subtle border\r\n                    border: `1px solid ${isDarkMode ? 'rgba(255,255,255,0.1)' : 'rgba(6,23,51,0.1)'}`,\r\n                    borderColor: collapsed ? 'transparent' : undefined,\r\n                    borderRadius: collapsed ? 0 : 8,\r\n                    padding: collapsed ? 0 : '0px 4px', // Horizontal padding only; vertical handled above\r\n                    background: 'transparent', // No fill\r\n                }}\r\n            >\r\n                {/* Back control when expanded */}\r\n                {!collapsed && (\r\n                    <button\r\n                        type=\"button\"\r\n                        aria-label=\"Collapse quick actions\"\r\n                        onClick={() => setCollapsed(true)}\r\n                        style={{\r\n                            display: 'inline-flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            width: 24,\r\n                            height: 24,\r\n                            border: 'none',\r\n                            borderRadius: 4,\r\n                            background: 'transparent',\r\n                            color: isDarkMode ? '#9CA3AF' : '#64748B',\r\n                            cursor: 'pointer',\r\n                            marginRight: 2,\r\n                        }}\r\n                    >\r\n                        <Icon iconName=\"ChevronLeft\" styles={{ root: { fontSize: 14 } }} />\r\n                    </button>\r\n                )}\r\n\r\n                {!collapsed && quickActions.map((action, index) => (\r\n                    <QuickActionsCard\r\n                        key={action.title}\r\n                        title={getShortTitle(action.title)}\r\n                        icon={action.icon}\r\n                        isDarkMode={isDarkMode}\r\n                        onClick={() => onCardClick(action)}\r\n                        iconColor={colours.cta}\r\n                        selected={selected === action.title}\r\n                        confirmed={action.title === 'Confirm Attendance' || action.title === 'Update Attendance' ? currentUserConfirmed : undefined}\r\n                        disabled={isLoading && selected !== action.title}\r\n                        panelActive={panelActive && selected === action.title}\r\n                        alwaysShowText={labelsExpanded}\r\n                        style={{\r\n                            '--card-index': index,\r\n                            // Remove individual boxes - transparent background, no border, no shadow\r\n                            '--card-bg': 'transparent',\r\n                            '--card-border': 'transparent',\r\n                            '--card-hover': isDarkMode \r\n                                ? 'rgba(255,255,255,0.08)'\r\n                                : 'rgba(6,23,51,0.08)',\r\n                            '--card-selected': isDarkMode \r\n                                ? 'rgba(255,255,255,0.12)'\r\n                                : 'rgba(6,23,51,0.12)',\r\n                            '--card-shadow': 'none',\r\n                            height: '32px',\r\n                            opacity: (isLoading && selected !== action.title) ? 0.6 : 1,\r\n                            filter: (isLoading && selected === action.title) \r\n                                ? 'brightness(1.06)'\r\n                                : 'none',\r\n                            borderRadius: 6, // Subtle rounding for hover area\r\n                            // Cascading animation\r\n                            animation: `quickActionCascade 0.3s ease-out ${index * 0.05}s both`,\r\n                            transform: 'translateX(-10px)',\r\n                            animationFillMode: 'forwards',\r\n                        } as React.CSSProperties}\r\n                    />\r\n                ))}\r\n            </div>\r\n\r\n            {/* Loading overlay for smooth state transitions */}\r\n            {isLoading && (\r\n                <div\r\n                    style={{\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        background: isDarkMode \r\n                            ? 'linear-gradient(135deg, rgba(45, 45, 45, 0.25) 0%, rgba(58, 58, 58, 0.18) 100%)'\r\n                            : 'linear-gradient(135deg, rgba(255, 255, 255, 0.25) 0%, rgba(248, 250, 252, 0.18) 100%)',\r\n                        backdropFilter: 'blur(1px)',\r\n                        pointerEvents: 'none',\r\n                        transition: 'opacity 0.2s ease',\r\n                    }}\r\n                />\r\n            )}\r\n\r\n            {/* Dark mode toggle on right side (deferred until greeting completes to avoid overlap) */}\r\n            {onToggleTheme && !greetingVisible && (\r\n                <div\r\n                    style={{\r\n                        marginLeft: 'auto',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        gap: 8,\r\n                        paddingLeft: 12,\r\n                        borderLeft: `1px solid ${isDarkMode ? 'rgba(255,255,255,0.1)' : 'rgba(6,23,51,0.1)'}`,\r\n                    }}\r\n                >\r\n                    <svg\r\n                        width=\"16\"\r\n                        height=\"16\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        fill=\"none\"\r\n                        stroke={isDarkMode ? '#E5E7EB' : '#0F172A'}\r\n                        strokeWidth=\"2\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        style={{ flexShrink: 0 }}\r\n                    >\r\n                        {isDarkMode ? (\r\n                            // Moon icon\r\n                            <path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\" />\r\n                        ) : (\r\n                            // Sun icon\r\n                            <>\r\n                                <circle cx=\"12\" cy=\"12\" r=\"5\" />\r\n                                <line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\" />\r\n                                <line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\" />\r\n                                <line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\" />\r\n                                <line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\" />\r\n                                <line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\" />\r\n                                <line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\" />\r\n                                <line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\" />\r\n                                <line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\" />\r\n                            </>\r\n                        )}\r\n                    </svg>\r\n                    <span\r\n                        style={{\r\n                            fontSize: 13,\r\n                            fontWeight: 500,\r\n                            color: isDarkMode ? '#E5E7EB' : '#0F172A',\r\n                            whiteSpace: 'nowrap',\r\n                        }}\r\n                    >\r\n                        {isDarkMode ? 'Dark' : 'Light'}\r\n                    </span>\r\n                    <ToggleSwitch\r\n                        checked={isDarkMode}\r\n                        onChange={onToggleTheme}\r\n                        ariaLabel=\"Toggle dark mode\"\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuickActionsBar;\r\n","import React from 'react';\r\nimport {\r\n  FaFolder,\r\n  FaFolderOpen,\r\n  FaIdBadge,\r\n  FaUserCheck,\r\n  FaMobileAlt,\r\n  FaShieldAlt,\r\n  FaPaperPlane,\r\n  FaCheck,\r\n  FaUmbrellaBeach,\r\n  FaEdit,\r\n} from 'react-icons/fa';\r\nimport {\r\n  MdAssessment,\r\n  MdArticle,\r\n  MdEventSeat,\r\n  MdSlideshow,\r\n  MdFactCheck,\r\n} from 'react-icons/md';\r\nimport { Icon } from '@fluentui/react';\r\nimport { colours } from '../../app/styles/colours';\r\nimport AnimatedPulsingDot from '../../components/AnimatedPulsingDot';\r\n\r\n/**\r\n * Visual severity category for immediate actions.\r\n */\r\nexport type ImmediateActionCategory = 'critical' | 'standard' | 'success';\r\n\r\n/**\r\n * A compact, theme-aware chip for Immediate Actions.\r\n * Distinct from QuickActionsCard (used by Quick Actions) to allow independent styling and behavior.\r\n */\r\nexport interface ImmediateActionChipProps {\r\n  title: string;\r\n  icon: string;\r\n  isDarkMode: boolean;\r\n  onClick: () => void;\r\n  disabled?: boolean;\r\n  subtitle?: string;\r\n  count?: number;\r\n  category?: ImmediateActionCategory;\r\n}\r\n\r\n// Minimal icon mapping for immediate actions domain\r\ntype IconComponent = React.ComponentType<{ style?: React.CSSProperties; className?: string }>;\r\n\r\nconst CalendarDayIcon: IconComponent = (props) => {\r\n  const safeProps = props ?? {};\r\n  const { style, className } = safeProps;\r\n  return <Icon iconName=\"CalendarDay\" style={style} className={className} />;\r\n};\r\n\r\nconst chipIconMap: Record<string, IconComponent> = {\r\n  // Generic\r\n  OpenFile: FaFolderOpen,\r\n  Folder: FaFolder,\r\n  Phone: FaMobileAlt,\r\n\r\n  // Attendance / Time\r\n  Calendar: CalendarDayIcon,\r\n  CalendarCheck: CalendarDayIcon,\r\n  Accept: FaCheck,\r\n\r\n  // Instructions\r\n  ContactCard: FaIdBadge,\r\n  Verify: FaUserCheck,\r\n  IdCheck: FaIdBadge,\r\n  Shield: FaShieldAlt,\r\n  Send: FaPaperPlane,\r\n  ReviewRequestMirrored: MdFactCheck,\r\n\r\n  // Enquiries / Pitches\r\n  Presentation: MdSlideshow,\r\n\r\n  // Annual Leave / Approvals\r\n  PalmTree: FaUmbrellaBeach,\r\n  Edit: FaEdit,\r\n\r\n  // Knowledge & Rooms\r\n  KnowledgeArticle: MdArticle,\r\n  Room: MdEventSeat,\r\n\r\n};\r\n\r\nconst getChipIcon = (name: string): React.ComponentType<any> => {\r\n  return chipIconMap[name] || FaFolder;\r\n};\r\n\r\nexport const ImmediateActionChip: React.FC<ImmediateActionChipProps> = ({\r\n  title,\r\n  icon,\r\n  isDarkMode,\r\n  onClick,\r\n  disabled = false,\r\n  subtitle,\r\n  count,\r\n  category = 'critical',\r\n}) => {\r\n  const [showLabel, setShowLabel] = React.useState(true);\r\n  const chipRef = React.useRef<HTMLButtonElement>(null);\r\n  const Icon = getChipIcon(icon);\r\n\r\n  const baseBg = isDarkMode ? colours.dark.cardBackground : colours.light.sectionBackground;\r\n  const hoverBg = isDarkMode ? 'rgba(54,144,206,0.12)' : '#eef5ff';\r\n  const textColor = isDarkMode ? colours.dark.text : colours.light.text;\r\n  const borderCol = isDarkMode ? colours.dark.border : '#e5e7eb';\r\n\r\n  // Check available space and hide labels if container is too narrow\r\n  React.useEffect(() => {\r\n    const checkSpace = () => {\r\n      if (!chipRef.current?.parentElement) return;\r\n      \r\n      const containerWidth = chipRef.current.parentElement.offsetWidth;\r\n      const chipCount = chipRef.current.parentElement.children.length;\r\n      \r\n      // Estimate: icon + dot + padding = ~50px, full chip with text = ~120px\r\n      const availablePerChip = containerWidth / chipCount;\r\n      const shouldShowLabel = availablePerChip > 120; // Higher threshold to avoid truncated labels\r\n      \r\n      setShowLabel(shouldShowLabel);\r\n    };\r\n\r\n    checkSpace();\r\n    window.addEventListener('resize', checkSpace);\r\n    \r\n    // Also check when parent container changes\r\n    const observer = new ResizeObserver(checkSpace);\r\n    if (chipRef.current?.parentElement) {\r\n      observer.observe(chipRef.current.parentElement);\r\n    }\r\n    \r\n    return () => {\r\n      window.removeEventListener('resize', checkSpace);\r\n      observer.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const accentColours: Record<ImmediateActionCategory, string> = {\r\n    critical: colours.red,\r\n    standard: colours.highlight,\r\n    success: colours.green,\r\n  };\r\n  const accentColour = accentColours[category] ?? colours.red;\r\n\r\n  return (\r\n    <button\r\n      ref={chipRef}\r\n      type=\"button\"\r\n      aria-label={subtitle ? `${title}: ${subtitle}` : title}\r\n      onClick={disabled ? undefined : onClick}\r\n      disabled={disabled}\r\n      className=\"immediate-action-chip\"\r\n      style={{\r\n        display: 'inline-flex',\r\n        alignItems: 'center',\r\n        gap: showLabel ? 6 : 4,\r\n        padding: showLabel ? '6px 10px' : '6px 8px',\r\n        height: 32,\r\n        minWidth: 32,\r\n        borderRadius: 8,\r\n        background: baseBg,\r\n        color: textColor,\r\n        border: `1px solid ${borderCol}`,\r\n        boxShadow: 'none',\r\n        cursor: disabled ? 'not-allowed' : 'pointer',\r\n        opacity: disabled ? 0.6 : 1,\r\n        transition: 'transform 120ms ease, background-color 140ms ease, border-color 140ms ease, gap 200ms ease, padding 200ms ease',\r\n      }}\r\n      onKeyDown={(e) => {\r\n        if (!disabled && (e.key === 'Enter' || e.key === ' ')) {\r\n          e.preventDefault();\r\n          onClick();\r\n        }\r\n      }}\r\n      onMouseEnter={(e) => {\r\n        if (disabled) return;\r\n        const button = e.currentTarget as HTMLButtonElement;\r\n        button.style.transform = 'translateY(-1px)';\r\n        button.style.background = hoverBg;\r\n        button.style.borderColor = colours.highlight;\r\n        button.style.color = '#3690CE'; // Blue highlight on hover for text and icons\r\n      }}\r\n      onMouseLeave={(e) => {\r\n        const button = e.currentTarget as HTMLButtonElement;\r\n        button.style.transform = 'translateY(0)';\r\n        button.style.background = baseBg;\r\n        button.style.borderColor = borderCol;\r\n        button.style.color = textColor; // Reset to original text color\r\n      }}\r\n    >\r\n      <AnimatedPulsingDot\r\n        show\r\n        color={accentColour}\r\n        size={6}\r\n        animationDuration={360}\r\n        style={{ flexShrink: 0 }}\r\n      />\r\n      <Icon style={{ fontSize: 15, opacity: 0.9 }} />\r\n      {showLabel && (\r\n        <>\r\n          <span style={{ \r\n            fontSize: 13, \r\n            fontWeight: 500, \r\n            opacity: showLabel ? 1 : 0,\r\n            width: showLabel ? 'auto' : 0,\r\n            overflow: 'hidden',\r\n            transition: 'opacity 200ms ease, width 200ms ease',\r\n            whiteSpace: 'nowrap'\r\n          }}>\r\n            {title}\r\n          </span>\r\n          {subtitle && (\r\n            <span style={{ \r\n              fontSize: 11, \r\n              opacity: showLabel ? 0.8 : 0,\r\n              transition: 'opacity 200ms ease'\r\n            }}>\r\n              {' '}{subtitle}\r\n            </span>\r\n          )}\r\n          {typeof count === 'number' && (\r\n            <span\r\n              aria-label={`count ${count}`}\r\n              style={{\r\n                marginLeft: 6,\r\n                minWidth: 16,\r\n                height: 16,\r\n                padding: '0 5px',\r\n                borderRadius: 8,\r\n                background: isDarkMode ? 'rgba(14,165,233,0.25)' : '#e8f1ff',\r\n                color: isDarkMode ? '#dff6ff' : '#0b3d62',\r\n                fontSize: 11,\r\n                fontWeight: 700,\r\n                display: 'inline-flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                opacity: showLabel ? 1 : 0,\r\n                transition: 'opacity 200ms ease',\r\n              }}\r\n            >\r\n              {count}\r\n            </span>\r\n          )}\r\n        </>\r\n      )}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ImmediateActionChip;\r\n","import React, { useEffect, useState } from 'react';\r\n// invisible change 2\r\nimport { Spinner, SpinnerSize, mergeStyles, keyframes } from '@fluentui/react';\r\nimport { FaCheck } from 'react-icons/fa';\r\nimport ImmediateActionChip, { ImmediateActionCategory } from './ImmediateActionChip';\r\nimport { colours } from '../../app/styles/colours';\r\n\r\ninterface Action {\r\n    title: string;\r\n    onClick: () => void;\r\n    icon: string;\r\n    disabled?: boolean; // For greyed out production features\r\n    category?: ImmediateActionCategory;\r\n}\r\n\r\ninterface ImmediateActionsBarProps {\r\n    isDarkMode: boolean;\r\n    immediateActionsReady: boolean;\r\n    immediateActionsList: Action[];\r\n    highlighted?: boolean;\r\n    seamless?: boolean;\r\n}\r\n\r\nconst ACTION_BAR_HEIGHT = 36;\r\nconst HIDE_DELAY_MS = 3000; // Auto-hide delay when there is nothing to action\r\n\r\n// Distinct container for immediate actions styled as an app-level tray\r\nconst immediateActionsContainerStyle = (\r\n    isDarkMode: boolean,\r\n    highlighted: boolean\r\n) =>\r\n    mergeStyles({\r\n        // Position as app-level tray extending from Navigator\r\n        position: 'relative',\r\n        zIndex: 10, // Much lower z-index to avoid blocking navigation\r\n        \r\n        // Distinct tray background (darker, inkier than QuickActions in dark; softer blue tint in light)\r\n        background: isDarkMode\r\n            // Deep navy with subtle gloss to distinguish from navigator\r\n            ? 'linear-gradient(135deg, #0B1224 0%, #0F1B33 50%, #0B1328 100%)'\r\n            : 'linear-gradient(135deg, #FFFFFF 0%, #F3F7FC 100%)',\r\n        \r\n        // Subtle top hairline to separate from QuickActions while keeping a seamless feel\r\n        borderTop: isDarkMode\r\n            ? '1px solid rgba(255,255,255,0.04)'\r\n            : '1px solid rgba(6,23,51,0.06)',\r\n        borderBottom: 'none',\r\n        borderRadius: '0', // No corner rounding\r\n        \r\n        // Softer, professional shadow per style guide\r\n        boxShadow: isDarkMode\r\n            ? '0 4px 6px rgba(0, 0, 0, 0.28)'\r\n            : '0 4px 6px rgba(6, 23, 51, 0.07)',\r\n        \r\n    // Full width at app level\r\n    margin: '0',\r\n\r\n    // Layout - balanced padding above and below immediate actions\r\n    padding: '8px 10px',\r\n        transition: 'all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1)',\r\n        \r\n        // Highlighted state for notifications\r\n        ...(highlighted && {\r\n            transform: 'translateY(-1px)',\r\n            boxShadow: isDarkMode\r\n                ? '0 4px 8px rgba(54, 144, 206, 0.25)'\r\n                : '0 4px 8px rgba(54, 144, 206, 0.20)',\r\n            borderColor: isDarkMode \r\n                ? 'rgba(54, 144, 206, 0.2)' \r\n                : 'rgba(54, 144, 206, 0.15)',\r\n            background: isDarkMode\r\n                ? 'linear-gradient(135deg, #1E293B 0%, #334155 100%)'\r\n                : 'linear-gradient(135deg, #EFF6FF 0%, #DBEAFE 100%)',\r\n        }),\r\n    });\r\n\r\nconst barStyle = (\r\n    isDarkMode: boolean,\r\n    hasImmediateActions: boolean,\r\n    highlighted: boolean,\r\n    seamless: boolean\r\n) =>\r\n    mergeStyles({\r\n        // Remove background since container handles it\r\n        backgroundColor: 'transparent',\r\n        boxShadow: 'none',\r\n        border: 'none',\r\n        \r\n        // Layout\r\n        padding: '0',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n    gap: '8px',\r\n        overflowX: 'auto',\r\n        msOverflowStyle: 'none',\r\n        scrollbarWidth: 'none',\r\n        alignItems: 'center',\r\n        height: ACTION_BAR_HEIGHT,\r\n        \r\n        selectors: {\r\n            '::-webkit-scrollbar': {\r\n                display: 'none',\r\n            },\r\n        },\r\n    });\r\n\r\nconst fadeInKeyframes = keyframes({\r\n    from: { opacity: 0, transform: 'translateY(5px)' },\r\n    to: { opacity: 1, transform: 'translateY(0)' },\r\n});\r\n\r\nconst tickPopKeyframes = keyframes({\r\n    '0%': { transform: 'scale(0)', opacity: 0 },\r\n    '70%': { transform: 'scale(1.3)', opacity: 1 },\r\n    '100%': { transform: 'scale(1)', opacity: 1 },\r\n});\r\n\r\nconst noActionsClass = mergeStyles({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    // Align message with the quick action cards\r\n    justifyContent: 'flex-start',\r\n    paddingLeft: '12px',\r\n    animation: `${fadeInKeyframes} 0.3s ease-out`,\r\n});\r\n\r\nconst noActionsIconClass = mergeStyles({\r\n    width: '24px',\r\n    height: '24px',\r\n    borderRadius: '50%',\r\n    background: colours.highlight,\r\n    color: '#fff',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    fontSize: '12px',\r\n    animation: `${tickPopKeyframes} 0.3s ease`,\r\n});\r\n\r\nconst noActionsTextClass = mergeStyles({\r\n    marginLeft: '8px',\r\n    fontSize: '14px',\r\n    animation: `${fadeInKeyframes} 0.3s ease-out`,\r\n});\r\n\r\nconst ImmediateActionsBar: React.FC<ImmediateActionsBarProps> = ({\r\n    isDarkMode,\r\n    immediateActionsReady,\r\n    immediateActionsList,\r\n    highlighted = false,\r\n    seamless = false,\r\n}) => {\r\n    const [visible, setVisible] = useState(true);\r\n    const [autoHidden, setAutoHidden] = useState(false);\r\n    const computedVisible = (immediateActionsList.length > 0 || !immediateActionsReady) ? true : visible;\r\n\r\n    // Hide on scroll only when not auto-hidden and there are no actions\r\n    useEffect(() => {\r\n        const handleScroll = () => {\r\n            if (autoHidden) return; // keep hidden once auto-hidden until content changes\r\n            const threshold = ACTION_BAR_HEIGHT * 2;\r\n            if (window.scrollY > threshold) {\r\n                setVisible(false);\r\n            } else {\r\n                setVisible(true);\r\n            }\r\n        };\r\n\r\n        if (immediateActionsList.length === 0 && !autoHidden) {\r\n            window.addEventListener('scroll', handleScroll);\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('scroll', handleScroll);\r\n        };\r\n    }, [immediateActionsList, autoHidden]);\r\n\r\n    // Auto-hide the bar a few seconds after showing \"Nothing to Action\"\r\n    useEffect(() => {\r\n        let timer: number | undefined;\r\n        if (immediateActionsReady && immediateActionsList.length === 0) {\r\n            // show briefly, then hide\r\n            setAutoHidden(false);\r\n            setVisible(true);\r\n            timer = window.setTimeout(() => {\r\n                setAutoHidden(true);\r\n                setVisible(false);\r\n            }, HIDE_DELAY_MS);\r\n        } else {\r\n            // content changed (spinner or actions present) → ensure visible and reset auto-hidden\r\n            if (autoHidden) setAutoHidden(false);\r\n            setVisible(true);\r\n        }\r\n\r\n        return () => {\r\n            if (timer) window.clearTimeout(timer);\r\n        };\r\n    }, [immediateActionsReady, immediateActionsList.length]);\r\n\r\n    return (\r\n        <div\r\n            className={immediateActionsContainerStyle(isDarkMode, highlighted)}\r\n            style={{\r\n                height: computedVisible ? 'auto' : 0,\r\n                overflow: 'hidden',\r\n                opacity: computedVisible ? 1 : 0,\r\n                transform: computedVisible ? 'translateY(0)' : 'translateY(-10px)',\r\n                transition: 'height 0.3s ease, opacity 0.3s ease, transform 0.3s ease',\r\n                pointerEvents: (computedVisible && immediateActionsReady) ? 'auto' : 'none',\r\n                // When hidden (height: 0), also remove hairline and spacing to avoid visible seam in dark mode\r\n                borderTop: computedVisible ? undefined : 'none',\r\n                padding: computedVisible ? undefined : 0,\r\n                marginTop: computedVisible ? undefined : 0,\r\n                marginBottom: computedVisible ? undefined : 0,\r\n            }}\r\n        >\r\n            {/* Removed animated accent; using a static label instead */}\r\n            <div\r\n                className={barStyle(\r\n                    isDarkMode,\r\n                    immediateActionsList.length > 0,\r\n                    highlighted,\r\n                    seamless\r\n                )}\r\n            >\r\n                {!immediateActionsReady ? (\r\n                    <Spinner size={SpinnerSize.small} />\r\n                ) : immediateActionsList.length === 0 ? (\r\n                    <div className={noActionsClass}>\r\n                        <div className={noActionsIconClass}>\r\n                            <FaCheck />\r\n                        </div>\r\n                        <div className={noActionsTextClass}>Nothing to Action.</div>\r\n                    </div>\r\n                ) : (\r\n                    <>\r\n                        {immediateActionsList.map((action) => (\r\n                            <ImmediateActionChip\r\n                                key={action.title}\r\n                                title={action.title}\r\n                                icon={action.icon}\r\n                                isDarkMode={isDarkMode}\r\n                                onClick={action.onClick}\r\n                                disabled={action.disabled}\r\n                                category={action.category}\r\n                            />\r\n                        ))}\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImmediateActionsBar;\r\n","import React from 'react';\r\n// invisible change removed\r\nimport { Stack, Text, Link, Separator, Icon, TooltipHost } from '@fluentui/react';\r\nimport { mergeStyles } from '@fluentui/react';\r\nimport { colours } from '../../app/styles/colours';\r\nimport { OutstandingClientBalance, Matter } from '../../app/functionality/types';\r\n\r\ninterface OutstandingBalancesListProps {\r\n  balances: OutstandingClientBalance[];\r\n  matters: Matter[];\r\n}\r\n\r\nconst containerStyle = mergeStyles({\r\n  padding: '10px',\r\n  backgroundColor: colours.light.sectionBackground,\r\n  borderRadius: 0,\r\n  boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\r\n  marginBottom: '16px'\r\n});\r\n\r\nconst headerStyle = mergeStyles({\r\n  padding: '8px',\r\n  borderBottom: `1px solid ${colours.light.border}`,\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center'\r\n});\r\n\r\n// Matters styling\r\nconst mattersContainerStyle = mergeStyles({\r\n  padding: '4px 8px',\r\n  marginTop: '4px',\r\n  marginBottom: '4px'\r\n});\r\n\r\nconst matterLinkStyle = mergeStyles({\r\n  fontWeight: 400,\r\n  fontSize: '14px',\r\n  textDecoration: 'none',\r\n  color: colours.highlight\r\n});\r\n\r\n// Each bill row style, with alternating background; odd rows have 40% opacity grey\r\nconst getBillContainerStyle = (index: number) =>\r\n  mergeStyles({\r\n    backgroundColor: index % 2 === 0 ? '#ffffff' : 'rgba(244,244,246,0.4)',\r\n    padding: '8px',\r\n    marginTop: '8px',\r\n    borderRadius: '4px'\r\n  });\r\n\r\n// The container for the vertical payment equation\r\nconst verticalEquationStyle = mergeStyles({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'flex-end',\r\n  justifyContent: 'flex-start'\r\n});\r\n\r\nconst horizontalSeparatorStyle = mergeStyles({\r\n  margin: '4px 0',\r\n  borderTop: `1px solid ${colours.light.border}`,\r\n  width: '100%'\r\n});\r\n\r\n// Updated date style as an inline style object for individual elements\r\nconst dateTextStyle = {\r\n  color: '#555', // Dark grey for less noise\r\n  fontSize: '14px'\r\n};\r\n\r\nconst overdueStyle = mergeStyles({\r\n  color: 'red',\r\n  fontWeight: 600,\r\n  fontSize: '14px'\r\n});\r\n\r\nconst paymentStyle = mergeStyles({\r\n  fontWeight: 600,\r\n  fontSize: '14px'\r\n});\r\n\r\nconst OutstandingBalancesList: React.FC<OutstandingBalancesListProps> = ({ balances, matters }) => {\r\n  // Only include clients with a non-zero outstanding balance.\r\n  const filtered = balances.filter(item => item.total_outstanding_balance > 0);\r\n  if (filtered.length === 0) {\r\n    return <Text>No outstanding balances found.</Text>;\r\n  }\r\n\r\n  // Compute the due status (overdue/due) for a given bill.\r\n  const computeDueStatus = (bill: any): string => {\r\n    const today = new Date();\r\n    const dueDate = new Date(bill.due_at);\r\n    const diffTime = today.getTime() - dueDate.getTime();\r\n    const diffDays = Math.floor(diffTime / (1000 * 3600 * 24));\r\n    if (diffDays > 0) {\r\n      return `${diffDays} day${diffDays > 1 ? 's' : ''} overdue`;\r\n    } else if (diffDays < 0) {\r\n      return `Due in ${Math.abs(diffDays)} day${Math.abs(diffDays) > 1 ? 's' : ''}`;\r\n    } else {\r\n      return 'Due today';\r\n    }\r\n  };\r\n\r\n  // Return the matters for a client by matching associated matter IDs.\r\n  const getClientMatters = (balance: OutstandingClientBalance): Matter[] => {\r\n    return matters.filter(matter =>\r\n      balance.associated_matter_ids.includes(Number(matter.UniqueID))\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {filtered.map(balance => {\r\n        const clientMatters = getClientMatters(balance);\r\n        return (\r\n          <div key={balance.id} className={containerStyle}>\r\n            {/* Client Header */}\r\n            <div className={headerStyle}>\r\n              <Text style={{ fontWeight: 600 }}>\r\n                {balance.contact?.name || 'Unknown Client'}\r\n              </Text>\r\n              <Text style={{ color: 'red', fontWeight: 700 }}>\r\n                £{balance.total_outstanding_balance.toFixed(2)}\r\n              </Text>\r\n            </div>\r\n\r\n            {/* Matters Section (if any) */}\r\n            {clientMatters.length > 0 && (\r\n              <div className={mattersContainerStyle}>\r\n                <Stack horizontal tokens={{ childrenGap: 8 }} verticalAlign=\"center\">\r\n                  {clientMatters.map(matter => (\r\n                    <Link\r\n                      key={matter.UniqueID}\r\n                      href={`https://eu.app.clio.com/nc/#/matters/${matter.UniqueID}`}\r\n                      target=\"_blank\"\r\n                      className={matterLinkStyle}\r\n                    >\r\n                      {matter.DisplayNumber}\r\n                    </Link>\r\n                  ))}\r\n                </Stack>\r\n              </div>\r\n            )}\r\n            {/* Separator between header/matters and bills */}\r\n            <Separator styles={{ root: { margin: '8px 0' } }} />\r\n\r\n            {/* Bills Section */}\r\n            {balance.outstanding_bills.map((bill: any, index: number) => {\r\n              const total = bill.total;\r\n              const paid = bill.paid;\r\n              const balanceAmount = bill.due;\r\n              const dueStatus = computeDueStatus(bill);\r\n\r\n              return (\r\n                <div key={bill.id} className={getBillContainerStyle(index)}>\r\n                  {/* Row with Bill ID and Overdue Info, and Payment Equation */}\r\n                  <Stack\r\n                    horizontal\r\n                    tokens={{ childrenGap: 8 }}\r\n                    verticalAlign=\"start\"\r\n                    styles={{ root: { justifyContent: 'space-between' } }}\r\n                  >\r\n                    {/* Bill ID and Overdue Info */}\r\n                    <Stack horizontal tokens={{ childrenGap: 4 }} verticalAlign=\"start\">\r\n                      <Link\r\n                        href={`https://eu.app.clio.com/nc/#/bills/${bill.id}`}\r\n                        target=\"_blank\"\r\n                        className={matterLinkStyle}\r\n                      >\r\n                        {bill.number}\r\n                      </Link>\r\n                      <Text className={overdueStyle}>- {dueStatus}</Text>\r\n                    </Stack>\r\n\r\n                    {/* Payment Equation */}\r\n                    <div className={verticalEquationStyle}>\r\n                      <Text className={paymentStyle}>Total: £{total.toFixed(2)}</Text>\r\n                      {paid > 0 && (\r\n                        <Stack horizontal verticalAlign=\"center\" tokens={{ childrenGap: 4 }}>\r\n                          <TooltipHost\r\n                            content={\r\n                              <div>\r\n                                <Text>Last Payment: {new Date(bill.paid_at).toLocaleDateString()}</Text>\r\n                                <Text style={{ color: 'green', fontWeight: 600 }}>\r\n                                  Amount: £{paid.toFixed(2)}\r\n                                </Text>\r\n                              </div>\r\n                            }\r\n                            calloutProps={{ gapSpace: 0 }}\r\n                          >\r\n                            <Icon iconName=\"Info\" style={{ cursor: 'pointer' }} />\r\n                          </TooltipHost>\r\n                          <Text className={paymentStyle} style={{ color: 'green' }}>\r\n                            - Paid: £{paid.toFixed(2)}\r\n                          </Text>\r\n                        </Stack>\r\n                      )}\r\n                      <div className={horizontalSeparatorStyle} />\r\n                      <Text className={paymentStyle}>\r\n                        Balance: £{balanceAmount.toFixed(2)}\r\n                      </Text>\r\n                    </div>\r\n                  </Stack>\r\n\r\n                  {/* Dates Section: Issued and Due (stacked vertically) */}\r\n                  <Stack tokens={{ childrenGap: 4 }} style={dateTextStyle}>\r\n                    <Text style={dateTextStyle}>Issued: {new Date(bill.issued_at).toLocaleDateString()}</Text>\r\n                    <Text style={dateTextStyle}>Due: {new Date(bill.due_at).toLocaleDateString()}</Text>\r\n                  </Stack>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OutstandingBalancesList;\r\n","import React, { useState, useMemo } from 'react';\r\nimport { debugLog } from '../../utils/debug';\r\nimport { Icon, Text, DefaultButton } from '@fluentui/react';\r\nimport { mergeStyles } from '@fluentui/react/lib/Styling';\r\nimport { colours } from '../../app/styles/colours';\r\nimport { FaUmbrellaBeach } from 'react-icons/fa';\r\n\r\ninterface AttendanceRecord {\r\n  Attendance_ID: number;\r\n  Entry_ID: number;\r\n  First_Name: string;\r\n  Initials: string;\r\n  Level: string;\r\n  Week_Start: string;\r\n  Week_End: string;\r\n  ISO_Week: number;\r\n  Attendance_Days: string;\r\n  Confirmed_At: string | null;\r\n  status?: string;\r\n  isConfirmed?: boolean;\r\n  isOnLeave?: boolean;\r\n  // Some backends provide a comma-separated weekday list here\r\n  Status?: string;\r\n  // Some leave feeds might also attach dates here\r\n  Leave_Start?: string;\r\n  Leave_End?: string;\r\n}\r\n\r\ninterface WeeklyAttendanceViewProps {\r\n  isDarkMode: boolean;\r\n  attendanceRecords: AttendanceRecord[];\r\n  teamData: any[];\r\n  userData: any;\r\n  annualLeaveRecords: any[];\r\n  futureLeaveRecords: any[];\r\n  onAttendanceUpdated?: (updatedRecords: AttendanceRecord[]) => void;\r\n  onOpenModal?: () => void;\r\n  onDayUpdate?: (initials: string, day: string, status: 'office' | 'wfh' | 'away' | 'off-sick' | 'out-of-office', week: 'current' | 'next') => void;\r\n}\r\n\r\n// Custom icon component to handle both FluentUI icons and custom images\r\nconst StatusIcon: React.FC<{ \r\n  status: 'wfh' | 'office' | 'away' | 'off-sick' | 'out-of-office';\r\n  size: string;\r\n  color: string;\r\n}> = ({ status, size, color }) => {\r\n  if (status === 'office') {\r\n    return (\r\n      <svg\r\n        viewBox=\"0 0 57.56 100\"\r\n        aria-label=\"Helix Office\"\r\n        role=\"img\"\r\n        style={{ width: size, height: size, display: 'block', color }}\r\n      >\r\n        <g>\r\n          <path fill=\"currentColor\" d=\"M57.56,13.1c0,7.27-7.6,10.19-11.59,11.64-4,1.46-29.98,11.15-34.78,13.1C6.4,39.77,0,41.23,0,48.5v-13.1C0,28.13,6.4,26.68,11.19,24.74c4.8-1.94,30.78-11.64,34.78-13.1,4-1.45,11.59-4.37,11.59-11.64v13.09h0Z\" />\r\n          <path fill=\"currentColor\" d=\"M57.56,38.84c0,7.27-7.6,10.19-11.59,11.64s-29.98,11.16-34.78,13.1c-4.8,1.94-11.19,3.4-11.19,10.67v-13.1c0-7.27,6.4-8.73,11.19-10.67,4.8-1.94,30.78-11.64,34.78-13.1,4-1.46,11.59-4.37,11.59-11.64v13.09h0Z\" />\r\n          <path fill=\"currentColor\" d=\"M57.56,64.59c0,7.27-7.6,10.19-11.59,11.64-4,1.46-29.98,11.15-34.78,13.1-4.8,1.94-11.19,3.39-11.19,10.67v-13.1c0-7.27,6.4-8.73,11.19-10.67,4.8-1.94,30.78-11.64,34.78-13.1,4-1.45,11.59-4.37,11.59-11.64v13.1h0Z\" />\r\n        </g>\r\n      </svg>\r\n    );\r\n  }\r\n  \r\n  if (status === 'away') {\r\n    return (\r\n      <FaUmbrellaBeach\r\n        style={{\r\n          color,\r\n          fontSize: size\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  \r\n  const iconName = status === 'off-sick' ? 'Health' :\r\n                   status === 'out-of-office' ? 'Suitcase' :\r\n                   status === 'wfh' ? 'Home' : 'Help';\r\n  \r\n  return (\r\n    <Icon \r\n      iconName={iconName}\r\n      style={{ \r\n        color: color, \r\n        fontSize: size \r\n      }} \r\n    />\r\n  );\r\n};\r\n\r\nconst WEEK_FILTER_OPTIONS = [\r\n  { key: 'current', label: 'This Week' },\r\n  { key: 'next', label: 'Next Week' }\r\n] as const;\r\n\r\nconst DAY_FILTER_OPTIONS = [\r\n  { key: 'monday', label: 'Mon' },\r\n  { key: 'tuesday', label: 'Tue' },\r\n  { key: 'wednesday', label: 'Wed' },\r\n  { key: 'thursday', label: 'Thu' },\r\n  { key: 'friday', label: 'Fri' }\r\n] as const;\r\n\r\nconst STATUS_FILTER_OPTIONS = [\r\n  { key: 'office', label: 'Office' },\r\n  { key: 'wfh', label: 'WFH' },\r\n  { key: 'away', label: 'Away' },\r\n  { key: 'off-sick', label: 'Sick' },\r\n  { key: 'out-of-office', label: 'OOO' }\r\n] as const;\r\n\r\ntype WeekFilterKey = typeof WEEK_FILTER_OPTIONS[number]['key'];\r\ntype DayFilterKey = typeof DAY_FILTER_OPTIONS[number]['key'];\r\ntype StatusFilterKey = typeof STATUS_FILTER_OPTIONS[number]['key'];\r\n\r\nconst DAY_ORDER: DayFilterKey[] = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday'];\r\nconst DAY_INDEX_MAP: Record<DayFilterKey, number> = {\r\n  monday: 0,\r\n  tuesday: 1,\r\n  wednesday: 2,\r\n  thursday: 3,\r\n  friday: 4\r\n};\r\n\r\nconst WeeklyAttendanceView: React.FC<WeeklyAttendanceViewProps> = ({\r\n  isDarkMode,\r\n  attendanceRecords,\r\n  teamData,\r\n  userData,\r\n  annualLeaveRecords,\r\n  futureLeaveRecords,\r\n  onAttendanceUpdated,\r\n  onOpenModal,\r\n  onDayUpdate\r\n}) => {\r\n  debugLog('WeeklyAttendanceView received data:', {\r\n    attendanceRecordsCount: attendanceRecords?.length,\r\n    teamDataCount: teamData?.length,\r\n    sampleAttendanceRecord: attendanceRecords?.[0],\r\n    sampleTeamMember: teamData?.[0],\r\n    annualLeaveCount: annualLeaveRecords?.length,\r\n    futureLeaveCount: futureLeaveRecords?.length,\r\n    allAttendanceInitials: attendanceRecords?.map(r => r.Initials) || [],\r\n    allTeamInitials: teamData?.map(t => t.Initials) || []\r\n  });\r\n  \r\n  // State for view mode\r\n  const [viewMode, setViewMode] = useState<'daily' | 'weekly'>('daily');\r\n  \r\n  // Filters state\r\n  const [selectedWeeks, setSelectedWeeks] = useState<WeekFilterKey[]>(['current']);\r\n  const [selectedDays, setSelectedDays] = useState<DayFilterKey[]>([]);\r\n  const [selectedStatuses, setSelectedStatuses] = useState<StatusFilterKey[]>([]);\r\n\r\n  // Helper function to check if someone is on leave for a specific week\r\n  const getLeaveStatusForWeek = (\r\n    initials: string,\r\n    weekOffset: 0 | 1 = 0\r\n  ): 'away' | 'out-of-office' | null => {\r\n    const today = new Date();\r\n    const startOfWeek = new Date(today);\r\n    const dayOfWeek = today.getDay();\r\n    startOfWeek.setDate(today.getDate() - (dayOfWeek === 0 ? 6 : dayOfWeek - 1));\r\n    \r\n    if (weekOffset === 1) {\r\n      startOfWeek.setDate(startOfWeek.getDate() + 7);\r\n    }\r\n    \r\n    const endOfWeek = new Date(startOfWeek);\r\n    endOfWeek.setDate(startOfWeek.getDate() + 4); // Friday\r\n    \r\n    const leaveRecords = weekOffset === 0 ? annualLeaveRecords : futureLeaveRecords;\r\n    \r\n    // Helper to extract possible date fields with varying keys\r\n    const getDate = (obj: any, keys: string[]): Date | null => {\r\n      for (const k of keys) {\r\n        const v = obj[k];\r\n        if (v) {\r\n          const d = new Date(v);\r\n          if (!isNaN(d.getTime())) return d;\r\n        }\r\n      }\r\n      return null;\r\n    };\r\n\r\n    for (const leave of leaveRecords) {\r\n      const leaveInitials = (leave.Initials || leave.person || leave.Person || leave.initials || '').toString().trim().toUpperCase();\r\n      if (leaveInitials !== initials.toString().trim().toUpperCase()) {\r\n        continue;\r\n      }\r\n      \r\n      // Check status is booked\r\n      const leaveStatus = (leave.status || '').toString().toLowerCase();\r\n      if (leaveStatus !== 'booked') {\r\n        continue;\r\n      }\r\n      \r\n      const leaveStart = getDate(leave, ['start_date', 'Leave_Start', 'Start', 'From', 'StartDate', 'start', 'leaveStart']);\r\n      const leaveEnd = getDate(leave, ['end_date', 'Leave_End', 'End', 'To', 'EndDate', 'end', 'leaveEnd']);\r\n      if (!leaveStart || !leaveEnd) {\r\n        continue;\r\n      }\r\n      \r\n      // Check if leave period overlaps with the week\r\n      const overlaps = leaveStart <= endOfWeek && leaveEnd >= startOfWeek;\r\n      \r\n      // Debug log\r\n      if (overlaps) {\r\n  debugLog(`DEBUG: ${initials} is on leave for week ${weekOffset}:`, {\r\n          leaveStart: leaveStart.toDateString(),\r\n          leaveEnd: leaveEnd.toDateString(),\r\n          weekStart: startOfWeek.toDateString(),\r\n          weekEnd: endOfWeek.toDateString(),\r\n          status: leaveStatus\r\n        });\r\n      }\r\n\r\n      if (!overlaps) {\r\n        continue;\r\n      }\r\n\r\n      const leaveReasonTokens = [\r\n        leave.reason,\r\n        leave.Reason,\r\n        leave.leave_reason,\r\n        leave.leaveReason,\r\n        leave.type,\r\n        leave.Type,\r\n        leave.leave_type,\r\n        leave.category,\r\n        leave.Category\r\n      ]\r\n        .map((token) => (token ? token.toString().toLowerCase() : ''))\r\n        .filter(Boolean);\r\n\r\n      const reasonText = leaveReasonTokens.join(' ');\r\n      const normalizedReason = reasonText.replace(/\\s+/g, ' ').trim();\r\n      const isExplicitOutOfOffice = /\\b(out[-\\s]?of[-\\s]?office|ooo)\\b/.test(normalizedReason);\r\n\r\n      return isExplicitOutOfOffice ? 'out-of-office' : 'away';\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  // Helper function to get daily attendance pattern for a specific week\r\n  const getDailyAttendance = (member: any, weekOffset: 0 | 1 = 0): ('wfh' | 'office' | 'away' | 'off-sick' | 'out-of-office')[] => {\r\n    const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\r\n    \r\n    // Check if on leave for this specific week (from leave arrays)\r\n    const leaveStatusForWeek = getLeaveStatusForWeek(member.Initials, weekOffset);\r\n    if (leaveStatusForWeek) {\r\n      return [\r\n        leaveStatusForWeek,\r\n        leaveStatusForWeek,\r\n        leaveStatusForWeek,\r\n        leaveStatusForWeek,\r\n        leaveStatusForWeek\r\n      ];\r\n    }\r\n\r\n    // Fallback: trust member-level flags from attendance API\r\n    const memberAwayFlag = weekOffset === 0 && (member.isOnLeave === true || member.IsOnLeave === true);\r\n    if (memberAwayFlag) {\r\n      return ['away', 'away', 'away', 'away', 'away'];\r\n    }\r\n    \r\n    // For next week (weekOffset = 1), we might have different data structure\r\n    const attendanceKey = weekOffset === 0 ? 'attendanceDays' : 'nextWeekAttendanceDays';\r\n    let attendanceDays: string = member[attendanceKey]\r\n      || member.attendanceDays\r\n      || member.Attendance_Days\r\n      || member.Status\r\n      || '';\r\n    \r\n    // Debug: Check what data we actually have\r\n  debugLog(`DEBUG: getDailyAttendance for ${member.Initials || member.First}:`, {\r\n      weekOffset,\r\n      attendanceKey,\r\n      attendanceDays,\r\n      memberStatus: member.Status,\r\n      memberKeys: Object.keys(member)\r\n    });\r\n    \r\n    // If still empty, try to find a matching attendance record by initials\r\n    if (!attendanceDays || attendanceDays.toString().trim() === '') {\r\n      const rec = attendanceRecords.find(r => r.Initials === member.Initials);\r\n      if (rec) {\r\n        attendanceDays = rec.Attendance_Days || rec.Status || '';\r\n      }\r\n    }\r\n\r\n    // Normalize string\r\n    const normalized = (attendanceDays || '').toString().trim();\r\n    const normalizedLower = normalized.toLowerCase();\r\n\r\n    // If attendance is just a status string (single token), apply to all days\r\n    if (['wfh', 'office', 'away', 'off-sick', 'out-of-office'].includes(normalizedLower)) {\r\n      const statusValue = normalizedLower as 'wfh' | 'office' | 'away' | 'off-sick' | 'out-of-office';\r\n      return Array(5).fill(statusValue);\r\n    }\r\n    \r\n    // If no attendance days specified, default to working from home\r\n    if (!normalized) {\r\n      return ['wfh', 'wfh', 'wfh', 'wfh', 'wfh'];\r\n    }\r\n    \r\n    // Otherwise, parse a comma-separated list of weekdays\r\n    const tokens = normalized\r\n      .split(',')\r\n      .map((t: string) => t.trim().toLowerCase())\r\n      .filter(Boolean);\r\n\r\n    return days.map((day) => {\r\n      // Parse status from format like \"Mon:office,Tue:wfh\" or just office days like \"Mon,Tue\"\r\n      const dayStatus = tokens.find(token => token.includes(':') && token.startsWith(day.slice(0, 3).toLowerCase()));\r\n      if (dayStatus) {\r\n        const [, status] = dayStatus.split(':');\r\n        return status as 'wfh' | 'office' | 'away' | 'off-sick' | 'out-of-office';\r\n      }\r\n      \r\n      // Legacy format - if day is mentioned, assume office, otherwise wfh\r\n      const isInOffice = tokens.includes(day.toLowerCase())\r\n        || tokens.includes(day.slice(0, 3).toLowerCase());\r\n      const status = isInOffice ? 'office' : 'wfh';\r\n      return status;\r\n    });\r\n  };\r\n\r\n  const getDayIcon = (status: 'wfh' | 'office' | 'away' | 'off-sick' | 'out-of-office') => {\r\n    switch (status) {\r\n      case 'office': return 'helix-logo'; // Custom Helix logo for office\r\n      case 'wfh': return 'Home';\r\n      case 'away': return 'Vacation'; // Palm tree icon for away\r\n      case 'off-sick': return 'Health';\r\n      case 'out-of-office': return 'Suitcase';\r\n      default: return 'Help';\r\n    }\r\n  };\r\n\r\n  const getDayColor = (status: 'wfh' | 'office' | 'away' | 'off-sick' | 'out-of-office') => {\r\n    switch (status) {\r\n      case 'office': return isDarkMode ? colours.blue : colours.missedBlue;  // Accent in dark mode\r\n      case 'wfh': return colours.green;       // WFH - Helix Green  \r\n      case 'away': return colours.subtleGrey; // Away - Subtle Grey\r\n      case 'off-sick': return colours.cta;  // Off Sick - CTA Red\r\n      case 'out-of-office': return colours.orange; // Out-Of-Office - Orange\r\n      default: return colours.grey;\r\n    }\r\n  };\r\n\r\n  // Process team data\r\n  const processedTeamData = useMemo(() => {\r\n    return teamData.map(member => {\r\n      const userInitials = userData?.displayName?.match(/\\b\\w/g)?.join('').toUpperCase() || \r\n                          userData?.mail?.substring(0, 2).toUpperCase() || 'UN';\r\n                          \r\n      const attendanceRecord = attendanceRecords.find(\r\n        (rec) => rec.Initials === member.Initials\r\n      );\r\n\r\n      // Prefer Attendance_Days; fall back to backend Status or team member Status\r\n      const attendanceDays = attendanceRecord?.Attendance_Days \r\n        || attendanceRecord?.Status \r\n        || (member as any).Status \r\n        || '';\r\n      \r\n  debugLog('processedTeamData debug - ONE TIME ONLY:', {\r\n        memberInitials: member.Initials,\r\n        attendanceRecord,\r\n        attendanceDays,\r\n        attendanceRecordsCount: attendanceRecords.length,\r\n        allAttendanceInitials: attendanceRecords.map(r => r.Initials),\r\n        foundMatch: !!attendanceRecord\r\n      });\r\n      \r\n      // Only log once by checking if this is the first member\r\n      if (member.Initials === teamData[0]?.Initials) {\r\n  debugLog('FULL ATTENDANCE RECORDS:', attendanceRecords);\r\n  debugLog('FULL TEAM DATA:', teamData);\r\n      }\r\n      \r\n      const leaveStatusCurrentWeek = getLeaveStatusForWeek(member.Initials, 0);\r\n      const leaveStatusNextWeek = getLeaveStatusForWeek(member.Initials, 1);\r\n\r\n      // Determine overall status for filtering purposes\r\n      let status = 'unknown';\r\n      if (leaveStatusCurrentWeek) {\r\n        status = leaveStatusCurrentWeek;\r\n      } else if (attendanceDays.includes('Monday') || attendanceDays.includes('Tuesday') || \r\n                 attendanceDays.includes('Wednesday') || attendanceDays.includes('Thursday') || \r\n                 attendanceDays.includes('Friday')) {\r\n        status = 'office';\r\n      } else {\r\n        status = 'home';\r\n      }\r\n\r\n      return {\r\n        ...member,\r\n        status,\r\n        attendanceDays,\r\n        isConfirmed: attendanceRecord?.Confirmed_At !== null,\r\n        isUser: member.Initials === userInitials,\r\n        isOnLeaveCurrentWeek: Boolean(leaveStatusCurrentWeek),\r\n        isOnLeaveNextWeek: Boolean(leaveStatusNextWeek),\r\n        currentWeekLeaveStatus: leaveStatusCurrentWeek,\r\n        nextWeekLeaveStatus: leaveStatusNextWeek,\r\n      };\r\n    });\r\n  }, [teamData, attendanceRecords, userData, annualLeaveRecords, futureLeaveRecords]);\r\n\r\n  // Styles\r\n  const containerStyle = (isDark: boolean) => mergeStyles({\r\n    padding: 0,\r\n    background: 'transparent',\r\n    color: isDark ? colours.dark.text : colours.light.text,\r\n    borderRadius: 0,\r\n  });\r\n\r\n  const weeklyCardStyle = (isDark: boolean, isUser: boolean) => mergeStyles({\r\n    display: 'flex',\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'space-between',\r\n    padding: '12px 16px',\r\n    margin: '1px 0',\r\n    background: isUser \r\n      ? (isDark ? `linear-gradient(135deg, ${colours.blue}20 0%, ${colours.dark.cardBackground} 100%)` : `linear-gradient(135deg, ${colours.missedBlue}12 0%, ${colours.light.cardBackground} 100%)`)\r\n      : (isDark ? colours.dark.cardBackground : colours.light.cardBackground),\r\n    border: isUser \r\n      ? `3px solid ${isDark ? colours.blue : colours.missedBlue}` \r\n      : `1px solid ${isDark ? colours.dark.border : colours.light.border}`,\r\n    borderRadius: '8px',\r\n    transition: 'all 0.2s ease',\r\n    minHeight: '70px',\r\n    position: 'relative',\r\n    gap: '12px',\r\n    boxShadow: isUser \r\n      ? (isDark ? `0 4px 16px rgba(49, 130, 206, 0.35)` : `0 4px 16px rgba(13, 47, 96, 0.2)`)\r\n      : 'none',\r\n    \r\n    '&:hover': {\r\n      background: isUser\r\n        ? (isDark ? `linear-gradient(135deg, ${colours.blue}35 0%, ${colours.dark.sectionBackground} 100%)` : `linear-gradient(135deg, ${colours.missedBlue}18 0%, ${colours.light.sectionBackground} 100%)`)\r\n        : (isDark ? colours.dark.sectionBackground : colours.light.sectionBackground),\r\n      transform: isUser ? 'translateY(-2px)' : 'none',\r\n      boxShadow: isUser \r\n        ? (isDark ? `0 8px 24px rgba(49, 130, 206, 0.45)` : `0 8px 24px rgba(13, 47, 96, 0.25)`)\r\n        : (isDark ? '0 4px 12px rgba(0, 0, 0, 0.3)' : '0 4px 12px rgba(0, 0, 0, 0.1)')\r\n    },\r\n    \r\n    '&::before': isUser ? {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: '-3px',\r\n      top: '-3px',\r\n      right: '-3px',\r\n      bottom: '-3px',\r\n      borderRadius: '8px',\r\n      background: `linear-gradient(135deg, ${isDark ? colours.blue : colours.missedBlue} 0%, ${colours.blue} 100%)`,\r\n      zIndex: -1,\r\n      opacity: 0.6\r\n    } : {}\r\n  });\r\n\r\n  const nameStyle = (isDark: boolean, isUser: boolean) => mergeStyles({\r\n    fontSize: '13px',\r\n    fontWeight: isUser ? '700' : '500',\r\n    color: isUser \r\n      ? (isDark ? colours.blue : colours.missedBlue)\r\n      : (isDark ? colours.dark.text : colours.light.text),\r\n    minWidth: '90px',\r\n    maxWidth: '90px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n    gap: '4px',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    whiteSpace: 'nowrap',\r\n    textShadow: isUser ? (isDark ? '0 1px 2px rgba(49, 130, 206, 0.35)' : '0 1px 2px rgba(13, 47, 96, 0.3)') : 'none'\r\n  });\r\n\r\n  const weekIconsStyle = mergeStyles({\r\n    display: 'flex',\r\n    gap: '3px',\r\n    alignItems: 'center'\r\n  });\r\n\r\n  const dayIconStyle = (status: 'wfh' | 'office' | 'away' | 'off-sick' | 'out-of-office') => mergeStyles({\r\n    width: '18px',\r\n    height: '18px',\r\n    borderRadius: '50%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    background: getDayColor(status) + '20',\r\n    border: `1px solid ${getDayColor(status)}`,\r\n    fontSize: '9px',\r\n    color: getDayColor(status),\r\n    transition: 'all 0.15s ease'\r\n  });\r\n\r\n  const filterButtonStyle = (isActive: boolean) => mergeStyles({\r\n    minWidth: '54px',\r\n    height: '24px',\r\n    padding: '0 10px',\r\n    fontSize: '11px',\r\n    fontWeight: 500,\r\n    background: isActive\r\n      ? (isDarkMode\r\n        ? 'linear-gradient(135deg, rgba(54, 144, 206, 0.35) 0%, rgba(27, 91, 136, 0.26) 100%)'\r\n        : 'linear-gradient(135deg, rgba(54, 144, 206, 0.20) 0%, rgba(118, 184, 228, 0.16) 100%)')\r\n      : 'transparent',\r\n    border: `1px solid ${isActive ? colours.highlight : (isDarkMode ? colours.dark.border : colours.light.border)}`,\r\n    color: isActive ? (isDarkMode ? '#E9F5FF' : colours.highlight) : (isDarkMode ? colours.dark.text : colours.light.text),\r\n    borderRadius: '6px',\r\n    lineHeight: 1.2,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    boxShadow: isActive\r\n      ? (isDarkMode\r\n        ? '0 4px 6px rgba(42, 116, 168, 0.38)'\r\n        : '0 4px 6px rgba(54, 144, 206, 0.22)')\r\n      : 'none',\r\n    '&:hover': {\r\n      background: isActive\r\n        ? (isDarkMode\r\n          ? 'linear-gradient(135deg, rgba(54, 144, 206, 0.42) 0%, rgba(27, 91, 136, 0.32) 100%)'\r\n          : 'linear-gradient(135deg, rgba(54, 144, 206, 0.26) 0%, rgba(118, 184, 228, 0.22) 100%)')\r\n        : (isDarkMode ? 'rgba(54, 144, 206, 0.15)' : 'rgba(54, 144, 206, 0.12)')\r\n    }\r\n  });\r\n\r\n  const segmentedControlStyle = mergeStyles({\r\n    display: 'flex',\r\n    gap: '4px',\r\n    padding: '2px',\r\n    borderRadius: '8px',\r\n    background: isDarkMode ? 'rgba(54, 144, 206, 0.12)' : 'rgba(54, 144, 206, 0.08)',\r\n    border: `1px solid ${isDarkMode ? 'rgba(54, 144, 206, 0.26)' : 'rgba(54, 144, 206, 0.22)'}`\r\n  });\r\n\r\n  const viewToggleButtonStyle = (isActive: boolean) => mergeStyles({\r\n    minWidth: '70px',\r\n    padding: '2px 14px',\r\n    height: '26px',\r\n    fontSize: '11px',\r\n    fontWeight: 600,\r\n    background: isActive\r\n      ? (isDarkMode\r\n        ? 'linear-gradient(135deg, rgba(54, 144, 206, 0.32) 0%, rgba(26, 100, 152, 0.24) 100%)'\r\n        : 'linear-gradient(135deg, rgba(54, 144, 206, 0.18) 0%, rgba(93, 170, 226, 0.14) 100%)')\r\n      : 'transparent',\r\n    color: isActive ? (isDarkMode ? '#E9F5FF' : colours.highlight) : (isDarkMode ? colours.dark.text : colours.light.text),\r\n    border: `1px solid ${isActive ? colours.highlight : (isDarkMode ? colours.dark.border : colours.light.border)}`,\r\n    borderRadius: '6px',\r\n    lineHeight: 1.2,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    boxShadow: isActive\r\n      ? (isDarkMode\r\n        ? '0 4px 7px rgba(37, 122, 184, 0.26)'\r\n        : '0 4px 7px rgba(54, 144, 206, 0.18)')\r\n      : 'none',\r\n    '&:hover': {\r\n      background: isActive\r\n        ? (isDarkMode\r\n          ? 'linear-gradient(135deg, rgba(54, 144, 206, 0.42) 0%, rgba(26, 100, 152, 0.32) 100%)'\r\n          : 'linear-gradient(135deg, rgba(54, 144, 206, 0.24) 0%, rgba(93, 170, 226, 0.2) 100%)')\r\n        : (isDarkMode ? 'rgba(54, 144, 206, 0.16)' : 'rgba(54, 144, 206, 0.1)')\r\n    }\r\n  });\r\n\r\n  const filterBarStyle = mergeStyles({\r\n    marginBottom: '12px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: '6px'\r\n  });\r\n\r\n  const viewClusterStyle = mergeStyles({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    gap: '6px',\r\n    flex: '0 1 auto'\r\n  });\r\n\r\n  const viewToggleRowStyle = mergeStyles({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    gap: '6px',\r\n    flexWrap: 'wrap'\r\n  });\r\n\r\n  const filtersClusterStyle = mergeStyles({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: '4px',\r\n    width: '100%'\r\n  });\r\n\r\n  const combinedFilterStyle = mergeStyles({\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    gap: '8px',\r\n    rowGap: '6px',\r\n    alignItems: 'flex-start',\r\n    padding: '4px 0 0 0',\r\n    borderTop: `1px solid ${isDarkMode ? 'rgba(59, 130, 246, 0.2)' : 'rgba(148, 163, 184, 0.3)'}`\r\n  });\r\n\r\n  const filterSectionBaseStyle = mergeStyles({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: '4px',\r\n    minWidth: '0'\r\n  });\r\n\r\n  const filterSectionAutoStyle = mergeStyles(filterSectionBaseStyle, {\r\n    flex: '0 0 auto'\r\n  });\r\n\r\n  const filterSectionGrowStyle = mergeStyles(filterSectionBaseStyle, {\r\n    flex: '1 1 280px'\r\n  });\r\n\r\n  const chipRowStyle = mergeStyles({\r\n    display: 'flex',\r\n    gap: '3px',\r\n    flexWrap: 'wrap'\r\n  });\r\n\r\n  const filterLabelStyle = mergeStyles({\r\n    fontSize: '10px',\r\n    fontWeight: 600,\r\n    color: isDarkMode ? '#E2E8F0' : '#1E3A8A',\r\n    opacity: 0.8,\r\n    textTransform: 'uppercase',\r\n    letterSpacing: '0.04em'\r\n  });\r\n\r\n  const toggleWeekSelection = (week: WeekFilterKey) => {\r\n    setSelectedWeeks(prev => {\r\n      if (prev.includes(week)) {\r\n        return prev.length === 1 ? prev : prev.filter(item => item !== week);\r\n      }\r\n      return [...prev, week];\r\n    });\r\n  };\r\n\r\n  const toggleDaySelection = (day: DayFilterKey) => {\r\n    setSelectedDays(prev => prev.includes(day) ? prev.filter(item => item !== day) : [...prev, day]);\r\n  };\r\n\r\n  const toggleStatusSelection = (status: StatusFilterKey) => {\r\n    setSelectedStatuses(prev => prev.includes(status) ? prev.filter(item => item !== status) : [...prev, status]);\r\n  };\r\n\r\n  // Get today's attendance status for a member\r\n  const getTodayAttendance = (member: any): string => {\r\n    const today = new Date();\r\n    const dayIndex = today.getDay();\r\n    \r\n    // Convert Sunday (0) to Monday-based index (0-4 for Mon-Fri)\r\n    const mondayBasedIndex = dayIndex === 0 ? -1 : dayIndex - 1;\r\n    \r\n    // Debug info\r\n  debugLog(`DEBUG: getTodayAttendance for ${member.Initials || member.First}:`, {\r\n      today: today.toDateString(),\r\n      dayIndex,\r\n      mondayBasedIndex,\r\n      isWeekend: mondayBasedIndex < 0 || mondayBasedIndex > 4\r\n    });\r\n    \r\n    // For weekends, use Friday's status as the \"current\" status\r\n    if (mondayBasedIndex < 0 || mondayBasedIndex > 4) {\r\n      const currentWeekAttendance = getDailyAttendance(member, 0);\r\n      const fridayStatus = currentWeekAttendance[4]; // Friday is index 4\r\n      return fridayStatus || member.status || 'wfh';\r\n    }\r\n    \r\n    const currentWeekAttendance = getDailyAttendance(member, 0);\r\n    const todayStatus = currentWeekAttendance[mondayBasedIndex] || member.status || 'wfh';\r\n    \r\n  debugLog(`DEBUG: Today status for ${member.Initials || member.First}:`, {\r\n      currentWeekAttendance,\r\n      mondayBasedIndex,\r\n      todayStatus\r\n    });\r\n    \r\n    return todayStatus;\r\n  };\r\n\r\n  // Get next workday's attendance status for a member  \r\n  const getNextWorkdayAttendance = (member: AttendanceRecord): { status: string; label: string; day: string } => {\r\n    const today = new Date();\r\n    const todayIndex = today.getDay(); // 0=Sunday, 1=Monday, ..., 6=Saturday\r\n    \r\n    // If it's weekend (Saturday=6 or Sunday=0), show Monday\r\n    if (todayIndex === 0 || todayIndex === 6) {\r\n      const currentWeekAttendance = getDailyAttendance(member, 0);\r\n      const nextWeekAttendance = getDailyAttendance(member, 1);\r\n      \r\n      // If today is Saturday, Monday is next week. If today is Sunday, Monday is today's week.\r\n      const mondayAttendance = todayIndex === 6 ? nextWeekAttendance : currentWeekAttendance;\r\n      const mondayStatus = mondayAttendance[0]; // Monday is index 0\r\n      \r\n      return {\r\n        status: mondayStatus || member.status || 'wfh',\r\n        label: 'Monday:',\r\n        day: 'Monday'\r\n      };\r\n    }\r\n    \r\n    // For weekdays, show tomorrow\r\n    const tomorrow = new Date();\r\n    tomorrow.setDate(tomorrow.getDate() + 1);\r\n    const tomorrowIndex = tomorrow.getDay();\r\n    \r\n    // Convert Sunday (0) to Monday-based index (0-4 for Mon-Fri)\r\n    const mondayBasedIndex = tomorrowIndex === 0 ? -1 : tomorrowIndex - 1;\r\n    \r\n    // If tomorrow is weekend, don't show anything\r\n    if (mondayBasedIndex < 0 || mondayBasedIndex > 4) {\r\n      return {\r\n        status: member.status || 'wfh',\r\n        label: '',\r\n        day: ''\r\n      };\r\n    }\r\n    \r\n    // Check if tomorrow is next week\r\n    const isNextWeek = tomorrow.getDate() < today.getDate() || \r\n                      (tomorrow.getDate() - today.getDate()) >= 7 ||\r\n                      tomorrow.getMonth() !== today.getMonth();\r\n    \r\n    const weekOffset = isNextWeek ? 1 : 0;\r\n    const weekAttendance = getDailyAttendance(member, weekOffset);\r\n    const tomorrowStatus = weekAttendance[mondayBasedIndex] || member.status || 'wfh';\r\n    \r\n    const dayNames = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\r\n    const dayName = dayNames[mondayBasedIndex] || 'Tomorrow';\r\n    \r\n    return {\r\n      status: tomorrowStatus,\r\n      label: 'tomorrow:',\r\n      day: dayName\r\n    };\r\n  };\r\n\r\n  const filteredData = useMemo(() => {\r\n    const weekSelections = selectedWeeks.length > 0 ? selectedWeeks : ['current'];\r\n\r\n    return processedTeamData.filter(member => {\r\n      let matchesCurrent = false;\r\n      let matchesNext = false;\r\n\r\n      if (weekSelections.includes('current')) {\r\n        const currentWeekAttendance = getDailyAttendance(member, 0);\r\n        const matchesDay = selectedDays.length === 0\r\n          ? currentWeekAttendance.some(Boolean)\r\n          : selectedDays.some(day => {\r\n              const index = DAY_INDEX_MAP[day];\r\n              return index >= 0 && currentWeekAttendance[index] !== undefined;\r\n            });\r\n\r\n        const matchesStatus = selectedStatuses.length === 0\r\n          ? true\r\n          : currentWeekAttendance.some((status, index) => {\r\n              if (!status) {\r\n                return false;\r\n              }\r\n              if (selectedDays.length === 0) {\r\n                return selectedStatuses.includes(status);\r\n              }\r\n              const dayKey = DAY_ORDER[index];\r\n              return selectedDays.includes(dayKey) && selectedStatuses.includes(status);\r\n            });\r\n\r\n        matchesCurrent = matchesDay && matchesStatus;\r\n      }\r\n\r\n      if (weekSelections.includes('next')) {\r\n        const nextWeekAttendance = getDailyAttendance(member, 1);\r\n        const matchesDay = selectedDays.length === 0\r\n          ? nextWeekAttendance.some(Boolean)\r\n          : selectedDays.some(day => {\r\n              const index = DAY_INDEX_MAP[day];\r\n              return index >= 0 && nextWeekAttendance[index] !== undefined;\r\n            });\r\n\r\n        const matchesStatus = selectedStatuses.length === 0\r\n          ? true\r\n          : nextWeekAttendance.some((status, index) => {\r\n              if (!status) {\r\n                return false;\r\n              }\r\n              if (selectedDays.length === 0) {\r\n                return selectedStatuses.includes(status);\r\n              }\r\n              const dayKey = DAY_ORDER[index];\r\n              return selectedDays.includes(dayKey) && selectedStatuses.includes(status);\r\n            });\r\n\r\n        matchesNext = matchesDay && matchesStatus;\r\n      }\r\n\r\n      return matchesCurrent || matchesNext;\r\n    });\r\n  }, [processedTeamData, selectedWeeks, selectedDays, selectedStatuses]);\r\n\r\n  const validStatuses: StatusFilterKey[] = ['office', 'wfh', 'away', 'off-sick', 'out-of-office'];\r\n\r\n  const getStatusForActiveFilters = (member: any): StatusFilterKey => {\r\n    const weekPreference: WeekFilterKey[] = selectedWeeks.length > 0 ? selectedWeeks : ['current'];\r\n    const dayPreference: DayFilterKey[] = selectedDays.length > 0 ? selectedDays : DAY_ORDER;\r\n\r\n    // For weekends with no specific day filters, use today's attendance (which uses Friday for weekends)\r\n    const today = new Date();\r\n    const dayIndex = today.getDay();\r\n    const isWeekend = dayIndex === 0 || dayIndex === 6; // Sunday or Saturday\r\n    \r\n    if (isWeekend && selectedDays.length === 0) {\r\n      const todayStatus = getTodayAttendance(member as AttendanceRecord);\r\n      if (validStatuses.includes(todayStatus as StatusFilterKey)) {\r\n        return todayStatus as StatusFilterKey;\r\n      }\r\n    }\r\n\r\n    for (const week of weekPreference) {\r\n      const attendance = getDailyAttendance(member, week === 'current' ? 0 : 1);\r\n\r\n      for (const day of dayPreference) {\r\n        const index = DAY_INDEX_MAP[day];\r\n        if (index < 0) {\r\n          continue;\r\n        }\r\n        const status = attendance[index];\r\n        if (!status) {\r\n          continue;\r\n        }\r\n        if (selectedStatuses.length === 0 || selectedStatuses.includes(status)) {\r\n          return status;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (weekPreference.includes('current')) {\r\n      const todayStatus = getTodayAttendance(member as AttendanceRecord);\r\n      if (validStatuses.includes(todayStatus as StatusFilterKey)) {\r\n        return todayStatus as StatusFilterKey;\r\n      }\r\n    }\r\n\r\n    const fallbackWeek = getDailyAttendance(member, 1);\r\n    const fallback = fallbackWeek.find(status => validStatuses.includes(status as StatusFilterKey));\r\n    return (fallback || 'wfh') as StatusFilterKey;\r\n  };\r\n\r\n  return (\r\n    <div className={containerStyle(isDarkMode)}>\r\n      {/* Filter Controls */}\r\n      <div className={filterBarStyle}>\r\n        <div className={viewClusterStyle}>\r\n          <div className={viewToggleRowStyle}>\r\n            <div className={segmentedControlStyle}>\r\n              <DefaultButton\r\n                text=\"Daily\"\r\n                iconProps={{ iconName: 'CalendarDay' }}\r\n                onClick={() => setViewMode('daily')}\r\n                styles={{ root: viewToggleButtonStyle(viewMode === 'daily') }}\r\n              />\r\n              <DefaultButton\r\n                text=\"Weekly\"\r\n                iconProps={{ iconName: 'CalendarWeek' }}\r\n                onClick={() => setViewMode('weekly')}\r\n                styles={{ root: viewToggleButtonStyle(viewMode === 'weekly') }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={filtersClusterStyle}>\r\n          <div className={combinedFilterStyle}>\r\n            <div className={filterSectionAutoStyle}>\r\n              <Text className={filterLabelStyle}>Week</Text>\r\n              <div className={chipRowStyle}>\r\n                {WEEK_FILTER_OPTIONS.map(option => (\r\n                  <DefaultButton\r\n                    key={option.key}\r\n                    text={option.label}\r\n                    onClick={() => toggleWeekSelection(option.key)}\r\n                    styles={{ root: filterButtonStyle(selectedWeeks.includes(option.key)) }}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <div className={filterSectionGrowStyle}>\r\n              <Text className={filterLabelStyle}>Days</Text>\r\n              <div className={chipRowStyle}>\r\n                {DAY_FILTER_OPTIONS.map(option => (\r\n                  <DefaultButton\r\n                    key={option.key}\r\n                    text={option.label}\r\n                    onClick={() => toggleDaySelection(option.key)}\r\n                    styles={{ root: filterButtonStyle(selectedDays.includes(option.key)) }}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <div className={filterSectionGrowStyle}>\r\n              <Text className={filterLabelStyle}>Status</Text>\r\n              <div className={chipRowStyle}>\r\n                {STATUS_FILTER_OPTIONS.map(option => (\r\n                  <DefaultButton\r\n                    key={option.key}\r\n                    text={option.label}\r\n                    onClick={() => toggleStatusSelection(option.key)}\r\n                    styles={{ root: filterButtonStyle(selectedStatuses.includes(option.key)) }}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Weekly Attendance Grid */}\r\n      <div style={{ marginBottom: '12px' }}>\r\n        {/* Team member grid with multiple columns */}\r\n        <div style={{\r\n          display: 'grid',\r\n          gridTemplateColumns: 'repeat(auto-fit, minmax(380px, 1fr))',\r\n          gap: '8px',\r\n          maxWidth: '100%'\r\n        }}>\r\n          {viewMode === 'daily' ? (\r\n            // Daily Summary View - Group by status\r\n            <div style={{ display: 'flex', gap: '16px', flexWrap: 'wrap' }}>\r\n              {(() => {\r\n                // Group people by today's status\r\n                const statusGroups = filteredData.reduce((groups, member) => {\r\n                  const representativeStatus = getStatusForActiveFilters(member);\r\n                  if (!groups[representativeStatus]) {\r\n                    groups[representativeStatus] = [];\r\n                  }\r\n                  groups[representativeStatus].push(member);\r\n                  return groups;\r\n                }, {} as Record<string, typeof filteredData>);\r\n\r\n                // Define status order and labels\r\n                const statusOrder = ['wfh', 'office', 'away', 'off-sick', 'out-of-office'];\r\n                const statusLabels = {\r\n                  office: 'In Office',\r\n                  wfh: 'Working From Home',\r\n                  away: 'Away',\r\n                  'off-sick': 'Off Sick',\r\n                  'out-of-office': 'Out Of Office'\r\n                };\r\n\r\n                return statusOrder\r\n                  .filter(status => statusGroups[status]?.length > 0)\r\n                  .map(status => (\r\n                    <div \r\n                      key={status}\r\n                      style={{\r\n                        background: isDarkMode ? colours.dark.cardBackground : colours.light.cardBackground,\r\n                        border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n                        borderRadius: '8px',\r\n                        padding: '16px',\r\n                        minWidth: '280px',\r\n                        flex: '1',\r\n                        boxShadow: isDarkMode ? '0 4px 6px rgba(0, 0, 0, 0.3)' : '0 4px 6px rgba(0, 0, 0, 0.07)',\r\n                        transition: 'background 0.2s ease, box-shadow 0.2s ease',\r\n                        cursor: 'default'\r\n                      }}\r\n                    >\r\n                      {/* Status Header */}\r\n                      <div style={{ \r\n                        display: 'flex', \r\n                        alignItems: 'center', \r\n                        gap: '8px', \r\n                        marginBottom: '12px',\r\n                        paddingBottom: '8px',\r\n                        borderBottom: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`\r\n                      }}>\r\n                        <div \r\n                          style={{\r\n                            width: '24px',\r\n                            height: '24px',\r\n                            borderRadius: '6px',\r\n                            backgroundColor: `${getDayColor(status as 'office' | 'wfh' | 'away' | 'off-sick' | 'out-of-office')}20`, // Light fill - 20% opacity\r\n                            border: `1px solid ${getDayColor(status as 'office' | 'wfh' | 'away' | 'off-sick' | 'out-of-office')}`, // Full opacity border\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center'\r\n                          }}\r\n                        >\r\n                          <StatusIcon\r\n                            status={status as 'office' | 'wfh' | 'away' | 'off-sick' | 'out-of-office'}\r\n                            size=\"12px\"\r\n                            color={getDayColor(status as 'office' | 'wfh' | 'away' | 'off-sick' | 'out-of-office')}\r\n                          />\r\n                        </div>\r\n                        <div>\r\n                          <div style={{ \r\n                            fontWeight: '600', \r\n                            fontSize: '14px',\r\n                            color: isDarkMode ? colours.dark.text : colours.light.text\r\n                          }}>\r\n                            {statusLabels[status as keyof typeof statusLabels]}\r\n                          </div>\r\n                          <div style={{ \r\n                            fontSize: '11px', \r\n                            color: isDarkMode ? colours.dark.subText : colours.light.subText\r\n                          }}>\r\n                            {statusGroups[status].length} {statusGroups[status].length === 1 ? 'person' : 'people'}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* People List */}\r\n                      <div style={{ display: 'flex', flexDirection: 'column', gap: '6px' }}>\r\n                        {statusGroups[status].map((member: any) => {\r\n                          const nextWorkday = getNextWorkdayAttendance(member);\r\n                          const nextWorkdayDifferent = nextWorkday.status !== status && nextWorkday.label !== '';\r\n                          \r\n                          return (\r\n                            <div \r\n                              key={member.Initials}\r\n                              style={{\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'space-between',\r\n                                padding: '4px 8px',\r\n                                borderRadius: '4px',\r\n                                background: member.isUser \r\n                                  ? (isDarkMode ? 'rgba(74, 155, 79, 0.1)' : 'rgba(74, 155, 79, 0.05)')\r\n                                  : (isDarkMode ? 'rgba(255,255,255,0.02)' : 'rgba(0,0,0,0.02)')\r\n                              }}\r\n                            >\r\n                              <span style={{\r\n                                fontSize: '13px',\r\n                                fontWeight: member.isUser ? '700' : '400',\r\n                                color: member.isUser ? colours.missedBlue : (isDarkMode ? colours.dark.text : colours.light.text)\r\n                              }}>\r\n                                {member.First || member.Initials}\r\n                                {member.isUser && (\r\n                                  <span style={{ \r\n                                    fontSize: '9px', \r\n                                    color: colours.missedBlue,\r\n                                    marginLeft: '4px',\r\n                                    fontWeight: '600',\r\n                                    background: `${colours.missedBlue}15`,\r\n                                    padding: '1px 4px',\r\n                                    borderRadius: '3px'\r\n                                  }}>\r\n                                    (you)\r\n                                  </span>\r\n                                )}\r\n                              </span>\r\n                              \r\n                              {/* Next workday indicator - only show if different */}\r\n                              {nextWorkdayDifferent && (\r\n                                <div style={{ display: 'flex', alignItems: 'center', gap: '4px', opacity: 0.6 }}>\r\n                                  <span style={{ \r\n                                    fontSize: '8px', \r\n                                    color: isDarkMode ? colours.dark.subText : colours.light.subText\r\n                                  }}>\r\n                                    {nextWorkday.label}\r\n                                  </span>\r\n                                  <div \r\n                                    style={{\r\n                                      width: '12px',\r\n                                      height: '12px',\r\n                                      borderRadius: '2px',\r\n                                      backgroundColor: getDayColor(nextWorkday.status as 'office' | 'wfh' | 'away' | 'off-sick' | 'out-of-office'),\r\n                                      display: 'flex',\r\n                                      alignItems: 'center',\r\n                                      justifyContent: 'center'\r\n                                    }}\r\n                                    title={`${nextWorkday.day}: ${nextWorkday.status}`}\r\n                                  >\r\n                                    <StatusIcon\r\n                                      status={nextWorkday.status as 'office' | 'wfh' | 'away' | 'off-sick' | 'out-of-office'}\r\n                                      size=\"6px\"\r\n                                      color=\"white\"\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  ));\r\n              })()}\r\n            </div>\r\n          ) : (\r\n            // Weekly View - Multi-column grid\r\n            <div style={{\r\n              display: 'grid',\r\n              gridTemplateColumns: 'repeat(auto-fit, minmax(280px, 1fr))',\r\n              gap: '6px',\r\n              width: '100%'\r\n            }}>\r\n              {filteredData\r\n              .sort((a, b) => {\r\n                // User first, then alphabetical by first name\r\n                if (a.isUser && !b.isUser) return -1;\r\n                if (!a.isUser && b.isUser) return 1;\r\n                return (a.First || a.Initials).localeCompare(b.First || b.Initials);\r\n              })\r\n              .map(member => {\r\n                // Weekly View - Full two weeks\r\n                const currentWeekAttendance = getDailyAttendance(member, 0);\r\n                const nextWeekAttendance = getDailyAttendance(member, 1);\r\n                \r\n                return (\r\n                  <div \r\n                    key={member.Initials}\r\n                    style={{\r\n                      background: isDarkMode ? colours.dark.cardBackground : colours.light.cardBackground,\r\n                      border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n                      borderRadius: '6px',\r\n                      padding: '6px 8px',\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      gap: '8px',\r\n                      fontSize: '12px',\r\n                      minHeight: '32px',\r\n                      width: '100%',\r\n                      boxSizing: 'border-box',\r\n                      boxShadow: isDarkMode ? '0 2px 4px rgba(0, 0, 0, 0.2)' : '0 2px 4px rgba(0, 0, 0, 0.05)'\r\n                    }}\r\n                  >\r\n                    {/* Name - Compact width for alignment */}\r\n                    <div style={{\r\n                      minWidth: '65px',\r\n                      maxWidth: '65px',\r\n                      fontWeight: member.isUser ? '700' : '500',\r\n                      color: member.isUser ? colours.missedBlue : (isDarkMode ? colours.dark.text : colours.light.text),\r\n                      fontSize: '11px',\r\n                      overflow: 'hidden',\r\n                      textOverflow: 'ellipsis',\r\n                      whiteSpace: 'nowrap'\r\n                    }}>\r\n                      {member.First || member.Initials}\r\n                      {member.isUser && (\r\n                        <span style={{ \r\n                          fontSize: '9px', \r\n                          color: colours.missedBlue,\r\n                          marginLeft: '4px',\r\n                          fontWeight: '600',\r\n                          background: `${colours.missedBlue}15`,\r\n                          padding: '1px 4px',\r\n                          borderRadius: '3px'\r\n                        }}>\r\n                          (you)\r\n                        </span>\r\n                      )}\r\n                    </div>                    {/* Current Week Icons */}\r\n                    <div style={{ display: 'flex', gap: '2px' }}>\r\n                      {currentWeekAttendance.map((dayStatus: any, index: any) => {\r\n                        const dayName = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'][index];\r\n                        const isOnLeave = dayStatus === 'out-of-office';\r\n                        const isClickable = member.isUser && onDayUpdate && !isOnLeave;\r\n                        \r\n                        return (\r\n                          <div \r\n                            key={`current-${index}`}\r\n                            style={{\r\n                              width: '14px',\r\n                              height: '14px',\r\n                              borderRadius: '2px',\r\n                              backgroundColor: `${getDayColor(dayStatus)}20`, // Light fill - 20% opacity\r\n                              border: `1px solid ${getDayColor(dayStatus)}`, // Full opacity border\r\n                              cursor: isClickable ? 'pointer' : 'default',\r\n                              display: 'flex',\r\n                              alignItems: 'center',\r\n                              justifyContent: 'center',\r\n                              fontSize: '8px'\r\n                            }}\r\n                            title={isOnLeave ? `${dayName}: On Annual Leave` : `${dayName}: ${dayStatus}`}\r\n                            onClick={isClickable ? (e) => {\r\n                              e.stopPropagation();\r\n                              const statusCycle: ('office' | 'wfh' | 'away' | 'off-sick' | 'out-of-office')[] = ['wfh', 'office', 'away', 'off-sick', 'out-of-office'];\r\n                              const currentIndex = statusCycle.indexOf(dayStatus as any);\r\n                              const nextStatus = statusCycle[(currentIndex + 1) % statusCycle.length];\r\n                              onDayUpdate(member.Initials, dayName, nextStatus, 'current');\r\n                            } : undefined}\r\n                          >\r\n                            <StatusIcon\r\n                              status={dayStatus}\r\n                              size=\"8px\"\r\n                              color={getDayColor(dayStatus)}\r\n                            />\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n\r\n                    {/* Divider */}\r\n                    <div style={{\r\n                      width: '1px',\r\n                      height: '16px',\r\n                      backgroundColor: isDarkMode ? '#4A5568' : '#E2E8F0'\r\n                    }} />\r\n\r\n                    {/* Next Week Icons */}\r\n                    <div style={{ display: 'flex', gap: '2px' }}>\r\n                      {nextWeekAttendance.map((dayStatus: any, index: any) => {\r\n                        const dayName = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'][index];\r\n                        const isOnLeave = dayStatus === 'out-of-office';\r\n                        const isClickable = member.isUser && onDayUpdate && !isOnLeave;\r\n                        \r\n                        return (\r\n                          <div \r\n                            key={`next-${index}`}\r\n                            style={{\r\n                              width: '14px',\r\n                              height: '14px',\r\n                              borderRadius: '2px',\r\n                              backgroundColor: `${getDayColor(dayStatus)}20`, // Light fill - 20% opacity\r\n                              border: `1px solid ${getDayColor(dayStatus)}`, // Full opacity border\r\n                              cursor: isClickable ? 'pointer' : 'default',\r\n                              display: 'flex',\r\n                              alignItems: 'center',\r\n                              justifyContent: 'center',\r\n                              fontSize: '7px',\r\n                              opacity: 0.8 // Slightly faded to distinguish from current week\r\n                            }}\r\n                            title={`Next ${dayName}: ${dayStatus}`}\r\n                            onClick={isClickable ? (e) => {\r\n                              e.stopPropagation();\r\n                              const statusCycle: ('office' | 'wfh' | 'away' | 'off-sick' | 'out-of-office')[] = ['wfh', 'office', 'away', 'off-sick', 'out-of-office'];\r\n                              const currentIndex = statusCycle.indexOf(dayStatus as any);\r\n                              const nextStatus = statusCycle[(currentIndex + 1) % statusCycle.length];\r\n                              onDayUpdate(member.Initials, dayName, nextStatus, 'next');\r\n                            } : undefined}\r\n                          >\r\n                            <StatusIcon\r\n                              status={dayStatus}\r\n                              size=\"8px\"\r\n                              color={getDayColor(dayStatus)}\r\n                            />\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {filteredData.length === 0 && (\r\n        <div style={{\r\n          textAlign: 'center',\r\n          padding: '40px',\r\n          color: isDarkMode ? colours.dark.subText : colours.light.subText\r\n        }}>\r\n          <Icon iconName=\"Search\" style={{ fontSize: '24px', marginBottom: '8px' }} />\r\n          <Text>No team members match the selected filters</Text>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeeklyAttendanceView;","import React, { useState, forwardRef, useImperativeHandle } from 'react';\r\nimport { Icon, Text, DefaultButton, MessageBar, MessageBarType } from '@fluentui/react';\r\nimport { mergeStyles } from '@fluentui/react/lib/Styling';\r\nimport { colours } from '../../app/styles/colours';\r\nimport WeeklyAttendanceView from './WeeklyAttendanceView';\r\nimport BespokePanel from '../../app/functionality/BespokePanel';\r\n\r\ninterface AttendanceRecord {\r\n  Attendance_ID: number;\r\n  Entry_ID: number;\r\n  First_Name: string;\r\n  Initials: string;\r\n  Level: string;\r\n  Week_Start: string;\r\n  Week_End: string;\r\n  ISO_Week: number;\r\n  Attendance_Days: string;\r\n  Confirmed_At: string | null;\r\n  status?: string;\r\n  isConfirmed?: boolean;\r\n  isOnLeave?: boolean;\r\n}\r\n\r\ninterface EnhancedAttendanceProps {\r\n  isDarkMode: boolean;\r\n  isLoadingAttendance: boolean;\r\n  isLoadingAnnualLeave: boolean;\r\n  attendanceError: string | null;\r\n  annualLeaveError: string | null;\r\n  attendanceRecords: AttendanceRecord[];\r\n  teamData: any[];\r\n  annualLeaveRecords: any[];\r\n  futureLeaveRecords: any[];\r\n  userData: any;\r\n  onAttendanceUpdated?: (updatedRecords: AttendanceRecord[]) => void;\r\n}\r\n\r\nexport interface EnhancedAttendanceRef {\r\n  focusTable: () => void;\r\n  setWeek: (week: 'current' | 'next') => void;\r\n}\r\n\r\nconst EnhancedAttendance = forwardRef<EnhancedAttendanceRef, EnhancedAttendanceProps>((props, ref) => {\r\n  const {\r\n    isDarkMode,\r\n    isLoadingAttendance,\r\n    isLoadingAnnualLeave,\r\n    attendanceError,\r\n    annualLeaveError,\r\n    attendanceRecords,\r\n    teamData,\r\n    annualLeaveRecords,\r\n    futureLeaveRecords,\r\n    userData,\r\n    onAttendanceUpdated,\r\n  } = props;\r\n\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [selectedWeek, setSelectedWeek] = useState<'current' | 'next'>('current');\r\n  const [localAttendance, setLocalAttendance] = useState<{ [key: string]: boolean }>({});\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [saveError, setSaveError] = useState<string | null>(null);\r\n  const [showConfirmation, setShowConfirmation] = useState(false);\r\n\r\n  const userInitials = userData?.displayName?.match(/\\b\\w/g)?.join('').toUpperCase() || \r\n                      userData?.mail?.substring(0, 2).toUpperCase() || 'UN';\r\n\r\n  // Quick update function for status changes\r\n  const quickUpdate = async (status: 'home' | 'office' | 'out-of-office') => {\r\n    try {\r\n      // Get current week start\r\n      const today = new Date();\r\n      const weekStart = new Date(today);\r\n      weekStart.setDate(today.getDate() - today.getDay()); // Start of week (Sunday)\r\n      const weekStartStr = weekStart.toISOString().split('T')[0];\r\n\r\n      const response = await fetch('/api/attendance/updateAttendance', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          initials: userInitials,\r\n          weekStart: weekStartStr,\r\n          attendanceDays: status\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to update attendance');\r\n      }\r\n\r\n      // Show confirmation\r\n      setShowConfirmation(true);\r\n      setTimeout(() => setShowConfirmation(false), 2000);\r\n\r\n      // Refresh data by fetching updated attendance records\r\n      if (onAttendanceUpdated) {\r\n        try {\r\n          const attendanceResponse = await fetch('/api/attendance/getAttendance', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' }\r\n          });\r\n          \r\n          if (attendanceResponse.ok) {\r\n            const attendanceResult = await attendanceResponse.json();\r\n            if (attendanceResult.success && attendanceResult.attendance) {\r\n              // Transform the data to match expected format\r\n              const transformedRecords = attendanceResult.attendance.map((member: any) => ({\r\n                Attendance_ID: 0,\r\n                Entry_ID: 0,\r\n                First_Name: member.First,\r\n                Initials: member.Initials,\r\n                Level: '',\r\n                Week_Start: new Date().toISOString().split('T')[0],\r\n                Week_End: new Date().toISOString().split('T')[0],\r\n                ISO_Week: Math.ceil(((new Date().getTime() - new Date(new Date().getFullYear(), 0, 1).getTime()) / 86400000 + 1) / 7),\r\n                Attendance_Days: member.Status === 'office' ? 'Monday,Tuesday,Wednesday,Thursday,Friday' : '',\r\n                Confirmed_At: member.IsConfirmed ? new Date().toISOString() : null,\r\n                status: member.Status,\r\n                isConfirmed: member.IsConfirmed,\r\n                isOnLeave: member.IsOnLeave\r\n              }));\r\n              onAttendanceUpdated(transformedRecords);\r\n            }\r\n          }\r\n        } catch (refreshError) {\r\n          console.error('Error refreshing attendance data:', refreshError);\r\n          // Fallback: still call with empty array if refresh fails\r\n          onAttendanceUpdated([]);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating attendance:', error);\r\n      setSaveError(error instanceof Error ? error.message : 'Failed to update attendance');\r\n    }\r\n  };\r\n\r\n  // Modal functions\r\n  const openModal = () => {\r\n    setIsModalOpen(true);\r\n    // Initialize local attendance state\r\n    setLocalAttendance({\r\n      Monday: false,\r\n      Tuesday: false,\r\n      Wednesday: false,\r\n      Thursday: false,\r\n      Friday: false,\r\n    });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setSaveError(null);\r\n  };\r\n\r\n  const toggleDay = (day: string) => {\r\n    setLocalAttendance(prev => ({\r\n      ...prev,\r\n      [day]: !prev[day]\r\n    }));\r\n  };\r\n\r\n  const handleDayUpdate = async (initials: string, day: string, status: 'office' | 'wfh' | 'away' | 'off-sick' | 'out-of-office', week: 'current' | 'next') => {\r\n    if (initials !== userInitials) return; // Only allow user to edit their own attendance\r\n    \r\n    try {\r\n      const weekStart = getWeekStart(week);\r\n      const response = await fetch('/api/attendance/updateAttendance', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          initials,\r\n          weekStart,\r\n          day: day.toLowerCase(),\r\n          status\r\n        })\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Failed to update attendance');\r\n      \r\n      // Trigger data refresh\r\n      onAttendanceUpdated?.([]);\r\n      \r\n      // Show brief confirmation\r\n      setShowConfirmation(true);\r\n      setTimeout(() => setShowConfirmation(false), 2000);\r\n      \r\n    } catch (error) {\r\n      console.error('Error updating attendance:', error);\r\n      // Could add error state/toast here\r\n    }\r\n  };\r\n\r\n  const getMondayOfCurrentWeek = (): Date => {\r\n    const today = new Date();\r\n    const dayOfWeek = today.getDay();\r\n    const monday = new Date(today);\r\n    monday.setDate(today.getDate() - (dayOfWeek === 0 ? 6 : dayOfWeek - 1));\r\n    return monday;\r\n  };\r\n\r\n  const getWeekStart = (week: 'current' | 'next'): string => {\r\n    const monday = getMondayOfCurrentWeek();\r\n    if (week === 'next') {\r\n      monday.setDate(monday.getDate() + 7);\r\n    }\r\n    return monday.toISOString().split('T')[0];\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    setIsSaving(true);\r\n    setSaveError(null);\r\n\r\n    try {\r\n      const weekStartStr = getWeekStart(selectedWeek);\r\n      \r\n      // For weekly updates, we'll send the week's attendance pattern\r\n      // Convert selected days to attendance pattern\r\n      const attendancePattern = Object.keys(localAttendance).filter(day => localAttendance[day]).join(',') || 'office';\r\n\r\n      await fetch('/api/attendance/updateAttendance', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          initials: userInitials,\r\n          weekStart: weekStartStr,\r\n          attendanceDays: attendancePattern\r\n        }),\r\n      });\r\n\r\n      // Refresh attendance data\r\n      if (onAttendanceUpdated) {\r\n        try {\r\n          const attendanceResponse = await fetch('/api/attendance/getAttendance', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' }\r\n          });\r\n          \r\n          if (attendanceResponse.ok) {\r\n            const attendanceResult = await attendanceResponse.json();\r\n            if (attendanceResult.success && attendanceResult.attendance) {\r\n              // Transform the data to match expected format\r\n              const transformedRecords = attendanceResult.attendance.map((member: any) => ({\r\n                Attendance_ID: 0,\r\n                Entry_ID: 0,\r\n                First_Name: member.First,\r\n                Initials: member.Initials,\r\n                Level: '',\r\n                Week_Start: new Date().toISOString().split('T')[0],\r\n                Week_End: new Date().toISOString().split('T')[0],\r\n                ISO_Week: Math.ceil(((new Date().getTime() - new Date(new Date().getFullYear(), 0, 1).getTime()) / 86400000 + 1) / 7),\r\n                Attendance_Days: member.Status === 'office' ? 'Monday,Tuesday,Wednesday,Thursday,Friday' : '',\r\n                Confirmed_At: member.IsConfirmed ? new Date().toISOString() : null,\r\n                status: member.Status,\r\n                isConfirmed: member.IsConfirmed,\r\n                isOnLeave: member.IsOnLeave\r\n              }));\r\n              onAttendanceUpdated(transformedRecords);\r\n            }\r\n          }\r\n        } catch (refreshError) {\r\n          console.error('Error refreshing attendance data:', refreshError);\r\n          // Fallback: still call with empty array if refresh fails\r\n          onAttendanceUpdated([]);\r\n        }\r\n      }\r\n\r\n      closeModal();\r\n    } catch (error) {\r\n      console.error('Error saving attendance:', error);\r\n      setSaveError(error instanceof Error ? error.message : 'Failed to save attendance');\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    focusTable: openModal,\r\n    setWeek: (week: 'current' | 'next') => {\r\n      setSelectedWeek(week);\r\n      openModal();\r\n    },\r\n  }));\r\n\r\n  // Styles\r\n  const containerStyle = (isDark: boolean) => mergeStyles({\r\n    padding: '16px',\r\n    background: isDark ? colours.dark.background : colours.light.background,\r\n    color: isDark ? colours.dark.text : colours.light.text,\r\n    borderRadius: '8px',\r\n  });\r\n\r\n  const modalContentStyle = mergeStyles({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: '16px',\r\n    padding: '8px',\r\n  });\r\n\r\n  const weekSelectorStyle = (isDark: boolean) => mergeStyles({\r\n    display: 'flex',\r\n    gap: '0px',\r\n    border: `1px solid ${isDark ? colours.dark.border : colours.light.border}`,\r\n    borderRadius: '4px',\r\n    overflow: 'hidden',\r\n  });\r\n\r\n  const weekOptionStyle = (isDark: boolean, selected: boolean) => mergeStyles({\r\n    padding: '8px 16px',\r\n    cursor: 'pointer',\r\n    transition: 'background-color 0.15s ease',\r\n    fontSize: '13px',\r\n    fontWeight: '500',\r\n    background: selected ? colours.blue : (isDark ? colours.dark.cardBackground : colours.light.cardBackground),\r\n    color: selected ? '#fff' : (isDark ? colours.dark.text : colours.light.text),\r\n    border: 'none',\r\n    borderRight: selected ? 'none' : `1px solid ${isDark ? colours.dark.border : colours.light.border}`,\r\n\r\n    '&:last-child': {\r\n      borderRight: 'none',\r\n    },\r\n\r\n    '&:hover': {\r\n      background: selected ? colours.blue : (isDark ? colours.dark.sectionBackground : colours.light.sectionBackground),\r\n    }\r\n  });\r\n\r\n  const dayGridStyle = mergeStyles({\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(5, 1fr)',\r\n    gap: '8px',\r\n  });\r\n\r\n  const dayCardStyle = (isDark: boolean, selected: boolean, isWeekend: boolean) => mergeStyles({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '12px 8px',\r\n    border: `2px solid ${selected ? colours.blue : (isDark ? colours.dark.border : colours.light.border)}`,\r\n    borderRadius: '8px',\r\n    cursor: isWeekend ? 'not-allowed' : 'pointer',\r\n    background: selected \r\n      ? colours.blue + '20' \r\n      : (isDark ? colours.dark.cardBackground : colours.light.cardBackground),\r\n    transition: 'all 0.2s ease',\r\n    opacity: isWeekend ? 0.5 : 1,\r\n\r\n    '&:hover': {\r\n      ...(isWeekend ? {} : {\r\n        background: selected \r\n          ? colours.blue + '30' \r\n          : (isDark ? colours.dark.sectionBackground : colours.light.sectionBackground),\r\n        transform: 'translateY(-1px)',\r\n        boxShadow: isDark \r\n          ? '0 2px 8px rgba(0, 0, 0, 0.3)' \r\n          : '0 2px 8px rgba(0, 0, 0, 0.1)',\r\n      })\r\n    }\r\n  });\r\n\r\n  const dayLabelStyle = (isDark: boolean) => mergeStyles({\r\n    fontSize: '12px',\r\n    fontWeight: '600',\r\n    marginBottom: '4px',\r\n    color: isDark ? colours.dark.text : colours.light.text,\r\n  });\r\n\r\n  const dayIconStyle = (selected: boolean) => mergeStyles({\r\n    fontSize: '16px',\r\n    color: selected ? colours.blue : colours.grey,\r\n  });\r\n\r\n  // Loading state\r\n  if (isLoadingAttendance || isLoadingAnnualLeave) {\r\n    return (\r\n      <div\r\n        className={containerStyle(isDarkMode)}\r\n        style={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          gap: '12px',\r\n          padding: '36px 40px',\r\n          background: isDarkMode\r\n            ? 'linear-gradient(135deg, rgba(46, 60, 78, 0.75) 0%, rgba(31, 45, 65, 0.85) 100%)'\r\n            : 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n          borderRadius: '12px',\r\n          border: `1px solid ${isDarkMode ? 'rgba(255,255,255,0.08)' : 'rgba(6,23,51,0.06)'}`,\r\n          boxShadow: isDarkMode\r\n            ? '0 12px 30px rgba(0, 0, 0, 0.35)'\r\n            : '0 12px 30px rgba(6, 23, 51, 0.12)',\r\n        }}\r\n      >\r\n        <Icon\r\n          iconName=\"Sync\"\r\n          style={{\r\n            fontSize: '24px',\r\n            color: colours.blue,\r\n            animation: 'spin 1s linear infinite',\r\n            lineHeight: 1,\r\n          }}\r\n        />\r\n        <Text\r\n          style={{\r\n            color: isDarkMode ? '#E5E7EB' : colours.light.subText,\r\n            fontWeight: 600,\r\n            letterSpacing: '0.3px',\r\n            lineHeight: 1.4,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          Loading attendance data...\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Error state\r\n  if (attendanceError || annualLeaveError) {\r\n    return (\r\n      <div className={containerStyle(isDarkMode)}>\r\n        <MessageBar messageBarType={MessageBarType.error}>\r\n          {attendanceError || annualLeaveError}\r\n        </MessageBar>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <WeeklyAttendanceView\r\n        isDarkMode={isDarkMode}\r\n        attendanceRecords={attendanceRecords}\r\n        teamData={teamData}\r\n        userData={userData}\r\n        annualLeaveRecords={annualLeaveRecords}\r\n        futureLeaveRecords={futureLeaveRecords}\r\n        onAttendanceUpdated={onAttendanceUpdated}\r\n        onDayUpdate={handleDayUpdate}\r\n      />\r\n\r\n      {/* Confirmation feedback */}\r\n      {showConfirmation && (\r\n        <div style={{\r\n          position: 'fixed',\r\n          top: '20px',\r\n          right: '20px',\r\n          background: colours.green,\r\n          color: 'white',\r\n          padding: '12px 20px',\r\n          borderRadius: '6px',\r\n          boxShadow: '0 4px 12px rgba(0, 0, 0, 0.15)',\r\n          zIndex: 1000,\r\n          fontSize: '14px',\r\n          fontWeight: '500'\r\n        }}>\r\n          ✓ Attendance updated successfully\r\n        </div>\r\n      )}\r\n\r\n      {/* Enhanced Modal */}\r\n      <BespokePanel\r\n        isOpen={isModalOpen}\r\n        onClose={closeModal}\r\n        title=\"Confirm Your Attendance\"\r\n        width=\"500px\"\r\n      >\r\n        <div className={modalContentStyle}>\r\n          {saveError && (\r\n            <MessageBar messageBarType={MessageBarType.error} onDismiss={() => setSaveError(null)}>\r\n              {saveError}\r\n            </MessageBar>\r\n          )}\r\n\r\n          {/* Week Selector */}\r\n          <div>\r\n            <Text style={{ fontWeight: '600', marginBottom: '8px', display: 'block' }}>\r\n              Select Week\r\n            </Text>\r\n            <div className={weekSelectorStyle(isDarkMode)}>\r\n              <div \r\n                className={weekOptionStyle(isDarkMode, selectedWeek === 'current')}\r\n                onClick={() => setSelectedWeek('current')}\r\n              >\r\n                This Week\r\n              </div>\r\n              <div \r\n                className={weekOptionStyle(isDarkMode, selectedWeek === 'next')}\r\n                onClick={() => setSelectedWeek('next')}\r\n              >\r\n                Next Week\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Day Selection */}\r\n          <div style={{ marginBottom: '16px' }}>\r\n            <Text style={{ fontWeight: '600', marginBottom: '8px', display: 'block' }}>\r\n              Days in Office\r\n            </Text>\r\n            <div className={dayGridStyle}>\r\n              {['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'].map((day) => {\r\n                const isSelected = localAttendance[day] || false;\r\n                const isWeekend = false; // Monday-Friday are not weekends\r\n                \r\n                return (\r\n                  <div \r\n                    key={day}\r\n                    className={dayCardStyle(isDarkMode, isSelected, isWeekend)}\r\n                    onClick={() => toggleDay(day)}\r\n                  >\r\n                    <Text className={dayLabelStyle(isDarkMode)}>{day.slice(0, 3)}</Text>\r\n                    <Icon \r\n                      iconName={isSelected ? 'CityNext' : 'Home'} \r\n                      className={dayIconStyle(isSelected)}\r\n                    />\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Action Buttons */}\r\n          <div style={{ display: 'flex', gap: '12px', justifyContent: 'flex-end' }}>\r\n            <DefaultButton \r\n              text=\"Cancel\" \r\n              onClick={closeModal}\r\n              disabled={isSaving}\r\n            />\r\n            <DefaultButton \r\n              text={isSaving ? \"Saving...\" : \"Confirm Attendance\"}\r\n              primary\r\n              onClick={handleSave}\r\n              disabled={isSaving}\r\n              styles={{\r\n                root: {\r\n                  background: colours.blue,\r\n                  borderColor: colours.blue,\r\n                },\r\n                rootHovered: {\r\n                  background: colours.blue + 'CC',\r\n                  borderColor: colours.blue + 'CC',\r\n                },\r\n                rootDisabled: {\r\n                  background: colours.grey,\r\n                  color: '#fff',\r\n                  borderColor: colours.grey,\r\n                },\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </BespokePanel>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default EnhancedAttendance;","import React, { useState, useMemo, forwardRef, useImperativeHandle } from 'react';\r\nimport type { CSSProperties } from 'react';\r\nimport { DefaultButton, Icon } from '@fluentui/react';\r\nimport { colours } from '../../app/styles/colours';\r\nimport helixLogo from '../../assets/dark blue mark.svg';\r\nimport { FaUmbrellaBeach } from 'react-icons/fa';\r\n\r\ninterface StatusConfig {\r\n    readonly icon: 'office' | 'wfh' | 'away' | 'off-sick' | 'out-of-office';\r\n    readonly color: string;\r\n    readonly label: string;\r\n    readonly bgColor: string;\r\n    readonly darkBg: string;\r\n}\r\n\r\nconst getPanelContainerStyle = (isDarkMode: boolean): CSSProperties => ({\r\n    background: isDarkMode\r\n        ? 'linear-gradient(135deg, rgba(5, 12, 26, 0.98) 0%, rgba(9, 22, 44, 0.94) 52%, rgba(13, 35, 63, 0.9) 100%)'\r\n        : 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n    borderRadius: '16px',\r\n    padding: '24px',\r\n        boxShadow: isDarkMode\r\n            ? '0 20px 44px rgba(2, 6, 17, 0.72)'\r\n            : '0 16px 40px rgba(13, 47, 96, 0.18)',\r\n        border: `1px solid ${isDarkMode ? 'rgba(59, 130, 246, 0.26)' : 'rgba(148, 163, 184, 0.16)'}`,\r\n    width: '100%',\r\n    maxWidth: '920px',\r\n    margin: '0 auto',\r\n    transition: 'background 0.25s ease, box-shadow 0.25s ease',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: '20px',\r\n    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n});\r\n\r\nconst getWeekCardStyle = (isDarkMode: boolean): CSSProperties => ({\r\n    background: isDarkMode\r\n        ? 'linear-gradient(135deg, rgba(7, 16, 32, 0.94) 0%, rgba(11, 30, 55, 0.86) 55%, rgba(10, 39, 72, 0.8) 100%)'\r\n        : 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n    border: `1px solid ${isDarkMode ? 'rgba(125, 211, 252, 0.24)' : 'rgba(148, 163, 184, 0.22)'}`,\r\n    borderRadius: '12px',\r\n    padding: '20px',\r\n    marginBottom: '16px',\r\n    boxShadow: isDarkMode\r\n        ? '0 18px 32px rgba(2, 6, 17, 0.58)'\r\n        : '0 12px 28px rgba(13, 47, 96, 0.12)',\r\n    backdropFilter: 'blur(12px)',\r\n    transition: 'transform 0.2s ease, box-shadow 0.2s ease',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: '16px',\r\n});\r\n\r\nconst getQuickSelectButtonStyle = (isDarkMode: boolean, accent: string): CSSProperties => ({\r\n    padding: '6px 12px',\r\n    borderRadius: '6px',\r\n    border: `1px solid ${accent}`,\r\n    background: isDarkMode\r\n        ? `linear-gradient(135deg, ${accent}40 0%, rgba(8, 23, 42, 0.75) 100%)`\r\n        : `linear-gradient(135deg, #FFFFFF 0%, ${accent}1f 100%)`,\r\n    color: isDarkMode ? '#E9F5FF' : accent,\r\n    cursor: 'pointer',\r\n    fontSize: '11px',\r\n    fontWeight: 500,\r\n    boxShadow: isDarkMode\r\n        ? '0 6px 16px rgba(0, 0, 0, 0.35)'\r\n        : '0 6px 16px rgba(13, 47, 96, 0.12)',\r\n    transition: 'transform 0.15s ease, box-shadow 0.15s ease',\r\n});\r\n\r\n// Custom icon component to handle both FluentUI icons and custom images\r\nconst StatusIcon: React.FC<{ \r\n  status: 'wfh' | 'office' | 'away' | 'off-sick' | 'out-of-office';\r\n  size: string;\r\n  color: string;\r\n}> = ({ status, size, color }) => {\r\n  if (status === 'office') {\r\n    return (\r\n      <img \r\n        src={helixLogo} \r\n        alt=\"Helix Office\" \r\n        style={{ \r\n          width: size, \r\n          height: size,\r\n          objectFit: 'contain',\r\n          filter: `brightness(0) saturate(100%) invert(17%) sepia(41%) saturate(1344%) hue-rotate(195deg) brightness(95%) contrast(91%)` // Convert to missed blue #0d2f60\r\n        }} \r\n      />\r\n    );\r\n  }\r\n  \r\n    if (status === 'away') {\r\n        return (\r\n            <FaUmbrellaBeach\r\n                style={{\r\n                    color,\r\n                    fontSize: size\r\n                }}\r\n            />\r\n        );\r\n    }\r\n  \r\n  const iconName = status === 'off-sick' ? 'Health' :\r\n                   status === 'out-of-office' ? 'Suitcase' :\r\n                   status === 'wfh' ? 'Home' : 'Help';\r\n  \r\n  return (\r\n    <Icon \r\n      iconName={iconName}\r\n      style={{ \r\n        color: color, \r\n        fontSize: size \r\n      }} \r\n    />\r\n  );\r\n};\r\n\r\ninterface AttendanceRecord {\r\n    Attendance_ID: number;\r\n    Entry_ID: number;\r\n    First_Name: string;\r\n    Initials: string;\r\n    Level: string;\r\n    Week_Start: string;\r\n    Week_End: string;\r\n    ISO_Week: number;\r\n    Attendance_Days: string;\r\n    Confirmed_At: string | null;\r\n}\r\n\r\ninterface AnnualLeaveRecord {\r\n    person: string;\r\n    start_date: string;\r\n    end_date: string;\r\n    reason: string;\r\n    status: string;\r\n    id: string;\r\n    rejection_notes?: string;\r\n    approvers?: string[];\r\n}\r\n\r\ninterface PersonalAttendanceConfirmProps {\r\n    isDarkMode: boolean;\r\n    attendanceRecords: AttendanceRecord[];\r\n    annualLeaveRecords: AnnualLeaveRecord[];\r\n    futureLeaveRecords: AnnualLeaveRecord[];\r\n    userData: any;\r\n    onSave: (weekStart: string, days: string) => Promise<void>;\r\n    onClose: () => void;\r\n}\r\n\r\nconst PersonalAttendanceConfirm = forwardRef<\r\n    { setWeek: (week: 'current' | 'next') => void; focusTable: () => void },\r\n    PersonalAttendanceConfirmProps\r\n>(({\r\n    isDarkMode,\r\n    attendanceRecords,\r\n    annualLeaveRecords,\r\n    futureLeaveRecords,\r\n    userData,\r\n    onSave,\r\n    onClose,\r\n}, ref) => {\r\n    const weekDays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\r\n\r\n    const getMondayOfCurrentWeek = (): Date => {\r\n        const now = new Date();\r\n        const day = now.getDay();\r\n        const diff = day === 0 ? -6 : 1 - day;\r\n        const monday = new Date(now);\r\n        monday.setDate(now.getDate() + diff);\r\n        return monday;\r\n    };\r\n\r\n    const formatDateLocal = (d: Date): string => {\r\n        const year = d.getFullYear();\r\n        const month = String(d.getMonth() + 1).padStart(2, '0');\r\n        const day = String(d.getDate()).padStart(2, '0');\r\n        return `${year}-${month}-${day}`;\r\n    };\r\n\r\n    const currentWeekStart = formatDateLocal(getMondayOfCurrentWeek());\r\n    const nextWeekMonday = new Date(getMondayOfCurrentWeek());\r\n    nextWeekMonday.setDate(nextWeekMonday.getDate() + 7);\r\n    const nextWeekStart = formatDateLocal(nextWeekMonday);\r\n\r\n    const userInitials = userData?.displayName?.match(/\\b\\w/g)?.join('').toUpperCase() || \r\n                        userData?.mail?.substring(0, 2).toUpperCase() || \r\n                        userData?.[0]?.Initials || '';\r\n    console.log('🔍 userInitials:', userInitials);\r\n    console.log('🔍 userData:', userData);\r\n\r\n    const combinedLeaveRecords = useMemo(() => [...annualLeaveRecords, ...futureLeaveRecords], [annualLeaveRecords, futureLeaveRecords]);\r\n\r\n    const initialState: Record<string, Record<string, string>> = useMemo(() => {\r\n        console.log('🔍 Calculating initial state...');\r\n        console.log('🔍 attendanceRecords:', attendanceRecords);\r\n        console.log('🔍 userInitials in useMemo:', userInitials);\r\n        const state: Record<string, Record<string, string>> = {\r\n            [currentWeekStart]: {},\r\n            [nextWeekStart]: {},\r\n        };\r\n        const dayMap: Record<string, string> = {\r\n            Mon: 'Monday',\r\n            Tue: 'Tuesday',\r\n            Wed: 'Wednesday',\r\n            Thu: 'Thursday',\r\n            Fri: 'Friday',\r\n        };\r\n        const filteredRecords = attendanceRecords.filter((r) => r.Initials === userInitials);\r\n        console.log('🔍 Filtered attendance records:', filteredRecords);\r\n        filteredRecords.forEach((rec) => {\r\n                if (rec.Attendance_Days) {\r\n                    console.log('🔍 Processing record:', rec);\r\n                    // Parse the attendance string - format: \"Mon:office,Tue:home,Wed:out-of-office\" etc\r\n                    const dayStatuses = rec.Attendance_Days.split(',').map(d => d.trim());\r\n                    console.log('🔍 Day statuses from record:', dayStatuses);\r\n                    dayStatuses.forEach(dayStatus => {\r\n                        const [dayAbbr, status] = dayStatus.includes(':') ? dayStatus.split(':') : [dayStatus, 'office'];\r\n                        const dayName = dayMap[dayAbbr] || dayAbbr;\r\n                        if (weekDays.includes(dayName)) {\r\n                            state[rec.Week_Start][dayName] = status || 'wfh';\r\n                            console.log('🔍 Set state for', rec.Week_Start, dayName, 'to', status);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        \r\n        // Ensure both weeks have default values for all weekdays if no data exists\r\n        [currentWeekStart, nextWeekStart].forEach(weekStart => {\r\n            weekDays.forEach(day => {\r\n                if (!state[weekStart][day]) {\r\n                    state[weekStart][day] = 'wfh'; // Default to WFH if no data\r\n                    console.log('🔍 Set default state for', weekStart, day, 'to wfh');\r\n                }\r\n            });\r\n        });\r\n        \r\n        console.log('🔍 Initial state calculated:', state);\r\n        return state;\r\n    }, [attendanceRecords, userInitials, currentWeekStart, nextWeekStart]);\r\n\r\n    const [localAttendance, setLocalAttendance] = useState<Record<string, Record<string, string>>>(initialState);\r\n    console.log('🔍 LocalAttendance state:', localAttendance);\r\n    const [saving, setSaving] = useState(false);\r\n    const [saveError, setSaveError] = useState<string | null>(null);\r\n    const [saveSuccess, setSaveSuccess] = useState(false);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setWeek: () => { },\r\n        focusTable: () => { },\r\n    }));\r\n\r\n    // Define the 5 statuses and their cycle order\r\n    const statuses = ['wfh', 'office', 'away', 'off-sick', 'out-of-office'];\r\n    \r\n    // Status display configuration\r\n    const getStatusConfig = (status: string): StatusConfig => {\r\n        switch (status) {\r\n            case 'office':\r\n                return { \r\n                    icon: 'office', \r\n                    color: colours.missedBlue, \r\n                    label: 'In Office',\r\n                    bgColor: `${colours.missedBlue}20`,\r\n                    darkBg: 'linear-gradient(135deg, rgba(13, 47, 96, 0.55) 0%, rgba(9, 25, 49, 0.68) 100%)'\r\n                };\r\n            case 'wfh':\r\n                return { \r\n                    icon: 'wfh', \r\n                    color: colours.green, \r\n                    label: 'WFH',\r\n                    bgColor: `${colours.green}20`,\r\n                    darkBg: 'linear-gradient(135deg, rgba(32, 178, 108, 0.32) 0%, rgba(15, 63, 63, 0.55) 100%)'\r\n                };\r\n            case 'away':\r\n                return { \r\n                    icon: 'away', \r\n                    color: colours.subtleGrey, \r\n                    label: 'Away',\r\n                    bgColor: `${colours.subtleGrey}20`,\r\n                    darkBg: 'linear-gradient(135deg, rgba(107, 114, 128, 0.38) 0%, rgba(55, 65, 81, 0.48) 100%)'\r\n                };\r\n            case 'off-sick':\r\n                return { \r\n                    icon: 'off-sick', \r\n                    color: colours.cta, \r\n                    label: 'Off Sick',\r\n                    bgColor: `${colours.cta}20`,\r\n                    darkBg: 'linear-gradient(135deg, rgba(214, 85, 65, 0.3) 0%, rgba(127, 29, 29, 0.45) 100%)'\r\n                };\r\n            case 'out-of-office':\r\n                return { \r\n                    icon: 'out-of-office', \r\n                    color: colours.orange, \r\n                    label: 'Out-Of-Office',\r\n                    bgColor: `${colours.orange}20`,\r\n                    darkBg: 'linear-gradient(135deg, rgba(255, 140, 0, 0.28) 0%, rgba(146, 64, 14, 0.45) 100%)'\r\n                };\r\n            default:\r\n                return { \r\n                    icon: 'wfh', \r\n                    color: colours.green, \r\n                    label: 'WFH',\r\n                    bgColor: `${colours.green}20`,\r\n                    darkBg: 'linear-gradient(135deg, rgba(32, 178, 108, 0.32) 0%, rgba(15, 63, 63, 0.55) 100%)'\r\n                };\r\n        }\r\n    };\r\n    \r\n    const toggleDay = (weekStart: string, day: string) => {\r\n        console.log('🔍 toggleDay called with weekStart:', weekStart, 'day:', day);\r\n        setLocalAttendance((prev) => {\r\n            console.log('🔍 Previous localAttendance:', prev);\r\n            const currentStatus = prev[weekStart]?.[day] || 'wfh';\r\n            console.log('🔍 Current status:', currentStatus);\r\n            const currentIndex = statuses.indexOf(currentStatus);\r\n            const nextIndex = (currentIndex + 1) % statuses.length;\r\n            const nextStatus = statuses[nextIndex];\r\n            console.log('🔍 Next status:', nextStatus);\r\n            \r\n            const newState = {\r\n                ...prev,\r\n                [weekStart]: {\r\n                    ...prev[weekStart],\r\n                    [day]: nextStatus\r\n                }\r\n            };\r\n            console.log('🔍 New localAttendance state:', newState);\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    const handleSave = async () => {\r\n        console.log('🔍 Save button clicked');\r\n        setSaving(true);\r\n        setSaveError(null);\r\n        setSaveSuccess(false);\r\n        try {\r\n            for (const weekStart of [currentWeekStart, nextWeekStart]) {\r\n                const dayStatuses = localAttendance[weekStart] || {};\r\n                console.log('🔍 Day statuses for', weekStart, ':', dayStatuses);\r\n                const dayStrings = Object.entries(dayStatuses).map(([dayName, status]) => {\r\n                    const dayMap: Record<string, string> = {\r\n                        Monday: 'Mon',\r\n                        Tuesday: 'Tue',\r\n                        Wednesday: 'Wed',\r\n                        Thursday: 'Thu',\r\n                        Friday: 'Fri',\r\n                    };\r\n                    const dayAbbr = dayMap[dayName] || dayName;\r\n                    return `${dayAbbr}:${status}`;\r\n                });\r\n                const days = dayStrings.join(',');\r\n                console.log('🔍 Calling onSave with weekStart:', weekStart, 'days:', days);\r\n                await onSave(weekStart, days);\r\n            }\r\n            console.log('🔍 Save completed successfully');\r\n            setSaveSuccess(true);\r\n            // Show brief success feedback before closing\r\n            setTimeout(() => {\r\n                onClose();\r\n            }, 700);\r\n        } catch (error) {\r\n            console.error('❌ Error saving attendance:', error);\r\n            const message = error instanceof Error ? error.message : 'Failed to save attendance';\r\n            setSaveError(message);\r\n        } finally {\r\n            setSaving(false);\r\n        }\r\n    };\r\n\r\n    const isOnLeave = (weekStart: string, dayIndex: number): boolean => {\r\n        const weekStartDate = new Date(weekStart + 'T00:00:00');\r\n        const date = new Date(weekStartDate);\r\n        date.setDate(date.getDate() + dayIndex);\r\n        const iso = formatDateLocal(date);\r\n\r\n        return combinedLeaveRecords.some(\r\n            (leave) =>\r\n                leave.status === 'booked' &&\r\n                leave.person.trim().toLowerCase() === userInitials.toLowerCase() &&\r\n                iso >= leave.start_date &&\r\n                iso <= leave.end_date\r\n        );\r\n    };\r\n\r\n    const getWeekDateRange = (weekStart: string): string => {\r\n        const start = new Date(weekStart + 'T00:00:00');\r\n        const end = new Date(start);\r\n        end.setDate(start.getDate() + 4); // Friday\r\n        \r\n        const formatDate = (date: Date) => date.toLocaleDateString('en-GB', { \r\n            day: 'numeric', \r\n            month: 'short' \r\n        });\r\n        \r\n        return `${formatDate(start)} - ${formatDate(end)}`;\r\n    };\r\n\r\n    const renderWeek = (label: string, weekStart: string) => {\r\n        return (\r\n            <div key={weekStart} style={getWeekCardStyle(isDarkMode)}>\r\n                <div style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'space-between',\r\n                    gap: '12px',\r\n                    marginBottom: '12px',\r\n                    paddingBottom: '12px',\r\n                    borderBottom: `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.28)' : 'rgba(148, 163, 184, 0.22)'}`\r\n                }}>\r\n                    <h3 style={{\r\n                        margin: 0,\r\n                        color: isDarkMode ? '#FFFFFF' : colours.light.text,\r\n                        fontSize: '16px',\r\n                        fontWeight: 600,\r\n                        letterSpacing: '0.01em'\r\n                    }}>\r\n                        {label}\r\n                    </h3>\r\n                    <span style={{\r\n                        fontSize: '12px',\r\n                        color: isDarkMode ? 'rgba(226, 232, 240, 0.75)' : colours.greyText\r\n                    }}>\r\n                        {getWeekDateRange(weekStart)}\r\n                    </span>\r\n                </div>\r\n\r\n                {(saveError || saveSuccess) && (\r\n                    <div style={{\r\n                        marginBottom: '12px',\r\n                        padding: '10px 12px',\r\n                        borderRadius: '8px',\r\n                        border: `1px solid ${saveError ? colours.cta : colours.green}`,\r\n                        background: saveError\r\n                            ? (isDarkMode\r\n                                ? 'linear-gradient(135deg, rgba(214, 85, 65, 0.22) 0%, rgba(127, 29, 29, 0.45) 100%)'\r\n                                : `${colours.cta}10`)\r\n                            : (isDarkMode\r\n                                ? 'linear-gradient(135deg, rgba(32, 178, 108, 0.24) 0%, rgba(17, 99, 67, 0.4) 100%)'\r\n                                : `${colours.green}10`),\r\n                        color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                        boxShadow: isDarkMode\r\n                            ? '0 6px 16px rgba(8, 23, 44, 0.35)'\r\n                            : '0 6px 16px rgba(13, 47, 96, 0.1)'\r\n                    }}>\r\n                        {saveError ? 'Could not save attendance. Please try again.' : 'Attendance saved.'}\r\n                    </div>\r\n                )}\r\n\r\n                <div style={{\r\n                    display: 'grid',\r\n                    gridTemplateColumns: 'repeat(5, minmax(0, 1fr))',\r\n                    gap: '12px'\r\n                }}>\r\n                    {weekDays.map((day, dayIndex) => {\r\n                        const currentStatus = localAttendance[weekStart]?.[day] || 'home';\r\n                        const onLeave = isOnLeave(weekStart, dayIndex);\r\n                        const statusConfig = getStatusConfig(currentStatus);\r\n                        \r\n                        return (\r\n                            <div\r\n                                key={day}\r\n                                onClick={onLeave ? undefined : () => toggleDay(weekStart, day)}\r\n                                style={{\r\n                                    padding: '16px 10px',\r\n                                    borderRadius: '10px',\r\n                                    border: `2px solid ${\r\n                                        onLeave\r\n                                            ? 'rgba(148, 163, 184, 0.45)'\r\n                                            : statusConfig.color\r\n                                    }`,\r\n                                    background: onLeave\r\n                                        ? (isDarkMode\r\n                                            ? 'linear-gradient(135deg, rgba(107, 114, 128, 0.24) 0%, rgba(55, 65, 81, 0.42) 100%)'\r\n                                            : `${colours.greyText}20`)\r\n                                        : (isDarkMode ? statusConfig.darkBg : statusConfig.bgColor),\r\n                                    cursor: onLeave ? 'not-allowed' : 'pointer',\r\n                                    textAlign: 'center',\r\n                                    transition: 'transform 0.2s ease, box-shadow 0.2s ease',\r\n                                    opacity: onLeave ? 0.6 : 1,\r\n                                    boxShadow: isDarkMode\r\n                                        ? '0 8px 18px rgba(8, 23, 44, 0.35)'\r\n                                        : '0 8px 18px rgba(13, 47, 96, 0.1)'\r\n                                }}\r\n                            >\r\n                                <div style={{\r\n                                    fontSize: '12px',\r\n                                    fontWeight: 600,\r\n                                    color: isDarkMode ? '#E9F5FF' : colours.light.text,\r\n                                    marginBottom: '10px',\r\n                                    letterSpacing: '0.05em'\r\n                                }}>\r\n                                    {day.substring(0, 3).toUpperCase()}\r\n                                </div>\r\n                                <div style={{\r\n                                    display: 'flex',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'center',\r\n                                    height: '26px'\r\n                                }}>\r\n                                    {onLeave ? (\r\n                                        <Icon \r\n                                            iconName=\"Airplane\" \r\n                                            style={{ \r\n                                                color: isDarkMode ? '#CBD5F5' : colours.greyText,\r\n                                                fontSize: '18px'\r\n                                            }} \r\n                                        />\r\n                                    ) : (\r\n                                        <StatusIcon\r\n                                            status={currentStatus as 'wfh' | 'office' | 'away' | 'off-sick' | 'out-of-office'}\r\n                                            size=\"18px\"\r\n                                            color={statusConfig.color}\r\n                                        />\r\n                                    )}\r\n                                </div>\r\n                                <div style={{\r\n                                    fontSize: '11px',\r\n                                    color: isDarkMode ? 'rgba(226, 232, 240, 0.72)' : colours.light.subText,\r\n                                    marginTop: '6px'\r\n                                }}>\r\n                                    {onLeave ? 'Away' : statusConfig.label}\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n\r\n                <div style={{\r\n                    display: 'flex',\r\n                    gap: '10px',\r\n                    marginTop: '14px',\r\n                    flexWrap: 'wrap'\r\n                }}>\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={() => setLocalAttendance(prev => ({ \r\n                            ...prev, \r\n                            [weekStart]: weekDays.reduce((acc, day) => ({ ...acc, [day]: 'wfh' }), {})\r\n                        }))}\r\n                        style={getQuickSelectButtonStyle(isDarkMode, colours.green)}\r\n                    >\r\n                        All WFH\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={() => setLocalAttendance(prev => ({ \r\n                            ...prev, \r\n                            [weekStart]: weekDays.reduce((acc, day) => ({ ...acc, [day]: 'office' }), {})\r\n                        }))}\r\n                        style={getQuickSelectButtonStyle(isDarkMode, colours.missedBlue)}\r\n                    >\r\n                        All Office\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div style={getPanelContainerStyle(isDarkMode)}>\r\n            <div style={{\r\n                textAlign: 'center',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                gap: '6px'\r\n            }}>\r\n                <h2 style={{\r\n                    margin: 0,\r\n                    color: isDarkMode ? '#FFFFFF' : colours.light.text,\r\n                    fontSize: '19px',\r\n                    fontWeight: 600,\r\n                    letterSpacing: '0.01em'\r\n                }}>\r\n                    Confirm Your Attendance\r\n                </h2>\r\n                <p style={{\r\n                    margin: 0,\r\n                    fontSize: '12px',\r\n                    color: isDarkMode ? 'rgba(226, 232, 240, 0.7)' : colours.greyText\r\n                }}>\r\n                    Tap each day to cycle through Office, WFH, Away, Sick or OOO. We auto mark booked leave.\r\n                </p>\r\n            </div>\r\n\r\n            {renderWeek('This Week', currentWeekStart)}\r\n            {renderWeek('Next Week', nextWeekStart)}\r\n\r\n            <div style={{ \r\n                display: 'flex', \r\n                gap: '12px', \r\n                justifyContent: 'flex-end',\r\n                marginTop: '12px',\r\n                paddingTop: '18px',\r\n                borderTop: `1px solid ${isDarkMode ? 'rgba(96, 165, 250, 0.24)' : 'rgba(148, 163, 184, 0.24)'}`\r\n            }}>\r\n                <DefaultButton \r\n                    text=\"Cancel\" \r\n                    onClick={onClose}\r\n                    styles={{\r\n                        root: {\r\n                            border: `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.45)' : colours.greyText}`,\r\n                            backgroundColor: isDarkMode ? 'rgba(15, 35, 61, 0.6)' : 'transparent',\r\n                            color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                            transition: 'transform 0.15s ease, background-color 0.15s ease',\r\n                        },\r\n                        rootHovered: {\r\n                            backgroundColor: isDarkMode ? 'rgba(54, 144, 206, 0.22)' : 'rgba(54, 144, 206, 0.12)',\r\n                            borderColor: colours.highlight,\r\n                            color: colours.highlight,\r\n                        }\r\n                    }}\r\n                />\r\n                <DefaultButton \r\n                    text={saving ? 'Saving...' : 'Save Attendance'} \r\n                    onClick={handleSave} \r\n                    disabled={saving}\r\n                    primary\r\n                    styles={{\r\n                        root: {\r\n                            background: 'linear-gradient(135deg, #0d2f60 0%, #174a92 100%)',\r\n                            border: '1px solid #174a92',\r\n                            color: '#ffffff',\r\n                            boxShadow: isDarkMode\r\n                                ? '0 10px 28px rgba(8, 23, 44, 0.5)'\r\n                                : '0 10px 24px rgba(13, 47, 96, 0.28)',\r\n                            transition: 'transform 0.15s ease, box-shadow 0.15s ease',\r\n                        },\r\n                        rootHovered: {\r\n                            background: 'linear-gradient(135deg, #174a92 0%, #1c5fb8 100%)',\r\n                            borderColor: '#1c5fb8',\r\n                        },\r\n                        rootPressed: {\r\n                            background: 'linear-gradient(135deg, #123a78 0%, #174a92 100%)',\r\n                            borderColor: '#123a78',\r\n                        },\r\n                        rootDisabled: {\r\n                            backgroundColor: isDarkMode ? 'rgba(59, 130, 246, 0.2)' : 'rgba(148, 163, 184, 0.2)',\r\n                            borderColor: 'transparent',\r\n                            color: isDarkMode ? 'rgba(226, 232, 240, 0.5)' : 'rgba(55, 65, 81, 0.5)',\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default PersonalAttendanceConfirm;","// src/tabs/home/Home.tsx\r\n// invisible change 2\r\n\r\nimport React, {\r\n  useState,\r\n  useEffect,\r\n  useMemo,\r\n  useCallback,\r\n  ReactNode,\r\n  useRef, // ADDED\r\n  lazy,\r\n  Suspense,\r\n} from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { debugLog, debugWarn } from '../../utils/debug';\r\nimport { safeSetItem, safeGetItem, cleanupLocalStorage, logStorageUsage } from '../../utils/storageUtils';\r\nimport {\r\n  mergeStyles,\r\n  Text,\r\n  Spinner,\r\n  SpinnerSize,\r\n  MessageBar,\r\n  MessageBarType,\r\n  IconButton,\r\n  Stack,\r\n  DetailsList,\r\n  IColumn,\r\n  DetailsListLayoutMode,\r\n  Persona,\r\n  PersonaSize,\r\n  PersonaPresence,\r\n  DefaultButton,\r\n  Icon,\r\n  Toggle,\r\n  keyframes,\r\n} from '@fluentui/react';\r\nimport { FaCheck } from 'react-icons/fa';\r\nimport { colours } from '../../app/styles/colours';\r\n// Removed legacy MetricCard usage\r\nimport TimeMetricsV2 from '../../components/modern/TimeMetricsV2';\r\nimport { useHomeMetricsStream } from '../../hooks/useHomeMetricsStream';\r\nimport GreyHelixMark from '../../assets/grey helix mark.png';\r\nimport InAttendanceImg from '../../assets/in_attendance.png';\r\nimport WfhImg from '../../assets/wfh.png';\r\nimport OutImg from '../../assets/outv2.png';\r\nimport '../../app/styles/VerticalLabelPanel.css';\r\nimport { useTheme } from '../../app/functionality/ThemeContext';\r\nimport { useNavigatorActions } from '../../app/functionality/NavigatorContext';\r\n// Removed legacy MetricCard styles import\r\nimport './EnhancedHome.css';\r\nimport { dashboardTokens, cardTokens, cardStyles } from '../instructions/componentTokens';\r\nimport { componentTokens } from '../../app/styles/componentTokens';\r\nimport ThemedSpinner from '../../components/ThemedSpinner';\r\nimport { getProxyBaseUrl } from '../../utils/getProxyBaseUrl';\r\n\r\nimport FormCard from '../forms/FormCard';\r\nimport ResourceCard from '../resources/ResourceCard';\r\n\r\nimport { FormItem, Matter, Transaction, TeamData, OutstandingClientBalance, BoardroomBooking, SoundproofPodBooking, SpaceBooking, FutureBookingsResponse, InstructionData, Enquiry, NormalizedMatter } from '../../app/functionality/types';\r\n\r\nimport { Resource } from '../resources/Resources';\r\n\r\nimport FormDetails from '../forms/FormDetails';\r\nimport ResourceDetails from '../resources/ResourceDetails';\r\n\r\nimport HomePanel from './HomePanel';\r\nimport { Context as TeamsContextType } from '@microsoft/teams-js';\r\n\r\nimport BespokePanel from '../../app/functionality/BespokePanel';\r\nimport RecentWorkFeed from './RecentWorkFeed';\r\nimport TeamIssuesBoard from './TeamIssuesBoard';\r\n\r\nimport ActionSection from './ActionSection';\r\nimport { sharedDefaultButtonStyles } from '../../app/styles/ButtonStyles';\r\nimport { isInTeams } from '../../app/functionality/isInTeams';\r\nimport { hasActiveMatterOpening } from '../../app/functionality/matterOpeningUtils';\r\nimport { hasActivePitchBuilder } from '../../app/functionality/pitchBuilderUtils';\r\nimport { normalizeMatterData } from '../../utils/matterNormalization';\r\nimport localAttendance from '../../localData/localAttendance.json';\r\nimport localAnnualLeave from '../../localData/localAnnualLeave.json';\r\nimport localMatters from '../../localData/localMatters.json';\r\nimport localInstructionData from '../../localData/localInstructionData.json';\r\nimport localTransactions from '../../localData/localTransactions.json';\r\nimport localOutstandingBalances from '../../localData/localOutstandingBalances.json';\r\nimport localWipClio from '../../localData/localWipClio.json';\r\nimport localRecovered from '../../localData/localRecovered.json';\r\nimport localPrevRecovered from '../../localData/localPrevRecovered.json';\r\nimport localSnippetEdits from '../../localData/localSnippetEdits.json';\r\nimport localV3Blocks from '../../localData/localV3Blocks.json';\r\n\r\n// Enhanced components\r\nimport SectionCard from './SectionCard';\r\n// Removed legacy Enhanced metrics components\r\n\r\n// NEW: Import the updated QuickActionsCard component\r\nimport QuickActionsCard from './QuickActionsCard';\r\nimport QuickActionsBar from './QuickActionsBar';\r\nimport { getQuickActionIcon } from './QuickActionsCard';\r\nimport ImmediateActionsBar from './ImmediateActionsBar';\r\nimport type { ImmediateActionCategory } from './ImmediateActionChip';\r\nimport { getActionableInstructions } from './InstructionsPrompt';\r\nimport OutstandingBalancesList from '../transactions/OutstandingBalancesList';\r\n\r\nimport Attendance from './AttendanceCompact';\r\nimport EnhancedAttendance from './EnhancedAttendanceNew';\r\nimport PersonalAttendanceConfirm from './PersonalAttendanceConfirm';\r\n\r\nimport TransactionCard from '../transactions/TransactionCard';\r\nimport TransactionApprovalPopup from '../transactions/TransactionApprovalPopup';\r\n\r\nimport OutstandingBalanceCard from '../transactions/OutstandingBalanceCard'; // Adjust the path if needed\r\nimport UnclaimedEnquiries from '../enquiries/UnclaimedEnquiries';\r\n\r\nconst proxyBaseUrl = getProxyBaseUrl();\r\n\r\n// Helper to dynamically update localEnquiries.json's first record to always have today's date in local mode\r\nexport function getLiveLocalEnquiries(currentUserEmail?: string) {\r\n  try {\r\n    // Only do this in local mode\r\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n    const localEnquiries = require('../../localData/localEnquiries.json');\r\n    if (Array.isArray(localEnquiries) && localEnquiries.length > 0) {\r\n      const today = new Date();\r\n      const yyyy = today.getFullYear();\r\n      const mm = String(today.getMonth() + 1).padStart(2, '0');\r\n      const dd = String(today.getDate()).padStart(2, '0');\r\n      const todayStr = `${yyyy}-${mm}-${dd}`;\r\n      localEnquiries[0].Touchpoint_Date = todayStr;\r\n      localEnquiries[0].Date_Created = todayStr;\r\n      // Set Point_of_Contact for all records to current user email in local mode\r\n      if (currentUserEmail) {\r\n        localEnquiries.forEach((enq: any) => {\r\n          enq.Point_of_Contact = currentUserEmail;\r\n        });\r\n      }\r\n    }\r\n    return localEnquiries;\r\n  } catch (e) {\r\n    // ignore if not found\r\n    return [];\r\n  }\r\n}\r\n\r\n\r\n\r\n// Lazy-loaded form components\r\nconst Tasking = lazy(() => import('../../CustomForms/Tasking'));\r\nconst TelephoneAttendance = lazy(() => import('../../CustomForms/TelephoneAttendance'));\r\nconst CreateTimeEntryForm = lazy(() => import('../../CustomForms/CreateTimeEntryForm'));\r\nconst AnnualLeaveForm = lazy(() => import('../../CustomForms/AnnualLeaveForm'));\r\n// NEW: Import placeholders for approvals & bookings\r\nconst AnnualLeaveApprovals = lazy(() => import('../../CustomForms/AnnualLeaveApprovals'));\r\nconst AnnualLeaveBookings = lazy(() => import('../../CustomForms/AnnualLeaveBookings'));\r\nconst BookSpaceForm = lazy(() => import('../../CustomForms/BookSpaceForm'));\r\nconst SnippetEditsApproval = lazy(() => import('../../CustomForms/SnippetEditsApproval'));\r\n\r\n// Icons initialized in index.tsx\r\n\r\n//////////////////////\r\n// Interfaces\r\n//////////////////////\r\n\r\ninterface AttendanceRecord {\r\n  Attendance_ID: number;\r\n  Entry_ID: number;\r\n  First_Name: string;\r\n  Initials: string;\r\n  Level: string;\r\n  Week_Start: string;\r\n  Week_End: string;\r\n  ISO_Week: number;\r\n  Attendance_Days: string;\r\n  Confirmed_At: string | null;\r\n}\r\n\r\ninterface AnnualLeaveRecord {\r\n  person: string;\r\n  start_date: string;\r\n  end_date: string;\r\n  reason: string;\r\n  status: string;\r\n  id: string;\r\n  rejection_notes?: string;\r\n  approvers?: string[];\r\n  hearing_confirmation?: string; // \"yes\" or \"no\"\r\n  hearing_details?: string;      // Additional details when hearing_confirmation is \"no\"\r\n}\r\n\r\nexport interface SnippetEdit {\r\n  id: number;\r\n  snippetId: number;\r\n  blockTitle: string;\r\n  currentText: string;\r\n  currentLabel?: string;\r\n  currentSortOrder?: number;\r\n  currentBlockId?: number;\r\n  currentCreatedBy?: string;\r\n  currentCreatedAt?: string;\r\n  currentUpdatedBy?: string;\r\n  currentUpdatedAt?: string;\r\n  currentApprovedBy?: string;\r\n  currentApprovedAt?: string;\r\n  currentIsApproved?: boolean;\r\n  currentVersion?: number;\r\n  proposedText: string;\r\n  proposedLabel?: string;\r\n  proposedSortOrder?: number;\r\n  proposedBlockId?: number;\r\n  isNew?: boolean;\r\n  submittedBy: string;\r\n  submittedAt?: string;\r\n  reviewNotes?: string;\r\n  reviewedBy?: string;\r\n  reviewedAt?: string;\r\n  status?: string;\r\n}\r\n\r\ninterface HomeProps {\r\n  context: TeamsContextType | null;\r\n  userData: any;\r\n  enquiries: any[] | null;\r\n  matters?: NormalizedMatter[]; // Prefer app-provided normalized matters\r\n  instructionData?: InstructionData[];\r\n  onAllMattersFetched?: (matters: Matter[]) => void;\r\n  onOutstandingBalancesFetched?: (data: any) => void;\r\n  onPOID6YearsFetched?: (data: any[]) => void;\r\n  onTransactionsFetched?: (transactions: Transaction[]) => void;\r\n  onBoardroomBookingsFetched?: (data: BoardroomBooking[]) => void;\r\n  onSoundproofBookingsFetched?: (data: SoundproofPodBooking[]) => void;\r\n  teamData?: TeamData[] | null;\r\n  isInMatterOpeningWorkflow?: boolean;\r\n  onImmediateActionsChange?: (hasActions: boolean) => void;\r\n}\r\n\r\ninterface QuickLink {\r\n  title: string;\r\n  icon: string;\r\n}\r\n\r\ninterface Person {\r\n  id: string;\r\n  name: string;\r\n  initials: string;\r\n  presence: PersonaPresence;\r\n  nickname?: string;\r\n}\r\n\r\n// Removed legacy CollapsibleSectionProps interface\r\n\r\ninterface MetricItem {\r\n  title: string;\r\n  isTimeMoney?: boolean;\r\n  isMoneyOnly?: boolean;\r\n  money?: number;\r\n  hours?: number;\r\n  prevMoney?: number;\r\n  prevHours?: number;\r\n  count?: number;\r\n  prevCount?: number;\r\n  showDial?: boolean;\r\n  dialTarget?: number;\r\n  dialValue?: number;\r\n  dialSuffix?: string;\r\n}\r\n\r\nexport interface TeamMember {\r\n  First: string;\r\n  Initials: string;\r\n  \"Entra ID\": string;\r\n  Nickname: string;\r\n}\r\n\r\ninterface MatterBalance {\r\n  id: number;\r\n  ClientName: string;\r\n  total_outstanding_balance: number;\r\n  associated_matter_ids: number[];\r\n}\r\n\r\n//////////////////////\r\n// Collapsible Section\r\n//////////////////////\r\n\r\n// Removed legacy CollapsibleSection component\r\n\r\n\r\n//////////////////////\r\n// Quick Actions Order\r\n//////////////////////\r\n\r\nconst quickActionOrder: Record<string, number> = {\r\n  'Update Attendance': 1,\r\n  'Confirm Attendance': 1,\r\n  'Open Matter': 2,\r\n  'Review Instructions': 3,\r\n  // Instruction workflow actions\r\n  'Review ID': 3,\r\n  'Verify ID': 3,\r\n  'Assess Risk': 4,\r\n  'Submit to CCL': 5,\r\n  'Create a Task': 4,\r\n  'Request CollabSpace': 5,\r\n  'Save Telephone Note': 6,\r\n  'Save Attendance Note': 7,\r\n  'Request ID': 8,\r\n  'Open a Matter': 9,\r\n  'Request Annual Leave': 10,\r\n  'Unclaimed Enquiries': 11,\r\n};\r\n\r\n//////////////////////\r\n// Quick Actions\r\n//////////////////////\r\n\r\nconst quickActions: QuickLink[] = [\r\n  { title: 'Update Attendance', icon: 'Calendar' },\r\n  { title: 'Create a Task', icon: 'Checklist' },\r\n  { title: 'Save Telephone Note', icon: 'Comment' },\r\n  { title: 'Request Annual Leave', icon: 'PalmTree' }, // Icon resolved to umbrella for consistency\r\n  { title: 'Book Space', icon: 'Room' },\r\n];\r\n\r\n//////////////////////\r\n// Styles\r\n//////////////////////\r\n\r\n// Subtle Helix watermark (three rounded ribbons) as inline SVG, Teams-like subtlety\r\nconst helixWatermarkSvg = (dark: boolean) => {\r\n  const fill = dark ? '%23FFFFFF' : '%23061733';\r\n  const opacity = dark ? '0.06' : '0.035';\r\n  const svg = `<svg xmlns='http://www.w3.org/2000/svg' width='900' height='900' viewBox='0 0 900 900'>\r\n    <g transform='rotate(-12 450 450)'>\r\n      <path d='M160 242 C160 226 176 210 200 210 L560 210 Q640 235 560 274 L200 274 C176 274 160 258 160 242 Z' fill='${fill}' fill-opacity='${opacity}'/>\r\n      <path d='M160 362 C160 346 176 330 200 330 L560 330 Q640 355 560 394 L200 394 C176 394 160 378 160 362 Z' fill='${fill}' fill-opacity='${opacity}'/>\r\n      <path d='M160 482 C160 466 176 450 200 450 L560 450 Q640 475 560 514 L200 514 C176 514 160 498 160 482 Z' fill='${fill}' fill-opacity='${opacity}'/>\r\n    </g>\r\n  </svg>`;\r\n  return `url(\"data:image/svg+xml,${svg}\")`;\r\n};\r\n\r\nconst containerStyle = (isDarkMode: boolean) =>\r\n  mergeStyles({\r\n    background: isDarkMode ? colours.darkBlue : '#ffffff',\r\n    minHeight: '100vh',\r\n    boxSizing: 'border-box',\r\n    position: 'relative',\r\n    '&::before': {\r\n      content: '\"\"',\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      background: 'none',\r\n      backgroundImage: helixWatermarkSvg(isDarkMode),\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundPosition: isDarkMode ? 'right -120px top -80px' : 'right -140px top -100px',\r\n      backgroundSize: 'min(52vmin, 520px)',\r\n      pointerEvents: 'none',\r\n      zIndex: 0\r\n    }\r\n  });\r\n\r\nconst headerStyle = mergeStyles({\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'flex-start',\r\n  width: '100%',\r\n  padding: '10px 0',\r\n  gap: '16px',\r\n});\r\n\r\n\r\nconst mainContentStyle = mergeStyles({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  position: 'relative',\r\n  zIndex: 1,\r\n});\r\n// Height of the top tab menu so the quick action bar can align with it\r\nconst ACTION_BAR_HEIGHT = 48;\r\n\r\nconst quickLinksStyle = (isDarkMode: boolean) =>\r\n  mergeStyles({\r\n    backgroundColor: isDarkMode\r\n      ? colours.dark.sectionBackground\r\n      : colours.light.sectionBackground,\r\n    padding: '0 10px',\r\n    transition: 'background-color 0.3s, box-shadow 0.3s',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    gap: '8px',\r\n    overflowX: 'auto',\r\n    alignItems: 'center',\r\n    paddingBottom: '16px',\r\n    position: 'sticky',\r\n    top: ACTION_BAR_HEIGHT,\r\n    zIndex: 999,\r\n    borderTopLeftRadius: 0,\r\n    borderTopRightRadius: 0,\r\n  });\r\n\r\nconst tableAnimationStyle = mergeStyles({\r\n  animation: 'fadeIn 0.5s ease-in-out',\r\n});\r\n\r\nconst calculateAnimationDelay = (row: number, col: number) => (row + col) * 0.1;\r\n\r\nconst versionStyle = (isDarkMode: boolean) => mergeStyles({\r\n  textAlign: 'center',\r\n  fontSize: '14px',\r\n  color: isDarkMode ? colours.dark.text : colours.light.text,\r\n  marginTop: '40px',\r\n});\r\n\r\nconst subLabelStyle = (isDarkMode: boolean) =>\r\n  mergeStyles({\r\n    fontWeight: '600',\r\n    fontSize: '16px',\r\n    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n  });\r\n\r\nconst actionsMetricsContainerStyle = mergeStyles({\r\n  backgroundColor: '#ffffff',\r\n  padding: '16px',\r\n  borderRadius: 0,\r\n  boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)',\r\n  marginBottom: '24px',\r\n  '@media (max-width: 600px)': { padding: '12px' },\r\n});\r\n\r\nconst favouritesGridStyle = mergeStyles({\r\n  display: 'grid',\r\n  gridTemplateColumns: 'repeat(auto-fill, minmax(180px, 1fr))',\r\n  gap: '16px',\r\n  '@media (min-width: 1000px)': { gridTemplateColumns: 'repeat(5, 1fr)' },\r\n});\r\n\r\n// Removed legacy metrics grid styles (metricsGridThree/metricsGridTwo)\r\n\r\nconst peopleGridStyle = mergeStyles({\r\n  display: 'grid',\r\n  paddingLeft: '80px',\r\n  gridTemplateColumns: 'repeat(auto-fill, minmax(120px, 1fr))',\r\n  gap: '16px',\r\n  alignItems: 'center',\r\n  width: '100%',\r\n});\r\n\r\nconst sectionContainerStyle = (isDarkMode: boolean) =>\r\n  mergeStyles({\r\n    backgroundColor: isDarkMode ? colours.dark.sectionBackground : colours.light.sectionBackground,\r\n    padding: '16px',\r\n    borderRadius: 0,\r\n    boxShadow: isDarkMode\r\n      ? `0 4px 12px ${colours.dark.border}`\r\n      : `0 4px 12px ${colours.light.border}`,\r\n    position: 'relative',\r\n    width: '100%',\r\n  });\r\n\r\n\r\n//////////////////////\r\n// TabLabel Component\r\n//////////////////////\r\nconst TabLabel: React.FC<{ label: string }> = ({ label }) => {\r\n  return (\r\n    <div\r\n      className={mergeStyles({\r\n        position: 'absolute',\r\n        left: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        width: '50px',\r\n        backgroundColor: colours.grey,\r\n        zIndex: 4,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      })}\r\n    >\r\n      <span style={{ transform: 'rotate(-90deg)', whiteSpace: 'nowrap' }}>{label}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\n//////////////////////\r\n// Utility: Flatten & Transform Context\r\n//////////////////////\r\n\r\nconst flattenObject = (obj: any, prefix = ''): { key: string; value: any }[] => {\r\n  let result: { key: string; value: any }[] = [];\r\n  for (const [k, v] of Object.entries(obj)) {\r\n    const newKey = prefix ? `${prefix}.${k}` : k;\r\n    if (v && typeof v === 'object' && !Array.isArray(v))\r\n      result = result.concat(flattenObject(v, newKey));\r\n    else result.push({ key: newKey, value: v });\r\n  }\r\n  return result;\r\n};\r\n\r\nconst transformContext = (contextObj: any): { key: string; value: string }[] => {\r\n  if (!contextObj || typeof contextObj !== 'object') {\r\n    debugWarn('Invalid context object:', contextObj);\r\n    return [];\r\n  }\r\n  const flattened = flattenObject(contextObj);\r\n  return flattened.map(({ key, value }) => ({\r\n    key,\r\n    value: typeof value === 'object' ? JSON.stringify(value) : String(value),\r\n  }));\r\n};\r\n\r\nconst createColumnsFunction = (isDarkMode: boolean): IColumn[] => [\r\n  {\r\n    key: 'key',\r\n    name: 'Key',\r\n    fieldName: 'key',\r\n    minWidth: 150,\r\n    maxWidth: 200,\r\n    isResizable: true,\r\n    styles: { root: { color: isDarkMode ? colours.dark.text : colours.light.text } },\r\n  },\r\n  {\r\n    key: 'value',\r\n    name: 'Value',\r\n    fieldName: 'value',\r\n    minWidth: 300,\r\n    maxWidth: 600,\r\n    isResizable: true,\r\n    styles: { root: { color: isDarkMode ? colours.dark.text : colours.light.text } },\r\n  },\r\n];\r\n\r\n//////////////////////\r\n// PersonBubble Component\r\n//////////////////////\r\n\r\ninterface PersonBubbleProps {\r\n  person: Person;\r\n  isDarkMode: boolean;\r\n  animationDelay?: number;\r\n  avatarUrlOverride?: string;\r\n}\r\n\r\nconst PersonBubble: React.FC<PersonBubbleProps> = ({\r\n  person,\r\n  isDarkMode,\r\n  animationDelay,\r\n  avatarUrlOverride,\r\n}) => {\r\n  const bubbleStyle = mergeStyles({\r\n    position: 'relative',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    opacity: 0,\r\n    transform: 'translateY(20px)',\r\n    animation: `fadeInUp 0.3s ease forwards`,\r\n    animationDelay: animationDelay ? `${animationDelay}s` : '0s',\r\n  });\r\n\r\n  const textBubbleStyle = mergeStyles({\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: '50%',\r\n    transform: 'translateY(-50%)',\r\n    backgroundColor: colours.grey,\r\n    borderRadius: 0,\r\n    padding: '0 10px 0 50px',\r\n    height: '34px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    zIndex: 3,\r\n    whiteSpace: 'nowrap',\r\n  });\r\n\r\n  const textStyle = mergeStyles({ color: isDarkMode ? colours.dark.text : colours.light.text });\r\n\r\n  let imageUrl = WfhImg;\r\n  let presence = PersonaPresence.none;\r\n\r\n  if (person.presence === PersonaPresence.online) {\r\n    imageUrl = InAttendanceImg;\r\n    presence = PersonaPresence.online;\r\n  } else if (person.presence === PersonaPresence.busy) {\r\n    imageUrl = OutImg;\r\n    presence = PersonaPresence.busy;\r\n  }\r\n\r\n  return (\r\n    <div className={bubbleStyle}>\r\n      <div style={{ position: 'relative', zIndex: 4 }}>\r\n        <Persona\r\n          text=\"\"\r\n          imageUrl={avatarUrlOverride || imageUrl}\r\n          size={PersonaSize.size24}\r\n          presence={presence}\r\n          hidePersonaDetails\r\n          styles={{\r\n            root: {\r\n              zIndex: 4,\r\n              boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.15)',\r\n              borderRadius: '50%',\r\n            },\r\n          }}\r\n        />\r\n        <div className={textBubbleStyle}>\r\n          <Text className={textStyle}>{person.nickname || person.name}</Text>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst getISOWeek = (date: Date): number => {\r\n  const d = new Date(date);\r\n  d.setHours(0, 0, 0, 0);\r\n  d.setDate(d.getDate() + 3 - ((d.getDay() + 6) % 7));\r\n  const week1 = new Date(d.getFullYear(), 0, 4);\r\n  return Math.round(((d.getTime() - week1.getTime()) / 86400000 + 1) / 7) + 1;\r\n};\r\n\r\n//////////////////////\r\n// Caching Variables (module-level)\r\n//////////////////////\r\n\r\n// Helper to convert \"dd/mm/yyyy\" to \"yyyy-mm-dd\"\r\nconst convertToISO = (dateStr: string): string => {\r\n  const [day, month, year] = dateStr.split('/');\r\n  return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;\r\n};\r\n\r\n// Robust date parser that accepts ISO (yyyy-mm-dd) and UK (dd/mm/yyyy)\r\nconst parseOpenDate = (value: unknown): Date | null => {\r\n  if (!value) return null;\r\n  if (value instanceof Date) return isNaN(value.getTime()) ? null : value;\r\n  const str = String(value).trim();\r\n  if (!str) return null;\r\n  // If looks like dd/mm/yyyy, convert to ISO first\r\n  if (/^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/.test(str)) {\r\n    const iso = convertToISO(str);\r\n    const d = new Date(iso);\r\n    return isNaN(d.getTime()) ? null : d;\r\n  }\r\n  const d = new Date(str);\r\n  return isNaN(d.getTime()) ? null : d;\r\n};\r\n\r\ninterface AttendanceData {\r\n  attendance: any[]; // Replace 'any[]' with a specific type if you know the structure\r\n  team: any[];      // Replace 'any[]' with TeamMember[] or similar if known\r\n}\r\n\r\nlet cachedAttendance: AttendanceData | null = null;\r\nlet cachedAttendanceError: string | null = null;\r\nlet cachedPOID6Years: any[] | null = null;\r\n\r\nlet cachedAnnualLeave: AnnualLeaveRecord[] | null = null;\r\nlet cachedAnnualLeaveError: string | null = null;\r\n\r\nlet cachedFutureLeaveRecords: AnnualLeaveRecord[] | null = null; // ADDED\r\n\r\nlet cachedWipClio: any | null = null;\r\nlet cachedWipClioError: string | null = null;\r\nlet cachedRecovered: number | null = null;\r\nlet cachedRecoveredError: string | null = null;\r\nlet cachedPrevRecovered: number | null = null;\r\nlet cachedPrevRecoveredError: string | null = null;\r\nlet cachedMetricsUserKey: string | null = null;\r\n\r\nlet cachedAllMatters: Matter[] | null = null; // Force refresh after database cleanup - cleared at 2025-09-21\r\nlet cachedAllMattersError: string | null = null;\r\nconst CACHE_INVALIDATION_KEY = 'matters-cache-v3'; // Changed to force refresh after test data deletion\r\n\r\nlet cachedOutstandingBalances: any | null = null;\r\n\r\n// At the top of Home.tsx, along with your other caching variables:\r\nlet cachedTransactions: Transaction[] | null = null;\r\n\r\n//////////////////////\r\n// Helper: Ensure \"LZ\" is in Approvers\r\n//////////////////////\r\n\r\nconst ensureLZInApprovers = (approvers: string[] = []): string[] => {\r\n  return approvers.includes('LZ') ? approvers : [...approvers, 'LZ'];\r\n};\r\n\r\n// Helper: Normalize metrics alias\r\n// - Lukasz/Luke (LZ) -> Jonathan Waters (JW)\r\n// - Samuel Packwood   -> Sam Packwood\r\n\r\nconst getMetricsAlias = (\r\n  _fullName: string | undefined,\r\n  _initials: string | undefined,\r\n  _clioId: string | number | undefined\r\n) => {\r\n  const fullName = (_fullName || '').toLowerCase();\r\n  const initials = (_initials || '').toLowerCase();\r\n\r\n  // Map Lukasz/Luke (LZ) to Jonathan Waters\r\n  if (fullName.includes('lukasz') || fullName.includes('luke') || initials === 'lz') {\r\n    return { name: 'Jonathan Waters', clioId: 137557 };\r\n  }\r\n\r\n  // Normalize Samuel to Sam\r\n  if (fullName === 'samuel packwood') {\r\n    const clioIdNum = typeof _clioId === 'string' ? parseInt(_clioId, 10) : _clioId;\r\n    return { name: 'Sam Packwood', clioId: clioIdNum };\r\n  }\r\n\r\n  const clioIdNum = typeof _clioId === 'string' ? parseInt(_clioId, 10) : _clioId;\r\n  return { name: _fullName || '', clioId: clioIdNum };\r\n};\r\n\r\n//////////////////////\r\n// CognitoForm Component\r\n//////////////////////\r\n\r\nconst CognitoForm: React.FC<{ dataKey: string; dataForm: string }> = ({ dataKey, dataForm }) => {\r\n  const containerRef = React.useRef<HTMLDivElement>(null);\r\n  useEffect(() => {\r\n    if (containerRef.current) {\r\n      containerRef.current.innerHTML = '';\r\n      const script = document.createElement('script');\r\n      script.src = 'https://www.cognitoforms.com/f/seamless.js';\r\n      script.setAttribute('data-key', dataKey);\r\n      script.setAttribute('data-form', dataForm);\r\n      script.async = true;\r\n      containerRef.current.appendChild(script);\r\n      return () => {\r\n        if (containerRef.current) containerRef.current.innerHTML = '';\r\n      };\r\n    }\r\n  }, [dataKey, dataForm]);\r\n  return <div ref={containerRef} />;\r\n};\r\n\r\n//////////////////////\r\n// Home Component\r\n//////////////////////\r\n\r\nconst Home: React.FC<HomeProps> = ({ context, userData, enquiries, matters: providedMatters, instructionData: propInstructionData, onAllMattersFetched, onOutstandingBalancesFetched, onPOID6YearsFetched, onTransactionsFetched, teamData, onBoardroomBookingsFetched, onSoundproofBookingsFetched, isInMatterOpeningWorkflow = false, onImmediateActionsChange }) => {\r\n  const { isDarkMode, toggleTheme } = useTheme();\r\n  const { setContent } = useNavigatorActions();\r\n  const inTeams = isInTeams();\r\n  const useLocalData =\r\n    process.env.REACT_APP_USE_LOCAL_DATA === 'true';\r\n  \r\n  // Component mounted successfully\r\n\r\n  const [attendanceTeam, setAttendanceTeam] = useState<any[]>([]);\r\n  // Transform teamData into our lite TeamMember type\r\n  const transformedTeamData = useMemo<TeamMember[]>(() => {\r\n    const data: TeamData[] = teamData ?? attendanceTeam ?? [];\r\n    return data\r\n      .filter(\r\n        (member) => member.status === 'active' || member.status === undefined\r\n      )\r\n      .map((member: TeamData) => ({\r\n        First: member.First ?? '',\r\n        Initials: member.Initials ?? '',\r\n        \"Entra ID\": member[\"Entra ID\"] ?? '',\r\n        Nickname: member.Nickname ?? member.First ?? '',\r\n      }));\r\n  }, [teamData, attendanceTeam]);\r\n\r\n  const renderContextsPanelContent = () => (\r\n    <Stack tokens={dashboardTokens} styles={cardStyles}>\r\n      <Stack tokens={cardTokens}>\r\n        <Text variant=\"xLarge\" styles={{ root: { fontWeight: '600' } }}>\r\n          Teams Context\r\n        </Text>\r\n        <DetailsList\r\n          items={transformContext(context)}\r\n          columns={createColumnsFunction(isDarkMode)}\r\n          setKey=\"teamsSet\"\r\n          layoutMode={DetailsListLayoutMode.justified}\r\n          isHeaderVisible={false}\r\n          styles={{\r\n            root: {\r\n              selectors:\r\n                { '.ms-DetailsRow': { padding: '8px 0', borderBottom: 'none' },\r\n                '.ms-DetailsHeader': { display: 'none' },\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      </Stack>\r\n      <Stack tokens={cardTokens}>\r\n        <Text variant=\"xLarge\" styles={{ root: { fontWeight: '600' } }}>\r\n          SQL Context\r\n        </Text>\r\n        <DetailsList\r\n          items={transformContext(userData)}\r\n          columns={createColumnsFunction(isDarkMode)}\r\n          setKey=\"sqlSet\"\r\n          layoutMode={DetailsListLayoutMode.justified}\r\n          isHeaderVisible={false}\r\n          styles={{\r\n            root: {\r\n              selectors: {\r\n                '.ms-DetailsRow': { padding: '8px 0', borderBottom: 'none' },\r\n                '.ms-DetailsHeader': { display: 'none' },\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n\r\n  // Inside the Home component, add state (near other state declarations)\r\n  const [selectedTransaction, setSelectedTransaction] = useState<Transaction | null>(null);\r\n  const [isTransactionPopupOpen, setIsTransactionPopupOpen] = useState<boolean>(false);\r\n\r\n  // Replace the placeholder handler\r\n  const handleTransactionClick = (transaction: Transaction) => {\r\n    setSelectedTransaction(transaction);\r\n    setIsTransactionPopupOpen(true);\r\n  };\r\n  \r\n  const handleTransactionSubmit = (\r\n    values: { transferRequested: boolean; customAmount?: number; transferCustom?: boolean },\r\n    updatedTransaction: Transaction\r\n  ) => {\r\n    // Update the transactions state with the updated transaction\r\n    setTransactions((prevTransactions) =>\r\n      prevTransactions.map((tx) =>\r\n        tx.transaction_id === updatedTransaction.transaction_id ? updatedTransaction : tx\r\n      )\r\n    );\r\n  };\r\n\r\n  const updateTransaction = (updatedTransaction: Transaction) => {\r\n    setTransactions((prevTransactions) =>\r\n      prevTransactions.map((tx) =>\r\n        tx.transaction_id === updatedTransaction.transaction_id ? updatedTransaction : tx\r\n      )\r\n    );\r\n  };\r\n\r\n  // ADDED: Store user initials so they don't reset on remount\r\n  const storedUserInitials = useRef<string | null>(null); // ADDED\r\n  const attendanceRef = useRef<{ focusTable: () => void; setWeek: (week: 'current' | 'next') => void }>(null); // Add this line\r\n  const recoveredFeesInitialized = useRef<boolean>(false); // Prevent infinite loop\r\n\r\n  // State declarations...\r\n  const [enquiriesToday, setEnquiriesToday] = useState<number>(0);\r\n  const [enquiriesWeekToDate, setEnquiriesWeekToDate] = useState<number>(0);\r\n  const [enquiriesMonthToDate, setEnquiriesMonthToDate] = useState<number>(0);\r\n  const [todaysTasks, setTodaysTasks] = useState<number>(10);\r\n  const [tasksDueThisWeek, setTasksDueThisWeek] = useState<number>(20);\r\n  const [completedThisWeek, setCompletedThisWeek] = useState<number>(15);\r\n  const [recordedTime, setRecordedTime] = useState<{ hours: number; money: number }>({\r\n    hours: 120,\r\n    money: 1000,\r\n  });\r\n  const [prevEnquiriesToday, setPrevEnquiriesToday] = useState<number>(8);\r\n  const [prevEnquiriesWeekToDate, setPrevEnquiriesWeekToDate] = useState<number>(18);\r\n  const [prevEnquiriesMonthToDate, setPrevEnquiriesMonthToDate] = useState<number>(950);\r\n  const [prevTodaysTasks, setPrevTodaysTasks] = useState<number>(12);\r\n  const [prevTasksDueThisWeek, setPrevTasksDueThisWeek] = useState<number>(18);\r\n  const [prevCompletedThisWeek, setPrevCompletedThisWeek] = useState<number>(17);\r\n  const [prevRecordedTime, setPrevRecordedTime] = useState<{ hours: number; money: number }>({\r\n    hours: 110,\r\n    money: 900,\r\n  });\r\n  const [isContextsExpanded, setIsContextsExpanded] = useState<boolean>(false);\r\n  const [formsFavorites, setFormsFavorites] = useState<FormItem[]>([]);\r\n  const [resourcesFavorites, setResourcesFavorites] = useState<Resource[]>([]);\r\n  const [selectedForm, setSelectedForm] = useState<FormItem | null>(null);\r\n  const [selectedResource, setSelectedResource] = useState<Resource | null>(null);\r\n  const [isBespokePanelOpen, setIsBespokePanelOpen] = useState<boolean>(false);\r\n  const [bespokePanelContent, setBespokePanelContent] = useState<ReactNode>(null);\r\n  const [bespokePanelTitle, setBespokePanelTitle] = useState<string>('');\r\n  const [bespokePanelDescription, setBespokePanelDescription] = useState<string>('');\r\n  const [bespokePanelIcon, setBespokePanelIcon] = useState<React.ComponentType<any> | null>(null);\r\n  const [isContextPanelOpen, setIsContextPanelOpen] = useState<boolean>(false);\r\n  const [bankHolidays, setBankHolidays] = useState<Set<string>>(new Set());\r\n\r\n  const [currentUserName, setCurrentUserName] = useState<string>('');\r\n  const [currentUserEmail, setCurrentUserEmail] = useState<string>('');\r\n  const [attendanceRecords, setAttendanceRecords] = useState<any[]>([]);\r\n  const [attendanceError, setAttendanceError] = useState<string | null>(null);\r\n  const [annualLeaveRecords, setAnnualLeaveRecords] = useState<AnnualLeaveRecord[]>([]);\r\n  const [annualLeaveError, setAnnualLeaveError] = useState<string | null>(null);\r\n  const [isLoadingAttendance, setIsLoadingAttendance] = useState<boolean>(false);\r\n  const [isLoadingAnnualLeave, setIsLoadingAnnualLeave] = useState<boolean>(false);\r\n  const [wipClioData, setWipClioData] = useState<any | null>(null);\r\n  const [wipClioError, setWipClioError] = useState<string | null>(null);\r\n  const [recoveredData, setRecoveredData] = useState<number | null>(null);\r\n  const [prevRecoveredData, setPrevRecoveredData] = useState<number | null>(null);\r\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\r\n  const [recoveredError, setRecoveredError] = useState<string | null>(null);\r\n  const [prevRecoveredError, setPrevRecoveredError] = useState<string | null>(null);\r\n  const [isLoadingWipClio, setIsLoadingWipClio] = useState<boolean>(false);\r\n  const [isLoadingRecovered, setIsLoadingRecovered] = useState<boolean>(false);\r\n  const [futureLeaveRecords, setFutureLeaveRecords] = useState<AnnualLeaveRecord[]>([]);\r\n  const [annualLeaveTotals, setAnnualLeaveTotals] = useState<any>(null);\r\n  const [isActionsLoading, setIsActionsLoading] = useState<boolean>(true);\r\n\r\n  const [allMatters, setAllMatters] = useState<Matter[] | null>(null);\r\n  const [allMattersError, setAllMattersError] = useState<string | null>(null);\r\n  const [isLoadingAllMatters, setIsLoadingAllMatters] = useState<boolean>(false);\r\n\r\n  // Reset ref for QuickActionsBar to clear selection when panels close\r\n  const resetQuickActionsSelectionRef = useRef<(() => void) | null>(null);\r\n\r\n  const [timeMetricsCollapsed, setTimeMetricsCollapsed] = useState(false);\r\n  const [conversionMetricsCollapsed, setConversionMetricsCollapsed] = useState(false);\r\n\r\n  const [poid6Years, setPoid6Years] = useState<any[] | null>(null);\r\n  const [isLoadingPOID6Years, setIsLoadingPOID6Years] = useState<boolean>(false);\r\n  const [poid6YearsError, setPoid6YearsError] = useState<string | null>(null);\r\n\r\n  // Consider immediate actions 'ready' once attendance & annual leave calls complete;\r\n  // don't let auxiliary isActionsLoading flag (which may flicker) block UI rendering.\r\n  const immediateActionsReady = !isLoadingAttendance && !isLoadingAnnualLeave;\r\n\r\n  // SAFETY: In rare error paths isActionsLoading might never be cleared; ensure it flips off\r\n  React.useEffect(() => {\r\n    if (isActionsLoading && !isLoadingAttendance && !isLoadingAnnualLeave) {\r\n      // Fallback clear\r\n      setIsActionsLoading(false);\r\n    }\r\n  }, [isActionsLoading, isLoadingAttendance, isLoadingAnnualLeave]);\r\n\r\n  // HARD TIMEOUT FAILSAFE (especially for local dev): clear loading after 5s max\r\n  React.useEffect(() => {\r\n    if (!isActionsLoading) return;\r\n    const timeout = setTimeout(() => {\r\n      if (isActionsLoading) {\r\n        /* eslint-disable no-console */\r\n        debugWarn('[ImmediateActions] Hard timeout reached, forcing isActionsLoading = false');\r\n        /* eslint-enable no-console */\r\n        setIsActionsLoading(false);\r\n      }\r\n    }, 5000);\r\n    return () => clearTimeout(timeout);\r\n  }, [isActionsLoading]);\r\n\r\n  // DEBUG: Log state transitions for diagnosing hanging immediate actions\r\n  // Show immediate actions overlay (and Dismiss button) only on the first\r\n  // home load for the session when immediate actions exist \r\n  const [showFocusOverlay, setShowFocusOverlay] = useState<boolean>(false);\r\n\r\n  // Track if there's an active matter opening in progress\r\n  const [hasActiveMatter, setHasActiveMatter] = useState<boolean>(false);\r\n  const [hasActivePitch, setHasActivePitch] = useState<boolean>(false);\r\n\r\n  // Show overlay when immediate actions become available (first time only)\r\n  // This effect must run AFTER immediateActionsList is defined\r\n  // So we place it after immediateActionsList declaration\r\n\r\n  const [annualLeaveAllData, setAnnualLeaveAllData] = useState<any[]>([]);\r\n\r\n  const [outstandingBalancesData, setOutstandingBalancesData] = useState<any | null>(null);\r\n\r\n  const [futureBookings, setFutureBookings] = useState<FutureBookingsResponse>({\r\n    boardroomBookings: [],\r\n    soundproofBookings: []\r\n  });\r\n\r\n  // Pending snippet edits for approval\r\n  const [snippetEdits, setSnippetEdits] = useState<SnippetEdit[]>([]);\r\n\r\n  // List of unclaimed enquiries for quick access panel\r\n  const unclaimedEnquiries = useMemo(\r\n    () =>\r\n      (enquiries || []).filter(\r\n        (e: Enquiry) => (e.Point_of_Contact || '').toLowerCase() === 'team@helix-law.com'\r\n      ),\r\n    [enquiries]\r\n  );\r\n\r\n  // Fetch pending snippet edits and prefetch snippet blocks\r\n  useEffect(() => {\r\n    // SNIPPET FUNCTIONALITY REMOVED - Changed approach completely\r\n    // Snippet edits and blocks are no longer fetched from Azure Functions\r\n    const useLocal = process.env.REACT_APP_USE_LOCAL_DATA === 'true';\r\n\r\n    const fetchEditsAndBlocks = async () => {\r\n      if (useLocal) {\r\n        setSnippetEdits(localSnippetEdits as SnippetEdit[]);\r\n        if (!sessionStorage.getItem('prefetchedBlocksData')) {\r\n          sessionStorage.setItem('prefetchedBlocksData', JSON.stringify(localV3Blocks));\r\n        }\r\n        return;\r\n      }\r\n      // Snippet fetching disabled - functionality removed\r\n      // try {\r\n      //   const url = `${proxyBaseUrl}/${process.env.REACT_APP_GET_SNIPPET_EDITS_PATH}?code=${process.env.REACT_APP_GET_SNIPPET_EDITS_CODE}`;\r\n      //   const res = await fetch(url);\r\n      //   if (res.ok) {\r\n      //     const data = await res.json();\r\n      //     setSnippetEdits(data);\r\n      //   }\r\n      // } catch (err) {\r\n      //   console.error('Failed to fetch snippet edits', err);\r\n      // }\r\n\r\n      // if (!sessionStorage.getItem('prefetchedBlocksData')) {\r\n      //   try {\r\n      //     const blocksUrl = `${proxyBaseUrl}/${process.env.REACT_APP_GET_SNIPPET_BLOCKS_PATH}?code=${process.env.REACT_APP_GET_SNIPPET_BLOCKS_CODE}`;\r\n      //     const blocksRes = await fetch(blocksUrl);\r\n      //     if (blocksRes.ok) {\r\n      //       const data = await blocksRes.json();\r\n      //       sessionStorage.setItem('prefetchedBlocksData', JSON.stringify(data));\r\n      //     }\r\n      //   } catch (err) {\r\n      //     console.error('Failed to prefetch snippet blocks', err);\r\n      //   }\r\n      // }\r\n    };\r\n    fetchEditsAndBlocks();\r\n  }, []);\r\n\r\n  // Check for active matter opening every 2 seconds\r\n  useEffect(() => {\r\n    const checkActiveMatter = () => {\r\n      setHasActiveMatter(hasActiveMatterOpening(isInMatterOpeningWorkflow));\r\n    };\r\n\r\n    // Initial check\r\n    checkActiveMatter();\r\n\r\n    // Set up polling\r\n    const interval = setInterval(checkActiveMatter, 2000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [isInMatterOpeningWorkflow]);\r\n\r\n  useEffect(() => {\r\n    const checkActivePitch = () => {\r\n      setHasActivePitch(hasActivePitchBuilder());\r\n    };\r\n    checkActivePitch();\r\n    const interval = setInterval(checkActivePitch, 2000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const [localInstructionDataState, setLocalInstructionDataState] = useState<InstructionData[]>([]);\r\n\r\n  // Use prop instruction data if available, otherwise use local state\r\n  const instructionData = propInstructionData || localInstructionDataState;\r\n\r\n  // Load instruction data - only load local data if no prop data is provided\r\n  useEffect(() => {\r\n    if (!propInstructionData && useLocalData) {\r\n      const transformedData: InstructionData[] = (localInstructionData as any).map((item: any) => ({\r\n        prospectId: item.prospectId,\r\n        deals: item.deals || [],\r\n        instructions: item.instructions || [],\r\n        documents: item.documents || [],\r\n        riskAssessment: item.riskAssessment || null,\r\n        idVerification: item.idVerification || null,\r\n        matter: item.matter || null\r\n      }));\r\n      setLocalInstructionDataState(transformedData);\r\n    } else if (propInstructionData) {\r\n      // Using prop instruction data\r\n    }\r\n  }, [useLocalData, propInstructionData]);\r\n\r\n  // Populate current user details once user data is available\r\n  useEffect(() => {\r\n    if (userData && userData[0]) {\r\n      setCurrentUserEmail((userData[0].Email || '').toLowerCase().trim());\r\n      setCurrentUserName(userData[0].FullName || '');\r\n    }\r\n  }, [userData]);\r\n\r\n  // Clear cached time/fee metrics only when the signed-in user actually changes\r\n  useEffect(() => {\r\n    const rawEmail = (userData?.[0]?.Email || '').toLowerCase().trim();\r\n    const rawInitials = (userData?.[0]?.Initials || '').toUpperCase().trim();\r\n    const nextUserKey = rawEmail || rawInitials ? `${rawEmail}|${rawInitials}` : null;\r\n\r\n    if (!nextUserKey) {\r\n      cachedMetricsUserKey = null;\r\n      return;\r\n    }\r\n\r\n    if (cachedMetricsUserKey === nextUserKey) {\r\n      return;\r\n    }\r\n\r\n    cachedMetricsUserKey = nextUserKey;\r\n    cachedWipClio = null;\r\n    cachedWipClioError = null;\r\n    cachedRecovered = null;\r\n    cachedRecoveredError = null;\r\n    cachedPrevRecovered = null;\r\n    cachedPrevRecoveredError = null;\r\n    setWipClioData(null);\r\n    setRecoveredData(null);\r\n    setPrevRecoveredData(null);\r\n  }, [userData]);\r\n\r\n  // Separate effect to fetch recovered fees\r\n  useEffect(() => {\r\n    if (recoveredFeesInitialized.current) return;\r\n\r\n    const fetchRecoveredFeesSummary = async () => {\r\n      if (!userData?.[0]) return;\r\n\r\n      const currentUserData = userData[0];\r\n      const isLocalhost = window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';\r\n      const isLuke = currentUserData?.Email?.toLowerCase().includes('luke') || currentUserData?.Initials === 'LW';\r\n      const isLZ = currentUserData?.Initials === 'LZ';\r\n\r\n      let userClioId = currentUserData?.['Clio ID'] ? String(currentUserData['Clio ID']) : null;\r\n      let userEntraId = currentUserData?.EntraID ? String(currentUserData.EntraID) : null;\r\n\r\n      if ((isLocalhost || isLuke || isLZ) && teamData) {\r\n        const alex = teamData.find((t: any) => t.Initials === 'AC' || t.First === 'Alex');\r\n        if (alex) {\r\n          if (alex['Clio ID']) {\r\n            userClioId = String(alex['Clio ID']);\r\n          }\r\n          if (alex['Entra ID']) {\r\n            userEntraId = String(alex['Entra ID']);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!userClioId && !userEntraId) {\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const url = new URL('/api/reporting/management-datasets', window.location.origin);\r\n        url.searchParams.set('datasets', 'recoveredFeesSummary');\r\n        if (userClioId) {\r\n          url.searchParams.set('clioId', userClioId);\r\n        }\r\n        if (userEntraId) {\r\n          url.searchParams.set('entraId', userEntraId);\r\n        }\r\n\r\n        const resp = await fetch(url.toString(), {\r\n          method: 'GET',\r\n          credentials: 'include',\r\n          headers: { Accept: 'application/json' },\r\n        });\r\n\r\n        if (!resp.ok) {\r\n          console.error('❌ Failed to fetch recovered fees summary:', resp.status, resp.statusText);\r\n          return;\r\n        }\r\n\r\n        const data = await resp.json();\r\n        const summary = data.recoveredFeesSummary;\r\n\r\n        if (!summary || typeof summary !== 'object') {\r\n          return;\r\n        }\r\n\r\n        const currentTotal = Number(summary.currentMonthTotal) || 0;\r\n        const lastTotal = Number(summary.previousMonthTotal) || 0;\r\n\r\n        cachedRecovered = currentTotal;\r\n        cachedPrevRecovered = lastTotal;\r\n        setRecoveredData(currentTotal);\r\n        setPrevRecoveredData(lastTotal);\r\n        recoveredFeesInitialized.current = true;\r\n      } catch (error) {\r\n        console.error('❌ Error fetching recovered fees summary:', error);\r\n      }\r\n    };\r\n\r\n    if (cachedRecovered === null) {\r\n      fetchRecoveredFeesSummary();\r\n    } else {\r\n      recoveredFeesInitialized.current = true;\r\n      setRecoveredData(cachedRecovered);\r\n      setPrevRecoveredData(cachedPrevRecovered ?? 0);\r\n    }\r\n  }, [teamData, userData?.[0]?.EntraID, userData?.[0]?.['Entra ID'], userData?.[0]?.Initials, userData?.[0]?.['Clio ID']]);\r\n\r\n  // Use app-provided normalized matters when available; otherwise normalize local allMatters\r\n  const normalizedMatters = useMemo<NormalizedMatter[]>(() => {\r\n    if (providedMatters && providedMatters.length > 0) return providedMatters;\r\n    if (!allMatters) return [];\r\n    const userFullName = userData?.[0]?.FullName || '';\r\n    return allMatters.map(matter => normalizeMatterData(matter, userFullName, 'legacy_all'));\r\n  }, [providedMatters, allMatters, userData]);\r\n\r\n  const [reviewedInstructionIds, setReviewedInstructionIds] = useState<string>(() =>\r\n    sessionStorage.getItem('reviewedInstructionIds') || ''\r\n  );\r\n\r\n  const getCurrentWeekKey = (): string => {\r\n    const monday = getMondayOfCurrentWeek();\r\n    const sunday = new Date(monday);\r\n    sunday.setDate(monday.getDate() + 6);\r\n    const options: Intl.DateTimeFormatOptions = {\r\n      day: '2-digit',\r\n      month: '2-digit',\r\n      year: 'numeric',\r\n    };\r\n    const mondayStr = monday.toLocaleDateString('en-GB', options);\r\n    const sundayStr = sunday.toLocaleDateString('en-GB', options);\r\n    const mondayName = monday.toLocaleDateString('en-GB', { weekday: 'long' });\r\n    const sundayName = sunday.toLocaleDateString('en-GB', { weekday: 'long' });\r\n    return `${mondayName}, ${mondayStr} - ${sundayName}, ${sundayStr}`;\r\n  };\r\n\r\n  const getMondayOfCurrentWeek = (): Date => {\r\n    const now = new Date();\r\n    const day = now.getDay();\r\n    const diff = day === 0 ? -6 : 1 - day;\r\n    const monday = new Date(now);\r\n    monday.setDate(now.getDate() + diff);\r\n    return monday;\r\n  };\r\n  \r\n  // Add these functions immediately after:\r\n  const generateWeekKey = (monday: Date): string => {\r\n    const sunday = new Date(monday);\r\n    sunday.setDate(monday.getDate() + 6);\r\n    const options: Intl.DateTimeFormatOptions = { day: '2-digit', month: '2-digit', year: 'numeric' };\r\n    const mondayStr = monday.toLocaleDateString('en-GB', options);\r\n    const sundayStr = sunday.toLocaleDateString('en-GB', options);\r\n    const mondayName = monday.toLocaleDateString('en-GB', { weekday: 'long' });\r\n    const sundayName = sunday.toLocaleDateString('en-GB', { weekday: 'long' });\r\n    return `${mondayName}, ${mondayStr} - ${sundayName}, ${sundayStr}`;\r\n  };\r\n  \r\n  const getNextWeekKey = (): string => {\r\n    const currentMonday = getMondayOfCurrentWeek();\r\n    const nextMonday = new Date(currentMonday);\r\n    nextMonday.setDate(currentMonday.getDate() + 7);\r\n    return generateWeekKey(nextMonday);\r\n  };\r\n\r\n  // Add the following function to update the approval state:\r\nconst handleApprovalUpdate = (updatedRequestId: string, newStatus: string) => {\r\n  // Remove the updated approval from annualLeaveRecords.\r\n  setAnnualLeaveRecords((prevRecords) =>\r\n    prevRecords.filter(record => record.id !== updatedRequestId)\r\n  );\r\n\r\n  // Also remove it from the full set of leave data if applicable.\r\n  setAnnualLeaveAllData((prevAllData) =>\r\n    prevAllData.filter(record => record.id !== updatedRequestId)\r\n  );\r\n};\r\n\r\n  // ADDED: userInitials logic - store in ref so it doesn't reset on re-render.\r\n  const rawUserInitials = userData?.[0]?.Initials || '';\r\n  useEffect(() => {\r\n    if (rawUserInitials) {\r\n      storedUserInitials.current = rawUserInitials;\r\n    }\r\n  }, [rawUserInitials]);\r\n  // Now anywhere we used userInitials, we can do:\r\n  const userInitials = storedUserInitials.current || rawUserInitials;\r\n\r\n  useEffect(() => {\r\n    const fetchBankHolidays = async () => {\r\n      try {\r\n        const response = await fetch('https://www.gov.uk/bank-holidays.json');\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch bank holidays: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        const currentYear = new Date().getFullYear();\r\n        const englandAndWalesEvents = data['england-and-wales'].events || [];\r\n        const holidaysThisYear = englandAndWalesEvents\r\n          .filter((event: { date: string }) => new Date(event.date).getFullYear() === currentYear)\r\n          .map((event: { date: string }) => event.date);\r\n        setBankHolidays(new Set(holidaysThisYear));\r\n      } catch (error) {\r\n        console.error('Error fetching bank holidays:', error);\r\n      }\r\n    };\r\n    fetchBankHolidays();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const storedFormsFavorites = safeGetItem('formsFavorites');\r\n    const storedResourcesFavorites = safeGetItem('resourcesFavorites');\r\n    if (storedFormsFavorites) {\r\n      setFormsFavorites(JSON.parse(storedFormsFavorites));\r\n    }\r\n    if (storedResourcesFavorites) {\r\n      setResourcesFavorites(JSON.parse(storedResourcesFavorites));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const handleStorageChange = (event: StorageEvent) => {\r\n      if (event.key === 'formsFavorites' && event.newValue) {\r\n        setFormsFavorites(JSON.parse(event.newValue));\r\n      }\r\n      if (event.key === 'resourcesFavorites' && event.newValue) {\r\n        setResourcesFavorites(JSON.parse(event.newValue));\r\n      }\r\n    };\r\n    window.addEventListener('storage', handleStorageChange);\r\n    return () => {\r\n      window.removeEventListener('storage', handleStorageChange);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (enquiries && currentUserEmail) {\r\n      const today = new Date();\r\n      const startOfMonth = new Date(today.getFullYear(), today.getMonth(), 1);\r\n  // FIX: Use Monday as the start of week (previous logic used Sunday via getDay())\r\n  // to stay consistent with getMondayOfCurrentWeek() used elsewhere (attendance, time metrics).\r\n  const startOfWeek = getMondayOfCurrentWeek();\r\n  startOfWeek.setHours(0, 0, 0, 0);\r\n      const prevToday = new Date(today);\r\n      prevToday.setDate(prevToday.getDate() - 7);\r\n  const prevWeekStart = new Date(startOfWeek);\r\n  prevWeekStart.setDate(prevWeekStart.getDate() - 7); // Monday of previous week\r\n  prevWeekStart.setHours(0, 0, 0, 0);\r\n      const prevWeekEnd = new Date(prevToday);\r\n      const prevMonthStart = new Date(today.getFullYear(), today.getMonth() - 1, 1);\r\n      const prevMonthEnd = new Date(today.getFullYear(), today.getMonth(), 0);\r\n\r\n      // Normalize enquiries data like in Enquiries.tsx\r\n      const normalizedEnquiries = enquiries.map((enq: any) => ({\r\n        ...enq,\r\n        ID: enq.ID || enq.id?.toString(),\r\n        Touchpoint_Date: enq.Touchpoint_Date || enq.datetime,\r\n        Point_of_Contact: enq.Point_of_Contact || enq.poc,\r\n        Area_of_Work: enq.Area_of_Work || enq.aow,\r\n        Type_of_Work: enq.Type_of_Work || enq.tow,\r\n        Method_of_Contact: enq.Method_of_Contact || enq.moc,\r\n        First_Name: enq.First_Name || enq.first,\r\n        Last_Name: enq.Last_Name || enq.last,\r\n        Email: enq.Email || enq.email,\r\n        Phone_Number: enq.Phone_Number || enq.phone,\r\n        Value: enq.Value || enq.value,\r\n        Initial_first_call_notes: enq.Initial_first_call_notes || enq.notes,\r\n        Call_Taker: enq.Call_Taker || enq.rep,\r\n      }));\r\n\r\n      // For LZ user, enquiries are fetched for Alex Cook (AC) at index.tsx level\r\n      // So we match against AC's identifiers when user is LZ\r\n      const isLZ = (userInitials || '').toUpperCase() === 'LZ';\r\n      \r\n      const matchesUser = (value: string | undefined | null) => {\r\n        const normalised = (value || '').toLowerCase().trim();\r\n        \r\n        if (isLZ) {\r\n          // For LZ, match against Alex Cook's identifiers since that's what we fetched\r\n          const alexAliases = new Set<string>(['ac', 'alex cook', 'ac@helix-law.com']);\r\n          return alexAliases.has(normalised);\r\n        }\r\n        \r\n        // Otherwise match against current user's email or initials\r\n        return normalised === currentUserEmail || normalised === userInitials.toLowerCase().trim();\r\n      };\r\n\r\n      const todayCount = normalizedEnquiries.filter((enquiry: any) => {\r\n        if (!enquiry.Touchpoint_Date) return false;\r\n        const enquiryDate = new Date(enquiry.Touchpoint_Date);\r\n        const isToday = enquiryDate.toDateString() === today.toDateString();\r\n        const matches = matchesUser(enquiry.Point_of_Contact);\r\n        return isToday && matches;\r\n      }).length;\r\n\r\n  const weekToDateCount = normalizedEnquiries.filter((enquiry: any) => {\r\n        if (!enquiry.Touchpoint_Date) return false;\r\n        const enquiryDate = new Date(enquiry.Touchpoint_Date);\r\n        return (\r\n          enquiryDate >= startOfWeek &&\r\n          enquiryDate <= today &&\r\n          matchesUser(enquiry.Point_of_Contact)\r\n        );\r\n      }).length;\r\n\r\n      const monthToDateCount = normalizedEnquiries.filter((enquiry: any) => {\r\n        if (!enquiry.Touchpoint_Date) return false;\r\n        const enquiryDate = new Date(enquiry.Touchpoint_Date);\r\n        return (\r\n          enquiryDate >= startOfMonth &&\r\n          enquiryDate <= today &&\r\n          matchesUser(enquiry.Point_of_Contact)\r\n        );\r\n      }).length;\r\n\r\n      const prevTodayCount = normalizedEnquiries.filter((enquiry: any) => {\r\n        if (!enquiry.Touchpoint_Date) return false;\r\n        const enquiryDate = new Date(enquiry.Touchpoint_Date);\r\n        return (\r\n          enquiryDate.toDateString() === prevToday.toDateString() &&\r\n          matchesUser(enquiry.Point_of_Contact)\r\n        );\r\n      }).length;\r\n\r\n  const prevWeekCount = normalizedEnquiries.filter((enquiry: any) => {\r\n        if (!enquiry.Touchpoint_Date) return false;\r\n        const enquiryDate = new Date(enquiry.Touchpoint_Date);\r\n        return (\r\n          enquiryDate >= prevWeekStart &&\r\n          enquiryDate <= prevWeekEnd &&\r\n          matchesUser(enquiry.Point_of_Contact)\r\n        );\r\n      }).length;\r\n\r\n      const prevMonthCount = normalizedEnquiries.filter((enquiry: any) => {\r\n        if (!enquiry.Touchpoint_Date) return false;\r\n        const enquiryDate = new Date(enquiry.Touchpoint_Date);\r\n        return (\r\n          enquiryDate >= prevMonthStart &&\r\n          enquiryDate <= prevMonthEnd &&\r\n          matchesUser(enquiry.Point_of_Contact)\r\n        );\r\n      }).length;\r\n\r\n      setEnquiriesToday(todayCount);\r\n      setEnquiriesWeekToDate(weekToDateCount);\r\n      setEnquiriesMonthToDate(monthToDateCount);\r\n      setPrevEnquiriesToday(prevTodayCount);\r\n      setPrevEnquiriesWeekToDate(prevWeekCount);\r\n      setPrevEnquiriesMonthToDate(prevMonthCount);\r\n    }\r\n  }, [enquiries, currentUserEmail, userInitials]);\r\n\r\n  useEffect(() => {\r\n    // Always restore from cache on mount if available\r\n    if (cachedAttendance) {\r\n      setAttendanceRecords(cachedAttendance.attendance); // Use .attendance here\r\n      setAttendanceTeam(cachedAttendance.team || []);    // Safe now with proper type\r\n    }\r\n    if (cachedAttendanceError) {\r\n      setAttendanceError(cachedAttendanceError);\r\n    }\r\n    if (cachedAnnualLeave) {\r\n      setAnnualLeaveRecords(cachedAnnualLeave);\r\n    }\r\n    if (cachedFutureLeaveRecords) {\r\n      setFutureLeaveRecords(cachedFutureLeaveRecords);\r\n    }\r\n    if (cachedAnnualLeaveError) {\r\n      setAnnualLeaveError(cachedAnnualLeaveError);\r\n    }\r\n    // Set loading states to false if we have cached data\r\n    if (cachedAttendance || cachedAttendanceError) {\r\n      setIsLoadingAttendance(false);\r\n    }\r\n    if (cachedAnnualLeave || cachedAnnualLeaveError) {\r\n      setIsLoadingAnnualLeave(false);\r\n      setIsActionsLoading(false);\r\n    }\r\n\r\n    if (useLocalData) {\r\n      const currentMonday = getMondayOfCurrentWeek();\r\n      const nextMonday = new Date(currentMonday);\r\n      nextMonday.setDate(currentMonday.getDate() + 7);\r\n\r\n      const currentKey = generateWeekKey(currentMonday);\r\n      const nextKey = generateWeekKey(nextMonday);\r\n\r\n      // Optimized: structuredClone is 90% faster than JSON.parse(JSON.stringify())\r\n      const localCopy: any = structuredClone(localAttendance);\r\n      if (Array.isArray(localCopy.attendance)) {\r\n        localCopy.attendance.forEach((rec: any) => {\r\n          rec.weeks = rec.weeks || {};\r\n          if (!rec.weeks[currentKey]) {\r\n            rec.weeks[currentKey] = {\r\n              iso: getISOWeek(currentMonday),\r\n              attendance: 'Mon,Tue,Wed,Thu,Fri',\r\n              confirmed: true,\r\n            };\r\n          }\r\n          if (!rec.weeks[nextKey]) {\r\n            rec.weeks[nextKey] = {\r\n              iso: getISOWeek(nextMonday),\r\n              attendance: 'Mon,Tue,Wed,Thu,Fri',\r\n              confirmed: true,\r\n            };\r\n          }\r\n        });\r\n      }\r\n\r\n      setAttendanceRecords(localCopy.attendance || []);\r\n      setAttendanceTeam(localCopy.team || []);\r\n      setAnnualLeaveRecords((localAnnualLeave as any).annual_leave || []);\r\n      setFutureLeaveRecords((localAnnualLeave as any).future_leave || []);\r\n      if ((localAnnualLeave as any).user_details?.totals) {\r\n        setAnnualLeaveTotals((localAnnualLeave as any).user_details.totals);\r\n      }\r\n      setIsLoadingAttendance(false);\r\n      setIsLoadingAnnualLeave(false);\r\n      setIsActionsLoading(false);\r\n      return;\r\n    }\r\n    // Only fetch if no cached data exists\r\n    if (!cachedAttendance && !cachedAttendanceError) {\r\n      const fetchData = async () => {\r\n        try {\r\n          setIsLoadingAttendance(true);\r\n          const attendanceResponse = await fetch('/api/attendance/getAttendance', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' }\r\n          });\r\n          \r\n          if (!attendanceResponse.ok) {\r\n            throw new Error(`Failed to fetch attendance: ${attendanceResponse.status}`);\r\n          }\r\n          \r\n          const attendanceResult = await attendanceResponse.json();\r\n          \r\n          if (attendanceResult.success) {\r\n            // Use the server response structure that now includes both attendance and team\r\n            const transformedData = {\r\n              attendance: attendanceResult.attendance.map((member: any) => ({\r\n                Attendance_ID: 0,\r\n                Entry_ID: 0,\r\n                First_Name: member.First,\r\n                Initials: member.Initials,\r\n                Level: member.Level || '',\r\n                Week_Start: new Date().toISOString().split('T')[0],\r\n                Week_End: new Date().toISOString().split('T')[0],\r\n                ISO_Week: Math.ceil(((new Date().getTime() - new Date(new Date().getFullYear(), 0, 1).getTime()) / 86400000 + 1) / 7),\r\n                Attendance_Days: member.Status || '',\r\n                Confirmed_At: member.IsConfirmed ? new Date().toISOString() : null,\r\n                status: member.Status,\r\n                isConfirmed: member.IsConfirmed,\r\n                isOnLeave: member.IsOnLeave\r\n              })),\r\n              team: attendanceResult.team || attendanceResult.attendance // Use team data if available, fallback to attendance\r\n            };\r\n            \r\n            cachedAttendance = transformedData;\r\n            setAttendanceRecords(transformedData.attendance);\r\n            setAttendanceTeam(transformedData.team);\r\n          } else {\r\n            throw new Error(attendanceResult.error || 'Failed to fetch attendance');\r\n          }\r\n        } catch (error: any) {\r\n          console.error('Error fetching attendance:', error);\r\n          cachedAttendanceError = error.message || 'Unknown error occurred.';\r\n          setAttendanceError(error.message || 'Unknown error occurred.');\r\n          setAttendanceRecords([]);\r\n          setAttendanceTeam([]);\r\n        } finally {\r\n          setIsLoadingAttendance(false);\r\n        }\r\n  \r\n        try {\r\n          setIsLoadingAnnualLeave(true);\r\n          const annualLeaveResponse = await fetch(\r\n            `/api/attendance/getAnnualLeave`,\r\n            {\r\n              method: 'POST',\r\n              headers: { 'Content-Type': 'application/json' },\r\n              body: JSON.stringify({ userInitials: userData[0]?.Initials || '' }),\r\n            }\r\n          );\r\n          if (!annualLeaveResponse.ok)\r\n            throw new Error(`Failed to fetch annual leave: ${annualLeaveResponse.status}`);\r\n          const annualLeaveData = await annualLeaveResponse.json();\r\n          if (annualLeaveData) {\r\n            // Handle annual leave records\r\n            if (Array.isArray(annualLeaveData.annual_leave)) {\r\n              const mappedAnnualLeave: AnnualLeaveRecord[] = annualLeaveData.annual_leave.map(\r\n                (rec: any) => ({\r\n                  person: rec.person,\r\n                  start_date: rec.start_date,\r\n                  end_date: rec.end_date,\r\n                  reason: rec.reason,\r\n                  status: rec.status,\r\n                  id: rec.request_id ? String(rec.request_id) : rec.id || `temp-${rec.start_date}-${rec.end_date}`,\r\n                  rejection_notes: rec.rejection_notes || undefined,\r\n                  approvers: ensureLZInApprovers(rec.approvers),\r\n                  hearing_confirmation: rec.hearing_confirmation,\r\n                  hearing_details: rec.hearing_details || undefined,\r\n                })\r\n              );\r\n              cachedAnnualLeave = mappedAnnualLeave;\r\n              setAnnualLeaveRecords(mappedAnnualLeave);\r\n            } else {\r\n              // No annual leave records, set empty array\r\n              setAnnualLeaveRecords([]);\r\n            }\r\n  \r\n            // Handle future leave records  \r\n            if (Array.isArray(annualLeaveData.future_leave)) {\r\n              const mappedFutureLeave: AnnualLeaveRecord[] = annualLeaveData.future_leave.map(\r\n                (rec: any) => ({\r\n                  person: rec.person,\r\n                  start_date: rec.start_date,\r\n                  end_date: rec.end_date,\r\n                  reason: rec.reason,\r\n                  status: rec.status,\r\n                  id: rec.request_id ? String(rec.request_id) : rec.id || `temp-${rec.start_date}-${rec.end_date}`,\r\n                  rejection_notes: rec.rejection_notes || undefined,\r\n                  approvers: ensureLZInApprovers(rec.approvers),\r\n                  hearing_confirmation: rec.hearing_confirmation,\r\n                  hearing_details: rec.hearing_details || undefined,\r\n                })\r\n              );\r\n              cachedFutureLeaveRecords = mappedFutureLeave;\r\n              setFutureLeaveRecords(mappedFutureLeave);\r\n            } else {\r\n              // No future leave records, set empty array\r\n              setFutureLeaveRecords([]);\r\n            }\r\n  \r\n            // Handle optional data\r\n            if (annualLeaveData.user_details && annualLeaveData.user_details.totals) {\r\n              setAnnualLeaveTotals(annualLeaveData.user_details.totals);\r\n            }\r\n            if (annualLeaveData.user_leave) {\r\n              setAnnualLeaveAllData(annualLeaveData.user_leave);\r\n            }\r\n          } else {\r\n            // Handle null/undefined response by setting empty arrays\r\n            debugWarn('No annual leave data returned from API');\r\n            setAnnualLeaveRecords([]);\r\n            setFutureLeaveRecords([]);\r\n          }\r\n        } catch (error: any) {\r\n          console.error('Error fetching annual leave:', error);\r\n          cachedAnnualLeaveError = error.message || 'Unknown error occurred.';\r\n          setAnnualLeaveError(error.message || 'Unknown error occurred.');\r\n          setAnnualLeaveRecords([]);\r\n        } finally {\r\n          setIsLoadingAnnualLeave(false);\r\n          setIsActionsLoading(false);\r\n        }\r\n      };\r\n      fetchData();\r\n    }\r\n  }, [userData]);\r\n\r\n  // Prefer reporting route for current-week WIP (backend merges DB and Clio); do not call Clio from client\r\n  useEffect(() => {\r\n    if (!userData?.[0]) {\r\n      debugLog('⏸️ Skipping WIP fetch until user data is available');\r\n      return;\r\n    }\r\n    const effectiveEntraId = userData?.[0]?.EntraID ?? userData?.[0]?.['Entra ID'] ?? null;\r\n    debugLog('🎯 WIP useEffect triggered', { \r\n      entraId: effectiveEntraId, \r\n      clioId: userData?.[0]?.['Clio ID'],\r\n      hasCachedWip: !!cachedWipClio,\r\n      useLocalData\r\n    });\r\n    \r\n    const loadFromReporting = async () => {\r\n      debugLog('🔄 loadFromReporting called');\r\n      try {\r\n        setIsLoadingWipClio(true);\r\n  // Fetch only the current-week WIP dataset; recovered fees handled separately\r\n        const url = new URL('/api/reporting/management-datasets', window.location.origin);\r\n  url.searchParams.set('datasets', 'wipClioCurrentWeek');\r\n        debugLog('📡 Fetching URL:', url.toString());\r\n        \r\n        // Pass current user's Entra ID for user-specific Clio data fetching\r\n        const currentUserData = userData?.[0];\r\n  let entraId = currentUserData?.EntraID ?? currentUserData?.['Entra ID'];\r\n        \r\n        // Fallback for local development or Luke/LZ: use Alex's (AC) data for visible metrics\r\n        const isLocalhost = window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';\r\n        const isLuke = currentUserData?.Email?.toLowerCase().includes('luke') || currentUserData?.Initials === 'LW';\r\n        const isLZ = currentUserData?.Initials === 'LZ';\r\n        \r\n        if ((isLocalhost || isLuke || isLZ) && teamData) {\r\n          const alex = teamData.find((t: any) => t.Initials === 'AC' || t.First === 'Alex' || t.Email?.toLowerCase().includes('alex'));\r\n          if (alex && alex['Entra ID']) {\r\n            entraId = alex['Entra ID'];\r\n            debugLog('🔧 Dev mode: Using Alex\\'s data for visible metrics', { originalUser: currentUserData?.Email, fallbackTo: alex.Email });\r\n          }\r\n        }\r\n        \r\n        if (entraId) {\r\n          url.searchParams.set('entraId', entraId);\r\n          debugLog('🔍 Requesting WIP data for user:', { entraId, email: currentUserData?.Email });\r\n        }\r\n        const resp = await fetch(url.toString(), { method: 'GET', credentials: 'include', headers: { Accept: 'application/json' } });\r\n        if (resp.ok && (resp.headers.get('content-type') || '').toLowerCase().includes('application/json')) {\r\n          const data = await resp.json();\r\n          // Debug the actual response structure\r\n          debugLog('🔍 API Response:', { \r\n            hasWipClio: !!data.wipClioCurrentWeek,\r\n            dataKeys: Object.keys(data)\r\n          });\r\n          \r\n          // Extract the wipClioCurrentWeek data directly\r\n          const merged = data.wipClioCurrentWeek;\r\n          if (merged && merged.current_week && merged.last_week) {\r\n            cachedWipClio = merged as any;\r\n            setWipClioData(cachedWipClio);\r\n            setWipClioError(null);\r\n            setIsLoadingWipClio(false);\r\n            debugLog('✅ WIP data loaded successfully');\r\n          } else {\r\n            debugWarn('⚠️ WIP data structure invalid:', { merged, hasCurrentWeek: !!merged?.current_week, hasLastWeek: !!merged?.last_week });\r\n          }\r\n          \r\n        }\r\n      } catch (e) {\r\n        debugWarn('❌ Error loading WIP data:', e);\r\n      }\r\n      // If no data returned, ensure we clear loading state to let UI render placeholders\r\n      setIsLoadingWipClio(false);\r\n    };\r\n\r\n    // Use cache if already set\r\n    if (cachedWipClio || cachedWipClioError) {\r\n      debugLog('📦 Using cached WIP data');\r\n      setWipClioData(cachedWipClio);\r\n      setWipClioError(cachedWipClioError);\r\n      setIsLoadingWipClio(false);\r\n      // Also restore cached recovered fees if available\r\n      if (cachedRecovered !== null) {\r\n        debugLog('💰 Restoring cached recovered fees:', { current: cachedRecovered, prev: cachedPrevRecovered });\r\n        setRecoveredData(cachedRecovered);\r\n        setPrevRecoveredData(cachedPrevRecovered ?? 0);\r\n      }\r\n    } else if (useLocalData) {\r\n      debugLog('📂 Using local WIP data');\r\n      cachedWipClio = localWipClio as any;\r\n      setWipClioData(cachedWipClio);\r\n      setIsLoadingWipClio(false);\r\n    } else {\r\n      debugLog('🌐 Fetching fresh WIP data from server');\r\n      // Add a hard timeout to avoid blocking TimeMetricsV2 if backend is slow\r\n      const timeout = setTimeout(() => {\r\n        if (isLoadingWipClio && !cachedWipClio) {\r\n          setIsLoadingWipClio(false);\r\n        }\r\n      }, 8000);\r\n      loadFromReporting().finally(() => clearTimeout(timeout));\r\n    }\r\n  }, [userData?.[0]?.EntraID, userData?.[0]?.['Entra ID'], userData?.[0]?.['Clio ID']]);\r\n\r\n  // Home no longer fetches matters itself; it receives normalized matters from App.\r\n  // Keep the effect boundary to clear local cache if that logic remains elsewhere.\r\n  useEffect(() => {\r\n    const fullName = userData?.[0]?.FullName || '';\r\n    const initials = userData?.[0]?.Initials || '';\r\n    if (fullName || initials) {\r\n      cachedAllMatters = null;\r\n      cachedAllMattersError = null;\r\n    }\r\n  }, [userData?.[0]?.FullName, userData?.[0]?.Initials, userData?.[0]?.First, userData?.[0]?.Last]);\r\n\r\n  useEffect(() => {\r\n    // Check if cache should be invalidated due to database changes\r\n    const lastCacheVersion = safeGetItem('matters-cache-version');\r\n    const currentCacheVersion = 'v2-2025-09-21-db-cleanup';\r\n    \r\n    if (lastCacheVersion !== currentCacheVersion) {\r\n      debugLog('🔄 Invalidating matters cache due to database changes');\r\n      cachedAllMatters = null;\r\n      cachedAllMattersError = null;\r\n      \r\n      // Log storage usage before attempting to set cache version\r\n      logStorageUsage();\r\n      \r\n      // Use safe storage with automatic cleanup if needed\r\n      const success = safeSetItem('matters-cache-version', currentCacheVersion);\r\n      if (!success) {\r\n        debugWarn('⚠️ Could not update cache version in localStorage');\r\n      }\r\n    }\r\n    \r\n    debugLog('🔍 Matters loading path check:', {\r\n      hasCachedMatters: !!cachedAllMatters,\r\n      hasCachedError: !!cachedAllMattersError,\r\n      useLocalData,\r\n      REACT_APP_USE_LOCAL_DATA: process.env.REACT_APP_USE_LOCAL_DATA\r\n    });\r\n    \r\n    // Respect cached values if present otherwise rely on top-level provider\r\n    if (cachedAllMatters || cachedAllMattersError) {\r\n      debugLog('📦 Using cached matters:', cachedAllMatters?.length || 0);\r\n      setAllMatters(cachedAllMatters || []);\r\n      setAllMattersError(cachedAllMattersError);\r\n    } else if (useLocalData) {\r\n      debugLog('🏠 Using local mock data');\r\n      const mappedMatters: Matter[] = (localMatters as any) as Matter[];\r\n      cachedAllMatters = mappedMatters;\r\n      setAllMatters(mappedMatters);\r\n      if (onAllMattersFetched) onAllMattersFetched(mappedMatters);\r\n    }\r\n    setIsLoadingAllMatters(false);\r\n  }, [userData?.[0]?.FullName, useLocalData]);\r\n\r\n  // NEW: useEffect for fetching POID6Years data\r\n  useEffect(() => {\r\n    if (cachedPOID6Years) {\r\n      setPoid6Years(cachedPOID6Years);\r\n      setIsLoadingPOID6Years(false);\r\n      // Call the callback to pass data back to App\r\n      if (onPOID6YearsFetched) {\r\n        onPOID6YearsFetched(cachedPOID6Years);\r\n      }\r\n    } else {\r\n      const fetchPOID6Years = async () => {\r\n        try {\r\n          setIsLoadingPOID6Years(true);\r\n          const response = await fetch(\r\n            '/api/poid/6years',\r\n            { method: 'GET' }\r\n          );\r\n          if (!response.ok) {\r\n            throw new Error(`Failed to fetch POID6Years: ${response.status}`);\r\n          }\r\n          const data = await response.json();\r\n          cachedPOID6Years = data;\r\n          setPoid6Years(data);\r\n          // Here we call the callback to pass the data back to App\r\n          if (onPOID6YearsFetched) {\r\n            onPOID6YearsFetched(data);\r\n          }\r\n        } catch (error: any) {\r\n          console.error('Error fetching POID6Years:', error);\r\n          setPoid6YearsError(error.message || 'Unknown error occurred.');\r\n        } finally {\r\n          setIsLoadingPOID6Years(false);\r\n        }\r\n      };\r\n      fetchPOID6Years();\r\n    }\r\n  }, []);  \r\n\r\n  useEffect(() => {\r\n    async function fetchSpaceBookings() {\r\n      try {\r\n        const response = await fetch(\r\n          '/api/future-bookings'\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(`Error fetching space bookings: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        // Separate bookings by space type\r\n        const boardroomBookings = data.boardroomBookings || [];\r\n        const soundproofBookings = data.soundproofBookings || [];\r\n        // Update the futureBookings state\r\n        setFutureBookings({ boardroomBookings, soundproofBookings });\r\n        // Optionally, call your callbacks too\r\n        if (typeof onBoardroomBookingsFetched === \"function\") {\r\n          onBoardroomBookingsFetched(boardroomBookings);\r\n        }\r\n        if (typeof onSoundproofBookingsFetched === \"function\") {\r\n          onSoundproofBookingsFetched(soundproofBookings);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching space bookings:\", error);\r\n      }\r\n    }\r\n    fetchSpaceBookings();\r\n  }, []);\r\n\r\n  // Stream Home metrics progressively; update state as each arrives\r\n  useHomeMetricsStream({\r\n    autoStart: true,\r\n    metrics: ['transactions', 'futureBookings', 'outstandingBalances', 'poid6Years'],\r\n    bypassCache: false,\r\n    onMetric: (name, data) => {\r\n      switch (name) {\r\n        case 'transactions':\r\n          cachedTransactions = data as any;\r\n          setTransactions(data as any);\r\n          onTransactionsFetched?.(data as any);\r\n          break;\r\n        case 'futureBookings':\r\n          setFutureBookings(data as any);\r\n          onBoardroomBookingsFetched?.((data as any).boardroomBookings || []);\r\n          onSoundproofBookingsFetched?.((data as any).soundproofBookings || []);\r\n          break;\r\n        case 'outstandingBalances':\r\n          cachedOutstandingBalances = data as any;\r\n          safeSetItem('outstandingBalancesData', JSON.stringify(data));\r\n          setOutstandingBalancesData(data as any);\r\n          onOutstandingBalancesFetched?.(data as any);\r\n          break;\r\n        case 'poid6Years':\r\n          setPoid6Years(data as any);\r\n          onPOID6YearsFetched?.(data as any);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    },\r\n    onError: (which, err) => {\r\n      console.warn('Home metrics stream error:', which, err);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    async function fetchTransactions() {\r\n      if (useLocalData) {\r\n        const data: Transaction[] = (localTransactions as any) as Transaction[];\r\n        cachedTransactions = data;\r\n        setTransactions(data);\r\n        if (onTransactionsFetched) {\r\n          onTransactionsFetched(data);\r\n        }\r\n        return;\r\n      }\r\n      // Use cached data if available\r\n      if (cachedTransactions) {\r\n        setTransactions(cachedTransactions); // Update local state\r\n        if (onTransactionsFetched) {\r\n          onTransactionsFetched(cachedTransactions);\r\n        }\r\n        return;\r\n      }\r\n      try {\r\n        // Migrated to Express server route for connection pooling (cold start fix)\r\n        const response = await fetch('/api/transactions');\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch transactions: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        // Cache the data for future use\r\n        cachedTransactions = data;\r\n        setTransactions(data); // Update local state with fetched transactions\r\n        if (onTransactionsFetched) {\r\n          onTransactionsFetched(data);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching transactions:\", error);\r\n      }\r\n    }\r\n    fetchTransactions();\r\n  }, []); // Runs only once on component mount  \r\n  \r\n\r\n  useEffect(() => {\r\n    // 1. Try loading from localStorage\r\n    const storedData = safeGetItem('outstandingBalancesData');\r\n    if (storedData) {\r\n      const parsedData = JSON.parse(storedData);\r\n      if (onOutstandingBalancesFetched) {\r\n        onOutstandingBalancesFetched(parsedData);\r\n      }\r\n      setOutstandingBalancesData(parsedData);\r\n    }\r\n\r\n    if (useLocalData) {\r\n      const data = localOutstandingBalances as any;\r\n      cachedOutstandingBalances = data;\r\n      if (onOutstandingBalancesFetched) {\r\n        onOutstandingBalancesFetched(data);\r\n      }\r\n      setOutstandingBalancesData(data);\r\n      return;\r\n    }\r\n\r\n    async function fetchOutstandingBalances() {\r\n      try {\r\n        const response = await fetch('/api/outstanding-balances', {\r\n          method: \"GET\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n        });\r\n        if (!response.ok) {\r\n          const errorText = await response.text();\r\n          console.error(\"Error fetching outstanding client balances:\", errorText);\r\n          return null;\r\n        }\r\n        return await response.json();\r\n      } catch (err) {\r\n        console.error(\"Error fetching outstanding client balances:\", err);\r\n        return null;\r\n      }\r\n    }\r\n  \r\n    async function loadOutstandingBalances() {\r\n      // Optional: Use in-memory cache if available\r\n      if (cachedOutstandingBalances) {\r\n        if (onOutstandingBalancesFetched) {\r\n          onOutstandingBalancesFetched(cachedOutstandingBalances);\r\n        }\r\n        setOutstandingBalancesData(cachedOutstandingBalances);\r\n        // Note: We do NOT return here so that we still fetch fresh data.\r\n      }\r\n    \r\n      try {\r\n        const data = await fetchOutstandingBalances();\r\n        if (data) {\r\n          cachedOutstandingBalances = data; // Cache in-memory for subsequent calls\r\n          safeSetItem('outstandingBalancesData', JSON.stringify(data));\r\n          if (onOutstandingBalancesFetched) {\r\n            onOutstandingBalancesFetched(data);\r\n          }\r\n          setOutstandingBalancesData(data);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error in loadOutstandingBalances:\", error);\r\n      }\r\n    }\r\n    \r\n    loadOutstandingBalances();\r\n  }, []);  \r\n\r\n  const columns = useMemo(() => createColumnsFunction(isDarkMode), [isDarkMode]);\r\n\r\n// --- Updated Confirm Attendance snippet ---\r\n\r\n// 1. Grab user’s initials from userData (Now done via rawUserInitials + storedUserInitials above)\r\nconst matchingTeamMember = attendanceTeam.find(\r\n  (member: any) => (member.Initials || '').toLowerCase() === userInitials.toLowerCase()\r\n);\r\n\r\nconst attendanceName = matchingTeamMember ? matchingTeamMember.First : '';\r\n\r\nconst currentUserRecord = attendanceRecords.find(\r\n  (record: any) => (record.name || '').toLowerCase() === (attendanceName || '').toLowerCase()\r\n);\r\n\r\n//////////////////////////////\r\n// Updated Confirmation Check\r\n//////////////////////////////\r\nconst now = new Date();\r\nconst isThursdayAfterMidday = now.getDay() === 4 && now.getHours() >= 12;\r\n  const currentKey = generateWeekKey(getMondayOfCurrentWeek());\r\n  const nextKey = getNextWeekKey();\r\n\r\nconst transformedAttendanceRecords = useMemo(() => {\r\n  if (!cachedAttendance && !attendanceRecords.length) return [];\r\n  const rawRecords = cachedAttendance?.attendance || attendanceRecords; // Fix here\r\n  \r\n  // Handle both old format (with weeks structure) and new API format\r\n  return rawRecords\r\n    .map((record: any) => {\r\n      // New API format: {Initials, First, Status, IsConfirmed, IsOnLeave}\r\n      if (record.Initials && record.First && !record.weeks) {\r\n        const currentWeekStart = getMondayOfCurrentWeek();\r\n        const nextWeekStart = new Date(currentWeekStart);\r\n        nextWeekStart.setDate(currentWeekStart.getDate() + 7);\r\n        \r\n        const formatDateLocal = (d: Date): string => {\r\n          const year = d.getFullYear();\r\n          const month = String(d.getMonth() + 1).padStart(2, '0');\r\n          const day = String(d.getDate()).padStart(2, '0');\r\n          return `${year}-${month}-${day}`;\r\n        };\r\n        \r\n        const currentWeekEnd = new Date(currentWeekStart);\r\n        currentWeekEnd.setDate(currentWeekStart.getDate() + 6);\r\n        \r\n        const nextWeekEnd = new Date(nextWeekStart);\r\n        nextWeekEnd.setDate(nextWeekStart.getDate() + 6);\r\n        \r\n        // Return records for both current and next week\r\n        return [\r\n          {\r\n            Attendance_ID: 0,\r\n            Entry_ID: 0,\r\n            First_Name: record.First || '',\r\n            Initials: record.Initials || '',\r\n            Level: '',\r\n            Week_Start: formatDateLocal(currentWeekStart),\r\n            Week_End: formatDateLocal(currentWeekEnd),\r\n            ISO_Week: getISOWeek(currentWeekStart),\r\n            Attendance_Days: record.Status === 'away' ? '' : (record.Status || ''),\r\n            Confirmed_At: record.IsConfirmed ? new Date().toISOString() : null,\r\n          },\r\n          {\r\n            Attendance_ID: 0,\r\n            Entry_ID: 0,\r\n            First_Name: record.First || '',\r\n            Initials: record.Initials || '',\r\n            Level: '',\r\n            Week_Start: formatDateLocal(nextWeekStart),\r\n            Week_End: formatDateLocal(nextWeekEnd),\r\n            ISO_Week: getISOWeek(nextWeekStart),\r\n            Attendance_Days: '', // Next week starts empty\r\n            Confirmed_At: null,\r\n          }\r\n        ];\r\n      }\r\n      \r\n      // Old format: {name, weeks: {weekKey: {attendance, confirmed}}}\r\n      if (record.weeks) {\r\n        const weekKeys = Object.keys(record.weeks);\r\n        return weekKeys.map((weekKey) => {\r\n          const rawStart = weekKey.split(' - ')[0].split(', ')[1];\r\n          const rawEnd = weekKey.split(' - ')[1].split(', ')[1];\r\n          const isoStart = convertToISO(rawStart);\r\n          const isoEnd = convertToISO(rawEnd);\r\n          return {\r\n            Attendance_ID: 0,\r\n            Entry_ID: 0,\r\n            First_Name: record.name || '',\r\n            Initials: transformedTeamData.find((t) => t.First?.toLowerCase() === (record.name || '').toLowerCase())?.Initials || '',\r\n            Level: '',\r\n            Week_Start: isoStart,\r\n            Week_End: isoEnd,\r\n            ISO_Week: getISOWeek(new Date(isoStart)),\r\n            Attendance_Days: record.weeks[weekKey].attendance || '',\r\n            Confirmed_At: record.weeks[weekKey].confirmed ? new Date().toISOString() : null,\r\n          };\r\n        });\r\n      }\r\n      \r\n      // Fallback for unknown formats\r\n      return [];\r\n    })\r\n    .flat();\r\n}, [attendanceRecords, transformedTeamData]);\r\n\r\nconst handleAttendanceUpdated = (updatedRecords: AttendanceRecord[]) => {\r\n  debugLog('handleAttendanceUpdated records:', updatedRecords.length);\r\n  setAttendanceRecords((prevRecords) => {\r\n    const newRecords = [...prevRecords];\r\n    let isChanged = false; // Track if the state actually changes\r\n\r\n    updatedRecords.forEach((updated) => {\r\n      const weekKey = generateWeekKey(new Date(updated.Week_Start));\r\n      const index = newRecords.findIndex(\r\n        (rec: any) => rec.name === updated.First_Name && rec.weeks && rec.weeks[weekKey]\r\n      );\r\n      if (index !== -1) {\r\n        // Update existing record\r\n        const currentRecord = newRecords[index];\r\n        const updatedWeek = { attendance: updated.Attendance_Days, confirmed: !!updated.Confirmed_At };\r\n        if (JSON.stringify(currentRecord.weeks[weekKey]) !== JSON.stringify(updatedWeek)) {\r\n          newRecords[index].weeks[weekKey] = updatedWeek;\r\n          isChanged = true;\r\n        }\r\n      } else {\r\n        // Add new record or update with new week\r\n        const existingPersonIndex = newRecords.findIndex(\r\n          (rec: any) => rec.name === updated.First_Name\r\n        );\r\n        if (existingPersonIndex !== -1) {\r\n          newRecords[existingPersonIndex].weeks = {\r\n            ...newRecords[existingPersonIndex].weeks,\r\n            [weekKey]: { attendance: updated.Attendance_Days, confirmed: !!updated.Confirmed_At },\r\n          };\r\n          isChanged = true;\r\n        } else {\r\n          newRecords.push({\r\n            name: updated.First_Name,\r\n            weeks: {\r\n              [weekKey]: { attendance: updated.Attendance_Days, confirmed: !!updated.Confirmed_At },\r\n            },\r\n          });\r\n          isChanged = true;\r\n        }\r\n      }\r\n    });\r\n\r\n    // If no changes, do not trigger setState again\r\n    if (!isChanged) {\r\n      debugLog('No attendance changes; state unchanged');\r\n      return prevRecords;\r\n    }\r\n\r\n    // Update cache only if records changed\r\n    cachedAttendance = {\r\n      attendance: newRecords,\r\n      team: cachedAttendance?.team || attendanceTeam, // Preserve team data\r\n    };\r\n\r\n    debugLog('Attendance state updated; size:', newRecords.length);\r\n    return newRecords;\r\n  });\r\n};\r\n\r\n// Wrapper used by top-level AttendanceConfirmPanel to save attendance for the current user.\r\n  const saveAttendance = async (weekStart: string, attendanceDays: string): Promise<void> => {\r\n  debugLog('saveAttendance', weekStart, attendanceDays);\r\n  // Force endpoint testing - set to false to test real endpoint\r\n  const useLocalData = false; // Changed from: process.env.REACT_APP_USE_LOCAL_DATA === 'true' || window.location.hostname === 'localhost';\r\n  debugLog('useLocalData:', useLocalData);\r\n  const initials = userInitials || (userData?.[0]?.Initials || '');\r\n  const firstName = (transformedTeamData.find((t) => t.Initials === initials)?.First) || '';\r\n  debugLog('user initials/name:', initials, firstName);\r\n\r\n  if (useLocalData) {\r\n  debugLog('Using local data mode - creating mock record');\r\n    const newRecord: AttendanceRecord = {\r\n      Attendance_ID: 0,\r\n      Entry_ID: 0,\r\n      First_Name: firstName,\r\n      Initials: initials,\r\n  Level: (attendanceTeam.find((t: any) => t.Initials === initials)?.Level) || '',\r\n      Week_Start: weekStart,\r\n      Week_End: new Date(new Date(weekStart).setDate(new Date(weekStart).getDate() + 6)).toISOString().split('T')[0],\r\n  ISO_Week: getISOWeek(new Date(weekStart)),\r\n      Attendance_Days: attendanceDays,\r\n      Confirmed_At: new Date().toISOString(),\r\n    };\r\n    // Reuse existing handler to merge into state\r\n    debugLog('Calling handleAttendanceUpdated with 1 record');\r\n    handleAttendanceUpdated([newRecord]);\r\n    debugLog('Local data save completed');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const url = `/api/attendance/updateAttendance`;\r\n    const payload = { initials, weekStart, attendanceDays };\r\n  debugLog('API call:', url, payload);\r\n    const res = await fetch(url, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(payload),\r\n    });\r\n  debugLog('API status:', res.status);\r\n    if (!res.ok) {\r\n      console.error('🔍 API call failed with status:', res.status);\r\n      throw new Error(`Failed to save attendance: ${res.status}`);\r\n    }\r\n    const json = await res.json();\r\n  debugLog('API json:', json);\r\n    if (!json || json.success !== true || !json.record) {\r\n      throw new Error('Unexpected response from updateAttendance');\r\n    }\r\n    const rec = json.record;\r\n    const mapped: AttendanceRecord = {\r\n      Attendance_ID: rec.Attendance_ID ?? 0,\r\n      Entry_ID: rec.Entry_ID ?? 0,\r\n      First_Name: rec.First_Name || firstName,\r\n      Initials: rec.Initials || initials,\r\n      Level: (attendanceTeam.find((t: any) => t.Initials === (rec.Initials || initials))?.Level) || '',\r\n      Week_Start: rec.Week_Start || weekStart,\r\n      Week_End: rec.Week_End || new Date(new Date(weekStart).setDate(new Date(weekStart).getDate() + 6)).toISOString().split('T')[0],\r\n      ISO_Week: rec.ISO_Week ?? getISOWeek(new Date(rec.Week_Start || weekStart)),\r\n      Attendance_Days: rec.Attendance_Days || attendanceDays,\r\n      Confirmed_At: rec.Confirmed_At || new Date().toISOString(),\r\n    };\r\n    handleAttendanceUpdated([mapped]);\r\n  } catch (err) {\r\n    console.error('Error saving attendance (home):', err);\r\n    // Optional local fallback for testing\r\n    const fallbackLocal = process.env.REACT_APP_ATTENDANCE_FALLBACK_LOCAL === 'true';\r\n    if (fallbackLocal) {\r\n      debugWarn('⚠️ Falling back to local attendance update');\r\n      const newRecord: AttendanceRecord = {\r\n        Attendance_ID: 0,\r\n        Entry_ID: 0,\r\n        First_Name: firstName,\r\n        Initials: initials,\r\n        Level: (attendanceTeam.find((t: any) => t.Initials === initials)?.Level) || '',\r\n        Week_Start: weekStart,\r\n        Week_End: new Date(new Date(weekStart).setDate(new Date(weekStart).getDate() + 6)).toISOString().split('T')[0],\r\n        ISO_Week: getISOWeek(new Date(weekStart)),\r\n        Attendance_Days: attendanceDays,\r\n        Confirmed_At: new Date().toISOString(),\r\n      };\r\n      handleAttendanceUpdated([newRecord]);\r\n      return; // treat as success in UI\r\n    }\r\n    // Bubble error so caller can show inline feedback\r\n    throw (err instanceof Error ? err : new Error('Failed to save attendance'));\r\n  }\r\n};\r\n\r\n\r\n// Decide which week we consider \"the relevant week\"\r\n  const relevantWeekKey = isThursdayAfterMidday ? nextKey : currentKey;\r\n\r\n// Does the user have an object at all for that week?\r\n  const isLocalhost = window.location.hostname === 'localhost';\r\n\r\n  // Does the user have an object at all for that week?\r\n  // If currentUserRecord is not found (user not in attendance data), treat as confirmed to avoid nagging\r\n  const currentUserConfirmed = isLocalhost || !currentUserRecord || !!currentUserRecord?.weeks?.[relevantWeekKey];\r\n\r\n  // Debug logging for instructionData changes\r\n  // Calculate actionable instruction summaries (needs isLocalhost)\r\n  const actionableSummaries = useMemo(() => {\r\n    const result = getActionableInstructions(instructionData, isLocalhost);\r\n    return result;\r\n  }, [instructionData, isLocalhost]);\r\n\r\n  const actionableInstructionIds = useMemo(\r\n    () => actionableSummaries.map(s => s.id).sort().join(','),\r\n    [actionableSummaries]\r\n  );\r\n\r\n  const instructionsActionDone =\r\n    reviewedInstructionIds === actionableInstructionIds && actionableInstructionIds !== '';\r\n\r\nconst officeAttendanceButtonText = currentUserConfirmed\r\n  ? 'Update Attendance'\r\n  : 'Confirm Attendance';\r\n\r\n  const today = new Date();\r\n  const formatDateLocal = (d: Date): string => {\r\n    const year = d.getFullYear();\r\n    const month = String(d.getMonth() + 1).padStart(2, '0');\r\n    const day = String(d.getDate()).padStart(2, '0');\r\n    return `${year}-${month}-${day}`;\r\n  };\r\n  const formattedToday = formatDateLocal(today);\r\n  const columnsForPeople = 3;\r\n\r\n  const isPersonOutToday = (person: Person): boolean => {\r\n    const todayStr = formatDateLocal(new Date());\r\n    return annualLeaveRecords.some((leave) => {\r\n      if (leave.status !== 'booked') return false;\r\n      if (leave.person.trim().toLowerCase() !== person.initials.trim().toLowerCase()) return false;\r\n      return todayStr >= leave.start_date && todayStr <= leave.end_date;\r\n    });\r\n  };\r\n\r\n  const allPeople = useMemo(() => {\r\n    if (!attendanceTeam || attendanceTeam.length === 0) return [];\r\n  \r\n    return attendanceTeam\r\n      .sort((a: any, b: any) => a.First.localeCompare(b.First))\r\n      .map((t: any) => {\r\n        const att = attendanceRecords.find(\r\n          (record: any) => (record.name || '').toLowerCase() === (t.First || '').toLowerCase()\r\n        );\r\n        const attending = att ? att.attendingToday : false;\r\n  \r\n        return {\r\n          id: t.Initials,\r\n          name: t.First,\r\n          initials: t.Initials,\r\n          presence: attending ? PersonaPresence.online : PersonaPresence.none,\r\n          nickname: t.Nickname || t.First,\r\n        };\r\n      });\r\n  }, [attendanceTeam, attendanceRecords]);\r\n\r\n  const normalizeName = (name: string | null | undefined): string => {\r\n    if (!name) return '';\r\n    let normalized = name.trim().toLowerCase();\r\n    if (normalized === \"bianca odonnell\") {\r\n      normalized = \"bianca o'donnell\";\r\n    }\r\n    if (normalized === \"samuel packwood\") {\r\n      normalized = \"sam packwood\";\r\n    }\r\n    return normalized;\r\n  };\r\n  \r\n  const { name: metricsName, clioId: metricsClioId } = getMetricsAlias(\r\n    userData?.[0]?.[\"Full Name\"],\r\n    userData?.[0]?.Initials,\r\n    userData?.[0]?.[\"Clio ID\"]\r\n  );\r\n\r\n  // IMPORTANT: For outstanding balances, use the actual current user's name\r\n  // (metricsName is an alias used for time/fees metrics demos and can skew ownership).\r\n  let userResponsibleName = (userData?.[0]?.FullName || userData?.[0]?.[\"Full Name\"] || '').trim() || metricsName;\r\n  \r\n  // Override for localhost/Luke to use Alex Cook's data\r\n  const userInitialsForBalance = userData?.[0]?.Initials || '';\r\n  if (window.location.hostname === 'localhost' || userInitialsForBalance === 'LZ') {\r\n    userResponsibleName = 'Alex Cook';\r\n  }\r\n  \r\n  const userMatterIDs = useMemo(() => {\r\n    if (!normalizedMatters || normalizedMatters.length === 0) return [];\r\n    return normalizedMatters\r\n      .filter((matter) =>\r\n        normalizeName(matter.responsibleSolicitor) === normalizeName(userResponsibleName)\r\n      )\r\n      .map((matter) => {\r\n        const numericId = Number(matter.matterId);\r\n        return isNaN(numericId) ? null : numericId;\r\n      })\r\n      .filter((id): id is number => id !== null);\r\n  }, [normalizedMatters, userResponsibleName]);\r\n\r\n  const myOutstandingBalances = useMemo(() => {\r\n    if (!outstandingBalancesData?.data || userMatterIDs.length === 0) return [];\r\n    return outstandingBalancesData.data.filter((bal: any) =>\r\n      bal.associated_matter_ids.some((id: number) => userMatterIDs.includes(Number(id)))\r\n    );\r\n  }, [outstandingBalancesData, userMatterIDs]);\r\n\r\n  const [isOutstandingPanelOpen, setIsOutstandingPanelOpen] = useState(false);\r\n  const [showOnlyMine, setShowOnlyMine] = useState(true); // Changed default to true\r\n\r\n    // Create a derived variable mapping the raw outstanding balances data into MatterBalance[]\r\n    const outstandingBalancesList = useMemo<OutstandingClientBalance[]>(() => {\r\n      if (outstandingBalancesData && outstandingBalancesData.data) {\r\n        return outstandingBalancesData.data.map((record: any) => ({\r\n          id: record.id,\r\n          created_at: record.created_at,\r\n          updated_at: record.updated_at,\r\n          associated_matter_ids: record.associated_matter_ids,\r\n          contact: record.contact,\r\n          total_outstanding_balance: record.total_outstanding_balance,\r\n          last_payment_date: record.last_payment_date,\r\n          last_shared_date: record.last_shared_date,\r\n          newest_issued_bill_due_date: record.newest_issued_bill_due_date,\r\n          pending_payments_total: record.pending_payments_total,\r\n          reminders_enabled: record.reminders_enabled,\r\n          currency: record.currency,\r\n          outstanding_bills: record.outstanding_bills,\r\n        }));\r\n      }\r\n      return [];\r\n    }, [outstandingBalancesData]);\r\n\r\n// Create a filtered list for the Outstanding Balances panel.\r\nconst filteredBalancesForPanel = useMemo<OutstandingClientBalance[]>(() => {\r\n  if (!outstandingBalancesData || !outstandingBalancesData.data) {\r\n    return [];\r\n  }\r\n  const allBalances: OutstandingClientBalance[] = outstandingBalancesData.data.map((record: any) => ({\r\n    id: record.id,\r\n    created_at: record.created_at,\r\n    updated_at: record.updated_at,\r\n    associated_matter_ids: record.associated_matter_ids,\r\n    contact: record.contact,\r\n    total_outstanding_balance: record.total_outstanding_balance,\r\n    last_payment_date: record.last_payment_date,\r\n    last_shared_date: record.last_shared_date,\r\n    newest_issued_bill_due_date: record.newest_issued_bill_due_date,\r\n    pending_payments_total: record.pending_payments_total,\r\n    reminders_enabled: record.reminders_enabled,\r\n    currency: record.currency,\r\n    outstanding_bills: record.outstanding_bills,\r\n  }));\r\n  if (showOnlyMine && userMatterIDs.length > 0) {\r\n    return allBalances.filter((balance) =>\r\n  balance.associated_matter_ids.some((id: number | string) => userMatterIDs.includes(Number(id)))\r\n    );\r\n  }\r\n  return allBalances;\r\n}, [outstandingBalancesData, showOnlyMine, userMatterIDs]);\r\n\r\n    const outstandingTotal = useMemo(() => {\r\n      if (!outstandingBalancesData || !outstandingBalancesData.data) {\r\n        return null; // Data not ready yet\r\n      }\r\n      // Strictly sum only balances for the current user's matters\r\n      if (userMatterIDs.length === 0) return 0;\r\n      return myOutstandingBalances.reduce(\r\n        (sum: number, record: any) => sum + (Number(record.total_outstanding_balance) || 0),\r\n        0\r\n      );\r\n    }, [outstandingBalancesData, userMatterIDs, myOutstandingBalances]);\r\n\r\n  // Removed no-op effect that could trigger unnecessary renders\r\n  // useEffect(() => {}, [userMatterIDs, outstandingBalancesData]);\r\n\r\n  const metricsData = useMemo(() => {\r\n    const currentDate = new Date();\r\n    const currentMonth = currentDate.getMonth();\r\n    const currentYear = currentDate.getFullYear();\r\n  \r\n    // Define user details only once\r\n    const userFirstName = userData?.[0]?.First?.trim().toLowerCase() || '';\r\n    const userLastName = userData?.[0]?.Last?.trim().toLowerCase() || '';\r\n    const userFullName =\r\n      userData?.[0]?.FullName?.trim().toLowerCase() || `${userFirstName} ${userLastName}`;\r\n    const userInitials = userData?.[0]?.Initials?.trim().toLowerCase() || '';\r\n    const memberForInitials = transformedTeamData.find(\r\n      (t) => (t.Initials || '').toLowerCase() === userInitials\r\n    );\r\n    const userNickname = memberForInitials?.Nickname?.trim().toLowerCase() || '';\r\n  \r\n    // Helper function to normalize names\r\n    const normalizeName = (name: string | null | undefined): string => {\r\n      if (!name) return '';\r\n      let normalized = String(name).trim().toLowerCase();\r\n      // Handle \"Last, First\" -> \"first last\"\r\n      if (normalized.includes(',')) {\r\n        const [last, first] = normalized.split(',').map(p => p.trim());\r\n        if (first && last) normalized = `${first} ${last}`;\r\n      }\r\n  // Remove periods often used in initials like \"r. chapman\"\r\n  normalized = normalized.replace(/\\./g, '');\r\n  // Strip parenthetical content e.g., \"richard chapman (rc)\" -> \"richard chapman\"\r\n  normalized = normalized.replace(/\\s*\\([^)]*\\)\\s*/g, ' ');\r\n  // Remove trailing decorations after separators like \" - \", \" / \", or \" | \"\r\n  normalized = normalized.replace(/\\s[-/|].*$/, '');\r\n      // Known alias fixes\r\n      if (normalized === 'bianca odonnell') normalized = \"bianca o'donnell\";\r\n      if (normalized === 'samuel packwood') normalized = 'sam packwood';\r\n      return normalized.replace(/\\s+/g, ' ');\r\n    };\r\n  \r\n  // Calculate matters opened count for conversion metrics\r\n  // Always use the currently selected user; do not force a different user in local dev\r\n  const targetFirst = userFirstName;\r\n  const targetLast = userLastName;\r\n  const targetFull = userFullName;\r\n  const targetInitials = userInitials;\r\n\r\n  // Build a rich alias set for the selected user covering common variants seen in data\r\n  const buildUserAliasSet = (): Set<string> => {\r\n    const aliases: string[] = [];\r\n    const first = (targetFirst || '').trim();\r\n    const last = (targetLast || '').trim();\r\n    const full = (targetFull || '').trim();\r\n    const initials = (targetInitials || '').trim();\r\n    const nickname = (userNickname || '').trim();\r\n\r\n    // Full forms\r\n    if (full) aliases.push(full);\r\n    if (first && last) aliases.push(`${first} ${last}`);\r\n    if (nickname && last) aliases.push(`${nickname} ${last}`);\r\n\r\n    // Initials only (already checked separately but include here for uniformity)\r\n    if (initials) aliases.push(initials);\r\n\r\n    // First initial + last (e.g., \"r chapman\")\r\n    if (first && last) aliases.push(`${first[0]} ${last}`);\r\n\r\n    // Initial with dot + last (e.g., \"r. chapman\")\r\n    if (first && last) aliases.push(`${first[0]}. ${last}`);\r\n\r\n    // Normalize and dedupe\r\n    return new Set(aliases.map(a => normalizeName(a)));\r\n  };\r\n\r\n  const targetNamesSet = buildUserAliasSet();\r\n\r\n    // Compute per-user matters opened from normalizedMatters using role-aware logic\r\n    const mattersOpenedCount = (normalizedMatters || []).filter((m) => {\r\n      const openDate = parseOpenDate((m as any).openDate);\r\n      if (!openDate) return false;\r\n      const isCurrentMonth = openDate.getMonth() === currentMonth && openDate.getFullYear() === currentYear;\r\n      if (!isCurrentMonth) return false;\r\n      // Count only where current user is responsible (or both)\r\n      const role = (m as any).role;\r\n      return role === 'responsible' || role === 'both';\r\n    }).length;\r\n\r\n    // Debug logging (disabled to prevent console spam and re-render noise)\r\n    if (false) {\r\n      console.log('Debug - mattersOpenedCount calculation:', {\r\n        normalizedMattersLength: normalizedMatters?.length || 0,\r\n        currentMonth,\r\n        currentYear,\r\n        mattersOpenedCount,\r\n        sampleMatters: (normalizedMatters || []).slice(0, 3).map(m => ({\r\n          openDate: (m as any).openDate,\r\n          role: (m as any).role,\r\n          parsedDate: parseOpenDate((m as any).openDate),\r\n          isCurrentMonth: parseOpenDate((m as any).openDate) ? \r\n            parseOpenDate((m as any).openDate)!.getMonth() === currentMonth && \r\n            parseOpenDate((m as any).openDate)!.getFullYear() === currentYear : false\r\n        }))\r\n      });\r\n    }\r\n\r\n    // Firm-wide matters opened this month (secondary metric)\r\n    const firmMattersOpenedCount = (normalizedMatters || []).filter((m) => {\r\n      const openDate = parseOpenDate((m as any).openDate);\r\n      if (!openDate) return false;\r\n      return openDate.getMonth() === currentMonth && openDate.getFullYear() === currentYear;\r\n    }).length;\r\n\r\n    if (!wipClioData) {\r\n        return [\r\n          { title: 'Time Today', isTimeMoney: true, money: 0, hours: 0, prevMoney: 0, prevHours: 0, showDial: true, dialTarget: 6 },\r\n          { title: 'Av. Time This Week', isTimeMoney: true, money: 0, hours: 0, prevMoney: 0, prevHours: 0, showDial: true, dialTarget: 6 },\r\n          { title: 'Time This Week', isTimeMoney: true, money: 0, hours: 0, prevMoney: 0, prevHours: 0, showDial: true, dialTarget: 30 },\r\n          { title: 'Fees Recovered This Month', isMoneyOnly: true, money: recoveredData ?? 0, prevMoney: prevRecoveredData ?? 0 },\r\n      // Use computed outstandingTotal even when WIP data hasn't loaded\r\n      { title: 'Outstanding Office Balances', isMoneyOnly: true, money: outstandingTotal ?? 0 },\r\n          { title: 'Enquiries Today', isTimeMoney: false, count: enquiriesToday, prevCount: prevEnquiriesToday },\r\n          { title: 'Enquiries This Week', isTimeMoney: false, count: enquiriesWeekToDate, prevCount: prevEnquiriesWeekToDate },\r\n          { title: 'Matters Opened', isTimeMoney: false, count: mattersOpenedCount, prevCount: 0, secondary: firmMattersOpenedCount },\r\n        ];\r\n      }\r\n      \r\n  const currentWeekData = wipClioData.current_week?.daily_data?.[formattedToday];\r\n    const lastWeekDate = new Date(today);\r\n    lastWeekDate.setDate(today.getDate() - 7);\r\n    const formattedLastWeekDate = formatDateLocal(lastWeekDate);\r\n  const lastWeekData = wipClioData.last_week?.daily_data?.[formattedLastWeekDate];\r\n    const startOfCurrentWeek = new Date(today);\r\n    startOfCurrentWeek.setDate(today.getDate() - today.getDay() + (today.getDay() === 0 ? -6 : 1));\r\n    startOfCurrentWeek.setHours(0, 0, 0, 0);\r\n    const startOfLastWeek = new Date(startOfCurrentWeek);\r\n    startOfLastWeek.setDate(getMondayOfCurrentWeek().getDate() - 7);\r\n\r\n    const computeAverageUpTo = (\r\n      dailyData: Record<string, { total_hours: number; total_amount: number }>,\r\n      start: Date,\r\n      end: Date\r\n    ) => {\r\n      let hours = 0;\r\n      let amount = 0;\r\n      let count = 0;\r\n      for (let d = new Date(start); d <= end; d.setDate(d.getDate() + 1)) {\r\n        const dateStr = formatDateLocal(d);\r\n        const data = dailyData[dateStr];\r\n        if (data) {\r\n          hours += data.total_hours;\r\n          amount += data.total_amount;\r\n        }\r\n        const day = d.getDay();\r\n        if (day >= 1 && day <= 5 && data) count += 1; // count weekday only when hours exist\r\n      }\r\n      return {\r\n        avgHours: count ? parseFloat((hours / count).toFixed(2)) : 0,\r\n        avgAmount: count ? parseFloat((amount / count).toFixed(2)) : 0,\r\n      };\r\n    };\r\n\r\n    const currentAvg = computeAverageUpTo(\r\n      wipClioData.current_week?.daily_data ?? {},\r\n      startOfCurrentWeek,\r\n      today\r\n    );\r\n    const prevAvg = computeAverageUpTo(\r\n      wipClioData.last_week?.daily_data ?? {},\r\n      startOfLastWeek,\r\n      lastWeekDate\r\n    );\r\n\r\n    debugLog('📊 Average calculations:', {\r\n      currentAvg,\r\n      prevAvg,\r\n      startOfCurrentWeek: startOfCurrentWeek.toISOString(),\r\n      today: today.toISOString(),\r\n      formattedToday,\r\n      currentWeekDataKeys: Object.keys(wipClioData.current_week?.daily_data || {}),\r\n      todayData: wipClioData.current_week?.daily_data?.[formattedToday]\r\n    });\r\n\r\n\r\n    let totalTimeThisWeek = 0;\r\n    if (wipClioData.current_week && wipClioData.current_week.daily_data) {\r\n      Object.values(wipClioData.current_week.daily_data).forEach((dayData: any) => {\r\n        totalTimeThisWeek += dayData.total_hours || 0;\r\n      });\r\n      debugLog('📊 Current week time calculation:', {\r\n        dailyDataKeys: Object.keys(wipClioData.current_week.daily_data),\r\n        dailyDataSample: Object.entries(wipClioData.current_week.daily_data).slice(0, 3),\r\n        totalTimeThisWeek\r\n      });\r\n    }\r\n    let totalTimeLastWeek = 0;\r\n    if (wipClioData.last_week && wipClioData.last_week.daily_data) {\r\n      Object.values(wipClioData.last_week.daily_data).forEach((dayData: any) => {\r\n        totalTimeLastWeek += dayData.total_hours || 0;\r\n      });\r\n      debugLog('📊 Last week time calculation:', {\r\n        dailyDataKeys: Object.keys(wipClioData.last_week.daily_data),\r\n        totalTimeLastWeek\r\n      });\r\n    }\r\n\r\n    const getWorkWeekDays = (): Date[] => {\r\n      const now = new Date();\r\n      const dayOfWeek = now.getDay();\r\n      const diff = dayOfWeek === 0 ? -6 : 1 - dayOfWeek;\r\n      const monday = new Date(now);\r\n      monday.setDate(now.getDate() + diff);\r\n      const days: Date[] = [];\r\n      for (let i = 0; i < 5; i++) {\r\n        const d = new Date(monday);\r\n        d.setDate(monday.getDate() + i);\r\n        days.push(d);\r\n      }\r\n      return days;\r\n    };\r\n    const workWeekDays = getWorkWeekDays();\r\n    let leaveDays = 0;\r\n    workWeekDays.forEach((day) => {\r\n      const dayString = formatDateLocal(day);\r\n      if (\r\n        annualLeaveRecords.some(\r\n          (rec) =>\r\n            rec.status === 'booked' &&\r\n            (rec.person || '').toLowerCase() === (userInitials || '').toLowerCase() &&\r\n            dayString >= rec.start_date &&\r\n            dayString <= rec.end_date\r\n        )\r\n      ) {\r\n        leaveDays++;\r\n      }\r\n    });\r\n    const adjustedTarget = (5 - leaveDays) * 6;\r\n\r\n    return [\r\n      {\r\n        title: 'Time Today',\r\n        isTimeMoney: true,\r\n        money: currentWeekData ? currentWeekData.total_amount : 0,\r\n        hours: currentWeekData ? currentWeekData.total_hours : 0,\r\n        prevMoney: lastWeekData ? lastWeekData.total_amount : 0,\r\n        prevHours: lastWeekData ? lastWeekData.total_hours : 0,\r\n        showDial: true,\r\n        dialTarget: 6,\r\n      },\r\n      {\r\n        title: 'Av. Time This Week',\r\n        isTimeMoney: true,\r\n        money: currentAvg.avgAmount,\r\n        hours: currentAvg.avgHours,\r\n        prevMoney: prevAvg.avgAmount,\r\n        prevHours: prevAvg.avgHours,\r\n        showDial: true,\r\n        dialTarget: 6,\r\n      },\r\n      {\r\n        title: 'Time This Week',\r\n        isTimeMoney: true,\r\n        money: 0,\r\n        hours: totalTimeThisWeek,\r\n        prevMoney: 0,\r\n        prevHours: totalTimeLastWeek,\r\n        showDial: true,\r\n        dialTarget: adjustedTarget,\r\n      },\r\n      {\r\n        title: 'Fees Recovered This Month',\r\n        isMoneyOnly: true,\r\n        money: recoveredData ?? 0,\r\n        prevMoney: prevRecoveredData ?? 0,\r\n      },\r\n      {\r\n        title: 'Outstanding Office Balances',\r\n        isMoneyOnly: true,\r\n        money: outstandingTotal ?? 0,\r\n        // No prevMoney - this is a current snapshot with no historical comparison\r\n      },\r\n      {\r\n        title: 'Enquiries Today',\r\n        isTimeMoney: false,\r\n        count: enquiriesToday,\r\n        prevCount: prevEnquiriesToday,\r\n      },\r\n      {\r\n        title: 'Enquiries This Week',\r\n        isTimeMoney: false,\r\n        count: enquiriesWeekToDate,\r\n        prevCount: prevEnquiriesWeekToDate,\r\n      },\r\n      {\r\n        title: 'Enquiries This Month',\r\n        isTimeMoney: false,\r\n        count: enquiriesMonthToDate,\r\n        prevCount: prevEnquiriesMonthToDate,\r\n      },\r\n      {\r\n        title: 'Matters Opened',\r\n        isTimeMoney: false,\r\n        count: mattersOpenedCount,\r\n        prevCount: 0,\r\n        secondary: firmMattersOpenedCount,\r\n      },\r\n    ];    \r\n  }, [\r\n    wipClioData,\r\n    recoveredData,\r\n    prevRecoveredData,\r\n    formattedToday,\r\n    enquiriesToday,\r\n    prevEnquiriesToday,\r\n    enquiriesWeekToDate,\r\n    prevEnquiriesWeekToDate,\r\n    enquiriesMonthToDate,\r\n    prevEnquiriesMonthToDate,\r\n    annualLeaveRecords,\r\n    userData,\r\n    normalizedMatters,\r\n    userInitials, // ADDED so we recalc if userInitials changes\r\n    transformedTeamData,\r\n    outstandingBalancesData, // ADDED\r\n    userMatterIDs,           // ADDED\r\n  ]);\r\n  \r\n  const timeMetrics = metricsData.slice(0, 5);\r\n  // Removed enquiryMetrics; conversion summary now handled by TimeMetricsV2 props\r\n\r\n  // Combine annualLeaveRecords and futureLeaveRecords for approval filtering\r\n  const combinedLeaveRecords = useMemo(() => {\r\n    return [...annualLeaveRecords, ...futureLeaveRecords];\r\n  }, [annualLeaveRecords, futureLeaveRecords]);\r\n\r\n  const APPROVERS = ['AC', 'JW', 'LZ', 'KW'];\r\n  // MODIFIED: using userInitials from the ref\r\n  const isApprover = APPROVERS.includes(userInitials);\r\n\r\n  const approvalsNeeded = useMemo(\r\n    () =>\r\n      isApprover\r\n        ? combinedLeaveRecords.filter(\r\n            (x) => x.status === 'requested' && x.approvers?.includes(userInitials)\r\n          )\r\n        : [],\r\n    [combinedLeaveRecords, isApprover, userInitials]\r\n  );\r\n\r\n  const snippetApprovalsNeeded = useMemo(\r\n    () => (isApprover ? snippetEdits.filter(e => e.status === 'pending') : []),\r\n    [snippetEdits, isApprover]\r\n  );\r\n\r\n  // Merge annualLeaveRecords and futureLeaveRecords for bookings\r\n  const bookingsNeeded = useMemo(\r\n    () =>\r\n      [...annualLeaveRecords, ...futureLeaveRecords].filter(\r\n        (x) =>\r\n          (x.status === 'approved' || x.status === 'rejected') &&\r\n          (x.person || '').toLowerCase() === (userInitials || '').toLowerCase()\r\n      ),\r\n    [annualLeaveRecords, futureLeaveRecords, userInitials]\r\n  );\r\n\r\n  type BookingItem = typeof bookingsNeeded[number];\r\n\r\n  // Quick action button styles\r\n  const approveButtonStyles = {\r\n    root: {\r\n      backgroundColor: '#FFD700 !important', // Yellow background\r\n      border: 'none !important',\r\n      height: '40px !important',\r\n      fontWeight: '600',\r\n      borderRadius: '4px !important',\r\n      padding: '6px 12px !important',\r\n      animation: `yellowPulse 2s infinite !important`, // Use yellowPulse animation\r\n      transition: 'box-shadow 0.3s, transform 0.3s, background 0.3s ease !important',\r\n      whiteSpace: 'nowrap',\r\n      width: 'auto',\r\n      color: '#ffffff !important',\r\n    },\r\n  };\r\n\r\n  const bookButtonStyles = {\r\n    root: {\r\n      backgroundColor: '#28a745 !important', // Green background\r\n      border: 'none !important',\r\n      height: '40px !important',\r\n      fontWeight: '600',\r\n      borderRadius: '4px !important',\r\n      padding: '6px 12px !important',\r\n      animation: `greenPulse 2s infinite !important`, // Use greenPulse animation\r\n      transition: 'box-shadow 0.3s, transform 0.3s, background 0.3s ease !important',\r\n      whiteSpace: 'nowrap',\r\n      width: 'auto',\r\n      color: '#ffffff !important',\r\n    },\r\n  };\r\n\r\n  // Leave action handlers\r\n  const handleApproveLeaveClick = () => {\r\n    if (approvalsNeeded.length > 0) {\r\n      setBespokePanelContent(\r\n        <Suspense fallback={<ThemedSpinner size={SpinnerSize.small} />}>\r\n          <AnnualLeaveApprovals\r\n            approvals={approvalsNeeded.map((item) => ({\r\n              id: item.id,\r\n              person: item.person,\r\n              start_date: item.start_date,\r\n              end_date: item.end_date,\r\n              reason: item.reason,\r\n              status: item.status,\r\n              hearing_confirmation: item.hearing_confirmation,\r\n              hearing_details: item.hearing_details,\r\n            }))}\r\n            futureLeave={futureLeaveRecords.map((item) => ({\r\n              id: item.id,\r\n              person: item.person,\r\n              start_date: item.start_date,\r\n              end_date: item.end_date,\r\n              reason: item.reason,\r\n              status: item.status,\r\n              hearing_confirmation: item.hearing_confirmation,\r\n              hearing_details: item.hearing_details,\r\n            }))}\r\n            onClose={() => {\r\n              setIsBespokePanelOpen(false);\r\n              resetQuickActionsSelection();\r\n            }}\r\n            team={(teamData ?? []) as any}\r\n            totals={annualLeaveTotals}\r\n            allLeaveEntries={annualLeaveAllData}\r\n            onApprovalUpdate={handleApprovalUpdate}  // Pass the callback here\r\n          />\r\n        </Suspense>\r\n      );\r\n      setBespokePanelTitle('Approve Annual Leave');\r\n      setIsBespokePanelOpen(true);\r\n    }\r\n  };\r\n\r\n  // Test handler for localhost annual leave approvals\r\n  const handleTestApproveLeaveClick = useCallback(() => {\r\n    // Create dummy test data for localhost testing\r\n    const testApprovals = [\r\n      {\r\n        id: 'test-1',\r\n        person: 'Test User',\r\n        start_date: '2025-09-25',\r\n        end_date: '2025-09-27',\r\n        reason: 'Family vacation',\r\n        status: 'requested',\r\n        hearing_confirmation: null,\r\n        hearing_details: '',\r\n      },\r\n      {\r\n        id: 'test-2', \r\n        person: 'Another User',\r\n        start_date: '2025-10-01',\r\n        end_date: '2025-10-03',\r\n        reason: 'Medical appointment',\r\n        status: 'requested',\r\n        hearing_confirmation: null,\r\n        hearing_details: '',\r\n      }\r\n    ];\r\n\r\n    setBespokePanelContent(\r\n      <Suspense fallback={<ThemedSpinner size={SpinnerSize.small} />}>\r\n        <AnnualLeaveApprovals\r\n          approvals={testApprovals}\r\n          futureLeave={futureLeaveRecords.map((item) => ({\r\n            id: item.id,\r\n            person: item.person,\r\n            start_date: item.start_date,\r\n            end_date: item.end_date,\r\n            reason: item.reason,\r\n            status: item.status,\r\n            hearing_confirmation: item.hearing_confirmation,\r\n            hearing_details: item.hearing_details,\r\n          }))}\r\n          onClose={() => {\r\n            setIsBespokePanelOpen(false);\r\n            resetQuickActionsSelection();\r\n          }}\r\n          team={(teamData ?? []) as any}\r\n          totals={annualLeaveTotals}\r\n          allLeaveEntries={annualLeaveAllData}\r\n          onApprovalUpdate={handleApprovalUpdate}  // Pass the callback here\r\n        />\r\n      </Suspense>\r\n    );\r\n    setBespokePanelTitle('Approve Annual Leave (Test)');\r\n    setIsBespokePanelOpen(true);\r\n  }, [futureLeaveRecords, annualLeaveTotals, annualLeaveAllData, handleApprovalUpdate]);\r\n\r\n  const openBookLeavePanel = React.useCallback(\r\n    (entries: BookingItem[]) => {\r\n      if (!entries || entries.length === 0) {\r\n        return;\r\n      }\r\n\r\n      setBespokePanelContent(\r\n        <Suspense fallback={<ThemedSpinner size={SpinnerSize.small} />}>\r\n          <AnnualLeaveBookings\r\n            bookings={entries.map((item) => ({\r\n              id: item.id,\r\n              person: item.person,\r\n              start_date: item.start_date,\r\n              end_date: item.end_date,\r\n              status: item.status,\r\n              rejection_notes: item.rejection_notes,\r\n            }))}\r\n            onClose={() => {\r\n              setIsBespokePanelOpen(false);\r\n              resetQuickActionsSelectionRef.current?.();\r\n            }}\r\n            team={transformedTeamData}\r\n          />\r\n        </Suspense>\r\n      );\r\n      setBespokePanelTitle('Book Requested Leave');\r\n      setIsBespokePanelOpen(true);\r\n    },\r\n    [setBespokePanelContent, setBespokePanelTitle, setIsBespokePanelOpen, transformedTeamData]\r\n  );\r\n\r\n  const handleBookLeaveClick = React.useCallback(() => {\r\n    openBookLeavePanel(bookingsNeeded);\r\n  }, [bookingsNeeded, openBookLeavePanel]);\r\n\r\n  const handleBookLeavePreviewClick = React.useCallback(() => {\r\n    const todayIso = new Date().toISOString();\r\n    const tomorrowIso = new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString();\r\n    const sample: BookingItem[] = [\r\n      {\r\n        id: 'preview-booking',\r\n        person: userData[0]?.FullName ?? 'You',\r\n        start_date: todayIso,\r\n        end_date: tomorrowIso,\r\n        status: 'approved',\r\n        rejection_notes: '',\r\n      } as BookingItem,\r\n    ];\r\n    openBookLeavePanel(sample);\r\n  }, [openBookLeavePanel, userData]);\r\n\r\n  const approveSnippet = async (id: number, approve: boolean) => {\r\n    try {\r\n      const baseUrl = proxyBaseUrl;\r\n      if (approve) {\r\n        const approveUrl = `${baseUrl}/${process.env.REACT_APP_APPROVE_SNIPPET_EDIT_PATH}?code=${process.env.REACT_APP_APPROVE_SNIPPET_EDIT_CODE}`;\r\n        await fetch(approveUrl, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ editId: id, approvedBy: userInitials })\r\n        });\r\n      } else {\r\n        const deleteUrl = `${baseUrl}/${process.env.REACT_APP_DELETE_SNIPPET_EDIT_PATH}?code=${process.env.REACT_APP_DELETE_SNIPPET_EDIT_CODE}`;\r\n        await fetch(deleteUrl, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ editId: id })\r\n        });\r\n      }\r\n      setSnippetEdits(prev => prev.filter(e => e.id !== id));\r\n    } catch (err) {\r\n      console.error('Failed to update snippet edit', err);\r\n    }\r\n  };\r\n\r\n  const handleSnippetApprovalClick = () => {\r\n    if (snippetApprovalsNeeded.length > 0) {\r\n      setBespokePanelContent(\r\n        <Suspense fallback={<ThemedSpinner size={SpinnerSize.small} />}>\r\n          <SnippetEditsApproval\r\n            edits={snippetApprovalsNeeded}\r\n            onApprove={(id) => approveSnippet(id, true)}\r\n            onReject={(id) => approveSnippet(id, false)}\r\n            onClose={() => {\r\n              setIsBespokePanelOpen(false);\r\n              resetQuickActionsSelection();\r\n            }}\r\n          />\r\n        </Suspense>\r\n      );\r\n      setBespokePanelTitle('Approve Snippet Edits');\r\n      setIsBespokePanelOpen(true);\r\n    }\r\n  };\r\n\r\n  const immediateALActions = useMemo(() => {\r\n    const actions: Array<{ title: string; onClick: () => void; icon?: string; category?: ImmediateActionCategory }> = [];\r\n    \r\n    // Add test annual leave approval for localhost (only if no real approvals exist)\r\n    if (isLocalhost && approvalsNeeded.length === 0) {\r\n      actions.push({\r\n        title: 'Approve Annual Leave (Test)',\r\n        onClick: handleTestApproveLeaveClick,\r\n        icon: 'PalmTree',\r\n        category: 'critical',\r\n      });\r\n    }\r\n    \r\n    if (isApprover && approvalsNeeded.length > 0) {\r\n      actions.push({\r\n        title: 'Approve Annual Leave',\r\n        onClick: handleApproveLeaveClick,\r\n        icon: 'PalmTree',\r\n        category: 'critical',\r\n      });\r\n    }\r\n    if (isApprover && snippetApprovalsNeeded.length > 0) {\r\n      actions.push({\r\n        title: 'Approve Snippet Edits',\r\n        onClick: handleSnippetApprovalClick,\r\n        icon: 'Edit',\r\n        category: 'standard',\r\n      });\r\n    }\r\n    if (bookingsNeeded.length > 0) {\r\n      actions.push({\r\n        title: 'Book Requested Leave',\r\n        onClick: handleBookLeaveClick,\r\n        icon: 'Accept',\r\n        category: 'success',\r\n      });\r\n    }\r\n    if (isLocalhost && bookingsNeeded.length === 0) {\r\n      actions.push({\r\n        title: 'Book Requested Leave',\r\n        onClick: handleBookLeavePreviewClick,\r\n        icon: 'Accept',\r\n        category: 'success',\r\n      });\r\n    }\r\n    return actions;\r\n  }, [\r\n    isApprover,\r\n    approvalsNeeded,\r\n    snippetApprovalsNeeded,\r\n    bookingsNeeded,\r\n    handleTestApproveLeaveClick,\r\n    handleApproveLeaveClick,\r\n    handleSnippetApprovalClick,\r\n    handleBookLeaveClick,\r\n    handleBookLeavePreviewClick,\r\n    isLocalhost,\r\n  ]);\r\n\r\n  // Build immediate actions list\r\n  // Ensure every action has an icon (never undefined)\r\n  type Action = { title: string; onClick: () => void; icon: string; disabled?: boolean; category?: ImmediateActionCategory };\r\n\r\n  const resetQuickActionsSelection = useCallback(() => {\r\n    if (resetQuickActionsSelectionRef.current) {\r\n      resetQuickActionsSelectionRef.current();\r\n    }\r\n  }, []);\r\n  const handleActionClick = useCallback((action: { title: string; icon: string }) => {\r\n    let content: React.ReactNode = <div>No form available.</div>;\r\n    let titleText = action.title;\r\n    let descriptionText = '';\r\n\r\n    // Map full titles to short titles and descriptions\r\n    const titleMap: Record<string, { shortTitle: string; description: string }> = {\r\n      'Create a Task': { shortTitle: 'New Task', description: 'Create and assign a new task or reminder' },\r\n      'Save Telephone Note': { shortTitle: 'Attendance Note', description: 'Record details from a phone conversation' },\r\n      'Request Annual Leave': { shortTitle: 'Book Leave', description: 'Submit a request for annual leave or time off' },\r\n      'Update Attendance': { shortTitle: 'Confirm Your Attendance', description: '' },\r\n      'Confirm Attendance': { shortTitle: 'Confirm Attendance', description: '' },\r\n      'Book Space': { shortTitle: 'Book Room', description: 'Reserve a meeting room or workspace' },\r\n    };\r\n\r\n    if (titleMap[titleText]) {\r\n      const mapped = titleMap[titleText];\r\n      titleText = mapped.shortTitle;\r\n      descriptionText = mapped.description;\r\n    }\r\n  \r\n    switch (action.title) {\r\n      case \"Confirm Attendance\":\r\n        // Open the personal attendance confirmation component\r\n        content = (\r\n          <PersonalAttendanceConfirm\r\n            isDarkMode={isDarkMode}\r\n            attendanceRecords={transformedAttendanceRecords}\r\n            annualLeaveRecords={annualLeaveRecords}\r\n            futureLeaveRecords={futureLeaveRecords}\r\n            userData={userData}\r\n            onSave={saveAttendance}\r\n            onClose={() => {\r\n              setBespokePanelContent(null);\r\n              setIsBespokePanelOpen(false);\r\n              resetQuickActionsSelection();\r\n            }}\r\n          />\r\n        );\r\n        break;\r\n      case \"Update Attendance\":\r\n        // Open the personal attendance confirmation component\r\n        content = (\r\n          <PersonalAttendanceConfirm\r\n            isDarkMode={isDarkMode}\r\n            attendanceRecords={transformedAttendanceRecords}\r\n            annualLeaveRecords={annualLeaveRecords}\r\n            futureLeaveRecords={futureLeaveRecords}\r\n            userData={userData}\r\n            onSave={saveAttendance}\r\n            onClose={() => {\r\n              setBespokePanelContent(null);\r\n              setIsBespokePanelOpen(false);\r\n              resetQuickActionsSelection();\r\n            }}\r\n          />\r\n        );\r\n        break;\r\n      case 'Create a Task':\r\n        content = (\r\n          <Suspense fallback={<ThemedSpinner size={SpinnerSize.small} />}>\r\n            <Tasking />\r\n          </Suspense>\r\n        );\r\n        break;\r\n      case 'Request CollabSpace':\r\n        content = <CognitoForm dataKey=\"QzaAr_2Q7kesClKq8g229g\" dataForm=\"44\" />;\r\n        break;\r\n      case 'Save Telephone Note':\r\n        content = (\r\n          <Suspense fallback={<ThemedSpinner size={SpinnerSize.small} />}>\r\n            <TelephoneAttendance />\r\n          </Suspense>\r\n        );\r\n        break;\r\n      case 'Save Attendance Note':\r\n        content = <CognitoForm dataKey=\"QzaAr_2Q7kesClKq8g229g\" dataForm=\"38\" />;\r\n        break;\r\n      case 'Request ID':\r\n        content = <CognitoForm dataKey=\"QzaAr_2Q7kesClKq8g229g\" dataForm=\"60\" />;\r\n        break;\r\n      case 'Open a Matter':\r\n        content = <CognitoForm dataKey=\"QzaAr_2Q7kesClKq8g229g\" dataForm=\"9\" />;\r\n        break;\r\n      case 'Request Annual Leave':\r\n        content = (\r\n          <Suspense fallback={<ThemedSpinner size={SpinnerSize.small} />}>\r\n            <AnnualLeaveForm\r\n              futureLeave={futureLeaveRecords}\r\n              team={transformedTeamData}\r\n              userData={userData}\r\n              totals={annualLeaveTotals}\r\n              bankHolidays={bankHolidays}\r\n              allLeaveRecords={annualLeaveAllData} // Added this prop\r\n            />\r\n          </Suspense>\r\n        );\r\n        break;\r\n      case 'Review Instructions':\r\n        sessionStorage.setItem('reviewedInstructionIds', actionableInstructionIds);\r\n        setReviewedInstructionIds(actionableInstructionIds);\r\n        try {\r\n          window.dispatchEvent(new CustomEvent('navigateToInstructions'));\r\n        } catch (error) {\r\n          console.error('Failed to dispatch navigation event:', error);\r\n        }\r\n        return; // Navigate without opening panel\r\n        break;\r\n  case 'Open Matter':\r\n        // Navigate directly to Instructions tab and trigger matter opening\r\n        safeSetItem('openMatterOpening', 'true');\r\n        // Use a custom event to signal the navigation\r\n        try {\r\n          window.dispatchEvent(new CustomEvent('navigateToInstructions'));\r\n        } catch (error) {\r\n          console.error('Failed to dispatch navigation event:', error);\r\n        }\r\n        return; // Exit early, no panel needed\r\n        break;\r\n      case 'Resume Pitch':\r\n        safeSetItem('resumePitchBuilder', 'true');\r\n        try {\r\n          window.dispatchEvent(new CustomEvent('navigateToEnquiries'));\r\n        } catch (error) {\r\n          console.error('Failed to dispatch navigation event:', error);\r\n        }\r\n        break;\r\n      case 'Book Space':\r\n        content = (\r\n          <Suspense fallback={<ThemedSpinner size={SpinnerSize.small} />}>\r\n            <BookSpaceForm\r\n              feeEarner={userData[0].Initials}\r\n              onCancel={() => {\r\n                setIsBespokePanelOpen(false);\r\n                resetQuickActionsSelection();\r\n              }}\r\n              futureBookings={futureBookings}\r\n            />\r\n          </Suspense>\r\n        );\r\n        break;\r\n      case 'Unclaimed Enquiries':\r\n        content = (\r\n          <UnclaimedEnquiries\r\n            enquiries={unclaimedEnquiries}\r\n            onSelect={() => {}}\r\n            userEmail={currentUserEmail || ''}\r\n            onAreaChange={() => { /* no-op for home quick view */ }}\r\n          />\r\n        );\r\n        break;\r\n      case 'Verify ID':\r\n      case 'Review ID':\r\n        try {\r\n          window.dispatchEvent(new CustomEvent('navigateToInstructions'));\r\n        } catch (error) {\r\n          console.error('Failed to dispatch navigation event:', error);\r\n        }\r\n        return; // Navigate without opening panel\r\n        break;\r\n      case 'Assess Risk':\r\n        content = <CognitoForm dataKey=\"QzaAr_2Q7kesClKq8g229g\" dataForm=\"70\" />; // Risk Assessment form\r\n        break;\r\n      case 'Submit to CCL':\r\n      case 'Draft CCL':\r\n        content = (\r\n          <div style={{ padding: '20px' }}>\r\n            <Text variant=\"medium\" style={{ marginBottom: '15px', display: 'block' }}>\r\n              CCL submission functionality is coming soon.\r\n            </Text>\r\n            <DefaultButton \r\n              text=\"Close\" \r\n              onClick={() => setIsBespokePanelOpen(false)}\r\n            />\r\n          </div>\r\n        );\r\n        break;\r\n      default:\r\n        content = <div>No form available.</div>;\r\n        break;\r\n    }\r\n  \r\n    setBespokePanelContent(content);\r\n    setBespokePanelTitle(titleText);\r\n    setBespokePanelDescription(descriptionText);\r\n    const iconComponent = getQuickActionIcon(action.icon);\r\n    debugLog('Setting panel icon for action:', action, 'icon component:', iconComponent);\r\n    setBespokePanelIcon(iconComponent);\r\n    setIsBespokePanelOpen(true);\r\n  }, [\r\n    attendanceRef,\r\n    instructionData,\r\n    futureLeaveRecords,\r\n    transformedTeamData,\r\n    userData,\r\n    annualLeaveTotals,\r\n    bankHolidays,\r\n    annualLeaveAllData,\r\n    futureBookings,\r\n    unclaimedEnquiries,\r\n    isDarkMode,\r\n    transformedAttendanceRecords,\r\n    annualLeaveRecords,\r\n    saveAttendance,\r\n    actionableInstructionIds,\r\n    resetQuickActionsSelection,\r\n    setReviewedInstructionIds,\r\n  ]);\r\n\r\n  // Group instruction next actions by type with counts\r\n  const groupedInstructionActions = useMemo(() => {\r\n    const actionGroups: Record<string, { count: number; icon: string; disabled?: boolean }> = {};\r\n    \r\n    actionableSummaries.forEach(summary => {\r\n      const action = summary.nextAction;\r\n      if (actionGroups[action]) {\r\n        actionGroups[action].count++;\r\n      } else {\r\n        // Map next actions to appropriate icons\r\n        let icon = 'OpenFile'; // default\r\n        if (action === 'Verify ID') icon = 'ContactCard';\r\n        else if (action === 'Assess Risk') icon = 'Shield';\r\n        else if (action === 'Submit to CCL') icon = 'Send';\r\n        else if (action === 'Review') icon = 'ReviewRequestMirrored';\r\n        \r\n        actionGroups[action] = { \r\n          count: 1, \r\n          icon,\r\n          disabled: summary.disabled // Pass through disabled state\r\n        };\r\n      }\r\n    });\r\n    \r\n    return actionGroups;\r\n  }, [actionableSummaries]);\r\n  const immediateActionsList: Action[] = useMemo(() => {\r\n    const actions: Action[] = [];\r\n    if (!isLoadingAttendance && !currentUserConfirmed) {\r\n      actions.push({\r\n        title: 'Confirm Attendance',\r\n        icon: 'Calendar',\r\n        onClick: () => handleActionClick({ title: 'Confirm Attendance', icon: 'Calendar' }),\r\n        category: 'critical',\r\n      });\r\n    }\r\n    // Resume prompts (pitch / matter) suppressed intentionally; cached data remains for manual navigation\r\n    \r\n    // Add grouped instruction actions (replaces old single \"Review Instructions\" action)\r\n    if (!instructionsActionDone && (userInitials === 'LZ' || isLocalhost)) {\r\n      const instructionCategoryFor = (actionType: string): ImmediateActionCategory => {\r\n        if (['Verify ID', 'Review ID', 'Review', 'Open Matter'].includes(actionType)) {\r\n          return 'standard';\r\n        }\r\n        return 'critical';\r\n      };\r\n\r\n      Object.entries(groupedInstructionActions).forEach(([actionType, { count, icon, disabled }]) => {\r\n        const title = count === 1 ? actionType : `${actionType} (${count})`;\r\n        actions.push({\r\n          title,\r\n          icon,\r\n          disabled,\r\n          onClick: disabled \r\n            ? () => debugLog('CCL action disabled in production') \r\n            : () => handleActionClick({ title: actionType, icon }),\r\n          category: instructionCategoryFor(actionType),\r\n        });\r\n      });\r\n    }\r\n    actions.push(\r\n      ...immediateALActions.map(a => ({\r\n        ...a,\r\n        icon: a.icon || '',\r\n        category: a.category ?? 'standard',\r\n      }))\r\n    );\r\n    // Normalize titles (strip count suffix like \" (3)\") when sorting\r\n    const sortKey = (title: string) => {\r\n      const base = title.replace(/\\s*\\(\\d+\\)$/,'');\r\n      return quickActionOrder[base] ?? quickActionOrder[title] ?? 99;\r\n    };\r\n    actions.sort((a, b) => sortKey(a.title) - sortKey(b.title));\r\n    return actions;\r\n  }, [\r\n    isLoadingAttendance,\r\n    currentUserConfirmed,\r\n    hasActiveMatter,\r\n    instructionData,\r\n    groupedInstructionActions,\r\n    instructionsActionDone,\r\n    immediateALActions,\r\n    handleActionClick,\r\n    hasActivePitch,\r\n    userInitials,\r\n    isLocalhost,\r\n  ]);\r\n\r\n  // Notify parent component when immediate actions state changes\r\n  useEffect(() => {\r\n    if (onImmediateActionsChange) {\r\n      onImmediateActionsChange(immediateActionsList.length > 0);\r\n    }\r\n  }, [immediateActionsList.length, onImmediateActionsChange]);\r\n\r\n  // Removed first-entry overlay logic and session flags\r\n\r\n  const normalQuickActions = useMemo(() => {\r\n    const actions = quickActions\r\n      .filter((action) => {\r\n        if (action.title === 'Unclaimed Enquiries') {\r\n          return ['LZ', 'JW', 'AC'].includes(userInitials);\r\n        }\r\n        if (action.title === 'Request Annual Leave') {\r\n          return true;\r\n        }\r\n        return true;\r\n      });\r\n    actions.sort(\r\n      (a, b) => (quickActionOrder[a.title] || 99) - (quickActionOrder[b.title] || 99)\r\n    );\r\n    return actions;\r\n  }, [userInitials]);\r\n\r\n\r\n  // Use useLayoutEffect to avoid infinite loops and set content once per dependency change\r\n  React.useLayoutEffect(() => {\r\n    const content = (\r\n      <QuickActionsBar\r\n        isDarkMode={isDarkMode}\r\n        quickActions={normalQuickActions}\r\n        handleActionClick={handleActionClick}\r\n        currentUserConfirmed={currentUserConfirmed}\r\n        highlighted={false}\r\n        resetSelectionRef={resetQuickActionsSelectionRef}\r\n        panelActive={isBespokePanelOpen || isContextPanelOpen || isOutstandingPanelOpen || isTransactionPopupOpen}\r\n        seamless\r\n        userDisplayName={currentUserName}\r\n        userIdentifier={currentUserEmail}\r\n        onToggleTheme={toggleTheme}\r\n      />\r\n    );\r\n    setContent(content);\r\n  }, [\r\n    isDarkMode,\r\n    normalQuickActions,\r\n    currentUserConfirmed,\r\n    currentUserName,\r\n    currentUserEmail,\r\n    toggleTheme,\r\n  ]);\r\n\r\n  // Returns a narrow weekday (e.g. \"M\" for Monday, \"T\" for Tuesday)\r\n  const getShortDayLabel = (date: Date): string =>\r\n    date.toLocaleDateString('en-GB', { weekday: 'narrow' });\r\n\r\n  // Optionally, if you want to include the date as well (e.g. \"M 10\")\r\n  const getShortDayAndDateLabel = (date: Date): string => {\r\n    const shortDay = getShortDayLabel(date);\r\n    const dayOfMonth = date.getDate();\r\n    return `${shortDay} ${dayOfMonth}`;\r\n  };\r\n\r\n  const weekDays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\r\n\r\n  const currentWeekMonday = getMondayOfCurrentWeek();\r\n  const todayStr = formatDateLocal(new Date());\r\n\r\n  // Example usage in attendancePersons:\r\n  const attendancePersons = useMemo(() => {\r\n    return transformedTeamData\r\n      .map((member) => {\r\n        const record = attendanceRecords.find(\r\n          (rec: any) => (rec.name || '').toLowerCase() === (member.First || '').toLowerCase()\r\n        );\r\n        return {\r\n          name: member.First,\r\n          initials: member.Initials,\r\n          nickname: member.Nickname,\r\n          attendance:\r\n            record && record.weeks && record.weeks[relevantWeekKey]\r\n              ? record.weeks[relevantWeekKey].attendance\r\n              : '',\r\n        };\r\n      })\r\n      .sort((a, b) => a.name.localeCompare(b.name));\r\n  }, [transformedTeamData, attendanceRecords, relevantWeekKey]);\r\n\r\n  const getCellStatus = (\r\n    personAttendance: string,\r\n    personInitials: string,\r\n    day: string,\r\n    cellDateStr: string\r\n  ): 'in' | 'wfh' | 'out' => {\r\n    if (\r\n      combinedLeaveRecords.some(\r\n        (leave) =>\r\n          leave.status === 'booked' &&\r\n          leave.person.trim().toLowerCase() === personInitials.trim().toLowerCase() &&\r\n          cellDateStr >= leave.start_date &&\r\n          cellDateStr <= leave.end_date\r\n      )\r\n    ) {\r\n      return 'out';\r\n    }\r\n    const attendedDays = personAttendance ? personAttendance.split(',').map((s: string) => s.trim()) : [];\r\n    if (attendedDays.includes(day)) {\r\n      return 'in';\r\n    }\r\n    return 'wfh';\r\n  };\r\n\r\n  const AttendanceCell: React.FC<{ status: 'in' | 'wfh' | 'out'; highlight?: boolean }> = ({\r\n    status,\r\n    highlight = false,\r\n  }) => {\r\n    let iconName = 'Home';\r\n    if (status === 'in') {\r\n      iconName = 'Accept';\r\n    } else if (status === 'out') {\r\n      iconName = 'Airplane';\r\n    }\r\n    // Use proper text color for icons; if not highlighted, use main text color\r\n    const iconColor = highlight ? '#fff' : (isDarkMode ? colours.dark.text : colours.light.text);\r\n    return (\r\n      <Icon\r\n        iconName={iconName}\r\n        styles={{ root: { fontSize: '20px', color: iconColor } }}\r\n      />\r\n    );\r\n  };\r\n\r\n  const AttendancePersonaHeader: React.FC<{ person: { name: string; initials: string; nickname: string; attendance: string } }> = ({ person }) => {\r\n    // Determine today's weekday (default to Monday if out of range)\r\n    const todayDate = new Date();\r\n    const diffDays = Math.floor((todayDate.getTime() - currentWeekMonday.getTime()) / (1000 * 3600 * 24));\r\n    const todayWeekday = diffDays >= 0 && diffDays < weekDays.length ? weekDays[diffDays] : 'Monday';\r\n  \r\n    // Determine status\r\n    const currentStatus = getCellStatus(person.attendance, person.initials, todayWeekday, todayStr);\r\n  \r\n    // Define gradient based on status\r\n    let gradient = '';\r\n    if (currentStatus === 'in') {\r\n      gradient = `linear-gradient(135deg, ${colours.blue}, ${colours.darkBlue})`;\r\n    } else if (currentStatus === 'wfh') {\r\n      gradient = `linear-gradient(135deg, ${colours.highlight}, ${colours.darkBlue})`;\r\n    } else {\r\n      // For away/out\r\n      gradient = `linear-gradient(135deg, ${colours.grey}, ${colours.darkBlue})`;\r\n    }\r\n  \r\n    // Custom avatar styles with smaller font size\r\n    const avatarStyle: React.CSSProperties = {\r\n      width: '40px',\r\n      height: '40px',\r\n      borderRadius: '50%',\r\n      background: gradient,\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      color: '#ffffff',\r\n      fontWeight: 600,\r\n      fontSize: '12px',\r\n    };\r\n  \r\n    return (\r\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: '4px' }}>\r\n        <div style={avatarStyle}>\r\n          {person.initials.toUpperCase()}\r\n        </div>\r\n      </div>\r\n    );\r\n  };  \r\n\r\n// Define the fadeIn keyframes\r\nconst fadeInKeyframes = keyframes({\r\n  from: { opacity: 0, transform: 'translateY(5px)' },\r\n  to: { opacity: 1, transform: 'translateY(0)' },\r\n});\r\n\r\n  // Define the tickPop keyframes for the completion icon\r\n  const tickPopKeyframes = keyframes({\r\n    '0%': { transform: 'scale(0)', opacity: 0 },\r\n    '70%': { transform: 'scale(1.3)', opacity: 1 },\r\n    '100%': { transform: 'scale(1)', opacity: 1 },\r\n  });\r\n\r\n  // Style for the \"No actions\" container\r\nconst noActionsClass = mergeStyles({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  animation: `${fadeInKeyframes} 0.3s ease`,\r\n});\r\n\r\n  // Style for the animated tick icon container\r\n  const noActionsIconClass = mergeStyles({\r\n    width: '24px',\r\n    height: '24px',\r\n    borderRadius: '50%',\r\n    background: colours.highlight,\r\n    color: '#fff',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    fontSize: '12px',\r\n    animation: `${tickPopKeyframes} 0.3s ease`,\r\n  });\r\n\r\n// Extract matters opened dynamically from metricsData to avoid stale index assumptions\r\nconst mattersOpenedCount = React.useMemo(() => {\r\n  const item = (metricsData as any[]).find((m: any) => m.title?.toLowerCase().startsWith('matters opened'));\r\n  return item && typeof item.count === 'number' ? item.count : 0;\r\n}, [metricsData]);\r\nconst conversionRate = enquiriesMonthToDate\r\n  ? Number(((mattersOpenedCount / enquiriesMonthToDate) * 100).toFixed(2))\r\n  : 0;\r\n  \r\n  const inHighlight = 'rgba(16,124,16,0.15)'; // subtle green tint\r\n  const wfhHighlight = 'rgba(54,144,206,0.15)'; // subtle blue tint\r\n  const outHighlight = 'rgba(214,85,65,0.15)'; // subtle red tint\r\n\r\n  // Portal for app-level immediate actions\r\n  const appLevelImmediateActions = (\r\n    <ImmediateActionsBar\r\n      isDarkMode={isDarkMode}\r\n      immediateActionsReady={immediateActionsReady}\r\n      immediateActionsList={immediateActionsList}\r\n      highlighted={false}\r\n      seamless={false}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <div className={containerStyle(isDarkMode)}>\r\n      {/* Portal immediate actions to app level */}\r\n      {typeof document !== 'undefined' && document.getElementById('app-level-immediate-actions') && \r\n        createPortal(appLevelImmediateActions, document.getElementById('app-level-immediate-actions')!)\r\n      }\r\n\r\n      {/* Modern Time Metrics V2 - directly on page background */}\r\n      <div style={{ paddingTop: '16px' }}>\r\n        <TimeMetricsV2 \r\n          metrics={timeMetrics}\r\n          enquiryMetrics={[\r\n          { title: 'Enquiries Today', count: enquiriesToday, prevCount: prevEnquiriesToday },\r\n          { title: 'Enquiries This Week', count: enquiriesWeekToDate, prevCount: prevEnquiriesWeekToDate },\r\n          { title: 'Enquiries This Month', count: enquiriesMonthToDate, prevCount: prevEnquiriesMonthToDate },\r\n          { title: 'Matters Opened This Month', count: mattersOpenedCount },\r\n          { \r\n            title: 'Conversion Rate', \r\n            percentage: enquiriesMonthToDate ? Number(((mattersOpenedCount / enquiriesMonthToDate) * 100).toFixed(2)) : 0, \r\n            isPercentage: true \r\n          }\r\n        ]}\r\n        isDarkMode={isDarkMode} \r\n      />\r\n      </div>\r\n\r\n      {/* Attendance placed outside dashboard container, directly below TimeMetricsV2 */}\r\n      {!isBespokePanelOpen && (\r\n        <div style={{ margin: '12px 16px' }}>\r\n          <SectionCard \r\n            title=\"Attendance\" \r\n            id=\"attendance-section\"\r\n            variant=\"default\"\r\n            animationDelay={0.1}\r\n          >\r\n            <EnhancedAttendance\r\n              ref={attendanceRef}\r\n              isDarkMode={isDarkMode}\r\n              isLoadingAttendance={isLoadingAttendance}\r\n              isLoadingAnnualLeave={isLoadingAnnualLeave}\r\n              attendanceError={attendanceError}\r\n              annualLeaveError={annualLeaveError}\r\n              attendanceRecords={transformedAttendanceRecords}\r\n              teamData={attendanceTeam}\r\n              annualLeaveRecords={annualLeaveRecords}\r\n              futureLeaveRecords={futureLeaveRecords}\r\n              userData={userData}\r\n              onAttendanceUpdated={handleAttendanceUpdated}\r\n            />\r\n          </SectionCard>\r\n        </div>\r\n      )}\r\n\r\n      {/* Transactions & Balances moved outside container, below Attendance */}\r\n      <div style={{ margin: '12px 16px' }}>\r\n        {useLocalData ? (\r\n          <SectionCard \r\n            title=\"Transactions & Balances\" \r\n            id=\"transactions-section\"\r\n            variant=\"default\"\r\n            animationDelay={0.1}\r\n          >\r\n            <ActionSection\r\n              transactions={transactions}\r\n              userInitials={userInitials}\r\n              isDarkMode={isDarkMode}\r\n              onTransactionClick={handleTransactionClick}\r\n              matters={allMatters || []}\r\n              updateTransaction={updateTransaction}\r\n              outstandingBalances={myOutstandingBalances}\r\n            />\r\n          </SectionCard>\r\n        ) : (\r\n          <SectionCard \r\n            title=\"Transactions & Balances\" \r\n            id=\"transactions-section-disabled\"\r\n            variant=\"default\"\r\n            animationDelay={0.1}\r\n          >\r\n            <div style={{ \r\n              textAlign: 'center', \r\n              padding: '20px', \r\n              color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n              background: isDarkMode ? 'rgba(255,255,255,0.02)' : 'rgba(0,0,0,0.02)',\r\n              borderRadius: '8px',\r\n              border: `1px dashed ${isDarkMode ? colours.dark.border : colours.light.border}`\r\n            }}>\r\n              <Icon iconName=\"Build\" style={{ fontSize: '24px', marginBottom: '8px', opacity: 0.5, color: isDarkMode ? colours.blue : undefined }} />\r\n              <Text style={{ display: 'block', fontSize: '14px', fontWeight: 600, marginBottom: '4px', color: isDarkMode ? colours.blue : undefined }}>\r\n                Under Development\r\n              </Text>\r\n            </div>\r\n          </SectionCard>\r\n        )}\r\n      </div>\r\n\r\n      {/* Separator after the top sections */}\r\n      <div \r\n        style={{\r\n          height: '1px',\r\n          background: isDarkMode \r\n            ? 'linear-gradient(90deg, transparent 0%, rgba(255,255,255,0.1) 50%, transparent 100%)'\r\n            : 'linear-gradient(90deg, transparent 0%, rgba(0,0,0,0.1) 50%, transparent 100%)',\r\n          margin: '12px 16px',\r\n        }}\r\n      />\r\n\r\n      {/* Recent Work Feed - Only visible to Luke and Cass */}\r\n      {userData && userData[0] && (\r\n        userData[0].Initials === 'LZ' || \r\n        userData[0].Initials === 'CB' || \r\n        userData[0].Email?.toLowerCase().includes('luke') || \r\n        userData[0].Email?.toLowerCase().includes('cass')\r\n      ) && (\r\n        <div style={{ margin: '12px 16px' }}>\r\n          <RecentWorkFeed \r\n            maxItems={8}\r\n            showHeader={true}\r\n            compact={false}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {/* Team Issues Board */}\r\n      <div style={{ margin: '12px 16px' }}>\r\n        <TeamIssuesBoard \r\n          showHeader={true}\r\n          compact={false}\r\n          maxItemsPerColumn={3}\r\n        />\r\n      </div>\r\n\r\n      {/* Contexts Panel */}\r\n      <BespokePanel\r\n        isOpen={isContextPanelOpen}\r\n        onClose={() => {\r\n          setIsContextPanelOpen(false);\r\n          resetQuickActionsSelection();\r\n        }}\r\n        title=\"Context Details\"\r\n          width=\"2000px\"\r\n      >\r\n        {renderContextsPanelContent()}\r\n      </BespokePanel>\r\n\r\n      <BespokePanel\r\n        isOpen={isOutstandingPanelOpen}\r\n        onClose={() => {\r\n          setIsOutstandingPanelOpen(false);\r\n          resetQuickActionsSelection();\r\n        }}\r\n        title=\"Outstanding Balances Details\"\r\n        width=\"2000px\"\r\n      >\r\n        {/* Toggle between \"Everyone\" and \"Only Mine\" */}\r\n        <Toggle\r\n          label=\"Show Only My Matters\"\r\n          checked={showOnlyMine}\r\n          onChange={(ev, checked) => setShowOnlyMine(!!checked)}\r\n          styles={{ root: { marginBottom: '10px' } }}\r\n        />\r\n        <OutstandingBalancesList \r\n          balances={filteredBalancesForPanel} \r\n          matters={allMatters ?? []} \r\n        />\r\n      </BespokePanel>\r\n\r\n      {/* Bespoke Panel for other actions */}\r\n      <BespokePanel\r\n        isOpen={isBespokePanelOpen}\r\n        onClose={() => {\r\n          setIsBespokePanelOpen(false);\r\n          resetQuickActionsSelection();\r\n        }}\r\n        title={bespokePanelTitle}\r\n        description={bespokePanelDescription}\r\n        width=\"85%\"\r\n        isDarkMode={isDarkMode}\r\n        variant=\"modal\"\r\n        icon={bespokePanelIcon || undefined}\r\n      >\r\n        {bespokePanelContent}\r\n      </BespokePanel>\r\n\r\n      {/* Transaction Approval Popup */}\r\n      <BespokePanel\r\n        isOpen={isTransactionPopupOpen}\r\n        onClose={() => {\r\n          setIsTransactionPopupOpen(false);\r\n          resetQuickActionsSelection();\r\n        }}\r\n        title=\"Approve Transaction\"\r\n        width=\"2000px\"\r\n        isDarkMode={isDarkMode}\r\n      >\r\n        {selectedTransaction && (\r\n          <TransactionApprovalPopup\r\n            transaction={selectedTransaction}\r\n            matters={allMatters || []}\r\n            onSubmit={handleTransactionSubmit}\r\n            onCancel={() => {\r\n              setIsTransactionPopupOpen(false);\r\n              resetQuickActionsSelection();\r\n            }}\r\n            userInitials={userInitials} // Add userInitials prop\r\n          />\r\n        )}\r\n      </BespokePanel>\r\n\r\n      {/* Selected Form Details */}\r\n      {selectedForm && (\r\n        <FormDetails\r\n          isOpen={true}\r\n          onClose={() => {\r\n            setSelectedForm(null);\r\n            resetQuickActionsSelection();\r\n          }}\r\n          link={selectedForm}\r\n          isDarkMode={isDarkMode}\r\n          userData={userData}\r\n          matters={normalizedMatters}\r\n          offsetTop={96}\r\n        />\r\n      )}\r\n\r\n      {/* Selected Resource Details */}\r\n      {selectedResource && (\r\n        <ResourceDetails resource={selectedResource} onClose={() => {\r\n          setSelectedResource(null);\r\n          resetQuickActionsSelection();\r\n        }} />\r\n      )}\r\n  {/* Removed version and info button per request */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;","export const hasActivePitchBuilder = (): boolean => {\r\n    const saved = localStorage.getItem('pitchBuilderState');\r\n    if (!saved) return false;\r\n    try {\r\n        const state = JSON.parse(saved);\r\n        return Boolean(state && state.enquiryId);\r\n    } catch {\r\n        return false;\r\n    }\r\n};\r\n\r\nexport const clearPitchBuilderDraft = (): void => {\r\n    localStorage.removeItem('pitchBuilderState');\r\n};","import React, { useState } from 'react';\r\nimport { DefaultButton } from '@fluentui/react';\r\nimport { InstructionData } from '../../app/functionality/types';\r\n\r\nexport interface InstructionSummary {\r\n    id: string;\r\n    clientName: string;\r\n    service: string;\r\n    nextAction: string;\r\n    disabled?: boolean; // For greyed out production features\r\n}\r\n\r\nexport const getActionableInstructions = (\r\n    data: InstructionData[],\r\n    isLocalhost: boolean = false,\r\n): InstructionSummary[] => {\r\n    const summaries: InstructionSummary[] = [];\r\n    \r\n    data.forEach((item, index) => {\r\n        const instruction = item.instructions && item.instructions[0];\r\n        if (!instruction) {\r\n            return;\r\n        }\r\n        \r\n        const matterLinked = instruction.MatterId || item.matter;\r\n        if (matterLinked && !isLocalhost) {\r\n            return; // skip if already linked to a matter (except in localhost)\r\n        }\r\n\r\n        // Calculate workflow status like InstructionCard.connected.tsx does\r\n        const paymentStatus = \r\n            instruction.PaymentResult?.toLowerCase() === 'successful' ||\r\n            instruction.InternalStatus === 'paid' ||\r\n            instruction.internalStatus === 'paid'\r\n                ? 'complete' : 'pending';\r\n        \r\n        const eid = item.electronicIDChecks && item.electronicIDChecks[0];\r\n        const idVerification = item.idVerifications && item.idVerifications[0];\r\n        const eidResult = eid?.EIDOverallResult?.toLowerCase();\r\n        const idVerificationResult = idVerification?.EIDOverallResult?.toLowerCase();\r\n        const poidPassed = eidResult === 'passed' || idVerificationResult === 'passed' ||\r\n            instruction.IdVerified || instruction.EIDOverallResult?.toLowerCase() === 'passed';\r\n        const stageComplete = instruction?.Stage === 'proof-of-id-complete' || instruction?.stage === 'proof-of-id-complete';\r\n        \r\n        // Use same logic as InstructionCard for verifyIdStatus to include 'review' status\r\n        let verifyIdStatus: 'pending' | 'received' | 'review' | 'complete';\r\n        if (stageComplete) {\r\n            // If stage shows proof-of-id-complete, check the actual EID result\r\n            if (eidResult === 'review') {\r\n                verifyIdStatus = 'review';\r\n            } else if (poidPassed || eidResult === 'passed') {\r\n                verifyIdStatus = 'complete';  \r\n            } else {\r\n                // Stage complete but no clear result - assume review needed\r\n                verifyIdStatus = 'review';\r\n            }\r\n        } else if (!eid && (!item.electronicIDChecks || item.electronicIDChecks.length === 0)) {\r\n            const proofOfIdComplete = instruction?.proofOfIdComplete || instruction?.ProofOfIdComplete;\r\n            verifyIdStatus = proofOfIdComplete ? 'received' : 'pending';\r\n        } else if (poidPassed) {\r\n            verifyIdStatus = 'complete';\r\n        } else {\r\n            verifyIdStatus = 'review';\r\n        }\r\n        \r\n        const documentStatus = instruction.DocumentsReceived ? 'complete' : 'pending';\r\n        \r\n        const risk = item.riskAssessments && item.riskAssessments[0];\r\n        const riskResultRaw = risk?.RiskAssessmentResult?.toString().toLowerCase() ?? \"\";\r\n        const riskStatus = riskResultRaw\r\n            ? ['low', 'low risk', 'pass', 'approved'].includes(riskResultRaw) ? 'complete' : 'review'\r\n            : 'pending';\r\n\r\n        // Determine next action step (same logic as InstructionCard.connected.tsx)\r\n        const nextActionStep = \r\n            verifyIdStatus !== 'complete' ? 'id' :\r\n            paymentStatus !== 'complete' ? 'payment' :\r\n            documentStatus !== 'complete' ? 'documents' :\r\n            riskStatus !== 'complete' ? 'risk' :\r\n            'ccl'; // Include CCL as final step\r\n\r\n        // For localhost, add matter opening after core workflow steps (ID + payment)\r\n        const needsMatterOpening = isLocalhost && matterLinked && \r\n            verifyIdStatus === 'complete' && \r\n            paymentStatus === 'complete';\r\n\r\n        // Check if any steps need review (red status)\r\n        const hasIdReview = verifyIdStatus === 'review';\r\n        const hasRiskReview = riskStatus === 'review';\r\n        \r\n        // Include items that either:\r\n        // 1. Have next action step as id/risk/ccl (blue active step), OR\r\n        // 2. Have review status (red step that needs attention), OR\r\n        // 3. Need matter opening (localhost only)\r\n        const needsUserAction = \r\n            (nextActionStep === 'id' || nextActionStep === 'risk' || nextActionStep === 'ccl') ||\r\n            hasIdReview || hasRiskReview || needsMatterOpening;\r\n            \r\n        if (!needsUserAction) {\r\n            return;\r\n        }\r\n\r\n        const clientName = `${instruction.FirstName ?? ''} ${instruction.LastName ?? ''}`.trim();\r\n        const service = item.deals?.[0]?.ServiceDescription || 'New Matter';\r\n        \r\n        let actionLabel = '';\r\n        let isDisabled = false;\r\n        \r\n        // Determine action based on what needs attention (red steps have priority)\r\n        if (hasIdReview) {\r\n            actionLabel = 'Review ID';\r\n        } else if (hasRiskReview) {\r\n            actionLabel = 'Review Risk';\r\n        } else if (needsMatterOpening) {\r\n            actionLabel = 'Open Matter';\r\n        } else if (nextActionStep === 'id') {\r\n            actionLabel = 'Verify ID';\r\n        } else if (nextActionStep === 'risk') {\r\n            actionLabel = 'Assess Risk';\r\n        } else if (nextActionStep === 'ccl') {\r\n            actionLabel = 'Submit to CCL';\r\n            isDisabled = !isLocalhost; // Enable CCL locally, disable in production\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        summaries.push({\r\n            id: instruction.InstructionRef ?? String(item.prospectId),\r\n            clientName: clientName || 'Unknown Client',\r\n            service,\r\n            nextAction: actionLabel,\r\n            disabled: isDisabled,\r\n        });\r\n    });\r\n    \r\n    return summaries;\r\n};\r\n\r\ninterface InstructionsPromptProps {\r\n    summaries: InstructionSummary[];\r\n    onDismiss: () => void;\r\n}\r\n\r\nconst InstructionsPrompt: React.FC<InstructionsPromptProps> = ({ summaries, onDismiss }) => {\r\n    const [expanded, setExpanded] = useState(false);\r\n    if (summaries.length === 0) return null;\r\n    return (\r\n        <div className=\"instructions-prompt\" style={{ padding: 16, border: '1px solid #e1dfdd', marginBottom: 16 }}>\r\n            <p>You’ve received {summaries.length} instruction{summaries.length > 1 ? 's' : ''}. Your next step is required.</p>\r\n            <ul style={{ marginTop: 8, marginBottom: 8 }}>\r\n                {summaries.map(s => (\r\n                    <li key={s.id}>{s.clientName} – {s.service} – Next: {s.nextAction}</li>\r\n                ))}\r\n            </ul>\r\n            {expanded && (\r\n                <pre style={{ whiteSpace: 'pre-wrap', wordBreak: 'break-word', marginBottom: 8 }}>\r\n                    {JSON.stringify(summaries, null, 2)}\r\n                </pre>\r\n            )}\r\n            <div style={{ display: 'flex', gap: 8 }}>\r\n                <DefaultButton onClick={() => setExpanded(!expanded)}>{expanded ? 'Hide Details' : 'View Details'}</DefaultButton>\r\n                <DefaultButton onClick={onDismiss}>Dismiss</DefaultButton>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InstructionsPrompt;\r\n","\r\nimport React, { useEffect, useState, useCallback, useRef } from 'react';\r\nimport {\r\n  Stack,\r\n  Text,\r\n  Link,\r\n  PrimaryButton,\r\n  DefaultButton,\r\n  MessageBar,\r\n  MessageBarType,\r\n} from '@fluentui/react';\r\nimport { colours } from '../../app/styles/colours';\r\nimport { FormItem, UserData, NormalizedMatter } from '../../app/functionality/types';\r\nimport { mergeStyles } from '@fluentui/react';\r\nimport loaderIcon from '../../assets/grey helix mark.png';\r\nimport BespokeForm from '../../CustomForms/BespokeForms';\r\nimport {\r\n  sharedPrimaryButtonStyles,\r\n  sharedDefaultButtonStyles,\r\n// invisible change\r\n} from '../../app/styles/ButtonStyles';\r\nimport BespokePanel from '../../app/functionality/BespokePanel';\r\nimport { getProxyBaseUrl } from \"../../utils/getProxyBaseUrl\";\r\n\r\ninterface FormDetailsProps {\r\n  link: FormItem;\r\n  isDarkMode: boolean;\r\n  onClose: () => void;\r\n  isOpen: boolean;\r\n  isFinancial?: boolean;\r\n  userData: UserData[] | null;\r\n  matters: NormalizedMatter[]; // NEW: Added matters prop to receive the matter data\r\n  offsetTop?: number; // Offset to avoid overlapping navigator\r\n}\r\n\r\nconst detailsContainerStyle = (isDarkMode: boolean) =>\r\n  mergeStyles({\r\n    padding: '20px',\r\n    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n    fontFamily: 'Raleway, sans-serif',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: '10px',\r\n  });\r\n\r\nconst buttonsContainerStyle = (isDarkMode: boolean) =>\r\n  mergeStyles({\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  });\r\n\r\nconst leftButtonsStyle = () =>\r\n  mergeStyles({\r\n    display: 'flex',\r\n    gap: '10px',\r\n  });\r\n\r\nconst loaderStyle = {\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  height: '100%',\r\n};\r\n\r\nconst FormDetails: React.FC<FormDetailsProps> = ({\r\n  link,\r\n  isDarkMode,\r\n  onClose,\r\n  isOpen,\r\n  userData,\r\n  matters,\r\n  offsetTop = 96,\r\n}) => {\r\n  const [copySuccess, setCopySuccess] = useState<string | null>(null);\r\n  const [isCognitoLoaded, setIsCognitoLoaded] = useState<boolean>(false);\r\n  const formContainerRef = useRef<HTMLDivElement>(null);\r\n\r\n  const [isSubmitted, setIsSubmitted] = useState<boolean>(false);\r\n  const [submissionSuccess, setSubmissionSuccess] = useState<string | null>(null);\r\n  const [formKey, setFormKey] = useState<number>(() => Date.now());\r\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\r\n\r\n  const loadCognitoScript = useCallback((): Promise<void> => {\r\n    return new Promise<void>((resolve, reject) => {\r\n      if ((window as any).Cognito) {\r\n        resolve();\r\n        return;\r\n      }\r\n      const existingScript = document.getElementById('cognito-seamless-script');\r\n      if (existingScript) {\r\n        existingScript.addEventListener('load', () => {\r\n          if ((window as any).Cognito) {\r\n            resolve();\r\n          } else {\r\n            reject(new Error('Cognito script loaded but Cognito is not available'));\r\n          }\r\n        });\r\n        existingScript.addEventListener('error', () =>\r\n          reject(new Error('Failed to load Cognito script'))\r\n        );\r\n      } else {\r\n        const script = document.createElement('script');\r\n        script.id = 'cognito-seamless-script';\r\n        script.src = 'https://www.cognitoforms.com/f/seamless.js';\r\n        script.async = true;\r\n        script.onload = () => {\r\n          if ((window as any).Cognito) {\r\n            resolve();\r\n          } else {\r\n            reject(new Error('Cognito script loaded but Cognito is not available'));\r\n          }\r\n        };\r\n        script.onerror = () => reject(new Error('Failed to load Cognito script'));\r\n        document.body.appendChild(script);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      loadCognitoScript()\r\n        .then(() => {\r\n          setIsCognitoLoaded(true);\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    }\r\n  }, [loadCognitoScript, isOpen]);\r\n\r\n  useEffect(() => {\r\n    if (isCognitoLoaded && link.embedScript && formContainerRef.current) {\r\n      formContainerRef.current.innerHTML = '';\r\n      const formScript = document.createElement('script');\r\n      formScript.src = 'https://www.cognitoforms.com/f/seamless.js';\r\n      formScript.async = true;\r\n      formScript.setAttribute('data-key', link.embedScript.key);\r\n      formScript.setAttribute('data-form', link.embedScript.formId);\r\n      formContainerRef.current.appendChild(formScript);\r\n    }\r\n  }, [isCognitoLoaded, link.embedScript]);\r\n\r\n  const copyToClipboard = useCallback(() => {\r\n    if (!link.url) return;\r\n    navigator.clipboard\r\n      .writeText(link.url)\r\n      .then(() => {\r\n        setCopySuccess(`Copied '${link.title}' URL to clipboard!`);\r\n        setTimeout(() => setCopySuccess(null), 3000);\r\n      })\r\n      .catch((err) => {\r\n        console.error('Failed to copy: ', err);\r\n      });\r\n  }, [link.url, link.title]);\r\n\r\n  const goToLink = useCallback(() => {\r\n    window.open(link.url, '_blank', 'noopener,noreferrer');\r\n  }, [link.url]);\r\n\r\n  const handleFinancialSubmit = useCallback(\r\n    async (values: any) => {\r\n      if (isSubmitting) return; // Prevent multiple submissions\r\n\r\n      setIsSubmitting(true); // Disable the button\r\n\r\n      const payload = {\r\n        formType: link.title,\r\n        data: values,\r\n        initials: userData?.[0]?.Initials || 'N/A',\r\n      };\r\n      const endpointUrl = `${getProxyBaseUrl()}/${process.env.REACT_APP_POST_FINANCIAL_TASK_PATH}?code=${process.env.REACT_APP_POST_FINANCIAL_TASK_CODE}`;\r\n\r\n      try {\r\n        const response = await fetch(endpointUrl, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(payload),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const errText = await response.text();\r\n          console.error('Error posting financial task:', errText);\r\n          setSubmissionSuccess(null);\r\n        } else {\r\n          const result = await response.json();\r\n          console.log('Financial task created successfully:', result);\r\n          setIsSubmitted(true);\r\n          setSubmissionSuccess('Financial form submitted successfully!');\r\n\r\n          setTimeout(() => {\r\n            setIsSubmitted(false);\r\n            setSubmissionSuccess(null);\r\n            setFormKey(Date.now());\r\n          }, 3000);\r\n        }\r\n\r\n        if (link.title === 'Payment Requests') {\r\n          try {\r\n            await fetch(\r\n              'https://prod-16.uksouth.logic.azure.com:443/workflows/625f5ed1d19b42999e113bd44c4799e5/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=OQhUuEJuXMgy2UCbOAuwM-3OBKb0xLIKgbp1GcnH_Bg',\r\n              {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(values),\r\n              }\r\n            );\r\n          } catch (err) {\r\n            console.error('Error posting payment request to external endpoint:', err);\r\n          }\r\n        }\r\n      } catch (error: any) {\r\n        console.error('Error in financial form submission:', error);\r\n        setSubmissionSuccess(null);\r\n      } finally {\r\n        setIsSubmitting(false); // Re-enable the button after response\r\n      }\r\n    },\r\n    [link.title, userData, isSubmitting]\r\n  );\r\n\r\n  return (\r\n    <BespokePanel\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      title={link.title}\r\n      width=\"60%\"\r\n      offsetTop={offsetTop}\r\n    >\r\n  <div style={{ display: 'flex', flexDirection: 'column', minHeight: 0 }}>\r\n        {submissionSuccess && (\r\n          <MessageBar\r\n            messageBarType={MessageBarType.success}\r\n            isMultiline={false}\r\n            onDismiss={() => setSubmissionSuccess(null)}\r\n            dismissButtonAriaLabel=\"Close\"\r\n            styles={{\r\n              root: {\r\n                marginBottom: '10px',\r\n                borderRadius: '4px',\r\n              },\r\n            }}\r\n          >\r\n            {submissionSuccess}\r\n          </MessageBar>\r\n        )}\r\n\r\n  <div style={{ flexGrow: 1, padding: '20px', minHeight: 0 }}>\r\n          {link.embedScript ? (\r\n            <div ref={formContainerRef} style={{ flexGrow: 1, minHeight: 0 }}>\r\n              {!isCognitoLoaded && (\r\n                <div style={loaderStyle}>\r\n                  <img\r\n                    src={loaderIcon}\r\n                    alt=\"Loading...\"\r\n                    style={{ width: '100px', height: 'auto' }}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          ) : link.fields ? (\r\n            <div style={{ flexGrow: 1 }}>\r\n              <BespokeForm\r\n                key={formKey}\r\n                fields={link.fields.map((field) => ({ ...field, name: field.label }))}\r\n                onSubmit={handleFinancialSubmit}\r\n                onCancel={() => console.log('Form cancelled')}\r\n                isSubmitting={isSubmitting}\r\n                matters={matters} // Pass matters down so the form can render a Matter Reference dropdown\r\n              />\r\n            </div>\r\n          ) : link.component ? (\r\n            React.createElement(link.component, {\r\n              users: userData || [],\r\n              matters,\r\n              onBack: onClose,\r\n            })\r\n          ) : (\r\n            <div>\r\n              <Text>No form available for this item.</Text>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n  <div className={detailsContainerStyle(isDarkMode)} style={{ flexShrink: 0 }}>\r\n          <Stack tokens={{ childrenGap: 6 }}>\r\n            <Text>\r\n              <Link\r\n                href=\"https://helix-law.co.uk/\"\r\n                target=\"_blank\"\r\n                styles={{\r\n                  root: {\r\n                    color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n                    fontSize: '12px',\r\n                    fontFamily: 'Raleway, sans-serif',\r\n                    textDecoration: 'none',\r\n                  },\r\n                }}\r\n                aria-label=\"Helix Law Website\"\r\n              >\r\n                https://helix-law.co.uk/\r\n              </Link>{' '}\r\n              |{' '}\r\n              <Text\r\n                variant=\"small\"\r\n                styles={{\r\n                  root: {\r\n                    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                    display: 'inline',\r\n                  },\r\n                }}\r\n              >\r\n                01273 761990\r\n              </Text>\r\n            </Text>\r\n            <Text\r\n              styles={{\r\n                root: {\r\n                  fontSize: '12px',\r\n                  fontFamily: 'Raleway, sans-serif',\r\n                  color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                },\r\n              }}\r\n            >\r\n              Second Floor, Britannia House, 21 Station Street, Brighton, BN1 4DE\r\n            </Text>\r\n          </Stack>\r\n          <div className={buttonsContainerStyle(isDarkMode)}>\r\n            <div className={leftButtonsStyle()}>\r\n              {link.url && (\r\n                <>\r\n                  <PrimaryButton\r\n                    text=\"Copy\"\r\n                    onClick={copyToClipboard}\r\n                    styles={sharedPrimaryButtonStyles}\r\n                    ariaLabel=\"Copy URL to clipboard\"\r\n                  />\r\n                  <PrimaryButton\r\n                    text=\"Go To\"\r\n                    onClick={goToLink}\r\n                    styles={sharedPrimaryButtonStyles}\r\n                    ariaLabel=\"Go to URL\"\r\n                  />\r\n                </>\r\n              )}\r\n            </div>\r\n            <DefaultButton\r\n              text=\"Close\"\r\n              onClick={onClose}\r\n              styles={sharedDefaultButtonStyles}\r\n              ariaLabel=\"Close Details\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {copySuccess && (\r\n        <MessageBar\r\n          messageBarType={MessageBarType.success}\r\n          isMultiline={false}\r\n          onDismiss={() => setCopySuccess(null)}\r\n          dismissButtonAriaLabel=\"Close\"\r\n          styles={{\r\n            root: {\r\n              position: 'fixed',\r\n              bottom: 20,\r\n              right: 20,\r\n              maxWidth: '300px',\r\n              zIndex: 1000,\r\n              borderRadius: '4px',\r\n            },\r\n          }}\r\n        >\r\n          {copySuccess}\r\n        </MessageBar>\r\n      )}\r\n    </BespokePanel>\r\n  );\r\n};\r\n\r\nexport default FormDetails;\r\n","// src/app/functionality/BespokePanel.tsx\r\n// Clean, smooth panel implementation\r\n\r\nimport React, { ReactNode, useEffect, useRef, useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { IconButton, Text } from '@fluentui/react';\r\nimport { mergeStyles } from '@fluentui/react';\r\nimport { colours } from '../styles/colours';\r\n\r\ninterface BespokePanelProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  title: string;\r\n  description?: string;\r\n  children: ReactNode;\r\n  width?: string;\r\n  offsetTop?: number;\r\n  isDarkMode?: boolean;\r\n  variant?: 'side' | 'modal';\r\n  icon?: React.ComponentType<any>;\r\n}\r\n\r\n// Simple, clean overlay (avoid 100vw/100vh to prevent scrollbar width shifts)\r\nconst getOverlayStyle = (offsetTop: number, isClosing: boolean, variant: 'side' | 'modal') =>\r\n  mergeStyles({\r\n    position: 'fixed',\r\n    top: variant === 'side' ? offsetTop : 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    background: 'rgba(0, 0, 0, 0.4)',\r\n    display: 'flex',\r\n    justifyContent: variant === 'side' ? 'flex-end' : 'center',\r\n    alignItems: variant === 'side' ? 'stretch' : 'center',\r\n    padding: variant === 'modal' ? '20px' : 0,\r\n    zIndex: 2000,\r\n    opacity: isClosing ? 0 : 1,\r\n    transition: 'opacity 0.2s ease',\r\n    margin: 0,\r\n    marginTop: '0 !important',\r\n    // Only allow overlay to scroll in modal mode; for side panels, let panel content handle scrolling\r\n    overflowY: variant === 'modal' ? 'auto' : 'hidden',\r\n  });\r\n\r\n// Clean panel styling\r\nconst getPanelStyle = (width: string, isClosing: boolean, isDarkMode: boolean, variant: 'side' | 'modal') =>\r\n  mergeStyles({\r\n    background: isDarkMode ? colours.dark.background : colours.light.background,\r\n  width: variant === 'side' ? (width || '480px') : (width || 'min(95vw, 1400px)'),\r\n    maxWidth: variant === 'side' ? '90vw' : '95vw',\r\n    height: variant === 'side' ? '100%' : 'auto',\r\n    minHeight: 0,\r\n    maxHeight: variant === 'side' ? 'none' : 'calc(100vh - 40px)',\r\n    boxShadow: isDarkMode\r\n      ? (variant === 'side' ? '-4px 0 16px rgba(0, 0, 0, 0.3)' : '0 10px 30px rgba(0,0,0,0.35)')\r\n      : (variant === 'side' ? '-4px 0 16px rgba(0, 0, 0, 0.15)' : '0 10px 30px rgba(0,0,0,0.15)'),\r\n    borderRadius: variant === 'side' ? 0 : 12,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    transform: variant === 'side'\r\n      ? (isClosing ? 'translateX(100%)' : 'translateX(0)')\r\n      : (isClosing ? 'scale(0.98) translateY(-6px)' : 'scale(1) translateY(0)'),\r\n    transition: variant === 'side' ? 'transform 0.25s ease-out' : 'transform 0.18s ease-out',\r\n    overflow: 'hidden',\r\n    margin: variant === 'modal' ? 'auto' : undefined,\r\n  });\r\n\r\n// Simple header\r\nconst getHeaderStyle = (isDarkMode: boolean) =>\r\n  mergeStyles({\r\n    padding: '16px 20px',\r\n    background: isDarkMode ? colours.dark.cardBackground : colours.light.cardBackground,\r\n    borderBottom: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    flexShrink: 0,\r\n  });\r\n\r\n// Clean content area\r\nconst getContentStyle = () =>\r\n  mergeStyles({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    padding: '16px',\r\n    overflowY: 'auto',\r\n    // Critical for nested flex layouts: allow this container to shrink so inner scroll works\r\n    minHeight: 0,\r\n    flexGrow: 1,\r\n  });\r\n\r\nconst BespokePanel: React.FC<BespokePanelProps> = ({ \r\n  isOpen, \r\n  onClose, \r\n  title, \r\n  description,\r\n  children, \r\n  width, \r\n  offsetTop = 0,\r\n  isDarkMode = false,\r\n  variant = 'side',\r\n  icon: IconComponent\r\n}) => {\r\n  const [isClosing, setIsClosing] = useState<boolean>(false);\r\n  const [isVisible, setIsVisible] = useState<boolean>(false);\r\n  const [portalContainer, setPortalContainer] = useState<HTMLElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      // Simple scroll prevention without layout shift\r\n      document.body.style.overflow = 'hidden';\r\n      // Stabilize layout when scrollbar disappears\r\n      const htmlEl = document.documentElement;\r\n      const prevGutter = htmlEl.style.scrollbarGutter;\r\n      htmlEl.style.scrollbarGutter = 'stable';\r\n      setIsVisible(true);\r\n    } else if (isVisible && !isOpen) {\r\n      handleClose();\r\n    }\r\n  }, [isOpen, isVisible]);\r\n\r\n  // Ensure we render at document.body level to avoid parent overflow/position contexts\r\n  useEffect(() => {\r\n    // Guard for non-browser environments\r\n    if (typeof document === 'undefined') return;\r\n    const container = document.createElement('div');\r\n    container.setAttribute('data-bespoke-panel-portal', '');\r\n    // Keep neutral styles; overlay inside handles positioning\r\n    document.body.appendChild(container);\r\n    setPortalContainer(container);\r\n    return () => {\r\n      try {\r\n        document.body.removeChild(container);\r\n      } catch (_) {\r\n        // ignore if already removed\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    if (isClosing) return;\r\n    \r\n    setIsClosing(true);\r\n    setTimeout(() => {\r\n      // Simply restore scroll\r\n      document.body.style.overflow = '';\r\n      const htmlEl = document.documentElement;\r\n      htmlEl.style.scrollbarGutter = '';\r\n      \r\n      setIsClosing(false);\r\n      setIsVisible(false);\r\n      onClose();\r\n    }, 250);\r\n  };\r\n\r\n  // Handle escape key\r\n  useEffect(() => {\r\n    const handleEsc = (event: KeyboardEvent) => {\r\n      if (event.key === 'Escape' && isVisible && !isClosing) {\r\n        handleClose();\r\n      }\r\n    };\r\n    \r\n    if (isVisible) {\r\n      document.addEventListener('keydown', handleEsc);\r\n    }\r\n    \r\n    return () => {\r\n      document.removeEventListener('keydown', handleEsc);\r\n    };\r\n  }, [isVisible, isClosing]);\r\n\r\n  if (!isVisible) return null;\r\n\r\n  const overlayNode = (\r\n    <div\r\n      className={getOverlayStyle(offsetTop, isClosing, variant)}\r\n      onClick={handleClose}\r\n      role=\"dialog\"\r\n      aria-modal=\"true\"\r\n    >\r\n      <div\r\n        className={getPanelStyle(width || '480px', isClosing, isDarkMode, variant)}\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        <div className={getHeaderStyle(isDarkMode)}>\r\n          <div style={{ display: 'flex', alignItems: 'flex-start', gap: '12px' }}>\r\n            {IconComponent && typeof IconComponent === 'function' && (\r\n              <div\r\n                style={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  width: 20,\r\n                  height: 20,\r\n                  marginTop: 2,\r\n                }}\r\n              >\r\n                {React.createElement(IconComponent, {\r\n                  style: {\r\n                    fontSize: 20,\r\n                    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                  },\r\n                })}\r\n              </div>\r\n            )}\r\n            <div style={{ flex: 1 }}>\r\n              <Text\r\n                variant=\"large\"\r\n                styles={{\r\n                  root: {\r\n                    fontWeight: 600,\r\n                    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                    marginBottom: description ? '4px' : '0',\r\n                  },\r\n                }}\r\n              >\r\n                {title}\r\n              </Text>\r\n              {description && (\r\n                <Text\r\n                  variant=\"medium\"\r\n                  styles={{\r\n                    root: {\r\n                      fontWeight: 400,\r\n                      color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n                      fontSize: '12px',\r\n                      lineHeight: '1.4',\r\n                      display: 'block',\r\n                    },\r\n                  }}\r\n                >\r\n                  {description}\r\n                </Text>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <IconButton\r\n            iconProps={{ iconName: 'Cancel' }}\r\n            ariaLabel=\"Close Panel\"\r\n            onClick={handleClose}\r\n            styles={{\r\n              root: {\r\n                color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                ':hover': {\r\n                  backgroundColor: isDarkMode\r\n                    ? 'rgba(255, 255, 255, 0.1)'\r\n                    : 'rgba(0, 0, 0, 0.05)',\r\n                },\r\n              },\r\n            }}\r\n          />\r\n        </div>\r\n        <div className={getContentStyle()}>{children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // Use portal when available; fall back to inline render to avoid blank state race conditions\r\n  return portalContainer ? createPortal(overlayNode, portalContainer) : overlayNode;\r\n};\r\n\r\nexport default BespokePanel;\r\n","import React, { useCallback } from 'react';\r\nimport { useTheme } from '../app/functionality/ThemeContext';\r\nimport { colours } from '../app/styles/colours';\r\n\r\nexport interface ToggleSwitchProps {\r\n  checked: boolean;\r\n  onChange: (checked: boolean) => void;\r\n  id?: string;\r\n  disabled?: boolean;\r\n  onText?: string; // optional inline text when ON\r\n  offText?: string; // optional inline text when OFF\r\n  size?: 'sm' | 'md';\r\n  ariaLabel?: string; // a11y label if no visible text\r\n  title?: string;\r\n  style?: React.CSSProperties;\r\n}\r\n\r\n/**\r\n * Accessible, theme‑aware toggle switch (iOS style) for boolean state.\r\n * Renders a button with role=\"switch\" and keyboard support (Space / Enter).\r\n */\r\nconst ToggleSwitch: React.FC<ToggleSwitchProps> = ({\r\n  checked,\r\n  onChange,\r\n  id,\r\n  disabled = false,\r\n  onText,\r\n  offText,\r\n  size = 'md',\r\n  ariaLabel,\r\n  title,\r\n  style,\r\n}) => {\r\n  const { isDarkMode } = useTheme();\r\n\r\n  const trackHeight = size === 'sm' ? 18 : 22;\r\n  const trackWidth = size === 'sm' ? 36 : 44;\r\n  const knobSize = size === 'sm' ? 14 : 18;\r\n  const padding = (trackHeight - knobSize) / 2;\r\n\r\n  const handleToggle = useCallback(() => {\r\n    if (disabled) return;\r\n    onChange(!checked);\r\n  }, [disabled, checked, onChange]);\r\n\r\n  const handleKey = useCallback((e: React.KeyboardEvent<HTMLButtonElement>) => {\r\n    if (e.key === ' ' || e.key === 'Enter') {\r\n      e.preventDefault();\r\n      handleToggle();\r\n    }\r\n  }, [handleToggle]);\r\n\r\n  // Force consistent blue highlight (ignore CTA red)\r\n  const onColour = colours.highlight;\r\n  const offColour = isDarkMode ? 'rgba(255,255,255,0.22)' : 'rgba(0,0,0,0.22)';\r\n  const focusRing = isDarkMode ? '0 0 0 3px rgba(255,255,255,0.25)' : '0 0 0 3px rgba(0,0,0,0.15)';\r\n\r\n  return (\r\n    <button\r\n      id={id}\r\n      type=\"button\"\r\n      role=\"switch\"\r\n      aria-checked={checked}\r\n      aria-label={ariaLabel}\r\n      disabled={disabled}\r\n      title={title}\r\n      onClick={handleToggle}\r\n      onKeyDown={handleKey}\r\n      style={{\r\n        position: 'relative',\r\n        display: 'inline-flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width: trackWidth + (onText || offText ? (size === 'sm' ? 42 : 52) : 0),\r\n        minWidth: trackWidth,\r\n        height: trackHeight,\r\n        padding: 0,\r\n        margin: 0,\r\n        border: 'none',\r\n        background: 'transparent',\r\n        cursor: disabled ? 'not-allowed' : 'pointer',\r\n        fontFamily: 'Raleway, sans-serif',\r\n        fontSize: size === 'sm' ? 11 : 12,\r\n        color: isDarkMode ? colours.dark.text : colours.light.text,\r\n        gap: 6,\r\n        ...style,\r\n      }}\r\n    >\r\n      {/* Track */}\r\n      <span\r\n        style={{\r\n          position: 'relative',\r\n          width: trackWidth,\r\n            height: trackHeight,\r\n          background: checked ? onColour : offColour,\r\n          borderRadius: trackHeight,\r\n          transition: 'background 180ms ease',\r\n          boxShadow: isDarkMode ? 'inset 0 0 0 1px rgba(255,255,255,0.08)' : 'inset 0 0 0 1px rgba(0,0,0,0.08)',\r\n        }}\r\n      >\r\n        {/* Knob */}\r\n        <span\r\n          style={{\r\n            position: 'absolute',\r\n            top: padding,\r\n            left: padding,\r\n            width: knobSize,\r\n            height: knobSize,\r\n            background: '#fff',\r\n            borderRadius: '50%',\r\n            transform: `translateX(${checked ? trackWidth - knobSize - padding * 2 : 0}px)`,\r\n            transition: 'transform 180ms cubic-bezier(.4,.2,.2,1), background 180ms',\r\n            boxShadow: '0 1px 2px rgba(0,0,0,0.25), 0 0 0 1px rgba(0,0,0,0.05)',\r\n          }}\r\n        />\r\n      </span>\r\n      {(onText || offText) && (\r\n        <span\r\n          style={{\r\n            userSelect: 'none',\r\n            fontWeight: 500,\r\n            minWidth: size === 'sm' ? 32 : 40,\r\n            textAlign: 'left',\r\n            opacity: disabled ? 0.5 : 0.85,\r\n            transition: 'color 180ms, opacity 180ms',\r\n          }}\r\n        >\r\n          {checked ? onText : offText}\r\n        </span>\r\n      )}\r\n      {/* Focus ring overlay */}\r\n      <span\r\n        className=\"toggle-focus-ring\"\r\n        style={{\r\n          position: 'absolute',\r\n          inset: 0,\r\n          borderRadius: trackHeight,\r\n          pointerEvents: 'none'\r\n        }}\r\n      />\r\n      <style>{`\r\n        button[id='${id || ''}']:focus-visible .toggle-focus-ring { box-shadow: ${focusRing}; }\r\n        button[id='${id || ''}']:active span > span { filter: brightness(0.95); }\r\n      `}</style>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ToggleSwitch;\r\n"],"names":["dashboardTokens","childrenGap","cardTokens","cardStyles","root","padding","borderRadius","boxShadow","backgroundColor","colours","light","sectionBackground","orange","green","yellow","greyText","getStorageQuota","used","total","key","localStorage","hasOwnProperty","length","navigator","storage","estimate","then","quota","error","console","warn","available","percentUsed","safeSetItem","value","setItem","DOMException","name","cleanupLocalStorage","process","REACT_APP_DEBUG_VERBOSE","log","itemsToCheck","push","size","sort","a","b","map","item","sizeKB","Math","round","keysToRemove","includes","forEach","removeItem","toFixed","retryError","safeGetItem","getItem","_ref","metrics","isDarkMode","headerActions","title","mounted","setMounted","React","enableAnimationThisMount","sessionStorage","t","setTimeout","clearTimeout","AnimatedValueWithEnabled","_ref2","formatter","enabled","style","animated","target","durationMs","arguments","undefined","setValue","Number","isFinite","start","performance","now","raf","tick","min","eased","pow","requestAnimationFrame","cancelAnimationFrame","useCountUp","toRender","_jsx","children","staggerStyle","index","opacity","transform","transition","transitionDelay","getTrendDirection","current","previous","getTrendColor","trend","cta","dark","subText","getIcon","metric","toLowerCase","FiUsers","FiCheckCircle","FiTarget","FiTrendingUp","getCurrentValue","isPercentage","percentage","count","getPrevValue","prevPercentage","prevCount","formatTrendValue","diff","sign","margin","position","background","width","boxSizing","_jsxs","cardBackground","border","marginBottom","display","alignItems","justifyContent","borderBottom","fontSize","fontWeight","color","text","letterSpacing","gap","gridTemplateColumns","slice","Icon","currentValue","prevValue","trendColor","cursor","onMouseEnter","e","currentTarget","onMouseLeave","height","highlight","lineHeight","fontVariantNumeric","n","toLocaleString","marginTop","overflow","iconColor","enquiryMetrics","showEnquiryMetrics","setShowEnquiryMetrics","formatCurrency","amount","Intl","NumberFormat","currency","minimumFractionDigits","maximumFractionDigits","format","formatHours","hours","calculateProgress","showDial","dialTarget","isTimeMoney","direction","FaMoneyBillWave","FiClock","animateOnce","previousTargetRef","hasAnimatedRef","rafRef","initialTargetRef","initial","startValue","delta","startTime","progress","next","_ref3","className","getDisplaySpec","isMoneyOnly","money","toString","isTimeMetric","currentMetrics","frozenStaggerStyles","Map","has","get","set","prevMoney","prevHours","onClick","top","left","EnquiryMetricsV2","textAlign","abs","useHomeMetricsStream","opts","autoStart","bypassCache","onMetric","onError","onComplete","sourceRef","useRef","isStreaming","setIsStreaming","useState","onMetricRef","onErrorRef","onCompleteRef","lastErrorAtRef","useEffect","useCallback","metricParam","join","params","URLSearchParams","url","es","EventSource","onmessage","evt","parsed","JSON","parse","data","_onMetricRef$current","type","call","cached","_onErrorRef$current","_onCompleteRef$curren","stop","onerror","Date","_onErrorRef$current2","Array","isArray","close","detailsContainerStyle","mergeStyles","fontFamily","flexDirection","actionButtonStyle","isSelected","buttonBackground","buttonText","hoverBackground","cardHover","formContainerStyle","grey","resource","onClose","useTheme","copySuccess","setCopySuccess","selectedAction","setSelectedAction","actionInputs","setActionInputs","actions","replace","copyToClipboard","clipboard","writeText","catch","err","goToLink","window","open","BespokePanel","isOpen","flexGrow","overflowY","Stack","tokens","action","PrimaryButton","label","styles","ariaLabel","CSSTransition","in","timeout","classNames","unmountOnExit","BespokeForm","fields","requiredFields","field","charAt","toUpperCase","placeholder","required","onSubmit","values","inputs","alert","stringify","handleActionSubmit","onCancel","matters","Text","variant","Link","href","rel","tags","horizontal","wrap","tag","TooltipHost","content","iconName","description","sharedPrimaryButtonStyles","iconProps","DefaultButton","sharedDefaultButtonStyles","MessageBar","messageBarType","MessageBarType","success","isMultiline","onDismiss","dismissButtonAriaLabel","bottom","right","maxWidth","zIndex","formatCommitMessage","message","maxLength","cleaned","trim","substring","getRelativeTime","timestamp","minutes","floor","days","weeks","months","toLocaleDateString","maxItems","showHeader","compact","commits","setCommits","loading","setLoading","setError","lastUpdated","setLastUpdated","loadGitHistory","async","limit","response","fetch","ok","Error","status","statusText","json","formattedCommits","commit","date","getTime","filesChanged","insertions","deletions","toISOString","fetchGitHistory","cardStyle","headerStyle","commitItemStyle","commitHashStyle","marginRight","statsStyle","refreshButtonStyle","blue","verticalAlign","flex","toLocaleTimeString","from","_","Shimmer","shimmerElements","ShimmerElementType","circle","line","Separator","horizontalAlign","renderCommit","changeColor","getChangeColor","ratio","totalChanges","Persona","PersonaSize","size32","author","initialsTextColor","hidePersonaDetails","whiteSpace","hash","_Fragment","marginLeft","getPriorityColor","priority","dateString","diffMs","maxItemsPerColumn","issuesData","setIssuesData","expandedColumns","setExpandedColumns","Set","showNewIssuePanel","setShowNewIssuePanel","newIssueForm","setNewIssueForm","reporter","loadIssues","localIssuesData","fetchTeamIssues","metadata","toggleColumnExpansion","columnKey","prev","newSet","delete","add","handleCancelNewIssue","groupedIssues","issues","reduce","groups","issue","new","blocked","resolved","boardStyle","columnsContainerStyle","columnStyle","minHeight","columnHeaderStyle","paddingBottom","issueCardStyle","tagStyle","columns","icon","renderIssueCard","createdAt","id","alignSelf","totalIssues","IconButton","column","isExpanded","displayIssues","hasMore","fontStyle","textDecoration","Panel","PanelType","medium","headerText","closeButtonAriaLabel","header","TextField","onChange","newValue","fieldGroup","multiline","rows","Dropdown","options","selectedKey","option","dropdown","handleNewIssueSubmit","newIssue","String","padStart","split","filter","updatedIssues","updatedData","statusCounts","priorityCounts","disabled","cardContainer","borderLeft","selectors","maxHeight","detailsStyle","separatorStyle","borderTop","backdropIconStyle","pointerEvents","rowStyle","_transaction$status","transaction","displayStatus","matter_ref","dateStr","transaction_date","fe","from_client","money_sender","transaction_id","selectionStyles","rootHovered","rootPressed","customAmountStyles","prefix","isSubmitting","userInitials","matter","find","m","DisplayNumber","matterId","UniqueID","clioLink","selectedOption","setSelectedOption","customAmount","setCustomAmount","isLoading","setIsLoading","submitStatus","setSubmitStatus","errorMessage","setErrorMessage","localStatus","setLocalStatus","handleOptionSelect","getButtonStyles","isConfirmDisabled","parseFloat","statusColor","textTransform","max","submissionValues","transferRequested","transferCustom","user_initials","getProxyBaseUrl","REACT_APP_UPDATE_TRANSACTIONS_PATH","REACT_APP_UPDATE_TRANSACTIONS_CODE","method","headers","body","errorText","result","debugLog","updatedTransaction","debugWarn","Spinner","labelPosition","containerStyle","mattersContainerStyle","matterLinkStyle","billsContainerBaseStyle","getBillContainerStyle","verticalEquationStyle","horizontalSeparatorStyle","dateTextStyle","overdueStyle","paymentStyle","_balanceRecord$contac","balanceRecord","computeDueStatus","isHovered","setIsHovered","relevantMatters","associated_matter_ids","bills","outstanding_bills","billsContainerStyle","contact","total_outstanding_balance","mat","bill","paid","balanceAmount","due","dueStatus","number","paid_at","calloutProps","gapSpace","issued_at","due_at","transfersGridStyle","balancesGridStyle","noActionsClass","CollapsibleSection","defaultCollapsed","labels","collapsed","setCollapsed","labelArray","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","toggleCollapse","darkBlue","componentTokens","summaryPane","base","flexWrap","idx","tagBackground","transactions","onTransactionClick","updateTransaction","outstandingBalances","showOnlyMine","setShowOnlyMine","isTransactionPopupOpen","setIsTransactionPopupOpen","selectedTransaction","setSelectedTransaction","effectiveInitials","filteredTransactions","useMemo","relevantTransactions","tx","today","dueDate","diffTime","diffDays","outerLabels","Toggle","checked","onText","offText","TransactionCard","handleTransactionClickInternal","TransactionApprovalPopup","handleTransactionSubmit","updatedTx","bal","OutstandingBalanceCard","slideUpFade","keyframes","baseClass","isDark","animationDelay","animation","subtitleClass","contentContainerClass","subtitle","styleOverrides","hasSubtitle","flexShrink","CalendarDayIcon","props","safeProps","iconMap","Accept","outline","FaRegCheckSquare","filled","FaCheckSquare","Checklist","Comment","MdSmartphone","FaMobileAlt","Calendar","CalendarCheck","FaRegUser","FaUser","Room","MdOutlineEventSeat","MdEventSeat","Building","FaRegBuilding","FaBuilding","Plus","AiOutlinePlus","AiFillPlusSquare","Phone","Leave","FaUmbrellaBeach","PalmTree","OpenFile","FaRegFolder","FaFolder","IdCheck","FaRegIdBadge","FaIdBadge","Assessment","MdOutlineAssessment","MdAssessment","KnowledgeArticle","MdOutlineArticle","MdArticle","CityNext","MdOutlineLocationCity","MdLocationCity","ConstructionCone","MdOutlineConstruction","MdConstruction","Presentation","MdOutlineSlideshow","MdSlideshow","selected","orientation","alwaysShowText","showPulsingDot","panelActive","hovered","setHovered","showLabel","setShowLabel","forceUpdate","setForceUpdate","OutlineIcon","FilledIcon","mapping","getIcons","cardClasses","Boolean","iconStyle","role","tabIndex","onKeyPress","AnimatedPulsingDot","show","animationDuration","quickLinksStyle","highlighted","seamless","backdropFilter","overflowX","contain","quickActions","handleActionClick","currentUserConfirmed","resetSelectionRef","userDisplayName","userIdentifier","onToggleTheme","setSelected","labelsExpanded","setLabelsExpanded","showGreeting","setShowGreeting","iconRailWidth","chipCount","containerRef","barRef","headerRef","hasTriggeredGreetingRef","greetingStorageKey","identifier","greetingLabel","trimmed","firstToken","greetingVisible","alreadySeen","evaluateLabelSpace","_barRef$current$clien","_barRef$current","_headerRef$current$ge","_headerRef$current","barWidth","clientWidth","headerWidth","getBoundingClientRect","nextExpanded","frameId","settleTimer","handleResize","addEventListener","observer","ResizeObserver","observe","removeEventListener","disconnect","getShortTitle","ref","c","minWidth","textShadow","paddingTop","msOverflowStyle","scrollbarWidth","borderColor","QuickActionsCard","onCardClick","confirmed","animationFillMode","paddingLeft","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","cx","cy","r","x1","y1","x2","y2","ToggleSwitch","chipIconMap","FaFolderOpen","Folder","FaCheck","ContactCard","Verify","FaUserCheck","Shield","FaShieldAlt","Send","FaPaperPlane","ReviewRequestMirrored","MdFactCheck","Edit","FaEdit","_accentColours$catego","category","chipRef","baseBg","hoverBg","textColor","borderCol","_chipRef$current2","checkSpace","_chipRef$current","parentElement","containerWidth","offsetWidth","accentColour","critical","red","standard","onKeyDown","preventDefault","button","immediateActionsContainerStyle","fadeInKeyframes","to","tickPopKeyframes","noActionsIconClass","noActionsTextClass","immediateActionsReady","immediateActionsList","visible","setVisible","autoHidden","setAutoHidden","computedVisible","handleScroll","scrollY","ACTION_BAR_HEIGHT","timer","ImmediateActionChip","SpinnerSize","small","balances","filtered","balance","_balance$contact","clientMatters","getClientMatters","StatusIcon","WEEK_FILTER_OPTIONS","DAY_FILTER_OPTIONS","STATUS_FILTER_OPTIONS","DAY_ORDER","DAY_INDEX_MAP","monday","tuesday","wednesday","thursday","friday","attendanceRecords","teamData","userData","annualLeaveRecords","futureLeaveRecords","onAttendanceUpdated","onOpenModal","onDayUpdate","attendanceRecordsCount","teamDataCount","sampleAttendanceRecord","sampleTeamMember","annualLeaveCount","futureLeaveCount","allAttendanceInitials","Initials","allTeamInitials","viewMode","setViewMode","selectedWeeks","setSelectedWeeks","selectedDays","setSelectedDays","selectedStatuses","setSelectedStatuses","getLeaveStatusForWeek","initials","weekOffset","startOfWeek","dayOfWeek","getDay","setDate","getDate","endOfWeek","leaveRecords","obj","keys","k","v","isNaN","leave","person","Person","leaveStatus","leaveStart","leaveEnd","overlaps","toDateString","weekStart","weekEnd","normalizedReason","reason","Reason","leave_reason","leaveReason","Type","leave_type","Category","token","test","getDailyAttendance","member","leaveStatusForWeek","isOnLeave","IsOnLeave","attendanceKey","attendanceDays","Attendance_Days","Status","First","memberStatus","memberKeys","Object","rec","normalized","normalizedLower","statusValue","day","dayStatus","startsWith","getDayColor","missedBlue","subtleGrey","processedTeamData","_userData$displayName","_userData$displayName2","_userData$mail","_teamData$","displayName","match","mail","attendanceRecord","memberInitials","foundMatch","leaveStatusCurrentWeek","leaveStatusNextWeek","isConfirmed","Confirmed_At","isUser","isOnLeaveCurrentWeek","isOnLeaveNextWeek","currentWeekLeaveStatus","nextWeekLeaveStatus","filterButtonStyle","isActive","segmentedControlStyle","viewToggleButtonStyle","filterBarStyle","viewClusterStyle","viewToggleRowStyle","filtersClusterStyle","combinedFilterStyle","rowGap","filterSectionBaseStyle","filterSectionAutoStyle","filterSectionGrowStyle","chipRowStyle","filterLabelStyle","getTodayAttendance","dayIndex","mondayBasedIndex","isWeekend","currentWeekAttendance","todayStatus","filteredData","weekSelections","matchesCurrent","matchesNext","matchesDay","some","matchesStatus","dayKey","nextWeekAttendance","validStatuses","toggleWeekSelection","week","toggleDaySelection","toggleStatusSelection","statusGroups","representativeStatus","weekPreference","dayPreference","attendance","getStatusForActiveFilters","statusLabels","office","wfh","away","_statusGroups$status","nextWorkday","todayIndex","tomorrow","tomorrowIndex","isNextWeek","getMonth","getNextWorkdayAttendance","nextWorkdayDifferent","localeCompare","textOverflow","dayName","isClickable","stopPropagation","statusCycle","currentIndex","indexOf","nextStatus","EnhancedAttendance","forwardRef","isLoadingAttendance","isLoadingAnnualLeave","attendanceError","annualLeaveError","isModalOpen","setIsModalOpen","selectedWeek","setSelectedWeek","localAttendance","setLocalAttendance","isSaving","setIsSaving","saveError","setSaveError","showConfirmation","setShowConfirmation","openModal","Monday","Tuesday","Wednesday","Thursday","Friday","closeModal","getWeekStart","getMondayOfCurrentWeek","useImperativeHandle","focusTable","setWeek","modalContentStyle","weekOptionStyle","borderRight","dayGridStyle","dayCardStyle","dayLabelStyle","WeeklyAttendanceView","toggleDay","primary","weekStartStr","attendancePattern","attendanceResponse","attendanceResult","transformedRecords","Attendance_ID","Entry_ID","First_Name","Level","Week_Start","Week_End","ISO_Week","ceil","getFullYear","IsConfirmed","refreshError","rootDisabled","getPanelContainerStyle","getWeekCardStyle","getQuickSelectButtonStyle","accent","src","helixLogo","alt","objectFit","PersonalAttendanceConfirm","_userData$","onSave","weekDays","formatDateLocal","currentWeekStart","nextWeekMonday","nextWeekStart","combinedLeaveRecords","initialState","state","dayMap","Mon","Tue","Wed","Thu","Fri","filteredRecords","dayStatuses","dayAbbr","saving","setSaving","saveSuccess","setSaveSuccess","statuses","getWeekDateRange","end","formatDate","month","renderWeek","_localAttendance$week","currentStatus","onLeave","weekStartDate","iso","start_date","end_date","statusConfig","bgColor","darkBg","getStatusConfig","_prev$weekStart","nextIndex","newState","acc","entries","proxyBaseUrl","getLiveLocalEnquiries","currentUserEmail","localEnquiries","require","yyyy","mm","todayStr","Touchpoint_Date","Date_Created","enq","Point_of_Contact","Tasking","lazy","TelephoneAttendance","AnnualLeaveForm","AnnualLeaveApprovals","AnnualLeaveBookings","BookSpaceForm","SnippetEditsApproval","quickActionOrder","helixWatermarkSvg","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","flattenObject","newKey","concat","transformContext","contextObj","createColumnsFunction","fieldName","isResizable","getISOWeek","setHours","week1","convertToISO","year","parseOpenDate","str","cachedAttendance","cachedAttendanceError","cachedPOID6Years","cachedAnnualLeave","cachedAnnualLeaveError","cachedFutureLeaveRecords","cachedWipClio","cachedWipClioError","cachedRecovered","cachedRecoveredError","cachedPrevRecovered","cachedPrevRecoveredError","cachedMetricsUserKey","cachedAllMatters","cachedAllMattersError","cachedOutstandingBalances","cachedTransactions","CognitoForm","_ref4","dataKey","dataForm","innerHTML","script","document","createElement","setAttribute","appendChild","_ref5","_userData$3","_userData$4","_userData$5","_userData$6","_userData$8","_userData$11","_userData$12","_userData$13","_userData$16","_userData$17","_userData$18","_userData$19","_userData$20","_currentUserRecord$we","_userData$22","_userData$23","_userData$24","_userData$25","_userData$26","_userData$27","_userData$0$Email","_userData$0$Email2","context","enquiries","providedMatters","instructionData","propInstructionData","onAllMattersFetched","onOutstandingBalancesFetched","onPOID6YearsFetched","onTransactionsFetched","onBoardroomBookingsFetched","onSoundproofBookingsFetched","isInMatterOpeningWorkflow","onImmediateActionsChange","toggleTheme","setContent","useNavigatorActions","useLocalData","isInTeams","attendanceTeam","setAttendanceTeam","transformedTeamData","_ref6","_member$First","_member$Initials","_member$EntraID","_ref7","_member$Nickname","Nickname","storedUserInitials","attendanceRef","recoveredFeesInitialized","enquiriesToday","setEnquiriesToday","enquiriesWeekToDate","setEnquiriesWeekToDate","enquiriesMonthToDate","setEnquiriesMonthToDate","todaysTasks","setTodaysTasks","tasksDueThisWeek","setTasksDueThisWeek","completedThisWeek","setCompletedThisWeek","recordedTime","setRecordedTime","prevEnquiriesToday","setPrevEnquiriesToday","prevEnquiriesWeekToDate","setPrevEnquiriesWeekToDate","prevEnquiriesMonthToDate","setPrevEnquiriesMonthToDate","prevTodaysTasks","setPrevTodaysTasks","prevTasksDueThisWeek","setPrevTasksDueThisWeek","prevCompletedThisWeek","setPrevCompletedThisWeek","prevRecordedTime","setPrevRecordedTime","isContextsExpanded","setIsContextsExpanded","formsFavorites","setFormsFavorites","resourcesFavorites","setResourcesFavorites","selectedForm","setSelectedForm","selectedResource","setSelectedResource","isBespokePanelOpen","setIsBespokePanelOpen","bespokePanelContent","setBespokePanelContent","bespokePanelTitle","setBespokePanelTitle","bespokePanelDescription","setBespokePanelDescription","bespokePanelIcon","setBespokePanelIcon","isContextPanelOpen","setIsContextPanelOpen","bankHolidays","setBankHolidays","currentUserName","setCurrentUserName","setCurrentUserEmail","setAttendanceRecords","setAttendanceError","setAnnualLeaveRecords","setAnnualLeaveError","setIsLoadingAttendance","setIsLoadingAnnualLeave","wipClioData","setWipClioData","wipClioError","setWipClioError","recoveredData","setRecoveredData","prevRecoveredData","setPrevRecoveredData","setTransactions","recoveredError","setRecoveredError","prevRecoveredError","setPrevRecoveredError","isLoadingWipClio","setIsLoadingWipClio","isLoadingRecovered","setIsLoadingRecovered","setFutureLeaveRecords","annualLeaveTotals","setAnnualLeaveTotals","isActionsLoading","setIsActionsLoading","allMatters","setAllMatters","allMattersError","setAllMattersError","isLoadingAllMatters","setIsLoadingAllMatters","resetQuickActionsSelectionRef","timeMetricsCollapsed","setTimeMetricsCollapsed","conversionMetricsCollapsed","setConversionMetricsCollapsed","poid6Years","setPoid6Years","isLoadingPOID6Years","setIsLoadingPOID6Years","poid6YearsError","setPoid6YearsError","showFocusOverlay","setShowFocusOverlay","hasActiveMatter","setHasActiveMatter","hasActivePitch","setHasActivePitch","annualLeaveAllData","setAnnualLeaveAllData","outstandingBalancesData","setOutstandingBalancesData","futureBookings","setFutureBookings","boardroomBookings","soundproofBookings","snippetEdits","setSnippetEdits","unclaimedEnquiries","localSnippetEdits","localV3Blocks","fetchEditsAndBlocks","checkActiveMatter","hasActiveMatterOpening","interval","setInterval","clearInterval","checkActivePitch","hasActivePitchBuilder","saved","enquiryId","localInstructionDataState","setLocalInstructionDataState","transformedData","localInstructionData","prospectId","deals","instructions","documents","riskAssessment","idVerification","Email","FullName","_userData$2","rawEmail","rawInitials","nextUserKey","_cachedPrevRecovered","_currentUserData$Emai","currentUserData","isLocalhost","location","hostname","isLuke","isLZ","userClioId","userEntraId","EntraID","alex","URL","origin","searchParams","resp","credentials","summary","recoveredFeesSummary","currentTotal","currentMonthTotal","lastTotal","previousMonthTotal","fetchRecoveredFeesSummary","normalizedMatters","_userData$7","userFullName","normalizeMatterData","reviewedInstructionIds","setReviewedInstructionIds","generateWeekKey","sunday","mondayStr","sundayStr","weekday","handleApprovalUpdate","updatedRequestId","newStatus","prevRecords","record","prevAllData","rawUserInitials","currentYear","holidaysThisYear","events","event","fetchBankHolidays","storedFormsFavorites","storedResourcesFavorites","handleStorageChange","startOfMonth","prevToday","prevWeekStart","prevWeekEnd","prevMonthStart","prevMonthEnd","normalizedEnquiries","_enq$id","ID","datetime","poc","Area_of_Work","aow","Type_of_Work","tow","Method_of_Contact","moc","first","Last_Name","last","email","Phone_Number","phone","Value","Initial_first_call_notes","notes","Call_Taker","rep","matchesUser","normalised","todayCount","enquiry","isToday","matches","weekToDateCount","enquiryDate","monthToDateCount","prevTodayCount","prevWeekCount","prevMonthCount","team","_user_details","currentMonday","nextMonday","currentKey","nextKey","localCopy","structuredClone","localAnnualLeave","totals","_ref8","_userData$0$EntraID","_userData$0","_userData$1","_userData$10","effectiveEntraId","entraId","clioId","hasCachedWip","_cachedPrevRecovered2","localWipClio","_userData$14","_userData$15","fullName","Last","currentCacheVersion","logStorageUsage","usedMB","totalMB","availableMB","hasCachedMatters","hasCachedError","REACT_APP_USE_LOCAL_DATA","_cachedAllMatters","mappedMatters","localMatters","fetchPOID6Years","fetchSpaceBookings","which","localTransactions","fetchTransactions","storedData","parsedData","localOutstandingBalances","matchingTeamMember","attendanceName","currentUserRecord","isThursdayAfterMidday","getHours","getNextWeekKey","transformedAttendanceRecords","_cachedAttendance","currentWeekEnd","nextWeekEnd","weekKey","_transformedTeamData$","rawStart","rawEnd","isoStart","isoEnd","_t$First","flat","handleAttendanceUpdated","updatedRecords","_cachedAttendance2","newRecords","isChanged","updated","findIndex","currentRecord","updatedWeek","existingPersonIndex","saveAttendance","_userData$21","_transformedTeamData$2","firstName","_rec$Attendance_ID","_rec$Entry_ID","_attendanceTeam$find2","_rec$ISO_Week","payload","res","mapped","REACT_APP_ATTENDANCE_FALLBACK_LOCAL","_attendanceTeam$find3","newRecord","relevantWeekKey","actionableSummaries","summaries","_instruction$PaymentR","_eid$EIDOverallResult","_idVerification$EIDOv","_instruction$EIDOvera","_risk$RiskAssessmentR","_risk$RiskAssessmentR2","_instruction$FirstNam","_instruction$LastName","_item$deals","_item$deals$","_instruction$Instruct","instruction","matterLinked","MatterId","paymentStatus","PaymentResult","InternalStatus","internalStatus","eid","electronicIDChecks","idVerifications","eidResult","EIDOverallResult","idVerificationResult","poidPassed","IdVerified","verifyIdStatus","Stage","stage","proofOfIdComplete","ProofOfIdComplete","documentStatus","DocumentsReceived","risk","riskAssessments","riskResultRaw","RiskAssessmentResult","riskStatus","nextActionStep","needsMatterOpening","hasIdReview","hasRiskReview","clientName","FirstName","LastName","service","ServiceDescription","actionLabel","isDisabled","InstructionRef","nextAction","getActionableInstructions","actionableInstructionIds","s","instructionsActionDone","formattedToday","normalizeName","att","attending","attendingToday","presence","PersonaPresence","online","none","nickname","metricsName","metricsClioId","getMetricsAlias","_fullName","_initials","_clioId","parseInt","userResponsibleName","userInitialsForBalance","userMatterIDs","responsibleSolicitor","numericId","myOutstandingBalances","isOutstandingPanelOpen","setIsOutstandingPanelOpen","filteredBalancesForPanel","created_at","updated_at","last_payment_date","last_shared_date","newest_issued_bill_due_date","pending_payments_total","reminders_enabled","allBalances","outstandingTotal","sum","metricsData","_userData$28","_userData$28$First","_userData$29","_userData$29$Last","_userData$30","_userData$30$FullName","_userData$31","_userData$31$Initials","_memberForInitials$Ni","_wipClioData$current_","_wipClioData$current_2","_wipClioData$last_wee","_wipClioData$last_wee2","_wipClioData$current_3","_wipClioData$current_4","_wipClioData$last_wee3","_wipClioData$last_wee4","_wipClioData$current_5","_wipClioData$current_6","_wipClioData$current_7","currentDate","currentMonth","userFirstName","userLastName","memberForInitials","userNickname","targetFirst","targetLast","targetFull","targetInitials","mattersOpenedCount","buildUserAliasSet","aliases","full","p","openDate","firmMattersOpenedCount","secondary","currentWeekData","current_week","daily_data","lastWeekDate","formattedLastWeekDate","lastWeekData","last_week","startOfCurrentWeek","startOfLastWeek","computeAverageUpTo","dailyData","total_hours","total_amount","avgHours","avgAmount","currentAvg","prevAvg","currentWeekDataKeys","todayData","totalTimeThisWeek","dayData","dailyDataKeys","dailyDataSample","totalTimeLastWeek","workWeekDays","getWorkWeekDays","i","leaveDays","dayString","adjustedTarget","timeMetrics","isApprover","approvalsNeeded","x","_x$approvers","approvers","snippetApprovalsNeeded","bookingsNeeded","handleApproveLeaveClick","Suspense","fallback","ThemedSpinner","approvals","hearing_confirmation","hearing_details","futureLeave","resetQuickActionsSelection","allLeaveEntries","onApprovalUpdate","handleTestApproveLeaveClick","openBookLeavePanel","bookings","rejection_notes","_resetQuickActionsSel","handleBookLeaveClick","handleBookLeavePreviewClick","_userData$0$FullName","_userData$32","todayIso","tomorrowIso","sample","approveSnippet","approve","baseUrl","approveUrl","REACT_APP_APPROVE_SNIPPET_EDIT_PATH","REACT_APP_APPROVE_SNIPPET_EDIT_CODE","editId","approvedBy","deleteUrl","REACT_APP_DELETE_SNIPPET_EDIT_PATH","REACT_APP_DELETE_SNIPPET_EDIT_CODE","handleSnippetApprovalClick","edits","onApprove","onReject","immediateALActions","titleText","descriptionText","titleMap","shortTitle","allLeaveRecords","dispatchEvent","CustomEvent","feeEarner","UnclaimedEnquiries","onSelect","userEmail","onAreaChange","iconComponent","IconComponent","isFunction","hasDefault","default","defaultIcon","getQuickActionIcon","groupedInstructionActions","actionGroups","instructionCategoryFor","actionType","_ref9","_a$category","sortKey","_ref0","_quickActionOrder$bas","normalQuickActions","QuickActionsBar","_m$title","appLevelImmediateActions","ImmediateActionsBar","getElementById","createPortal","TimeMetricsV2","SectionCard","ActionSection","prevTransactions","RecentWorkFeed","TeamIssuesBoard","DetailsList","items","setKey","layoutMode","DetailsListLayoutMode","justified","isHeaderVisible","ev","OutstandingBalancesList","FormDetails","link","offsetTop","ResourceDetails","loaderStyle","isCognitoLoaded","setIsCognitoLoaded","formContainerRef","isSubmitted","setIsSubmitted","submissionSuccess","setSubmissionSuccess","formKey","setFormKey","setIsSubmitting","loadCognitoScript","Promise","resolve","reject","Cognito","existingScript","onload","embedScript","formScript","formId","handleFinancialSubmit","formType","endpointUrl","REACT_APP_POST_FINANCIAL_TASK_PATH","REACT_APP_POST_FINANCIAL_TASK_CODE","errText","loaderIcon","component","users","onBack","getOverlayStyle","isClosing","getPanelStyle","getHeaderStyle","setIsClosing","isVisible","setIsVisible","portalContainer","setPortalContainer","htmlEl","documentElement","scrollbarGutter","handleClose","container","removeChild","handleEsc","overlayNode","trackHeight","trackWidth","knobSize","handleToggle","handleKey","onColour","offColour","focusRing","userSelect","inset"],"sourceRoot":""}