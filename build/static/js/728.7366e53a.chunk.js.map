{"version":3,"file":"static/js/728.7366e53a.chunk.js","mappings":"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","sources":["CustomForms/BookSpaceForm.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n// invisible change\r\nimport { Stack, Text, Spinner, SpinnerSize, Icon, DefaultButton, IButtonStyles } from '@fluentui/react';\r\nimport { getProxyBaseUrl } from '../utils/getProxyBaseUrl';\r\nimport { colours } from '../app/styles/colours';\r\nimport { useTheme } from '../app/functionality/ThemeContext';\r\nimport BespokeForm, { FormField } from './BespokeForms';\r\nimport {\r\n  BoardroomBooking,\r\n  SoundproofPodBooking,\r\n  FutureBookingsResponse\r\n} from '../app/functionality/types';\r\n\r\n// Refined selection styles with pronounced states and larger size\r\nconst selectionStyles: IButtonStyles = {\r\n  root: {\r\n    padding: '16px 28px',\r\n    borderRadius: '10px',\r\n    backgroundColor: colours.grey,\r\n    border: 'none',\r\n    height: '70px',\r\n    minWidth: '220px',\r\n    fontWeight: '600',\r\n    fontSize: '18px',\r\n    color: colours.greyText,\r\n    transition: 'background 0.3s ease, color 0.3s ease, box-shadow 0.3s ease, transform 0.2s ease',\r\n    boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  rootHovered: {\r\n    backgroundColor: colours.highlight,\r\n    color: '#ffffff',\r\n    boxShadow: '0 8px 20px rgba(0,0,0,0.2)',\r\n    transform: 'translateY(-3px)',\r\n  },\r\n  rootPressed: {\r\n    backgroundColor: `${colours.highlight}cc`,\r\n    color: '#ffffff',\r\n    boxShadow: '0 4px 10px rgba(0,0,0,0.25)',\r\n    transform: 'translateY(2px)',\r\n  },\r\n  icon: {\r\n    marginRight: '12px',\r\n    fontSize: '22px',\r\n  },\r\n  flexContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n};\r\n\r\nexport interface BookSpaceData {\r\n  fee_earner: string;\r\n  booking_date: string;\r\n  booking_time: string; // Expected format: 'HH:MM:SS'\r\n  duration: number;\r\n  reason: string;\r\n  spaceType: 'Boardroom' | 'Soundproof Pod';\r\n}\r\n\r\nexport interface BookSpaceFormProps {\r\n  onCancel: () => void;\r\n  feeEarner: string;\r\n  futureBookings?: FutureBookingsResponse;\r\n}\r\n\r\nconst BookSpaceForm: React.FC<BookSpaceFormProps> = ({\r\n  onCancel,\r\n  feeEarner,\r\n  futureBookings\r\n}) => {\r\n  const { isDarkMode } = useTheme();\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [submissionSuccess, setSubmissionSuccess] = useState(false);\r\n  const [submissionError, setSubmissionError] = useState<string | null>(null);\r\n  const [conflict, setConflict] = useState<boolean>(false);\r\n  const [conflictMessage, setConflictMessage] = useState<string>(\"\");\r\n  const [formValues, setFormValues] = useState<{ [key: string]: any }>({});\r\n  const [bookingsForDay, setBookingsForDay] = useState<(BoardroomBooking | SoundproofPodBooking)[]>([]);\r\n  const [twoWeekBookings, setTwoWeekBookings] = useState<{\r\n    [date: string]: (BoardroomBooking | SoundproofPodBooking)[];\r\n  }>({});\r\n  const [selectedSpaceType, setSelectedSpaceType] = useState<'Boardroom' | 'Soundproof Pod' | null>(null);\r\n  const [displayWeeks, setDisplayWeeks] = useState(2); // Start with 2 weeks\r\n\r\n  const formFields: FormField[] = [\r\n    {\r\n      label: 'Booking Date',\r\n      name: 'bookingDate',\r\n      type: 'date',\r\n      required: true,\r\n      placeholder: 'YYYY-MM-DD',\r\n    },\r\n    {\r\n      label: 'Start Time',\r\n      name: 'bookingTime',\r\n      type: 'time',\r\n      required: true,\r\n      placeholder: 'HH:MM',\r\n    },\r\n    {\r\n      label: 'Duration (hours)',\r\n      name: 'duration',\r\n      type: 'number',\r\n      required: true,\r\n      placeholder: 'Enter duration in hours',\r\n    },\r\n    {\r\n      label: 'Additional Notes',\r\n      name: 'reason',\r\n      type: 'textarea',\r\n      required: true,\r\n      placeholder: 'Any special requirements...',\r\n    },\r\n  ];\r\n\r\n  function checkConflictAndSuggest(values: { [key: string]: any }): {\r\n    hasConflict: boolean;\r\n    conflictEnd?: Date;\r\n    nextAvailable?: string;\r\n  } {\r\n    const { bookingDate, bookingTime, duration } = values;\r\n    const spaceType = selectedSpaceType;\r\n    if (!bookingDate || !bookingTime || !spaceType || !duration) {\r\n      return { hasConflict: false };\r\n    }\r\n\r\n    let dateStr = bookingDate;\r\n    if (dateStr.includes('/')) {\r\n      const parts = dateStr.split('/');\r\n      if (parts.length === 3) {\r\n        dateStr = `${parts[2]}-${parts[1]}-${parts[0]}`;\r\n      }\r\n    }\r\n\r\n    let timeStr = bookingTime;\r\n    if (timeStr.length === 5) {\r\n      timeStr = `${timeStr}:00`;\r\n    }\r\n    // Parse time parts to avoid timezone conversion\r\n    const timeParts = timeStr.split(':');\r\n    const newStart = new Date(dateStr);\r\n    newStart.setHours(parseInt(timeParts[0]), parseInt(timeParts[1]), parseInt(timeParts[2] || '0'), 0);\r\n    const newEnd = new Date(newStart.getTime() + Number(duration) * 3600000);\r\n\r\n    let relevantBookings: (BoardroomBooking | SoundproofPodBooking)[] = [];\r\n    if (futureBookings) {\r\n      relevantBookings =\r\n        spaceType === 'Boardroom'\r\n          ? futureBookings.boardroomBookings\r\n          : futureBookings.soundproofBookings;\r\n    }\r\n\r\n    const dayBookings = relevantBookings.filter((b) => b.booking_date === dateStr);\r\n    let latestConflictEnd: Date | undefined;\r\n    for (const booking of dayBookings) {\r\n      // Parse time parts to create Date without timezone conversion\r\n      const bookingTimeParts = booking.booking_time.split(':').map(p => p.split('.')[0]);\r\n      const existingStart = new Date(booking.booking_date);\r\n      existingStart.setHours(parseInt(bookingTimeParts[0]), parseInt(bookingTimeParts[1]), parseInt(bookingTimeParts[2] || '0'), 0);\r\n      const existingEnd = new Date(existingStart.getTime() + booking.duration * 3600000);\r\n      if (newStart < existingEnd && newEnd > existingStart) {\r\n        if (!latestConflictEnd || existingEnd > latestConflictEnd) {\r\n          latestConflictEnd = existingEnd;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (latestConflictEnd) {\r\n      const nextAvailable = findNextAvailableSlot(dayBookings, latestConflictEnd, Number(duration), dateStr);\r\n      return {\r\n        hasConflict: true,\r\n        conflictEnd: latestConflictEnd,\r\n        nextAvailable,\r\n      };\r\n    }\r\n\r\n    return { hasConflict: false };\r\n  }\r\n\r\n  function findNextAvailableSlot(\r\n    dayBookings: (BoardroomBooking | SoundproofPodBooking)[],\r\n    startAfter: Date,\r\n    duration: number,\r\n    dateStr: string\r\n  ): string | undefined {\r\n    const dayEnd = new Date(`${dateStr}T23:59:59`);\r\n    let proposedStart = new Date(startAfter);\r\n\r\n    while (proposedStart <= dayEnd) {\r\n      const proposedEnd = new Date(proposedStart.getTime() + duration * 3600000);\r\n      let isSlotAvailable = true;\r\n\r\n      for (const booking of dayBookings) {\r\n        // Parse time parts to create Date without timezone conversion\r\n        const timeParts = booking.booking_time.split(':').map(p => p.split('.')[0]);\r\n        const existingStart = new Date(booking.booking_date);\r\n        existingStart.setHours(parseInt(timeParts[0]), parseInt(timeParts[1]), parseInt(timeParts[2] || '0'), 0);\r\n        const existingEnd = new Date(existingStart.getTime() + booking.duration * 3600000);\r\n        if (proposedStart < existingEnd && proposedEnd > existingStart) {\r\n          isSlotAvailable = false;\r\n          proposedStart = new Date(existingEnd);\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (isSlotAvailable && proposedEnd <= dayEnd) {\r\n        return proposedStart.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n      }\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  useEffect(() => {\r\n    const { bookingDate } = formValues;\r\n    if (!bookingDate || !selectedSpaceType) {\r\n      setBookingsForDay([]);\r\n      return;\r\n    }\r\n    let dateStr = bookingDate;\r\n    if (dateStr.includes('/')) {\r\n      const parts = dateStr.split('/');\r\n      if (parts.length === 3) {\r\n        dateStr = `${parts[2]}-${parts[1]}-${parts[0]}`;\r\n      }\r\n    }\r\n    let relevantBookings: (BoardroomBooking | SoundproofPodBooking)[] = [];\r\n    if (futureBookings) {\r\n      relevantBookings =\r\n        selectedSpaceType === 'Boardroom'\r\n          ? futureBookings.boardroomBookings\r\n          : futureBookings.soundproofBookings;\r\n    }\r\n    const dayBookings = relevantBookings.filter((b) => b.booking_date === dateStr);\r\n    setBookingsForDay(dayBookings);\r\n  }, [formValues.bookingDate, selectedSpaceType, futureBookings]);\r\n\r\n  useEffect(() => {\r\n    const { hasConflict, conflictEnd, nextAvailable } = checkConflictAndSuggest(formValues);\r\n    setConflict(hasConflict);\r\n\r\n    if (hasConflict && conflictEnd) {\r\n      const endTime = conflictEnd.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n      let message = `Conflict until ${endTime}.`;\r\n      if (nextAvailable) {\r\n        message += ` Your ${formValues.duration}-hour booking fits at ${nextAvailable}.`;\r\n      } else {\r\n        message += ` No ${formValues.duration}-hour slot available today.`;\r\n      }\r\n      setConflictMessage(message);\r\n    } else {\r\n      setConflictMessage('');\r\n    }\r\n  }, [formValues.bookingTime, formValues.bookingDate, formValues.duration, selectedSpaceType]);\r\n\r\n  useEffect(() => {\r\n    if (!futureBookings) {\r\n      setTwoWeekBookings({});\r\n      return;\r\n    }\r\n\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0); // Normalize to start of day\r\n    const oneYearLater = new Date(today);\r\n    oneYearLater.setFullYear(today.getFullYear() + 1); // Set to oneのようなyear from today\r\n\r\n    const bookingsByDate: { [date: string]: (BoardroomBooking | SoundproofPodBooking)[] } = {};\r\n\r\n    // Generate dates for the next year, excluding weekends\r\n    let currentDate = new Date(today);\r\n    while (currentDate <= oneYearLater) {\r\n      const dayOfWeek = currentDate.getDay();\r\n      if (dayOfWeek !== 0 && dayOfWeek !== 6) { // Exclude weekends\r\n        const dateStr = currentDate.toISOString().split('T')[0];\r\n        bookingsByDate[dateStr] = [];\r\n      }\r\n      currentDate.setDate(currentDate.getDate() + 1);\r\n    }\r\n\r\n    // Populate bookings\r\n    const allBookings = selectedSpaceType\r\n      ? (selectedSpaceType === 'Boardroom' ? futureBookings.boardroomBookings : futureBookings.soundproofBookings)\r\n      : [...futureBookings.boardroomBookings, ...futureBookings.soundproofBookings];\r\n\r\n    allBookings.forEach((booking) => {\r\n      const bookingDate = booking.booking_date;\r\n      if (bookingsByDate[bookingDate]) {\r\n        bookingsByDate[bookingDate].push(booking);\r\n      }\r\n    });\r\n\r\n    setTwoWeekBookings(bookingsByDate);\r\n  }, [futureBookings, selectedSpaceType]);\r\n\r\n  const handleFieldChange = (vals: { [key: string]: any }) => {\r\n    setFormValues(vals);\r\n  };\r\n\r\n  async function handleFormSubmit(values: { [key: string]: any }) {\r\n    if (conflict || !selectedSpaceType) return;\r\n    setIsSubmitting(true);\r\n    setSubmissionError(null);\r\n    let t = values.bookingTime;\r\n    if (t.length === 5) {\r\n      t = t + ':00';\r\n    }\r\n    const formattedTime = t;\r\n    const payload: BookSpaceData = {\r\n      fee_earner: feeEarner,\r\n      booking_date: values.bookingDate,\r\n      booking_time: formattedTime,\r\n      duration: Number(values.duration),\r\n      reason: values.reason,\r\n      spaceType: selectedSpaceType,\r\n    };\r\n    try {\r\n      await submitBooking(payload);\r\n      setSubmissionSuccess(true);\r\n      setTimeout(() => {\r\n        onCancel();\r\n      }, 2000);\r\n    } catch (err: any) {\r\n      setSubmissionError(err.message || 'Booking failed.');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  }\r\n\r\n  async function submitBooking(data: BookSpaceData) {\r\n  const url = `${getProxyBaseUrl()}/${process.env.REACT_APP_INSERT_BOOK_SPACE_PATH}?code=${process.env.REACT_APP_INSERT_BOOK_SPACE_CODE}`;\r\n    let finalTimeStr = data.booking_time;\r\n    if (!finalTimeStr.includes('.')) {\r\n      finalTimeStr += '.0000000';\r\n    } else {\r\n      const [time, fraction = ''] = finalTimeStr.split('.');\r\n      finalTimeStr = `${time}.${(fraction + '0000000').slice(0, 7)}`;\r\n    }\r\n    const finalPayload = {\r\n      ...data,\r\n      booking_time: finalTimeStr,\r\n    };\r\n    const response = await fetch(url, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(finalPayload),\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(`Booking failed with status ${response.status}`);\r\n    }\r\n    return response.json();\r\n  }\r\n\r\n  const formatBookingTime = (booking: BoardroomBooking | SoundproofPodBooking) => {\r\n    // Parse time parts to avoid timezone conversion\r\n    const timeParts = booking.booking_time.split(':').map(p => p.split('.')[0]);\r\n    const start = new Date(booking.booking_date);\r\n    start.setHours(parseInt(timeParts[0]), parseInt(timeParts[1]), parseInt(timeParts[2] || '0'), 0);\r\n    const end = new Date(start.getTime() + booking.duration * 3600000);\r\n    return `${start.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })} - ${end.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}`;\r\n  };\r\n\r\n  const handleSpaceSelection = (spaceType: 'Boardroom' | 'Soundproof Pod') => {\r\n    setSelectedSpaceType(spaceType);\r\n    setFormValues({ ...formValues, spaceType });\r\n  };\r\n\r\n  // Helper to get bookings for the displayed period\r\n  const getDisplayedBookings = () => {\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    const endDate = new Date(today);\r\n    endDate.setDate(today.getDate() + displayWeeks * 7); // Calculate end date based on weeks\r\n    return Object.entries(twoWeekBookings)\r\n      .filter(([date]) => {\r\n        const d = new Date(date);\r\n        return d >= today && d <= endDate;\r\n      })\r\n      .sort(([dateA], [dateB]) => new Date(dateA).getTime() - new Date(dateB).getTime());\r\n  };\r\n\r\n  // Load more weeks\r\n  const handleLoadMore = () => {\r\n    setDisplayWeeks((prev) => prev + 2); // Add 2 more weeks\r\n  };\r\n\r\n  return (\r\n    <Stack tokens={{ childrenGap: 20 }} styles={{ root: { padding: '20px', position: 'relative' } }}>\r\n      {!selectedSpaceType ? (\r\n        <Stack horizontal tokens={{ childrenGap: 24 }} horizontalAlign=\"center\">\r\n          <DefaultButton\r\n            onClick={() => handleSpaceSelection('Boardroom')}\r\n            styles={selectionStyles}\r\n            iconProps={{ iconName: 'OfficeChat' }}\r\n            text=\"Boardroom\"\r\n          />\r\n          <DefaultButton\r\n            onClick={() => handleSpaceSelection('Soundproof Pod')}\r\n            styles={selectionStyles}\r\n            iconProps={{ iconName: 'Phone' }}\r\n            text=\"Soundproof Pod\"\r\n          />\r\n        </Stack>\r\n      ) : (\r\n        <>\r\n          {isSubmitting && (\r\n            <Stack horizontalAlign=\"center\" styles={{ root: { position: 'absolute', width: '100%', zIndex: 1 } }}>\r\n              <Spinner size={SpinnerSize.large} label=\"Booking in progress...\" />\r\n            </Stack>\r\n          )}\r\n          {submissionSuccess && (\r\n            <Stack\r\n              horizontalAlign=\"center\"\r\n              styles={{\r\n                root: {\r\n                  position: 'absolute',\r\n                  width: '100%',\r\n                  zIndex: 1,\r\n                  backgroundColor: '#fff',\r\n                  padding: '10px',\r\n                  borderRadius: '8px',\r\n                  boxShadow: '0 4px 12px rgba(0,0,0,0.15)',\r\n                },\r\n              }}\r\n            >\r\n              <Stack horizontal tokens={{ childrenGap: 8 }} verticalAlign=\"center\">\r\n                <Icon iconName=\"CheckMark\" styles={{ root: { color: 'green', fontSize: '24px' } }} />\r\n                <Text variant=\"xLarge\" styles={{ root: { color: 'green', fontWeight: 600 } }}>\r\n                  Booking confirmed!\r\n                </Text>\r\n              </Stack>\r\n            </Stack>\r\n          )}\r\n          {submissionError && (\r\n            <Stack horizontalAlign=\"center\" styles={{ root: { position: 'absolute', width: '100%', zIndex: 1 } }}>\r\n              <Text variant=\"large\" styles={{ root: { color: 'red' } }}>\r\n                {submissionError}\r\n              </Text>\r\n            </Stack>\r\n          )}\r\n          {conflict && (\r\n            <Stack horizontalAlign=\"center\" styles={{ root: { marginBottom: '10px' } }}>\r\n              <Text variant=\"large\" styles={{ root: { color: colours.cta, fontWeight: 600 } }}>\r\n                {conflictMessage}\r\n              </Text>\r\n            </Stack>\r\n          )}\r\n          <BespokeForm\r\n            fields={formFields}\r\n            onSubmit={handleFormSubmit}\r\n            onCancel={onCancel}\r\n            onChange={handleFieldChange}\r\n            matters={[]}\r\n            submitDisabled={conflict || isSubmitting}\r\n            conflict={conflict}\r\n          />\r\n\r\n          {bookingsForDay.length > 0 && (\r\n            <Stack\r\n              styles={{\r\n                root: {\r\n                  backgroundColor: colours.grey,\r\n                  borderRadius: '8px',\r\n                  padding: '16px',\r\n                  boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\r\n                  border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n                },\r\n              }}\r\n            >\r\n              <Text\r\n                variant=\"mediumPlus\"\r\n                styles={{ root: { fontWeight: 600, color: isDarkMode ? '#ddd' : colours.darkBlue, marginBottom: '12px' } }}\r\n              >\r\n                {selectedSpaceType} on {new Date(formValues.bookingDate).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}\r\n              </Text>\r\n              <Stack tokens={{ childrenGap: 8 }}>\r\n                {bookingsForDay.map((b) => (\r\n                  <Stack\r\n                    key={b.id}\r\n                    horizontal\r\n                    tokens={{ childrenGap: 12 }}\r\n                    styles={{\r\n                      root: {\r\n                        padding: '8px 12px',\r\n                        backgroundColor: isDarkMode ? colours.dark.grey : '#fff',\r\n                        borderRadius: '6px',\r\n                        border: `1px solid ${isDarkMode ? colours.dark.border : '#e8e8e8'}`,\r\n                        transition: 'background 0.2s ease',\r\n                        ':hover': { backgroundColor: isDarkMode ? '#444' : '#f9f9f9' },\r\n                      },\r\n                    }}\r\n                  >\r\n                    <Text variant=\"medium\" styles={{ root: { fontWeight: 500, width: '90px', color: colours.blue } }}>\r\n                      {formatBookingTime(b)}\r\n                    </Text>\r\n                    <Text variant=\"medium\" styles={{ root: { color: isDarkMode ? '#bbb' : colours.greyText } }}>\r\n                      {b.reason} <span style={{ fontWeight: 300 }}>(by {b.fee_earner})</span>\r\n                    </Text>\r\n                  </Stack>\r\n                ))}\r\n              </Stack>\r\n            </Stack>\r\n          )}\r\n\r\n          <Stack\r\n            styles={{\r\n              root: {\r\n                backgroundColor: colours.grey,\r\n                borderRadius: '8px',\r\n                padding: '16px',\r\n                boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\r\n                border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n              },\r\n            }}\r\n          >\r\n            <Text\r\n              variant=\"mediumPlus\"\r\n              styles={{ root: { fontWeight: 600, color: isDarkMode ? '#ddd' : colours.darkBlue, marginBottom: '12px' } }}\r\n            >\r\n              {selectedSpaceType ? `${selectedSpaceType} Availability` : 'Space Availability'}\r\n            </Text>\r\n            <Stack tokens={{ childrenGap: 16 }}>\r\n              {getDisplayedBookings().map(([date, bookings]) => (\r\n                <Stack key={date}>\r\n                  <Text\r\n                    variant=\"medium\"\r\n                    styles={{ root: { fontWeight: 500, color: isDarkMode ? '#ccc' : colours.websiteBlue, marginBottom: '6px' } }}\r\n                  >\r\n                    {new Date(date).toLocaleDateString('en-US', { weekday: 'short', month: 'short', day: 'numeric' })}\r\n                  </Text>\r\n                  {bookings.length > 0 ? (\r\n                    <Stack tokens={{ childrenGap: 6 }}>\r\n                      {bookings.map((b) => (\r\n                        <Stack\r\n                          key={b.id}\r\n                          horizontal\r\n                          tokens={{ childrenGap: 12 }}\r\n                          styles={{\r\n                            root: {\r\n                              padding: '6px 10px',\r\n                              backgroundColor: isDarkMode ? colours.dark.grey : '#fff',\r\n                              borderRadius: '6px',\r\n                              border: `1px solid ${isDarkMode ? colours.dark.border : '#e8e8e8'}`,\r\n                              transition: 'background 0.2s ease',\r\n                              ':hover': { backgroundColor: isDarkMode ? '#444' : '#f9f9f9' },\r\n                            },\r\n                          }}\r\n                        >\r\n                          <Text variant=\"smallPlus\" styles={{ root: { fontWeight: 500, width: '90px', color: colours.blue } }}>\r\n                            {formatBookingTime(b)}\r\n                          </Text>\r\n                          <Text variant=\"smallPlus\" styles={{ root: { color: isDarkMode ? '#bbb' : colours.greyText } }}>\r\n                            {b.reason} <span style={{ fontWeight: 300 }}>(by {b.fee_earner})</span>\r\n                          </Text>\r\n                        </Stack>\r\n                      ))}\r\n                    </Stack>\r\n                  ) : (\r\n                    <Text variant=\"smallPlus\" styles={{ root: { color: isDarkMode ? '#888' : '#999', marginLeft: '10px', fontStyle: 'italic' } }}>\r\n                      No bookings scheduled\r\n                    </Text>\r\n                  )}\r\n                </Stack>\r\n              ))}\r\n              <DefaultButton\r\n                text=\"Load More\"\r\n                onClick={handleLoadMore}\r\n                styles={{ root: { marginTop: '16px', alignSelf: 'center' } }}\r\n              />\r\n            </Stack>\r\n          </Stack>\r\n        </>\r\n      )}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default BookSpaceForm;"],"names":["selectionStyles","root","padding","borderRadius","backgroundColor","colours","grey","border","height","minWidth","fontWeight","fontSize","color","greyText","transition","boxShadow","display","justifyContent","alignItems","rootHovered","highlight","transform","rootPressed","icon","marginRight","flexContainer","_ref","onCancel","feeEarner","futureBookings","isDarkMode","useTheme","isSubmitting","setIsSubmitting","useState","submissionSuccess","setSubmissionSuccess","submissionError","setSubmissionError","conflict","setConflict","conflictMessage","setConflictMessage","formValues","setFormValues","bookingsForDay","setBookingsForDay","twoWeekBookings","setTwoWeekBookings","selectedSpaceType","setSelectedSpaceType","displayWeeks","setDisplayWeeks","checkConflictAndSuggest","values","bookingDate","bookingTime","duration","spaceType","hasConflict","dateStr","includes","parts","split","length","timeStr","timeParts","newStart","Date","setHours","parseInt","newEnd","getTime","Number","relevantBookings","boardroomBookings","soundproofBookings","dayBookings","filter","b","booking_date","latestConflictEnd","booking","bookingTimeParts","booking_time","map","p","existingStart","existingEnd","nextAvailable","startAfter","dayEnd","proposedStart","proposedEnd","isSlotAvailable","toLocaleTimeString","hour","minute","findNextAvailableSlot","conflictEnd","useEffect","message","today","oneYearLater","setFullYear","getFullYear","bookingsByDate","currentDate","dayOfWeek","getDay","toISOString","setDate","getDate","forEach","push","formatBookingTime","start","end","handleSpaceSelection","_jsx","Stack","tokens","childrenGap","styles","position","children","_jsxs","_Fragment","horizontalAlign","width","zIndex","Spinner","size","SpinnerSize","large","label","horizontal","verticalAlign","Icon","iconName","Text","variant","marginBottom","cta","BespokeForm","fields","name","type","required","placeholder","onSubmit","async","t","formattedTime","payload","fee_earner","reason","data","url","getProxyBaseUrl","process","REACT_APP_INSERT_BOOK_SPACE_PATH","REACT_APP_INSERT_BOOK_SPACE_CODE","finalTimeStr","time","fraction","slice","finalPayload","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","json","submitBooking","setTimeout","err","onChange","vals","matters","submitDisabled","dark","light","darkBlue","toLocaleDateString","month","day","blue","style","id","getDisplayedBookings","endDate","Object","entries","_ref2","date","d","sort","_ref3","_ref4","dateA","dateB","_ref5","bookings","websiteBlue","weekday","marginLeft","fontStyle","DefaultButton","text","onClick","handleLoadMore","prev","marginTop","alignSelf","iconProps"],"sourceRoot":""}