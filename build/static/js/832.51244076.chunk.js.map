{"version":3,"file":"static/js/832.51244076.chunk.js","mappings":"6MA0BOA,eAAeC,EAAaC,EAAmBC,GAClD,IAEI,MAAMC,EAAM,IAAGC,EAAAA,EAAAA,QAAqBC,CAAAA,SAAAA,aAAAA,WAAAA,IAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,EAAAA,yBAAAA,QAAYC,qCAAqCD,CAAAA,SAAAA,aAAAA,WAAAA,IAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,EAAAA,yBAAAA,QAAYE,+BAE3FC,QAAiBC,MAAMN,EAAK,CAC9BO,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBb,YACAC,gBAIFa,QAAqCP,EAASQ,OAEpD,IAAKR,EAASS,GACV,MAAM,IAAIC,MAAMH,EAAOI,OAAS,QAAQX,EAASY,WAAWZ,EAASa,cAGzE,OAAON,CACX,CAAE,MAAOI,GAEL,MADAG,QAAQH,MAAM,0BAA2BA,GACnCA,CACV,CACJ,CAiBO,SAASI,IACZ,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCP,EAAOQ,IAAYD,EAAAA,EAAAA,UAAwB,MAmBlD,MAAO,CACH1B,aAlBuBD,MAAOE,EAAmBC,KACjDuB,GAAa,GACbE,EAAS,MAET,IACI,MAAMZ,QAAef,EAAaC,EAAWC,GAE7C,OADAoB,QAAQM,IAAI,gCAAiCb,GACtCA,CACX,CAAE,MAAOc,GACL,MAAMC,EAAeD,aAAeX,MAAQW,EAAIE,QAAU,0BAE1D,MADAJ,EAASG,GACHD,CACV,CAAC,QACGJ,GAAa,EACjB,GAKAD,YACAL,QAER,C,eCtEA,SAASa,EAAeC,GACtB,IAAIC,EAAID,EAAIE,QAAQ,OAAQ,MAAMA,QAAQ,QAAS,MAEnD,OADAD,EAAIA,EAAEC,QAAQ,UAAW,QAClBD,EAAEE,MACX,CAGA,MAAMC,EAAsDC,IAAqC,IAApC,MAAEC,EAAK,OAAEC,EAAM,YAAEC,GAAaH,EACzF,MAAOI,EAAUC,GAAeC,EAAAA,UAAe,IACxCC,EAAaC,GAAkBF,EAAAA,UAAe,GAC/CG,EAAWH,EAAAA,OAA6B,OACvCI,EAAeC,GAAoBL,EAAAA,UAAe,GAezD,OAbAA,EAAAA,UAAgB,KAAYH,GAAaE,GAAY,IAAU,CAACF,IAChEG,EAAAA,UAAgB,KACd,IAAKF,GAAYK,EAASG,QAAS,CACjC,MAAMC,EAAKJ,EAASG,QACdE,EAAcD,EAAGE,aAAeF,EAAGG,aAAe,EACxDR,EAAeM,GACfH,EAAiBG,EACnB,MAAWV,IACTI,GAAe,GACfG,GAAiB,KAElB,CAACV,EAAOG,KAGTa,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,SAAU,GAAIC,WAAY,IAAKC,MAAOnB,EAAS,yBAA2B,oBAAqBoB,SAAA,CAC1GlB,GACCmB,EAAAA,EAAAA,KAAA,OAAK,YAAU,SAAQD,SAAE5B,EAAeO,MAExCgB,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEM,SAAU,YAAaF,SAAA,EACnCC,EAAAA,EAAAA,KAAA,OACEE,IAAKhB,EACLS,MAAO,CACLQ,QAAS,cAAeC,gBAAiB,EAAGC,gBAAiB,WAAYC,SAAU,SACnFC,aAAc,WAAYC,WAAY,WAAYC,UAAW,IAE/D,cAAa5B,EAASkB,SAErB5B,EAAeO,KAEjBS,IACCa,EAAAA,EAAAA,KAAA,OACEL,MAAO,CAAEM,SAAU,WAAYS,OAAQ,EAAGC,KAAM,EAAGC,MAAO,EAAGC,OAAQ,GAAIC,cAAe,OACtFC,WAAYpC,EACR,iEACA,gFAKbK,IACCgB,EAAAA,EAAAA,KAAA,UACEgB,KAAK,SACLrB,MAAO,CAAEQ,QAAS,cAAec,WAAY,SAAUC,OAAQ,UAAWpB,MAAO,UAAWiB,WAAY,cAAeI,OAAQ,OAAQC,QAAS,GAChJC,QAAUC,IAAQA,EAAEC,kBAAmBzC,EAAY0C,IAAMA,IACzD,gBAAe3C,EACf,aAAYA,EAAW,iBAAmB,eAAekB,UAEzDC,EAAAA,EAAAA,KAACyB,EAAAA,EAAI,CAACC,SAAS,cAAcC,OAAQ,CAAEC,KAAM,CAAEC,WAAY,iBAAkBC,UAAWjD,EAAW,kBAAoB,eAAgBe,SAAU,aAuS3J,EArRiDmC,IAAsF,IAArF,QAAEC,EAAO,SAAEC,EAAQ,aAAEC,EAAY,UAAE7F,EAAS,eAAE8F,EAAc,gBAAEC,GAAiBL,EAC/H,MAAM,WAAEM,IAAeC,EAAAA,EAAAA,OAChBC,EAAUC,IAAe3E,EAAAA,EAAAA,WAAS,IAClC4E,EAAaC,IAAkB7E,EAAAA,EAAAA,WAAS,IACzC,aAAE1B,EAAY,UAAEwB,EAAS,MAAEL,GAAUI,KACpCiF,EAAaC,IAAkB/E,EAAAA,EAAAA,WAAS,GAEzCgF,EAjBeC,KACrB,MAAMC,GAAQ,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAME,gBAAiB,GACjC,OAAID,EAAEE,SAAS,cAAsBC,EAAAA,EAAQC,KACzCJ,EAAEE,SAAS,gBAAwBC,EAAAA,EAAQE,OAC3CL,EAAEE,SAAS,YAAoBC,EAAAA,EAAQG,MACvCN,EAAEE,SAAS,cAAsBC,EAAAA,EAAQI,QACzCP,EAAEE,SAAS,UAAYF,EAAEE,SAAS,UAAkBC,EAAAA,EAAQK,WAW9CC,CAAcxB,EAAQyB,cAKlCC,EAAarB,EACf,UACA,oDAEEsB,EACF,aAAad,IAGXe,EAAiBvB,EACnB,4BACA,cAAcQ,wEAEZgB,GAAYC,EAAAA,EAAAA,IAAY,CAC5B7D,SAAU,WACV8D,OAAQ,QACRC,aAAc,EACd5C,QAAS,YACTL,WAAYwB,EACRmB,EACCrB,EAAa,UArBI,oDAsBtB4B,QAAS7B,EAAkB,GAAM,EAEjC,4BAA6B,CAC3BhB,QAAS,aAEX,4BAA6B,CAC3BA,QAAS,WACT4C,aAAc,GAEhB7C,OAAQoB,GAAYE,EAChBkB,EACA,cAAatB,EAAa,wBAA0B,oBACxD6B,WAAY,aAAa3B,GAAwBF,EAAbQ,EAAsC,GAAGA,QAC7EsB,UAAW5B,EACPqB,EACCvB,EAAa,OAAS,gCAC3BlC,QAAS,OACTiE,cAAe,SACfC,IAAK,EACLC,WAAY,sBACZpD,OAAQ,UACRW,WAAY,wCACZ0C,aAAc,EACdjE,SAAU,SACVwB,UAAWS,EAAW,mBAAqB,gBAC3CiC,UAAW,CACT,SAAU,CACR1C,UAAWS,EAAW,mBAAqB,mBAC3C4B,UAAW5B,EACNF,EAAa,4BAA8B,eAAeQ,wEAC1DR,EAAa,4BAA8B,8BAChDlB,OAAQ,aAAa0B,IACrBqB,WAAY,aAAarB,KAE3B,UAAW,CAAEf,UAAWS,EAAW,mBAAqB,iBACxD,gBAAiB,CACfkC,QAAS,aAAa5B,MACtB6B,cAAe,MACfC,YAAa9B,MAKb+B,EAAeA,KACnBpC,GAAY,GACZE,GAAe,GACfT,EAASD,IAGL6C,EAAc3I,UAElB,GADAoF,EAAEC,kBACGlF,GAAc2F,EAAQ8C,GAK3B,IACE,MAAM5H,QAAef,EAAa6F,EAAQ8C,GAAIzI,GAC1Ca,EAAO6H,SACTtH,QAAQM,IAAI,uCACZ6E,GAAe,GACfF,GAAe,GAEXP,GACFA,KAGF1E,QAAQH,MAAM,kCAA8BJ,EAAOI,MAEvD,CAAE,MAAOU,GACPP,QAAQH,MAAM,iCAA6BU,EAC7C,MAnBEP,QAAQH,MAAM,8CAsBlB,OACEoC,EAAAA,EAAAA,MAAA,OACEsF,UAAWnB,EACXoB,aAAcA,IAAMvC,GAAe,GACnCwC,aAAcA,KAAa3C,GAAUG,GAAe,IACpDrB,QAASuD,EACTO,KAAK,UACLC,SAAU,EACV,aAAW,+BAA8BrF,SAAA,EAGzCC,EAAAA,EAAAA,KAAA,QAAML,MAAO,CACXM,SAAU,WACVoF,IAAK,EACL1E,KAAM,EACND,OAAQ,EACR4E,MAAO,EACPvE,WAAY8B,EACZoB,QAAS,IACTnD,cAAe,OACfyE,oBAAqB,GACrBC,uBAAwB,OAI1BxF,EAAAA,EAAAA,KAACyF,EAAAA,EAAY,CAACzD,QAASA,EAAS0D,WAAW,EAAOC,WAAW,EAAMzD,aAAcA,KAGjFxC,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEQ,QAAS,OAAQc,WAAY,SAAUoD,IAAK,EAAGuB,UAAW,GAAI7F,SAAA,EAC1EC,EAAAA,EAAAA,KAAA,QACE,cAAY,OACZL,MAAO,CACL2F,MAAO,EACPzE,OAAQ,EACRmD,aAAc,MACdjD,WAAY8B,EACZsB,UAAW,aAAatB,MACxBgD,UAAW,yCACX1F,QAAS,mBAGbH,EAAAA,EAAAA,KAAC8F,EAAAA,EAAI,CAACC,QAAQ,SAASpE,OAAQ,CAAEC,KAAM,CAAEoE,WAAY,IAAKlG,MAAOuC,EAAa,OAAS,UAAWxC,WAAY,MAAQE,UAClHiC,EAAQiE,YAAc,IAAM,KAAOjE,EAAQkE,WAAa,MAE3DlE,EAAQ8C,KACPpF,EAAAA,EAAAA,MAAA,QAAMC,MAAO,CAAEC,SAAU,GAAIE,MAAOuC,EAAa,yBAA2B,UAAW2D,WAAY,IAAKG,cAAe,IAAMpG,SAAA,CAAC,MACxHiC,EAAQ8C,MAGf1C,IACCpC,EAAAA,EAAAA,KAAA,QAAML,MAAO,CACXC,SAAU,GACVoG,WAAY,IACZ5E,QAAS,UACT4C,aAAc,EACdoC,gBAAqC,gBAApBhE,EAAqCC,EAAa,0BAA4B,2BAA+BA,EAAa,2BAA6B,2BACxKvC,MAA2B,gBAApBsC,EAAqCC,EAAa,yBAA2B,yBAA6BA,EAAa,0BAA4B,0BAC1JgE,cAAe,YACfF,cAAe,GACflC,QAAS,KACTlE,SACqB,gBAApBqC,EAAoC,aAAe,gBAM1DpC,EAAAA,EAAAA,KAAA,OAAKL,MAAO,CACVQ,QAAS,OACTkE,IAAK,GACLzE,SAAU,GACVE,MAAOuC,EAAa,yBAA2B,mBAC/C2D,WAAY,IACZJ,UAAW,GACX7F,SACCiC,EAAQsE,QAAStG,EAAAA,EAAAA,KAAA,QAAML,MAAO,CAAEqG,WAAY,KAAMjG,SAAEiC,EAAQsE,UAI9DtE,EAAQuE,2BACPvG,EAAAA,EAAAA,KAAA,OAAKL,MAAO,CAAEiG,UAAW,EAAGrB,aAAc,GAAIxE,UAC5CC,EAAAA,EAAAA,KAACxB,EAAiB,CAACE,MAAOsD,EAAQuE,yBAA0B5H,OAAQ0D,EAAYzD,YAAa2D,OAKjG7C,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CACVQ,QAAS,OACTiE,cAAe,SACfwB,UAAW,EACX/D,WAAY,kFACZpB,UAAWgC,GAAeF,EAAW,GAAK,EAC1CiE,WAAY/D,GAAeF,EAAW,EAAI,EAC1CkE,cAAehE,GAAeF,EAAW,EAAI,EAC7CjC,SAAU,UACVP,SAAA,EACAC,EAAAA,EAAAA,KAAA,OAAKL,MAAO,CAAEQ,QAAS,OAAQkE,IAAK,EAAGqC,SAAU,QAAS3G,SACvD,MACC,MAAM4G,EAAU,CACd,CAAEC,IAAK,QAASC,MAAO,QAASC,WAAY,UAAWC,UAAU,GACjE,CAAEH,IAAK,WAAYC,MAAO,WAAYC,WAAY,OAAQC,UAAU,GACpE,CAAEH,IAAK,SAAUC,MAAO,SAAUC,WAAY,OAAQC,UAAU,GAChE,CAAEH,IAAK,WAAYC,MAAO,WAAYC,WAAY,SAAUC,UAAU,GACtE,CAAEH,IAAK,OAAQC,MAAO,eAAgBC,WAAY,MAAOC,UAAU,IAErE,OAAOJ,EAAQK,IAAI,CAACC,EAAKC,KACvB,MAAMC,EAAS1E,GAAeF,EAAY,IAAY,GAAN2E,EAAwC,IAA5BP,EAAQS,OAAS,EAAIF,GAC3EG,EAAyB,UAAZJ,EAAIL,IAAkB1D,EAAAA,EAAQC,KAA0B,WAAnB8D,EAAIH,WAA0B,UAA+B,QAAnBG,EAAIH,WAAuB5D,EAAAA,EAAQoE,IAAMpE,EAAAA,EAAQC,KAC7IoE,EAAsB,UAAZN,EAAIL,IACpB,OACE5G,EAAAA,EAAAA,KAAA,UAEEqB,QAAS4F,EAAIF,cAAWS,EAAyB,UAAZP,EAAIL,IAAmBjE,OAAc6E,EAAY3C,EAAgBvD,IAAOA,EAAEC,kBAAmBqD,KAClImC,SAAUE,EAAIF,UAAyB,UAAZE,EAAIL,MAAoBjJ,GAAagF,GAChEqC,WAAWlB,EAAAA,EAAAA,IAAY,CACrB/C,WAAYwG,IAAYhF,GAAYI,GAAe0E,EAAa,cAChEvH,MAAOmH,EAAIF,UAAyB,UAAZE,EAAIL,MAAoBjJ,GAAagF,GAAgB,UAAa4E,EAAYhF,GAAYI,EAAe,OAAS0E,EAAcnE,EAAAA,EAAQK,SAChKpC,OAAQ,eAAeoG,EAAUF,EAAa,gBAC9CjG,QAAS,WACT4C,aAAc,GACdpE,SAAU,GACVoG,WAAY,IACZ9E,OAAQ+F,EAAIF,UAAyB,UAAZE,EAAIL,MAAoBjJ,GAAagF,GAAgB,cAAgB,UAC9FsB,QAASxB,GAAeF,EAAW,EAAI,EACvCT,UAAWW,GAAeF,EAAW,yBAA2B,6BAChEV,WAAY,mKACZ4F,gBAAiB,GAAGN,MACpB3C,UAAW,CACT,SAAWyC,EAAIF,UAAwB,UAAZE,EAAIL,IAIf,UAAZK,EAAIL,KAAoBK,EAAIF,UAAapE,EAIzC,CAAC,EAJsD,CACzD5B,WAAYmC,EAAAA,EAAQC,KACpBrD,MAAO,OACPkE,aAAc,GAPiC,CAC/CjD,WAAY,UACZjB,MAAOoD,EAAAA,EAAQC,KACfa,aAAc,GAMhB,UAAYiD,EAAIF,SAGZ,CAAC,EAHsB,CACzBjF,UAAW,cACXkC,aAAc,MAGjBjE,SACS,UAAZkH,EAAIL,IAAmBjJ,EAAY,cAAiBgF,EAAc,UAAY,QAAYsE,EAAIJ,OAhCzFI,EAAIL,MAmChB,EAjDA,KAmDFjE,IACCjD,EAAAA,EAAAA,MAAA,OACEyF,KAAK,SACL,YAAU,SACVxF,MAAO,CACLQ,QAAS,OACTc,WAAY,SACZoD,IAAK,EACLuB,UAAW,EACX9F,MAAOuC,EAAa,UAAY,UAChCzC,SAAU,GACVoG,WAAY,KACZjG,SAAA,EAEFC,EAAAA,EAAAA,KAACyB,EAAAA,EAAI,CAACC,SAAS,YAAYC,OAAQ,CAAEC,KAAM,CAAEhC,SAAU,QACvDI,EAAAA,EAAAA,KAAA,QAAAD,SAAM,mD,6CCjXX,MAAM2H,EAAcA,IAAoD,SAArClL,CAAAA,SAAAA,aAAAA,WAAAA,IAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,EAAAA,yBAAAA,QAAYmL,qBAEzCC,EAAW,WAClBF,KAAejK,QAAQM,OAAI8J,UACjC,EAEaC,EAAY,WACnBJ,KAAejK,QAAQsK,QAAKF,UAClC,C,2FCEA,MAmCA,EAnC8DpJ,IAAiG,IAAhG,UAAEuJ,EAAS,SAAE/F,EAAQ,UAAE5F,EAAS,aAAE6F,EAAY,eAAEC,EAAc,yBAAE8F,GAA0BxJ,EAErJ,OAAKuJ,GAAkC,IAArBA,EAAUZ,QAYxBpH,EAAAA,EAAAA,KAACkI,EAAAA,EAAK,CACFC,OAAQ,CAAEC,YAAa,IACvBzG,OAAQ,CAAEC,KAAM,CAAER,QAAS,SAAWrB,SAErCiI,EAAUhB,IAAI,CAAChF,EAASqG,KACrBrI,EAAAA,EAAAA,KAACsI,EAAAA,EAAuB,CAEpBtG,QAASA,EACTC,SAAUA,EACVsG,OAAQA,OACRC,OAAQH,IAAUL,EAAUZ,OAAS,EACrClF,aAAcA,EACd7F,UAAWA,GAAa,GACxB8F,eAAgBA,EAChBC,gBAAiB6F,EAA2BA,EAAyBjG,GAAW,MAR3E,GAAGA,EAAQ8C,MAAMuD,SAhB9BrI,EAAAA,EAAAA,KAAC8F,EAAAA,EAAI,CACDC,QAAQ,SACRpE,OAAQ,CAAEC,KAAM,CAAE6G,UAAW,SAAU7C,UAAW,KAAO7F,SAC5D,4B,mHCbb,SAAS2I,EAAoBC,GAA6C,IAAjCC,EAASf,UAAAT,OAAA,QAAAI,IAAAK,UAAA,GAAAA,UAAA,GAAG,IAAIgB,KACnDC,EAAOC,KAAKC,IAAI,EAAGD,KAAKE,OAAOL,EAAIM,UAAYP,EAAKO,WAAa,MACrE,MAAMC,EAAeL,EACfM,EAAIN,EAAO,GAAIA,EAAOC,KAAKE,MAAMH,EAAO,IAC9C,MAAMO,EAAIP,EAAO,GAAIA,EAAOC,KAAKE,MAAMH,EAAO,IAC9C,MAAMQ,EAAIR,EAAO,GAAIA,EAAOC,KAAKE,MAAMH,EAAO,IAC9C,MAAMS,EAAIT,EAAO,EAAGA,EAAOC,KAAKE,MAAMH,EAAO,GAC7C,MAAMU,EAAIV,EAAO,EAAGA,EAAOC,KAAKE,MAAMH,EAAO,GAC7C,MAAMW,EAAKX,EAAO,GAAIA,EAAOC,KAAKE,MAAMH,EAAO,IAC/C,MAAMY,EAAIZ,EAEJa,EAAiBR,EAAe,KAChCS,EAAYjB,EAAKkB,iBAAmBjB,EAAIiB,eAExCC,EAAkB,GAAJJ,EAASD,EACvBM,EAAyB,GAuB/B,OArBID,EAAc,GAChBC,EAAaC,KAAKF,EAAc,KAC5BN,EAAI,GAAGO,EAAaC,KAAKR,EAAI,MACxBA,EAAI,GACbO,EAAaC,KAAKR,EAAI,KAClBD,EAAI,GAAGQ,EAAaC,KAAKT,EAAI,MACxBA,EAAI,GACbQ,EAAaC,KAAKT,EAAI,KAClBD,EAAI,GAAGS,EAAaC,KAAKV,EAAI,MACxBA,EAAI,GACbS,EAAaC,KAAKV,EAAI,KAClBM,GAAaP,EAAI,GAAGU,EAAaC,KAAKX,EAAI,MACrCA,EAAI,GACbU,EAAaC,KAAKX,EAAI,KAClBM,GAAkBP,EAAI,GAAGW,EAAaC,KAAKZ,EAAI,MAC1CO,GAAkBP,EAAI,GAC/BW,EAAaC,KAAKZ,EAAI,KAGI,IAAxBW,EAAa3C,QAAc2C,EAAaC,KAAK,MAE1CD,EAAaE,MAAM,EAAG,GAAGC,KAAK,IACvC,CAKA,SAASC,EAAmB1L,GAA2C,IAA1C,QAAEuD,GAAqCvD,EAClE,MAAOmK,EAAKwB,IAAUvM,EAAAA,EAAAA,UAAe,IAAM,IAAIgL,OAC/CwB,EAAAA,EAAAA,WAAU,KACR,MAAMC,EAAQC,YAAY,IAAMH,EAAO,IAAIvB,MAAS,KACpD,MAAO,IAAM2B,cAAcF,IAC1B,IAEH,MAAMG,EAA6BzI,EAAgB0I,UAAY1I,EAAQ2I,cAAiB3I,EAAgB4I,gBACxG,IAAKH,EAAO,OAAO,KAEnB,IAAII,EAAuB,KAC3B,IACEA,GAAUC,EAAAA,EAAAA,GAASL,GACfM,MAAMF,EAAQ3B,aAAY2B,EAAU,IAAIhC,KAAK4B,GACnD,CAAE,MACA,IAAMI,EAAU,IAAIhC,KAAK4B,EAAQ,CAAE,MAAQI,EAAU,IAAM,CAC7D,CACA,IAAKA,GAAWE,MAAMF,EAAQ3B,WAAY,OAAO,KAEjD,MAAM8B,EAAUtC,EAAoBmC,EAASjC,GAC7C,OACE5I,EAAAA,EAAAA,KAAA,QACEL,MAAO,CACLC,SAAU,IACVE,MAAO,4BACbkG,WAAY,IACNG,cAAe,GACf8E,WAAY,MACZ3G,WAAY,8BAClBvD,WAAY,4BACNiD,aAAc,EACd5C,QAAS,UACTjB,QAAS,eACTK,WAAY,SACZ0K,cAAe,SACfjH,QAAS,KAEXkH,OAAOC,EAAAA,EAAAA,SAAOP,EAAS,oBAAoB9K,SAC3CiL,GAEN,CAqBA,MAsNA,EAtNsCjJ,IAM/B,IAADsJ,EAAAC,EAAAC,EAAAC,EAAA,IANiC,QACrCxJ,EAAO,QACPyJ,EAAO,UACP/F,GAAY,EAAK,UACjBC,GAAY,EACZzD,aAAcwJ,GACf3J,EACC,MAAM,WAAEM,IAAeC,EAAAA,EAAAA,OAChBqJ,EAAWC,IAAgB/N,EAAAA,EAAAA,WAAS,IAG3CwM,EAAAA,EAAAA,WAAU,KACR,MAAMC,EAAQuB,WAAW,IAAMD,GAAa,GAAO,KACnD,MAAO,IAAMpB,cAAcF,IAC1B,IAEH,MAAMwB,EAAcC,IAClB,IAAKA,EAAS,MAAO,GACrB,IACE,MAAMC,EAAI,IAAInD,KAAKkD,GACbE,GAAU,IAAIpD,MAAOqD,cAC3B,OAAOF,EAAEG,mBAAmB,QAASH,EAAEE,gBAAkBD,EAAU,CAAEG,IAAK,UAAWC,MAAO,SAAY,CAAED,IAAK,UAAWC,MAAO,QAASC,KAAM,WAClJ,CAAE,MAAQ,OAAOP,CAAS,GAGtBlJ,EAAY,CAAC0J,IACjB,MAAMzJ,GAA2B,QAApByJ,EAAAvK,EAAQyB,oBAAY,IAAA8I,OAAA,EAApBA,EAAsBvJ,gBAAiB,GACpD,OAAIF,EAAKG,SAAS,cAAsBC,EAAAA,EAAQC,KAC5CL,EAAKG,SAAS,gBAAwBC,EAAAA,EAAQE,OAC9CN,EAAKG,SAAS,YAAoBC,EAAAA,EAAQG,MAC1CP,EAAKG,SAAS,cAAsBC,EAAAA,EAAQI,QAC5CR,EAAKG,SAAS,UAAYH,EAAKG,SAAS,UAAkBC,EAAAA,EAAQK,SAEvE,EARiB,GAUZiJ,EAAe,CAACC,IACpB,MAAM1J,GAAwB,QAApB0J,EAAAzK,EAAQyB,oBAAY,IAAAgJ,OAAA,EAApBA,EAAsBzJ,gBAAiB,GACjD,OAAID,EAAEE,SAAS,cAAsB,WACjCF,EAAEE,SAAS,gBAAwB,QACnCF,EAAEE,SAAS,YAAoB,OAC/BF,EAAEE,SAAS,cAAsB,UACjCF,EAAEE,SAAS,UAAYF,EAAEE,SAAS,UAAkB,OAEzD,EARoB,GAUfyJ,EAAc,aAAa7J,IAC3B8J,EAAkBtK,EAAa,UAAY,yBAE3CuK,EAAcvK,EAAa,yBAA2B,sBACtDwK,EAAaxK,EAAa,wBAA0B,uBAEpDyK,EAAqC,QAAzB9K,EAAQ+K,cAA4B/K,EAAgB0I,UAAa1I,EAAgBgL,MAEnG,OACEtN,EAAAA,EAAAA,MAAAuN,EAAAA,SAAA,CAAAlN,SAAA,EAEEL,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CACVM,SAAU,WACVoF,IAAK,GACLzE,MAAO,GACPT,QAAS,OACTc,WAAY,SACZoD,IAAK,EACLjD,QAAS,WACT4C,aAAc,EACdjD,WAAY4L,EACZxL,OAAQuL,EACR9M,SAAU,KACVoG,WAAY,IACZ/B,QAAS0H,EAAY,IAAO,EAC5B7J,UAAW6J,EAAY,yBAA2B,8BAClD9J,WAAY,yFACZsC,UAzBc,OA0Bd+I,OAAQ,GACRnN,SAAA,CAECiC,EAAQyB,eACP/D,EAAAA,EAAAA,MAAA,OACEC,MAAO,CACLQ,QAAS,OACTc,WAAY,SACZoD,IAAK,EACLvE,MAAO+C,EACP5C,SAAU,WACVmB,QAAS,UACT4C,aAAc,GACdjE,SAAA,EAEFC,EAAAA,EAAAA,KAACyB,EAAAA,EAAI,CAACC,SAAU8K,EAAc7K,OAAQ,CAAEC,KAAM,CAAEhC,SAAU,GAAIqE,QAAS,QACvEjE,EAAAA,EAAAA,KAAA,QAAML,MAAO,CAAE0G,cAAe,YAAaF,cAAe,GAAKvG,SAAU,KAAMoG,WAAY,KAAMjG,SAC1E,QAApBsL,EAAArJ,EAAQyB,oBAAY,IAAA4H,GAApBA,EAAsBrI,cAAcC,SAAS,UAAgC,QAAxBqI,EAAItJ,EAAQyB,oBAAY,IAAA6H,GAApBA,EAAsBtI,cAAcC,SAAS,UAAY,QAAUjB,EAAQyB,kBAM1IzB,EAAQyB,eACPzD,EAAAA,EAAAA,KAAA,QAAML,MAAO,CACX2F,MAAO,EACPzE,OAAQ,EACRmD,aAAc,MACdjD,WAAY,GAAG8B,UAKnB7C,EAAAA,EAAAA,KAAA,OAAKL,MAAO,CACVQ,QAAS,OACTc,WAAY,SACZoD,IAAK,EACL8I,WAAY,EACZ3M,WAAY,SACZV,MAAO+M,EACPjN,SAAU,KACVG,SACC2F,EAECoH,GACEpN,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEQ,QAAS,OAAQc,WAAY,SAAUoD,IAAK,EAAG8I,WAAY,GAAIpN,SAAA,EAC3EC,EAAAA,EAAAA,KAAA,QAAMmL,MAAM,mBAAmBxL,MAAO,CAAEsE,QAAS,GAAKzD,WAAY,UAAWT,SAC1E+L,EAAY9J,EAAgB0I,aAE/B1K,EAAAA,EAAAA,KAACyB,EAAAA,EAAI,CAACC,SAAS,eAAeC,OAAQ,CAAEC,KAAM,CAAEhC,SAAU,EAAGqE,QAAS,QACtEjE,EAAAA,EAAAA,KAAA,QAAMmL,MAAM,UAAUxL,MAAO,CAAEsE,QAAS,EAAGzD,WAAY,UAAWT,SAC/D+L,EAAY9J,EAAgBgL,SAG9B,MACC,IACE,MAAMI,EAAc,IAAIvE,KAAM7G,EAAgB0I,UACxC2C,EAAY,IAAIxE,KAAM7G,EAAgBgL,OAC5C,IAAKjC,MAAMqC,EAAYlE,aAAe6B,MAAMsC,EAAUnE,WAAY,CAChE,MAAMoE,EAAY5E,EAAoB0E,EAAaC,GACnD,OACErN,EAAAA,EAAAA,KAAA,QACEL,MAAO,CACLC,SAAU,EACVE,MAAO,UACPkG,WAAY,IACZG,cAAe,GACf7B,WAAY,8BACZvD,WAAY,wBACZiD,aAAc,EACd5C,QAAS,UACT6C,QAAS,GACTsJ,WAAY,GAEdpC,MAAO,wBAAwBmC,IAAYvN,SAE1CuN,GAGP,CACF,CAAE,MAAO,CACT,OAAO,IACR,EA5BA,OA+BH5N,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEQ,QAAS,OAAQc,WAAY,SAAUoD,IAAK,EAAG8I,WAAY,GAAIpN,SAAA,EAC3EC,EAAAA,EAAAA,KAAA,QAAML,MAAO,CAAEa,WAAY,UAAWT,SAAE+L,EAAW9J,EAAQ4I,oBAC3D5K,EAAAA,EAAAA,KAACyB,EAAAA,EAAI,CAACC,SAAS,YAAYC,OAAQ,CAAEC,KAAM,CAAEhC,SAAU,GAAIE,MAAOoD,EAAAA,EAAQC,aAK9EzD,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEQ,QAAS,OAAQc,WAAY,SAAUoD,IAAK,EAAG8I,WAAY,GAAIpN,SAAA,EAC3EC,EAAAA,EAAAA,KAAA,QAAML,MAAO,CAAEa,WAAY,SAAUV,MAAO8M,GAAc7M,SAAE+L,EAAWgB,EAAa9K,EAAgB0I,SAAW1I,EAAQ4I,oBACrHlF,IAAa1F,EAAAA,EAAAA,KAACmK,EAAmB,CAACnI,QAASA,SAMlDyJ,IACC/L,EAAAA,EAAAA,MAAAuN,EAAAA,SAAA,CAAAlN,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAML,MAAO,CACX2F,MAAO,EACPzE,OAAQ,EACRmD,aAAc,MACdjD,WAAY,GAAG8B,UAEjB7C,EAAAA,EAAAA,KAAA,OAAKL,MAAO,CACV2F,MAAO,GACPzE,OAAQ,GACRmD,aAAc,MACdjD,WAAY,GAAG8B,MACf/C,MAAO+C,EACP1C,QAAS,OACTc,WAAY,SACZuM,eAAgB,SAChBxH,WAAY,IACZpG,SAAU,IACVuB,OAAQ,aAAa0B,OACrB9C,SACC0L,EAAQgC,WAAyB,QAAjBlC,EAAIE,EAAQiC,aAAK,IAAAnC,GAAe,QAAfC,EAAbD,EAAeoC,MAAM,KAAK,UAAE,IAAAnC,OAAf,EAAbA,EAA8BvB,MAAM,EAAE,GAAG2D,uBAOrEjI,GAAa,MACZ,GAAwB,qBAAbkI,WAA6BA,SAASC,eAAe,yBAA0B,CACxF,MAAMC,EAAUF,SAASG,cAAc,SACvCD,EAAQE,GAAK,wBACbF,EAAQG,YAAc,yIACtBL,SAASM,KAAKC,YAAYL,EAC5B,CACA,OAAO,IACR,EARa,M","sources":["utils/claimEnquiry.ts","tabs/enquiries/NewUnclaimedEnquiryCard.tsx","utils/debug.ts","tabs/enquiries/UnclaimedEnquiries.tsx","tabs/enquiries/EnquiryBadge.tsx"],"sourcesContent":["/**\r\n * Client-side API functions for claiming enquiries\r\n */\r\nimport { useState } from 'react';\r\nimport { getProxyBaseUrl } from './getProxyBaseUrl';\r\n\r\ninterface ClaimEnquiryRequest {\r\n    enquiryId: string;\r\n    userEmail: string;\r\n}\r\n\r\ninterface ClaimEnquiryResponse {\r\n    success: boolean;\r\n    message: string;\r\n    enquiryId: string;\r\n    claimedBy: string;\r\n    timestamp: string;\r\n    error?: string;\r\n}\r\n\r\n/**\r\n * Claims an enquiry by updating its Point_of_Contact field\r\n * @param enquiryId The ID of the enquiry to claim\r\n * @param userEmail The email of the user claiming the enquiry\r\n * @returns Promise with the API response\r\n */\r\nexport async function claimEnquiry(enquiryId: string, userEmail: string): Promise<ClaimEnquiryResponse> {\r\n    try {\r\n        // Use the deployed Azure Function with environment variables\r\n        const url = `${getProxyBaseUrl()}/${process.env.REACT_APP_CLAIM_ENQUIRY_PATH}?code=${process.env.REACT_APP_CLAIM_ENQUIRY_CODE}`;\r\n        \r\n        const response = await fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                enquiryId,\r\n                userEmail\r\n            } as ClaimEnquiryRequest)\r\n        });\r\n\r\n        const result: ClaimEnquiryResponse = await response.json();\r\n\r\n        if (!response.ok) {\r\n            throw new Error(result.error || `HTTP ${response.status}: ${response.statusText}`);\r\n        }\r\n\r\n        return result;\r\n    } catch (error) {\r\n        console.error('Error claiming enquiry:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\n/**\r\n * Hook for claiming enquiries with loading and error states\r\n * Usage example in a React component:\r\n * \r\n * const { claimEnquiry, isLoading, error } = useClaimEnquiry();\r\n * \r\n * const handleClaim = async () => {\r\n *   try {\r\n *     await claimEnquiry(enquiry.ID, userEmail);\r\n *     // Refresh enquiries list\r\n *   } catch (err) {\r\n *     // Handle error\r\n *   }\r\n * };\r\n */\r\nexport function useClaimEnquiry() {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    const handleClaimEnquiry = async (enquiryId: string, userEmail: string) => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n\r\n        try {\r\n            const result = await claimEnquiry(enquiryId, userEmail);\r\n            console.log('Enquiry claimed successfully:', result);\r\n            return result;\r\n        } catch (err) {\r\n            const errorMessage = err instanceof Error ? err.message : 'Failed to claim enquiry';\r\n            setError(errorMessage);\r\n            throw err;\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    return {\r\n        claimEnquiry: handleClaimEnquiry,\r\n        isLoading,\r\n        error\r\n    };\r\n}\r\n\r\nexport default { claimEnquiry, useClaimEnquiry };\r\n","import React, { useState } from 'react';\r\nimport { mergeStyles } from '@fluentui/react/lib/Styling';\r\nimport { Text, Icon } from '@fluentui/react';\r\nimport { Enquiry } from '../../app/functionality/types';\r\nimport { colours } from '../../app/styles/colours';\r\nimport { useTheme } from '../../app/functionality/ThemeContext';\r\nimport EnquiryBadge from './EnquiryBadge';\r\nimport { useClaimEnquiry } from '../../utils/claimEnquiry';\r\n\r\ninterface Props {\r\n  enquiry: Enquiry & { __sourceType?: 'new' | 'legacy' };\r\n  onSelect: (enquiry: Enquiry) => void;\r\n  onRate: (id: string) => void;\r\n  onAreaChange?: (enquiryId: string, newArea: string) => void | Promise<void>;\r\n  isLast: boolean;\r\n  userEmail?: string;\r\n  onClaimSuccess?: () => void;\r\n  promotionStatus?: 'pitch' | 'instruction' | null;\r\n}\r\n\r\n/**\r\n * Dedicated card for NEW source unclaimed enquiries (team@helix-law.com)\r\n * - Only Claim is enabled; Delegate/Triage/Redirect/Can't Assist are disabled with no handlers.\r\n */\r\n\r\n// --- Notes formatting & clamp ---\r\nfunction normalizeNotes(raw: string): string {\r\n  let s = raw.replace(/\\\\n/g, '\\n').replace(/\\r\\n/g, '\\n');\r\n  s = s.replace(/\\n{3,}/g, '\\n\\n');\r\n  return s.trim();\r\n}\r\n\r\ninterface EnquiryNotesClampProps { notes: string; isDark: boolean; forceExpand?: boolean }\r\nconst EnquiryNotesClamp: React.FC<EnquiryNotesClampProps> = ({ notes, isDark, forceExpand }) => {\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const [showChevron, setShowChevron] = React.useState(false);\r\n  const clampRef = React.useRef<HTMLDivElement>(null);\r\n  const [isOverflowing, setIsOverflowing] = React.useState(false);\r\n\r\n  React.useEffect(() => { if (forceExpand) setExpanded(true); }, [forceExpand]);\r\n  React.useEffect(() => {\r\n    if (!expanded && clampRef.current) {\r\n      const el = clampRef.current;\r\n      const overflowing = el.scrollHeight > el.clientHeight + 1;\r\n      setShowChevron(overflowing);\r\n      setIsOverflowing(overflowing);\r\n    } else if (expanded) {\r\n      setShowChevron(true);\r\n      setIsOverflowing(false);\r\n    }\r\n  }, [notes, expanded]);\r\n\r\n  return (\r\n    <div style={{ fontSize: 11, lineHeight: 1.4, color: isDark ? 'rgba(255,255,255,0.75)' : 'rgba(0,0,0,0.75)' }}>\r\n      {expanded ? (\r\n        <div aria-live=\"polite\">{normalizeNotes(notes)}</div>\r\n      ) : (\r\n        <div style={{ position: 'relative' }}>\r\n          <div\r\n            ref={clampRef}\r\n            style={{\r\n              display: '-webkit-box', WebkitLineClamp: 3, WebkitBoxOrient: 'vertical', overflow: 'hidden',\r\n              textOverflow: 'ellipsis', whiteSpace: 'pre-line', maxHeight: 57\r\n            }}\r\n            aria-hidden={expanded}\r\n          >\r\n            {normalizeNotes(notes)}\r\n          </div>\r\n          {isOverflowing && (\r\n            <div\r\n              style={{ position: 'absolute', bottom: 0, left: 0, right: 0, height: 18, pointerEvents: 'none',\r\n                background: isDark\r\n                  ? 'linear-gradient(to bottom, rgba(15,23,42,0), rgba(15,23,42,1))' // Match the card background #0f172a\r\n                  : 'linear-gradient(to bottom, rgba(255,255,255,0), rgba(255,255,255,0.95))' }}\r\n            />\r\n          )}\r\n        </div>\r\n      )}\r\n      {showChevron && (\r\n        <button\r\n          type=\"button\"\r\n          style={{ display: 'inline-flex', alignItems: 'center', cursor: 'pointer', color: '#7a869a', background: 'transparent', border: 'none', padding: 2 }}\r\n          onClick={(e) => { e.stopPropagation(); setExpanded(v => !v); }}\r\n          aria-expanded={expanded}\r\n          aria-label={expanded ? 'Collapse notes' : 'Expand notes'}\r\n        >\r\n          <Icon iconName=\"ChevronDown\" styles={{ root: { transition: 'transform 0.2s', transform: expanded ? 'rotate(-180deg)' : 'rotate(0deg)', fontSize: 14 } }} />\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// --- Card ---\r\nconst getAreaColour = (area?: string) => {\r\n  const a = area?.toLowerCase() || '';\r\n  if (a.includes('commercial')) return colours.blue;\r\n  if (a.includes('construction')) return colours.orange;\r\n  if (a.includes('property')) return colours.green;\r\n  if (a.includes('employment')) return colours.yellow;\r\n  if (a.includes('other') || a.includes('unsure')) return colours.greyText;\r\n  return colours.greyText;\r\n};\r\n\r\nconst NewUnclaimedEnquiryCard: React.FC<Props> = ({ enquiry, onSelect, onAreaChange, userEmail, onClaimSuccess, promotionStatus }) => {\r\n  const { isDarkMode } = useTheme();\r\n  const [selected, setSelected] = useState(false);\r\n  const [showActions, setShowActions] = useState(false);\r\n  const { claimEnquiry, isLoading, error } = useClaimEnquiry();\r\n  const [justClaimed, setJustClaimed] = useState(false);\r\n\r\n  const areaColor = getAreaColour(enquiry.Area_of_Work);\r\n\r\n  // Enhanced styling to match instruction cards - code-like dark mode with clean design\r\n  const bgGradientLight = 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)';\r\n  \r\n  const selectedBg = isDarkMode \r\n    ? `#1e293b` // Solid dark blue-grey for code-like feel\r\n    : `linear-gradient(135deg, #ffffff 0%, #f8fafc 100%)`;\r\n  \r\n  const selectedBorder = isDarkMode\r\n    ? `1px solid ${areaColor}`\r\n    : `1px solid ${areaColor}`;\r\n    \r\n  const selectedShadow = isDarkMode\r\n    ? `0 1px 3px rgba(0,0,0,0.8)` // Minimal shadow in dark mode\r\n    : `0 8px 32px ${areaColor}25, 0 4px 16px rgba(0,0,0,0.08), inset 0 1px 0 rgba(255,255,255,0.8)`;\r\n\r\n  const container = mergeStyles({\r\n    position: 'relative',\r\n    margin: '6px 0', // Reduced margin to match instruction cards\r\n    borderRadius: 8,\r\n    padding: '12px 18px',\r\n    background: selected \r\n      ? selectedBg\r\n      : (isDarkMode ? '#0f172a' : bgGradientLight), // Solid dark background to match instruction cards\r\n    opacity: promotionStatus ? 0.6 : 1,\r\n    // Responsive padding\r\n    '@media (max-width: 768px)': {\r\n      padding: '10px 14px',\r\n    },\r\n    '@media (max-width: 480px)': {\r\n      padding: '8px 12px',\r\n      borderRadius: 6,\r\n    },\r\n    border: selected || showActions \r\n      ? selectedBorder\r\n      : `1px solid ${isDarkMode ? 'rgba(148,163,184,0.2)' : 'rgba(0,0,0,0.08)'}`,\r\n    borderLeft: `2px solid ${selected ? areaColor : (isDarkMode ? areaColor : `${areaColor}60`)}`, // Override just the left side\r\n    boxShadow: selected\r\n      ? selectedShadow\r\n      : (isDarkMode ? 'none' : '0 4px 6px rgba(0, 0, 0, 0.07)'),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: 6,\r\n    fontFamily: 'Raleway, sans-serif',\r\n    cursor: 'pointer',\r\n    transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n    marginBottom: 4,\r\n    overflow: 'hidden',\r\n    transform: selected ? 'translateY(-2px)' : 'translateY(0)',\r\n    selectors: {\r\n      ':hover': {\r\n        transform: selected ? 'translateY(-3px)' : 'translateY(-1px)', \r\n        boxShadow: selected \r\n          ? (isDarkMode ? `0 2px 8px rgba(0,0,0,0.9)` : `0 12px 40px ${areaColor}50, 0 4px 12px rgba(0,0,0,0.15), inset 0 1px 0 rgba(255,255,255,0.2)`)\r\n          : (isDarkMode ? '0 1px 3px rgba(0,0,0,0.6)' : '0 8px 24px rgba(0,0,0,0.12)'),\r\n        border: `1px solid ${areaColor}`, // Change the main border to area color on hover\r\n        borderLeft: `2px solid ${areaColor}`, // Keep left border consistent\r\n      },\r\n      ':active': { transform: selected ? 'translateY(-1px)' : 'translateY(0)' },\r\n      ':focus-within': { \r\n        outline: `2px solid ${areaColor}40`, // Thinner outline\r\n        outlineOffset: '2px',\r\n        borderColor: areaColor \r\n      },\r\n    },\r\n  });\r\n\r\n  const handleSelect = () => {\r\n    setSelected(true);\r\n    setShowActions(true);\r\n    onSelect(enquiry);\r\n  };\r\n\r\n  const handleClaim = async (e: React.MouseEvent) => {\r\n    e.stopPropagation();\r\n    if (!userEmail || !enquiry.ID) {\r\n      console.error('Missing userEmail or enquiry ID for claim');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const result = await claimEnquiry(enquiry.ID, userEmail);\r\n      if (result.success) {\r\n        console.log('✅ Enquiry claimed successfully');\r\n        setJustClaimed(true);\r\n        setShowActions(true);\r\n        // Trigger refresh to move enquiry from unclaimed to claimed list\r\n        if (onClaimSuccess) {\r\n          onClaimSuccess();\r\n        }\r\n      } else {\r\n        console.error('❌ Failed to claim enquiry:', result.error);\r\n      }\r\n    } catch (err) {\r\n      console.error('❌ Error claiming enquiry:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={container}\r\n      onMouseEnter={() => setShowActions(true)}\r\n      onMouseLeave={() => { if (!selected) setShowActions(false); }}\r\n      onClick={handleSelect}\r\n      role=\"article\"\r\n      tabIndex={0}\r\n      aria-label=\"Unclaimed enquiry (new data)\"\r\n    >\r\n      {/* Left accent */}\r\n      <span style={{\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        bottom: 0,\r\n        width: 2,\r\n        background: areaColor,\r\n        opacity: .95,\r\n        pointerEvents: 'none',\r\n        borderTopLeftRadius: 12,\r\n        borderBottomLeftRadius: 12,\r\n      }} />\r\n\r\n      {/* Badge */}\r\n      <EnquiryBadge enquiry={enquiry} isClaimed={false} showPulse={true} onAreaChange={onAreaChange} />\r\n\r\n      {/* Header */}\r\n      <div style={{ display: 'flex', alignItems: 'center', gap: 8, marginTop: 8 }}>\r\n        <span\r\n          aria-hidden=\"true\"\r\n          style={{\r\n            width: 5,\r\n            height: 5,\r\n            borderRadius: '50%',\r\n            background: areaColor,\r\n            boxShadow: `0 0 0 3px ${areaColor}33`,\r\n            animation: 'pulseEnquiry 1.8s ease-in-out infinite',\r\n            display: 'inline-block'\r\n          }}\r\n        />\r\n        <Text variant=\"medium\" styles={{ root: { fontWeight: 600, color: isDarkMode ? '#fff' : '#0d2538', lineHeight: 1.2 } }}>\r\n          {(enquiry.First_Name || '') + ' ' + (enquiry.Last_Name || '')}\r\n        </Text>\r\n        {enquiry.ID && (\r\n          <span style={{ fontSize: 11, color: isDarkMode ? 'rgba(255,255,255,0.55)' : '#8aa0b3', fontWeight: 500, letterSpacing: 0.4 }}>\r\n            ID {enquiry.ID}\r\n          </span>\r\n        )}\r\n        {promotionStatus && (\r\n          <span style={{\r\n            fontSize: 10,\r\n            fontWeight: 500,\r\n            padding: '2px 6px',\r\n            borderRadius: 4,\r\n            backgroundColor: promotionStatus === 'instruction' ? (isDarkMode ? 'rgba(76, 175, 80, 0.15)' : 'rgba(232, 245, 232, 0.6)') : (isDarkMode ? 'rgba(33, 150, 243, 0.15)' : 'rgba(227, 242, 253, 0.6)'),\r\n            color: promotionStatus === 'instruction' ? (isDarkMode ? 'rgba(76, 175, 80, 0.8)' : 'rgba(46, 125, 50, 0.7)') : (isDarkMode ? 'rgba(33, 150, 243, 0.8)' : 'rgba(21, 101, 192, 0.7)'),\r\n            textTransform: 'uppercase',\r\n            letterSpacing: 0.5,\r\n            opacity: 0.85\r\n          }}>\r\n            {promotionStatus === 'instruction' ? 'Instructed' : 'Pitched'}\r\n          </span>\r\n        )}\r\n      </div>\r\n\r\n      {/* Meta */}\r\n      <div style={{\r\n        display: 'flex',\r\n        gap: 12,\r\n        fontSize: 11,\r\n        color: isDarkMode ? 'rgba(255,255,255,0.65)' : 'rgba(0,0,0,0.65)',\r\n        fontWeight: 500,\r\n        marginTop: 6,\r\n      }}>\r\n        {enquiry.Value && <span style={{ fontWeight: 600 }}>{enquiry.Value}</span>}\r\n      </div>\r\n\r\n      {/* Notes */}\r\n      {enquiry.Initial_first_call_notes && (\r\n        <div style={{ marginTop: 6, marginBottom: 4 }}>\r\n          <EnquiryNotesClamp notes={enquiry.Initial_first_call_notes} isDark={isDarkMode} forceExpand={selected} />\r\n        </div>\r\n      )}\r\n\r\n      {/* Actions */}\r\n      <div style={{\r\n        display: 'flex', \r\n        flexDirection: 'column', \r\n        marginTop: 8,\r\n        transition: 'max-height 0.35s cubic-bezier(.4,0,.2,1), padding 0.35s cubic-bezier(.4,0,.2,1)',\r\n        maxHeight: showActions || selected ? 70 : 0,\r\n        paddingTop: showActions || selected ? 4 : 0,\r\n        paddingBottom: showActions || selected ? 8 : 0,\r\n        overflow: 'hidden',\r\n      }}>\r\n        <div style={{ display: 'flex', gap: 8, flexWrap: 'wrap' }}>\r\n          {(() => {\r\n            const buttons = [\r\n              { key: 'claim', label: 'Claim', colourType: 'primary', disabled: false },\r\n              { key: 'delegate', label: 'Delegate', colourType: 'blue', disabled: true },\r\n              { key: 'triage', label: 'Triage', colourType: 'blue', disabled: true },\r\n              { key: 'redirect', label: 'Redirect', colourType: 'yellow', disabled: true },\r\n              { key: 'cant', label: \"Can't Assist\", colourType: 'red', disabled: true },\r\n            ] as const;\r\n            return buttons.map((btn, idx) => {\r\n              const delay = (showActions || selected) ? 120 + idx * 70 : (buttons.length - 1 - idx) * 65;\r\n              const baseColour = btn.key === 'claim' ? colours.blue : btn.colourType === 'yellow' ? '#FFD600' : btn.colourType === 'red' ? colours.cta : colours.blue;\r\n              const isClaim = btn.key === 'claim';\r\n              return (\r\n                <button\r\n                  key={btn.key}\r\n                  onClick={btn.disabled ? undefined : (btn.key === 'claim' ? (justClaimed ? undefined : handleClaim) : (e => { e.stopPropagation(); handleSelect(); }))}\r\n                  disabled={btn.disabled || (btn.key === 'claim' && (isLoading || justClaimed))}\r\n                  className={mergeStyles({\r\n                    background: isClaim && (selected || justClaimed) ? baseColour : 'transparent',\r\n                    color: btn.disabled || (btn.key === 'claim' && (isLoading || justClaimed)) ? '#9aa4b1' : (isClaim ? ((selected || justClaimed) ? '#fff' : baseColour) : colours.greyText),\r\n                    border: `1.5px solid ${isClaim ? baseColour : 'transparent'}`,\r\n                    padding: '6px 14px',\r\n                    borderRadius: 20,\r\n                    fontSize: 11,\r\n                    fontWeight: 600,\r\n                    cursor: btn.disabled || (btn.key === 'claim' && (isLoading || justClaimed)) ? 'not-allowed' : 'pointer',\r\n                    opacity: showActions || selected ? 1 : 0,\r\n                    transform: showActions || selected ? 'translateY(0) scale(1)' : 'translateY(6px) scale(.96)',\r\n                    transition: 'opacity .4s cubic-bezier(.4,0,.2,1), transform .4s cubic-bezier(.4,0,.2,1), background .25s, color .25s, border .25s, border-radius .35s cubic-bezier(.4,0,.2,1)',\r\n                    transitionDelay: `${delay}ms`,\r\n                    selectors: {\r\n                      ':hover': !btn.disabled && btn.key !== 'claim' ? { \r\n                        background: '#f4f6f8', \r\n                        color: colours.blue, \r\n                        borderRadius: 6 \r\n                      } : btn.key === 'claim' && !btn.disabled && !justClaimed ? {\r\n                        background: colours.blue,\r\n                        color: '#fff',\r\n                        borderRadius: 6\r\n                      } : {},\r\n                      ':active': !btn.disabled ? { \r\n                        transform: 'scale(0.95)',\r\n                        borderRadius: 6 \r\n                      } : {},\r\n                    },\r\n                  })}\r\n                >{btn.key === 'claim' ? (isLoading ? 'Claiming...' : (justClaimed ? 'Claimed' : 'Claim')) : btn.label}</button>\r\n              );\r\n            });\r\n          })()}\r\n        </div>\r\n        {justClaimed && (\r\n          <div\r\n            role=\"status\"\r\n            aria-live=\"polite\"\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              gap: 6,\r\n              marginTop: 8,\r\n              color: isDarkMode ? '#4CAF50' : '#107C10',\r\n              fontSize: 12,\r\n              fontWeight: 600\r\n            }}\r\n          >\r\n            <Icon iconName=\"CheckMark\" styles={{ root: { fontSize: 14 } }} />\r\n            <span>Claimed. Moving to Claimed list…</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewUnclaimedEnquiryCard;\r\n","/**\r\n * Lightweight debug logger gated by REACT_APP_DEBUG_LOGS.\r\n * Set REACT_APP_DEBUG_LOGS=true to enable verbose logs locally.\r\n */\r\nexport const isDebugLogs = (): boolean => process.env.REACT_APP_DEBUG_LOGS === 'true';\r\n\r\nexport const debugLog = (...args: unknown[]): void => {\r\n  if (isDebugLogs()) console.log(...args);\r\n};\r\n\r\nexport const debugWarn = (...args: unknown[]): void => {\r\n  if (isDebugLogs()) console.warn(...args);\r\n};\r\n","import React from 'react';\r\nimport { Stack, Text } from '@fluentui/react';\r\nimport { Enquiry } from '../../app/functionality/types';\r\nimport NewUnclaimedEnquiryCard from './NewUnclaimedEnquiryCard';\r\n\r\ninterface UnclaimedEnquiriesProps {\r\n    enquiries: Enquiry[];\r\n    onSelect: (enquiry: Enquiry) => void;\r\n    userEmail: string | undefined;\r\n    onAreaChange: (enquiryId: string, newArea: string) => Promise<void> | void;\r\n    onClaimSuccess?: () => void;\r\n    getPromotionStatusSimple?: (enquiry: Enquiry) => 'pitch' | 'instruction' | null;\r\n}\r\n\r\nconst UnclaimedEnquiries: React.FC<UnclaimedEnquiriesProps> = ({ enquiries, onSelect, userEmail, onAreaChange, onClaimSuccess, getPromotionStatusSimple }) => {\r\n\r\n    if (!enquiries || enquiries.length === 0) {\r\n        return (\r\n            <Text\r\n                variant=\"medium\"\r\n                styles={{ root: { textAlign: 'center', marginTop: 20 } }}\r\n            >\r\n                No unclaimed enquiries.\r\n            </Text>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Stack\r\n            tokens={{ childrenGap: 20 }}\r\n            styles={{ root: { padding: '20px' } }}\r\n        >\r\n            {enquiries.map((enquiry, index) => (\r\n                <NewUnclaimedEnquiryCard\r\n                    key={`${enquiry.ID}-${index}`}\r\n                    enquiry={enquiry}\r\n                    onSelect={onSelect}\r\n                    onRate={() => { /* no-op for unclaimed cards */ }}\r\n                    isLast={index === enquiries.length - 1}\r\n                    onAreaChange={onAreaChange}\r\n                    userEmail={userEmail || ''}\r\n                    onClaimSuccess={onClaimSuccess}\r\n                    promotionStatus={getPromotionStatusSimple ? getPromotionStatusSimple(enquiry) : null}\r\n                />\r\n            ))}\r\n        </Stack>\r\n    );\r\n};\r\n\r\nexport default UnclaimedEnquiries;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Icon } from '@fluentui/react';\r\nimport { Enquiry } from '../../app/functionality/types';\r\nimport { useTheme } from '../../app/functionality/ThemeContext';\r\nimport { colours } from '../../app/styles/colours';\r\nimport { parseISO, isToday, format } from 'date-fns';\r\n\r\n// Live breakdown: Y, M, W, D, H, with minutes for same day and seconds if under 1 hour\r\nfunction formatLiveBreakdown(from: Date, now: Date = new Date()): string {\r\n  let diff = Math.max(0, Math.floor((now.getTime() - from.getTime()) / 1000));\r\n  const totalSeconds = diff;\r\n  const S = diff % 60; diff = Math.floor(diff / 60);\r\n  const M = diff % 60; diff = Math.floor(diff / 60);\r\n  const H = diff % 24; diff = Math.floor(diff / 24);\r\n  const D = diff % 7; diff = Math.floor(diff / 7);\r\n  const W = diff % 4; diff = Math.floor(diff / 4);\r\n  const Mo = diff % 12; diff = Math.floor(diff / 12);\r\n  const Y = diff;\r\n  \r\n  const isUnderOneHour = totalSeconds < 3600; // Less than 1 hour\r\n  const isSameDay = from.toDateString() === now.toDateString(); // Same calendar day\r\n\r\n  const totalMonths = Y * 12 + Mo;\r\n  const displayParts: string[] = [];\r\n\r\n  if (totalMonths > 0) {\r\n    displayParts.push(totalMonths + 'M');\r\n    if (W > 0) displayParts.push(W + 'W');\r\n  } else if (W > 0) {\r\n    displayParts.push(W + 'W');\r\n    if (D > 0) displayParts.push(D + 'D');\r\n  } else if (D > 0) {\r\n    displayParts.push(D + 'D');\r\n    if (H > 0) displayParts.push(H + 'H');\r\n  } else if (H > 0) {\r\n    displayParts.push(H + 'H');\r\n    if (isSameDay && M > 0) displayParts.push(M + 'M');\r\n  } else if (M > 0) {\r\n    displayParts.push(M + 'M');\r\n    if (isUnderOneHour && S > 0) displayParts.push(S + 'S');\r\n  } else if (isUnderOneHour && S > 0) {\r\n    displayParts.push(S + 'S');\r\n  }\r\n\r\n  if (displayParts.length === 0) displayParts.push('0M');\r\n\r\n  return displayParts.slice(0, 2).join(' ');\r\n}\r\n\r\n/**\r\n * Live ticking badge showing multi-unit age (Y M W D H M S).\r\n */\r\nfunction LiveEnquiryAgeBadge({ enquiry }: { enquiry: Enquiry | any }) {\r\n  const [now, setNow] = useState<Date>(() => new Date());\r\n  useEffect(() => {\r\n    const timer = setInterval(() => setNow(new Date()), 1000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  const rawTs: string | undefined = (enquiry as any).datetime || enquiry.Date_Created || (enquiry as any).Touchpoint_Date;\r\n  if (!rawTs) return null;\r\n  \r\n  let dateObj: Date | null = null;\r\n  try {\r\n    dateObj = parseISO(rawTs);\r\n    if (isNaN(dateObj.getTime())) dateObj = new Date(rawTs);\r\n  } catch {\r\n    try { dateObj = new Date(rawTs); } catch { dateObj = null; }\r\n  }\r\n  if (!dateObj || isNaN(dateObj.getTime())) return null;\r\n\r\n  const liveStr = formatLiveBreakdown(dateObj, now);\r\n  return (\r\n    <span\r\n      style={{\r\n        fontSize: 9.5,\r\n        color: 'rgba(117, 132, 158, 0.95)',\r\n  fontWeight: 500,\r\n        letterSpacing: 0.5,\r\n        userSelect: 'all',\r\n        fontFamily: 'Consolas, Monaco, monospace',\r\n  background: 'rgba(148, 174, 220, 0.12)',\r\n        borderRadius: 4,\r\n        padding: '2px 6px',\r\n        display: 'inline-block',\r\n        whiteSpace: 'nowrap',\r\n        verticalAlign: 'middle',\r\n        opacity: 0.95\r\n      }}\r\n      title={format(dateObj, 'yyyy-MM-dd HH:mm')}\r\n    >{liveStr}</span>\r\n  );\r\n}\r\n\r\ninterface TeamDataRec {\r\n  Email?: string;\r\n  Initials?: string;\r\n  'Full Name'?: string;\r\n}\r\n\r\ninterface Props {\r\n  enquiry: Enquiry & { __sourceType?: 'new' | 'legacy' };\r\n  claimer?: TeamDataRec | undefined;\r\n  isClaimed?: boolean;\r\n  showPulse?: boolean;\r\n  onAreaChange?: (enquiryId: string, newArea: string) => void | Promise<void>;\r\n}\r\n\r\n/**\r\n * EnquiryBadge\r\n * Clean, unified pill component for the top-right badge area with cascade animation.\r\n * Apple-style single container housing area + dates + claimer.\r\n */\r\nconst EnquiryBadge: React.FC<Props> = ({ \r\n  enquiry, \r\n  claimer, \r\n  isClaimed = false,\r\n  showPulse = false,\r\n  onAreaChange: _onAreaChange\r\n}) => {\r\n  const { isDarkMode } = useTheme();\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  // Cascade animation on mount\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => setIsVisible(true), 100);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  const formatDate = (dateStr: string) => {\r\n    if (!dateStr) return '';\r\n    try {\r\n      const d = new Date(dateStr);\r\n      const nowYear = new Date().getFullYear();\r\n      return d.toLocaleDateString('en-GB', d.getFullYear() === nowYear ? { day: '2-digit', month: 'short' } : { day: '2-digit', month: 'short', year: 'numeric' });\r\n    } catch { return dateStr; }\r\n  };\r\n\r\n  const areaColor = (() => {\r\n    const area = enquiry.Area_of_Work?.toLowerCase() || '';\r\n    if (area.includes('commercial')) return colours.blue;\r\n    if (area.includes('construction')) return colours.orange;\r\n    if (area.includes('property')) return colours.green;\r\n    if (area.includes('employment')) return colours.yellow;\r\n    if (area.includes('other') || area.includes('unsure')) return colours.greyText;\r\n    return colours.greyText;\r\n  })();\r\n\r\n  const areaIconName = (() => {\r\n    const a = enquiry.Area_of_Work?.toLowerCase() || '';\r\n    if (a.includes('commercial')) return 'CityNext'; // Commercial law - business/work\r\n    if (a.includes('construction')) return 'Build';\r\n    if (a.includes('property')) return 'Home';\r\n    if (a.includes('employment')) return 'People';\r\n    if (a.includes('other') || a.includes('unsure')) return 'Help';\r\n    return 'Help';\r\n  })();\r\n\r\n  const badgeBorder = `1px solid ${areaColor}`;\r\n  const badgeBackground = isDarkMode ? '#1e293b' : 'rgba(255,255,255,0.95)';\r\n  const badgeShadow = 'none'; // Simplified - no shadows\r\n  const neutralText = isDarkMode ? 'rgba(255,255,255,0.88)' : 'rgba(18,34,54,0.88)';\r\n  const subtleText = isDarkMode ? 'rgba(225,232,245,0.8)' : 'rgba(76,90,110,0.85)';\r\n\r\n  const isNewData = enquiry.__sourceType === 'new' || ((enquiry as any).datetime && (enquiry as any).claim);\r\n\r\n  return (\r\n    <>\r\n      {/* Single unified pill container - compact design */}\r\n      <div style={{ \r\n        position: 'absolute', \r\n        top: 10, \r\n        right: 10, \r\n        display: 'flex', \r\n        alignItems: 'center',\r\n        gap: 8,\r\n        padding: '6px 12px',\r\n        borderRadius: 8,\r\n        background: badgeBackground,\r\n        border: badgeBorder,\r\n        fontSize: 10.5,\r\n        fontWeight: 500,\r\n        opacity: isVisible ? 0.97 : 0,\r\n        transform: isVisible ? 'translateX(0) scale(1)' : 'translateX(8px) scale(0.99)',\r\n        transition: 'opacity 0.35s ease, transform 0.35s ease, background 0.3s ease, border-color 0.3s ease',\r\n        boxShadow: badgeShadow,\r\n        zIndex: 1\r\n      }}>\r\n        {/* Area icon + label - clickable for reassignment */}\r\n        {enquiry.Area_of_Work && (\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              gap: 4,\r\n              color: areaColor,\r\n              position: 'relative',\r\n              padding: '2px 4px',\r\n              borderRadius: 5,\r\n            }}\r\n          >\r\n            <Icon iconName={areaIconName} styles={{ root: { fontSize: 12, opacity: 0.9 } }} />\r\n            <span style={{ textTransform: 'uppercase', letterSpacing: 0.5, fontSize: 10.5, fontWeight: 600 }}>\r\n              {enquiry.Area_of_Work?.toLowerCase().includes('other') || enquiry.Area_of_Work?.toLowerCase().includes('unsure') ? 'Other' : enquiry.Area_of_Work}\r\n            </span>\r\n          </div>\r\n        )}\r\n\r\n        {/* Separator dot - more subtle */}\r\n        {enquiry.Area_of_Work && (\r\n          <span style={{ \r\n            width: 2, \r\n            height: 2, \r\n            borderRadius: '50%', \r\n            background: `${areaColor}80`\r\n          }} />\r\n        )}\r\n\r\n        {/* Date section - timeline effect for claimed new data */}\r\n        <div style={{ \r\n          display: 'flex', \r\n          alignItems: 'center', \r\n          gap: 4,\r\n          flexShrink: 0,\r\n          whiteSpace: 'nowrap',\r\n          color: subtleText,\r\n          fontSize: 9.5\r\n        }}>\r\n          {isClaimed ? (\r\n            // Claimed: timeline effect for new, single date + tick for legacy\r\n            isNewData ? (\r\n              <div style={{ display: 'flex', alignItems: 'center', gap: 4, flexShrink: 0 }}>\r\n                <span title=\"Enquiry received\" style={{ opacity: 0.9, whiteSpace: 'nowrap' }}>\r\n                  {formatDate((enquiry as any).datetime)}\r\n                </span>\r\n                <Icon iconName=\"ChevronRight\" styles={{ root: { fontSize: 8, opacity: 0.5 } }} />\r\n                <span title=\"Claimed\" style={{ opacity: 1, whiteSpace: 'nowrap' }}>\r\n                  {formatDate((enquiry as any).claim)}\r\n                </span>\r\n                {/* Show time taken to claim */}\r\n                {(() => {\r\n                  try {\r\n                    const enquiryDate = new Date((enquiry as any).datetime);\r\n                    const claimDate = new Date((enquiry as any).claim);\r\n                    if (!isNaN(enquiryDate.getTime()) && !isNaN(claimDate.getTime())) {\r\n                      const timeTaken = formatLiveBreakdown(enquiryDate, claimDate);\r\n                      return (\r\n                        <span\r\n                          style={{\r\n                            fontSize: 9,\r\n                            color: '#b0b8c9',\r\n                            fontWeight: 500,\r\n                            letterSpacing: 0.8,\r\n                            fontFamily: 'Consolas, Monaco, monospace',\r\n                            background: 'rgba(180,200,255,0.1)',\r\n                            borderRadius: 4,\r\n                            padding: '1px 4px',\r\n                            opacity: 0.9,\r\n                            marginLeft: 4\r\n                          }}\r\n                          title={`Time taken to claim: ${timeTaken}`}\r\n                        >\r\n                          {timeTaken}\r\n                        </span>\r\n                      );\r\n                    }\r\n                  } catch {}\r\n                  return null;\r\n                })()}\r\n              </div>\r\n            ) : (\r\n              <div style={{ display: 'flex', alignItems: 'center', gap: 4, flexShrink: 0 }}>\r\n                <span style={{ whiteSpace: 'nowrap' }}>{formatDate(enquiry.Touchpoint_Date)}</span>\r\n                <Icon iconName=\"CheckMark\" styles={{ root: { fontSize: 10, color: colours.blue } }} />\r\n              </div>\r\n            )\r\n          ) : (\r\n            // Unclaimed: just the enquiry date + live age\r\n            <div style={{ display: 'flex', alignItems: 'center', gap: 4, flexShrink: 0 }}>\r\n              <span style={{ whiteSpace: 'nowrap', color: neutralText }}>{formatDate(isNewData ? (enquiry as any).datetime : enquiry.Touchpoint_Date)}</span>\r\n              {!isClaimed && <LiveEnquiryAgeBadge enquiry={enquiry} />}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Claimer initials */}\r\n        {claimer && (\r\n          <>\r\n            <span style={{ \r\n              width: 2, \r\n              height: 2, \r\n              borderRadius: '50%', \r\n              background: `${areaColor}66`\r\n            }} />\r\n            <div style={{ \r\n              width: 22, \r\n              height: 22, \r\n              borderRadius: '50%', \r\n              background: `${areaColor}14`,\r\n              color: areaColor, \r\n              display: 'flex', \r\n              alignItems: 'center', \r\n              justifyContent: 'center', \r\n              fontWeight: 600, \r\n              fontSize: 9.5,\r\n              border: `1px solid ${areaColor}32`\r\n            }}>\r\n              {claimer.Initials || claimer.Email?.split('@')[0]?.slice(0,2).toUpperCase()}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      {/* Inject pulse keyframes once */}\r\n      {showPulse && (() => {\r\n        if (typeof document !== 'undefined' && !document.getElementById('pulseEnquiryKeyframes')) {\r\n          const styleEl = document.createElement('style');\r\n          styleEl.id = 'pulseEnquiryKeyframes';\r\n          styleEl.textContent = '@keyframes pulseEnquiry {0%{transform:scale(.85);opacity:.6}50%{transform:scale(1.25);opacity:1}100%{transform:scale(.85);opacity:.6}}';\r\n          document.head.appendChild(styleEl);\r\n        }\r\n        return null;\r\n      })()}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EnquiryBadge;\r\n"],"names":["async","claimEnquiry","enquiryId","userEmail","url","getProxyBaseUrl","process","REACT_APP_CLAIM_ENQUIRY_PATH","REACT_APP_CLAIM_ENQUIRY_CODE","response","fetch","method","headers","body","JSON","stringify","result","json","ok","Error","error","status","statusText","console","useClaimEnquiry","isLoading","setIsLoading","useState","setError","log","err","errorMessage","message","normalizeNotes","raw","s","replace","trim","EnquiryNotesClamp","_ref","notes","isDark","forceExpand","expanded","setExpanded","React","showChevron","setShowChevron","clampRef","isOverflowing","setIsOverflowing","current","el","overflowing","scrollHeight","clientHeight","_jsxs","style","fontSize","lineHeight","color","children","_jsx","position","ref","display","WebkitLineClamp","WebkitBoxOrient","overflow","textOverflow","whiteSpace","maxHeight","bottom","left","right","height","pointerEvents","background","type","alignItems","cursor","border","padding","onClick","e","stopPropagation","v","Icon","iconName","styles","root","transition","transform","_ref2","enquiry","onSelect","onAreaChange","onClaimSuccess","promotionStatus","isDarkMode","useTheme","selected","setSelected","showActions","setShowActions","justClaimed","setJustClaimed","areaColor","area","a","toLowerCase","includes","colours","blue","orange","green","yellow","greyText","getAreaColour","Area_of_Work","selectedBg","selectedBorder","selectedShadow","container","mergeStyles","margin","borderRadius","opacity","borderLeft","boxShadow","flexDirection","gap","fontFamily","marginBottom","selectors","outline","outlineOffset","borderColor","handleSelect","handleClaim","ID","success","className","onMouseEnter","onMouseLeave","role","tabIndex","top","width","borderTopLeftRadius","borderBottomLeftRadius","EnquiryBadge","isClaimed","showPulse","marginTop","animation","Text","variant","fontWeight","First_Name","Last_Name","letterSpacing","backgroundColor","textTransform","Value","Initial_first_call_notes","paddingTop","paddingBottom","flexWrap","buttons","key","label","colourType","disabled","map","btn","idx","delay","length","baseColour","cta","isClaim","undefined","transitionDelay","isDebugLogs","REACT_APP_DEBUG_LOGS","debugLog","arguments","debugWarn","warn","enquiries","getPromotionStatusSimple","Stack","tokens","childrenGap","index","NewUnclaimedEnquiryCard","onRate","isLast","textAlign","formatLiveBreakdown","from","now","Date","diff","Math","max","floor","getTime","totalSeconds","S","M","H","D","W","Mo","Y","isUnderOneHour","isSameDay","toDateString","totalMonths","displayParts","push","slice","join","LiveEnquiryAgeBadge","setNow","useEffect","timer","setInterval","clearInterval","rawTs","datetime","Date_Created","Touchpoint_Date","dateObj","parseISO","isNaN","liveStr","userSelect","verticalAlign","title","format","_enquiry$Area_of_Work3","_enquiry$Area_of_Work4","_claimer$Email","_claimer$Email$split$","claimer","_onAreaChange","isVisible","setIsVisible","setTimeout","formatDate","dateStr","d","nowYear","getFullYear","toLocaleDateString","day","month","year","_enquiry$Area_of_Work","areaIconName","_enquiry$Area_of_Work2","badgeBorder","badgeBackground","neutralText","subtleText","isNewData","__sourceType","claim","_Fragment","zIndex","flexShrink","enquiryDate","claimDate","timeTaken","marginLeft","justifyContent","Initials","Email","split","toUpperCase","document","getElementById","styleEl","createElement","id","textContent","head","appendChild"],"sourceRoot":""}