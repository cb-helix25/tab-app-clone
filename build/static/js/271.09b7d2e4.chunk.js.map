{"version":3,"file":"static/js/271.09b7d2e4.chunk.js","mappings":"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","sources":["../node_modules/@fluentui/react/lib/components/src/components/Link/useLink.ts","../node_modules/@fluentui/react/lib/components/src/components/Link/Link.base.tsx","../node_modules/@fluentui/react/lib/components/src/components/Link/Link.tsx","components/ActionIconButton.tsx","tabs/forms/FormCard.tsx","tabs/forms/Forms.tsx","app/styles/FilterStyles.ts","tabs/forms/FormDetails.tsx","../node_modules/@fluentui/react/lib/components/src/components/Tooltip/Tooltip.types.ts","../node_modules/@fluentui/react/lib/components/src/components/Tooltip/Tooltip.base.tsx","../node_modules/@fluentui/react/lib/components/src/components/Tooltip/Tooltip.tsx","../node_modules/@fluentui/react/lib/components/src/components/Tooltip/Tooltip.styles.ts","../node_modules/@fluentui/react/lib/components/src/components/Tooltip/TooltipHost.base.tsx","../node_modules/@fluentui/utilities/src/overflow.ts","../node_modules/@fluentui/react/lib/components/src/components/Tooltip/TooltipHost.styles.ts","../node_modules/@fluentui/react/lib/components/src/components/Tooltip/TooltipHost.ts","../node_modules/@fluentui/react/lib/components/src/components/Tooltip/TooltipHost.types.ts","app/functionality/BespokePanel.tsx","../node_modules/@fluentui/react/lib/components/src/components/Link/Link.styles.ts"],"sourcesContent":["import * as React from 'react';\nimport { useMergedRefs } from '@fluentui/react-hooks';\nimport { classNamesFunction, useFocusRects } from '@fluentui/utilities';\nimport type { ILink, ILinkProps, ILinkStyleProps, ILinkStyles } from './Link.types';\n\nconst getClassNames = classNamesFunction<ILinkStyleProps, ILinkStyles>();\n\n/**\n * The useLink hook processes the Link component props and returns\n * state, slots and slotProps for consumption by the component.\n */\nexport const useLink = (props: ILinkProps, forwardedRef: React.Ref<HTMLElement>): any => {\n  const { as, className, disabled, href, onClick, styles, theme, underline } = props;\n  const rootRef = React.useRef<HTMLDivElement | null>(null);\n  const mergedRootRefs: React.Ref<HTMLElement> = useMergedRefs(rootRef, forwardedRef);\n\n  useComponentRef(props, rootRef);\n  useFocusRects(rootRef);\n\n  const classNames = getClassNames(styles!, {\n    className,\n    isButton: !href,\n    isDisabled: disabled,\n    isUnderlined: underline,\n    theme: theme!,\n  });\n\n  const _onClick = (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>) => {\n    if (disabled) {\n      ev.preventDefault();\n    } else if (onClick) {\n      onClick(ev);\n    }\n  };\n\n  const rootType = as ? as : href ? 'a' : 'button';\n\n  const state = {};\n  const slots = { root: rootType };\n  const slotProps = {\n    root: {\n      ...adjustPropsForRootType(rootType, props),\n      'aria-disabled': disabled,\n      className: classNames.root,\n      onClick: _onClick,\n      ref: mergedRootRefs,\n    },\n  };\n\n  return { state, slots, slotProps };\n};\n\nconst useComponentRef = (props: ILinkProps, link: React.RefObject<ILink>) => {\n  React.useImperativeHandle(\n    props.componentRef,\n    () => ({\n      focus() {\n        if (link.current) {\n          link.current.focus();\n        }\n      },\n    }),\n    [link],\n  );\n};\n\nconst adjustPropsForRootType = (\n  RootType: string | React.ComponentClass | React.FunctionComponent,\n  props: ILinkProps & { getStyles?: any },\n): Partial<ILinkProps> => {\n  // Deconstruct the props so we remove props like `as`, `theme` and `styles`\n  // as those will always be removed. We also take some props that are optional\n  // based on the RootType.\n  const { as, disabled, target, href, theme, getStyles, styles, componentRef, underline, ...restProps } = props;\n\n  // RootType will be a string if we're dealing with an html component\n  if (typeof RootType === 'string') {\n    // Remove the disabled prop for anchor elements\n    if (RootType === 'a') {\n      return {\n        target,\n        href: disabled ? undefined : href,\n        ...restProps,\n      };\n    }\n\n    // Add the type='button' prop for button elements\n    if (RootType === 'button') {\n      return {\n        type: 'button',\n        disabled,\n        ...restProps,\n      };\n    }\n\n    // Remove the target and href props for all other non anchor elements\n    return { ...restProps, disabled };\n  }\n\n  // Retain all props except 'as' for ReactComponents\n  return { target, href, disabled, ...restProps };\n};\n","import * as React from 'react';\nimport { useLink } from './useLink';\nimport type { ILinkProps } from './Link.types';\n\nexport const LinkBase: React.FunctionComponent<ILinkProps> = React.forwardRef<HTMLElement, ILinkProps>((props, ref) => {\n  const { slots, slotProps } = useLink(props, ref);\n\n  return <slots.root {...slotProps.root} />;\n});\n\nLinkBase.displayName = 'LinkBase';\n","import * as React from 'react';\nimport { styled } from '@fluentui/utilities';\nimport { LinkBase } from './Link.base';\nimport { getStyles } from './Link.styles';\nimport type { ILinkProps, ILinkStyleProps, ILinkStyles } from './Link.types';\n\nexport const Link: React.FunctionComponent<ILinkProps> = styled<ILinkProps, ILinkStyleProps, ILinkStyles>(\n  LinkBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'Link',\n  },\n);\n","import React from 'react';\r\n// invisible change 2\r\nimport { IconButton, IButtonProps, Icon } from '@fluentui/react';\r\n\r\ninterface ActionIconButtonProps extends IButtonProps {\r\n    outlineIcon: string;\r\n    filledIcon?: string;\r\n    title?: string;\r\n}\r\n\r\nconst ActionIconButton: React.FC<ActionIconButtonProps> = ({ outlineIcon, filledIcon, ...props }) => (\r\n    <IconButton\r\n        {...props}\r\n        onRenderIcon={() => (\r\n            <span className=\"icon-hover\">\r\n                <Icon iconName={outlineIcon} className=\"icon-outline\" />\r\n                <Icon iconName={filledIcon || outlineIcon} className=\"icon-filled\" />\r\n            </span>\r\n        )}\r\n    />\r\n);\r\n\r\nexport default ActionIconButton;","import React from 'react';\r\nimport {\r\n  Text,\r\n  Icon,\r\n  TooltipHost,\r\n  Stack,\r\n} from '@fluentui/react';\r\nimport ActionIconButton from '../../components/ActionIconButton';\r\nimport { mergeStyles } from '@fluentui/react/lib/Styling';\r\nimport { colours } from '../../app/styles/colours';\r\nimport { componentTokens } from '../../app/styles/componentTokens';\r\nimport { FormItem } from '../../app/functionality/types';\r\nimport { useTheme } from '../../app/functionality/ThemeContext';\r\nimport '../../app/styles/FormCard.css'; // Ensure this has your .backdropIcon CSS\r\nimport { cardTokens, cardStyles as instructionsCardStyles } from '../instructions/componentTokens';\r\n\r\n// invisible change\r\nconst iconButtonStyles = (iconColor: string) => ({\r\n  root: {\r\n    marginBottom: '8px',\r\n    color: iconColor,\r\n    backgroundColor: 'transparent',\r\n    border: 'none',\r\n    selectors: {\r\n      ':hover': {\r\n        backgroundColor: colours.cta,\r\n        color: '#ffffff',\r\n      },\r\n      ':focus': {\r\n        backgroundColor: colours.cta,\r\n        color: '#ffffff',\r\n      },\r\n    },\r\n    height: '24px',\r\n    width: '24px',\r\n    padding: '0px',\r\n    boxShadow: 'none',\r\n  },\r\n  icon: {\r\n    fontSize: '16px',\r\n    lineHeight: '20px',\r\n    color: iconColor,\r\n  },\r\n});\r\n\r\ninterface FormCardProps {\r\n  link: FormItem;\r\n  isFavorite: boolean;\r\n  onCopy?: (url: string, title: string) => void;\r\n  onToggleFavorite: () => void;\r\n  onGoTo?: () => void;\r\n  onSelect: () => void;\r\n  animationDelay?: number;\r\n  description?: string;\r\n}\r\n\r\nconst cardStyle = (isDarkMode: boolean) =>\r\n  mergeStyles({\r\n    padding: '16px',\r\n    backgroundColor: isDarkMode\r\n      ? colours.dark.sectionBackground\r\n      : colours.light.sectionBackground,\r\n    border: 'none',\r\n    borderRadius: '12px',\r\n    boxShadow: isDarkMode\r\n      ? '0 1px 3px rgba(255, 255, 255, 0.1)'\r\n      : '0 1px 3px rgba(0, 0, 0, 0.06)',\r\n    transition: 'box-shadow 0.3s, transform 0.3s, background-color 0.3s',\r\n    cursor: 'pointer',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    height: '100%',\r\n    position: 'relative', // Important for backdropIcon positioning\r\n    ':hover': {\r\n      boxShadow: isDarkMode\r\n        ? '0 4px 16px rgba(255, 255, 255, 0.2)'\r\n        : componentTokens.card.hover.boxShadow,\r\n      transform: componentTokens.card.hover.transform,\r\n    },\r\n  });\r\n\r\nconst mainContentStyle = mergeStyles({\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  alignItems: 'center',\r\n  gap: '10px',\r\n  flex: 1,\r\n});\r\n\r\nconst textContentStyle = mergeStyles({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'flex-start',\r\n  marginLeft: '10px',\r\n});\r\n\r\nconst linkTitleStyle = mergeStyles({\r\n  fontSize: '18px',\r\n  fontWeight: '600',\r\n  color: 'inherit',\r\n  cursor: 'pointer',\r\n  marginTop: '0px',\r\n});\r\n\r\nconst descriptionStyle = (isDarkMode: boolean) =>\r\n  mergeStyles({\r\n    fontSize: '14px',\r\n    color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n    marginTop: '8px',\r\n  });\r\n\r\nconst actionsContainerStyle = mergeStyles({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  gap: '8px',\r\n  zIndex: 2, // Ensure buttons are above the backdrop icon\r\n});\r\n\r\nconst separatorStyle = (isDarkMode: boolean) =>\r\n  mergeStyles({\r\n    width: '1px',\r\n    backgroundColor: isDarkMode ? colours.dark.border : colours.light.border,\r\n    height: '60%',\r\n    margin: '0 12px',\r\n    alignSelf: 'center',\r\n    zIndex: 2,\r\n  });\r\n\r\nconst FormCard: React.FC<FormCardProps> = React.memo(\r\n  ({\r\n    link,\r\n    isFavorite,\r\n    onCopy,\r\n    onToggleFavorite,\r\n    onGoTo,\r\n    onSelect,\r\n    animationDelay = 0,\r\n  }) => {\r\n    const { isDarkMode } = useTheme();\r\n\r\n    return (\r\n      <TooltipHost content={`View details for ${link.title}`}>\r\n        <div\r\n          className={`formCard ${cardStyle(isDarkMode)}`}\r\n          style={{ '--animation-delay': `${animationDelay}s` } as React.CSSProperties}\r\n          onClick={onSelect}\r\n          role=\"button\"\r\n          tabIndex={0}\r\n          onKeyPress={(e) => {\r\n            if (e.key === 'Enter') {\r\n              onSelect();\r\n            }\r\n          }}\r\n          aria-label={`View details for ${link.title}`}\r\n        >\r\n          {/* Backdrop Icon (subtle) */}\r\n          {link.icon && (\r\n            <Icon\r\n              iconName={link.icon}\r\n              className=\"backdropIcon\" // Make sure .backdropIcon positions/filters it in FormCard.css\r\n            />\r\n          )}\r\n\r\n          {/* Left: Main Icon + Text */}\r\n          <div className={mainContentStyle}>\r\n            {link.icon && link.icon.endsWith('.svg') ? (\r\n              // If it's an SVG, render <img> with a filter to approximate #0C6D8F\r\n              <img\r\n                src={link.icon}\r\n                alt={link.title}\r\n                style={{\r\n                  width: '32px',\r\n                  height: '32px',\r\n                  // Filter approximating a darker teal (#0C6D8F).\r\n                  filter:\r\n                    'invert(16%) sepia(47%) saturate(1652%) hue-rotate(166deg) brightness(93%) contrast(90%)',\r\n                }}\r\n              />\r\n            ) : (\r\n              // Otherwise, render Fluent UI icon in #0C6D8F\r\n              <Icon\r\n                iconName={link.icon}\r\n                styles={{\r\n                  root: {\r\n                    fontSize: 32,\r\n                    color: '#0C6D8F',\r\n                  },\r\n                }}\r\n              />\r\n            )}\r\n            <div className={textContentStyle}>\r\n              <Text className={linkTitleStyle}>{link.title}</Text>\r\n              {link.description && (\r\n                <Text className={descriptionStyle(isDarkMode)}>\r\n                  {link.description}\r\n                </Text>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Separator */}\r\n          <div className={`separator ${separatorStyle(isDarkMode)}`} />\r\n\r\n          {/* Right: Action Buttons */}\r\n          <div className={`actionsContainer ${actionsContainerStyle}`}>\r\n            <TooltipHost\r\n              content={`Copy link for ${link.title}`}\r\n              id={`tooltip-copy-${link.title}`}\r\n            >\r\n              <ActionIconButton\r\n                outlineIcon=\"Copy\"\r\n                filledIcon=\"Copy\"\r\n                title=\"Copy Link\"\r\n                ariaLabel=\"Copy Link\"\r\n                onClick={(e: React.MouseEvent<HTMLButtonElement>) => {\r\n                  e.stopPropagation();\r\n                  onCopy && link.url && onCopy(link.url, link.title);\r\n                }}\r\n                styles={iconButtonStyles(colours.cta)}\r\n              />\r\n            </TooltipHost>\r\n\r\n            <TooltipHost\r\n              content={\r\n                isFavorite ? 'Remove from Favourites' : 'Add to Favourites'\r\n              }\r\n              id={`tooltip-fav-${link.title}`}\r\n            >\r\n              <ActionIconButton\r\n                outlineIcon={isFavorite ? 'FavoriteStarFill' : 'FavoriteStar'}\r\n                filledIcon=\"FavoriteStarFill\"\r\n                title=\"Toggle Favourite\"\r\n                ariaLabel=\"Toggle Favourite\"\r\n                onClick={(e: React.MouseEvent<HTMLButtonElement>) => {\r\n                  e.stopPropagation();\r\n                  onToggleFavorite();\r\n                }}\r\n                styles={iconButtonStyles(colours.cta)}\r\n              />\r\n            </TooltipHost>\r\n\r\n            <TooltipHost\r\n              content={`Go to ${link.title}`}\r\n              id={`tooltip-go-${link.title}`}\r\n            >\r\n              <ActionIconButton\r\n                outlineIcon=\"ChevronRight\"\r\n                filledIcon=\"ChevronRight\"\r\n                title=\"Go To\"\r\n                ariaLabel=\"Go To\"\r\n                onClick={(e: React.MouseEvent<HTMLButtonElement>) => {\r\n                  e.stopPropagation();\r\n                  onGoTo && onGoTo();\r\n                }}\r\n                styles={iconButtonStyles(colours.cta)}\r\n              />\r\n            </TooltipHost>\r\n          </div>\r\n        </div>\r\n      </TooltipHost>\r\n    );\r\n  }\r\n);\r\n\r\nexport default FormCard;\r\n","\r\nimport React, { useState, useEffect, useCallback, useMemo, Suspense } from 'react';\r\nimport {\r\n  Stack,\r\n  Text,\r\n  mergeStyles,\r\n  MessageBar,\r\n  MessageBarType,\r\n  SearchBox,\r\n  Link,\r\n} from '@fluentui/react';\r\nimport { colours } from '../../app/styles/colours';\r\nimport FormCard from './FormCard';\r\nimport FormDetails from './FormDetails';\r\nimport {\r\n  sharedSearchBoxContainerStyle,\r\n  sharedSearchBoxStyle,\r\n} from '../../app/styles/FilterStyles';\r\n// invisible change\r\nimport { useTheme } from '../../app/functionality/ThemeContext';\r\nimport '../../app/styles/FormCard.css';\r\n\r\n// Import Financial Forms\r\nimport { formSections } from './formsData';\r\n// Import types – note that FormItem is imported from your types file now\r\nimport { NormalizedMatter, FormItem, UserData } from '../../app/functionality/types';\r\n\r\n// Icons initialized in index.tsx - no need to re-initialize\r\n\r\n// Define types for sections and links\r\nexport type SectionName = 'Favorites' | 'Financial' | 'General_Processes' | 'Operations';\r\n\r\n// (Removed local FormItem declaration because it's imported above)\r\n\r\n// Update the Forms component's prop types so it can receive these matters.\r\ninterface FormsProps {\r\n  userData: UserData[] | null;\r\n  matters: NormalizedMatter[];\r\n}\r\n\r\n// Styles\r\nconst containerStyle = (isDarkMode: boolean) =>\r\n  mergeStyles({\r\n    padding: '40px 20px',\r\n    width: '100%',\r\n    maxWidth: '1200px',\r\n    margin: '0 auto',\r\n    minHeight: '100vh',\r\n    backgroundColor: isDarkMode ? colours.dark.background : colours.light.background,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    transition: 'background-color 0.3s',\r\n    fontFamily: 'Raleway, sans-serif',\r\n  });\r\n\r\nconst headerStyle = (isDarkMode: boolean) =>\r\n  mergeStyles({\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: '20px',\r\n    flexWrap: 'wrap',\r\n    gap: '10px',\r\n  });\r\n\r\nconst mainContentStyle = (isDarkMode: boolean) =>\r\n  mergeStyles({\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: '30px',\r\n    paddingBottom: '40px', // Added padding to create gap before footer\r\n  });\r\n\r\nconst sectionStyle = (isDarkMode: boolean) =>\r\n  mergeStyles({\r\n    backgroundColor: isDarkMode ? colours.dark.sectionBackground : colours.light.sectionBackground,\r\n    border: '1px solid transparent',\r\n    borderRadius: '8px',\r\n    padding: '30px',\r\n    boxSizing: 'border-box',\r\n    boxShadow: isDarkMode\r\n      ? '0 2px 4px rgba(255, 255, 255, 0.1)'\r\n      : '0 2px 4px rgba(0, 0, 0, 0.05)',\r\n    transition: 'background-color 0.3s, border 0.3s, box-shadow 0.3s',\r\n    marginBottom: '40px',\r\n    selectors: {\r\n      '&:last-child': {\r\n        marginBottom: '0px',\r\n      },\r\n    },\r\n  });\r\n\r\nconst sectionHeaderStyleCustom = (isDarkMode: boolean) =>\r\n  mergeStyles({\r\n    fontSize: '20px',\r\n    fontWeight: '700',\r\n    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n    marginBottom: '20px',\r\n    marginTop: '0px',\r\n  });\r\n\r\nconst resourceGridStyle = mergeStyles({\r\n  display: 'grid',\r\n  gridTemplateColumns: 'repeat(auto-fit, minmax(260px, 1fr))',\r\n  gap: '24px',\r\n  paddingTop: '15px',\r\n});\r\n\r\nconst footerStyle = (isDarkMode: boolean) =>\r\n  mergeStyles({\r\n    padding: '20px',\r\n    backgroundColor: isDarkMode ? colours.dark.sectionBackground : colours.light.sectionBackground,\r\n    borderRadius: '8px',\r\n    marginTop: 'auto',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: '10px',\r\n    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n    fontFamily: 'Raleway, sans-serif',\r\n  });\r\n\r\nconst Forms: React.FC<FormsProps> = ({ userData, matters }) => {\r\n  const { isDarkMode } = useTheme();\r\n  const [favorites, setFavorites] = useState<FormItem[]>([]);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [copySuccess, setCopySuccess] = useState<string | null>(null);\r\n  const [selectedLink, setSelectedLink] = useState<FormItem | null>(null);\r\n\r\n  // Handle storage changes for syncing favourites\r\n  useEffect(() => {\r\n    const handleStorageChange = (event: StorageEvent) => {\r\n      if (event.key === 'formsFavorites' && event.newValue) {\r\n        setFavorites(JSON.parse(event.newValue));\r\n      }\r\n    };\r\n\r\n    window.addEventListener('storage', handleStorageChange);\r\n\r\n    return () => {\r\n      window.removeEventListener('storage', handleStorageChange);\r\n    };\r\n  }, []);\r\n\r\n  // Define number of columns per row for delay calculation\r\n  const columnsPerRow = 5;\r\n\r\n  // Define embedded form sections\r\n  const formHubSections: { [key in SectionName]: FormItem[] } = useMemo(() => {\r\n\r\n    return {\r\n      Favorites: [], // Dynamically populated\r\n      General_Processes: formSections.General_Processes,\r\n      Operations: formSections.Operations,\r\n      Financial: formSections.Financial,\r\n    };\r\n  }, []);\r\n\r\n  // Load stored favorites from localStorage\r\n  useEffect(() => {\r\n    const storedFavorites = localStorage.getItem('formsFavorites');\r\n    if (storedFavorites) {\r\n      setFavorites(JSON.parse(storedFavorites));\r\n    }\r\n  }, []);\r\n\r\n  // Update localStorage whenever favorites change\r\n  useEffect(() => {\r\n    localStorage.setItem('formsFavorites', JSON.stringify(favorites));\r\n  }, [favorites]);\r\n\r\n  // Handle Copy to Clipboard\r\n  const copyToClipboard = useCallback(\r\n    (url: string, title: string) => {\r\n      navigator.clipboard\r\n        .writeText(url)\r\n        .then(() => {\r\n          setCopySuccess(`Copied '${title}' link to clipboard!`);\r\n          setTimeout(() => setCopySuccess(null), 3000);\r\n        })\r\n        .catch((err) => {\r\n          console.error('Failed to copy: ', err);\r\n        });\r\n    },\r\n    []\r\n  );\r\n\r\n  // Handle Toggle Favorite\r\n  const toggleFavorite = useCallback((link: FormItem) => {\r\n    setFavorites((prev) => {\r\n      const isAlreadyFavorite = prev.some(fav => fav.title === link.title);\r\n      let updatedFavorites: FormItem[];\r\n      if (isAlreadyFavorite) {\r\n        updatedFavorites = prev.filter(fav => fav.title !== link.title);\r\n      } else {\r\n        updatedFavorites = [...prev, link];\r\n      }\r\n\r\n      localStorage.setItem('formsFavorites', JSON.stringify(updatedFavorites));\r\n      return updatedFavorites;\r\n    });\r\n  }, []);\r\n\r\n  // Handle Go To Link\r\n  const goToLink = useCallback((url: string) => {\r\n    window.open(url, '_blank', 'noopener,noreferrer');\r\n  }, []);\r\n\r\n  // Filtered Sections based on search query and excluding favorites from other sections\r\n  const filteredSections: { [key in SectionName]: FormItem[] } = useMemo(() => {\r\n    const filterLinks = (links: FormItem[]) =>\r\n      links.filter(\r\n        (link) =>\r\n          link.title.toLowerCase().includes(searchQuery.toLowerCase()) &&\r\n          !favorites.some(fav => fav.title === link.title)\r\n      );\r\n\r\n    const sortLinks = (links: FormItem[]) => {\r\n      const sorted = [...links];\r\n      // Optional: Implement sorting if needed\r\n      return sorted;\r\n    };\r\n\r\n    // Prepare Favorites section separately\r\n    const allSectionsExceptFavorites = ['Financial', 'General_Processes', 'Operations'] as SectionName[];\r\n    const favoriteLinks = allSectionsExceptFavorites.reduce<FormItem[]>((acc, section) => {\r\n      return acc.concat(formHubSections[section].filter(link => favorites.some(fav => fav.title === link.title)));\r\n    }, []);\r\n\r\n    return {\r\n      Favorites: sortLinks(\r\n        favoriteLinks.filter((link) =>\r\n          link.title.toLowerCase().includes(searchQuery.toLowerCase())\r\n        )\r\n      ),\r\n      Financial: sortLinks(filterLinks(formHubSections.Financial)),\r\n      General_Processes: sortLinks(filterLinks(formHubSections.General_Processes)),\r\n      Operations: sortLinks(filterLinks(formHubSections.Operations)),\r\n    };\r\n  }, [favorites, formHubSections, searchQuery]);\r\n\r\n  // Calculate animation delays based on grid position\r\n  const calculateAnimationDelay = (index: number) => {\r\n    const row = Math.floor(index / columnsPerRow);\r\n    const col = index % columnsPerRow;\r\n    return row * 0.2 + col * 0.1; // Adjust delays as needed\r\n  };\r\n\r\n  return (\r\n    <div className={containerStyle(isDarkMode)}>\r\n      {/* Header */}\r\n      <header className={headerStyle(isDarkMode)}>\r\n        <div className={sharedSearchBoxContainerStyle(isDarkMode)}>\r\n          <SearchBox\r\n            placeholder=\"Search forms...\"\r\n            value={searchQuery}\r\n            onChange={(_, newValue) => setSearchQuery(newValue || '')}\r\n            styles={sharedSearchBoxStyle(isDarkMode)}\r\n            aria-label=\"Search forms\"\r\n          />\r\n        </div>\r\n      </header>\r\n\r\n      {/* Main Content */}\r\n      <main className={mainContentStyle(isDarkMode)}>\r\n        {filteredSections.Favorites.length > 0 && (\r\n          <section key=\"Favorites\" className={sectionStyle(isDarkMode)}>\r\n            <Text variant=\"large\" className={sectionHeaderStyleCustom(isDarkMode)}>\r\n              Favourites\r\n            </Text>\r\n            <div className={resourceGridStyle}>\r\n              {filteredSections.Favorites.map((link: FormItem, index: number) => {\r\n                const animationDelay = calculateAnimationDelay(index);\r\n                return (\r\n                  <FormCard\r\n                    key={link.title}\r\n                    link={link}\r\n                    isFavorite={favorites.some(fav => fav.title === link.title)}\r\n                    onCopy={link.url ? copyToClipboard : undefined}\r\n                    onToggleFavorite={() => toggleFavorite(link)}\r\n                    onGoTo={link.url ? () => goToLink(link.url!) : undefined}\r\n                    onSelect={() => setSelectedLink(link)}\r\n                    animationDelay={animationDelay}\r\n                    description={link.description} // Pass description if available\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          </section>\r\n        )}\r\n\r\n        {filteredSections.Financial.length > 0 && (\r\n          <section key=\"Financial\" className={sectionStyle(isDarkMode)}>\r\n            <Text variant=\"large\" className={sectionHeaderStyleCustom(isDarkMode)}>\r\n              Financial\r\n            </Text>\r\n            <div className={resourceGridStyle}>\r\n              {filteredSections.Financial.map((link: FormItem, index: number) => {\r\n                const animationDelay = calculateAnimationDelay(index);\r\n                return (\r\n                  <FormCard\r\n                    key={link.title}\r\n                    link={link}\r\n                    isFavorite={favorites.some(fav => fav.title === link.title)}\r\n                    onCopy={link.url ? copyToClipboard : undefined}\r\n                    onToggleFavorite={() => toggleFavorite(link)}\r\n                    onGoTo={link.url ? () => goToLink(link.url!) : undefined}\r\n                    onSelect={() => setSelectedLink(link)}\r\n                    animationDelay={animationDelay}\r\n                    description={link.description} // Pass description if available\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          </section>\r\n        )}\r\n\r\n        {filteredSections.General_Processes.length > 0 && (\r\n          <section key=\"General_Processes\" className={sectionStyle(isDarkMode)}>\r\n            <Text variant=\"large\" className={sectionHeaderStyleCustom(isDarkMode)}>\r\n              General Processes\r\n            </Text>\r\n            <div className={resourceGridStyle}>\r\n              {filteredSections.General_Processes.map((link: FormItem, index: number) => {\r\n                const animationDelay = calculateAnimationDelay(index);\r\n                return (\r\n                  <FormCard\r\n                    key={link.title}\r\n                    link={link}\r\n                    isFavorite={favorites.some(fav => fav.title === link.title)}\r\n                    onCopy={link.url ? copyToClipboard : undefined}\r\n                    onToggleFavorite={() => toggleFavorite(link)}\r\n                    onGoTo={link.url ? () => goToLink(link.url!) : undefined}\r\n                    onSelect={() => setSelectedLink(link)}\r\n                    animationDelay={animationDelay}\r\n                    description={link.description} // Pass description if available\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          </section>\r\n        )}\r\n\r\n        {filteredSections.Operations.length > 0 && (\r\n          <section key=\"Operations\" className={sectionStyle(isDarkMode)}>\r\n            <Text variant=\"large\" className={sectionHeaderStyleCustom(isDarkMode)}>\r\n              Operations\r\n            </Text>\r\n            <div className={resourceGridStyle}>\r\n              {filteredSections.Operations.map((link: FormItem, index: number) => {\r\n                const animationDelay = calculateAnimationDelay(index);\r\n                return (\r\n                  <FormCard\r\n                    key={link.title}\r\n                    link={link}\r\n                    isFavorite={favorites.some(fav => fav.title === link.title)}\r\n                    onCopy={link.url ? copyToClipboard : undefined}\r\n                    onToggleFavorite={() => toggleFavorite(link)}\r\n                    onGoTo={link.url ? () => goToLink(link.url!) : undefined}\r\n                    onSelect={() => setSelectedLink(link)}\r\n                    animationDelay={animationDelay}\r\n                    description={link.description} // Pass description if available\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          </section>\r\n        )}\r\n      </main>\r\n\r\n      {/* Copy Confirmation Message */}\r\n      {copySuccess && (\r\n        <MessageBar\r\n          messageBarType={MessageBarType.success}\r\n          isMultiline={false}\r\n          onDismiss={() => setCopySuccess(null)}\r\n          dismissButtonAriaLabel=\"Close\"\r\n          styles={{\r\n            root: {\r\n              position: 'fixed',\r\n              bottom: 20,\r\n              right: 20,\r\n              maxWidth: '300px',\r\n              zIndex: 1000,\r\n              borderRadius: '4px',\r\n            },\r\n          }}\r\n        >\r\n          {copySuccess}\r\n        </MessageBar>\r\n      )}\r\n\r\n      {/* Form Details Panel */}\r\n      {selectedLink && (\r\n        <FormDetails\r\n          isOpen={true}\r\n          onClose={() => setSelectedLink(null)}\r\n          link={selectedLink}\r\n          isDarkMode={isDarkMode}\r\n          isFinancial={selectedLink?.tags?.includes('Financial')}\r\n          userData={userData}\r\n          matters={matters} // Pass the matters array to FormDetails\r\n          offsetTop={96}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Forms;\r\n","// invisible change 3\r\n// src/app/styles/FilterStyles.ts\r\n\r\nimport { mergeStyles, IDropdownStyles } from '@fluentui/react';\r\nimport { colours } from './colours';\r\n\r\nexport const sharedSearchBoxContainerStyle = (isDarkMode: boolean) =>\r\n  mergeStyles({\r\n    position: 'relative',\r\n    width: '100%',\r\n    maxWidth: '300px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  });\r\n\r\nexport const sharedControlsContainerStyle = mergeStyles({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  gap: '10px',\r\n  flex: 1,\r\n  flexWrap: 'nowrap',\r\n});\r\n\r\nexport const sharedSearchBoxStyle = (isDarkMode: boolean) => ({\r\n  root: {\r\n    position: 'relative' as const,\r\n    backgroundColor: isDarkMode ? colours.dark.inputBackground : '#ffffff',\r\n    border: `1px solid ${isDarkMode ? 'rgba(255,255,255,0.12)' : 'rgba(0,0,0,0.12)'}`,\r\n    boxShadow: 'none',\r\n    borderRadius: '16px',\r\n    padding: '0',\r\n    width: '100%',\r\n    maxWidth: '300px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  height: '32px',\r\n    outline: 'none',\r\n    transition: 'border-color 0.15s ease',\r\n    selectors: {\r\n      ':focus': {\r\n        outline: 'none',\r\n        borderColor: isDarkMode ? 'rgba(255,255,255,0.24)' : 'rgba(0,0,0,0.24)',\r\n        boxShadow: 'none',\r\n      },\r\n      ':focus-within': {\r\n        outline: 'none',\r\n        borderColor: isDarkMode ? 'rgba(255,255,255,0.24)' : 'rgba(0,0,0,0.24)',\r\n        boxShadow: 'none',\r\n      },\r\n      ':hover': {\r\n        borderColor: isDarkMode ? 'rgba(255,255,255,0.18)' : 'rgba(0,0,0,0.18)',\r\n      },\r\n    },\r\n  },\r\n  field: {\r\n    backgroundColor: 'transparent',\r\n    border: 'none',\r\n    boxShadow: 'none !important',\r\n    borderRadius: '8px 8px 0 0',\r\n    padding: '0 12px',\r\n  height: '100%',\r\n  lineHeight: '32px',\r\n    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n    fontSize: '14px',\r\n    outline: 'none',\r\n    '::placeholder': {\r\n      color: isDarkMode ? '#aaaaaa' : '#888888',\r\n      opacity: 1,\r\n    },\r\n  },\r\n  icon: {\r\n    color: isDarkMode ? colours.dark.iconColor : colours.light.iconColor,\r\n    fontSize: '16px',\r\n    marginLeft: '8px',\r\n  },\r\n});\r\n\r\nexport const sharedToggleStyle = (isDarkMode: boolean) => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginBottom: 0,\r\n  },\r\n  label: {\r\n    marginRight: '10px',\r\n    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n  },\r\n});\r\n\r\nexport const sharedDropdownContainerStyle = (isDarkMode: boolean) =>\r\n  mergeStyles({\r\n    position: 'relative',\r\n    width: '100%',\r\n    maxWidth: '300px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  });\r\n\r\nexport const sharedDropdownStyles = (isDarkMode: boolean): Partial<IDropdownStyles> => ({\r\n  root: {\r\n    position: 'relative' as const,\r\n    width: '100%',\r\n    maxWidth: '300px',\r\n    height: '32px',\r\n    outline: 'none',\r\n    selectors: {\r\n      '&::after': {\r\n        content: '\"\"',\r\n        position: 'absolute' as const,\r\n        left: '50%',\r\n        bottom: '0',\r\n        height: '1px',\r\n        width: '100%',\r\n        backgroundColor: isDarkMode ? colours.dark.highlight : colours.highlight,\r\n        transform: 'translateX(-50%) scaleX(0)',\r\n        transformOrigin: 'center',\r\n        transition: 'transform 0.15s ease-out',\r\n      },\r\n      '&:hover::after': {\r\n        transform: 'translateX(-50%) scaleX(1)',\r\n      },\r\n      '&:focus-within::after': {\r\n        transform: 'translateX(-50%) scaleX(1)',\r\n      },\r\n    },\r\n  },\r\n  dropdown: {\r\n    backgroundColor: isDarkMode ? colours.dark.inputBackground : '#ffffff',\r\n    border: 'none',\r\n    boxShadow: 'none',\r\n    borderRadius: '8px 8px 0 0',\r\n    padding: '0',\r\n    height: '32px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  title: {\r\n    backgroundColor: 'transparent',\r\n    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n    fontSize: '13px',\r\n    height: '32px',\r\n    paddingLeft: '12px',\r\n    paddingRight: '36px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    border: 'none',\r\n    flexGrow: 1,\r\n    justifyContent: 'space-between',\r\n  },\r\n  caretDown: {\r\n    color: isDarkMode ? colours.dark.iconColor : colours.light.iconColor,\r\n    fontSize: '16px',\r\n    position: 'absolute',\r\n    right: '12px',\r\n    top: '50%',\r\n    transform: 'translateY(-50%)',\r\n    pointerEvents: 'none',\r\n  },\r\n});\r\n\r\nexport const sharedToggleButtonStyle = (isDarkMode: boolean) => ({\r\n  root: {\r\n    padding: '6px 12px',\r\n    borderRadius: '8px 8px 0 0',\r\n    backgroundColor: '#ffffff',\r\n    border: 'none',\r\n    color: isDarkMode ? colours.dark.text : '#000000',\r\n    transition: 'background 0.3s ease, box-shadow 0.3s ease',\r\n    transform: 'none !important',\r\n    outline: 'none !important',\r\n    height: '32px',\r\n    ':focus': {\r\n      outline: 'none !important',\r\n      border: 'none !important',\r\n      transform: 'none !important',\r\n    },\r\n    selectors: {\r\n      ':hover': {\r\n        background: `radial-gradient(circle at center, rgba(0,0,0,0) 0%, rgba(0,0,0,0.1) 100%), #ffffff !important`,\r\n        boxShadow: '0 0 8px rgba(0,0,0,0.1) !important',\r\n        transform: 'none !important',\r\n        outline: 'none !important',\r\n        border: 'none !important',\r\n      },\r\n      ':active': {\r\n        background: `radial-gradient(circle at center, rgba(0,0,0,0) 0%, rgba(0,0,0,0.15) 100%), #ffffff !important`,\r\n        boxShadow: '0 0 8px rgba(0,0,0,0.2) !important',\r\n        transform: 'none !important',\r\n        outline: 'none !important',\r\n        border: 'none !important',\r\n      },\r\n    },\r\n  },\r\n  label: {\r\n    color: isDarkMode ? colours.dark.text : '#000000 !important',\r\n    fontWeight: 'normal'\r\n  },\r\n});\r\n\r\n// New Style Added\r\nexport const sharedEditorStyle = (isDarkMode: boolean) =>\r\n  mergeStyles({\r\n    minHeight: '150px',\r\n    padding: '20px 20px 110px 20px',\r\n    borderRadius: '0',\r\n    border: `1px solid ${isDarkMode ? colours.dark.cardHover : colours.light.cardHover}`,\r\n    backgroundColor: isDarkMode ? colours.dark.sectionBackground : '#ffffff',\r\n    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n    fontSize: '14px',\r\n    overflowY: 'auto',\r\n    whiteSpace: 'pre-wrap',\r\n    outline: 'none',\r\n    position: 'relative',\r\n    selectors: {\r\n      ':focus-visible': {\r\n        borderColor: isDarkMode\r\n          ? colours.dark.cardHover\r\n          : colours.light.cardHover,\r\n        boxShadow: `inset 0 0 0 2px ${colours.cta}, inset 0 0 6px 3px ${colours.grey}`,\r\n      },\r\n      ':after': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        bottom: '20px',\r\n        left: '20px',\r\n        backgroundImage: 'url(\"https://helix-law.co.uk/wp-content/uploads/2024/03/HLRblue72.png\")',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'left bottom',\r\n        backgroundSize: '25%',\r\n        opacity: 0.2,\r\n        pointerEvents: 'none',\r\n        width: 'calc(100% - 20px)',\r\n        height: 'calc(100% - 20px)',\r\n        zIndex: 0,\r\n      },\r\n    },\r\n  });\r\n\r\n// New Style for Template Block Dropdowns\r\nexport const sharedOptionsDropdownStyles = (isDarkMode: boolean): Partial<IDropdownStyles> => ({\r\n  root: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: '32px',\r\n    outline: 'none',\r\n    selectors: {\r\n      '&::after': {\r\n        content: '\"\"',\r\n        position: 'absolute' as const,\r\n        left: '50%',\r\n        bottom: '0',\r\n        height: '1px',\r\n        width: '100%',\r\n        backgroundColor: isDarkMode ? colours.dark.highlight : colours.highlight,\r\n        transform: 'translateX(-50%) scaleX(0)',\r\n        transformOrigin: 'center',\r\n        transition: 'transform 0.15s ease-out',\r\n      },\r\n      '&:hover::after': {\r\n        transform: 'translateX(-50%) scaleX(1)',\r\n      },\r\n      '&:focus-within::after': {\r\n        transform: 'translateX(-50%) scaleX(1)',\r\n      },\r\n    },\r\n  },\r\n  dropdown: {\r\n    backgroundColor: isDarkMode ? colours.dark.grey : colours.grey,\r\n    border: 'none',\r\n    boxShadow: 'none',\r\n    borderRadius: '8px 8px 0 0',\r\n    padding: '0',\r\n    height: '32px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  title: {\r\n    backgroundColor: 'transparent',\r\n    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n    fontSize: '13px',\r\n    height: '32px',\r\n    paddingLeft: '12px',\r\n    paddingRight: '36px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    border: 'none',\r\n    justifyContent: 'space-between',\r\n  },\r\n  caretDown: {\r\n    color: isDarkMode ? colours.dark.iconColor : colours.light.iconColor,\r\n    fontSize: '16px',\r\n    position: 'absolute',\r\n    right: '12px',\r\n    top: '50%',\r\n    transform: 'translateY(-50%)',\r\n    pointerEvents: 'none',\r\n  },\r\n});\r\n","\r\nimport React, { useEffect, useState, useCallback, useRef } from 'react';\r\nimport {\r\n  Stack,\r\n  Text,\r\n  Link,\r\n  PrimaryButton,\r\n  DefaultButton,\r\n  MessageBar,\r\n  MessageBarType,\r\n} from '@fluentui/react';\r\nimport { colours } from '../../app/styles/colours';\r\nimport { FormItem, UserData, NormalizedMatter } from '../../app/functionality/types';\r\nimport { mergeStyles } from '@fluentui/react';\r\nimport loaderIcon from '../../assets/grey helix mark.png';\r\nimport BespokeForm from '../../CustomForms/BespokeForms';\r\nimport {\r\n  sharedPrimaryButtonStyles,\r\n  sharedDefaultButtonStyles,\r\n// invisible change\r\n} from '../../app/styles/ButtonStyles';\r\nimport BespokePanel from '../../app/functionality/BespokePanel';\r\nimport { getProxyBaseUrl } from \"../../utils/getProxyBaseUrl\";\r\n\r\ninterface FormDetailsProps {\r\n  link: FormItem;\r\n  isDarkMode: boolean;\r\n  onClose: () => void;\r\n  isOpen: boolean;\r\n  isFinancial?: boolean;\r\n  userData: UserData[] | null;\r\n  matters: NormalizedMatter[]; // NEW: Added matters prop to receive the matter data\r\n  offsetTop?: number; // Offset to avoid overlapping navigator\r\n}\r\n\r\nconst detailsContainerStyle = (isDarkMode: boolean) =>\r\n  mergeStyles({\r\n    padding: '20px',\r\n    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n    fontFamily: 'Raleway, sans-serif',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: '10px',\r\n  });\r\n\r\nconst buttonsContainerStyle = (isDarkMode: boolean) =>\r\n  mergeStyles({\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  });\r\n\r\nconst leftButtonsStyle = () =>\r\n  mergeStyles({\r\n    display: 'flex',\r\n    gap: '10px',\r\n  });\r\n\r\nconst loaderStyle = {\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  height: '100%',\r\n};\r\n\r\nconst FormDetails: React.FC<FormDetailsProps> = ({\r\n  link,\r\n  isDarkMode,\r\n  onClose,\r\n  isOpen,\r\n  userData,\r\n  matters,\r\n  offsetTop = 96,\r\n}) => {\r\n  const [copySuccess, setCopySuccess] = useState<string | null>(null);\r\n  const [isCognitoLoaded, setIsCognitoLoaded] = useState<boolean>(false);\r\n  const formContainerRef = useRef<HTMLDivElement>(null);\r\n\r\n  const [isSubmitted, setIsSubmitted] = useState<boolean>(false);\r\n  const [submissionSuccess, setSubmissionSuccess] = useState<string | null>(null);\r\n  const [formKey, setFormKey] = useState<number>(() => Date.now());\r\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\r\n\r\n  const loadCognitoScript = useCallback((): Promise<void> => {\r\n    return new Promise<void>((resolve, reject) => {\r\n      if ((window as any).Cognito) {\r\n        resolve();\r\n        return;\r\n      }\r\n      const existingScript = document.getElementById('cognito-seamless-script');\r\n      if (existingScript) {\r\n        existingScript.addEventListener('load', () => {\r\n          if ((window as any).Cognito) {\r\n            resolve();\r\n          } else {\r\n            reject(new Error('Cognito script loaded but Cognito is not available'));\r\n          }\r\n        });\r\n        existingScript.addEventListener('error', () =>\r\n          reject(new Error('Failed to load Cognito script'))\r\n        );\r\n      } else {\r\n        const script = document.createElement('script');\r\n        script.id = 'cognito-seamless-script';\r\n        script.src = 'https://www.cognitoforms.com/f/seamless.js';\r\n        script.async = true;\r\n        script.onload = () => {\r\n          if ((window as any).Cognito) {\r\n            resolve();\r\n          } else {\r\n            reject(new Error('Cognito script loaded but Cognito is not available'));\r\n          }\r\n        };\r\n        script.onerror = () => reject(new Error('Failed to load Cognito script'));\r\n        document.body.appendChild(script);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      loadCognitoScript()\r\n        .then(() => {\r\n          setIsCognitoLoaded(true);\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    }\r\n  }, [loadCognitoScript, isOpen]);\r\n\r\n  useEffect(() => {\r\n    if (isCognitoLoaded && link.embedScript && formContainerRef.current) {\r\n      formContainerRef.current.innerHTML = '';\r\n      const formScript = document.createElement('script');\r\n      formScript.src = 'https://www.cognitoforms.com/f/seamless.js';\r\n      formScript.async = true;\r\n      formScript.setAttribute('data-key', link.embedScript.key);\r\n      formScript.setAttribute('data-form', link.embedScript.formId);\r\n      formContainerRef.current.appendChild(formScript);\r\n    }\r\n  }, [isCognitoLoaded, link.embedScript]);\r\n\r\n  const copyToClipboard = useCallback(() => {\r\n    if (!link.url) return;\r\n    navigator.clipboard\r\n      .writeText(link.url)\r\n      .then(() => {\r\n        setCopySuccess(`Copied '${link.title}' URL to clipboard!`);\r\n        setTimeout(() => setCopySuccess(null), 3000);\r\n      })\r\n      .catch((err) => {\r\n        console.error('Failed to copy: ', err);\r\n      });\r\n  }, [link.url, link.title]);\r\n\r\n  const goToLink = useCallback(() => {\r\n    window.open(link.url, '_blank', 'noopener,noreferrer');\r\n  }, [link.url]);\r\n\r\n  const handleFinancialSubmit = useCallback(\r\n    async (values: any) => {\r\n      if (isSubmitting) return; // Prevent multiple submissions\r\n\r\n      setIsSubmitting(true); // Disable the button\r\n\r\n      const payload = {\r\n        formType: link.title,\r\n        data: values,\r\n        initials: userData?.[0]?.Initials || 'N/A',\r\n      };\r\n      const endpointUrl = `${getProxyBaseUrl()}/${process.env.REACT_APP_POST_FINANCIAL_TASK_PATH}?code=${process.env.REACT_APP_POST_FINANCIAL_TASK_CODE}`;\r\n\r\n      try {\r\n        const response = await fetch(endpointUrl, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(payload),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const errText = await response.text();\r\n          console.error('Error posting financial task:', errText);\r\n          setSubmissionSuccess(null);\r\n        } else {\r\n          const result = await response.json();\r\n          console.log('Financial task created successfully:', result);\r\n          setIsSubmitted(true);\r\n          setSubmissionSuccess('Financial form submitted successfully!');\r\n\r\n          setTimeout(() => {\r\n            setIsSubmitted(false);\r\n            setSubmissionSuccess(null);\r\n            setFormKey(Date.now());\r\n          }, 3000);\r\n        }\r\n\r\n        if (link.title === 'Payment Requests') {\r\n          try {\r\n            await fetch(\r\n              'https://prod-16.uksouth.logic.azure.com:443/workflows/625f5ed1d19b42999e113bd44c4799e5/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=OQhUuEJuXMgy2UCbOAuwM-3OBKb0xLIKgbp1GcnH_Bg',\r\n              {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(values),\r\n              }\r\n            );\r\n          } catch (err) {\r\n            console.error('Error posting payment request to external endpoint:', err);\r\n          }\r\n        }\r\n      } catch (error: any) {\r\n        console.error('Error in financial form submission:', error);\r\n        setSubmissionSuccess(null);\r\n      } finally {\r\n        setIsSubmitting(false); // Re-enable the button after response\r\n      }\r\n    },\r\n    [link.title, userData, isSubmitting]\r\n  );\r\n\r\n  return (\r\n    <BespokePanel\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      title={link.title}\r\n      width=\"60%\"\r\n      offsetTop={offsetTop}\r\n    >\r\n  <div style={{ display: 'flex', flexDirection: 'column', minHeight: 0 }}>\r\n        {submissionSuccess && (\r\n          <MessageBar\r\n            messageBarType={MessageBarType.success}\r\n            isMultiline={false}\r\n            onDismiss={() => setSubmissionSuccess(null)}\r\n            dismissButtonAriaLabel=\"Close\"\r\n            styles={{\r\n              root: {\r\n                marginBottom: '10px',\r\n                borderRadius: '4px',\r\n              },\r\n            }}\r\n          >\r\n            {submissionSuccess}\r\n          </MessageBar>\r\n        )}\r\n\r\n  <div style={{ flexGrow: 1, padding: '20px', minHeight: 0 }}>\r\n          {link.embedScript ? (\r\n            <div ref={formContainerRef} style={{ flexGrow: 1, minHeight: 0 }}>\r\n              {!isCognitoLoaded && (\r\n                <div style={loaderStyle}>\r\n                  <img\r\n                    src={loaderIcon}\r\n                    alt=\"Loading...\"\r\n                    style={{ width: '100px', height: 'auto' }}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          ) : link.fields ? (\r\n            <div style={{ flexGrow: 1 }}>\r\n              <BespokeForm\r\n                key={formKey}\r\n                fields={link.fields.map((field) => ({ ...field, name: field.label }))}\r\n                onSubmit={handleFinancialSubmit}\r\n                onCancel={() => console.log('Form cancelled')}\r\n                isSubmitting={isSubmitting}\r\n                matters={matters} // Pass matters down so the form can render a Matter Reference dropdown\r\n              />\r\n            </div>\r\n          ) : link.component ? (\r\n            React.createElement(link.component, {\r\n              users: userData || [],\r\n              matters,\r\n              onBack: onClose,\r\n            })\r\n          ) : (\r\n            <div>\r\n              <Text>No form available for this item.</Text>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n  <div className={detailsContainerStyle(isDarkMode)} style={{ flexShrink: 0 }}>\r\n          <Stack tokens={{ childrenGap: 6 }}>\r\n            <Text>\r\n              <Link\r\n                href=\"https://helix-law.co.uk/\"\r\n                target=\"_blank\"\r\n                styles={{\r\n                  root: {\r\n                    color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n                    fontSize: '12px',\r\n                    fontFamily: 'Raleway, sans-serif',\r\n                    textDecoration: 'none',\r\n                  },\r\n                }}\r\n                aria-label=\"Helix Law Website\"\r\n              >\r\n                https://helix-law.co.uk/\r\n              </Link>{' '}\r\n              |{' '}\r\n              <Text\r\n                variant=\"small\"\r\n                styles={{\r\n                  root: {\r\n                    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                    display: 'inline',\r\n                  },\r\n                }}\r\n              >\r\n                01273 761990\r\n              </Text>\r\n            </Text>\r\n            <Text\r\n              styles={{\r\n                root: {\r\n                  fontSize: '12px',\r\n                  fontFamily: 'Raleway, sans-serif',\r\n                  color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                },\r\n              }}\r\n            >\r\n              Second Floor, Britannia House, 21 Station Street, Brighton, BN1 4DE\r\n            </Text>\r\n          </Stack>\r\n          <div className={buttonsContainerStyle(isDarkMode)}>\r\n            <div className={leftButtonsStyle()}>\r\n              {link.url && (\r\n                <>\r\n                  <PrimaryButton\r\n                    text=\"Copy\"\r\n                    onClick={copyToClipboard}\r\n                    styles={sharedPrimaryButtonStyles}\r\n                    ariaLabel=\"Copy URL to clipboard\"\r\n                  />\r\n                  <PrimaryButton\r\n                    text=\"Go To\"\r\n                    onClick={goToLink}\r\n                    styles={sharedPrimaryButtonStyles}\r\n                    ariaLabel=\"Go to URL\"\r\n                  />\r\n                </>\r\n              )}\r\n            </div>\r\n            <DefaultButton\r\n              text=\"Close\"\r\n              onClick={onClose}\r\n              styles={sharedDefaultButtonStyles}\r\n              ariaLabel=\"Close Details\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {copySuccess && (\r\n        <MessageBar\r\n          messageBarType={MessageBarType.success}\r\n          isMultiline={false}\r\n          onDismiss={() => setCopySuccess(null)}\r\n          dismissButtonAriaLabel=\"Close\"\r\n          styles={{\r\n            root: {\r\n              position: 'fixed',\r\n              bottom: 20,\r\n              right: 20,\r\n              maxWidth: '300px',\r\n              zIndex: 1000,\r\n              borderRadius: '4px',\r\n            },\r\n          }}\r\n        >\r\n          {copySuccess}\r\n        </MessageBar>\r\n      )}\r\n    </BespokePanel>\r\n  );\r\n};\r\n\r\nexport default FormDetails;\r\n","import * as React from 'react';\nimport { TooltipBase } from './Tooltip.base';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport type { ICalloutProps } from '../../Callout';\nimport type { IRenderFunction, IRefObject, IStyleFunctionOrObject } from '../../Utilities';\nimport type { IStyle, ITheme } from '../../Styling';\n\n/**\n * {@docCategory Tooltip}\n */\nexport interface ITooltip {}\n\n/**\n * {@docCategory Tooltip}\n */\nexport interface ITooltipProps extends Omit<React.HTMLAttributes<HTMLDivElement | TooltipBase>, 'content'> {\n  /**\n   * Optional callback to access the ITooltip interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: IRefObject<ITooltip>;\n\n  /**\n   * Properties to pass through for Callout.\n   * @defaultvalue `{ isBeakVisible: true, beakWidth: 16, gapSpace: 0, setInitialFocus: true, doNotLayer: false }`\n   */\n  calloutProps?: ICalloutProps;\n\n  /**\n   * Content to be passed to the tooltip\n   */\n  // eslint-disable-next-line @typescript-eslint/no-deprecated\n  content?: string | JSX.Element | JSX.Element[];\n\n  /**\n   * Render function to populate tooltip content.\n   */\n  onRenderContent?: IRenderFunction<ITooltipProps>;\n\n  /**\n   * Length of delay. Set to `TooltipDelay.zero` if you do not want a delay.\n   * @defaultvalue TooltipDelay.medium\n   */\n  delay?: TooltipDelay;\n\n  /**\n   * Max width of tooltip\n   * @defaultvalue 364px\n   */\n  maxWidth?: string | null;\n\n  /**\n   * Element to anchor the Tooltip to.\n   */\n  targetElement?: HTMLElement;\n\n  /**\n   * How the tooltip should be anchored to its `targetElement`.\n   * @defaultvalue DirectionalHint.topCenter\n   */\n  directionalHint?: DirectionalHint;\n\n  /**\n   * How the element should be positioned in RTL layouts.\n   * If not specified, a mirror of `directionalHint` will be used instead\n   */\n  directionalHintForRTL?: DirectionalHint;\n\n  /**\n   * Theme provided by higher-order component.\n   */\n  theme?: ITheme;\n\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules.\n   */\n  styles?: IStyleFunctionOrObject<ITooltipStyleProps, ITooltipStyles>;\n}\n\n/**\n * {@docCategory Tooltip}\n */\nexport enum TooltipDelay {\n  zero = 0,\n  /** 300 ms delay before showing the tooltip */\n  medium = 1,\n  /** 500 ms delay before showing the tooltip */\n  long = 2,\n}\n\n/**\n * {@docCategory Tooltip}\n */\nexport interface ITooltipStyleProps {\n  theme: ITheme;\n\n  className?: string;\n\n  /**\n   * Delay before tooltip appears.\n   * @deprecated Delay logic moved to TooltipHost vs relying on animation delay.\n   */\n  delay?: TooltipDelay;\n\n  /**\n   * Maximum width of tooltip.\n   */\n  maxWidth?: string;\n\n  /**\n   * The gap between the Callout and the target\n   * @defaultvalue 0\n   */\n  gapSpace?: number;\n\n  /**\n   * The width of the Callout's beak\n   * @defaultvalue 16\n   */\n  beakWidth?: number;\n}\n\n/**\n * {@docCategory Tooltip}\n */\nexport interface ITooltipStyles {\n  /**\n   * Style for the root element.\n   */\n  root: IStyle;\n\n  /**\n   * Style for the content element.\n   */\n  content: IStyle;\n\n  /**\n   * Style for the subtext element.\n   */\n  subText: IStyle;\n}\n","import * as React from 'react';\nimport { classNamesFunction, divProperties, getNativeProps } from '../../Utilities';\nimport { Callout } from '../../Callout';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport type { IProcessedStyleSet } from '../../Styling';\nimport type { ITooltipProps, ITooltipStyleProps, ITooltipStyles } from './Tooltip.types';\n\nconst getClassNames = classNamesFunction<ITooltipStyleProps, ITooltipStyles>();\n\nexport class TooltipBase extends React.Component<ITooltipProps, any> {\n  // Specify default props values\n  public static defaultProps: Partial<ITooltipProps> = {\n    directionalHint: DirectionalHint.topCenter,\n    maxWidth: '364px',\n    calloutProps: {\n      isBeakVisible: true,\n      beakWidth: 16,\n      gapSpace: 0,\n      setInitialFocus: true,\n      doNotLayer: false,\n    },\n  };\n\n  private _classNames: IProcessedStyleSet<ITooltipStyles>;\n\n  // eslint-disable-next-line @typescript-eslint/no-deprecated\n  public render(): JSX.Element {\n    const {\n      className,\n      calloutProps,\n      directionalHint,\n      directionalHintForRTL,\n      styles,\n      id,\n      maxWidth,\n      onRenderContent = this._onRenderContent,\n      targetElement,\n      theme,\n    } = this.props;\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      className: className || (calloutProps && calloutProps.className),\n      beakWidth: calloutProps && calloutProps.isBeakVisible ? calloutProps.beakWidth : 0,\n      gapSpace: calloutProps && calloutProps.gapSpace,\n      maxWidth: maxWidth!,\n    });\n\n    return (\n      <Callout\n        target={targetElement}\n        directionalHint={directionalHint}\n        directionalHintForRTL={directionalHintForRTL}\n        {...calloutProps}\n        {...getNativeProps(this.props, divProperties, ['id'])} // omitting ID due to it being used in the div below\n        className={this._classNames.root}\n      >\n        <div\n          className={this._classNames.content}\n          id={id}\n          onFocus={this.props.onFocus}\n          onMouseEnter={this.props.onMouseEnter}\n          onMouseLeave={this.props.onMouseLeave}\n        >\n          {onRenderContent(this.props, this._onRenderContent)}\n        </div>\n      </Callout>\n    );\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-deprecated\n  private _onRenderContent = (props: ITooltipProps): JSX.Element => {\n    if (typeof props.content === 'string') {\n      return <p className={this._classNames.subText}>{props.content}</p>;\n    } else {\n      return <div className={this._classNames.subText}>{props.content}</div>;\n    }\n  };\n}\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { TooltipBase } from './Tooltip.base';\nimport { getStyles } from './Tooltip.styles';\nimport type { ITooltipProps, ITooltipStyleProps, ITooltipStyles } from './Tooltip.types';\n\nexport const Tooltip: React.FunctionComponent<ITooltipProps> = styled<\n  ITooltipProps,\n  ITooltipStyleProps,\n  ITooltipStyles\n>(TooltipBase, getStyles, undefined, {\n  scope: 'Tooltip',\n});\n","import { AnimationClassNames } from '../../Styling';\nimport type { ITooltipStyleProps, ITooltipStyles } from './Tooltip.types';\n\nexport const getStyles = (props: ITooltipStyleProps): ITooltipStyles => {\n  const { className, beakWidth = 16, gapSpace = 0, maxWidth, theme } = props;\n  const { semanticColors, fonts, effects } = theme;\n\n  // The math here is done to account for the 45 degree rotation of the beak\n  // and sub-pixel rounding that differs across browsers, which is more noticeable when\n  // the device pixel ratio is larger\n  const tooltipGapSpace =\n    -(Math.sqrt((beakWidth * beakWidth) / 2) + gapSpace) +\n    1 /\n      // There isn't really a great way to pass in a `window` reference here so disabling the line rule\n      // eslint-disable-next-line no-restricted-globals\n      window.devicePixelRatio;\n\n  return {\n    root: [\n      'ms-Tooltip',\n      theme.fonts.medium,\n      AnimationClassNames.fadeIn200,\n      {\n        background: semanticColors.menuBackground,\n        boxShadow: effects.elevation8,\n        padding: '8px',\n        maxWidth,\n        selectors: {\n          ':after': {\n            content: `''`,\n            position: 'absolute',\n            bottom: tooltipGapSpace,\n            left: tooltipGapSpace,\n            right: tooltipGapSpace,\n            top: tooltipGapSpace,\n            zIndex: 0,\n          },\n        },\n      },\n      className,\n    ],\n    content: [\n      'ms-Tooltip-content',\n      fonts.small,\n      {\n        position: 'relative',\n        zIndex: 1,\n        color: semanticColors.menuItemText,\n        wordWrap: 'break-word',\n        overflowWrap: 'break-word',\n        overflow: 'hidden',\n      },\n    ],\n    subText: [\n      'ms-Tooltip-subtext',\n      {\n        // Using inherit here to avoid unintentional global overrides of the <p> tag.\n        fontSize: 'inherit',\n        fontWeight: 'inherit',\n        color: 'inherit',\n        margin: 0,\n      },\n    ],\n  };\n};\n","import * as React from 'react';\nimport { hiddenContentStyle } from '../../Styling';\nimport {\n  initializeComponentRef,\n  Async,\n  divProperties,\n  getNativeProps,\n  getId,\n  assign,\n  hasOverflow,\n  portalContainsElement,\n  classNamesFunction,\n  KeyCodes,\n} from '../../Utilities';\nimport { TooltipOverflowMode } from './TooltipHost.types';\nimport { Tooltip } from './Tooltip';\nimport { TooltipDelay } from './Tooltip.types';\nimport type { ITooltipHostProps, ITooltipHostStyles, ITooltipHostStyleProps, ITooltipHost } from './TooltipHost.types';\nimport { WindowContext } from '@fluentui/react-window-provider';\nimport { getDocumentEx } from '../../utilities/dom';\n\nexport interface ITooltipHostState {\n  /** @deprecated No longer used internally */\n  isAriaPlaceholderRendered: boolean;\n  isTooltipVisible: boolean;\n}\n\nconst getClassNames = classNamesFunction<ITooltipHostStyleProps, ITooltipHostStyles>();\n\nexport class TooltipHostBase extends React.Component<ITooltipHostProps, ITooltipHostState> implements ITooltipHost {\n  public static defaultProps = {\n    delay: TooltipDelay.medium,\n  };\n  public static contextType = WindowContext;\n  private static _currentVisibleTooltip: ITooltipHost | undefined;\n\n  public context: any;\n\n  // The wrapping div that gets the hover events\n  private _tooltipHost = React.createRef<HTMLDivElement>();\n\n  private _classNames: { [key in keyof ITooltipHostStyles]: string };\n  private _async: Async;\n  private _dismissTimerId: number;\n  private _openTimerId: number;\n  private _defaultTooltipId = getId('tooltip');\n  private _ignoreNextFocusEvent: boolean;\n\n  // Constructor\n  constructor(props: ITooltipHostProps) {\n    super(props);\n\n    initializeComponentRef(this);\n\n    this.state = {\n      isAriaPlaceholderRendered: false,\n      isTooltipVisible: false,\n    };\n  }\n\n  // Render\n  // eslint-disable-next-line @typescript-eslint/no-deprecated\n  public render(): JSX.Element {\n    const {\n      calloutProps,\n      children,\n      content,\n      directionalHint,\n      directionalHintForRTL,\n      hostClassName: className,\n      id,\n      // eslint-disable-next-line @typescript-eslint/no-deprecated\n      setAriaDescribedBy = true,\n      tooltipProps,\n      styles,\n      theme,\n    } = this.props;\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n    });\n\n    const { isTooltipVisible } = this.state;\n    const tooltipId = id || this._defaultTooltipId;\n\n    const tooltipRenderProps = {\n      id: `${tooltipId}--tooltip`,\n      content,\n      targetElement: this._getTargetElement(),\n      directionalHint,\n      directionalHintForRTL,\n      calloutProps: assign({}, calloutProps, {\n        onDismiss: this._hideTooltip,\n        onFocus: this._onTooltipContentFocus,\n        onMouseEnter: this._onTooltipMouseEnter,\n        onMouseLeave: this._onTooltipMouseLeave,\n      }),\n      onMouseEnter: this._onTooltipMouseEnter,\n      onMouseLeave: this._onTooltipMouseLeave,\n      ...getNativeProps(this.props, divProperties, ['id']), // Make sure we use the id above\n      ...tooltipProps,\n    };\n\n    // Get the content of the tooltip for use in the hidden div used for screen readers\n    const tooltipContent = tooltipProps?.onRenderContent\n      ? tooltipProps.onRenderContent(tooltipRenderProps, props => (props?.content ? <>{props.content}</> : null))\n      : content;\n    const showTooltip = isTooltipVisible && !!tooltipContent;\n    const ariaDescribedBy = setAriaDescribedBy && isTooltipVisible && !!tooltipContent ? tooltipId : undefined;\n\n    return (\n      <div\n        className={this._classNames.root}\n        ref={this._tooltipHost}\n        {...{ onFocusCapture: this._onTooltipFocus }}\n        {...{ onBlurCapture: this._onTooltipBlur }}\n        onMouseEnter={this._onTooltipMouseEnter}\n        onMouseLeave={this._onTooltipMouseLeave}\n        onKeyDown={this._onTooltipKeyDown}\n        role=\"none\"\n        // WARNING: aria-describedby on this node provides no value, since it isn't allowed generic elements\n        aria-describedby={ariaDescribedBy}\n      >\n        {children}\n        {showTooltip && <Tooltip {...tooltipRenderProps} />}\n        <div hidden={true} id={tooltipId} style={hiddenContentStyle as React.CSSProperties}>\n          {tooltipContent}\n        </div>\n      </div>\n    );\n  }\n\n  public componentDidMount(): void {\n    this._async = new Async(this);\n  }\n\n  public componentWillUnmount(): void {\n    if (TooltipHostBase._currentVisibleTooltip && TooltipHostBase._currentVisibleTooltip === this) {\n      TooltipHostBase._currentVisibleTooltip = undefined;\n    }\n\n    this._async.dispose();\n  }\n\n  public show = (): void => {\n    this._toggleTooltip(true);\n  };\n\n  public dismiss = (): void => {\n    this._hideTooltip();\n  };\n\n  private _getTargetElement = (): HTMLElement | undefined => {\n    if (!this._tooltipHost.current) {\n      return undefined;\n    }\n\n    const { overflowMode } = this.props;\n\n    // Select target element based on overflow mode. For parent mode, you want to position the tooltip relative\n    // to the parent element, otherwise it might look off.\n    if (overflowMode !== undefined) {\n      switch (overflowMode) {\n        case TooltipOverflowMode.Parent:\n          return this._tooltipHost.current.parentElement!;\n\n        case TooltipOverflowMode.Self:\n          return this._tooltipHost.current;\n      }\n    }\n\n    return this._tooltipHost.current;\n  };\n\n  private _onTooltipFocus = (ev: React.FocusEvent<HTMLElement>) => {\n    if (this._ignoreNextFocusEvent) {\n      this._ignoreNextFocusEvent = false;\n      return;\n    }\n\n    this._onTooltipMouseEnter(ev);\n  };\n\n  private _onTooltipContentFocus = (ev: React.FocusEvent<HTMLElement>) => {\n    if (TooltipHostBase._currentVisibleTooltip && TooltipHostBase._currentVisibleTooltip !== this) {\n      TooltipHostBase._currentVisibleTooltip.dismiss();\n    }\n    TooltipHostBase._currentVisibleTooltip = this;\n\n    this._clearDismissTimer();\n    this._clearOpenTimer();\n  };\n\n  private _onTooltipBlur = (ev: React.FocusEvent<HTMLElement>) => {\n    // The focused element gets a blur event when the document loses focus\n    // (e.g. switching tabs in the browser), but we don't want to show the\n    // tooltip again when the document gets focus back. Handle this case by\n    // checking if the blurred element is still the document's activeElement,\n    // and ignoring when it next gets focus back.\n    // See https://github.com/microsoft/fluentui/issues/13541\n    this._ignoreNextFocusEvent = getDocumentEx(this.context)?.activeElement === ev.target;\n\n    this._dismissTimerId = this._async.setTimeout(() => {\n      this._hideTooltip();\n    }, 0);\n  };\n\n  // Show Tooltip\n  private _onTooltipMouseEnter = (ev: any): void => {\n    const { overflowMode, delay } = this.props;\n    const doc = getDocumentEx(this.context);\n\n    if (TooltipHostBase._currentVisibleTooltip && TooltipHostBase._currentVisibleTooltip !== this) {\n      TooltipHostBase._currentVisibleTooltip.dismiss();\n    }\n    TooltipHostBase._currentVisibleTooltip = this;\n\n    if (overflowMode !== undefined) {\n      const overflowElement = this._getTargetElement();\n      if (overflowElement && !hasOverflow(overflowElement)) {\n        return;\n      }\n    }\n\n    if (ev.target && portalContainsElement(ev.target as HTMLElement, this._getTargetElement(), doc)) {\n      // Do not show tooltip when target is inside a portal relative to TooltipHost.\n      return;\n    }\n\n    this._clearDismissTimer();\n    this._clearOpenTimer();\n\n    if (delay !== TooltipDelay.zero) {\n      const delayTime = this._getDelayTime(delay!); // non-null assertion because we set it in `defaultProps`\n\n      this._openTimerId = this._async.setTimeout(() => {\n        this._toggleTooltip(true);\n      }, delayTime);\n    } else {\n      this._toggleTooltip(true);\n    }\n  };\n\n  // Hide Tooltip\n  private _onTooltipMouseLeave = (ev: any): void => {\n    const { closeDelay } = this.props;\n\n    this._clearDismissTimer();\n    this._clearOpenTimer();\n\n    if (closeDelay) {\n      this._dismissTimerId = this._async.setTimeout(() => {\n        this._toggleTooltip(false);\n      }, closeDelay);\n    } else {\n      this._toggleTooltip(false);\n    }\n\n    if (TooltipHostBase._currentVisibleTooltip === this) {\n      TooltipHostBase._currentVisibleTooltip = undefined;\n    }\n  };\n\n  private _onTooltipKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    if ((ev.which === KeyCodes.escape || ev.ctrlKey) && this.state.isTooltipVisible) {\n      this._hideTooltip();\n      ev.stopPropagation();\n    }\n  };\n\n  private _clearDismissTimer = (): void => {\n    this._async.clearTimeout(this._dismissTimerId);\n  };\n\n  private _clearOpenTimer = (): void => {\n    this._async.clearTimeout(this._openTimerId);\n  };\n\n  // Hide Tooltip\n  private _hideTooltip = (): void => {\n    this._clearOpenTimer();\n    this._clearDismissTimer();\n    this._toggleTooltip(false);\n  };\n\n  private _toggleTooltip = (isTooltipVisible: boolean): void => {\n    if (this.state.isTooltipVisible !== isTooltipVisible) {\n      this.setState(\n        { isTooltipVisible },\n        () => this.props.onTooltipToggle && this.props.onTooltipToggle(isTooltipVisible),\n      );\n    }\n  };\n\n  private _getDelayTime = (delay: TooltipDelay): number => {\n    switch (delay) {\n      case TooltipDelay.medium:\n        return 300;\n      case TooltipDelay.long:\n        return 500;\n      default:\n        return 0;\n    }\n  };\n}\n","/**\n * Detects whether an element's content has horizontal overflow\n *\n * @public\n * @param element - Element to check for overflow\n * @returns True if element's content overflows\n */\nexport function hasHorizontalOverflow(element: HTMLElement): boolean {\n  return element.clientWidth < element.scrollWidth;\n}\n\n/**\n * Detects whether an element's content has vertical overflow\n *\n * @public\n * @param element - Element to check for overflow\n * @returns True if element's content overflows\n */\nexport function hasVerticalOverflow(element: HTMLElement): boolean {\n  return element.clientHeight < element.scrollHeight;\n}\n\n/**\n * Detects whether an element's content has overflow in any direction\n *\n * @public\n * @param element - Element to check for overflow\n * @returns True if element's content overflows\n */\nexport function hasOverflow(element: HTMLElement): boolean {\n  return hasHorizontalOverflow(element) || hasVerticalOverflow(element);\n}\n","import { getGlobalClassNames } from '../../Styling';\nimport type { ITooltipHostStyleProps, ITooltipHostStyles } from './TooltipHost.types';\n\nconst GlobalClassNames = {\n  root: 'ms-TooltipHost',\n  ariaPlaceholder: 'ms-TooltipHost-aria-placeholder',\n};\n\nexport const getStyles = (props: ITooltipHostStyleProps): ITooltipHostStyles => {\n  const { className, theme } = props;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      {\n        display: 'inline',\n      },\n      className,\n    ],\n  };\n};\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { TooltipHostBase } from './TooltipHost.base';\nimport { getStyles } from './TooltipHost.styles';\nimport type { ITooltipHostProps, ITooltipHostStyleProps, ITooltipHostStyles } from './TooltipHost.types';\n\nexport const TooltipHost: React.FunctionComponent<ITooltipHostProps> = styled<\n  ITooltipHostProps,\n  ITooltipHostStyleProps,\n  ITooltipHostStyles\n>(TooltipHostBase, getStyles, undefined, {\n  scope: 'TooltipHost',\n});\n","import * as React from 'react';\nimport { TooltipHostBase } from './TooltipHost.base';\nimport { TooltipDelay } from './Tooltip.types';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport type { ITooltipProps } from './Tooltip.types';\nimport type { ICalloutProps } from '../../Callout';\nimport type { IRefObject, IStyleFunctionOrObject } from '../../Utilities';\nimport type { IStyle, ITheme } from '../../Styling';\n\n/**\n * {@docCategory Tooltip}\n */\nexport interface ITooltipHost {\n  /**\n   * Shows the tooltip.\n   */\n  show: () => void;\n\n  /**\n   * Dismisses the tooltip.\n   */\n  dismiss: () => void;\n}\n\n/**\n * {@docCategory Tooltip}\n */\nexport enum TooltipOverflowMode {\n  /** Only show tooltip if parent DOM element is overflowing */\n  Parent,\n\n  /**\n   * Only show tooltip if tooltip host's content is overflowing.\n   * Note that this does not check the children for overflow, only the TooltipHost root.\n   */\n  Self,\n}\n\n/**\n * TooltipHost props. Note that native props (such as `id`, `className`, and `aria-` props) are\n * passed through to the Tooltip itself, rather than being used on the host element.\n * {@docCategory Tooltip}\n */\nexport interface ITooltipHostProps extends Omit<React.HTMLAttributes<HTMLDivElement | TooltipHostBase>, 'content'> {\n  /**\n   * Optional callback to access the ITooltipHost interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: IRefObject<ITooltipHost>;\n\n  /**\n   * Additional properties to pass through for Callout.\n   */\n  calloutProps?: ICalloutProps;\n\n  /**\n   * Number of milliseconds to delay closing the tooltip, so that the user has time to hover over\n   * the tooltip and interact with it. Hovering over the tooltip will count as hovering over the\n   * host, so that the tooltip will stay open if the user is actively interacting with it.\n   */\n  closeDelay?: number;\n\n  /**\n   * Content to display in the Tooltip.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-deprecated\n  content?: string | JSX.Element | JSX.Element[];\n\n  /**\n   * Length of delay before showing the tooltip on hover.\n   * @defaultvalue TooltipDelay.medium\n   */\n  delay?: TooltipDelay;\n\n  /**\n   * How the tooltip should be anchored to its `targetElement`.\n   * @defaultvalue DirectionalHint.topCenter\n   */\n  directionalHint?: DirectionalHint;\n\n  /**\n   * How the element should be positioned in RTL layouts.\n   * If not specified, a mirror of `directionalHint` will be used.\n   */\n  directionalHintForRTL?: DirectionalHint;\n\n  /**\n   * Class name to apply to tooltip host.\n   */\n  hostClassName?: string;\n\n  /**\n   * Class name to apply to the *tooltip itself*, not the host.\n   * To apply a class to the host, use `hostClassName` or `styles.root`.\n   */\n  className?: string;\n\n  /**\n   * If this is unset (the default), the tooltip is always shown even if there's no overflow.\n   *\n   * If set, only show the tooltip if the specified element (`Self` or `Parent`) has overflow.\n   * When set to `Parent`, the parent element is also used as the tooltip's target element.\n   *\n   * Note that even with `Self` mode, the TooltipHost *does not* check whether any children have overflow.\n   */\n  overflowMode?: TooltipOverflowMode;\n\n  /**\n   * Whether or not to mark the TooltipHost root element as described by the tooltip.\n   * Since this applies aria-describedby to a generic <div>, the description will not be\n   * read by screen readers. Instead, the caller should pass an `id` to the TooltipHost\n   * (to be passed through to the Tooltip) and mark the appropriate element as `aria-describedby`\n   * with the `id`.\n   * @defaultvalue true\n   * @deprecated use aria-describedby on the appropriate element instead\n   */\n  setAriaDescribedBy?: boolean;\n\n  /**\n   * Additional properties to pass through for Tooltip.\n   */\n  tooltipProps?: ITooltipProps;\n\n  /**\n   * Optional ID to pass through to the tooltip (not used on the host itself).\n   * Auto-generated if not provided.\n   */\n  id?: string;\n\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules.\n   */\n  styles?: IStyleFunctionOrObject<ITooltipHostStyleProps, ITooltipHostStyles>;\n\n  /**\n   * Theme provided by higher-order component.\n   */\n  theme?: ITheme;\n\n  /**\n   * Notifies when tooltip becomes visible or hidden, whatever the trigger was.\n   */\n  onTooltipToggle?(isTooltipVisible: boolean): void;\n}\n\n/**\n * {@docCategory Tooltip}\n */\nexport interface ITooltipHostStyleProps {\n  theme: ITheme;\n  className?: string;\n}\n\n/**\n * {@docCategory Tooltip}\n */\nexport interface ITooltipHostStyles {\n  /**\n   * Style for the host wrapper element.\n   */\n  root: IStyle;\n}\n","// src/app/functionality/BespokePanel.tsx\r\n// Clean, smooth panel implementation\r\n\r\nimport React, { ReactNode, useEffect, useRef, useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { IconButton, Text } from '@fluentui/react';\r\nimport { mergeStyles } from '@fluentui/react';\r\nimport { colours } from '../styles/colours';\r\n\r\ninterface BespokePanelProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  title: string;\r\n  description?: string;\r\n  children: ReactNode;\r\n  width?: string;\r\n  offsetTop?: number;\r\n  isDarkMode?: boolean;\r\n  variant?: 'side' | 'modal';\r\n  icon?: React.ComponentType<any>;\r\n}\r\n\r\n// Simple, clean overlay (avoid 100vw/100vh to prevent scrollbar width shifts)\r\nconst getOverlayStyle = (offsetTop: number, isClosing: boolean, variant: 'side' | 'modal') =>\r\n  mergeStyles({\r\n    position: 'fixed',\r\n    top: variant === 'side' ? offsetTop : 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    background: 'rgba(0, 0, 0, 0.4)',\r\n    display: 'flex',\r\n    justifyContent: variant === 'side' ? 'flex-end' : 'center',\r\n    alignItems: variant === 'side' ? 'stretch' : 'center',\r\n    padding: variant === 'modal' ? '20px' : 0,\r\n    zIndex: 2000,\r\n    opacity: isClosing ? 0 : 1,\r\n    transition: 'opacity 0.2s ease',\r\n    margin: 0,\r\n    marginTop: '0 !important',\r\n    // Only allow overlay to scroll in modal mode; for side panels, let panel content handle scrolling\r\n    overflowY: variant === 'modal' ? 'auto' : 'hidden',\r\n  });\r\n\r\n// Clean panel styling\r\nconst getPanelStyle = (width: string, isClosing: boolean, isDarkMode: boolean, variant: 'side' | 'modal') =>\r\n  mergeStyles({\r\n    background: isDarkMode ? colours.dark.background : colours.light.background,\r\n  width: variant === 'side' ? (width || '480px') : (width || 'min(95vw, 1400px)'),\r\n    maxWidth: variant === 'side' ? '90vw' : '95vw',\r\n    height: variant === 'side' ? '100%' : 'auto',\r\n    minHeight: 0,\r\n    maxHeight: variant === 'side' ? 'none' : 'calc(100vh - 40px)',\r\n    boxShadow: isDarkMode\r\n      ? (variant === 'side' ? '-4px 0 16px rgba(0, 0, 0, 0.3)' : '0 10px 30px rgba(0,0,0,0.35)')\r\n      : (variant === 'side' ? '-4px 0 16px rgba(0, 0, 0, 0.15)' : '0 10px 30px rgba(0,0,0,0.15)'),\r\n    borderRadius: variant === 'side' ? 0 : 12,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    transform: variant === 'side'\r\n      ? (isClosing ? 'translateX(100%)' : 'translateX(0)')\r\n      : (isClosing ? 'scale(0.98) translateY(-6px)' : 'scale(1) translateY(0)'),\r\n    transition: variant === 'side' ? 'transform 0.25s ease-out' : 'transform 0.18s ease-out',\r\n    overflow: 'hidden',\r\n    margin: variant === 'modal' ? 'auto' : undefined,\r\n  });\r\n\r\n// Simple header\r\nconst getHeaderStyle = (isDarkMode: boolean) =>\r\n  mergeStyles({\r\n    padding: '16px 20px',\r\n    background: isDarkMode ? colours.dark.cardBackground : colours.light.cardBackground,\r\n    borderBottom: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    flexShrink: 0,\r\n  });\r\n\r\n// Clean content area\r\nconst getContentStyle = () =>\r\n  mergeStyles({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    padding: '16px',\r\n    overflowY: 'auto',\r\n    // Critical for nested flex layouts: allow this container to shrink so inner scroll works\r\n    minHeight: 0,\r\n    flexGrow: 1,\r\n  });\r\n\r\nconst BespokePanel: React.FC<BespokePanelProps> = ({ \r\n  isOpen, \r\n  onClose, \r\n  title, \r\n  description,\r\n  children, \r\n  width, \r\n  offsetTop = 0,\r\n  isDarkMode = false,\r\n  variant = 'side',\r\n  icon: IconComponent\r\n}) => {\r\n  const [isClosing, setIsClosing] = useState<boolean>(false);\r\n  const [isVisible, setIsVisible] = useState<boolean>(false);\r\n  const [portalContainer, setPortalContainer] = useState<HTMLElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      // Simple scroll prevention without layout shift\r\n      document.body.style.overflow = 'hidden';\r\n      // Stabilize layout when scrollbar disappears\r\n      const htmlEl = document.documentElement;\r\n      const prevGutter = htmlEl.style.scrollbarGutter;\r\n      htmlEl.style.scrollbarGutter = 'stable';\r\n      setIsVisible(true);\r\n    } else if (isVisible && !isOpen) {\r\n      handleClose();\r\n    }\r\n  }, [isOpen, isVisible]);\r\n\r\n  // Ensure we render at document.body level to avoid parent overflow/position contexts\r\n  useEffect(() => {\r\n    // Guard for non-browser environments\r\n    if (typeof document === 'undefined') return;\r\n    const container = document.createElement('div');\r\n    container.setAttribute('data-bespoke-panel-portal', '');\r\n    // Keep neutral styles; overlay inside handles positioning\r\n    document.body.appendChild(container);\r\n    setPortalContainer(container);\r\n    return () => {\r\n      try {\r\n        document.body.removeChild(container);\r\n      } catch (_) {\r\n        // ignore if already removed\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    if (isClosing) return;\r\n    \r\n    setIsClosing(true);\r\n    setTimeout(() => {\r\n      // Simply restore scroll\r\n      document.body.style.overflow = '';\r\n      const htmlEl = document.documentElement;\r\n      htmlEl.style.scrollbarGutter = '';\r\n      \r\n      setIsClosing(false);\r\n      setIsVisible(false);\r\n      onClose();\r\n    }, 250);\r\n  };\r\n\r\n  // Handle escape key\r\n  useEffect(() => {\r\n    const handleEsc = (event: KeyboardEvent) => {\r\n      if (event.key === 'Escape' && isVisible && !isClosing) {\r\n        handleClose();\r\n      }\r\n    };\r\n    \r\n    if (isVisible) {\r\n      document.addEventListener('keydown', handleEsc);\r\n    }\r\n    \r\n    return () => {\r\n      document.removeEventListener('keydown', handleEsc);\r\n    };\r\n  }, [isVisible, isClosing]);\r\n\r\n  if (!isVisible) return null;\r\n\r\n  const overlayNode = (\r\n    <div\r\n      className={getOverlayStyle(offsetTop, isClosing, variant)}\r\n      onClick={handleClose}\r\n      role=\"dialog\"\r\n      aria-modal=\"true\"\r\n    >\r\n      <div\r\n        className={getPanelStyle(width || '480px', isClosing, isDarkMode, variant)}\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        <div className={getHeaderStyle(isDarkMode)}>\r\n          <div style={{ display: 'flex', alignItems: 'flex-start', gap: '12px' }}>\r\n            {IconComponent && typeof IconComponent === 'function' && (\r\n              <div\r\n                style={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  width: 20,\r\n                  height: 20,\r\n                  marginTop: 2,\r\n                }}\r\n              >\r\n                {React.createElement(IconComponent, {\r\n                  style: {\r\n                    fontSize: 20,\r\n                    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                  },\r\n                })}\r\n              </div>\r\n            )}\r\n            <div style={{ flex: 1 }}>\r\n              <Text\r\n                variant=\"large\"\r\n                styles={{\r\n                  root: {\r\n                    fontWeight: 600,\r\n                    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                    marginBottom: description ? '4px' : '0',\r\n                  },\r\n                }}\r\n              >\r\n                {title}\r\n              </Text>\r\n              {description && (\r\n                <Text\r\n                  variant=\"medium\"\r\n                  styles={{\r\n                    root: {\r\n                      fontWeight: 400,\r\n                      color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n                      fontSize: '12px',\r\n                      lineHeight: '1.4',\r\n                      display: 'block',\r\n                    },\r\n                  }}\r\n                >\r\n                  {description}\r\n                </Text>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <IconButton\r\n            iconProps={{ iconName: 'Cancel' }}\r\n            ariaLabel=\"Close Panel\"\r\n            onClick={handleClose}\r\n            styles={{\r\n              root: {\r\n                color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                ':hover': {\r\n                  backgroundColor: isDarkMode\r\n                    ? 'rgba(255, 255, 255, 0.1)'\r\n                    : 'rgba(0, 0, 0, 0.05)',\r\n                },\r\n              },\r\n            }}\r\n          />\r\n        </div>\r\n        <div className={getContentStyle()}>{children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // Use portal when available; fall back to inline render to avoid blank state race conditions\r\n  return portalContainer ? createPortal(overlayNode, portalContainer) : overlayNode;\r\n};\r\n\r\nexport default BespokePanel;\r\n","import { getGlobalClassNames, HighContrastSelector } from '@fluentui/style-utilities';\nimport type { ILinkStyleProps, ILinkStyles } from './Link.types';\nimport { IsFocusVisibleClassName } from '@fluentui/utilities';\n\nexport const GlobalClassNames = {\n  root: 'ms-Link',\n};\n\nexport const getStyles = (props: ILinkStyleProps): ILinkStyles => {\n  const { className, isButton, isDisabled, isUnderlined, theme } = props;\n  const { semanticColors } = theme;\n\n  // Tokens\n  const linkColor = semanticColors.link;\n  const linkInteractedColor = semanticColors.linkHovered;\n  const linkDisabledColor = semanticColors.disabledText;\n  const focusBorderColor = semanticColors.focusBorder;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        color: linkColor,\n        outline: 'none',\n        fontSize: 'inherit',\n        fontWeight: 'inherit',\n        textDecoration: isUnderlined ? 'underline' : 'none',\n\n        selectors: {\n          [`.${IsFocusVisibleClassName} &:focus, :host(.${IsFocusVisibleClassName}) &:focus`]: {\n            // Can't use getFocusStyle because it doesn't support wrapping links\n            // https://github.com/microsoft/fluentui/issues/4883#issuecomment-406743543\n            // Using box-shadow and outline allows the focus rect to wrap links that span multiple lines\n            // and helps the focus rect avoid getting clipped.\n            boxShadow: `0 0 0 1px ${focusBorderColor} inset`,\n            outline: `1px auto ${focusBorderColor}`,\n            selectors: {\n              [HighContrastSelector]: {\n                outline: '1px solid WindowText',\n              },\n            },\n          },\n          [HighContrastSelector]: {\n            // For IE high contrast mode\n            borderBottom: 'none',\n          },\n        },\n      },\n      isButton && {\n        background: 'none',\n        backgroundColor: 'transparent',\n        border: 'none',\n        cursor: 'pointer',\n        display: 'inline',\n        margin: 0,\n        overflow: 'inherit',\n        padding: 0,\n        textAlign: 'left',\n        textOverflow: 'inherit',\n        userSelect: 'text',\n        borderBottom: '1px solid transparent', // For Firefox high contrast mode\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'LinkText',\n            forcedColorAdjust: 'none',\n          },\n        },\n      },\n      !isButton && {\n        selectors: {\n          [HighContrastSelector]: {\n            // This is mainly for MessageBar, which sets MsHighContrastAdjust: none by default\n            MsHighContrastAdjust: 'auto',\n            forcedColorAdjust: 'auto',\n          },\n        },\n      },\n\n      isDisabled && [\n        'is-disabled',\n        {\n          color: linkDisabledColor,\n          cursor: 'default',\n        },\n        {\n          selectors: {\n            '&:link, &:visited': {\n              pointerEvents: 'none',\n            },\n\n            [HighContrastSelector]: {\n              // We need to specify the color in High Contrast because of the case of Links rendering as buttons.\n              color: 'GrayText',\n            },\n          },\n        },\n      ],\n      !isDisabled && {\n        selectors: {\n          '&:active, &:hover, &:active:hover': {\n            color: linkInteractedColor,\n            textDecoration: 'underline',\n\n            selectors: {\n              [HighContrastSelector]: {\n                color: 'LinkText',\n              },\n            },\n          },\n          '&:focus': {\n            color: linkColor,\n\n            selectors: {\n              [HighContrastSelector]: {\n                color: 'LinkText',\n              },\n            },\n          },\n        },\n      },\n      classNames.root,\n      className,\n    ],\n  };\n};\n"],"names":["getClassNames","classNamesFunction","useComponentRef","props","link","React","componentRef","focus","current","adjustPropsForRootType","RootType","as","disabled","target","href","restProps","theme","getStyles","styles","underline","__rest","__assign","undefined","type","LinkBase","ref","_a","forwardedRef","className","onClick","rootRef","mergedRootRefs","useMergedRefs","useFocusRects","classNames","isButton","isDisabled","isUnderlined","rootType","state","slots","root","slotProps","ev","preventDefault","useLink","displayName","Link","styled","scope","_ref","outlineIcon","filledIcon","_jsx","IconButton","onRenderIcon","_jsxs","children","Icon","iconName","iconButtonStyles","iconColor","marginBottom","color","backgroundColor","border","selectors","colours","cta","height","width","padding","boxShadow","icon","fontSize","lineHeight","cardStyle","isDarkMode","mergeStyles","dark","sectionBackground","light","borderRadius","transition","cursor","display","flexDirection","alignItems","position","componentTokens","card","hover","transform","mainContentStyle","gap","flex","textContentStyle","marginLeft","linkTitleStyle","fontWeight","marginTop","descriptionStyle","subText","actionsContainerStyle","zIndex","separatorStyle","margin","alignSelf","isFavorite","onCopy","onToggleFavorite","onGoTo","onSelect","animationDelay","useTheme","TooltipHost","content","title","style","role","tabIndex","onKeyPress","e","key","endsWith","src","alt","filter","Text","description","id","ActionIconButton","ariaLabel","stopPropagation","url","containerStyle","maxWidth","minHeight","background","fontFamily","sectionStyle","boxSizing","sectionHeaderStyleCustom","text","resourceGridStyle","gridTemplateColumns","paddingTop","_selectedLink$tags","userData","matters","favorites","setFavorites","useState","searchQuery","setSearchQuery","copySuccess","setCopySuccess","selectedLink","setSelectedLink","useEffect","handleStorageChange","event","newValue","JSON","parse","window","addEventListener","removeEventListener","formHubSections","useMemo","Favorites","General_Processes","formSections","Operations","Financial","storedFavorites","localStorage","getItem","setItem","stringify","copyToClipboard","useCallback","navigator","clipboard","writeText","then","setTimeout","catch","err","console","error","toggleFavorite","prev","updatedFavorites","some","fav","goToLink","open","filteredSections","filterLinks","links","toLowerCase","includes","sortLinks","reduce","acc","section","concat","calculateAnimationDelay","index","Math","floor","justifyContent","flexWrap","sharedSearchBoxContainerStyle","SearchBox","placeholder","value","onChange","_","sharedSearchBoxStyle","paddingBottom","length","variant","map","FormCard","MessageBar","messageBarType","MessageBarType","success","isMultiline","onDismiss","dismissButtonAriaLabel","bottom","right","FormDetails","isOpen","onClose","isFinancial","tags","offsetTop","inputBackground","outline","borderColor","field","opacity","detailsContainerStyle","loaderStyle","isCognitoLoaded","setIsCognitoLoaded","formContainerRef","useRef","isSubmitted","setIsSubmitted","submissionSuccess","setSubmissionSuccess","formKey","setFormKey","Date","now","isSubmitting","setIsSubmitting","loadCognitoScript","Promise","resolve","reject","Cognito","existingScript","document","getElementById","Error","script","createElement","async","onload","onerror","body","appendChild","embedScript","innerHTML","formScript","setAttribute","formId","handleFinancialSubmit","_userData$","payload","formType","data","values","initials","Initials","endpointUrl","getProxyBaseUrl","process","REACT_APP_POST_FINANCIAL_TASK_PATH","REACT_APP_POST_FINANCIAL_TASK_CODE","response","fetch","method","headers","ok","result","json","log","errText","BespokePanel","flexGrow","loaderIcon","fields","BespokeForm","name","label","onSubmit","onCancel","component","users","onBack","flexShrink","Stack","tokens","childrenGap","textDecoration","_Fragment","PrimaryButton","sharedPrimaryButtonStyles","DefaultButton","sharedDefaultButtonStyles","TooltipDelay","TooltipBase","_super","_this","_onRenderContent","_classNames","__extends","prototype","render","this","calloutProps","directionalHint","directionalHintForRTL","_b","onRenderContent","targetElement","beakWidth","isBeakVisible","gapSpace","Callout","getNativeProps","divProperties","onFocus","onMouseEnter","onMouseLeave","defaultProps","DirectionalHint","topCenter","setInitialFocus","doNotLayer","Tooltip","semanticColors","fonts","effects","tooltipGapSpace","sqrt","devicePixelRatio","medium","AnimationClassNames","fadeIn200","menuBackground","elevation8","left","top","small","menuItemText","wordWrap","overflowWrap","overflow","TooltipHostBase","call","_tooltipHost","_defaultTooltipId","getId","show","_toggleTooltip","dismiss","_hideTooltip","_getTargetElement","overflowMode","TooltipOverflowMode","Parent","parentElement","Self","_onTooltipFocus","_ignoreNextFocusEvent","_onTooltipMouseEnter","_onTooltipContentFocus","_currentVisibleTooltip","_clearDismissTimer","_clearOpenTimer","_onTooltipBlur","getDocumentEx","context","activeElement","_dismissTimerId","_async","element","delay","doc","overflowElement","clientWidth","scrollWidth","hasHorizontalOverflow","clientHeight","scrollHeight","hasVerticalOverflow","portalContainsElement","zero","delayTime","_getDelayTime","_openTimerId","_onTooltipMouseLeave","closeDelay","_onTooltipKeyDown","which","KeyCodes","escape","ctrlKey","isTooltipVisible","clearTimeout","setState","onTooltipToggle","long","initializeComponentRef","isAriaPlaceholderRendered","hostClassName","setAriaDescribedBy","tooltipProps","tooltipId","tooltipRenderProps","assign","tooltipContent","showTooltip","ariaDescribedBy","onFocusCapture","onBlurCapture","onKeyDown","hidden","hiddenContentStyle","componentDidMount","Async","componentWillUnmount","dispose","contextType","WindowContext","GlobalClassNames","ariaPlaceholder","getGlobalClassNames","getOverlayStyle","isClosing","overflowY","getPanelStyle","maxHeight","getHeaderStyle","cardBackground","borderBottom","IconComponent","setIsClosing","isVisible","setIsVisible","portalContainer","setPortalContainer","htmlEl","documentElement","scrollbarGutter","handleClose","container","removeChild","handleEsc","overlayNode","iconProps","createPortal","linkColor","linkInteractedColor","linkHovered","linkDisabledColor","disabledText","focusBorderColor","focusBorder","IsFocusVisibleClassName","HighContrastSelector","textAlign","textOverflow","userSelect","_c","forcedColorAdjust","_d","MsHighContrastAdjust","_e","pointerEvents","_f","_g"],"sourceRoot":""}