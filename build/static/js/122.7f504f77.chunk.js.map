{"version":3,"file":"static/js/122.7f504f77.chunk.js","mappings":"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","sources":["tabs/instructions/componentTokens.ts","utils/debug.ts","components/DocumentPreviewModal.tsx","tabs/instructions/InstructionCard.tsx","tabs/instructions/OverridePills.tsx","tabs/instructions/RiskComplianceCard.tsx","tabs/instructions/components/ClientLookupModal.tsx","tabs/instructions/components/RelatedClientsSection.tsx","tabs/instructions/MatterOperations.tsx","tabs/instructions/MatterOpening/MinimalSearchBox.tsx","tabs/instructions/MatterOpening/config.ts","tabs/instructions/MatterOpening/ModernMultiSelect.tsx","tabs/instructions/MatterOpening/ClientInfoStep.tsx","tabs/instructions/PoidCard.tsx","tabs/instructions/MatterOpening/PoidSelectionStep.tsx","tabs/instructions/MatterOpening/AreaOfWorkStep.tsx","tabs/instructions/MatterOpening/PracticeAreaStep.tsx","tabs/instructions/MatterOpening/DescriptionStep.tsx","tabs/instructions/MatterOpening/FolderStructureStep.tsx","tabs/instructions/MatterOpening/ValueAndSourceStep.tsx","data/referenceData.ts","utils/opponentDataTracker.ts","tabs/instructions/MatterOpening/OpponentDetailsStep.tsx","tabs/instructions/MatterOpening/BudgetStep.tsx","tabs/instructions/MatterOpening/CompletionContext.tsx","assets/ccl.svg","tabs/instructions/MatterOpening/processingActions.ts","tabs/instructions/MatterOpening/FlatMatterOpening.tsx","components/RiskAssessment.tsx","tabs/instructions/RiskAssessmentPage.tsx","tabs/instructions/PoidPreview.tsx","tabs/instructions/EIDCheckPage.tsx","tabs/instructions/hooks/useTemplateFields.ts","tabs/instructions/ccl/TemplateSelectionStep.tsx","tabs/instructions/ccl/TemplateEditorStep.tsx","tabs/instructions/ccl/PreviewActionsStep.tsx","tabs/instructions/ccl/PresetPanel.tsx","tabs/instructions/ccl/HoverTooltip.tsx","tabs/instructions/ccl/placeholderStyles.ts","tabs/instructions/templates/cclTemplate.ts","tabs/instructions/constants/fieldMetadata.ts","tabs/instructions/ccl/DocumentRenderer.tsx","tabs/instructions/ccl/utils/templateParser.ts","tabs/instructions/ccl/utils/templateUtils.ts","tabs/instructions/ccl/CCLPreview.tsx","tabs/instructions/DocumentsV3.tsx","components/filter/TwoLayerFilter.tsx","components/modals/IDVerificationReviewModal.tsx","services/verificationAPI.ts","tabs/instructions/Instructions.tsx"],"sourcesContent":["import { IStackTokens, IStackStyles } from '@fluentui/react';\r\n// invisible change 2.1\r\n//\r\nimport { colours } from '../../app/styles/colours';\r\n\r\nexport const dashboardTokens: IStackTokens = {\r\n  // Reduce vertical gap between stacked sections to reclaim space\r\n  childrenGap: 12,\r\n};\r\n\r\nexport const cardTokens: IStackTokens = {\r\n  childrenGap: 8,\r\n};\r\n\r\nexport const cardStyles: IStackStyles = {\r\n  root: {\r\n    padding: 20,\r\n    borderRadius: 8,\r\n    boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\r\n    backgroundColor: colours.light.sectionBackground,\r\n  },\r\n};\r\n\r\nexport const statusColors = {\r\n  pending: colours.orange,\r\n  completed: colours.green,\r\n  awaiting: colours.yellow,\r\n  notStarted: colours.greyText,\r\n};","/**\r\n * Lightweight debug logger gated by REACT_APP_DEBUG_LOGS.\r\n * Set REACT_APP_DEBUG_LOGS=true to enable verbose logs locally.\r\n */\r\nexport const isDebugLogs = (): boolean => process.env.REACT_APP_DEBUG_LOGS === 'true';\r\n\r\nexport const debugLog = (...args: unknown[]): void => {\r\n  if (isDebugLogs()) console.log(...args);\r\n};\r\n\r\nexport const debugWarn = (...args: unknown[]): void => {\r\n  if (isDebugLogs()) console.warn(...args);\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, IconButton, Spinner, Text, MessageBar, MessageBarType, PrimaryButton } from '@fluentui/react';\r\nimport { FaTimes, FaDownload, FaExternalLinkAlt } from 'react-icons/fa';\r\nimport { colours } from '../app/styles/colours';\r\n\r\ninterface DocumentPreviewModalProps {\r\n  isOpen: boolean;\r\n  onDismiss: () => void;\r\n  document: {\r\n    DocumentId: number;\r\n    FileName: string;\r\n    FileSizeBytes?: number;\r\n    InstructionRef?: string;\r\n  } | null;\r\n  instructionRef: string;\r\n  isDarkMode?: boolean;\r\n}\r\n\r\nconst DocumentPreviewModal: React.FC<DocumentPreviewModalProps> = ({\r\n  isOpen,\r\n  onDismiss,\r\n  document,\r\n  instructionRef,\r\n  isDarkMode = false\r\n}) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [previewUrl, setPreviewUrl] = useState<string>('');\r\n\r\n  // Reset state when modal opens/closes or document changes\r\n  useEffect(() => {\r\n    if (isOpen && document) {\r\n      setLoading(true);\r\n      setError(null);\r\n      const url = `/api/documents/preview/${encodeURIComponent(instructionRef)}/${document.DocumentId}`;\r\n      setPreviewUrl(url);\r\n      \r\n      // Determine file type for loading behavior\r\n      const fileName = document.FileName || '';\r\n      const fileExt = fileName.split('.').pop()?.toLowerCase() || '';\r\n      const isOfficeDoc = ['doc', 'docx', 'xls', 'xlsx', 'ppt', 'pptx'].includes(fileExt);\r\n      \r\n      // Office docs don't need loading time since we show immediate download UI\r\n      if (isOfficeDoc) {\r\n        setLoading(false);\r\n      } else {\r\n        // For other file types, give some loading time\r\n        const timer = setTimeout(() => {\r\n          setLoading(false);\r\n        }, 1000);\r\n        return () => clearTimeout(timer);\r\n      }\r\n    } else {\r\n      setLoading(false);\r\n      setError(null);\r\n      setPreviewUrl('');\r\n    }\r\n  }, [isOpen, document, instructionRef]);\r\n\r\n  if (!document) return null;\r\n\r\n  // Determine file type and appropriate preview method\r\n  const fileName = document.FileName || '';\r\n  const fileExt = fileName.split('.').pop()?.toLowerCase() || '';\r\n  const isImage = ['jpg', 'jpeg', 'png', 'gif', 'webp', 'svg'].includes(fileExt);\r\n  const isPdf = fileExt === 'pdf';\r\n  const isOfficeDoc = ['doc', 'docx', 'xls', 'xlsx', 'ppt', 'pptx'].includes(fileExt);\r\n  const isPreviewable = isImage || isPdf || isOfficeDoc;\r\n\r\n  const formatFileSize = (bytes?: number): string => {\r\n    if (!bytes) return 'Unknown size';\r\n    const units = ['B', 'KB', 'MB', 'GB'];\r\n    let size = bytes;\r\n    let unitIndex = 0;\r\n    while (size >= 1024 && unitIndex < units.length - 1) {\r\n      size /= 1024;\r\n      unitIndex++;\r\n    }\r\n    return `${size.toFixed(1)} ${units[unitIndex]}`;\r\n  };\r\n\r\n  const handleDownload = () => {\r\n    const downloadUrl = `${previewUrl}?download=true`;\r\n    const link = window.document.createElement('a');\r\n    link.href = downloadUrl;\r\n    link.download = fileName;\r\n    window.document.body.appendChild(link);\r\n    link.click();\r\n    window.document.body.removeChild(link);\r\n  };\r\n\r\n  const modalStyles = {\r\n    main: {\r\n      width: '90vw',\r\n      height: '90vh',\r\n      maxWidth: '1200px',\r\n      maxHeight: '800px',\r\n      padding: 0,\r\n      backgroundColor: isDarkMode ? colours.dark.background : '#ffffff',\r\n      borderRadius: '8px',\r\n      overflow: 'hidden' as const\r\n    }\r\n  };\r\n\r\n  const headerStyle: React.CSSProperties = {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: '16px 20px',\r\n    borderBottom: `1px solid ${isDarkMode ? colours.dark.border : '#e5e7eb'}`,\r\n    backgroundColor: isDarkMode ? colours.dark.cardBackground : '#f8fafc'\r\n  };\r\n\r\n  const contentStyle: React.CSSProperties = {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflow: 'hidden',\r\n    height: 'calc(90vh - 80px)'\r\n  };\r\n\r\n  const previewAreaStyle: React.CSSProperties = {\r\n    flex: 1,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: isDarkMode ? colours.dark.background : '#ffffff',\r\n    position: 'relative'\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      onDismiss={onDismiss}\r\n      isBlocking={false}\r\n      styles={modalStyles}\r\n    >\r\n      <div style={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n        {/* Header */}\r\n        <div style={headerStyle}>\r\n          <div>\r\n            <Text variant=\"large\" style={{ \r\n              fontWeight: 600, \r\n              color: isDarkMode ? colours.dark.text : colours.light.text,\r\n              marginBottom: '4px',\r\n              display: 'block'\r\n            }}>\r\n              {fileName}\r\n            </Text>\r\n            <Text variant=\"small\" style={{ \r\n              color: isDarkMode ? colours.dark.subText : '#64748b' \r\n            }}>\r\n              {formatFileSize(document.FileSizeBytes)} • {fileExt.toUpperCase()}\r\n            </Text>\r\n          </div>\r\n          <div style={{ display: 'flex', gap: '8px', alignItems: 'center' }}>\r\n            {isPreviewable && (\r\n              <IconButton\r\n                iconProps={{ iconName: 'Download' }}\r\n                title=\"Download\"\r\n                onClick={handleDownload}\r\n                styles={{\r\n                  root: {\r\n                    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                    backgroundColor: 'transparent',\r\n                    border: `1px solid ${isDarkMode ? colours.dark.border : '#e5e7eb'}`,\r\n                    borderRadius: '4px'\r\n                  }\r\n                }}\r\n              />\r\n            )}\r\n            <IconButton\r\n              iconProps={{ iconName: 'Cancel' }}\r\n              title=\"Close\"\r\n              onClick={onDismiss}\r\n              styles={{\r\n                root: {\r\n                  color: isDarkMode ? colours.dark.text : colours.light.text\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Content Area */}\r\n        <div style={contentStyle}>\r\n          {loading && (\r\n            <div style={previewAreaStyle}>\r\n              <div style={{ textAlign: 'center' }}>\r\n                <Spinner size={3} />\r\n                <Text style={{ \r\n                  marginTop: '12px', \r\n                  color: isDarkMode ? colours.dark.subText : '#64748b' \r\n                }}>\r\n                  Loading preview...\r\n                </Text>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {error && (\r\n            <div style={{ padding: '20px' }}>\r\n              <MessageBar messageBarType={MessageBarType.error}>\r\n                {error}\r\n              </MessageBar>\r\n            </div>\r\n          )}\r\n\r\n          {!loading && !error && (\r\n            <>\r\n              {/* Image Preview */}\r\n              {isImage && (\r\n                <div style={previewAreaStyle}>\r\n                  <img\r\n                    src={previewUrl}\r\n                    alt={fileName}\r\n                    style={{\r\n                      maxWidth: '100%',\r\n                      maxHeight: '100%',\r\n                      objectFit: 'contain'\r\n                    }}\r\n                    onLoad={() => setLoading(false)}\r\n                    onError={() => {\r\n                      setError('Failed to load image preview');\r\n                      setLoading(false);\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {/* PDF Preview */}\r\n              {isPdf && (\r\n                <div style={previewAreaStyle}>\r\n                  <iframe\r\n                    src={previewUrl}\r\n                    style={{\r\n                      width: '100%',\r\n                      height: '100%',\r\n                      border: 'none'\r\n                    }}\r\n                    title={`Preview of ${fileName}`}\r\n                    onLoad={() => setLoading(false)}\r\n                    onError={() => {\r\n                      setError('Failed to load PDF preview');\r\n                      setLoading(false);\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {/* Office Document Preview */}\r\n              {isOfficeDoc && (\r\n                <div style={previewAreaStyle}>\r\n                  <div style={{ \r\n                    textAlign: 'center', \r\n                    padding: '40px',\r\n                    color: isDarkMode ? colours.dark.text : colours.light.text\r\n                  }}>\r\n                    <div style={{ fontSize: '48px', marginBottom: '16px' }}>📄</div>\r\n                    <div style={{ fontSize: '16px', fontWeight: '600', marginBottom: '8px' }}>\r\n                      {fileName}\r\n                    </div>\r\n                    <div style={{ \r\n                      fontSize: '14px', \r\n                      marginBottom: '20px',\r\n                      color: isDarkMode ? colours.dark.subText : '#64748b'\r\n                    }}>\r\n                      {formatFileSize(document.FileSizeBytes)} • {fileExt.toUpperCase()} Document\r\n                    </div>\r\n                    <div style={{ \r\n                      fontSize: '14px', \r\n                      marginBottom: '20px',\r\n                      color: isDarkMode ? colours.dark.subText : '#64748b'\r\n                    }}>\r\n                      Office documents cannot be previewed directly in the browser.\r\n                      <br />\r\n                      Download the file to view it in Microsoft Office or a compatible application.\r\n                    </div>\r\n                    <PrimaryButton\r\n                      text=\"Download File\"\r\n                      iconProps={{ iconName: 'Download' }}\r\n                      onClick={handleDownload}\r\n                      styles={{\r\n                        root: {\r\n                          backgroundColor: '#0078d4',\r\n                          borderColor: '#0078d4'\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* Non-previewable files */}\r\n              {!isPreviewable && (\r\n                <div style={previewAreaStyle}>\r\n                  <div style={{ \r\n                    textAlign: 'center', \r\n                    padding: '40px',\r\n                    color: isDarkMode ? colours.dark.subText : '#64748b'\r\n                  }}>\r\n                    <div style={{ fontSize: '48px', marginBottom: '16px' }}>📄</div>\r\n                    <Text variant=\"large\" style={{ \r\n                      marginBottom: '8px',\r\n                      color: isDarkMode ? colours.dark.text : colours.light.text\r\n                    }}>\r\n                      Preview not available\r\n                    </Text>\r\n                    <Text style={{ marginBottom: '20px' }}>\r\n                      This file type cannot be previewed in the browser.\r\n                    </Text>\r\n                    <button\r\n                      onClick={handleDownload}\r\n                      style={{\r\n                        background: colours.blue,\r\n                        color: '#ffffff',\r\n                        border: 'none',\r\n                        padding: '12px 20px',\r\n                        borderRadius: '6px',\r\n                        cursor: 'pointer',\r\n                        fontSize: '14px',\r\n                        fontWeight: 500,\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        gap: '8px',\r\n                        margin: '0 auto'\r\n                      }}\r\n                    >\r\n                      <FaDownload /> Download File\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default DocumentPreviewModal;","import React, { useState, useEffect, useMemo } from 'react';\r\nimport { format, formatDistanceToNow } from 'date-fns';\r\nimport { mergeStyles } from '@fluentui/react';\r\nimport { TextField, DefaultButton, PrimaryButton, Dropdown, IDropdownOption, Icon } from '@fluentui/react';\r\nimport { colours } from '../../app/styles/colours';\r\nimport { useTheme } from '../../app/functionality/ThemeContext';\r\nimport OperationStatusToast from '../enquiries/pitch-builder/OperationStatusToast';\r\nimport { TeamData } from '../../app/functionality/types';\r\nimport {\r\n  FaUser,\r\n  FaUsers,\r\n  FaFileAlt,\r\n  FaDownload,\r\n  FaPlayCircle,\r\n  FaSpinner,\r\n  FaUserEdit,\r\n  FaIdBadge,\r\n  FaEnvelope,\r\n  FaPhone,\r\n  FaCalendarAlt,\r\n  FaInfoCircle,\r\n  FaFileUpload,\r\n  FaIdCard,\r\n  FaPoundSign,\r\n  FaShieldAlt,\r\n  FaFolder,\r\n  FaClipboardCheck,\r\n  FaBuilding\r\n} from 'react-icons/fa';\r\n\r\n// Format bytes helper\r\nconst formatBytes = (bytes?: number): string => {\r\n  if (!bytes || isNaN(bytes)) return '-';\r\n  const units = ['B','KB','MB','GB','TB'];\r\n  let i = 0; let v = bytes;\r\n  while (v >= 1024 && i < units.length - 1) { v /= 1024; i++; }\r\n  return `${v.toFixed(v < 10 && i>0 ? 1 : 0)} ${units[i]}`;\r\n};\r\n\r\n// Choose icon colour by extension\r\nconst getFileColour = (ext: string, coloursRef: typeof colours): string => {\r\n  switch(ext) {\r\n    case 'pdf': return coloursRef.red || '#dc2626';\r\n    case 'doc': case 'docx': return coloursRef.blue;\r\n    case 'xls': case 'xlsx': return coloursRef.green;\r\n    case 'ppt': case 'pptx': return coloursRef.orange || '#ea580c';\r\n    case 'zip': case 'rar': case '7z': return coloursRef.greyText;\r\n  case 'png': case 'jpg': case 'jpeg': case 'gif': case 'webp': return coloursRef.blue;\r\n    default: return coloursRef.blue;\r\n  }\r\n};\r\n\r\n// Move interface to separate file\r\n/**\r\n * Compact instruction card with clear information hierarchy for legibility.\r\n * TODO(ac): Narrow any-based shapes to precise interfaces where feasible.\r\n */\r\nexport interface InstructionCardProps {\r\n  instruction: any | null;\r\n  index: number;\r\n  selected?: boolean;\r\n  onSelect?: () => void;\r\n  onToggle?: () => void;\r\n  expanded?: boolean;\r\n  innerRef?: React.RefObject<HTMLDivElement>;\r\n  isResizing?: boolean;\r\n  onDocumentClick?: (document: any) => void;\r\n  documentCount?: number;\r\n  deal?: {\r\n    DealId?: number;\r\n    ServiceDescription?: string;\r\n    Amount?: number;\r\n    PitchedDate?: string;\r\n    PitchedTime?: string;\r\n    AreaOfWork?: string;\r\n    firstName?: string;\r\n    lastName?: string;\r\n    PitchedBy?: string;\r\n  };\r\n  onDealEdit?: (dealId: number, updates: { ServiceDescription?: string; Amount?: number }) => Promise<void>;\r\n  prospectId?: number;\r\n  eid?: any;\r\n  eids?: any[] | any;\r\n  compliance?: any;\r\n  deals?: any[];\r\n  clients?: any[];\r\n  risk?: any;\r\n  documents?: any[];\r\n  payments?: any[];\r\n  style?: React.CSSProperties;\r\n  onClick?: () => void;\r\n  onProofOfIdClick?: () => void;\r\n  onEIDClick?: () => void;\r\n  /** Invoked to start the Risk Assessment flow when none exists yet */\r\n  onRiskClick?: () => void;\r\n  /** Invoked to edit an existing Risk Assessment */\r\n  onEditRisk?: (instructionRef: string) => void;\r\n  /** Invoked to delete an existing Risk Assessment */\r\n  onDeleteRisk?: (instructionRef: string) => void;\r\n  onOpenMatter?: (instruction: any) => void;\r\n  /** Workbench control functions */\r\n  onOpenWorkbench?: (tab: 'identity' | 'risk' | 'payments' | 'documents' | 'matter' | 'ccl') => void;\r\n  idVerificationLoading?: boolean;\r\n  animationDelay?: number;\r\n  getClientNameByProspectId?: (prospectId: string | number | undefined) => { firstName: string; lastName: string };\r\n  teamData?: TeamData[] | null;\r\n  /** Called after successful actions to trigger parent data refresh */\r\n  onRefreshData?: () => void;\r\n}\r\n\r\n// Component definition with CopyableText\r\nconst CopyableText: React.FC<{ value: string; label?: string; className?: string }> = ({ value, label, className }) => {\r\n  const [copied, setCopied] = useState(false);\r\n  const [isHovered, setIsHovered] = useState(false);\r\n\r\n  const handleCopy = async (e: React.MouseEvent) => {\r\n    e.stopPropagation();\r\n    try {\r\n      await navigator.clipboard.writeText(value);\r\n      setCopied(true);\r\n      setTimeout(() => setCopied(false), 2000);\r\n    } catch (err) {\r\n      console.error('Failed to copy text: ', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <span \r\n      className={className}\r\n      onClick={handleCopy}\r\n      onMouseEnter={() => setIsHovered(true)}\r\n      onMouseLeave={() => setIsHovered(false)}\r\n      style={{ \r\n        cursor: 'pointer', \r\n        position: 'relative',\r\n        padding: '2px 4px',\r\n        borderRadius: '4px',\r\n        transition: 'all 0.2s ease',\r\n        backgroundColor: copied ? 'rgba(67, 160, 71, 0.1)' : (isHovered ? 'rgba(54, 144, 206, 0.1)' : 'transparent'),\r\n        color: copied ? '#43a047' : (isHovered ? colours.cta : 'inherit'),\r\n        border: `1px solid ${copied ? '#43a047' : (isHovered ? colours.cta : 'transparent')}`\r\n      }}\r\n      title={copied ? `Copied \"${value}\"!` : `Click to copy ${label || 'text'}`}\r\n    >\r\n      {value}\r\n      {copied && (\r\n        <span style={{\r\n          position: 'absolute',\r\n          top: '-30px',\r\n          left: '50%',\r\n          transform: 'translateX(-50%)',\r\n          background: '#43a047',\r\n          color: 'white',\r\n          padding: '4px 8px',\r\n          borderRadius: '4px',\r\n          fontSize: '12px',\r\n          whiteSpace: 'nowrap',\r\n          zIndex: 1000,\r\n          boxShadow: '0 2px 8px rgba(0,0,0,0.15)',\r\n          animation: 'fadeInScale 0.2s ease-out'\r\n        }}>\r\n          ✓ Copied!\r\n          <div style={{\r\n            position: 'absolute',\r\n            top: '100%',\r\n            left: '50%',\r\n            transform: 'translateX(-50%)',\r\n            width: 0,\r\n            height: 0,\r\n            borderLeft: '4px solid transparent',\r\n            borderRight: '4px solid transparent',\r\n            borderTop: '4px solid #43a047'\r\n          }} />\r\n        </span>\r\n      )}\r\n    </span>\r\n  );\r\n};\r\n\r\nconst InstructionCard: React.FC<InstructionCardProps> = ({\r\n  instruction,\r\n  index,\r\n  selected = false,\r\n  onSelect,\r\n  onToggle,\r\n  expanded = false,\r\n  innerRef,\r\n  isResizing = false,\r\n  onDocumentClick,\r\n  documentCount,\r\n  deal,\r\n  prospectId,\r\n  eid,\r\n  eids,\r\n  compliance,\r\n  deals,\r\n  clients,\r\n  risk,\r\n  documents,\r\n  payments,\r\n  style,\r\n  onClick,\r\n  onEIDClick,\r\n  onRiskClick,\r\n  onEditRisk,\r\n  onDeleteRisk,\r\n  onOpenMatter,\r\n  onOpenWorkbench,\r\n  idVerificationLoading = false,\r\n  animationDelay = 0,\r\n  getClientNameByProspectId,\r\n  onDealEdit,\r\n  teamData,\r\n  onRefreshData\r\n}) => {\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const [showDetails, setShowDetails] = useState(false);\r\n  const [clickedForActions, setClickedForActions] = useState(false);\r\n  const [isEditingDeal, setIsEditingDeal] = useState(false);\r\n  const [editDealData, setEditDealData] = useState({\r\n    ServiceDescription: '',\r\n    Amount: ''\r\n  });\r\n\r\n  // Manual status override state\r\n  const [showStatusOverride, setShowStatusOverride] = useState(false); // TODO: Remove - now handled in WorkbenchPanel\r\n  const [isUpdatingStatus, setIsUpdatingStatus] = useState(false);\r\n  \r\n  // Toast state for API feedback\r\n  const [toast, setToast] = useState<{\r\n    show: boolean;\r\n    type: 'success' | 'error';\r\n    message: string;\r\n  }>({ show: false, type: 'success', message: '' });\r\n  const [isSavingDeal, setIsSavingDeal] = useState(false);\r\n  const [activeStep, setActiveStep] = useState<string>('');\r\n  const [showRiskDetails, setShowRiskDetails] = useState(false);\r\n  const [showPaymentDetails, setShowPaymentDetails] = useState(false);\r\n  const [loadingPaymentDetails, setLoadingPaymentDetails] = useState(false);\r\n  const [paymentData, setPaymentData] = useState<any[]>([]);\r\n  const [showInstructionDetails, setShowInstructionDetails] = useState(false);\r\n  const [loadingInstructionDetails, setLoadingInstructionDetails] = useState(false);\r\n  const [instructionData, setInstructionData] = useState<any>(null);\r\n  const [showDocumentDetails, setShowDocumentDetails] = useState(false);\r\n  // Selected document index for inline preview when documents pill expanded\r\n  const [selectedDocumentIndex, setSelectedDocumentIndex] = useState<number>(0);\r\n  const [fetchedDocuments, setFetchedDocuments] = useState<any[]>([]);\r\n  const [isLoadingDocuments, setIsLoadingDocuments] = useState(false);\r\n\r\n  // Use fetched documents if available, otherwise fall back to props\r\n  const documentsToUse = fetchedDocuments.length > 0 ? fetchedDocuments : (documents || []);\r\n  const { isDarkMode } = useTheme();\r\n\r\n  // Helper to get initials from team data by full name (kept for potential future use)\r\n  const getInitialsFromTeamData = (fullName: string): string | null => {\r\n    if (!teamData || !fullName) return null;\r\n    \r\n    // First try exact full name match\r\n    let teamMember = teamData.find(member => \r\n      member['Full Name']?.toLowerCase().trim() === fullName.toLowerCase().trim()\r\n    );\r\n    \r\n    // If no exact match, try initials match\r\n    if (!teamMember) {\r\n      teamMember = teamData.find(member => \r\n        member.Initials?.toLowerCase() === fullName.toLowerCase()\r\n      );\r\n    }\r\n    \r\n    // If still no match, try first name + last name match\r\n    if (!teamMember) {\r\n      teamMember = teamData.find(member => {\r\n        const first = member.First?.toLowerCase().trim();\r\n        const last = member.Last?.toLowerCase().trim();\r\n        const inputLower = fullName.toLowerCase().trim();\r\n        return first && last && (\r\n          inputLower.includes(first) && inputLower.includes(last)\r\n        );\r\n      });\r\n    }\r\n    \r\n    return teamMember?.Initials || null;\r\n  };\r\n\r\n  // Deal edit handlers\r\n  const handleEditDealClick = () => {\r\n    setIsEditingDeal(true);\r\n    setEditDealData({\r\n      ServiceDescription: deal?.ServiceDescription || '',\r\n      Amount: deal?.Amount?.toString() || ''\r\n    });\r\n  };\r\n\r\n  const handleCancelEditDeal = () => {\r\n    setIsEditingDeal(false);\r\n    setEditDealData({\r\n      ServiceDescription: '',\r\n      Amount: ''\r\n    });\r\n  };\r\n\r\n  const handleSaveDeal = async () => {\r\n    if (!deal?.DealId || !onDealEdit) return;\r\n\r\n    setIsSavingDeal(true);\r\n    try {\r\n      const updates: { ServiceDescription?: string; Amount?: number } = {};\r\n      \r\n      if (editDealData.ServiceDescription !== (deal?.ServiceDescription || '')) {\r\n        updates.ServiceDescription = editDealData.ServiceDescription;\r\n      }\r\n      \r\n      const newAmount = parseFloat(editDealData.Amount);\r\n      if (!isNaN(newAmount) && newAmount !== (deal?.Amount || 0)) {\r\n        updates.Amount = newAmount;\r\n      }\r\n\r\n      if (Object.keys(updates).length > 0) {\r\n        await onDealEdit(deal.DealId, updates);\r\n        \r\n        // Trigger parent data refresh after successful edit\r\n        if (onRefreshData) {\r\n          onRefreshData();\r\n        }\r\n      }\r\n      \r\n      setIsEditingDeal(false);\r\n    } catch (error) {\r\n      console.error('Failed to save deal:', error);\r\n      // Could add error state here if needed\r\n    } finally {\r\n      setIsSavingDeal(false);\r\n    }\r\n  };\r\n\r\n  // Manual status override handlers\r\n  const handleManualStatusOverride = async (status: 'initialised' | 'processing' | 'instructed' | 'pitched', label: string) => {\r\n    const instructionRef = instruction?.InstructionRef;\r\n    if (!instructionRef) return;\r\n\r\n    setIsUpdatingStatus(true);\r\n    \r\n    try {\r\n      // Map UI status to database values\r\n      const statusMapping = {\r\n        'initialised': { stage: 'initialised', internalStatus: 'pitch' },\r\n        'processing': { stage: 'proof-of-id-complete', internalStatus: 'poid' },\r\n        'instructed': { stage: 'proof-of-id-complete', internalStatus: 'paid' },\r\n        'pitched': { stage: 'initialised', internalStatus: 'pitch' }\r\n      };\r\n\r\n      const { stage, internalStatus } = statusMapping[status];\r\n\r\n      const response = await fetch('/api/updateInstructionStatus', {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          instructionRef,\r\n          stage,\r\n          internalStatus,\r\n          overrideReason: `Manual override to ${label} via UI`,\r\n          userInitials: 'UI' // Could get from auth context in production\r\n        })\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (result.success) {\r\n        // Update local instruction object to reflect changes immediately\r\n        if (instruction) {\r\n          instruction.Stage = stage;\r\n          instruction.InternalStatus = internalStatus;\r\n          instruction.LastUpdated = new Date().toISOString();\r\n        }\r\n\r\n        setToast({\r\n          show: true,\r\n          type: 'success',\r\n          message: `Status updated to ${label}`\r\n        });\r\n\r\n        // Auto-hide success toast\r\n        setTimeout(() => setToast(prev => ({ ...prev, show: false })), 2000);\r\n        \r\n        // Trigger parent data refresh\r\n        if (onRefreshData) {\r\n          onRefreshData();\r\n        }\r\n        \r\n      } else {\r\n        throw new Error(result.error || 'Failed to update status');\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('Failed to update instruction status:', error);\r\n      \r\n      setToast({\r\n        show: true,\r\n        type: 'error',\r\n        message: `Failed to update status: ${error instanceof Error ? error.message : 'Unknown error'}`\r\n      });\r\n      \r\n      // Auto-hide error toast\r\n      setTimeout(() => setToast(prev => ({ ...prev, show: false })), 4000);\r\n    } finally {\r\n      setIsUpdatingStatus(false);\r\n      setShowStatusOverride(false);\r\n    }\r\n  };\r\n\r\n  const statusOptions: IDropdownOption[] = [\r\n    { key: 'initialised', text: 'Initialised' },\r\n    { key: 'processing', text: 'ID Completed' },\r\n    { key: 'instructed', text: 'Instructed' },\r\n    { key: 'pitched', text: 'Pitched' }\r\n  ];\r\n\r\n  // Matter details fetching removed - handled by WorkbenchPanel\r\n\r\n  // Fetch payment details when showPaymentDetails is opened\r\n  useEffect(() => {\r\n    if (showPaymentDetails && (instruction?.InstructionRef || instruction?.instructionRef) && !paymentData.length && !loadingPaymentDetails) {\r\n      setLoadingPaymentDetails(true);\r\n      const instructionRef = instruction.InstructionRef || instruction.instructionRef;\r\n      fetch(`/api/payments/${instructionRef}`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          if (data.error) {\r\n            console.error('Payment fetch error:', data.error);\r\n            setPaymentData([]);\r\n          } else {\r\n            setPaymentData(data.payments || []);\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching payment details:', error);\r\n          setPaymentData([]);\r\n        })\r\n        .finally(() => {\r\n          setLoadingPaymentDetails(false);\r\n        });\r\n    } else if (!showPaymentDetails && paymentData.length > 0) {\r\n      // Reset payment data when details are closed\r\n      setPaymentData([]);\r\n    }\r\n  }, [showPaymentDetails, instruction?.InstructionRef, instruction?.instructionRef]);\r\n\r\n  // Fetch instruction details when showInstructionDetails is opened\r\n  useEffect(() => {\r\n    if (showInstructionDetails && (instruction?.InstructionRef || instruction?.instructionRef) && !instructionData && !loadingInstructionDetails) {\r\n      setLoadingInstructionDetails(true);\r\n      const instructionRef = instruction.InstructionRef || instruction.instructionRef;\r\n      fetch(`/api/instruction-details/${instructionRef}`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          if (data.error) {\r\n            console.error('Instruction fetch error:', data.error);\r\n            setInstructionData([]);\r\n          } else {\r\n            setInstructionData(data.instructions || []);\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching instruction details:', error);\r\n          setInstructionData([]);\r\n        })\r\n        .finally(() => {\r\n          setLoadingInstructionDetails(false);\r\n        });\r\n    } else if (!showInstructionDetails && instructionData) {\r\n      // Reset instruction data when details are closed\r\n      setInstructionData([]);\r\n    }\r\n  }, [showInstructionDetails, instruction?.InstructionRef, instruction?.instructionRef]);\r\n\r\n  // Sync payments prop changes to local state\r\n  useEffect(() => {\r\n    if (payments && payments.length > 0 && paymentData.length === 0 && !showPaymentDetails) {\r\n      // If payments prop is updated and we don't have local data, sync it\r\n      setPaymentData(payments);\r\n    }\r\n  }, [payments]);\r\n\r\n  // Sync documents prop changes to local state\r\n  useEffect(() => {\r\n    if (documents && documents.length > 0 && fetchedDocuments.length === 0) {\r\n      // If documents prop is updated and we don't have local fetched data, use prop data\r\n      setFetchedDocuments(documents);\r\n    }\r\n  }, [documents]);\r\n\r\n  // Clear local data when instruction changes to force refetch\r\n  useEffect(() => {\r\n    const currentRef = instruction?.InstructionRef || instruction?.instructionRef;\r\n    return () => {\r\n      // Cleanup when instruction changes\r\n      setPaymentData([]);\r\n      setInstructionData(null);\r\n      setFetchedDocuments([]);\r\n    };\r\n  }, [instruction?.InstructionRef, instruction?.instructionRef]);\r\n\r\n  // Inject keyframes once for micro animations\r\n  React.useEffect(() => {\r\n    if (typeof document !== 'undefined' && !document.getElementById('instructioncard-pulse')) {\r\n      const styleTag = document.createElement('style');\r\n      styleTag.id = 'instructioncard-pulse';\r\n      styleTag.innerHTML = `\r\n        @keyframes pulseGlow {\r\n          0%{box-shadow:0 0 0 0 rgba(54,144,206,0.55);}\r\n          60%{box-shadow:0 0 0 10px rgba(54,144,206,0);}\r\n          100%{box-shadow:0 0 0 0 rgba(54,144,206,0);}\r\n        }\r\n        @keyframes spin {\r\n          from { transform: rotate(0deg); }\r\n          to { transform: rotate(360deg); }\r\n        }\r\n        @keyframes fadeInScale {\r\n          0% {\r\n            opacity: 0;\r\n            transform: translateX(-50%) scale(0.8);\r\n          }\r\n          100% {\r\n            opacity: 1;\r\n            transform: translateX(-50%) scale(1);\r\n          }\r\n        }\r\n        @keyframes fadeIn {\r\n          0% {\r\n            opacity: 0;\r\n            transform: translateY(-10px);\r\n          }\r\n          100% {\r\n            opacity: 1;\r\n            transform: translateY(0);\r\n          }\r\n        }\r\n      `;\r\n      document.head.appendChild(styleTag);\r\n    }\r\n  }, []);\r\n\r\n  // Fetch documents from API\r\n  useEffect(() => {\r\n    if (instruction?.InstructionRef || instruction?.reference) {\r\n      const instructionRef = instruction.InstructionRef || instruction.reference;\r\n      setIsLoadingDocuments(true);\r\n      \r\n      fetch(`/api/documents/${instructionRef}`)\r\n        .then(response => {\r\n          if (response.ok) {\r\n            return response.json();\r\n          }\r\n          throw new Error(`HTTP ${response.status}`);\r\n        })\r\n        .then(data => {\r\n          setFetchedDocuments(data || []);\r\n        })\r\n        .catch(error => {\r\n          console.warn('Failed to fetch documents from API:', error);\r\n          // Keep using props documents as fallback\r\n        })\r\n        .finally(() => {\r\n          setIsLoadingDocuments(false);\r\n        });\r\n    }\r\n  }, [instruction?.InstructionRef, instruction?.reference]);\r\n\r\n  // Status logic - match the logic used in global actions\r\n  // ID Verification status based on EID data\r\n  const eidResult = (eid?.EIDOverallResult || eids?.[0]?.EIDOverallResult || instruction?.EIDOverallResult)?.toLowerCase() ?? \"\";\r\n  const eidStatus = (eid?.EIDStatus || eids?.[0]?.EIDStatus)?.toLowerCase() ?? \"\";\r\n  const poidPassed = eidResult === \"passed\" || eidResult === \"approved\" || eidResult === \"verified\" || eidResult === \"pass\";\r\n  const proofOfIdComplete = Boolean(instruction?.PassportNumber || instruction?.DriversLicenseNumber);\r\n  \r\n  // Also check instruction stage for ID completion\r\n  const stageComplete = instruction?.Stage === 'proof-of-id-complete' || instruction?.stage === 'proof-of-id-complete';\r\n  const stageLower_ = ((instruction?.Stage || instruction?.stage || '') + '').trim().toLowerCase();\r\n  const isInstructedOrLater = stageLower_ === 'proof-of-id-complete' || stageLower_ === 'completed';\r\n  \r\n  let verifyIdStatus: 'pending' | 'received' | 'review' | 'complete';\r\n  if (stageComplete) {\r\n    // If stage shows proof-of-id-complete, check the actual EID result\r\n    if (eidResult === 'review') {\r\n      verifyIdStatus = 'review';\r\n    } else if (eidResult === 'failed' || eidResult === 'rejected' || eidResult === 'fail') {\r\n      verifyIdStatus = 'review'; // Failed results should be treated as review needed\r\n    } else if (poidPassed || eidResult === 'passed') {\r\n      verifyIdStatus = 'complete';  \r\n    } else {\r\n      // Stage complete but no clear result - assume review needed\r\n      verifyIdStatus = 'review';\r\n    }\r\n  } else if ((!eid && !eids?.length) || eidStatus === 'pending') {\r\n    verifyIdStatus = proofOfIdComplete ? 'received' : 'pending';\r\n  } else if (poidPassed) {\r\n    verifyIdStatus = 'complete';\r\n  } else {\r\n    verifyIdStatus = 'review';\r\n  }\r\n\r\n  // Payment status based on payments array\r\n  const getPaymentStatus = () => {    \r\n    // Check if instruction itself is marked as paid (fallback)\r\n    if (instruction?.InternalStatus === 'paid' || instruction?.internalStatus === 'paid') {\r\n      return 'complete';\r\n    }\r\n    \r\n    // Use instruction.payments if available, fallback to payments prop\r\n    const paymentData = instruction?.payments || payments;\r\n    \r\n    if (!paymentData || paymentData.length === 0) {\r\n      return 'pending';\r\n    }\r\n    \r\n    // Get the most recent payment\r\n    const latestPayment = paymentData[0]; // Already sorted by created_at DESC in API\r\n    \r\n    // A payment is complete if both payment_status is 'succeeded' AND internal_status is 'completed' or 'paid'\r\n    if (latestPayment.payment_status === 'succeeded' && \r\n        (latestPayment.internal_status === 'completed' || latestPayment.internal_status === 'paid')) {\r\n      return 'complete';\r\n    }\r\n    // Explicitly surface processing status when gateway reports it\r\n    if (latestPayment.payment_status === 'processing') {\r\n      return 'processing';\r\n    }\r\n\r\n    return 'pending';\r\n  };\r\n  \r\n  const paymentStatus = getPaymentStatus();\r\n  // Payment evidence exists only if there's at least one payment record with gateway success or internal completion on that record\r\n  const paymentRecords = (instruction?.payments || payments || []) as any[];\r\n  const hasPaymentEvidence = paymentRecords.some(p => \r\n    (p.payment_status && String(p.payment_status).toLowerCase() === 'succeeded') ||\r\n    (p.internal_status && ['completed','paid'].includes(String(p.internal_status).toLowerCase()))\r\n  );\r\n  const fastTrackedPayment = isInstructedOrLater && !hasPaymentEvidence;\r\n  const fastTrackedId = isInstructedOrLater && !poidPassed;\r\n\r\n  // Documents status - neutral if none required, green if at least one uploaded, pending if required but missing\r\n  const documentStatus = (documentsToUse && documentsToUse.length > 0) ? 'complete' : 'neutral';\r\n\r\n  // Risk status based on risk assessment result\r\n  const riskResultRaw = risk?.RiskAssessmentResult?.toString().toLowerCase() ?? \"\";\r\n  const riskStatus = riskResultRaw\r\n    ? ['low', 'low risk', 'pass', 'approved'].includes(riskResultRaw) ? 'complete' : 'review'\r\n    : 'pending';\r\n  // A pill is considered to have an assessment only if key fields exist\r\n  const hasRiskAssessment = Boolean(\r\n    risk && (risk.RiskAssessmentResult || risk.RiskScore || risk.ComplianceDate || risk.RiskAssessor)\r\n  );\r\n\r\n  // Matter status - check if matter exists\r\n  const matterStatus = (instruction?.MatterId || (instruction as any)?.matters?.length > 0) ? 'complete' : 'pending';\r\n\r\n  // CCL status - assume pending unless explicitly complete\r\n  const cclStatus = instruction?.CCLSubmitted ? 'complete' : 'pending';\r\n\r\n  // New pre-ID step: Instruction/Pitch capture (integrated from pitches). Complete if a deal/service exists.\r\n  const hasDeal = !!(deal);\r\n  const instructionCaptureStatus = hasDeal ? 'complete' : 'pending';\r\n\r\n  // Pitch date formatting (used for timeline status & detail) – use local time and fallback to deal when missing\r\n  let pitchWhen: string | null = null;\r\n  try {\r\n    const combineLocal = (dateStr?: string, timeStr?: string): Date | null => {\r\n      if (!dateStr && !timeStr) return null;\r\n      if (dateStr) {\r\n        const d = new Date(dateStr);\r\n        if (timeStr) {\r\n          const t = new Date(timeStr);\r\n          // Use local hours/minutes to respect user's timezone\r\n          const h = t.getHours();\r\n          const m = t.getMinutes();\r\n          const s = t.getSeconds();\r\n          d.setHours(h, m, s, 0);\r\n        }\r\n        return isNaN(d.getTime()) ? null : d;\r\n      }\r\n      const onlyT = new Date(timeStr as string);\r\n      return isNaN(onlyT.getTime()) ? null : onlyT;\r\n    };\r\n\r\n    let dt: Date | null = null;\r\n    if (instruction?.SubmissionDate || instruction?.SubmissionTime) {\r\n      dt = combineLocal(instruction?.SubmissionDate, instruction?.SubmissionTime);\r\n    }\r\n    if (!dt && (deal?.PitchedDate || deal?.PitchedTime)) {\r\n      dt = combineLocal(deal?.PitchedDate, deal?.PitchedTime);\r\n    }\r\n    if (dt && !isNaN(dt.getTime())) {\r\n      const now = new Date();\r\n      const sameDay = dt.getFullYear()===now.getFullYear() && dt.getMonth()===now.getMonth() && dt.getDate()===now.getDate();\r\n      pitchWhen = sameDay ? format(dt,'HH:mm') : format(dt,'d MMM');\r\n    }\r\n  } catch {/* ignore */}\r\n\r\n  const isCompleted = cclStatus === 'complete';\r\n\r\n  // Get area color (same logic as enquiry cards)\r\n  const getAreaColor = (area: string): string => {\r\n    switch (area?.toLowerCase()) {\r\n      case 'commercial':\r\n        return colours.blue;\r\n      case 'construction':\r\n        return colours.orange;\r\n      case 'property':\r\n        return colours.green;\r\n      case 'employment':\r\n        return colours.yellow;\r\n      case 'other':\r\n      case 'other/unsure':\r\n        return colours.greyText;\r\n      default:\r\n        return colours.greyText; // Changed from colours.cta to colours.greyText\r\n    }\r\n  };\r\n\r\n  // Get area icon (same logic as enquiry badges)\r\n  const getAreaIcon = (area: string): string => {\r\n    switch (area?.toLowerCase()) {\r\n      case 'commercial':\r\n        return 'CityNext';\r\n      case 'construction':\r\n        return 'Build';\r\n      case 'property':\r\n        return 'Home';\r\n      case 'employment':\r\n        return 'People';\r\n      case 'other':\r\n      case 'other/unsure':\r\n        return 'Help';\r\n      default:\r\n        return 'Help';\r\n    }\r\n  };\r\n\r\n  // Normalize area text for display\r\n  const getAreaDisplayText = (area: string): string => {\r\n    const normalized = area?.toLowerCase() || '';\r\n    if (normalized === 'other/unsure' || normalized === 'other' || normalized.includes('other') || normalized.includes('unsure')) {\r\n      return 'Other';\r\n    }\r\n    return area;\r\n  };\r\n\r\n  // Get area of work from deals (linked by InstructionRef)\r\n  const areaOfWork = \r\n    // Try direct instruction field first\r\n    instruction?.AreaOfWork || instruction?.Area_of_Work || instruction?.areaOfWork || \r\n    instruction?.area_of_work || instruction?.ServiceType || instruction?.serviceType || \r\n    instruction?.Type || instruction?.type ||\r\n    // Try deal prop\r\n    deal?.AreaOfWork ||\r\n    // Try deals array (get first deal's area)\r\n    (deals && deals.length > 0 ? deals[0].AreaOfWork : '') ||\r\n    // Fallback to empty string\r\n    '';\r\n  \r\n  // Determine if this is a pitched deal (no instruction yet)\r\n  const isPitchedDeal = !instruction && deal;\r\n  \r\n  const areaColor = getAreaColor(areaOfWork);\r\n  const areaIcon = getAreaIcon(areaOfWork);\r\n\r\n  const solicitorContact = useMemo(() => {\r\n    const candidates = [\r\n      instruction?.HelixContact,\r\n      instruction?.Solicitor,\r\n      instruction?.AssignedTo,\r\n      instruction?.Handler,\r\n      instruction?.PointOfContact,\r\n      instructionData?.HelixContact,\r\n      deal?.PitchedBy,\r\n    ];\r\n\r\n    const found = candidates.find(\r\n      (value) => typeof value === 'string' && value.trim().length > 0,\r\n    );\r\n\r\n    return typeof found === 'string' ? found.trim() : null;\r\n  }, [instruction, instructionData, deal]);\r\n\r\n  const normalizedSolicitor = solicitorContact?.toLowerCase() ?? '';\r\n  // Generic contact identifiers used to detect unclaimed/placeholder contacts\r\n  const GENERIC_CONTACT_IDENTIFIERS = new Set<string>([\r\n    'admin',\r\n    'helix',\r\n    'team',\r\n    'unassigned',\r\n    'info',\r\n    'support'\r\n  ]);\r\n  const isGenericContact = normalizedSolicitor && GENERIC_CONTACT_IDENTIFIERS.has(normalizedSolicitor);\r\n  const isClaimedInstruction = Boolean(!isPitchedDeal && solicitorContact && !isGenericContact);\r\n\r\n  // Determine next action step\r\n  // For pitched deals, use different logic\r\n  if (isPitchedDeal) {\r\n    // Pitched deals get pitch-specific actions\r\n  } else {\r\n    // Normal instruction workflow\r\n  }\r\n  \r\n  // Initialised status - if instruction exists but no other progress\r\n  const isInitialised = instruction?.InstructionRef && !hasDeal && !proofOfIdComplete && \r\n                       (!instruction?.payments || instruction?.payments.length === 0) &&\r\n                       (!documents || documents.length === 0);\r\n\r\n  // Determine the pitch stage - one bubble that changes\r\n  const getPitchStage = () => {\r\n    // Normalise stage and internal status for robust matching\r\n    const stageLower = (instruction?.Stage || instruction?.stage || '').toLowerCase();\r\n    const internalStatus = (instruction?.InternalStatus || instruction?.internalStatus || '').toLowerCase();\r\n    \r\n    // Check if this was manually overridden (has OverrideReason)\r\n    const isManualOverride = instruction?.OverrideReason;\r\n    \r\n    // Instructed: proof-of-id-complete stage with paid status indicates fully instructed\r\n    if (instruction?.InstructionRef && stageLower === 'proof-of-id-complete') {\r\n      if (internalStatus === 'paid') {\r\n        return { \r\n          key: 'instructed', \r\n          label: isManualOverride ? 'Instructed*' : 'Instructed', \r\n          icon: isManualOverride ? <FaUserEdit /> : <FaIdBadge />, \r\n          colour: colours.green \r\n        };\r\n      } else {\r\n        // proof-of-id-complete but not paid - all cases show as ID Completed\r\n        return { \r\n          key: 'processing', \r\n          label: isManualOverride ? 'ID Completed*' : 'ID Completed', \r\n          icon: isManualOverride ? <FaUserEdit /> : <FaSpinner />, \r\n          colour: colours.orange \r\n        };\r\n      }\r\n    }\r\n    \r\n    // Initialised for cases without proof-of-id-complete (including pitch status without ID completion)\r\n    if (instruction?.InstructionRef && stageLower === 'initialised') {\r\n      return { \r\n        key: 'initialised', \r\n        label: isManualOverride ? 'Initialised*' : 'Initialised', \r\n        icon: isManualOverride ? <FaUserEdit /> : <FaPlayCircle />, \r\n        colour: colours.blue \r\n      };\r\n    }\r\n    \r\n    // Pitched = deal exists (pitch sent)\r\n    if (hasDeal) {\r\n      const label = pitchWhen ? `Pitched ${pitchWhen}` : 'Pitched';\r\n      const overrideLabel = isManualOverride ? `${label}*` : label;\r\n      return { \r\n        key: 'pitched', \r\n        label: overrideLabel, \r\n        icon: isManualOverride ? <FaUserEdit /> : <FaEnvelope />, \r\n        colour: colours.greyText \r\n      };\r\n    }\r\n    \r\n    // Default state\r\n    return { key: 'pitched', label: 'Pitched', icon: <FaEnvelope />, colour: colours.greyText };\r\n  };\r\n\r\n  const pitchStage = getPitchStage();\r\n\r\n  const nextActionStep = isPitchedDeal \r\n    ? null // Pitched deals don't have an auto-active next action\r\n    : isInitialised ? 'initialised' :\r\n    instructionCaptureStatus !== 'complete' ? 'instruction' :\r\n    paymentStatus !== 'complete' ? 'payment' :\r\n    documentStatus !== 'complete' ? 'documents' :\r\n    verifyIdStatus !== 'complete' ? 'id' :\r\n    matterStatus !== 'complete' ? 'matter' : // Moved matter before risk\r\n    riskStatus !== 'complete' ? 'risk' :\r\n    cclStatus !== 'complete' ? 'ccl' : null;\r\n\r\n  // Get next action label and icon\r\n  const getNextActionDetails = (step: string) => {\r\n    const actionMap = {\r\n      'follow-up': { label: 'Follow Up', icon: <FaPhone /> },\r\n      'send-reminder': { label: 'Send Reminder', icon: <FaEnvelope /> },\r\n      'schedule-call': { label: 'Schedule Call', icon: <FaCalendarAlt /> },\r\n      'initialised': { label: 'Awaiting Instructions', icon: <FaInfoCircle /> },\r\n      'instruction': { label: 'Complete Instructions', icon: <FaFileAlt /> },\r\n      'id': { label: 'Verify Identity', icon: <FaIdCard /> },\r\n      'payment': { label: 'Process Payment', icon: <FaPoundSign /> },\r\n      'documents': { label: 'Upload Documents', icon: <FaFileUpload /> },\r\n      'risk': { label: 'Risk Assessment', icon: <FaShieldAlt /> },\r\n      'matter': { label: 'Create Matter', icon: <FaFolder /> },\r\n      'ccl': { label: 'Complete CCL', icon: <FaClipboardCheck /> }\r\n    };\r\n    return actionMap[step as keyof typeof actionMap] || null;\r\n  };\r\n\r\n  const nextActionDetails = nextActionStep ? getNextActionDetails(nextActionStep) : null;\r\n\r\n  // Do not auto-open details; only highlight nextActionStep via pulse.\r\n\r\n  // Visual styling – simplified, gradient background for legibility\r\n  const bgGradientLight = 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)';\r\n  const bgGradientDark = 'linear-gradient(135deg, #151a22 0%, #11161d 100%)';\r\n  \r\n  // Code-like dark mode with high contrast, minimal gradients/shadows\r\n  const selectedBg = isDarkMode \r\n    ? `#1e293b` // Solid dark blue-grey for code-like feel\r\n    : `linear-gradient(135deg, #ffffff 0%, #f8fafc 100%)`;\r\n  \r\n  const selectedBorder = isDarkMode\r\n    ? `1px solid ${areaColor}`\r\n    : `1px solid ${areaColor}`;\r\n    \r\n  const selectedShadow = isDarkMode\r\n    ? `0 1px 3px rgba(0,0,0,0.8)` // Minimal shadow in dark mode\r\n    : `0 8px 32px ${areaColor}25, 0 4px 16px rgba(0,0,0,0.08), inset 0 1px 0 rgba(255,255,255,0.8)`;\r\n  \r\n  const cardClass = mergeStyles({\r\n    position: 'relative',\r\n    borderRadius: 8,\r\n    padding: '12px 18px',\r\n    background: selected \r\n      ? selectedBg\r\n      : (isDarkMode ? '#0f172a' : bgGradientLight), // Solid dark background instead of gradient\r\n    opacity: 1,\r\n    // Responsive padding\r\n    '@media (max-width: 768px)': {\r\n      padding: '10px 14px',\r\n    },\r\n    '@media (max-width: 480px)': {\r\n      padding: '8px 12px',\r\n      borderRadius: 6,\r\n    },\r\n    border: selected || clickedForActions \r\n      ? selectedBorder\r\n      : `1px solid ${isDarkMode ? 'rgba(148,163,184,0.2)' : 'rgba(0,0,0,0.08)'}`,\r\n    borderLeft: `2px solid ${selected ? areaColor : (isDarkMode ? areaColor : `${areaColor}60`)}`, // Override just the left side\r\n    boxShadow: selected\r\n      ? selectedShadow\r\n      : (isDarkMode ? 'none' : '0 4px 6px rgba(0, 0, 0, 0.07)'),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: 6,\r\n    fontFamily: 'Raleway, sans-serif',\r\n    cursor: 'pointer',\r\n    transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n    marginBottom: 4,\r\n    overflow: 'hidden',\r\n    // Remove vertical translate to avoid perceived size shift on selection\r\n    transform: 'none',\r\n    selectors: {\r\n      ':hover': {\r\n        // no transform on hover\r\n        boxShadow: selected \r\n          ? (isDarkMode ? `0 2px 8px rgba(0,0,0,0.9)` : `0 12px 40px ${areaColor}50, 0 4px 12px rgba(0,0,0,0.15), inset 0 1px 0 rgba(255,255,255,0.2)`)\r\n          : (isDarkMode ? '0 1px 3px rgba(0,0,0,0.6)' : '0 8px 24px rgba(0,0,0,0.12)'),\r\n        border: `1px solid ${areaColor}`, // Change the main border to area color on hover\r\n        borderLeft: `2px solid ${areaColor}`, // Keep left border consistent\r\n      },\r\n      ':active': { },\r\n      ':focus-within': { \r\n        outline: `2px solid ${areaColor}40`, // Thinner outline\r\n        outlineOffset: '2px',\r\n        borderColor: areaColor \r\n      },\r\n    },\r\n  });\r\n\r\n  const style_: React.CSSProperties = {\r\n    '--animation-delay': `${animationDelay}s`,\r\n  } as React.CSSProperties;\r\n\r\n  const handleCardClick = (e: React.MouseEvent) => {\r\n    e.stopPropagation();\r\n    \r\n    // If this is the next action step for matter and we have a handler, call it\r\n    if (nextActionStep === 'matter' && onOpenMatter && instruction) {\r\n      onOpenMatter(instruction);\r\n      return;\r\n    }\r\n    \r\n    // If there's a general onClick handler and it's not a pitched deal, call it\r\n    if (onClick && !isPitchedDeal) {\r\n      onClick();\r\n      return;\r\n    }\r\n    \r\n    // Toggle clicked state for actions visibility in pitches\r\n    if (isPitchedDeal) {\r\n      setClickedForActions(!clickedForActions);\r\n      setShowDetails(!clickedForActions);\r\n    }\r\n    \r\n    if (onSelect) {\r\n      onSelect();\r\n    } else if (onToggle) {\r\n      onToggle();\r\n    }\r\n  };\r\n\r\n  const handleKey = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter' || e.key === ' ') {\r\n      e.preventDefault();\r\n      handleCardClick((e as unknown) as React.MouseEvent);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={cardClass}\r\n      style={style_}\r\n      onClick={handleCardClick}\r\n      onKeyDown={handleKey}\r\n      role=\"button\"\r\n      tabIndex={0}\r\n      ref={innerRef}\r\n      onMouseEnter={() => { setIsHovered(true); setShowDetails(true); }}\r\n      onMouseLeave={() => { setIsHovered(false); if (!selected && !clickedForActions) setShowDetails(false); }}\r\n    >\r\n      {/* Selection Toggle (checkbox style) */}\r\n      {onToggle && (\r\n        <button\r\n          aria-label={selected ? 'Deselect instruction' : 'Select instruction'}\r\n          onClick={(e) => { e.stopPropagation(); onToggle(); }}\r\n          className={mergeStyles({\r\n            position: 'absolute',\r\n            top: 10,\r\n            left: 10,\r\n            width: 18,\r\n            height: 18,\r\n            borderRadius: 4,\r\n            border: `1.5px solid ${selected ? colours.blue : (isDarkMode ? 'rgba(255,255,255,0.25)' : '#c3c9d4')}`,\r\n            background: selected ? colours.blue : 'transparent',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            cursor: 'pointer',\r\n            transition: 'all 0.2s ease',\r\n            zIndex: 10,\r\n            selectors: {\r\n              ':hover': {\r\n                borderColor: colours.blue,\r\n                background: selected ? colours.blue : (isDarkMode ? 'rgba(255,255,255,0.1)' : 'rgba(54, 144, 206, 0.1)'),\r\n                // no scale transform on hover\r\n              },\r\n              ':focus': {\r\n                outline: `2px solid ${colours.blue}40`,\r\n                outlineOffset: '2px'\r\n              }\r\n            }\r\n          })}\r\n        >\r\n          {selected && <Icon iconName=\"CheckMark\" styles={{ root: { fontSize: 12, color: '#fff' } }} />}\r\n        </button>\r\n      )}\r\n\r\n      {/* Left accent bar */}\r\n      <span style={{ position: 'absolute', top: 0, left: 0, bottom: 0, width: 2, background: areaColor, opacity: .95, pointerEvents: 'none' }} />\r\n      \r\n  {/* Header: Primary identifier + area chip */}\r\n      <div style={{ display: 'flex', alignItems: 'center', gap: 10, marginTop: 6, paddingLeft: onToggle ? 26 : 0, justifyContent: 'space-between' }}>\r\n        <div style={{ display: 'flex', alignItems: 'center', gap: 6 }}>\r\n          {/* Client Type Icon */}\r\n          {instruction?.ClientType === 'Company' ? (\r\n            <FaBuilding style={{ \r\n              color: selected ? colours.blue : (isDarkMode ? 'rgba(255,255,255,0.6)' : 'rgba(0,0,0,0.4)'), \r\n              fontSize: '12px',\r\n              transition: 'color 0.2s ease'\r\n            }} />\r\n          ) : (\r\n            <FaUser style={{ \r\n              color: selected ? colours.blue : (isDarkMode ? 'rgba(255,255,255,0.6)' : 'rgba(0,0,0,0.4)'), \r\n              fontSize: '12px',\r\n              transition: 'color 0.2s ease'\r\n            }} />\r\n          )}\r\n          <span style={{ \r\n            fontWeight: 700, \r\n            color: selected \r\n              ? (isDarkMode ? '#ffffff' : colours.darkBlue) \r\n              : (isDarkMode ? '#fff' : '#0d2538'), \r\n            lineHeight: 1.2, \r\n            fontSize: '15px',\r\n            transition: 'color 0.3s ease',\r\n            textShadow: selected \r\n              ? (isDarkMode ? '0 1px 2px rgba(0,0,0,0.3)' : '0 1px 2px rgba(255,255,255,0.8)') \r\n              : 'none'\r\n          }}>\r\n          {(() => {\r\n            // Helpers to source person name from various places\r\n            const getEnquiryPersonName = (): string | undefined => {\r\n              if (getClientNameByProspectId && prospectId) {\r\n                const clientName = getClientNameByProspectId(prospectId);\r\n                if (clientName.firstName?.trim() || clientName.lastName?.trim()) {\r\n                  return `${clientName.firstName || ''} ${clientName.lastName || ''}`.trim();\r\n                }\r\n              }\r\n              return undefined;\r\n            };\r\n\r\n            const getDealPersonName = (): string | undefined => {\r\n              if (isPitchedDeal && deal) {\r\n                const dealFirstName = (deal as any).firstName || '';\r\n                const dealLastName = (deal as any).lastName || '';\r\n                if (dealFirstName || dealLastName) {\r\n                  return `${dealFirstName} ${dealLastName}`.trim();\r\n                }\r\n              }\r\n              return undefined;\r\n            };\r\n\r\n            // If we have an instruction, prefer its context to decide formatting\r\n            if (instruction) {\r\n              const firstName = instruction?.Forename || instruction?.FirstName || instruction?.forename || instruction?.firstName || '';\r\n              const lastName = instruction?.Surname || instruction?.LastName || instruction?.surname || instruction?.lastName || '';\r\n              const fullName = instruction?.FullName || instruction?.fullName || instruction?.Name || instruction?.name || '';\r\n              const company = instruction?.Company || instruction?.CompanyName || instruction?.company || instruction?.companyName || '';\r\n\r\n              const personName: string | undefined = (fullName || (firstName || lastName ? `${firstName} ${lastName}`.trim() : '')) || getEnquiryPersonName() || getDealPersonName();\r\n\r\n              if (instruction.ClientType === 'Company') {\r\n                // Company client: company first; make person name visually subtler\r\n                const subtleColour = isDarkMode ? 'rgba(255,255,255,0.65)' : 'rgba(0,0,0,0.6)';\r\n                if (company && personName) {\r\n                  return (\r\n                    <>\r\n                      <span\r\n                        style={{ fontWeight: 800, cursor: 'pointer' }}\r\n                        title={`Click to copy company: ${company}`}\r\n                        onClick={(e) => { e.stopPropagation(); navigator.clipboard.writeText(company); }}\r\n                      >\r\n                        {company}\r\n                      </span>\r\n                      <span\r\n                        style={{ color: subtleColour, fontWeight: 500, fontSize: '13px', cursor: 'pointer' }}\r\n                        title={`Click to copy name: ${personName}`}\r\n                        onClick={(e) => { e.stopPropagation(); navigator.clipboard.writeText(personName); }}\r\n                      >\r\n                        {' '}— {personName}\r\n                      </span>\r\n                    </>\r\n                  );\r\n                }\r\n                if (company) return (\r\n                  <span\r\n                    style={{ fontWeight: 800, cursor: 'pointer' }}\r\n                    title={`Click to copy company: ${company}`}\r\n                    onClick={(e) => { e.stopPropagation(); navigator.clipboard.writeText(company); }}\r\n                  >\r\n                    {company}\r\n                  </span>\r\n                );\r\n                if (personName) return (\r\n                  <span\r\n                    style={{ color: subtleColour, fontWeight: 600, cursor: 'pointer' }}\r\n                    title={`Click to copy name: ${personName}`}\r\n                    onClick={(e) => { e.stopPropagation(); navigator.clipboard.writeText(personName); }}\r\n                  >\r\n                    {personName}\r\n                  </span>\r\n                );\r\n              } else {\r\n                // Individual client: prefer person name, fallback to company if set\r\n                if (personName) return personName;\r\n                if (company) return company;\r\n              }\r\n            }\r\n\r\n            // No instruction context: try enquiry lookup, then deal\r\n            const fallbackName = getEnquiryPersonName() || getDealPersonName();\r\n            if (fallbackName) return fallbackName;\r\n\r\n            // Fallback to prospect ID only if no name found\r\n            return `Client ${prospectId}`;\r\n          })()}\r\n          </span>\r\n        </div>\r\n        {areaOfWork && (\r\n          <div\r\n            style={{\r\n              marginLeft: 'auto',\r\n              padding: '6px 12px',\r\n              borderRadius: 14,\r\n              fontSize: 11,\r\n              fontWeight: 700,\r\n              color: selected \r\n                ? (isDarkMode ? '#ffffff' : areaColor)\r\n                : areaColor,\r\n              border: selected\r\n                ? (isDarkMode ? `1px solid ${areaColor}` : `1px solid ${areaColor}`) // Thinner border\r\n                : `1px solid ${areaColor}`,\r\n              backgroundColor: selected\r\n                ? (isDarkMode ? `${areaColor}20` : `${areaColor}10`)\r\n                : 'transparent',\r\n              textTransform: 'uppercase',\r\n              letterSpacing: 0.6,\r\n              whiteSpace: 'nowrap',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              gap: '6px',\r\n              transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n              boxShadow: 'none' // Simplified - no shadows\r\n            }}\r\n            onMouseEnter={(e) => {\r\n              if (!selected) {\r\n                e.currentTarget.style.backgroundColor = `${areaColor}12`;\r\n                e.currentTarget.style.boxShadow = 'none'; // No shadows on hover\r\n              }\r\n            }}\r\n            onMouseLeave={(e) => {\r\n              if (!selected) {\r\n                e.currentTarget.style.backgroundColor = 'transparent';\r\n                e.currentTarget.style.boxShadow = 'none';\r\n              }\r\n            }}\r\n          >\r\n            <Icon \r\n              iconName={areaIcon} \r\n              styles={{ \r\n                root: { \r\n                  fontSize: '12px', \r\n                  color: areaColor,\r\n                  opacity: 0.9,\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  lineHeight: 1\r\n                } \r\n              }} \r\n            />\r\n            <span style={{ \r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              lineHeight: 1\r\n            }}>\r\n              {getAreaDisplayText(areaOfWork)}\r\n            </span>\r\n            \r\n            {/* Simple status indicator dot */}\r\n            {selected && (\r\n              <>\r\n                <span style={{ \r\n                  width: 3, \r\n                  height: 3, \r\n                  borderRadius: '50%', \r\n                  backgroundColor: isDarkMode ? 'rgba(255,255,255,0.5)' : `${areaColor}80`,\r\n                  marginLeft: 2\r\n                }} />\r\n                <span style={{\r\n                  fontSize: 9,\r\n                  fontWeight: 500,\r\n                  opacity: 0.8,\r\n                  textTransform: 'none',\r\n                  letterSpacing: 0.3\r\n                }}>\r\n                  {(() => {\r\n                    // Show instruction status or date info\r\n                    if (instruction?.InstructionRef) {\r\n                      return `#${instruction.InstructionRef.toString().slice(-4)}`;\r\n                    }\r\n                    if (instruction?.Created_Date) {\r\n                      try {\r\n                        const date = new Date(instruction.Created_Date);\r\n                        const now = new Date();\r\n                        const diffDays = Math.floor((now.getTime() - date.getTime()) / (1000 * 60 * 60 * 24));\r\n                        if (diffDays === 0) return 'Today';\r\n                        if (diffDays === 1) return '1d';\r\n                        if (diffDays < 7) return `${diffDays}d`;\r\n                        if (diffDays < 30) return `${Math.floor(diffDays / 7)}w`;\r\n                        return `${Math.floor(diffDays / 30)}m`;\r\n                      } catch {\r\n                        return 'Active';\r\n                      }\r\n                    }\r\n                    return 'Active';\r\n                  })()}\r\n                </span>\r\n              </>\r\n            )}\r\n          </div>\r\n        )}\r\n        \r\n      </div>\r\n\r\n      {/* Meta: contact + identifiers (chips) */}\r\n        <div style={{ \r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          gap: '8px',\r\n          opacity: selected ? 1 : 0.85,\r\n          transition: 'opacity 0.3s ease',\r\n          marginTop: 4,\r\n          marginLeft: onToggle ? 26 : 0,\r\n          flexWrap: 'wrap'\r\n        }}>\r\n        {(() => {\r\n          const email = instruction?.Email || instruction?.email || (deal as any)?.LeadClientEmail || (instruction as any)?.LeadClientEmail;\r\n          const phone = instruction?.Phone || instruction?.phone || (deal as any)?.Phone || (instruction as any)?.PhoneNumber || (instruction as any)?.ContactNumber;\r\n          const instructionRefVal = instruction?.InstructionRef || instruction?.instructionRef || instruction?.ref || instruction?.Ref;\r\n          const prospectVal = prospectId;\r\n          const contactValue = solicitorContact;\r\n\r\n          const chipBase = {\r\n            color: selected \r\n              ? (isDarkMode ? '#ffffff' : '#ffffff') // White text for both when selected\r\n              : (isDarkMode ? '#e2e8f0' : 'rgba(0,0,0,0.7)'), // Higher contrast text\r\n            fontSize: '12px',\r\n            cursor: 'pointer' as const,\r\n            padding: '6px 12px', // constant padding to avoid size jump\r\n            borderRadius: '14px', // constant radius\r\n            transition: 'color 0.3s ease, background-color 0.3s ease, border-color 0.3s ease',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            gap: '8px',\r\n            border: selected \r\n              ? (isDarkMode ? `1px solid ${colours.blue}` : `1px solid ${colours.blue}`) // Same border for both modes\r\n              : (isDarkMode ? '1px solid #334155' : '1px solid rgba(0,0,0,0.14)'), // Solid border in dark mode\r\n            backgroundColor: selected \r\n              ? (isDarkMode ? '#334155' : colours.blue) // Dark slate for dark mode, blue for light mode\r\n              : (isDarkMode ? '#1e293b' : 'rgba(0,0,0,0.04)'), // Solid background\r\n            boxShadow: selected \r\n              ? 'none' // No shadow in either mode for consistency\r\n              : 'none',\r\n            fontWeight: 400 // Regular weight, not bold\r\n          };\r\n\r\n          const onHover = (el: HTMLElement) => {\r\n            if (!selected) {\r\n              el.style.borderColor = isDarkMode ? colours.blue : colours.blue;\r\n              el.style.color = colours.blue;\r\n              el.style.backgroundColor = isDarkMode ? '#475569' : 'rgba(59, 130, 246, 0.08)'; // Solid hover in dark mode\r\n              el.style.boxShadow = 'none'; // No shadow to avoid perceived growth\r\n            } else {\r\n              el.style.boxShadow = 'none';\r\n              el.style.backgroundColor = isDarkMode ? '#475569' : 'rgba(59, 130, 246, 0.12)';\r\n            }\r\n          };\r\n          const onLeave = (el: HTMLElement) => {\r\n            if (!selected) {\r\n              el.style.color = isDarkMode ? '#e2e8f0' : 'rgba(0,0,0,0.6)';\r\n              el.style.borderColor = isDarkMode ? '#334155' : 'rgba(0,0,0,0.12)';\r\n              el.style.backgroundColor = isDarkMode ? '#1e293b' : 'rgba(0,0,0,0.04)';\r\n              el.style.boxShadow = 'none';\r\n            } else {\r\n              // Restore the selected chip styles from chipBase\r\n              el.style.boxShadow = 'none';\r\n              el.style.backgroundColor = isDarkMode ? '#334155' : colours.blue; // Match chipBase selected styles\r\n              el.style.color = '#ffffff'; // White text for selected chips\r\n              el.style.borderColor = colours.blue; // Blue border for selected chips\r\n            }\r\n          };          return (\r\n            <>\r\n              {email && (\r\n                <div\r\n                  style={{ ...chipBase, maxWidth: 'unset' }}\r\n                  onClick={(e) => { e.stopPropagation(); navigator.clipboard.writeText(email); }}\r\n                  onMouseEnter={(e) => onHover(e.currentTarget)}\r\n                  onMouseLeave={(e) => onLeave(e.currentTarget)}\r\n                  title={`Click to copy email: ${email}`}\r\n                >\r\n                  <FaEnvelope style={{ \r\n                    fontSize: '12px', \r\n                    color: selected ? (isDarkMode ? '#ffffff' : '#ffffff') : 'inherit', // White when selected\r\n                    transition: 'color 0.2s ease' \r\n                  }} />\r\n                  <span style={{ fontFamily: 'Consolas, Monaco, monospace', fontSize: '11px' }}>{email}</span>\r\n                </div>\r\n              )}\r\n              {phone && (\r\n                <div\r\n                  style={chipBase}\r\n                  onClick={(e) => { e.stopPropagation(); navigator.clipboard.writeText(phone); }}\r\n                  onMouseEnter={(e) => onHover(e.currentTarget)}\r\n                  onMouseLeave={(e) => onLeave(e.currentTarget)}\r\n                  title={`Click to copy phone: ${phone}`}\r\n                >\r\n                  <FaPhone style={{ \r\n                    fontSize: '12px', \r\n                    color: selected ? (isDarkMode ? '#ffffff' : '#ffffff') : 'inherit', // White when selected\r\n                    transition: 'color 0.2s ease' \r\n                  }} />\r\n                  <span style={{ fontFamily: 'Consolas, Monaco, monospace', fontSize: '11px' }}>{phone}</span>\r\n                </div>\r\n              )}\r\n              {instructionRefVal && (\r\n                <div\r\n                  style={chipBase}\r\n                  onClick={(e) => { e.stopPropagation(); navigator.clipboard.writeText(String(instructionRefVal)); }}\r\n                  onMouseEnter={(e) => onHover(e.currentTarget)}\r\n                  onMouseLeave={(e) => onLeave(e.currentTarget)}\r\n                  title={`Instruction Ref: ${instructionRefVal}`}\r\n                >\r\n                  <FaFileAlt style={{ \r\n                    fontSize: '12px',\r\n                    color: selected ? (isDarkMode ? '#ffffff' : '#ffffff') : 'inherit' // White when selected\r\n                  }} />\r\n                  <span style={{ fontFamily: 'Consolas, Monaco, monospace', fontSize: '11px' }}>{instructionRefVal}</span>\r\n                </div>\r\n              )}\r\n              {prospectVal && (\r\n                <div\r\n                  style={chipBase}\r\n                  onClick={(e) => { e.stopPropagation(); navigator.clipboard.writeText(String(prospectVal)); }}\r\n                  onMouseEnter={(e) => onHover(e.currentTarget)}\r\n                  onMouseLeave={(e) => onLeave(e.currentTarget)}\r\n                  title={`Prospect ID: ${prospectVal}`}\r\n                >\r\n                  <svg \r\n                    width=\"12\" \r\n                    height=\"12\" \r\n                    viewBox=\"0 0 66.45 100\" \r\n                    style={{ \r\n                      fill: selected \r\n                        ? (isDarkMode ? '#ffffff' : '#ffffff') // White when selected\r\n                        : (isDarkMode ? 'rgba(255,255,255,0.7)' : 'rgba(0,0,0,0.7)')\r\n                    }}\r\n                  >\r\n                    <path d=\"m.33,100c0-3.95-.23-7.57.13-11.14.12-1.21,1.53-2.55,2.68-3.37,6.52-4.62,13.15-9.1,19.73-13.64,10.22-7.05,20.43-14.12,30.64-21.18.21-.14.39-.32.69-.57-5.82-4.03-11.55-8-17.27-11.98C25.76,30.37,14.64,22.57,3.44,14.88.97,13.19-.08,11.07.02,8.16.1,5.57.04,2.97.04,0c.72.41,1.16.62,1.56.9,10.33,7.17,20.66,14.35,30.99,21.52,9.89,6.87,19.75,13.79,29.68,20.59,3.26,2.23,4.78,5.03,3.97,8.97-.42,2.05-1.54,3.59-3.24,4.77-8.94,6.18-17.88,12.36-26.82,18.55-10.91,7.55-21.82,15.1-32.73,22.65-.98.68-2,1.32-3.12,2.05Z\"/>\r\n                    <path d=\"m36.11,48.93c-2.74,1.6-5.04,3.21-7.56,4.35-2.25,1.03-4.37-.1-6.27-1.4-5.1-3.49-10.17-7.01-15.25-10.53-2.01-1.39-4.05-2.76-5.99-4.25-.5-.38-.91-1.17-.96-1.8-.13-1.59-.06-3.19-.03-4.79.02-1.32.25-2.57,1.57-3.27,1.4-.74,2.72-.36,3.91.46,3.44,2.33,6.85,4.7,10.26,7.06,6.22,4.3,12.43,8.6,18.65,12.91.39.27.76.57,1.67,1.25Z\"/>\r\n                  </svg>\r\n                  <span style={{ fontFamily: 'Consolas, Monaco, monospace', fontSize: '11px' }}>{prospectVal}</span>\r\n                </div>\r\n              )}\r\n              {contactValue && (\r\n                <div\r\n                  style={chipBase}\r\n                  onClick={(e) => { e.stopPropagation(); navigator.clipboard.writeText(String(contactValue)); }}\r\n                  onMouseEnter={(e) => onHover(e.currentTarget)}\r\n                  onMouseLeave={(e) => onLeave(e.currentTarget)}\r\n                  title={`Solicitor/Contact: ${contactValue}`}\r\n                >\r\n                  <FaUser style={{ \r\n                    fontSize: '12px',\r\n                    color: selected ? (isDarkMode ? '#ffffff' : '#ffffff') : 'inherit' // White when selected\r\n                  }} />\r\n                  <span style={{ fontFamily: 'Consolas, Monaco, monospace', fontSize: '11px' }}>\r\n                    {(() => {\r\n                      if (!teamData) return contactValue;\r\n                      \r\n                      // Try multiple lookup strategies to find the correct team member\r\n                      let teamMember = null;\r\n                      \r\n                      // 1. Exact full name match\r\n                      teamMember = teamData.find(member => \r\n                        member['Full Name']?.toLowerCase().trim() === contactValue.toLowerCase().trim()\r\n                      );\r\n                      \r\n                      // 2. Exact initials match\r\n                      if (!teamMember) {\r\n                        teamMember = teamData.find(member => \r\n                          member.Initials?.toLowerCase() === contactValue.toLowerCase()\r\n                        );\r\n                      }\r\n                      \r\n                      // 3. Partial name match (for cases where solicitorContact is part of full name)\r\n                      if (!teamMember) {\r\n                        teamMember = teamData.find(member => {\r\n                          const fullName = member['Full Name']?.toLowerCase();\r\n                          const contact = contactValue.toLowerCase();\r\n                          return fullName && (fullName.includes(contact) || contact.includes(fullName));\r\n                        });\r\n                      }\r\n                      \r\n                      // Return proper initials from team data, or fallback to original\r\n                      return teamMember?.Initials || contactValue;\r\n                    })()}\r\n                  </span>\r\n                </div>\r\n              )}\r\n            </>\r\n          );\r\n        })()}\r\n      </div>\r\n\r\n      {/* Company & Contact details: Company moved to header; section removed intentionally */}\r\n\r\n      {/* Deal summary: service + amount (clamped) */}\r\n      {hasDeal && (\r\n        <div style={{\r\n          backgroundColor: selected \r\n            ? (isDarkMode ? '#334155' : 'rgba(59, 130, 246, 0.04)') // Solid background in dark mode\r\n            : (isDarkMode ? '#1e293b' : 'rgba(0,0,0,0.03)'),\r\n          border: selected\r\n            ? (isDarkMode ? `1px solid ${colours.blue}` : `1px solid ${colours.blue}`) // Thinner border, same for both modes\r\n            : (isDarkMode ? '1px solid #334155' : '1px solid rgba(0,0,0,0.06)'), // Solid border\r\n          borderRadius: 8, // constant\r\n          padding: '10px 14px', // constant\r\n          marginTop: 6,\r\n          marginBottom: 2,\r\n          marginLeft: onToggle ? 26 : 0,\r\n          position: 'relative',\r\n          boxShadow: selected \r\n            ? (isDarkMode ? 'none' : `0 2px 8px ${colours.blue}15`) // No shadow in dark mode\r\n            : 'none',\r\n          transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)'\r\n        }}>\r\n          {isEditingDeal ? (\r\n            /* Edit mode */\r\n            <div style={{ display: 'flex', flexDirection: 'column', gap: 8 }}>\r\n              <TextField\r\n                value={editDealData.ServiceDescription}\r\n                onChange={(_, newValue) => setEditDealData(prev => ({ ...prev, ServiceDescription: newValue || '' }))}\r\n                onClick={(e) => e.stopPropagation()}\r\n                placeholder=\"Service description\"\r\n                multiline\r\n                rows={2}\r\n                disabled={isSavingDeal}\r\n                styles={{\r\n                  fieldGroup: {\r\n                    backgroundColor: isDarkMode ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.03)',\r\n                    border: `1px solid ${isDarkMode ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)'}`,\r\n                    borderRadius: 4,\r\n                  },\r\n                  field: {\r\n                    color: isDarkMode ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\r\n                    fontSize: 11,\r\n                    padding: '6px 8px'\r\n                  }\r\n                }}\r\n              />\r\n              <TextField\r\n                value={editDealData.Amount}\r\n                onChange={(_, newValue) => setEditDealData(prev => ({ ...prev, Amount: newValue || '' }))}\r\n                onClick={(e) => e.stopPropagation()}\r\n                placeholder=\"Amount (numbers only)\"\r\n                type=\"number\"\r\n                disabled={isSavingDeal}\r\n                styles={{\r\n                  fieldGroup: {\r\n                    backgroundColor: isDarkMode ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.03)',\r\n                    border: `1px solid ${isDarkMode ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)'}`,\r\n                    borderRadius: 4,\r\n                  },\r\n                  field: {\r\n                    color: isDarkMode ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\r\n                    fontSize: 11,\r\n                    padding: '6px 8px'\r\n                  }\r\n                }}\r\n              />\r\n              <div style={{ display: 'flex', gap: 8, justifyContent: 'flex-end', marginTop: 4 }}>\r\n                <DefaultButton\r\n                  text=\"Cancel\"\r\n                  onClick={(e) => { e.stopPropagation(); handleCancelEditDeal(); }}\r\n                  disabled={isSavingDeal}\r\n                  styles={{\r\n                    root: {\r\n                      height: 24,\r\n                      fontSize: 10,\r\n                      minWidth: 50,\r\n                      backgroundColor: isDarkMode ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.03)',\r\n                      border: `1px solid ${isDarkMode ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)'}`,\r\n                      color: isDarkMode ? 'rgba(255,255,255,0.7)' : 'rgba(0,0,0,0.7)'\r\n                    }\r\n                  }}\r\n                />\r\n                <PrimaryButton\r\n                  text={isSavingDeal ? 'Saving...' : 'Save'}\r\n                  onClick={(e) => { e.stopPropagation(); handleSaveDeal(); }}\r\n                  disabled={isSavingDeal}\r\n                  styles={{\r\n                    root: {\r\n                      height: 24,\r\n                      fontSize: 10,\r\n                      minWidth: 50,\r\n                      backgroundColor: colours.blue,\r\n                      border: 'none'\r\n                    }\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            /* Display mode */\r\n            <div style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'space-between',\r\n              gap: '12px',\r\n              flexWrap: 'wrap'\r\n            }}>\r\n              {/* Edit moved to Global Workbench */}\r\n              <div style={{\r\n                fontSize: 12,\r\n                fontWeight: 500,\r\n                color: isDarkMode ? 'rgba(255,255,255,0.65)' : 'rgba(0,0,0,0.65)',\r\n                lineHeight: 1.2,\r\n                flex: 1,\r\n                minWidth: '200px',\r\n                marginBottom: 0,\r\n                display: '-webkit-box',\r\n                WebkitLineClamp: 2,\r\n                WebkitBoxOrient: 'vertical' as any,\r\n                overflow: 'hidden',\r\n                fontStyle: !deal?.ServiceDescription ? 'italic' : 'normal',\r\n                opacity: !deal?.ServiceDescription ? 0.7 : 1\r\n              }}>\r\n                {deal?.ServiceDescription || 'No service description'}\r\n              </div>\r\n              <div style={{\r\n                fontSize: 12,\r\n                fontWeight: 700,\r\n                color: isDarkMode ? 'rgba(255,255,255,0.7)' : 'rgba(0,0,0,0.7)',\r\n                fontFamily: 'Raleway, sans-serif',\r\n                textAlign: 'right',\r\n                whiteSpace: 'nowrap',\r\n                fontStyle: typeof deal?.Amount !== 'number' ? 'italic' : 'normal',\r\n                opacity: typeof deal?.Amount !== 'number' ? 0.7 : 1\r\n              }}>\r\n                {typeof deal?.Amount === 'number' ? `£${deal.Amount.toLocaleString()}` : 'No amount set'}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Professional Status Overview - Hidden for pitched deals */}\r\n      {!isPitchedDeal && (\r\n        <div style={{ \r\n          display: 'flex', \r\n          flexDirection: 'column', \r\n          marginTop: 6,\r\n          marginLeft: onToggle ? 26 : 0,\r\n          padding: '10px 14px', // constant\r\n          backgroundColor: selected \r\n            ? (isDarkMode ? '#334155' : 'rgba(248,250,252,0.8)') // Solid background in dark mode\r\n            : (isDarkMode ? '#1e293b' : 'rgba(248,250,252,0.6)'),\r\n          borderRadius: 8, // constant\r\n          border: selected\r\n            ? (isDarkMode ? `1px solid ${colours.blue}` : `1px solid ${colours.blue}`) // Thinner border, same for both modes\r\n            : (isDarkMode ? '1px solid #334155' : '1px solid rgba(0,0,0,0.03)'), // Solid border\r\n          boxShadow: selected \r\n            ? (isDarkMode ? 'none' : `0 2px 8px ${colours.blue}10`) // No shadow in dark mode\r\n            : 'none',\r\n          transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)'\r\n        }}>\r\n          {/* Header */}\r\n          <div style={{\r\n            fontSize: '10px',\r\n            fontWeight: 600,\r\n            color: isDarkMode ? 'rgba(255,255,255,0.4)' : 'rgba(0,0,0,0.4)',\r\n            marginBottom: '0px',\r\n            textTransform: 'uppercase',\r\n            letterSpacing: '0.4px'\r\n          }}>\r\n          </div>\r\n          \r\n          {/* Key Status Indicators */}\r\n          <div style={{ \r\n            display: 'flex',\r\n            flexWrap: 'nowrap',\r\n            alignItems: 'center',\r\n            gap: '8px',\r\n            whiteSpace: 'nowrap',\r\n            width: '100%',\r\n            overflow: 'hidden'\r\n          }}>\r\n          {(() => {\r\n            const keySteps = [] as Array<{ key: string; label: string; status: string; icon: React.ReactNode; clickable: boolean; onClick: (() => void) | null }>;\r\n            // Use compile-time replacement from CRA; do not reference `process` directly in the browser\r\n            const isProd = process.env.NODE_ENV === 'production';\r\n            \r\n            // ID Verification\r\n            keySteps.push({\r\n              key: 'id',\r\n              label: 'ID',\r\n              status: verifyIdStatus === 'complete' ? 'Verified' : \r\n                     verifyIdStatus === 'review' ? 'Review Required' : \r\n                     verifyIdStatus === 'received' ? 'Under Review' : 'Pending',\r\n              icon: <FaIdCard />,\r\n              clickable: true,\r\n              onClick: onEIDClick ?? null\r\n            });\r\n            \r\n            // Payment\r\n            keySteps.push({\r\n              key: 'payment', \r\n              label: 'Pay',\r\n              status: paymentStatus === 'complete' ? 'Paid' : \r\n                     paymentStatus === 'processing' ? 'Processing' : 'Required',\r\n              icon: <FaPoundSign />,\r\n              clickable: true,\r\n              onClick: (() => onOpenWorkbench?.('payments')) as any\r\n            });\r\n            \r\n            // Documents\r\n            keySteps.push({\r\n              key: 'documents',\r\n              label: 'Docs',\r\n              status: documentsToUse && documentsToUse.length > 0 ? `${documentsToUse.length} Uploaded` : 'Pending',\r\n              icon: <FaFileAlt />,\r\n              clickable: true,\r\n              onClick: (() => onOpenWorkbench?.('documents')) as any\r\n            });\r\n            \r\n            // Risk Assessment\r\n            keySteps.push({\r\n              key: 'risk',\r\n              label: 'Risk',\r\n              status: riskStatus === 'complete' ? 'Assessed' : \r\n                     riskStatus === 'review' ? 'High Risk' : 'Pending',\r\n              icon: <FaShieldAlt />,\r\n              clickable: true,\r\n              onClick: (() => {\r\n                // If no risk assessment exists yet, trigger onRiskClick to create one\r\n                // Otherwise open workbench to view details\r\n                if (!hasRiskAssessment && onRiskClick) {\r\n                  onRiskClick();\r\n                } else {\r\n                  onOpenWorkbench?.('risk');\r\n                }\r\n              }) as any\r\n            });\r\n            \r\n            // Matter Opening\r\n            keySteps.push({\r\n              key: 'matter',\r\n              label: 'Matter',\r\n              status: matterStatus === 'complete' ? 'Opened' : 'Ready to Open',\r\n              icon: <FaFolder />,\r\n              clickable: matterStatus !== 'complete',\r\n              onClick: () => {\r\n                if (matterStatus !== 'complete' && onOpenMatter && instruction) {\r\n                  onOpenMatter(instruction);\r\n                }\r\n              }\r\n            });\r\n            \r\n            // CCL (Client Care Letter) - hidden for production, sequence ends on Matter\r\n            if (!isProd) {\r\n              keySteps.push({\r\n                key: 'ccl',\r\n                label: 'CCL',\r\n                status: cclStatus === 'complete' ? 'Generated' : 'Pending',\r\n                icon: <FaClipboardCheck />,\r\n                clickable: matterStatus === 'complete',\r\n                onClick: null // CCL functionality would be added here\r\n              });\r\n            }\r\n            \r\n            const stepsLen = keySteps.length;\r\n            return keySteps.map((step, index) => {\r\n              const isComplete = (() => {\r\n                const statusText = step.status.toLowerCase();\r\n                return statusText.includes('complete') || statusText.includes('paid') || statusText.includes('assessed') || statusText.includes('opened') || statusText.includes('verified') || statusText.includes('uploaded') || statusText.includes('generated');\r\n              })();\r\n              const statusColour = (() => {\r\n                const statusText = step.status.toLowerCase();\r\n                if (statusText.includes('complete') || statusText.includes('paid') || statusText.includes('assessed') || statusText.includes('opened') || statusText.includes('verified') || statusText.includes('uploaded') || statusText.includes('generated')) {\r\n                  return colours.green;\r\n                } else if (statusText.includes('review') || statusText.includes('high risk')) {\r\n                  return '#ef4444';\r\n                } else if (statusText.includes('processing') || statusText.includes('under review')) {\r\n                  return '#f59e0b';\r\n                } else {\r\n                  return isDarkMode ? 'rgba(255,255,255,0.35)' : 'rgba(0,0,0,0.25)';\r\n                }\r\n              })();\r\n\r\n              return (\r\n                <div key={step.key} style={{ flex: '0 1 auto', minWidth: 0 }}>\r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center',\r\n                      gap: '6px',\r\n                      cursor: step.clickable ? 'pointer' : 'default',\r\n                      padding: '6px clamp(6px, 1vw, 10px)', // constant padding\r\n                      borderRadius: 12,\r\n                      backgroundColor: 'transparent',\r\n                      border: 'none',\r\n                      transition: 'color 0.2s ease',\r\n                      minHeight: '28px', // constant height\r\n                      minWidth: 0,\r\n                      flex: '0 1 auto',\r\n                      position: 'relative',\r\n                      overflow: 'visible',\r\n                      boxShadow: 'none',\r\n                      fontWeight: 600,\r\n                      whiteSpace: 'nowrap'\r\n                    }}\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      if (step.clickable && step.onClick) {\r\n                        step.onClick();\r\n                      }\r\n                    }}\r\n                    onMouseEnter={(e) => {\r\n                      // no transform scaling on hover to avoid size changes\r\n                      // Show status text on pill hover\r\n                      const statusEl = e.currentTarget.querySelector('.status-text') as HTMLElement;\r\n                      if (statusEl) {\r\n                        statusEl.style.display = 'block';\r\n                      }\r\n                    }}\r\n                    onMouseLeave={(e) => {\r\n                      // no transform scaling reset needed\r\n                      // Hide status text when not hovering\r\n                      const statusEl = e.currentTarget.querySelector('.status-text') as HTMLElement;\r\n                      if (statusEl) {\r\n                        statusEl.style.display = 'none';\r\n                      }\r\n                    }}\r\n                  >\r\n                    {/* Icon with status color */}\r\n                    <div style={{\r\n                      fontSize: '12px',\r\n                      color: (() => {\r\n                        const statusText = step.status.toLowerCase();\r\n                        if (statusText.includes('complete') || statusText.includes('paid') || statusText.includes('assessed') || statusText.includes('opened') || statusText.includes('verified') || statusText.includes('uploaded') || statusText.includes('generated')) {\r\n                          return colours.green; // Use Helix green for complete\r\n                        } else if (statusText.includes('review') || statusText.includes('high risk')) {\r\n                          return '#ef4444'; // Red for review/issues\r\n                        } else if (statusText.includes('processing') || statusText.includes('under review')) {\r\n                          return '#f59e0b'; // Amber for in progress\r\n                        } else {\r\n                          return isDarkMode ? 'rgba(255,255,255,0.4)' : 'rgba(0,0,0,0.4)'; // Grey for pending/not ready\r\n                        }\r\n                      })()\r\n                    }}>\r\n                      {step.icon}\r\n                    </div>\r\n                    \r\n                    {/* Label - always visible */}\r\n                    <div style={{\r\n                      fontSize: 'clamp(10px, 1vw, 11px)',\r\n                      fontWeight: 600,\r\n                      color: selected \r\n                        ? (isDarkMode ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.8)')\r\n                        : (isDarkMode ? 'rgba(255,255,255,0.5)' : 'rgba(0,0,0,0.5)'),\r\n                      letterSpacing: '0.2px',\r\n                      whiteSpace: 'nowrap',\r\n                      transition: 'all 0.3s ease'\r\n                    }}>\r\n                      {step.label}\r\n                    </div>\r\n                    \r\n                    {/* Status text - only show on pill hover */}\r\n                    <div \r\n                      className=\"status-text\"\r\n                      style={{\r\n                        display: 'none',\r\n                        fontSize: 'clamp(9px, 0.9vw, 10px)',\r\n                        fontWeight: 500,\r\n                        color: (() => {\r\n                          const statusText = step.status.toLowerCase();\r\n                          if (statusText.includes('complete') || statusText.includes('paid') || statusText.includes('assessed') || statusText.includes('opened') || statusText.includes('verified') || statusText.includes('uploaded') || statusText.includes('generated')) {\r\n                            return colours.green; // Use Helix green for complete\r\n                          } else if (statusText.includes('review') || statusText.includes('high risk')) {\r\n                            return '#ef4444'; // Red for review/issues\r\n                          } else if (statusText.includes('processing') || statusText.includes('under review')) {\r\n                            return '#f59e0b'; // Amber for in progress\r\n                          } else {\r\n                            return selected \r\n                              ? (isDarkMode ? 'rgba(255,255,255,0.6)' : 'rgba(0,0,0,0.6)')\r\n                              : (isDarkMode ? 'rgba(255,255,255,0.4)' : 'rgba(0,0,0,0.4)'); // Grey for pending/not ready\r\n                          }\r\n                        })(),\r\n                        lineHeight: 1.1,\r\n                        marginLeft: '4px',\r\n                        animation: 'fadeIn 0.2s ease-out',\r\n                        whiteSpace: 'nowrap',\r\n                        textShadow: selected \r\n                          ? (isDarkMode ? '0 1px 2px rgba(0,0,0,0.3)' : '0 1px 2px rgba(255,255,255,0.8)') \r\n                          : 'none'\r\n                      }}>\r\n                      {step.status}\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n              );\r\n            });\r\n          })()}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {/* Contact banner removed per request; details now inline in header */}\r\n      \r\n      {/* Risk Details Section - shown when risk pill is clicked */}\r\n      {showRiskDetails && hasRiskAssessment && (\r\n        <div style={{\r\n          marginTop: '12px',\r\n          padding: '16px',\r\n          background: isDarkMode ? 'rgba(255,255,255,0.05)' : 'rgba(54,144,206,0.05)',\r\n          borderRadius: '8px',\r\n          border: `1px solid ${isDarkMode ? 'rgba(255,255,255,0.1)' : 'rgba(54,144,206,0.15)'}`,\r\n          animation: 'fadeIn 0.3s ease-out'\r\n        }}>\r\n          <div style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between',\r\n            gap: '8px',\r\n            marginBottom: '12px',\r\n            paddingBottom: '8px',\r\n            borderBottom: `1px solid ${isDarkMode ? 'rgba(255,255,255,0.1)' : 'rgba(54,144,206,0.1)'}`\r\n          }}>\r\n            <div style={{ display: 'flex', alignItems: 'center', gap: 8 }}>\r\n              <FaShieldAlt style={{ color: colours.blue, fontSize: '16px' }} />\r\n              <span style={{\r\n                fontSize: '14px',\r\n                fontWeight: 700,\r\n                color: isDarkMode ? '#fff' : colours.darkBlue\r\n              }}>\r\n                Risk Assessment Details\r\n              </span>\r\n            </div>\r\n            <div style={{ display: 'flex', gap: 8 }}>\r\n              <button\r\n                type=\"button\"\r\n                onClick={(e) => { e.stopPropagation(); instruction?.InstructionRef && onEditRisk?.(instruction.InstructionRef); }}\r\n                style={{\r\n                  padding: '6px 10px',\r\n                  borderRadius: 6,\r\n                  border: '1px solid rgba(54,144,206,0.3)',\r\n                  background: isDarkMode ? 'rgba(255,255,255,0.08)' : 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n                  color: colours.cta,\r\n                  cursor: 'pointer'\r\n                }}\r\n                title=\"Edit risk assessment\"\r\n              >\r\n                Edit\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  if (!instruction?.InstructionRef) return;\r\n                  const ok = window.confirm('Delete this risk assessment? This cannot be undone.');\r\n                  if (ok) onDeleteRisk?.(instruction.InstructionRef);\r\n                }}\r\n                style={{\r\n                  padding: '6px 10px',\r\n                  borderRadius: 6,\r\n                  border: '1px solid rgba(220, 38, 38, 0.35)',\r\n                  background: isDarkMode ? 'rgba(220,38,38,0.15)' : 'linear-gradient(135deg, #fff5f5 0%, #ffecec 100%)',\r\n                  color: colours.red,\r\n                  cursor: 'pointer'\r\n                }}\r\n                title=\"Delete risk assessment\"\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', gap: '12px' }}>\r\n            {/* Risk Result */}\r\n            {risk.RiskAssessmentResult && (\r\n              <div>\r\n                <div style={{ fontSize: '11px', color: '#666', marginBottom: '4px', fontWeight: 600, textTransform: 'uppercase' }}>\r\n                  Risk Level\r\n                </div>\r\n                <div style={{\r\n                  fontSize: '13px',\r\n                  fontWeight: 600,\r\n                  color: risk.RiskAssessmentResult?.toLowerCase().includes('low') ? colours.green : \r\n                         risk.RiskAssessmentResult?.toLowerCase().includes('medium') ? colours.yellow :\r\n                         risk.RiskAssessmentResult?.toLowerCase().includes('high') ? colours.red : '#666'\r\n                }}>\r\n                  {risk.RiskAssessmentResult}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Risk Score */}\r\n            {risk.RiskScore && (\r\n              <div>\r\n                <div style={{ fontSize: '11px', color: '#666', marginBottom: '4px', fontWeight: 600, textTransform: 'uppercase' }}>\r\n                  Risk Score\r\n                </div>\r\n                <div style={{ fontSize: '13px', fontWeight: 600, color: isDarkMode ? '#fff' : colours.darkBlue }}>\r\n                  {risk.RiskScore}/21\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Assessor */}\r\n            {risk.RiskAssessor && (\r\n              <div>\r\n                <div style={{ fontSize: '11px', color: '#666', marginBottom: '4px', fontWeight: 600, textTransform: 'uppercase' }}>\r\n                  Assessed By\r\n                </div>\r\n                <div style={{ fontSize: '13px', fontWeight: 600, color: isDarkMode ? '#fff' : colours.darkBlue }}>\r\n                  {risk.RiskAssessor}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Date */}\r\n            {risk.ComplianceDate && (\r\n              <div>\r\n                <div style={{ fontSize: '11px', color: '#666', marginBottom: '4px', fontWeight: 600, textTransform: 'uppercase' }}>\r\n                  Assessment Date\r\n                </div>\r\n                <div style={{ fontSize: '13px', fontWeight: 600, color: isDarkMode ? '#fff' : colours.darkBlue }}>\r\n                  {new Date(risk.ComplianceDate).toLocaleDateString('en-GB')}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Additional Risk Factors */}\r\n          {(risk.ClientType || risk.ValueOfInstruction || risk.TransactionRiskLevel) && (\r\n            <div style={{ marginTop: '12px' }}>\r\n              <div style={{ fontSize: '11px', color: '#666', marginBottom: '8px', fontWeight: 600, textTransform: 'uppercase' }}>\r\n                Risk Factors\r\n              </div>\r\n              <div style={{ display: 'flex', flexWrap: 'wrap', gap: '6px' }}>\r\n                {risk.ClientType && (\r\n                  <span style={{\r\n                    padding: '4px 8px',\r\n                    background: isDarkMode ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)',\r\n                    borderRadius: '12px',\r\n                    fontSize: '11px',\r\n                    fontWeight: 500,\r\n                    color: isDarkMode ? '#fff' : colours.darkBlue\r\n                  }}>\r\n                    {risk.ClientType}\r\n                  </span>\r\n                )}\r\n                {risk.ValueOfInstruction && (\r\n                  <span style={{\r\n                    padding: '4px 8px',\r\n                    background: isDarkMode ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)',\r\n                    borderRadius: '12px',\r\n                    fontSize: '11px',\r\n                    fontWeight: 500,\r\n                    color: isDarkMode ? '#fff' : colours.darkBlue\r\n                  }}>\r\n                    {risk.ValueOfInstruction}\r\n                  </span>\r\n                )}\r\n                {risk.TransactionRiskLevel && (\r\n                  <span style={{\r\n                    padding: '4px 8px',\r\n                    background: isDarkMode ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)',\r\n                    borderRadius: '12px',\r\n                    fontSize: '11px',\r\n                    fontWeight: 500,\r\n                    color: isDarkMode ? '#fff' : colours.darkBlue\r\n                  }}>\r\n                    Transaction: {risk.TransactionRiskLevel}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Payment Details Section - shown when payment pill is clicked */}\r\n      {showInstructionDetails && (\r\n        <div className=\"mt-4 p-3\" style={{\r\n          border: '1px solid #e0e0e0',\r\n          borderRadius: '6px',\r\n          background: isDarkMode ? '#2d2d2d' : '#f8f9fa',\r\n          fontSize: '14px',\r\n          marginLeft: onToggle ? 26 : 0\r\n        }}>\r\n          <h5 style={{\r\n            color: isDarkMode ? '#fff' : colours.darkBlue,\r\n            marginBottom: '12px',\r\n            fontWeight: 'bold',\r\n            fontSize: '16px'\r\n          }}>\r\n            Instruction Details\r\n          </h5>\r\n          \r\n          {loadingInstructionDetails ? (\r\n            <div style={{ color: isDarkMode ? '#ccc' : '#666' }}>\r\n              Loading instruction details...\r\n            </div>\r\n          ) : instructionData ? (\r\n            <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '12px' }}>\r\n              <div>\r\n                <strong style={{ color: isDarkMode ? '#fff' : colours.darkBlue }}>\r\n                  Instruction Reference:\r\n                </strong>\r\n                <br />\r\n                <span style={{ color: isDarkMode ? '#ccc' : '#666' }}>\r\n                  {instructionData.InstructionRef}\r\n                </span>\r\n              </div>\r\n              \r\n              <div>\r\n                <strong style={{ color: isDarkMode ? '#fff' : colours.darkBlue }}>\r\n                  Stage:\r\n                </strong>\r\n                <br />\r\n                <span style={{ color: isDarkMode ? '#ccc' : '#666' }}>\r\n                  {instructionData.Stage}\r\n                </span>\r\n              </div>\r\n              \r\n              <div>\r\n                <strong style={{ color: isDarkMode ? '#fff' : colours.darkBlue }}>\r\n                  Client Type:\r\n                </strong>\r\n                <br />\r\n                <span style={{ color: isDarkMode ? '#ccc' : '#666' }}>\r\n                  {instructionData.ClientType}\r\n                </span>\r\n              </div>\r\n              \r\n              <div>\r\n                <strong style={{ color: isDarkMode ? '#fff' : colours.darkBlue }}>\r\n                  Helix Contact:\r\n                </strong>\r\n                <br />\r\n                <span style={{ color: isDarkMode ? '#ccc' : '#666' }}>\r\n                  {instructionData.HelixContact}\r\n                </span>\r\n              </div>\r\n              \r\n              {instructionData.ClientType === 'Individual' ? (\r\n                <>\r\n                  <div>\r\n                    <strong style={{ color: isDarkMode ? '#fff' : colours.darkBlue }}>\r\n                      Client Name:\r\n                    </strong>\r\n                    <br />\r\n                    <span style={{ color: isDarkMode ? '#ccc' : '#666' }}>\r\n                      {`${instructionData.FirstName || ''} ${instructionData.LastName || ''}`.trim()}\r\n                    </span>\r\n                  </div>\r\n                  \r\n                  <div>\r\n                    <strong style={{ color: isDarkMode ? '#fff' : colours.darkBlue }}>\r\n                      Date of Birth:\r\n                    </strong>\r\n                    <br />\r\n                    <span style={{ color: isDarkMode ? '#ccc' : '#666' }}>\r\n                      {instructionData.DateOfBirth}\r\n                    </span>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <div>\r\n                    <strong style={{ color: isDarkMode ? '#fff' : colours.darkBlue }}>\r\n                      Company Name:\r\n                    </strong>\r\n                    <br />\r\n                    <span style={{ color: isDarkMode ? '#ccc' : '#666' }}>\r\n                      {instructionData.CompanyName}\r\n                    </span>\r\n                  </div>\r\n                  \r\n                  <div>\r\n                    <strong style={{ color: isDarkMode ? '#fff' : colours.darkBlue }}>\r\n                      Company Type:\r\n                    </strong>\r\n                    <br />\r\n                    <span style={{ color: isDarkMode ? '#ccc' : '#666' }}>\r\n                      {instructionData.CompanyType}\r\n                    </span>\r\n                  </div>\r\n                </>\r\n              )}\r\n              \r\n              <div>\r\n                <strong style={{ color: isDarkMode ? '#fff' : colours.darkBlue }}>\r\n                  Email:\r\n                </strong>\r\n                <br />\r\n                <span style={{ color: isDarkMode ? '#ccc' : '#666' }}>\r\n                  {instructionData.EmailAddress}\r\n                </span>\r\n              </div>\r\n              \r\n              <div>\r\n                <strong style={{ color: isDarkMode ? '#fff' : colours.darkBlue }}>\r\n                  Phone:\r\n                </strong>\r\n                <br />\r\n                <span style={{ color: isDarkMode ? '#ccc' : '#666' }}>\r\n                  {instructionData.PhoneNumber}\r\n                </span>\r\n              </div>\r\n              \r\n              <div style={{ gridColumn: '1 / -1' }}>\r\n                <strong style={{ color: isDarkMode ? '#fff' : colours.darkBlue }}>\r\n                  Address:\r\n                </strong>\r\n                <br />\r\n                <span style={{ color: isDarkMode ? '#ccc' : '#666' }}>\r\n                  {[instructionData.AddressLine1, instructionData.AddressLine2, instructionData.City, instructionData.County, instructionData.PostCode]\r\n                    .filter(Boolean)\r\n                    .join(', ')}\r\n                </span>\r\n              </div>\r\n              \r\n              <div>\r\n                <strong style={{ color: isDarkMode ? '#fff' : colours.darkBlue }}>\r\n                  Submitted Date:\r\n                </strong>\r\n                <br />\r\n                <span style={{ color: isDarkMode ? '#ccc' : '#666' }}>\r\n                  {instructionData.SubmittedDate}\r\n                </span>\r\n              </div>\r\n              \r\n              <div>\r\n                <strong style={{ color: isDarkMode ? '#fff' : colours.darkBlue }}>\r\n                  Status:\r\n                </strong>\r\n                <br />\r\n                <span style={{ color: isDarkMode ? '#ccc' : '#666' }}>\r\n                  {instructionData.Status}\r\n                </span>\r\n              </div>\r\n              \r\n              {instructionData.NotesToClient && (\r\n                <div style={{ gridColumn: '1 / -1' }}>\r\n                  <strong style={{ color: isDarkMode ? '#fff' : colours.darkBlue }}>\r\n                    Notes to Client:\r\n                  </strong>\r\n                  <br />\r\n                  <span style={{ color: isDarkMode ? '#ccc' : '#666' }}>\r\n                    {instructionData.NotesToClient}\r\n                  </span>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <div style={{ color: isDarkMode ? '#ccc' : '#666' }}>\r\n              No instruction details found for this reference.\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {showPaymentDetails && (\r\n        <div style={{\r\n          marginTop: '12px',\r\n          marginLeft: onToggle ? 26 : 0,\r\n          padding: '16px',\r\n          background: isDarkMode ? 'rgba(255,255,255,0.02)' : 'rgba(248,250,252,0.8)',\r\n          borderRadius: '4px',\r\n          border: isDarkMode ? '1px solid rgba(255,255,255,0.06)' : '1px solid #e2e8f0',\r\n          animation: 'fadeIn 0.3s ease-out'\r\n        }}>\r\n          <div style={{\r\n            fontSize: '10px',\r\n            fontWeight: 600,\r\n            color: isDarkMode ? '#888' : '#64748b',\r\n            textTransform: 'uppercase',\r\n            letterSpacing: '0.5px',\r\n            marginBottom: '12px',\r\n            paddingBottom: '8px',\r\n            borderBottom: isDarkMode ? '1px solid rgba(255,255,255,0.08)' : '1px solid #e2e8f0'\r\n          }}>\r\n            Payment Details\r\n          </div>\r\n\r\n          {loadingPaymentDetails ? (\r\n            <div style={{ \r\n              display: 'flex', \r\n              alignItems: 'center', \r\n              justifyContent: 'center', \r\n              padding: '16px',\r\n              color: isDarkMode ? '#999' : '#666',\r\n              fontSize: '12px'\r\n            }}>\r\n              Loading payment details...\r\n            </div>\r\n          ) : paymentData.length > 0 ? (\r\n            paymentData.map((payment, idx) => {\r\n              // Parse metadata if available\r\n              let metadata: any = {};\r\n              try {\r\n                if (payment.metadata && typeof payment.metadata === 'string') {\r\n                  metadata = JSON.parse(payment.metadata);\r\n                }\r\n              } catch (e) {\r\n                // Ignore parsing errors\r\n              }\r\n              \r\n              return (\r\n              <div key={idx} style={{\r\n                marginBottom: idx < paymentData.length - 1 ? '16px' : '0',\r\n                paddingBottom: idx < paymentData.length - 1 ? '16px' : '0',\r\n                borderBottom: idx < paymentData.length - 1 ? (isDarkMode ? '1px solid rgba(255,255,255,0.08)' : '1px solid #e2e8f0') : 'none'\r\n              }}>\r\n                <div style={{ \r\n                  display: 'grid', \r\n                  gridTemplateColumns: '1fr 1fr', \r\n                  gap: '12px 20px',\r\n                  fontSize: '14px'\r\n                }}>\r\n                  {/* Amount */}\r\n                  {payment.amount && (\r\n                    <div style={{ display: 'flex', flexDirection: 'column', gap: '2px' }}>\r\n                      <span style={{ \r\n                        fontSize: '10px', \r\n                        fontWeight: 600, \r\n                        color: isDarkMode ? '#888' : '#64748b',\r\n                        textTransform: 'uppercase',\r\n                        letterSpacing: '0.5px'\r\n                      }}>\r\n                        Amount\r\n                      </span>\r\n                      <span style={{ \r\n                        fontWeight: 600, \r\n                        fontSize: '13px', \r\n                        color: isDarkMode ? '#e2e8f0' : '#0f172a',\r\n                        fontFamily: 'monospace'\r\n                      }}>\r\n                        {payment.currency || 'GBP'} {payment.amount}\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* Payment Status */}\r\n                  {payment.payment_status && (\r\n                    <div style={{ display: 'flex', flexDirection: 'column', gap: '2px' }}>\r\n                      <span style={{ \r\n                        fontSize: '10px', \r\n                        fontWeight: 600, \r\n                        color: isDarkMode ? '#888' : '#64748b',\r\n                        textTransform: 'uppercase',\r\n                        letterSpacing: '0.5px'\r\n                      }}>\r\n                        Payment Status\r\n                      </span>\r\n                      <span style={{ \r\n                        fontWeight: 600, \r\n                        fontSize: '12px', \r\n                        color: isDarkMode ? '#e2e8f0' : '#1e293b',\r\n                        padding: '2px 6px',\r\n                        background: isDarkMode ? 'rgba(255,255,255,0.05)' : '#f1f5f9',\r\n                        borderRadius: '3px',\r\n                        width: 'fit-content',\r\n                        border: isDarkMode ? '1px solid rgba(255,255,255,0.08)' : '1px solid #e2e8f0'\r\n                      }}>\r\n                        {payment.payment_status}\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* Internal Status */}\r\n                  {payment.internal_status && (\r\n                    <div style={{ display: 'flex', flexDirection: 'column', gap: '2px' }}>\r\n                      <span style={{ \r\n                        fontSize: '10px', \r\n                        fontWeight: 600, \r\n                        color: isDarkMode ? '#888' : '#64748b',\r\n                        textTransform: 'uppercase',\r\n                        letterSpacing: '0.5px'\r\n                      }}>\r\n                        Internal Status\r\n                      </span>\r\n                      <span style={{ \r\n                        fontWeight: 600, \r\n                        fontSize: '13px', \r\n                        color: isDarkMode ? '#e2e8f0' : '#0f172a'\r\n                      }}>\r\n                        {payment.internal_status}\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* Created Date */}\r\n                  {payment.created_at && (\r\n                    <div style={{ display: 'flex', flexDirection: 'column', gap: '2px' }}>\r\n                      <span style={{ \r\n                        fontSize: '10px', \r\n                        fontWeight: 600, \r\n                        color: isDarkMode ? '#888' : '#64748b',\r\n                        textTransform: 'uppercase',\r\n                        letterSpacing: '0.5px'\r\n                      }}>\r\n                        Created Date\r\n                      </span>\r\n                      <span style={{ \r\n                        fontWeight: 500, \r\n                        fontSize: '13px', \r\n                        color: isDarkMode ? '#e2e8f0' : '#1e293b'\r\n                      }}>\r\n                        {new Date(payment.created_at).toLocaleDateString('en-GB')}\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* Updated Date */}\r\n                  {payment.updated_at && (\r\n                    <div style={{ display: 'flex', flexDirection: 'column', gap: '2px' }}>\r\n                      <span style={{ \r\n                        fontSize: '10px', \r\n                        fontWeight: 600, \r\n                        color: isDarkMode ? '#888' : '#64748b',\r\n                        textTransform: 'uppercase',\r\n                        letterSpacing: '0.5px'\r\n                      }}>\r\n                        Updated Date\r\n                      </span>\r\n                      <span style={{ \r\n                        fontWeight: 500, \r\n                        fontSize: '13px', \r\n                        color: isDarkMode ? '#e2e8f0' : '#1e293b'\r\n                      }}>\r\n                        {new Date(payment.updated_at).toLocaleDateString('en-GB')}\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* Payment Intent ID */}\r\n                  {payment.payment_intent_id && (\r\n                    <div style={{ display: 'flex', flexDirection: 'column', gap: '2px' }}>\r\n                      <span style={{ \r\n                        fontSize: '10px', \r\n                        fontWeight: 600, \r\n                        color: isDarkMode ? '#888' : '#64748b',\r\n                        textTransform: 'uppercase',\r\n                        letterSpacing: '0.5px'\r\n                      }}>\r\n                        Payment Intent ID\r\n                      </span>\r\n                      <span style={{ \r\n                        fontWeight: 500, \r\n                        fontSize: '12px', \r\n                        color: isDarkMode ? '#e2e8f0' : '#1e293b',\r\n                        fontFamily: 'monospace'\r\n                      }}>\r\n                        {payment.payment_intent_id.substring(0, 20)}...\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* Service Description from metadata */}\r\n                  {(payment.service_description || metadata.serviceDescription) && (\r\n                    <div style={{ display: 'flex', flexDirection: 'column', gap: '2px' }}>\r\n                      <span style={{ \r\n                        fontSize: '10px', \r\n                        fontWeight: 600, \r\n                        color: isDarkMode ? '#888' : '#64748b',\r\n                        textTransform: 'uppercase',\r\n                        letterSpacing: '0.5px'\r\n                      }}>\r\n                        Service Description\r\n                      </span>\r\n                      <span style={{ \r\n                        fontWeight: 500, \r\n                        fontSize: '13px', \r\n                        color: isDarkMode ? '#e2e8f0' : '#1e293b'\r\n                      }}>\r\n                        {payment.service_description || metadata.serviceDescription}\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* Area of Work from metadata */}\r\n                  {(payment.area_of_work || metadata.areaOfWork) && (\r\n                    <div style={{ display: 'flex', flexDirection: 'column', gap: '2px' }}>\r\n                      <span style={{ \r\n                        fontSize: '10px', \r\n                        fontWeight: 600, \r\n                        color: isDarkMode ? '#888' : '#64748b',\r\n                        textTransform: 'uppercase',\r\n                        letterSpacing: '0.5px'\r\n                      }}>\r\n                        Area of Work\r\n                      </span>\r\n                      <span style={{ \r\n                        fontWeight: 500, \r\n                        fontSize: '13px', \r\n                        color: isDarkMode ? '#e2e8f0' : '#1e293b'\r\n                      }}>\r\n                        {payment.area_of_work || metadata.areaOfWork}\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* Payment Source from metadata */}\r\n                  {metadata.source && (\r\n                    <div style={{ display: 'flex', flexDirection: 'column', gap: '2px' }}>\r\n                      <span style={{ \r\n                        fontSize: '10px', \r\n                        fontWeight: 600, \r\n                        color: isDarkMode ? '#888' : '#64748b',\r\n                        textTransform: 'uppercase',\r\n                        letterSpacing: '0.5px'\r\n                      }}>\r\n                        Source\r\n                      </span>\r\n                      <span style={{ \r\n                        fontWeight: 500, \r\n                        fontSize: '13px', \r\n                        color: isDarkMode ? '#e2e8f0' : '#1e293b'\r\n                      }}>\r\n                        {metadata.source}\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* Product from metadata */}\r\n                  {metadata.product && (\r\n                    <div style={{ display: 'flex', flexDirection: 'column', gap: '2px' }}>\r\n                      <span style={{ \r\n                        fontSize: '10px', \r\n                        fontWeight: 600, \r\n                        color: isDarkMode ? '#888' : '#64748b',\r\n                        textTransform: 'uppercase',\r\n                        letterSpacing: '0.5px'\r\n                      }}>\r\n                        Product\r\n                      </span>\r\n                      <span style={{ \r\n                        fontWeight: 500, \r\n                        fontSize: '13px', \r\n                        color: isDarkMode ? '#e2e8f0' : '#1e293b'\r\n                      }}>\r\n                        {metadata.product}\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* Receipt URL */}\r\n                  {payment.receipt_url && (\r\n                    <div style={{ \r\n                      gridColumn: '1 / -1',\r\n                      display: 'flex', \r\n                      flexDirection: 'column', \r\n                      gap: '2px',\r\n                      marginTop: '8px',\r\n                      paddingTop: '8px',\r\n                      borderTop: isDarkMode ? '1px solid rgba(255,255,255,0.08)' : '1px solid #e2e8f0'\r\n                    }}>\r\n                      <span style={{ \r\n                        fontSize: '10px', \r\n                        fontWeight: 600, \r\n                        color: isDarkMode ? '#888' : '#64748b',\r\n                        textTransform: 'uppercase',\r\n                        letterSpacing: '0.5px'\r\n                      }}>\r\n                        Receipt URL\r\n                      </span>\r\n                      <a \r\n                        href={payment.receipt_url}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        style={{ \r\n                          fontWeight: 400, \r\n                          fontSize: '13px', \r\n                          color: isDarkMode ? '#60a5fa' : '#2563eb',\r\n                          lineHeight: '1.4',\r\n                          textDecoration: 'underline'\r\n                        }}\r\n                      >\r\n                        View Receipt\r\n                      </a>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              );\r\n            })\r\n          ) : (\r\n            <div style={{ \r\n              color: '#999',\r\n              fontStyle: 'italic',\r\n              textAlign: 'center',\r\n              padding: '16px',\r\n              fontSize: '12px'\r\n            }}>\r\n              No payment details found\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Document Details Section - shown when documents pill is clicked */}\r\n      {showDocumentDetails && documentsToUse && documentsToUse.length > 0 && (\r\n        <div style={{\r\n          marginTop: '12px',\r\n          padding: '16px',\r\n          background: isDarkMode ? 'linear-gradient(135deg, rgba(30,41,59,0.7) 0%, rgba(15,23,42,0.7) 100%)' : 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n          borderRadius: '10px',\r\n          border: `1px solid ${isDarkMode ? 'rgba(255,255,255,0.12)' : '#e2e8f0'}`,\r\n          boxShadow: isDarkMode ? '0 4px 12px rgba(0,0,0,0.4)' : '0 4px 12px rgba(0,0,0,0.08)',\r\n          animation: 'fadeIn 0.25s ease-out'\r\n        }}>\r\n          <div style={{ display: 'flex', alignItems: 'flex-start', gap: 20, flexWrap: 'wrap' }}>\r\n            <div style={{ flex: '1 1 240px', minWidth: 240 }}>\r\n              <div style={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                gap: '8px',\r\n                marginBottom: '12px',\r\n                paddingBottom: '8px',\r\n                borderBottom: `1px solid ${isDarkMode ? 'rgba(255,255,255,0.15)' : '#e2e8f0'}`\r\n              }}>\r\n                <FaFileAlt style={{ color: colours.green, fontSize: 16 }} />\r\n                <span style={{ fontSize: 14, fontWeight: 700, color: isDarkMode ? '#fff' : colours.darkBlue }}>\r\n                  Documents ({documentsToUse.length})\r\n                </span>\r\n              </div>\r\n              <div style={{ display: 'flex', flexDirection: 'column', gap: 6 }}>\r\n                {documentsToUse.map((doc, idx) => {\r\n                  const isActive = idx === selectedDocumentIndex;\r\n                  return (\r\n                    <button\r\n                      key={idx}\r\n                      onClick={() => setSelectedDocumentIndex(idx)}\r\n                      style={{\r\n                        textAlign: 'left',\r\n                        border: '1px solid ' + (isActive ? colours.blue : (isDarkMode ? 'rgba(255,255,255,0.15)' : '#e2e8f0')),\r\n                        background: isActive ? (isDarkMode ? 'rgba(96,165,250,0.15)' : '#eff6ff') : (isDarkMode ? 'rgba(255,255,255,0.04)' : '#f1f5f9'),\r\n                        padding: '8px 10px',\r\n                        borderRadius: 6,\r\n                        cursor: 'pointer',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        gap: 8,\r\n                        fontSize: 12,\r\n                        color: isDarkMode ? '#f1f5f9' : '#0f172a',\r\n                        fontWeight: 500,\r\n                        transition: 'background .15s, border-color .15s'\r\n                      }}\r\n                    >\r\n                      <FaFileAlt style={{ color: isActive ? colours.blue : colours.greyText, fontSize: 14 }} />\r\n                      <span style={{ flex: 1, whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis' }}>\r\n                        {doc.FileName || doc.filename || doc.name || `Document ${idx + 1}`}\r\n                      </span>\r\n                      {(doc.UploadedAt || doc.uploaded_at) && (\r\n                        <span style={{ fontSize: 10, color: isDarkMode ? '#cbd5e1' : '#64748b' }}>\r\n                          {new Date(doc.UploadedAt || doc.uploaded_at).toLocaleDateString('en-GB')}\r\n                        </span>\r\n                      )}\r\n                    </button>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n            <div style={{ flex: '2 1 420px', minWidth: 300, position: 'relative' }}>\r\n              {(() => {\r\n                const activeDoc: any = documentsToUse[selectedDocumentIndex];\r\n                if (!activeDoc) return null;\r\n                const name = activeDoc.FileName || activeDoc.filename || activeDoc.name || `Document ${selectedDocumentIndex + 1}`;\r\n                const url: string | undefined = activeDoc.previewUrl || activeDoc.BlobUrl || activeDoc.url || activeDoc.download_url || activeDoc.preview_url;\r\n                const size: number | undefined = activeDoc.FileSizeBytes || activeDoc.size || activeDoc.file_size || activeDoc.length;\r\n                const uploadedBy = activeDoc.UploadedBy || activeDoc.uploaded_by || activeDoc.user || activeDoc.User;\r\n                const uploadedAtRaw = activeDoc.UploadedAt || activeDoc.uploaded_at || activeDoc.created_at || activeDoc.CreatedAt;\r\n                const ext = (name.split('.').pop() || '').toLowerCase();\r\n                const officeExts = ['doc','docx','ppt','pptx','xls','xlsx'];\r\n                const imageExts = ['png','jpg','jpeg','gif','webp'];\r\n                const audioExts = ['mp3','wav','ogg'];\r\n                const videoExts = ['mp4','webm','ogg','mov'];\r\n                const textExts = ['txt','log','csv'];\r\n                const pdfExts = ['pdf'];\r\n                const canPreviewDirect = !!url && (imageExts.includes(ext) || audioExts.includes(ext) || videoExts.includes(ext) || textExts.includes(ext) || pdfExts.includes(ext));\r\n                const canPreviewOffice = !!url && officeExts.includes(ext);\r\n                const officeViewerUrl = canPreviewOffice ? `https://view.officeapps.live.com/op/embed.aspx?src=${encodeURIComponent(url!)}` : undefined;\r\n                return (\r\n                  <div style={{\r\n                    border: '1px solid ' + (isDarkMode ? 'rgba(255,255,255,0.15)' : '#e2e8f0'),\r\n                    borderRadius: 8,\r\n                    padding: 14,\r\n                    background: isDarkMode ? 'rgba(255,255,255,0.04)' : '#fff',\r\n                    minHeight: 260,\r\n                    display: 'flex',\r\n                    flexDirection: 'column'\r\n                  }}>\r\n                    <div style={{ display: 'flex', alignItems: 'center', gap: 10, marginBottom: 10 }}>\r\n                      <FaFileAlt style={{ color: getFileColour(ext, colours), fontSize: 18 }} />\r\n                      <div style={{ flex: 1 }}>\r\n                        <div style={{ fontSize: 13, fontWeight: 600, color: isDarkMode ? '#fff' : colours.darkBlue }}>{name}</div>\r\n                        <div style={{ fontSize: 11, color: isDarkMode ? '#cbd5e1' : '#64748b', marginTop: 2, display: 'flex', flexWrap: 'wrap', gap: 12 }}>\r\n                          {uploadedAtRaw && <span>Uploaded {new Date(uploadedAtRaw).toLocaleString('en-GB')}</span>}\r\n                          {uploadedBy && <span>By {uploadedBy}</span>}\r\n                          <span>Type {ext || 'n/a'}</span>\r\n                          <span>Size {formatBytes(size)}</span>\r\n                        </div>\r\n                      </div>\r\n                      {url && (\r\n                        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\" style={{\r\n                          fontSize: 11,\r\n                          padding: '4px 8px',\r\n                          borderRadius: 4,\r\n                          background: colours.blue,\r\n                          color: '#fff',\r\n                          textDecoration: 'none'\r\n                        }}>Open</a>\r\n                      )}\r\n                    </div>\r\n                    <div style={{ flex: 1, position: 'relative', overflow: 'hidden', borderRadius: 6 }}>\r\n                      {canPreviewDirect && url && (\r\n                        imageExts.includes(ext) ? (\r\n                          <img src={url} alt={name} style={{ maxWidth: '100%', maxHeight: 220, objectFit: 'contain', display: 'block', margin: '0 auto' }} />\r\n                        ) : pdfExts.includes(ext) ? (\r\n                          <iframe title={name} src={url} style={{ width: '100%', height: '100%', border: 'none', minHeight: 200 }} />\r\n                        ) : textExts.includes(ext) ? (\r\n                          <iframe title={name} src={url} style={{ width: '100%', height: '100%', border: 'none', minHeight: 200, background:'#fff' }} />\r\n                        ) : audioExts.includes(ext) ? (\r\n                          <audio controls style={{ width: '100%' }}>\r\n                            <source src={url} />\r\n                            Your browser does not support the audio element.\r\n                          </audio>\r\n                        ) : videoExts.includes(ext) ? (\r\n                          <video controls style={{ width: '100%', maxHeight: 240 }}>\r\n                            <source src={url} />\r\n                            Your browser does not support the video tag.\r\n                          </video>\r\n                        ) : null\r\n                      )}\r\n                      {canPreviewOffice && officeViewerUrl && (\r\n                        <iframe title={name} src={officeViewerUrl} style={{ width: '100%', height: '100%', border: 'none', minHeight: 220, background:'#fff' }} />\r\n                      )}\r\n                      {!canPreviewDirect && !canPreviewOffice && (\r\n                        <div style={{\r\n                          fontSize: 12,\r\n                          color: isDarkMode ? '#cbd5e1' : '#475569',\r\n                          display: 'flex',\r\n                          alignItems: 'center',\r\n                          justifyContent: 'center',\r\n                          height: 180,\r\n                          textAlign: 'center',\r\n                          padding: '0 20px'\r\n                        }}>\r\n                          {url ? 'Inline preview not supported for this file. Use Open to view/download.' : 'No file URL available. Metadata shown above.'}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {showRiskDetails && !hasRiskAssessment && (\r\n        <div style={{\r\n          marginTop: '12px',\r\n          marginLeft: onToggle ? 26 : 0,\r\n          padding: '16px',\r\n          background: isDarkMode ? 'rgba(255,255,255,0.05)' : 'rgba(54,144,206,0.05)',\r\n          borderRadius: '8px',\r\n          border: `1px solid ${isDarkMode ? 'rgba(255,255,255,0.1)' : 'rgba(54,144,206,0.15)'}`,\r\n          animation: 'fadeIn 0.3s ease-out'\r\n        }}>\r\n          <div style={{ display: 'flex', alignItems: 'center', gap: 8, marginBottom: 8 }}>\r\n            <FaShieldAlt style={{ color: colours.blue, fontSize: 16 }} />\r\n            <span style={{ fontSize: 14, fontWeight: 700, color: isDarkMode ? '#fff' : colours.darkBlue }}>\r\n              Risk Assessment\r\n            </span>\r\n          </div>\r\n          <div style={{ fontSize: 12, color: isDarkMode ? 'rgba(255,255,255,0.8)' : 'rgba(0,0,0,0.7)' }}>\r\n            No assessment found. {`Click the Risk pill to ${onRiskClick ? 'start the assessment' : 'add an assessment'}.`}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Matter Details Section removed - functionality moved to WorkbenchPanel */}\r\n      {/* Status Override Dropdown removed - now handled in WorkbenchPanel */}\r\n\r\n      {/* Toast for API feedback */}\r\n      <OperationStatusToast\r\n        visible={toast.show}\r\n        type={toast.type}\r\n        message={toast.message}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n/**\r\n * InstructionCard\r\n * Presents instruction summary with compact, legible hierarchy and a progress rail.\r\n */\r\nexport default InstructionCard;\r\n","import React, { useState } from 'react';\r\nimport { colours } from '../../app/styles/colours';\r\nimport { FaCheckCircle, FaExclamationTriangle, FaSpinner, FaShieldAlt, FaIdCard, FaFolder, FaFileAlt, FaCreditCard } from 'react-icons/fa';\r\n\r\ninterface OverridePillsProps {\r\n  instruction: any;\r\n  selectedOverviewItem?: any;\r\n  isDarkMode: boolean;\r\n  onStatusUpdate?: () => void;\r\n}\r\n\r\ninterface WorkflowStep {\r\n  key: string;\r\n  label: string;\r\n  icon: React.ReactNode;\r\n  status: 'complete' | 'in-progress' | 'failed' | 'pending';\r\n  canOverride: boolean;\r\n}\r\n\r\nconst panelBackground = (dark: boolean): string => (\r\n  dark\r\n    ? 'linear-gradient(135deg, rgba(17, 24, 39, 0.94) 0%, rgba(15, 23, 42, 0.98) 100%)'\r\n    : 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)'\r\n);\r\n\r\nconst cardBackground = (dark: boolean): string => (\r\n  dark\r\n    ? 'linear-gradient(135deg, rgba(30, 41, 59, 0.92) 0%, rgba(15, 23, 42, 0.96) 100%)'\r\n    : '#FFFFFF'\r\n);\r\n\r\nconst borderColour = (dark: boolean): string => (\r\n  dark ? 'rgba(148, 163, 184, 0.32)' : '#e2e8f0'\r\n);\r\n\r\nconst mutedText = (dark: boolean): string => (\r\n  dark ? 'rgba(226, 232, 240, 0.72)' : colours.greyText\r\n);\r\n\r\nconst accentBlue = (dark: boolean): string => (\r\n  dark ? 'rgba(96, 165, 250, 0.75)' : '#2563EB'\r\n);\r\n\r\nconst OverridePills: React.FC<OverridePillsProps> = ({\r\n  instruction,\r\n  selectedOverviewItem,\r\n  isDarkMode,\r\n  onStatusUpdate\r\n}) => {\r\n  const [isUpdating, setIsUpdating] = useState<string | null>(null);\r\n  const [overrideReason, setOverrideReason] = useState('');\r\n  const [showOverrideInput, setShowOverrideInput] = useState<string | null>(null);\r\n\r\n  // Map current instruction data to workflow steps (similar to InstructionCard logic)\r\n  const getWorkflowSteps = (): WorkflowStep[] => {\r\n    // ID Status\r\n    const poidResult = selectedOverviewItem?.eid?.EIDOverallResult?.toLowerCase() ?? \"\";\r\n    const eidStatus = selectedOverviewItem?.eid?.EIDStatus?.toLowerCase() ?? \"\";\r\n    const poidPassed = poidResult === 'passed' || poidResult === 'approved' || poidResult === 'verified';\r\n    const proofOfIdComplete = Boolean(instruction?.PassportNumber || instruction?.DriversLicenseNumber);\r\n\r\n    let idStatus: 'complete' | 'in-progress' | 'failed' | 'pending' = 'pending';\r\n    if (!selectedOverviewItem?.eid || eidStatus === 'pending') {\r\n      idStatus = proofOfIdComplete ? 'in-progress' : 'pending';\r\n    } else if (poidPassed) {\r\n      idStatus = 'complete';\r\n    } else {\r\n      idStatus = 'failed';\r\n    }\r\n\r\n    // Risk Status\r\n    const risk = selectedOverviewItem?.risk || instruction?.RiskAssessment;\r\n    const riskResultRaw = risk?.RiskAssessmentResult?.toString().toLowerCase() ?? '';\r\n    let riskStatus: 'complete' | 'in-progress' | 'failed' | 'pending' = 'pending';\r\n    if (riskResultRaw) {\r\n      riskStatus = ['low', 'low risk', 'pass', 'approved'].includes(riskResultRaw) ? 'complete' : 'failed';\r\n    } else {\r\n      const hasRiskAssessment = Boolean(risk && (risk.RiskAssessmentResult || risk.RiskScore || risk.ComplianceDate || risk.RiskAssessor));\r\n      riskStatus = hasRiskAssessment ? 'in-progress' : 'pending';\r\n    }\r\n\r\n    // Payment Status\r\n    const payments = selectedOverviewItem?.instruction?.payments || instruction?.payments || [];\r\n    const hasPayments = payments && payments.length > 0;\r\n    const paymentStatus = hasPayments ? 'complete' : 'pending';\r\n\r\n    return [\r\n      {\r\n        key: 'verify-id',\r\n        label: 'Verify ID',\r\n        icon: <FaIdCard />,\r\n        status: idStatus,\r\n        canOverride: true\r\n      },\r\n      {\r\n        key: 'assess-risk',\r\n        label: 'Risk Assessment',\r\n        icon: <FaShieldAlt />,\r\n        status: riskStatus,\r\n        canOverride: true\r\n      },\r\n      {\r\n        key: 'payment',\r\n        label: 'Payment',\r\n        icon: <FaCreditCard />,\r\n        status: paymentStatus,\r\n        canOverride: true\r\n      }\r\n    ];\r\n  };\r\n\r\n  const getPillColor = (status: string, isOverridden: boolean = false) => {\r\n    if (isOverridden) return colours.orange; // Signpost override with orange\r\n    switch (status) {\r\n      case 'complete': return colours.green;\r\n      case 'failed': return colours.red;\r\n      case 'in-progress': return accentBlue(isDarkMode);\r\n      default: return mutedText(isDarkMode);\r\n    }\r\n  };\r\n\r\n  const handleOverrideToComplete = async (stepKey: string, stepLabel: string) => {\r\n    if (!instruction?.InstructionRef) return;\r\n    \r\n    setIsUpdating(stepKey);\r\n    \r\n    try {\r\n      // Map step to appropriate status update\r\n      let updatePayload: any = {\r\n        instructionRef: instruction.InstructionRef,\r\n        overrideReason: overrideReason || `Manual override: ${stepLabel} marked complete via Workbench`,\r\n        userInitials: 'WB' // Workbench initiated\r\n      };\r\n\r\n      switch (stepKey) {\r\n        case 'verify-id':\r\n          // Mark as ID verified via override\r\n          updatePayload = {\r\n            ...updatePayload,\r\n            stage: 'proof-of-id-complete',\r\n            internalStatus: 'poid'\r\n          };\r\n          break;\r\n        case 'assess-risk':\r\n          // Keep current stage/status but mark risk as overridden in reason\r\n          updatePayload.overrideReason = `Risk Assessment ${overrideReason || 'marked complete'} - Manual override via Workbench`;\r\n          break;\r\n        case 'open-matter':\r\n          // Mark matter opening progressed\r\n          updatePayload.overrideReason = `Matter Opening ${overrideReason || 'marked complete'} - Manual override via Workbench`;\r\n          break;\r\n        case 'draft-ccl':\r\n          // Mark CCL as complete\r\n          updatePayload.overrideReason = `CCL Submission ${overrideReason || 'marked complete'} - Manual override via Workbench`;\r\n          break;\r\n      }\r\n\r\n      const response = await fetch('/api/updateInstructionStatus', {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(updatePayload)\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (result.success) {\r\n        // Update instruction object locally\r\n        if (updatePayload.stage) instruction.Stage = updatePayload.stage;\r\n        if (updatePayload.internalStatus) instruction.InternalStatus = updatePayload.internalStatus;\r\n        \r\n        // Add override tracking (for UI signposting)\r\n        const overrideField = `${stepKey}Overridden`;\r\n        (instruction as any)[overrideField] = true;\r\n        \r\n        if (onStatusUpdate) {\r\n          onStatusUpdate();\r\n        }\r\n      } else {\r\n        throw new Error(result.error || 'Failed to update status');\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('Failed to override step:', error);\r\n    } finally {\r\n      setIsUpdating(null);\r\n      setShowOverrideInput(null);\r\n      setOverrideReason('');\r\n    }\r\n  };\r\n\r\n  const workflowSteps = getWorkflowSteps();\r\n\r\n  // Check if any step is overridden\r\n  const isOverridden = (stepKey: string): boolean => {\r\n    switch (stepKey) {\r\n      case 'verify-id': return Boolean(instruction?.IDOverridden);\r\n      case 'assess-risk': return Boolean(instruction?.RiskOverridden);\r\n      case 'open-matter': return Boolean(instruction?.MatterOverridden);\r\n      case 'draft-ccl': return Boolean(instruction?.CCLOverridden);\r\n      default: return false;\r\n    }\r\n  };\r\n\r\n  if (!instruction) return null;\r\n\r\n  return (\r\n    <div style={{\r\n      background: panelBackground(isDarkMode),\r\n      borderRadius: '16px',\r\n      padding: '18px',\r\n      border: `1px solid ${borderColour(isDarkMode)}`,\r\n      boxShadow: isDarkMode ? '0 10px 26px rgba(2, 6, 23, 0.5)' : '0 12px 28px rgba(15, 23, 42, 0.14)'\r\n    }}>\r\n      <div style={{\r\n        display: 'grid',\r\n        gridTemplateColumns: 'repeat(auto-fit, minmax(180px, 1fr))',\r\n        gap: '12px'\r\n      }}>\r\n        {workflowSteps.map((step) => {\r\n          const overridden = isOverridden(step.key);\r\n          const pillColor = getPillColor(step.status, overridden);\r\n          const isCurrentlyUpdating = isUpdating === step.key;\r\n          const showInput = showOverrideInput === step.key;\r\n\r\n          return (\r\n            <div key={step.key} style={{\r\n              background: cardBackground(isDarkMode),\r\n              borderRadius: '12px',\r\n              padding: '14px',\r\n              border: `1px solid ${overridden ? colours.orange : borderColour(isDarkMode)}`,\r\n              position: 'relative',\r\n              boxShadow: isDarkMode ? '0 6px 18px rgba(2, 6, 23, 0.45)' : '0 10px 22px rgba(15, 23, 42, 0.12)'\r\n            }}>\r\n              {/* Override Badge */}\r\n              {overridden && (\r\n                <div style={{\r\n                  position: 'absolute',\r\n                  top: '-6px',\r\n                  right: '-6px',\r\n                  background: colours.orange,\r\n                  color: 'white',\r\n                  fontSize: '10px',\r\n                  fontWeight: 600,\r\n                  padding: '2px 6px',\r\n                  borderRadius: '12px',\r\n                  textTransform: 'uppercase',\r\n                  letterSpacing: '0.5px'\r\n                }}>\r\n                  Override\r\n                </div>\r\n              )}\r\n\r\n              <div style={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                gap: '8px',\r\n                marginBottom: '8px'\r\n              }}>\r\n                <div style={{\r\n                  width: '24px',\r\n                  height: '24px',\r\n                  borderRadius: '50%',\r\n                  background: pillColor,\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  color: 'white',\r\n                  fontSize: '12px'\r\n                }}>\r\n                  {step.status === 'complete' || overridden ? <FaCheckCircle /> : step.icon}\r\n                </div>\r\n                <span style={{\r\n                  fontSize: '12px',\r\n                  fontWeight: 600,\r\n                  color: isDarkMode ? colours.dark.text : colours.light.text\r\n                }}>\r\n                  {step.label}\r\n                </span>\r\n              </div>\r\n\r\n              <div style={{\r\n                fontSize: '10px',\r\n                color: mutedText(isDarkMode),\r\n                marginBottom: '8px',\r\n                textTransform: 'uppercase',\r\n                letterSpacing: '0.5px'\r\n              }}>\r\n                Status: {overridden ? 'Overridden' : step.status}\r\n              </div>\r\n\r\n              {showInput ? (\r\n                <div style={{ display: 'flex', flexDirection: 'column', gap: '6px' }}>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Override reason (optional)\"\r\n                    value={overrideReason}\r\n                    onChange={(e) => setOverrideReason(e.target.value)}\r\n                    style={{\r\n                      padding: '6px 8px',\r\n                      fontSize: '11px',\r\n                      border: `1px solid ${isDarkMode ? colours.dark.border : '#d1d5db'}`,\r\n                      borderRadius: '4px',\r\n                      background: isDarkMode ? colours.dark.background : 'white',\r\n                      color: isDarkMode ? colours.dark.text : colours.light.text\r\n                    }}\r\n                  />\r\n                  <div style={{ display: 'flex', gap: '4px' }}>\r\n                    <button\r\n                      onClick={() => handleOverrideToComplete(step.key, step.label)}\r\n                      disabled={isCurrentlyUpdating}\r\n                      style={{\r\n                          padding: '6px 10px',\r\n                          fontSize: '10px',\r\n                          fontWeight: 600,\r\n                          background: accentBlue(isDarkMode),\r\n                          color: '#FFFFFF',\r\n                          border: 'none',\r\n                          borderRadius: '6px',\r\n                          cursor: isCurrentlyUpdating ? 'not-allowed' : 'pointer',\r\n                          textTransform: 'uppercase',\r\n                          letterSpacing: '0.5px',\r\n                          boxShadow: isDarkMode ? '0 4px 12px rgba(59, 130, 246, 0.35)' : '0 6px 16px rgba(37, 99, 235, 0.25)',\r\n                          transition: 'transform 0.2s ease'\r\n                      }}\r\n                    >\r\n                      {isCurrentlyUpdating ? <FaSpinner className=\"spin\" /> : 'Complete'}\r\n                    </button>\r\n                    <button\r\n                      onClick={() => {\r\n                        setShowOverrideInput(null);\r\n                        setOverrideReason('');\r\n                      }}\r\n                      style={{\r\n                        padding: '6px 10px',\r\n                        fontSize: '10px',\r\n                        background: 'transparent',\r\n                        color: mutedText(isDarkMode),\r\n                        border: `1px solid ${borderColour(isDarkMode)}`,\r\n                        borderRadius: '6px',\r\n                        cursor: 'pointer'\r\n                      }}\r\n                    >\r\n                      Cancel\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                step.canOverride && step.status !== 'complete' && !overridden && (\r\n                  <button\r\n                    onClick={() => setShowOverrideInput(step.key)}\r\n                    disabled={isCurrentlyUpdating}\r\n                    style={{\r\n                      padding: '6px 10px',\r\n                      fontSize: '10px',\r\n                      fontWeight: 600,\r\n                      background: 'transparent',\r\n                      color: accentBlue(isDarkMode),\r\n                      border: `1px solid ${accentBlue(isDarkMode)}`,\r\n                      borderRadius: '6px',\r\n                      cursor: 'pointer',\r\n                      textTransform: 'uppercase',\r\n                      letterSpacing: '0.5px',\r\n                      transition: 'all 0.2s ease',\r\n                      width: '100%'\r\n                    }}\r\n                  >\r\n                    Mark Complete\r\n                  </button>\r\n                )\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <style>\r\n        {`\r\n          @keyframes spin {\r\n            from { transform: rotate(0deg); }\r\n            to { transform: rotate(360deg); }\r\n          }\r\n          .spin { animation: spin 1s linear infinite; }\r\n        `}\r\n      </style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OverridePills;","import React from 'react';\r\nimport { format } from 'date-fns';\r\nimport { mergeStyles } from '@fluentui/react';\r\nimport { useTheme } from '../../app/functionality/ThemeContext';\r\nimport { \r\n  FaShieldAlt, \r\n  FaUser, \r\n  FaUsers, \r\n  FaFileAlt, \r\n  FaDownload, \r\n  FaCalendarAlt, \r\n  FaClipboardList,\r\n  FaFilePdf,\r\n  FaFileWord,\r\n  FaFileExcel,\r\n  FaFilePowerpoint,\r\n  FaFileArchive,\r\n  FaFileImage,\r\n  FaFileAudio,\r\n  FaFileVideo,\r\n  FaFileUpload,\r\n  FaLink,\r\n  FaUserShield,\r\n  FaMapMarkerAlt,\r\n  FaBirthdayCake,\r\n  FaPhone,\r\n  FaFlag,\r\n  FaIdCard,\r\n  FaClock,\r\n  FaBuilding\r\n} from 'react-icons/fa';\r\nimport { colours } from '../../app/styles/colours';\r\nimport { ClientInfo } from './JointClientCard';\r\n\r\n// File type icon mapping\r\nconst iconMap: Record<string, JSX.Element> = {\r\n  pdf: <FaFilePdf style={{ fontSize: '20px' }} />,\r\n  doc: <FaFileWord style={{ fontSize: '20px' }} />,\r\n  docx: <FaFileWord style={{ fontSize: '20px' }} />,\r\n  xls: <FaFileExcel style={{ fontSize: '20px' }} />,\r\n  xlsx: <FaFileExcel style={{ fontSize: '20px' }} />,\r\n  ppt: <FaFilePowerpoint style={{ fontSize: '20px' }} />,\r\n  pptx: <FaFilePowerpoint style={{ fontSize: '20px' }} />,\r\n  txt: <FaFileAlt style={{ fontSize: '20px' }} />,\r\n  zip: <FaFileArchive style={{ fontSize: '20px' }} />,\r\n  rar: <FaFileArchive style={{ fontSize: '20px' }} />,\r\n  jpg: <FaFileImage style={{ fontSize: '20px' }} />,\r\n  jpeg: <FaFileImage style={{ fontSize: '20px' }} />,\r\n  png: <FaFileImage style={{ fontSize: '20px' }} />,\r\n  mp3: <FaFileAudio style={{ fontSize: '20px' }} />,\r\n  mp4: <FaFileVideo style={{ fontSize: '20px' }} />,\r\n};\r\n\r\n// Get file type-specific icon\r\nconst getFileIcon = (filename?: string): JSX.Element => {\r\n  if (!filename) return <FaFileUpload style={{ fontSize: '20px' }} />;\r\n  const ext = filename.split('.').pop()?.toLowerCase() ?? '';\r\n  return iconMap[ext] || <FaFileAlt style={{ fontSize: '20px' }} />;\r\n};\r\n\r\n// Smart document handler - preview for PDFs/images, download for others\r\nconst handleDocumentClick = (doc: any) => {\r\n  if (!doc.BlobUrl && !doc.DocumentUrl) return;\r\n  \r\n  const url = doc.BlobUrl || doc.DocumentUrl;\r\n  const filename = doc.FileName || '';\r\n  const ext = filename.split('.').pop()?.toLowerCase() ?? '';\r\n  \r\n  // Previewable file types\r\n  const previewableTypes = ['pdf', 'jpg', 'jpeg', 'png', 'gif', 'svg', 'webp'];\r\n  \r\n  if (previewableTypes.includes(ext)) {\r\n    // Open in new tab for preview\r\n    window.open(url, '_blank', 'noopener,noreferrer');\r\n  } else {\r\n    // Force download for non-previewable files\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = filename;\r\n    link.target = '_blank';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n};\r\n\r\n// Utility functions for additional data display\r\nconst calculateAge = (dateOfBirth: string): number => {\r\n  if (!dateOfBirth) return 0;\r\n  const today = new Date();\r\n  const birthDate = new Date(dateOfBirth);\r\n  let age = today.getFullYear() - birthDate.getFullYear();\r\n  const monthDiff = today.getMonth() - birthDate.getMonth();\r\n  if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {\r\n    age--;\r\n  }\r\n  return age;\r\n};\r\n\r\nconst formatDocumentNumber = (docNumber: string, docType: 'passport' | 'license'): string => {\r\n  if (!docNumber) return '';\r\n  // Mask middle characters for privacy, show first 2 and last 2\r\n  if (docNumber.length <= 4) return docNumber;\r\n  const visible = 2;\r\n  const masked = '*'.repeat(docNumber.length - (visible * 2));\r\n  return docNumber.substring(0, visible) + masked + docNumber.substring(docNumber.length - visible);\r\n};\r\n\r\nconst getCountryFlag = (countryCode: string): string => {\r\n  if (!countryCode || countryCode.length !== 2) return '🌍';\r\n  const codePoints = countryCode.toUpperCase().split('').map(char => \r\n    0x1F1E6 + char.charCodeAt(0) - 'A'.charCodeAt(0)\r\n  );\r\n  return String.fromCodePoint(...codePoints);\r\n};\r\n\r\n// Copy document URL to clipboard\r\nconst handleCopyUrl = async (doc: any) => {\r\n  const url = doc.BlobUrl || doc.DocumentUrl;\r\n  if (!url) return;\r\n  \r\n  try {\r\n    await navigator.clipboard.writeText(url);\r\n    // You could add a toast notification here if needed\r\n    console.log('URL copied to clipboard');\r\n  } catch (err) {\r\n    console.error('Failed to copy URL:', err);\r\n    // Fallback for older browsers\r\n    const textArea = document.createElement('textarea');\r\n    textArea.value = url;\r\n    document.body.appendChild(textArea);\r\n    textArea.select();\r\n    document.execCommand('copy');\r\n    document.body.removeChild(textArea);\r\n  }\r\n};\r\n\r\ninterface GroupedRiskData {\r\n    instructionRef: string;\r\n    riskAssessments: any[];\r\n    idVerifications: any[];\r\n    clients: ClientInfo[];\r\n    serviceDescription?: string;\r\n    stage?: string;\r\n    allData: any[];\r\n}\r\n\r\ninterface RiskComplianceCardProps {\r\n    data: GroupedRiskData;\r\n    animationDelay?: number;\r\n    onOpenInstruction?: () => void;\r\n    selected?: boolean;\r\n    onSelect?: () => void;\r\n    expanded?: boolean;\r\n}\r\n\r\nconst getRiskColor = (riskLevel: string) => {\r\n    const level = riskLevel?.toLowerCase();\r\n    if (level?.includes('low') || level === 'pass' || level === 'passed' || level === 'approved') {\r\n        return '#20b26c';\r\n    }\r\n    if (level?.includes('medium') || level === 'review') {\r\n        return '#FFB900';\r\n    }\r\n    if (level?.includes('high') || level === 'fail' || level === 'failed' || level === 'rejected') {\r\n        return colours.red;\r\n    }\r\n    return '#666';\r\n};\r\n\r\nconst getVerificationStatus = (verifications: any[]) => {\r\n    if (!verifications || verifications.length === 0) return 'pending';\r\n    \r\n    const hasCompleted = verifications.some(v => \r\n        v.EIDOverallResult?.toLowerCase() === 'passed' || \r\n        v.EIDOverallResult?.toLowerCase() === 'pass'\r\n    );\r\n    \r\n    if (hasCompleted) return 'complete';\r\n    \r\n    const hasStarted = verifications.some(v => \r\n        v.EIDStatus && v.EIDStatus.toLowerCase() !== 'pending'\r\n    );\r\n    \r\n    return hasStarted ? 'in-progress' : 'pending';\r\n};\r\n\r\nconst RiskComplianceCard: React.FC<RiskComplianceCardProps> = ({\r\n    data,\r\n    animationDelay = 0,\r\n    onOpenInstruction,\r\n    selected = false,\r\n    onSelect,\r\n    expanded = false,\r\n}) => {\r\n    const { isDarkMode } = useTheme();\r\n    const primaryRisk = data.riskAssessments[0];\r\n    const leadClient = data.clients?.find(c => c.Lead) || data.clients?.[0];\r\n    const jointClients = data.clients?.filter(c => !c.Lead) || [];\r\n    const isMultiClient = data.clients && data.clients.length > 1;\r\n    \r\n    // Get risk status (instruction level - one assessment for all clients)\r\n    const riskResult = primaryRisk?.RiskAssessmentResult;\r\n    const riskStatus = riskResult ? \r\n        ['low', 'low risk', 'pass', 'approved'].includes(riskResult.toLowerCase()) ? 'approved' :\r\n        ['medium', 'medium risk'].includes(riskResult.toLowerCase()) ? 'review' : 'flagged'\r\n        : 'pending';\r\n    \r\n    // Get individual client verification statuses from enhanced client data\r\n    const getClientVerificationStatus = (client: any) => {\r\n        if (!client) return 'pending';\r\n        \r\n        // Use the idVerification data attached to the client object\r\n        if (client.idVerification) {\r\n            const eidResult = client.idVerification.EIDOverallResult?.toLowerCase();\r\n            const eidStatus = client.idVerification.EIDStatus?.toLowerCase();\r\n            \r\n            if (eidResult === 'passed' || eidResult === 'pass') {\r\n                return 'complete';\r\n            } else if (eidResult === 'failed' || eidResult === 'fail') {\r\n                return 'failed';\r\n            } else if (eidResult === 'review') {\r\n                return 'review';\r\n            } else if (eidStatus === 'completed') {\r\n                return 'in-progress'; // Completed but not passed\r\n            } else if (eidStatus === 'pending') {\r\n                return 'pending';\r\n            }\r\n        }\r\n        \r\n        // Fallback to checking if they have submitted\r\n        return client.HasSubmitted ? 'in-progress' : 'pending';\r\n    };\r\n    \r\n    // Get instruction title - prioritize lead client name over \"Joint Clients\"\r\n    const instructionTitle = leadClient ? \r\n        `${leadClient.FirstName || ''} ${leadClient.LastName || ''}`.trim() ||\r\n        leadClient.CompanyName || leadClient.ClientEmail?.split('@')[0] || 'Client'\r\n        : isMultiClient ? 'Joint Clients' : 'Client';\r\n\r\n    const cardClass = mergeStyles('riskComplianceCard', {\r\n        backgroundColor: isDarkMode ? colours.dark.sectionBackground : colours.light.sectionBackground,\r\n        borderRadius: '0px',\r\n        padding: expanded ? '24px' : '16px',\r\n        color: isDarkMode ? colours.dark.text : colours.light.text,\r\n        cursor: 'pointer',\r\n        position: 'relative',\r\n        border: selected \r\n            ? '2px solid #3690CE' \r\n            : expanded \r\n                ? '2px solid #3690CE'\r\n                : `1px solid ${isDarkMode ? 'rgba(255,255,255,0.08)' : '#e1e4e8'}`,\r\n        boxShadow: selected\r\n            ? '0 0 0 1px #3690CE20, 0 4px 16px rgba(54, 144, 206, 0.15)'\r\n            : expanded\r\n                ? '0 0 0 1px #3690CE10, 0 8px 32px rgba(54, 144, 206, 0.12)'\r\n                : (isDarkMode ? '0 4px 8px rgba(0,0,0,0.3)' : '0 2px 8px rgba(0,0,0,0.08)'),\r\n        opacity: 1,\r\n        transition: 'box-shadow 0.3s ease, transform 0.3s ease, border 0.3s ease, opacity 0.3s ease, padding 0.3s ease',\r\n        width: expanded ? '100%' : 'auto',\r\n        maxWidth: expanded ? 'none' : '450px',\r\n        gridColumn: expanded ? '1 / -1' : 'auto', // Span all columns when expanded\r\n        selectors: {\r\n            ':hover': {\r\n                boxShadow: selected\r\n                    ? '0 0 0 1px #3690CE30, 0 6px 20px rgba(54, 144, 206, 0.2)'\r\n                    : '0 4px 16px rgba(0,0,0,0.12)',\r\n                transform: 'translateY(-1px)',\r\n            },\r\n        },\r\n    });\r\n\r\n    const style: React.CSSProperties = {\r\n        '--animation-delay': `${animationDelay}s`,\r\n    } as React.CSSProperties;\r\n\r\n    const handleCardClick = (e: React.MouseEvent) => {\r\n        e.stopPropagation();\r\n        if (onSelect) {\r\n            onSelect();\r\n        } else if (onOpenInstruction) {\r\n            onOpenInstruction();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={cardClass} style={style} onClick={handleCardClick}>\r\n            {/* Selection Indicator */}\r\n            {selected && (\r\n                <div style={{\r\n                    position: 'absolute',\r\n                    top: '8px',\r\n                    right: '8px',\r\n                    width: '20px',\r\n                    height: '20px',\r\n                    backgroundColor: '#3690CE',\r\n                    borderRadius: '50%',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    color: '#fff',\r\n                    fontSize: '12px',\r\n                    fontWeight: 600,\r\n                    zIndex: 10,\r\n                    boxShadow: '0 2px 4px rgba(0,0,0,0.2)'\r\n                }}>\r\n                    ✓\r\n                </div>\r\n            )}\r\n\r\n            {/* Client Name Header */}\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n                fontSize: '1rem',\r\n                fontWeight: 600,\r\n                color: '#24292f',\r\n                marginBottom: '8px',\r\n                borderBottom: '1px solid rgba(0,0,0,0.1)',\r\n                paddingBottom: '6px'\r\n            }}>\r\n                <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\r\n                    <FaShieldAlt style={{ fontSize: '14px', color: '#666' }} />\r\n                    <span style={{\r\n                        fontSize: '1rem',\r\n                        fontWeight: 600,\r\n                        fontFamily: 'monospace'\r\n                    }}>\r\n                        {data.instructionRef || 'No Ref'}\r\n                    </span>\r\n                </div>\r\n                <div style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\r\n                    <span>{instructionTitle}</span>\r\n                    {isMultiClient && (\r\n                        <FaUsers style={{ fontSize: '12px', color: '#666', marginLeft: '4px' }} />\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Service Description */}\r\n            {data.serviceDescription && (\r\n                <div style={{\r\n                    backgroundColor: '#f8f9fa',\r\n                    border: '1px solid #e1e4e8',\r\n                    borderRadius: '0px',\r\n                    padding: '8px 12px',\r\n                    marginBottom: '12px',\r\n                    position: 'relative'\r\n                }}>\r\n                    <div style={{\r\n                        position: 'absolute',\r\n                        top: '-8px',\r\n                        left: '8px',\r\n                        backgroundColor: colours.light.sectionBackground,\r\n                        padding: '0 4px',\r\n                        fontSize: '0.75rem',\r\n                        color: '#8b949e',\r\n                        fontWeight: 500\r\n                    }}>\r\n                        Service\r\n                    </div>\r\n                    <div style={{ fontSize: '0.9rem' }}>\r\n                        {data.serviceDescription}\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Risk Assessment Summary (Instruction Level) */}\r\n            <div style={{\r\n                backgroundColor: '#f8f9fa',\r\n                border: '1px solid #e1e4e8',\r\n                borderRadius: '0px',\r\n                padding: '8px 12px',\r\n                marginBottom: '12px',\r\n                position: 'relative'\r\n            }}>\r\n                <div style={{\r\n                    position: 'absolute',\r\n                    top: '-8px',\r\n                    left: '8px',\r\n                    backgroundColor: colours.light.sectionBackground,\r\n                    padding: '0 4px',\r\n                    fontSize: '0.75rem',\r\n                    color: '#8b949e',\r\n                    fontWeight: 500\r\n                }}>\r\n                    Risk Assessment\r\n                </div>\r\n                \r\n                {/* Basic Summary Row */}\r\n                <div style={{\r\n                    display: 'grid',\r\n                    gridTemplateColumns: 'repeat(auto-fit, minmax(120px, 1fr))',\r\n                    gap: '8px',\r\n                    marginBottom: primaryRisk ? '12px' : '0'\r\n                }}>\r\n                    {/* Risk Status */}\r\n                    <div>\r\n                        <div style={{ fontSize: '0.7rem', color: '#666', marginBottom: '2px' }}>Status</div>\r\n                        <div style={{\r\n                            fontSize: '0.8rem',\r\n                            fontWeight: 600,\r\n                            color: getRiskColor(riskResult || ''),\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            gap: '4px'\r\n                        }}>\r\n                            <span style={{\r\n                                width: '8px',\r\n                                height: '8px',\r\n                                borderRadius: '50%',\r\n                                backgroundColor: getRiskColor(riskResult || '')\r\n                            }} />\r\n                            {riskStatus === 'approved' ? 'Assessed' :\r\n                             riskStatus === 'review' ? 'Review' :\r\n                             riskStatus === 'flagged' ? 'Flagged' : 'Pending'}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Risk Score */}\r\n                    {primaryRisk?.RiskScore && (\r\n                        <div>\r\n                            <div style={{ fontSize: '0.7rem', color: '#666', marginBottom: '2px' }}>Score</div>\r\n                            <div style={{ fontSize: '0.8rem', fontWeight: 600 }}>\r\n                                {primaryRisk.RiskScore}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* Assessor */}\r\n                    {primaryRisk?.RiskAssessor && (\r\n                        <div>\r\n                            <div style={{ fontSize: '0.7rem', color: '#666', marginBottom: '2px' }}>Assessor</div>\r\n                            <div style={{ fontSize: '0.8rem', fontWeight: 600 }}>\r\n                                {primaryRisk.RiskAssessor}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* Assessment Date */}\r\n                    {primaryRisk?.ComplianceDate && (\r\n                        <div>\r\n                            <div style={{ fontSize: '0.7rem', color: '#666', marginBottom: '2px' }}>Assessed</div>\r\n                            <div style={{ fontSize: '0.8rem', fontWeight: 600 }}>\r\n                                {format(new Date(primaryRisk.ComplianceDate), 'd MMM yyyy')}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                {/* Detailed Risk Factors */}\r\n                {primaryRisk && (\r\n                    <div style={{\r\n                        borderTop: '1px solid #e1e4e8',\r\n                        paddingTop: '8px'\r\n                    }}>\r\n                        <div style={{\r\n                            fontSize: '0.75rem',\r\n                            fontWeight: 600,\r\n                            color: '#666',\r\n                            marginBottom: '6px'\r\n                        }}>\r\n                            Risk Factor Details\r\n                        </div>\r\n                        \r\n                        <div style={{\r\n                            display: 'grid',\r\n                            gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\r\n                            gap: '6px',\r\n                            fontSize: '0.7rem'\r\n                        }}>\r\n                            {/* Client Type */}\r\n                            {primaryRisk.ClientType && (\r\n                                <div style={{ marginBottom: '4px' }}>\r\n                                    <span style={{ color: '#666', fontWeight: 500 }}>Client Type:</span>\r\n                                    <div style={{ color: '#24292f', fontWeight: 500, fontSize: '0.75rem' }}>\r\n                                        {primaryRisk.ClientType} \r\n                                        <span style={{ color: '#666', fontSize: '0.65rem', marginLeft: '4px' }}>\r\n                                            ({primaryRisk.ClientType_Value}/3)\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n\r\n                            {/* Value of Instruction */}\r\n                            {primaryRisk.ValueOfInstruction && (\r\n                                <div style={{ marginBottom: '4px' }}>\r\n                                    <span style={{ color: '#666', fontWeight: 500 }}>Value:</span>\r\n                                    <div style={{ color: '#24292f', fontWeight: 500, fontSize: '0.75rem' }}>\r\n                                        {primaryRisk.ValueOfInstruction}\r\n                                        <span style={{ color: '#666', fontSize: '0.65rem', marginLeft: '4px' }}>\r\n                                            ({primaryRisk.ValueOfInstruction_Value}/3)\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n\r\n                            {/* Source of Funds */}\r\n                            {primaryRisk.SourceOfFunds && (\r\n                                <div style={{ marginBottom: '4px' }}>\r\n                                    <span style={{ color: '#666', fontWeight: 500 }}>Source of Funds:</span>\r\n                                    <div style={{ color: '#24292f', fontWeight: 500, fontSize: '0.75rem' }}>\r\n                                        {primaryRisk.SourceOfFunds}\r\n                                        <span style={{ color: '#666', fontSize: '0.65rem', marginLeft: '4px' }}>\r\n                                            ({primaryRisk.SourceOfFunds_Value}/3)\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n\r\n                            {/* Destination of Funds */}\r\n                            {primaryRisk.DestinationOfFunds && (\r\n                                <div style={{ marginBottom: '4px' }}>\r\n                                    <span style={{ color: '#666', fontWeight: 500 }}>Destination:</span>\r\n                                    <div style={{ color: '#24292f', fontWeight: 500, fontSize: '0.75rem' }}>\r\n                                        {primaryRisk.DestinationOfFunds}\r\n                                        <span style={{ color: '#666', fontSize: '0.65rem', marginLeft: '4px' }}>\r\n                                            ({primaryRisk.DestinationOfFunds_Value}/3)\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n\r\n                            {/* Funds Type */}\r\n                            {primaryRisk.FundsType && (\r\n                                <div style={{ marginBottom: '4px' }}>\r\n                                    <span style={{ color: '#666', fontWeight: 500 }}>Funds Type:</span>\r\n                                    <div style={{ color: '#24292f', fontWeight: 500, fontSize: '0.75rem' }}>\r\n                                        {primaryRisk.FundsType}\r\n                                        <span style={{ color: '#666', fontSize: '0.65rem', marginLeft: '4px' }}>\r\n                                            ({primaryRisk.FundsType_Value}/3)\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n\r\n                            {/* Client Introduction */}\r\n                            {primaryRisk.HowWasClientIntroduced && (\r\n                                <div style={{ marginBottom: '4px' }}>\r\n                                    <span style={{ color: '#666', fontWeight: 500 }}>Introduction:</span>\r\n                                    <div style={{ color: '#24292f', fontWeight: 500, fontSize: '0.75rem' }}>\r\n                                        {primaryRisk.HowWasClientIntroduced}\r\n                                        <span style={{ color: '#666', fontSize: '0.65rem', marginLeft: '4px' }}>\r\n                                            ({primaryRisk.HowWasClientIntroduced_Value}/3)\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n\r\n                            {/* Limitation */}\r\n                            {primaryRisk.Limitation && (\r\n                                <div style={{ marginBottom: '4px' }}>\r\n                                    <span style={{ color: '#666', fontWeight: 500 }}>Limitation:</span>\r\n                                    <div style={{ \r\n                                        color: primaryRisk.Limitation_Value === 3 ? '#d13438' : '#24292f', \r\n                                        fontWeight: primaryRisk.Limitation_Value === 3 ? 600 : 500, \r\n                                        fontSize: '0.75rem' \r\n                                    }}>\r\n                                        {primaryRisk.Limitation}\r\n                                        <span style={{ \r\n                                            color: primaryRisk.Limitation_Value === 3 ? '#d13438' : '#666', \r\n                                            fontSize: '0.65rem', \r\n                                            marginLeft: '4px',\r\n                                            fontWeight: primaryRisk.Limitation_Value === 3 ? 600 : 400\r\n                                        }}>\r\n                                            ({primaryRisk.Limitation_Value}/3)\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n\r\n                            {/* Transaction Risk Level */}\r\n                            {primaryRisk.TransactionRiskLevel && (\r\n                                <div style={{ marginBottom: '4px' }}>\r\n                                    <span style={{ color: '#666', fontWeight: 500 }}>Transaction Risk:</span>\r\n                                    <div style={{ \r\n                                        color: getRiskColor(primaryRisk.RiskAssessmentResult), \r\n                                        fontWeight: 500, \r\n                                        fontSize: '0.75rem' \r\n                                    }}>\r\n                                        {primaryRisk.TransactionRiskLevel}\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n\r\n                        {/* Compliance Confirmations */}\r\n                        <div style={{\r\n                            marginTop: '8px',\r\n                            paddingTop: '6px',\r\n                            borderTop: '1px solid #e8e8e8',\r\n                            display: 'grid',\r\n                            gridTemplateColumns: 'repeat(auto-fit, minmax(180px, 1fr))',\r\n                            gap: '4px',\r\n                            fontSize: '0.7rem'\r\n                        }}>\r\n                            {/* Client Risk Factors */}\r\n                            <div style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\r\n                                <span style={{\r\n                                    width: '6px',\r\n                                    height: '6px',\r\n                                    borderRadius: '50%',\r\n                                    backgroundColor: primaryRisk.ClientRiskFactorsConsidered ? '#20b26c' : '#d13438'\r\n                                }} />\r\n                                <span style={{ color: '#666', fontWeight: 500 }}>Client Risk Factors:</span>\r\n                                <span style={{ \r\n                                    color: primaryRisk.ClientRiskFactorsConsidered ? '#20b26c' : '#d13438',\r\n                                    fontWeight: 600 \r\n                                }}>\r\n                                    {primaryRisk.ClientRiskFactorsConsidered ? 'Considered' : 'Not Considered'}\r\n                                </span>\r\n                            </div>\r\n\r\n                            {/* Transaction Risk Factors */}\r\n                            <div style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\r\n                                <span style={{\r\n                                    width: '6px',\r\n                                    height: '6px',\r\n                                    borderRadius: '50%',\r\n                                    backgroundColor: primaryRisk.TransactionRiskFactorsConsidered ? '#20b26c' : '#d13438'\r\n                                }} />\r\n                                <span style={{ color: '#666', fontWeight: 500 }}>Transaction Risk:</span>\r\n                                <span style={{ \r\n                                    color: primaryRisk.TransactionRiskFactorsConsidered ? '#20b26c' : '#d13438',\r\n                                    fontWeight: 600 \r\n                                }}>\r\n                                    {primaryRisk.TransactionRiskFactorsConsidered ? 'Considered' : 'Not Considered'}\r\n                                </span>\r\n                            </div>\r\n\r\n                            {/* AML Policy */}\r\n                            <div style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\r\n                                <span style={{\r\n                                    width: '6px',\r\n                                    height: '6px',\r\n                                    borderRadius: '50%',\r\n                                    backgroundColor: primaryRisk.FirmWideAMLPolicyConsidered ? '#20b26c' : '#d13438'\r\n                                }} />\r\n                                <span style={{ color: '#666', fontWeight: 500 }}>AML Policy:</span>\r\n                                <span style={{ \r\n                                    color: primaryRisk.FirmWideAMLPolicyConsidered ? '#20b26c' : '#d13438',\r\n                                    fontWeight: 600 \r\n                                }}>\r\n                                    {primaryRisk.FirmWideAMLPolicyConsidered ? 'Considered' : 'Not Considered'}\r\n                                </span>\r\n                            </div>\r\n\r\n                            {/* Sanctions Risk */}\r\n                            <div style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\r\n                                <span style={{\r\n                                    width: '6px',\r\n                                    height: '6px',\r\n                                    borderRadius: '50%',\r\n                                    backgroundColor: primaryRisk.FirmWideSanctionsRiskConsidered ? '#20b26c' : '#d13438'\r\n                                }} />\r\n                                <span style={{ color: '#666', fontWeight: 500 }}>Sanctions Risk:</span>\r\n                                <span style={{ \r\n                                    color: primaryRisk.FirmWideSanctionsRiskConsidered ? '#20b26c' : '#d13438',\r\n                                    fontWeight: 600 \r\n                                }}>\r\n                                    {primaryRisk.FirmWideSanctionsRiskConsidered ? 'Considered' : 'Not Considered'}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Compliance Expiry Warning */}\r\n                        {primaryRisk.ComplianceExpiry && (\r\n                            <div style={{\r\n                                marginTop: '8px',\r\n                                padding: '6px 8px',\r\n                                backgroundColor: new Date(primaryRisk.ComplianceExpiry) < new Date() ? '#fff5f5' : '#f0f9ff',\r\n                                border: `1px solid ${new Date(primaryRisk.ComplianceExpiry) < new Date() ? '#fecaca' : '#bfdbfe'}`,\r\n                                borderRadius: '2px',\r\n                                fontSize: '0.7rem'\r\n                            }}>\r\n                                <span style={{ \r\n                                    color: new Date(primaryRisk.ComplianceExpiry) < new Date() ? '#dc2626' : '#3690CE',\r\n                                    fontWeight: 500 \r\n                                }}>\r\n                                    Expires: {format(new Date(primaryRisk.ComplianceExpiry), 'd MMM yyyy')}\r\n                                    {new Date(primaryRisk.ComplianceExpiry) < new Date() && ' (EXPIRED)'}\r\n                                </span>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Client Compliance Details */}\r\n            {data.clients && data.clients.length > 0 && (\r\n                <div style={{\r\n                    backgroundColor: '#f8f9fa',\r\n                    border: '1px solid #e1e4e8',\r\n                    borderRadius: '0px',\r\n                    padding: '8px 12px',\r\n                    marginBottom: '12px',\r\n                    position: 'relative'\r\n                }}>\r\n                    <div style={{\r\n                        position: 'absolute',\r\n                        top: '-8px',\r\n                        left: '8px',\r\n                        backgroundColor: colours.light.sectionBackground,\r\n                        padding: '0 4px',\r\n                        fontSize: '0.75rem',\r\n                        color: '#8b949e',\r\n                        fontWeight: 500\r\n                    }}>\r\n                        Client Compliance\r\n                    </div>\r\n                    \r\n                    {/* Lead Client */}\r\n                    {leadClient && (\r\n                        <div style={{\r\n                            marginBottom: jointClients.length > 0 ? '8px' : '0',\r\n                            paddingBottom: jointClients.length > 0 ? '8px' : '0',\r\n                            borderBottom: jointClients.length > 0 ? '1px solid #e1e4e8' : 'none'\r\n                        }}>\r\n                            <div style={{\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                gap: '8px',\r\n                                marginBottom: '4px'\r\n                            }}>\r\n                                <FaUser style={{ fontSize: '12px', color: '#3690CE' }} />\r\n                                <span style={{ \r\n                                    fontSize: '0.85rem', \r\n                                    fontWeight: 600,\r\n                                    color: '#3690CE'\r\n                                }}>\r\n                                    {(() => {\r\n                                        // Get personal info to include title in name\r\n                                        const personalInfo = data.allData.find(item => \r\n                                            item.email?.toLowerCase() === leadClient.ClientEmail?.toLowerCase() ||\r\n                                            item.Email?.toLowerCase() === leadClient.ClientEmail?.toLowerCase()\r\n                                        );\r\n                                        const prefix = personalInfo?.prefix || personalInfo?.Title;\r\n                                        const firstName = leadClient.FirstName || '';\r\n                                        const lastName = leadClient.LastName || '';\r\n                                        const fullName = prefix ? \r\n                                            `${prefix} ${firstName} ${lastName}`.trim() :\r\n                                            `${firstName} ${lastName}`.trim();\r\n                                        \r\n                                        return `Lead: ${fullName || leadClient.CompanyName || leadClient.ClientEmail?.split('@')[0] || 'Client'}`;\r\n                                    })()}\r\n                                </span>\r\n                                \r\n                                {/* Compact age and nationality display like POID cards */}\r\n                                {(() => {\r\n                                    const personalInfo = data.allData.find(item => \r\n                                        item.email?.toLowerCase() === leadClient.ClientEmail?.toLowerCase() ||\r\n                                        item.Email?.toLowerCase() === leadClient.ClientEmail?.toLowerCase()\r\n                                    );\r\n                                    \r\n                                    const dob = personalInfo?.date_of_birth || personalInfo?.DOB;\r\n                                    const age = dob ? calculateAge(dob) : null;\r\n                                    const nationality = personalInfo?.nationality || personalInfo?.Nationality;\r\n                                    const countryCode = personalInfo?.nationality_iso || personalInfo?.NationalityAlpha2;\r\n                                    \r\n                                    if (!age && !nationality) return null;\r\n                                    \r\n                                    return (\r\n                                        <div style={{\r\n                                            display: 'flex',\r\n                                            alignItems: 'center',\r\n                                            gap: '8px',\r\n                                            fontSize: '0.75rem',\r\n                                            color: '#555',\r\n                                            marginLeft: '8px'\r\n                                        }}>\r\n                                            {age && (\r\n                                                <span style={{ fontFamily: 'Raleway, sans-serif' }}>\r\n                                                    {age} yrs\r\n                                                </span>\r\n                                            )}\r\n                                            {nationality && countryCode && (\r\n                                                <span style={{ fontFamily: 'Raleway, sans-serif', display: 'flex', alignItems: 'center', gap: '2px' }}>\r\n                                                    {countryCode}\r\n                                                </span>\r\n                                            )}\r\n                                        </div>\r\n                                    );\r\n                                })()}\r\n                            </div>\r\n                            <div style={{\r\n                                fontSize: '0.8rem',\r\n                                fontWeight: 600,\r\n                                color: getClientVerificationStatus(leadClient) === 'complete' ? '#20b26c' :\r\n                                       getClientVerificationStatus(leadClient) === 'failed' ? colours.red :\r\n                                       getClientVerificationStatus(leadClient) === 'review' ? '#FFB900' :\r\n                                       getClientVerificationStatus(leadClient) === 'in-progress' ? '#3690CE' : '#666',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                gap: '4px',\r\n                                marginLeft: '20px'\r\n                            }}>\r\n                                <span style={{\r\n                                    width: '8px',\r\n                                    height: '8px',\r\n                                    borderRadius: '50%',\r\n                                    backgroundColor: getClientVerificationStatus(leadClient) === 'complete' ? '#20b26c' :\r\n                                                   getClientVerificationStatus(leadClient) === 'failed' ? colours.red :\r\n                                                   getClientVerificationStatus(leadClient) === 'review' ? '#FFB900' :\r\n                                                   getClientVerificationStatus(leadClient) === 'in-progress' ? '#3690CE' : '#ccc'\r\n                                }} />\r\n                                ID Verification: {getClientVerificationStatus(leadClient) === 'complete' ? 'Verified' :\r\n                                                 getClientVerificationStatus(leadClient) === 'failed' ? 'Failed' :\r\n                                                 getClientVerificationStatus(leadClient) === 'review' ? 'Review' :\r\n                                                 getClientVerificationStatus(leadClient) === 'in-progress' ? 'In Progress' : 'Pending'}\r\n                            </div>\r\n                            \r\n                            {/* Expanded ID Verification Details for Lead Client */}\r\n                            {expanded && leadClient.idVerification && (\r\n                                <div style={{\r\n                                    marginLeft: '20px',\r\n                                    marginTop: '8px',\r\n                                    padding: '12px',\r\n                                    backgroundColor: 'rgba(54, 144, 206, 0.05)',\r\n                                    borderRadius: '4px',\r\n                                    border: '1px solid rgba(54, 144, 206, 0.15)'\r\n                                }}>\r\n                                    <div style={{\r\n                                        fontSize: '0.75rem',\r\n                                        fontWeight: 600,\r\n                                        color: '#3690CE',\r\n                                        marginBottom: '8px'\r\n                                    }}>\r\n                                        ID Verification Details\r\n                                    </div>\r\n                                    \r\n                                    <div style={{\r\n                                        display: 'grid',\r\n                                        gridTemplateColumns: 'repeat(auto-fit, minmax(140px, 1fr))',\r\n                                        gap: '8px',\r\n                                        fontSize: '0.7rem'\r\n                                    }}>\r\n                                        {leadClient.idVerification.EIDOverallResult && (\r\n                                            <div>\r\n                                                <span style={{ color: '#666', fontWeight: 500 }}>Overall Result:</span>\r\n                                                <div style={{ \r\n                                                    color: getRiskColor(leadClient.idVerification.EIDOverallResult || ''),\r\n                                                    fontWeight: 600,\r\n                                                    fontSize: '0.75rem',\r\n                                                    display: 'flex',\r\n                                                    alignItems: 'center',\r\n                                                    gap: '8px',\r\n                                                    marginTop: '2px'\r\n                                                }}>\r\n                                                    <span>{leadClient.idVerification.EIDOverallResult}</span>\r\n                                                    {(leadClient.idVerification.PEPAndSanctionsCheckResult || leadClient.idVerification.AddressVerificationResult) && (\r\n                                                        <>\r\n                                                            <span style={{ color: '#ccc' }}>|</span>\r\n                                                            <div style={{ display: 'flex', gap: '4px', fontSize: '0.65rem' }}>\r\n                                                                {leadClient.idVerification.PEPAndSanctionsCheckResult && (\r\n                                                                    <span style={{ \r\n                                                                        color: getRiskColor(leadClient.idVerification.PEPAndSanctionsCheckResult),\r\n                                                                        fontWeight: 500,\r\n                                                                        display: 'flex',\r\n                                                                        alignItems: 'center',\r\n                                                                        gap: '3px'\r\n                                                                    }}>\r\n                                                                        <FaUserShield style={{ fontSize: '10px' }} />\r\n                                                                        PEP & Sanctions: {leadClient.idVerification.PEPAndSanctionsCheckResult}\r\n                                                                    </span>\r\n                                                                )}\r\n                                                                {leadClient.idVerification.AddressVerificationResult && (\r\n                                                                    <span style={{ \r\n                                                                        color: getRiskColor(leadClient.idVerification.AddressVerificationResult),\r\n                                                                        fontWeight: 500,\r\n                                                                        display: 'flex',\r\n                                                                        alignItems: 'center',\r\n                                                                        gap: '3px'\r\n                                                                    }}>\r\n                                                                        <FaMapMarkerAlt style={{ fontSize: '10px' }} />\r\n                                                                        Address: {leadClient.idVerification.AddressVerificationResult}\r\n                                                                    </span>\r\n                                                                )}\r\n                                                            </div>\r\n                                                        </>\r\n                                                    )}\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                        \r\n                                        {leadClient.idVerification.EIDCheckedDate && (\r\n                                            <div>\r\n                                                <span style={{ color: '#666', fontWeight: 500 }}>Check Date:</span>\r\n                                                <div style={{ color: '#24292f', fontWeight: 500, fontSize: '0.75rem', marginTop: '2px' }}>\r\n                                                    {new Date(leadClient.idVerification.EIDCheckedDate).toLocaleDateString()}\r\n                                                    {leadClient.idVerification.EIDCheckedTime && (\r\n                                                        <span style={{ color: '#666', fontWeight: 400, marginLeft: '4px' }}>\r\n                                                            <FaClock style={{ fontSize: '9px', marginRight: '2px' }} />\r\n                                                            {leadClient.idVerification.EIDCheckedTime.substring(0, 5)}\r\n                                                        </span>\r\n                                                    )}\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                        \r\n                                        {leadClient.idVerification.CheckExpiry && (\r\n                                            <div>\r\n                                                <span style={{ color: '#666', fontWeight: 500 }}>Check Expires:</span>\r\n                                                <div style={{ color: '#24292f', fontWeight: 500, fontSize: '0.75rem', marginTop: '2px' }}>\r\n                                                    {new Date(leadClient.idVerification.CheckExpiry).toLocaleDateString()}\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                        \r\n                                        {leadClient.idVerification.EIDProvider && (\r\n                                            <div>\r\n                                                <span style={{ color: '#666', fontWeight: 500 }}>Provider:</span>\r\n                                                <div style={{ color: '#24292f', fontWeight: 500, fontSize: '0.75rem', marginTop: '2px', textTransform: 'capitalize' }}>\r\n                                                    {leadClient.idVerification.EIDProvider}\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                    \r\n                                    {/* Compact contact and document info with address */}\r\n                                    {(() => {\r\n                                        const personalInfo = data.allData.find(item => \r\n                                            item.email?.toLowerCase() === leadClient.ClientEmail?.toLowerCase() ||\r\n                                            item.Email?.toLowerCase() === leadClient.ClientEmail?.toLowerCase()\r\n                                        );\r\n                                        \r\n                                        const phone = personalInfo?.best_number || personalInfo?.Phone;\r\n                                        const passport = personalInfo?.passport_number || personalInfo?.PassportNumber;\r\n                                        const license = personalInfo?.drivers_license_number || personalInfo?.DriversLicenseNumber;\r\n                                        \r\n                                        // Address information\r\n                                        const address = [\r\n                                            personalInfo?.house_building_number,\r\n                                            personalInfo?.street,\r\n                                            personalInfo?.city,\r\n                                            personalInfo?.county,\r\n                                            personalInfo?.post_code,\r\n                                            personalInfo?.country\r\n                                        ].filter(Boolean).join(', ');\r\n                                        \r\n                                        if (!phone && !passport && !license && !address) return null;\r\n                                        \r\n                                        return (\r\n                                            <div style={{\r\n                                                marginTop: '12px',\r\n                                                paddingTop: '8px',\r\n                                                borderTop: '1px solid rgba(54, 144, 206, 0.15)',\r\n                                                display: 'grid',\r\n                                                gridTemplateColumns: '1fr 1fr',\r\n                                                gap: '12px',\r\n                                                fontSize: '0.65rem'\r\n                                            }}>\r\n                                                {/* Left column: Phone and Document */}\r\n                                                <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\r\n                                                    {phone && (\r\n                                                        <div style={{ \r\n                                                            display: 'flex', \r\n                                                            alignItems: 'center', \r\n                                                            gap: '4px'\r\n                                                        }}>\r\n                                                            <FaPhone style={{ \r\n                                                                fontSize: '9px', \r\n                                                                color: '#3690CE',\r\n                                                                flexShrink: 0\r\n                                                            }} />\r\n                                                            <span style={{ color: '#666' }}>Phone:</span>\r\n                                                            <span style={{ fontWeight: 500, color: '#24292f' }}>{phone}</span>\r\n                                                        </div>\r\n                                                    )}\r\n                                                    \r\n                                                    {passport && (\r\n                                                        <div style={{ \r\n                                                            display: 'flex', \r\n                                                            alignItems: 'center', \r\n                                                            gap: '4px'\r\n                                                        }}>\r\n                                                            <FaIdCard style={{ \r\n                                                                fontSize: '9px', \r\n                                                                color: '#3690CE',\r\n                                                                flexShrink: 0\r\n                                                            }} />\r\n                                                            <span style={{ color: '#666' }}>Passport:</span>\r\n                                                            <span style={{ \r\n                                                                fontWeight: 500, \r\n                                                                color: '#24292f',\r\n                                                                fontFamily: 'monospace',\r\n                                                                fontSize: '0.6rem',\r\n                                                                letterSpacing: '0.5px'\r\n                                                            }}>\r\n                                                                {formatDocumentNumber(passport, 'passport')}\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    )}\r\n                                                    \r\n                                                    {license && !passport && (\r\n                                                        <div style={{ \r\n                                                            display: 'flex', \r\n                                                            alignItems: 'center', \r\n                                                            gap: '4px'\r\n                                                        }}>\r\n                                                            <FaIdCard style={{ \r\n                                                                fontSize: '9px', \r\n                                                                color: '#3690CE',\r\n                                                                flexShrink: 0\r\n                                                            }} />\r\n                                                            <span style={{ color: '#666' }}>License:</span>\r\n                                                            <span style={{ \r\n                                                                fontWeight: 500, \r\n                                                                color: '#24292f',\r\n                                                                fontFamily: 'monospace',\r\n                                                                fontSize: '0.6rem',\r\n                                                                letterSpacing: '0.5px'\r\n                                                            }}>\r\n                                                                {formatDocumentNumber(license, 'license')}\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    )}\r\n                                                </div>\r\n                                                \r\n                                                {/* Right column: Address */}\r\n                                                {address && (\r\n                                                    <div style={{ \r\n                                                        display: 'flex', \r\n                                                        alignItems: 'flex-start', \r\n                                                        gap: '4px'\r\n                                                    }}>\r\n                                                        <FaMapMarkerAlt style={{ \r\n                                                            fontSize: '9px', \r\n                                                            color: '#3690CE',\r\n                                                            flexShrink: 0,\r\n                                                            marginTop: '1px'\r\n                                                        }} />\r\n                                                        <div>\r\n                                                            <div style={{ color: '#666', marginBottom: '2px' }}>Address:</div>\r\n                                                            <div style={{ \r\n                                                                fontWeight: 500, \r\n                                                                color: '#24292f',\r\n                                                                lineHeight: '1.3',\r\n                                                                fontSize: '0.6rem'\r\n                                                            }}>\r\n                                                                {address}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )}\r\n                                            </div>\r\n                                        );\r\n                                    })()}\r\n                                    \r\n                                    {/* Company Information Section for Lead Client */}\r\n                                    {leadClient.CompanyName && (\r\n                                        <div style={{\r\n                                            marginTop: '12px',\r\n                                            paddingTop: '8px',\r\n                                            borderTop: '1px solid rgba(54, 144, 206, 0.15)',\r\n                                        }}>\r\n                                            <div style={{\r\n                                                fontSize: '0.7rem',\r\n                                                fontWeight: 600,\r\n                                                color: '#3690CE',\r\n                                                marginBottom: '6px',\r\n                                                fontFamily: 'Raleway, sans-serif'\r\n                                            }}>\r\n                                                Company Information\r\n                                            </div>\r\n                                            \r\n                                            <div style={{\r\n                                                display: 'grid',\r\n                                                gridTemplateColumns: 'repeat(auto-fit, minmax(140px, 1fr))',\r\n                                                gap: '6px',\r\n                                                fontSize: '0.65rem'\r\n                                            }}>\r\n                                                <div style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\r\n                                                    <FaBuilding style={{ fontSize: '9px', color: '#3690CE' }} />\r\n                                                    <span style={{ color: '#666' }}>Company:</span>\r\n                                                    <span style={{ fontWeight: 500, color: '#24292f' }}>{leadClient.CompanyName}</span>\r\n                                                </div>\r\n                                                \r\n                                                {(() => {\r\n                                                    const personalInfo = data.allData.find(item => \r\n                                                        item.email?.toLowerCase() === leadClient.ClientEmail?.toLowerCase() ||\r\n                                                        item.Email?.toLowerCase() === leadClient.ClientEmail?.toLowerCase()\r\n                                                    );\r\n                                                    const companyNumber = personalInfo?.company_number || personalInfo?.CompanyNumber;\r\n                                                    \r\n                                                    return companyNumber ? (\r\n                                                        <div style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\r\n                                                            <FaIdCard style={{ fontSize: '9px', color: '#3690CE' }} />\r\n                                                            <span style={{ color: '#666' }}>Company No:</span>\r\n                                                            <span style={{ fontWeight: 500, color: '#24292f', fontFamily: 'monospace' }}>{companyNumber}</span>\r\n                                                        </div>\r\n                                                    ) : null;\r\n                                                })()}\r\n                                            </div>\r\n                                        </div>\r\n                                    )}\r\n                                    \r\n                                    {/* Address Information */}\r\n                                    {(leadClient.address || leadClient.house_building_number || leadClient.street || \r\n                                      leadClient.city || leadClient.post_code || leadClient.country || \r\n                                      (expanded && leadClient.ClientEmail)) && (\r\n                                        <div style={{\r\n                                            marginTop: '12px',\r\n                                            paddingTop: '8px',\r\n                                            borderTop: '1px solid rgba(54, 144, 206, 0.15)',\r\n                                        }}>\r\n                                            <div style={{\r\n                                                fontSize: '0.7rem',\r\n                                                fontWeight: 600,\r\n                                                color: '#3690CE',\r\n                                                marginBottom: '6px',\r\n                                                fontFamily: 'Raleway, sans-serif'\r\n                                            }}>\r\n                                                Registered Address\r\n                                            </div>\r\n                                            <div style={{\r\n                                                fontSize: '0.7rem',\r\n                                                color: '#24292f',\r\n                                                lineHeight: '1.4',\r\n                                                fontFamily: 'Raleway, sans-serif'\r\n                                            }}>\r\n                                                {leadClient.address ? (\r\n                                                    // Legacy address structure\r\n                                                    <>\r\n                                                        {leadClient.address.house_number && `${leadClient.address.house_number} `}\r\n                                                        {leadClient.address.street && `${leadClient.address.street}`}\r\n                                                        {(leadClient.address.house_number || leadClient.address.street) && <br />}\r\n                                                        {leadClient.address.city && `${leadClient.address.city}`}\r\n                                                        {leadClient.address.county && `, ${leadClient.address.county}`}\r\n                                                        {(leadClient.address.city || leadClient.address.county) && <br />}\r\n                                                        {leadClient.address.post_code && `${leadClient.address.post_code}`}\r\n                                                        {leadClient.address.country && `, ${leadClient.address.country}`}\r\n                                                    </>\r\n                                                ) : (leadClient.house_building_number || leadClient.street || leadClient.city || \r\n                                                     leadClient.post_code || leadClient.country) ? (\r\n                                                    // POID-style flat structure\r\n                                                    <>\r\n                                                        {leadClient.house_building_number && `${leadClient.house_building_number} `}\r\n                                                        {leadClient.street && `${leadClient.street}`}\r\n                                                        {(leadClient.house_building_number || leadClient.street) && <br />}\r\n                                                        {leadClient.city && `${leadClient.city}`}\r\n                                                        {leadClient.county && `, ${leadClient.county}`}\r\n                                                        {(leadClient.city || leadClient.county) && <br />}\r\n                                                        {leadClient.post_code && `${leadClient.post_code}`}\r\n                                                        {leadClient.country && `, ${leadClient.country}`}\r\n                                                    </>\r\n                                                ) : (\r\n                                                    // No address data available - show placeholder\r\n                                                    <div style={{\r\n                                                        color: '#666',\r\n                                                        fontStyle: 'italic',\r\n                                                        fontSize: '0.65rem',\r\n                                                        fontFamily: 'Raleway, sans-serif'\r\n                                                    }}>\r\n                                                        Address information not available\r\n                                                        {expanded && (\r\n                                                            <div style={{ \r\n                                                                marginTop: '4px', \r\n                                                                fontSize: '0.6rem', \r\n                                                                color: '#999',\r\n                                                                fontFamily: 'Raleway, sans-serif'\r\n                                                            }}>\r\n                                                                Client: {leadClient.ClientEmail}\r\n                                                            </div>\r\n                                                        )}\r\n                                                    </div>\r\n                                                )}\r\n                                            </div>\r\n                                        </div>\r\n                                    )}\r\n                                    \r\n                                    \r\n                                    {/* Correlation ID - Read-only style */}\r\n                                    {leadClient.idVerification.EIDCheckId && (\r\n                                        <div style={{\r\n                                            marginTop: '8px',\r\n                                            paddingTop: '8px',\r\n                                            borderTop: '1px solid rgba(54, 144, 206, 0.1)',\r\n                                            fontSize: '0.65rem',\r\n                                            color: '#888',\r\n                                            fontFamily: 'monospace',\r\n                                            letterSpacing: '0.5px'\r\n                                        }}>\r\n                                            Check ID: {leadClient.idVerification.EIDCheckId}\r\n                                        </div>\r\n                                    )}\r\n                                    \r\n                                    {/* CTA Button placeholder - only show if not Passed */}\r\n                                    {leadClient.idVerification.EIDOverallResult && \r\n                                     leadClient.idVerification.EIDOverallResult.toLowerCase() !== 'passed' && (\r\n                                        <div style={{\r\n                                            marginTop: '12px',\r\n                                            paddingTop: '8px',\r\n                                            borderTop: '1px solid rgba(54, 144, 206, 0.1)'\r\n                                        }}>\r\n                                            <button style={{\r\n                                                padding: '6px 12px',\r\n                                                fontSize: '0.7rem',\r\n                                                fontWeight: 600,\r\n                                                backgroundColor: colours.red,\r\n                                                color: '#fff',\r\n                                                border: 'none',\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer',\r\n                                                transition: 'opacity 0.2s'\r\n                                            }}\r\n                                            onMouseOver={(e) => e.currentTarget.style.opacity = '0.9'}\r\n                                            onMouseOut={(e) => e.currentTarget.style.opacity = '1'}\r\n                                            >\r\n                                                Review Required\r\n                                            </button>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* Joint Clients */}\r\n                    {jointClients.map((client, index) => {\r\n                        const clientVerificationStatus = getClientVerificationStatus(client);\r\n                        return (\r\n                            <div key={index} style={{\r\n                                marginBottom: index < jointClients.length - 1 ? '6px' : '0'\r\n                            }}>\r\n                                <div style={{\r\n                                    display: 'flex',\r\n                                    alignItems: 'center',\r\n                                    gap: '8px',\r\n                                    marginBottom: '4px'\r\n                                }}>\r\n                                    <FaUser style={{ fontSize: '12px', color: '#666' }} />\r\n                                    <span style={{ \r\n                                        fontSize: '0.85rem', \r\n                                        fontWeight: 500\r\n                                    }}>\r\n                                        {(() => {\r\n                                            // Get personal info to include title in name\r\n                                            const personalInfo = data.allData.find(item => \r\n                                                item.email?.toLowerCase() === client.ClientEmail?.toLowerCase() ||\r\n                                                item.Email?.toLowerCase() === client.ClientEmail?.toLowerCase()\r\n                                            );\r\n                                            const prefix = personalInfo?.prefix || personalInfo?.Title;\r\n                                            const firstName = client.FirstName || '';\r\n                                            const lastName = client.LastName || '';\r\n                                            const fullName = prefix ? \r\n                                                `${prefix} ${firstName} ${lastName}`.trim() :\r\n                                                `${firstName} ${lastName}`.trim();\r\n                                            \r\n                                            return `Joint: ${fullName || client.CompanyName || client.ClientEmail?.split('@')[0] || 'Client'}`;\r\n                                        })()}\r\n                                    </span>\r\n                                    \r\n                                    {/* Compact age and nationality display like POID cards */}\r\n                                    {(() => {\r\n                                        const personalInfo = data.allData.find(item => \r\n                                            item.email?.toLowerCase() === client.ClientEmail?.toLowerCase() ||\r\n                                            item.Email?.toLowerCase() === client.ClientEmail?.toLowerCase()\r\n                                        );\r\n                                        \r\n                                        const dob = personalInfo?.date_of_birth || personalInfo?.DOB;\r\n                                        const age = dob ? calculateAge(dob) : null;\r\n                                        const nationality = personalInfo?.nationality || personalInfo?.Nationality;\r\n                                        const countryCode = personalInfo?.nationality_iso || personalInfo?.NationalityAlpha2;\r\n                                        \r\n                                        if (!age && !nationality) return null;\r\n                                        \r\n                                        return (\r\n                                            <div style={{\r\n                                                display: 'flex',\r\n                                                alignItems: 'center',\r\n                                                gap: '8px',\r\n                                                fontSize: '0.75rem',\r\n                                                color: '#555',\r\n                                                marginLeft: '8px'\r\n                                            }}>\r\n                                                {age && (\r\n                                                    <span style={{ fontFamily: 'Raleway, sans-serif' }}>\r\n                                                        {age} yrs\r\n                                                    </span>\r\n                                                )}\r\n                                                {nationality && countryCode && (\r\n                                                    <span style={{ fontFamily: 'Raleway, sans-serif', display: 'flex', alignItems: 'center', gap: '2px' }}>\r\n                                                        {countryCode}\r\n                                                    </span>\r\n                                                )}\r\n                                            </div>\r\n                                        );\r\n                                    })()}\r\n                                </div>\r\n                                <div style={{\r\n                                    fontSize: '0.8rem',\r\n                                    fontWeight: 600,\r\n                                    color: clientVerificationStatus === 'complete' ? '#20b26c' :\r\n                                           clientVerificationStatus === 'failed' ? colours.red :\r\n                                           clientVerificationStatus === 'review' ? '#FFB900' :\r\n                                           clientVerificationStatus === 'in-progress' ? '#3690CE' : '#666',\r\n                                    display: 'flex',\r\n                                    alignItems: 'center',\r\n                                    gap: '4px',\r\n                                    marginLeft: '20px'\r\n                                }}>\r\n                                    <span style={{\r\n                                        width: '8px',\r\n                                        height: '8px',\r\n                                        borderRadius: '50%',\r\n                                        backgroundColor: clientVerificationStatus === 'complete' ? '#20b26c' :\r\n                                                       clientVerificationStatus === 'failed' ? colours.red :\r\n                                                       clientVerificationStatus === 'review' ? '#FFB900' :\r\n                                                       clientVerificationStatus === 'in-progress' ? '#3690CE' : '#ccc'\r\n                                    }} />\r\n                                    ID Verification: {clientVerificationStatus === 'complete' ? 'Verified' :\r\n                                                     clientVerificationStatus === 'failed' ? 'Failed' :\r\n                                                     clientVerificationStatus === 'review' ? 'Review' :\r\n                                                     clientVerificationStatus === 'in-progress' ? 'In Progress' : 'Pending'}\r\n                                </div>\r\n                                \r\n                                {/* Expanded ID Verification Details for Joint Client */}\r\n                                {expanded && client.idVerification && (\r\n                                    <div style={{\r\n                                        marginLeft: '20px',\r\n                                        marginTop: '8px',\r\n                                        padding: '12px',\r\n                                        backgroundColor: 'rgba(102, 102, 102, 0.05)',\r\n                                        borderRadius: '4px',\r\n                                        border: '1px solid rgba(102, 102, 102, 0.15)'\r\n                                    }}>\r\n                                        <div style={{\r\n                                            fontSize: '0.75rem',\r\n                                            fontWeight: 600,\r\n                                            color: '#666',\r\n                                            marginBottom: '8px'\r\n                                        }}>\r\n                                            ID Verification Details\r\n                                        </div>\r\n                                        \r\n                                        <div style={{\r\n                                            display: 'grid',\r\n                                            gridTemplateColumns: 'repeat(auto-fit, minmax(140px, 1fr))',\r\n                                            gap: '8px',\r\n                                            fontSize: '0.7rem'\r\n                                        }}>\r\n                                            {client.idVerification.EIDOverallResult && (\r\n                                                <div>\r\n                                                    <span style={{ color: '#666', fontWeight: 500 }}>Overall Result:</span>\r\n                                                    <div style={{ \r\n                                                        color: getRiskColor(client.idVerification.EIDOverallResult || ''),\r\n                                                        fontWeight: 600,\r\n                                                        fontSize: '0.75rem',\r\n                                                        display: 'flex',\r\n                                                        alignItems: 'center',\r\n                                                        gap: '8px',\r\n                                                        marginTop: '2px'\r\n                                                    }}>\r\n                                                        <span>{client.idVerification.EIDOverallResult}</span>\r\n                                                        {(client.idVerification.PEPAndSanctionsCheckResult || client.idVerification.AddressVerificationResult) && (\r\n                                                            <>\r\n                                                                <span style={{ color: '#ccc' }}>|</span>\r\n                                                                <div style={{ display: 'flex', gap: '4px', fontSize: '0.65rem' }}>\r\n                                                                    {client.idVerification.PEPAndSanctionsCheckResult && (\r\n                                                                        <span style={{ \r\n                                                                            color: getRiskColor(client.idVerification.PEPAndSanctionsCheckResult),\r\n                                                                            fontWeight: 500,\r\n                                                                            display: 'flex',\r\n                                                                            alignItems: 'center',\r\n                                                                            gap: '3px'\r\n                                                                        }}>\r\n                                                                            <FaUserShield style={{ fontSize: '10px' }} />\r\n                                                                            PEP & Sanctions: {client.idVerification.PEPAndSanctionsCheckResult}\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                    {client.idVerification.AddressVerificationResult && (\r\n                                                                        <span style={{ \r\n                                                                            color: getRiskColor(client.idVerification.AddressVerificationResult),\r\n                                                                            fontWeight: 500,\r\n                                                                            display: 'flex',\r\n                                                                            alignItems: 'center',\r\n                                                                            gap: '3px'\r\n                                                                        }}>\r\n                                                                            <FaMapMarkerAlt style={{ fontSize: '10px' }} />\r\n                                                                            Address: {client.idVerification.AddressVerificationResult}\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </div>\r\n                                                            </>\r\n                                                        )}\r\n                                                    </div>\r\n                                                </div>\r\n                                            )}\r\n                                            \r\n                                            {client.idVerification.EIDCheckedDate && (\r\n                                                <div>\r\n                                                    <span style={{ color: '#666', fontWeight: 500 }}>Check Date:</span>\r\n                                                    <div style={{ color: '#24292f', fontWeight: 500, fontSize: '0.75rem', marginTop: '2px' }}>\r\n                                                        {new Date(client.idVerification.EIDCheckedDate).toLocaleDateString()}\r\n                                                        {client.idVerification.EIDCheckedTime && (\r\n                                                            <span style={{ color: '#666', fontWeight: 400, marginLeft: '4px' }}>\r\n                                                                <FaClock style={{ fontSize: '9px', marginRight: '2px' }} />\r\n                                                                {client.idVerification.EIDCheckedTime.substring(0, 5)}\r\n                                                            </span>\r\n                                                        )}\r\n                                                    </div>\r\n                                                </div>\r\n                                            )}\r\n                                            \r\n                                            {client.idVerification.CheckExpiry && (\r\n                                                <div>\r\n                                                    <span style={{ color: '#666', fontWeight: 500 }}>Check Expires:</span>\r\n                                                    <div style={{ color: '#24292f', fontWeight: 500, fontSize: '0.75rem', marginTop: '2px' }}>\r\n                                                        {new Date(client.idVerification.CheckExpiry).toLocaleDateString()}\r\n                                                    </div>\r\n                                                </div>\r\n                                            )}\r\n                                            \r\n                                            {client.idVerification.EIDProvider && (\r\n                                                <div>\r\n                                                    <span style={{ color: '#666', fontWeight: 500 }}>Provider:</span>\r\n                                                    <div style={{ color: '#24292f', fontWeight: 500, fontSize: '0.75rem', marginTop: '2px', textTransform: 'capitalize' }}>\r\n                                                        {client.idVerification.EIDProvider}\r\n                                                    </div>\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                        \r\n                                        {/* Compact contact and document info with address */}\r\n                                        {(() => {\r\n                                            const personalInfo = data.allData.find(item => \r\n                                                item.email?.toLowerCase() === client.ClientEmail?.toLowerCase() ||\r\n                                                item.Email?.toLowerCase() === client.ClientEmail?.toLowerCase()\r\n                                            );\r\n                                            \r\n                                            const phone = personalInfo?.best_number || personalInfo?.Phone;\r\n                                            const passport = personalInfo?.passport_number || personalInfo?.PassportNumber;\r\n                                            const license = personalInfo?.drivers_license_number || personalInfo?.DriversLicenseNumber;\r\n                                            \r\n                                            // Address information\r\n                                            const address = [\r\n                                                personalInfo?.house_building_number,\r\n                                                personalInfo?.street,\r\n                                                personalInfo?.city,\r\n                                                personalInfo?.county,\r\n                                                personalInfo?.post_code,\r\n                                                personalInfo?.country\r\n                                            ].filter(Boolean).join(', ');\r\n                                            \r\n                                            if (!phone && !passport && !license && !address) return null;\r\n                                            \r\n                                            return (\r\n                                                <div style={{\r\n                                                    marginTop: '12px',\r\n                                                    paddingTop: '8px',\r\n                                                    borderTop: '1px solid rgba(102, 102, 102, 0.15)',\r\n                                                    display: 'grid',\r\n                                                    gridTemplateColumns: '1fr 1fr',\r\n                                                    gap: '12px',\r\n                                                    fontSize: '0.65rem'\r\n                                                }}>\r\n                                                    {/* Left column: Phone and Document */}\r\n                                                    <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\r\n                                                        {phone && (\r\n                                                            <div style={{ \r\n                                                                display: 'flex', \r\n                                                                alignItems: 'center', \r\n                                                                gap: '4px'\r\n                                                            }}>\r\n                                                                <FaPhone style={{ \r\n                                                                    fontSize: '9px', \r\n                                                                    color: '#666',\r\n                                                                    flexShrink: 0\r\n                                                                }} />\r\n                                                                <span style={{ color: '#666' }}>Phone:</span>\r\n                                                                <span style={{ fontWeight: 500, color: '#24292f' }}>{phone}</span>\r\n                                                            </div>\r\n                                                        )}\r\n                                                        \r\n                                                        {passport && (\r\n                                                            <div style={{ \r\n                                                                display: 'flex', \r\n                                                                alignItems: 'center', \r\n                                                                gap: '4px'\r\n                                                            }}>\r\n                                                                <FaIdCard style={{ \r\n                                                                    fontSize: '9px', \r\n                                                                    color: '#666',\r\n                                                                    flexShrink: 0\r\n                                                                }} />\r\n                                                                <span style={{ color: '#666' }}>Passport:</span>\r\n                                                                <span style={{ \r\n                                                                    fontWeight: 500, \r\n                                                                    color: '#24292f',\r\n                                                                    fontFamily: 'monospace',\r\n                                                                    fontSize: '0.6rem',\r\n                                                                    letterSpacing: '0.5px'\r\n                                                                }}>\r\n                                                                    {formatDocumentNumber(passport, 'passport')}\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        )}\r\n                                                        \r\n                                                        {license && !passport && (\r\n                                                            <div style={{ \r\n                                                                display: 'flex', \r\n                                                                alignItems: 'center', \r\n                                                                gap: '4px'\r\n                                                            }}>\r\n                                                                <FaIdCard style={{ \r\n                                                                    fontSize: '9px', \r\n                                                                    color: '#666',\r\n                                                                    flexShrink: 0\r\n                                                                }} />\r\n                                                                <span style={{ color: '#666' }}>License:</span>\r\n                                                                <span style={{ \r\n                                                                    fontWeight: 500, \r\n                                                                    color: '#24292f',\r\n                                                                    fontFamily: 'monospace',\r\n                                                                    fontSize: '0.6rem',\r\n                                                                    letterSpacing: '0.5px'\r\n                                                                }}>\r\n                                                                    {formatDocumentNumber(license, 'license')}\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        )}\r\n                                                    </div>\r\n                                                    \r\n                                                    {/* Right column: Address */}\r\n                                                    {address && (\r\n                                                        <div style={{ \r\n                                                            display: 'flex', \r\n                                                            alignItems: 'flex-start', \r\n                                                            gap: '4px'\r\n                                                        }}>\r\n                                                            <FaMapMarkerAlt style={{ \r\n                                                                fontSize: '9px', \r\n                                                                color: '#666',\r\n                                                                flexShrink: 0,\r\n                                                                marginTop: '1px'\r\n                                                            }} />\r\n                                                            <div>\r\n                                                                <div style={{ color: '#666', marginBottom: '2px' }}>Address:</div>\r\n                                                                <div style={{ \r\n                                                                    fontWeight: 500, \r\n                                                                    color: '#24292f',\r\n                                                                    lineHeight: '1.3',\r\n                                                                    fontSize: '0.6rem'\r\n                                                                }}>\r\n                                                                    {address}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    )}\r\n                                                </div>\r\n                                            );\r\n                                        })()}\r\n                                        \r\n                                        {/* Company Information Section for Joint Client */}\r\n                                        {client.CompanyName && (\r\n                                            <div style={{\r\n                                                marginTop: '12px',\r\n                                                paddingTop: '8px',\r\n                                                borderTop: '1px solid rgba(102, 102, 102, 0.15)',\r\n                                            }}>\r\n                                                <div style={{\r\n                                                    fontSize: '0.7rem',\r\n                                                    fontWeight: 600,\r\n                                                    color: '#666',\r\n                                                    marginBottom: '6px',\r\n                                                    fontFamily: 'Raleway, sans-serif'\r\n                                                }}>\r\n                                                    Company Information\r\n                                                </div>\r\n                                                \r\n                                                <div style={{\r\n                                                    display: 'grid',\r\n                                                    gridTemplateColumns: 'repeat(auto-fit, minmax(140px, 1fr))',\r\n                                                    gap: '6px',\r\n                                                    fontSize: '0.65rem'\r\n                                                }}>\r\n                                                    <div style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\r\n                                                        <FaBuilding style={{ fontSize: '9px', color: '#666' }} />\r\n                                                        <span style={{ color: '#666' }}>Company:</span>\r\n                                                        <span style={{ fontWeight: 500, color: '#24292f' }}>{client.CompanyName}</span>\r\n                                                    </div>\r\n                                                    \r\n                                                    {(() => {\r\n                                                        const personalInfo = data.allData.find(item => \r\n                                                            item.email?.toLowerCase() === client.ClientEmail?.toLowerCase() ||\r\n                                                            item.Email?.toLowerCase() === client.ClientEmail?.toLowerCase()\r\n                                                        );\r\n                                                        const companyNumber = personalInfo?.company_number || personalInfo?.CompanyNumber;\r\n                                                        \r\n                                                        return companyNumber ? (\r\n                                                            <div style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\r\n                                                                <FaIdCard style={{ fontSize: '9px', color: '#666' }} />\r\n                                                                <span style={{ color: '#666' }}>Company No:</span>\r\n                                                                <span style={{ fontWeight: 500, color: '#24292f', fontFamily: 'monospace' }}>{companyNumber}</span>\r\n                                                            </div>\r\n                                                        ) : null;\r\n                                                    })()}\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                        \r\n                                        {/* Address Information */}\r\n                                        {(client.address || client.house_building_number || client.street || \r\n                                          client.city || client.post_code || client.country || \r\n                                          (expanded && client.ClientEmail)) && (\r\n                                            <div style={{\r\n                                                marginTop: '12px',\r\n                                                paddingTop: '8px',\r\n                                                borderTop: '1px solid rgba(102, 102, 102, 0.15)',\r\n                                            }}>\r\n                                                <div style={{\r\n                                                    fontSize: '0.7rem',\r\n                                                    fontWeight: 600,\r\n                                                    color: '#666',\r\n                                                    marginBottom: '6px',\r\n                                                    fontFamily: 'Raleway, sans-serif'\r\n                                                }}>\r\n                                                    Registered Address\r\n                                                </div>\r\n                                                <div style={{\r\n                                                    fontSize: '0.7rem',\r\n                                                    color: '#24292f',\r\n                                                    lineHeight: '1.4',\r\n                                                    fontFamily: 'Raleway, sans-serif'\r\n                                                }}>\r\n                                                    {client.address ? (\r\n                                                        // Legacy address structure\r\n                                                        <>\r\n                                                            {client.address.house_number && `${client.address.house_number} `}\r\n                                                            {client.address.street && `${client.address.street}`}\r\n                                                            {(client.address.house_number || client.address.street) && <br />}\r\n                                                            {client.address.city && `${client.address.city}`}\r\n                                                            {client.address.county && `, ${client.address.county}`}\r\n                                                            {(client.address.city || client.address.county) && <br />}\r\n                                                            {client.address.post_code && `${client.address.post_code}`}\r\n                                                            {client.address.country && `, ${client.address.country}`}\r\n                                                        </>\r\n                                                    ) : (client.house_building_number || client.street || client.city || \r\n                                                         client.post_code || client.country) ? (\r\n                                                        // POID-style flat structure\r\n                                                        <>\r\n                                                            {client.house_building_number && `${client.house_building_number} `}\r\n                                                            {client.street && `${client.street}`}\r\n                                                            {(client.house_building_number || client.street) && <br />}\r\n                                                            {client.city && `${client.city}`}\r\n                                                            {client.county && `, ${client.county}`}\r\n                                                            {(client.city || client.county) && <br />}\r\n                                                            {client.post_code && `${client.post_code}`}\r\n                                                            {client.country && `, ${client.country}`}\r\n                                                        </>\r\n                                                    ) : (\r\n                                                        // No address data available - show placeholder\r\n                                                        <div style={{\r\n                                                            color: '#666',\r\n                                                            fontStyle: 'italic',\r\n                                                            fontSize: '0.65rem',\r\n                                                            fontFamily: 'Raleway, sans-serif'\r\n                                                        }}>\r\n                                                            Address information not available\r\n                                                            {expanded && (\r\n                                                                <div style={{ \r\n                                                                    marginTop: '4px', \r\n                                                                    fontSize: '0.6rem', \r\n                                                                    color: '#999',\r\n                                                                    fontFamily: 'Raleway, sans-serif'\r\n                                                                }}>\r\n                                                                    Client: {client.ClientEmail}\r\n                                                                </div>\r\n                                                            )}\r\n                                                        </div>\r\n                                                    )}\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                        \r\n                                        \r\n                                        {/* Correlation ID - Read-only style */}\r\n                                        {client.idVerification.EIDCheckId && (\r\n                                            <div style={{\r\n                                                marginTop: '8px',\r\n                                                paddingTop: '8px',\r\n                                                borderTop: '1px solid rgba(102, 102, 102, 0.1)',\r\n                                                fontSize: '0.65rem',\r\n                                                color: '#888',\r\n                                                fontFamily: 'monospace',\r\n                                                letterSpacing: '0.5px'\r\n                                            }}>\r\n                                                Check ID: {client.idVerification.EIDCheckId}\r\n                                            </div>\r\n                                        )}\r\n                                        \r\n                                        {/* CTA Button placeholder - only show if not Passed */}\r\n                                        {client.idVerification.EIDOverallResult && \r\n                                         client.idVerification.EIDOverallResult.toLowerCase() !== 'passed' && (\r\n                                            <div style={{\r\n                                                marginTop: '12px',\r\n                                                paddingTop: '8px',\r\n                                                borderTop: '1px solid rgba(102, 102, 102, 0.1)'\r\n                                            }}>\r\n                                                <button style={{\r\n                                                    padding: '6px 12px',\r\n                                                    fontSize: '0.7rem',\r\n                                                    fontWeight: 600,\r\n                                                    backgroundColor: colours.red,\r\n                                                    color: '#fff',\r\n                                                    border: 'none',\r\n                                                    borderRadius: '3px',\r\n                                                    cursor: 'pointer',\r\n                                                    transition: 'opacity 0.2s'\r\n                                                }}\r\n                                                onMouseOver={(e) => e.currentTarget.style.opacity = '0.9'}\r\n                                                onMouseOut={(e) => e.currentTarget.style.opacity = '1'}\r\n                                                >\r\n                                                    Review Required\r\n                                                </button>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            )}\r\n\r\n            {/* Documents Section - shown when expanded */}\r\n            {expanded && data.allData && (\r\n                <div style={{\r\n                    marginTop: '16px',\r\n                    padding: '16px',\r\n                    backgroundColor: 'rgba(54, 144, 206, 0.03)',\r\n                    borderRadius: '4px',\r\n                    border: '1px solid rgba(54, 144, 206, 0.1)'\r\n                }}>\r\n                    <div style={{\r\n                        fontSize: '0.8rem',\r\n                        fontWeight: 600,\r\n                        color: '#3690CE',\r\n                        marginBottom: '12px',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        gap: '6px'\r\n                    }}>\r\n                        � Compliance Documents\r\n                    </div>\r\n                    \r\n                    {(() => {\r\n                        const documents = data.allData\r\n                            .filter(item => item.documents && item.documents.length > 0)\r\n                            .flatMap(item => item.documents);\r\n                        \r\n                        if (documents.length === 0) {\r\n                            return (\r\n                                <div style={{\r\n                                    fontSize: '0.75rem',\r\n                                    color: '#666',\r\n                                    fontStyle: 'italic',\r\n                                    textAlign: 'center',\r\n                                    padding: '8px'\r\n                                }}>\r\n                                    No documents uploaded\r\n                                </div>\r\n                            );\r\n                        }\r\n                        \r\n                        return (\r\n                            <div style={{\r\n                                display: 'grid',\r\n                                gap: '8px',\r\n                                gridTemplateColumns: 'repeat(auto-fit, minmax(280px, 1fr))'\r\n                            }}>\r\n                                {documents.map((doc: any, docIndex: number) => (\r\n                                    <div key={docIndex} style={{\r\n                                        display: 'flex',\r\n                                        alignItems: 'center',\r\n                                        justifyContent: 'space-between',\r\n                                        padding: '10px 12px',\r\n                                        backgroundColor: 'white',\r\n                                        borderRadius: '4px',\r\n                                        border: '1px solid #e1e4e8',\r\n                                        fontSize: '0.75rem',\r\n                                        boxShadow: '0 1px 3px rgba(0,0,0,0.1)'\r\n                                    }}>\r\n                                        <div style={{\r\n                                            display: 'flex',\r\n                                            alignItems: 'center',\r\n                                            flex: 1\r\n                                        }}>\r\n                                            <div style={{\r\n                                                marginRight: '10px',\r\n                                                fontSize: '1.1rem',\r\n                                                color: '#3690CE'\r\n                                            }}>\r\n                                                {getFileIcon(doc.FileName)}\r\n                                            </div>\r\n                                            <div>\r\n                                                <div style={{\r\n                                                    fontWeight: 500,\r\n                                                    color: '#24292f',\r\n                                                    marginBottom: '2px'\r\n                                                }}>\r\n                                                    {doc.FileName || 'Unnamed document'}\r\n                                                </div>\r\n                                                <div style={{\r\n                                                    color: '#666',\r\n                                                    fontSize: '0.7rem',\r\n                                                    display: 'flex',\r\n                                                    flexDirection: 'column',\r\n                                                    gap: '2px'\r\n                                                }}>\r\n                                                    {doc.DocumentId && (\r\n                                                        <span style={{ fontFamily: 'monospace', fontSize: '0.65rem' }}>\r\n                                                            ID: {doc.DocumentId}\r\n                                                        </span>\r\n                                                    )}\r\n                                                    {doc.FileSizeBytes && (\r\n                                                        <span>{Math.round(doc.FileSizeBytes / 1024)}KB</span>\r\n                                                    )}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\r\n                                            {/* Copy URL Link Icon */}\r\n                                            {(doc.BlobUrl || doc.DocumentUrl) && (\r\n                                                <button\r\n                                                    onClick={(e) => {\r\n                                                        e.stopPropagation();\r\n                                                        handleCopyUrl(doc);\r\n                                                    }}\r\n                                                    style={{\r\n                                                        color: '#666',\r\n                                                        backgroundColor: 'transparent',\r\n                                                        border: 'none',\r\n                                                        cursor: 'pointer',\r\n                                                        padding: '4px',\r\n                                                        borderRadius: '3px',\r\n                                                        fontSize: '0.8rem',\r\n                                                        transition: 'all 0.2s ease',\r\n                                                        display: 'flex',\r\n                                                        alignItems: 'center',\r\n                                                        justifyContent: 'center'\r\n                                                    }}\r\n                                                    onMouseOver={(e) => {\r\n                                                        e.currentTarget.style.backgroundColor = '#f5f5f5';\r\n                                                        e.currentTarget.style.color = '#3690CE';\r\n                                                    }}\r\n                                                    onMouseOut={(e) => {\r\n                                                        e.currentTarget.style.backgroundColor = 'transparent';\r\n                                                        e.currentTarget.style.color = '#666';\r\n                                                    }}\r\n                                                    title=\"Copy document URL\"\r\n                                                >\r\n                                                    <FaLink />\r\n                                                </button>\r\n                                            )}\r\n                                            {/* Download/Preview Button */}\r\n                                            {(doc.BlobUrl || doc.DocumentUrl) && (\r\n                                                <button\r\n                                                    onClick={() => handleDocumentClick(doc)}\r\n                                                    style={{\r\n                                                        color: '#3690CE',\r\n                                                        textDecoration: 'none',\r\n                                                        fontSize: '0.7rem',\r\n                                                        fontWeight: 500,\r\n                                                        padding: '4px 8px',\r\n                                                        borderRadius: '3px',\r\n                                                        border: '1px solid #3690CE',\r\n                                                        backgroundColor: 'transparent',\r\n                                                        transition: 'all 0.2s ease',\r\n                                                        cursor: 'pointer'\r\n                                                    }}\r\n                                                    onMouseOver={(e) => {\r\n                                                        e.currentTarget.style.backgroundColor = '#3690CE';\r\n                                                        e.currentTarget.style.color = 'white';\r\n                                                    }}\r\n                                                    onMouseOut={(e) => {\r\n                                                        e.currentTarget.style.backgroundColor = 'transparent';\r\n                                                        e.currentTarget.style.color = '#3690CE';\r\n                                                    }}\r\n                                                >\r\n                                                    <FaDownload style={{ fontSize: '0.65rem' }} /> \r\n                                                    {(() => {\r\n                                                        const filename = doc.FileName || '';\r\n                                                        const ext = filename.split('.').pop()?.toLowerCase() ?? '';\r\n                                                        const previewableTypes = ['pdf', 'jpg', 'jpeg', 'png', 'gif', 'svg', 'webp'];\r\n                                                        return previewableTypes.includes(ext) ? 'Preview' : 'Download';\r\n                                                    })()} Document\r\n                                                </button>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        );\r\n                    })()}\r\n                </div>\r\n            )}\r\n\r\n            {/* Quick Summary Grid - shown when not expanded */}\r\n            {!expanded && (\r\n                <div style={{\r\n                    display: 'grid',\r\n                    gridTemplateColumns: 'repeat(auto-fit, minmax(120px, 1fr))',\r\n                    gap: '8px',\r\n                    backgroundColor: 'rgba(0,0,0,0.02)',\r\n                    padding: '8px',\r\n                    borderRadius: '0px'\r\n                }}>\r\n                    {/* Overall Compliance Status */}\r\n                    <div>\r\n                        <div style={{ fontSize: '0.7rem', color: '#666', marginBottom: '2px' }}>Overall Status</div>\r\n                        <div style={{\r\n                            fontSize: '0.8rem',\r\n                            fontWeight: 600,\r\n                            color: '#3690CE',\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            gap: '4px'\r\n                        }}>\r\n                            <span style={{\r\n                                width: '8px',\r\n                                height: '8px',\r\n                                borderRadius: '50%',\r\n                                backgroundColor: '#3690CE'\r\n                            }} />\r\n                            {data.stage || 'In Progress'}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Total Clients */}\r\n                    {isMultiClient && (\r\n                        <div>\r\n                            <div style={{ fontSize: '0.7rem', color: '#666', marginBottom: '2px' }}>Total Clients</div>\r\n                            <div style={{ fontSize: '0.8rem', fontWeight: 600 }}>\r\n                                {data.clients.length} ({leadClient ? '1 Lead + ' : ''}{jointClients.length} Joint)\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* Verifications Complete */}\r\n                    <div>\r\n                        <div style={{ fontSize: '0.7rem', color: '#666', marginBottom: '2px' }}>ID Verified</div>\r\n                        <div style={{ fontSize: '0.8rem', fontWeight: 600 }}>\r\n                            {data.clients ? \r\n                                data.clients.filter(c => getClientVerificationStatus(c) === 'complete').length \r\n                                : 0} / {data.clients?.length || 0}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Risk Level */}\r\n                    <div>\r\n                        <div style={{ fontSize: '0.7rem', color: '#666', marginBottom: '2px' }}>Risk Level</div>\r\n                        <div style={{\r\n                            fontSize: '0.8rem',\r\n                            fontWeight: 600,\r\n                            color: getRiskColor(riskResult || ''),\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            gap: '4px'\r\n                        }}>\r\n                            <span style={{\r\n                                width: '8px',\r\n                                height: '8px',\r\n                                borderRadius: '50%',\r\n                                backgroundColor: getRiskColor(riskResult || '')\r\n                            }} />\r\n                            {riskResult || 'Pending'}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RiskComplianceCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Modal,\r\n  Stack,\r\n  Text,\r\n  TextField,\r\n  DefaultButton,\r\n  PrimaryButton,\r\n  Spinner,\r\n  MessageBar,\r\n  MessageBarType,\r\n  SearchBox,\r\n  List,\r\n  FontIcon,\r\n  Persona,\r\n  PersonaSize,\r\n  PersonaPresence,\r\n  Checkbox\r\n} from '@fluentui/react';\r\nimport { useTheme } from '../../../app/functionality/ThemeContext';\r\nimport { colours } from '../../../app/styles/colours';\r\n\r\n// Helper functions for consistent theming\r\nconst mutedText = (dark: boolean): string => (\r\n  dark ? 'rgba(226, 232, 240, 0.72)' : colours.greyText\r\n);\r\n\r\nconst cardBackground = (dark: boolean): string => (\r\n  dark\r\n    ? 'linear-gradient(135deg, rgba(30, 41, 59, 0.92) 0%, rgba(15, 23, 42, 0.96) 100%)'\r\n    : '#FFFFFF'\r\n);\r\n\r\nconst borderColour = (dark: boolean): string => (\r\n  dark ? 'rgba(148, 163, 184, 0.32)' : '#e2e8f0'\r\n);\r\n\r\nconst textColor = (dark: boolean): string => (\r\n  dark ? '#e2e8f0' : '#374151'\r\n);\r\n\r\nconst hoverBackground = (dark: boolean): string => (\r\n  dark ? 'rgba(51, 65, 85, 0.6)' : '#f8f9fa'\r\n);\r\n\r\ninterface ClientLookupModalProps {\r\n  isOpen: boolean;\r\n  onDismiss: () => void;\r\n  onClientSelected: (client: ClioClient) => void;\r\n  userInitials: string;\r\n}\r\n\r\ninterface ClioClient {\r\n  id: string;\r\n  name: string;\r\n  firstName?: string;\r\n  lastName?: string;\r\n  email: string;\r\n  phone?: string;\r\n  type: 'Person' | 'Company';\r\n}\r\n\r\nconst ClientLookupModal: React.FC<ClientLookupModalProps> = ({\r\n  isOpen,\r\n  onDismiss,\r\n  onClientSelected,\r\n  userInitials\r\n}) => {\r\n  const { isDarkMode } = useTheme();\r\n  const [searchEmail, setSearchEmail] = useState('');\r\n  const [searchResults, setSearchResults] = useState<ClioClient[]>([]);\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [hasSearched, setHasSearched] = useState(false);\r\n  const [searchPrimary, setSearchPrimary] = useState(true); // Primary email (read-only, always checked)\r\n  const [searchHome, setSearchHome] = useState(false);\r\n  const [searchOther, setSearchOther] = useState(false);\r\n\r\n  // Clear state when modal opens/closes\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      setSearchEmail('');\r\n      setSearchResults([]);\r\n      setError(null);\r\n      setHasSearched(false);\r\n    }\r\n  }, [isOpen]);\r\n\r\n  // Debounced search function\r\n  useEffect(() => {\r\n    const timeoutId = setTimeout(() => {\r\n      if (searchEmail.trim().length >= 3 && searchEmail.includes('@')) {\r\n        performSearch(searchEmail.trim());\r\n      } else {\r\n        setSearchResults([]);\r\n        setHasSearched(false);\r\n      }\r\n    }, 500);\r\n\r\n    return () => clearTimeout(timeoutId);\r\n  }, [searchEmail, searchPrimary, searchHome, searchOther]); // Re-search when email types change\r\n\r\n  const performSearch = async (email: string) => {\r\n    setIsSearching(true);\r\n    setError(null);\r\n    setHasSearched(true);\r\n\r\n    try {\r\n      const emailTypes = [];\r\n      if (searchPrimary) emailTypes.push('primary');\r\n      if (searchHome) emailTypes.push('home');\r\n      if (searchOther) emailTypes.push('other');\r\n      \r\n      const response = await fetch(`/api/clio-client-lookup/search?email=${encodeURIComponent(email)}&initials=${userInitials}&emailTypes=${emailTypes.join(',')}`);\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Search failed');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setSearchResults(data.clients || []);\r\n    } catch (err) {\r\n      console.error('Client search error:', err);\r\n      setError(err instanceof Error ? err.message : 'Failed to search clients');\r\n      setSearchResults([]);\r\n    } finally {\r\n      setIsSearching(false);\r\n    }\r\n  };\r\n\r\n  const handleClientSelect = (client: ClioClient) => {\r\n    onClientSelected(client);\r\n    onDismiss();\r\n  };\r\n\r\n  const renderClientItem = (client: ClioClient, index: number | undefined) => {\r\n    const isCompany = client.type === 'Company';\r\n    const initials = isCompany ? \r\n      client.name.split(' ').map(w => w[0]).join('').slice(0, 2).toUpperCase() :\r\n      `${client.firstName?.[0] || ''}${client.lastName?.[0] || ''}`.toUpperCase();\r\n\r\n    return (\r\n      <div\r\n        key={client.id}\r\n        style={{\r\n          padding: '12px 16px',\r\n          borderBottom: `1px solid ${borderColour(isDarkMode)}`,\r\n          cursor: 'pointer',\r\n          transition: 'background-color 0.2s ease'\r\n        }}\r\n        onClick={() => handleClientSelect(client)}\r\n        onMouseEnter={(e) => {\r\n          e.currentTarget.style.backgroundColor = hoverBackground(isDarkMode);\r\n        }}\r\n        onMouseLeave={(e) => {\r\n          e.currentTarget.style.backgroundColor = 'transparent';\r\n        }}\r\n      >\r\n        <Stack horizontal verticalAlign=\"center\" tokens={{ childrenGap: 12 }}>\r\n          <Persona\r\n            text={client.name}\r\n            secondaryText={client.email}\r\n            size={PersonaSize.size40}\r\n            presence={PersonaPresence.none}\r\n            initialsColor={colours.highlight}\r\n          />\r\n          <Stack grow>\r\n            <Stack horizontal verticalAlign=\"center\" tokens={{ childrenGap: 8 }}>\r\n              <Text \r\n                variant=\"mediumPlus\" \r\n                style={{ \r\n                  fontWeight: 600,\r\n                  color: isDarkMode ? '#e2e8f0' : '#374151'\r\n                }}\r\n              >\r\n                {client.name}\r\n              </Text>\r\n              <Text \r\n                variant=\"small\" \r\n                style={{ \r\n                  color: isDarkMode ? 'rgba(226, 232, 240, 0.72)' : colours.greyText,\r\n                  backgroundColor: isDarkMode ? '#1e293b' : '#f4f4f6',\r\n                  padding: '2px 6px',\r\n                  borderRadius: '4px',\r\n                  fontSize: '10px',\r\n                  fontWeight: 500\r\n                }}\r\n              >\r\n                {client.type}\r\n              </Text>\r\n            </Stack>\r\n            <Text \r\n              variant=\"small\" \r\n              style={{ \r\n                color: isDarkMode ? 'rgba(226, 232, 240, 0.72)' : colours.greyText \r\n              }}\r\n            >\r\n              {client.email}\r\n            </Text>\r\n            {client.phone && (\r\n              <Text \r\n                variant=\"small\" \r\n                style={{ \r\n                  color: isDarkMode ? 'rgba(226, 232, 240, 0.72)' : colours.greyText \r\n                }}\r\n              >\r\n                {client.phone}\r\n              </Text>\r\n            )}\r\n          </Stack>\r\n          <FontIcon \r\n            iconName=\"ChevronRight\" \r\n            style={{ \r\n              color: isDarkMode ? 'rgba(226, 232, 240, 0.72)' : colours.greyText,\r\n              fontSize: '12px'\r\n            }} \r\n          />\r\n        </Stack>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      onDismiss={onDismiss}\r\n      isBlocking={false}\r\n      containerClassName=\"client-lookup-modal\"\r\n      styles={{\r\n        main: {\r\n          maxWidth: '600px',\r\n          width: '90vw',\r\n          maxHeight: '80vh',\r\n          backgroundColor: isDarkMode ? '#1e293b' : '#ffffff',\r\n          borderRadius: '8px'\r\n        }\r\n      }}\r\n    >\r\n      <Stack tokens={{ childrenGap: 16 }} styles={{ root: { padding: '24px' } }}>\r\n        {/* Header */}\r\n        <Stack horizontal horizontalAlign=\"space-between\" verticalAlign=\"center\">\r\n          <Text \r\n            variant=\"xLarge\" \r\n            style={{ \r\n              fontWeight: 600,\r\n              color: isDarkMode ? '#e2e8f0' : '#374151'\r\n            }}\r\n          >\r\n            Link Additional Client\r\n          </Text>\r\n          <DefaultButton\r\n            iconProps={{ iconName: 'Cancel' }}\r\n            onClick={onDismiss}\r\n            styles={{\r\n              root: {\r\n                minWidth: 'auto',\r\n                padding: '8px',\r\n                backgroundColor: 'transparent',\r\n                border: 'none'\r\n              }\r\n            }}\r\n          />\r\n        </Stack>\r\n\r\n        {/* Description */}\r\n        <Text \r\n          variant=\"medium\" \r\n          style={{ \r\n            color: isDarkMode ? 'rgba(226, 232, 240, 0.72)' : colours.greyText,\r\n            lineHeight: '1.4'\r\n          }}\r\n        >\r\n          Search for existing clients in Clio by email address to link them to this matter.\r\n        </Text>\r\n\r\n        {/* Search Input */}\r\n        <SearchBox\r\n          placeholder=\"Enter client email address...\"\r\n          value={searchEmail}\r\n          onChange={(_, newValue) => setSearchEmail(newValue || '')}\r\n          styles={{\r\n            root: {\r\n              borderColor: isDarkMode ? colours.dark.border : '#d0d0d7',\r\n              backgroundColor: isDarkMode ? colours.dark.background : '#ffffff'\r\n            }\r\n          }}\r\n        />\r\n\r\n        {/* Search Options */}\r\n        <Stack tokens={{ childrenGap: 8 }}>\r\n          <Text \r\n            variant=\"medium\" \r\n            style={{ \r\n              color: isDarkMode ? '#e2e8f0' : '#374151',\r\n              fontWeight: 600,\r\n              fontSize: '14px'\r\n            }}\r\n          >\r\n            Search in email types:\r\n          </Text>\r\n          <Stack tokens={{ childrenGap: 4 }}>\r\n            <Checkbox\r\n              label=\"Primary email address\"\r\n              checked={searchPrimary}\r\n              disabled={true} // Always checked, read-only\r\n              styles={{\r\n                text: {\r\n                  color: isDarkMode ? 'rgba(226, 232, 240, 0.72)' : colours.greyText,\r\n                  fontSize: '14px'\r\n                },\r\n                checkbox: {\r\n                  opacity: 0.7 // Visual indication it's disabled\r\n                }\r\n              }}\r\n            />\r\n            <Checkbox\r\n              label=\"Home email address\"\r\n              checked={searchHome}\r\n              onChange={(_, checked) => setSearchHome(checked || false)}\r\n              styles={{\r\n                text: {\r\n                  color: isDarkMode ? 'rgba(226, 232, 240, 0.72)' : colours.greyText,\r\n                  fontSize: '14px'\r\n                }\r\n              }}\r\n            />\r\n            <Checkbox\r\n              label=\"Other email addresses\"\r\n              checked={searchOther}\r\n              onChange={(_, checked) => setSearchOther(checked || false)}\r\n              styles={{\r\n                text: {\r\n                  color: isDarkMode ? 'rgba(226, 232, 240, 0.72)' : colours.greyText,\r\n                  fontSize: '14px'\r\n                }\r\n              }}\r\n            />\r\n          </Stack>\r\n        </Stack>\r\n\r\n        {/* Error Message */}\r\n        {error && (\r\n          <MessageBar messageBarType={MessageBarType.error} onDismiss={() => setError(null)}>\r\n            {error}\r\n          </MessageBar>\r\n        )}\r\n\r\n        {/* Loading Indicator */}\r\n        {isSearching && (\r\n          <Stack horizontal verticalAlign=\"center\" tokens={{ childrenGap: 8 }}>\r\n            <Spinner size={1} />\r\n            <Text style={{ color: isDarkMode ? 'rgba(226, 232, 240, 0.72)' : colours.greyText }}>\r\n              Searching Clio for clients...\r\n            </Text>\r\n          </Stack>\r\n        )}\r\n\r\n        {/* Search Results */}\r\n        {hasSearched && !isSearching && (\r\n          <Stack>\r\n            <Text \r\n              variant=\"medium\" \r\n              style={{ \r\n                fontWeight: 600,\r\n                marginBottom: '8px',\r\n                color: isDarkMode ? '#e2e8f0' : '#374151'\r\n              }}\r\n            >\r\n              Search Results ({searchResults.length})\r\n            </Text>\r\n            \r\n            {searchResults.length === 0 ? (\r\n              <Stack \r\n                horizontalAlign=\"center\" \r\n                verticalAlign=\"center\" \r\n                styles={{ \r\n                  root: { \r\n                    padding: '32px',\r\n                    backgroundColor: isDarkMode ? colours.dark.background : '#f8f9fa',\r\n                    borderRadius: '8px',\r\n                    border: `1px dashed ${isDarkMode ? colours.dark.border : '#d0d0d7'}`\r\n                  } \r\n                }}\r\n              >\r\n                <FontIcon \r\n                  iconName=\"SearchIssue\" \r\n                  style={{ \r\n                    fontSize: '24px',\r\n                    color: isDarkMode ? 'rgba(226, 232, 240, 0.72)' : colours.greyText,\r\n                    marginBottom: '8px'\r\n                  }} \r\n                />\r\n                <Text \r\n                  variant=\"medium\" \r\n                  style={{ \r\n                    color: isDarkMode ? 'rgba(226, 232, 240, 0.72)' : colours.greyText,\r\n                    textAlign: 'center'\r\n                  }}\r\n                >\r\n                  No clients found matching \"{searchEmail}\"\r\n                </Text>\r\n                <Text \r\n                  variant=\"small\" \r\n                  style={{ \r\n                    color: isDarkMode ? 'rgba(226, 232, 240, 0.72)' : colours.greyText,\r\n                    textAlign: 'center',\r\n                    marginTop: '4px'\r\n                  }}\r\n                >\r\n                  Try a different email address or check the spelling\r\n                </Text>\r\n              </Stack>\r\n            ) : (\r\n              <div\r\n                style={{\r\n                  maxHeight: '300px',\r\n                  overflow: 'auto',\r\n                  border: `1px solid ${isDarkMode ? colours.dark.border : '#e1e5e9'}`,\r\n                  borderRadius: '6px'\r\n                }}\r\n              >\r\n                {searchResults.map((client, index) => renderClientItem(client, index))}\r\n              </div>\r\n            )}\r\n          </Stack>\r\n        )}\r\n\r\n        {/* Footer */}\r\n        <Stack horizontal horizontalAlign=\"end\" tokens={{ childrenGap: 8 }}>\r\n          <DefaultButton onClick={onDismiss}>Cancel</DefaultButton>\r\n        </Stack>\r\n      </Stack>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ClientLookupModal;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Stack,\r\n  Text,\r\n  DefaultButton,\r\n  Spinner,\r\n  SpinnerSize,\r\n  MessageBar,\r\n  MessageBarType,\r\n  FontIcon,\r\n  Persona,\r\n  PersonaSize,\r\n  PersonaPresence,\r\n  IconButton,\r\n  TooltipHost\r\n} from '@fluentui/react';\r\nimport { useTheme } from '../../../app/functionality/ThemeContext';\r\nimport { colours } from '../../../app/styles/colours';\r\nimport ClientLookupModal from './ClientLookupModal';\r\nimport clioIcon from '../../../assets/clio.svg';\r\n\r\ninterface RelatedClientsSectionProps {\r\n  instructionRef: string;\r\n  relatedClientIds?: string; // Comma-separated Clio client IDs from database\r\n  mainClientId?: string; // Main Clio client ID from matter (if exists)\r\n  userInitials: string;\r\n  originDeal?: OriginDeal | null;\r\n  onRelatedClientsUpdate?: (relatedClientIds: string) => void;\r\n}\r\n\r\ninterface OriginDeal {\r\n  title?: string;\r\n  reference?: string | number;\r\n  stage?: string;\r\n  service?: string;\r\n  amount?: number | string;\r\n  currency?: string;\r\n  createdDate?: string;\r\n  owner?: string;\r\n  pitchedAt?: string;\r\n}\r\n\r\ninterface CustomFieldValue {\r\n  id: string;\r\n  field_name: string;\r\n  value: string;\r\n}\r\n\r\ninterface ClioClient {\r\n  id: string;\r\n  name: string;\r\n  firstName?: string;\r\n  lastName?: string;\r\n  email: string;\r\n  phone?: string;\r\n  type: 'Person' | 'Company';\r\n  // Additional fields that might be available from Clio API\r\n  primary_email_address?: string;\r\n  primary_phone_number?: string;\r\n  company?: string;\r\n  title?: string;\r\n  custom_fields?: Record<string, any>;\r\n  custom_field_values?: CustomFieldValue[];\r\n  created_at?: string;\r\n  updated_at?: string;\r\n}\r\n\r\nconst RelatedClientsSection: React.FC<RelatedClientsSectionProps> = ({\r\n  instructionRef,\r\n  relatedClientIds,\r\n  mainClientId,\r\n  userInitials,\r\n  originDeal,\r\n  onRelatedClientsUpdate\r\n}) => {\r\n  const { isDarkMode } = useTheme();\r\n  const [relatedClients, setRelatedClients] = useState<ClioClient[]>([]);\r\n  const [mainClient, setMainClient] = useState<ClioClient | null>(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isLoadingCustomFields, setIsLoadingCustomFields] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [showLookupModal, setShowLookupModal] = useState(false);\r\n  const [isUpdating, setIsUpdating] = useState(false);\r\n\r\n  // Debug: Track component lifecycle\r\n  useEffect(() => {\r\n    console.log('RelatedClientsSection mounted for instruction:', instructionRef);\r\n    return () => {\r\n      console.log('RelatedClientsSection unmounting for instruction:', instructionRef);\r\n    };\r\n  }, [instructionRef]);\r\n\r\n  // Load related client details when relatedClientIds changes\r\n  useEffect(() => {\r\n    if (relatedClientIds && relatedClientIds.trim() !== '') {\r\n      loadRelatedClients(relatedClientIds);\r\n    } else {\r\n      setRelatedClients([]);\r\n    }\r\n  }, [relatedClientIds, userInitials]);\r\n\r\n  useEffect(() => {\r\n    console.log('RelatedClientsSection - mainClientId changed:', mainClientId);\r\n    if (mainClientId && mainClientId.trim() !== '') {\r\n      loadMainClient(mainClientId);\r\n    } else {\r\n      console.log('RelatedClientsSection - no mainClientId, setting null');\r\n      setMainClient(null);\r\n    }\r\n  }, [mainClientId, userInitials]);\r\n\r\n  const fetchClientCustomFields = async (clientId: string): Promise<CustomFieldValue[]> => {\r\n    try {\r\n      console.log('Fetching custom fields for client:', clientId);\r\n      const response = await fetch(`/api/clio-client-lookup/client/${clientId}/custom-fields?initials=${userInitials}`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log('Custom fields loaded for client', clientId, ':', data.custom_field_values);\r\n        return data.custom_field_values || [];\r\n      } else {\r\n        console.warn('Failed to load custom fields for client', clientId, '- response not ok:', response.status);\r\n        return [];\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading custom fields for client', clientId, ':', error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const loadMainClient = async (clientId: string) => {\r\n    try {\r\n      console.log('Loading main client with ID:', clientId);\r\n      setIsLoadingCustomFields(true);\r\n      \r\n      // Load basic client data\r\n      const response = await fetch(`/api/clio-client-lookup/client/${clientId}?initials=${userInitials}`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log('Main client loaded successfully:', data.client);\r\n        \r\n        // Set basic client data first\r\n        setMainClient(data.client);\r\n        \r\n        // Load custom fields for this client\r\n        const customFields = await fetchClientCustomFields(clientId);\r\n        \r\n        // Combine the data\r\n        const clientWithCustomFields = {\r\n          ...data.client,\r\n          custom_field_values: customFields\r\n        };\r\n        \r\n        setMainClient(clientWithCustomFields);\r\n      } else {\r\n        console.error('Failed to load main client - response not ok:', response.status);\r\n        setMainClient(null);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading main client:', error);\r\n      setMainClient(null);\r\n    } finally {\r\n      setIsLoadingCustomFields(false);\r\n    }\r\n  };\r\n\r\n  const loadRelatedClients = async (clientIds: string) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const ids = clientIds.split(',').map(id => id.trim()).filter(id => id !== '');\r\n      const clientPromises = ids.map(async (clientId) => {\r\n        try {\r\n          // Load basic client data\r\n          const response = await fetch(`/api/clio-client-lookup/client/${clientId}?initials=${userInitials}`);\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            \r\n            // Load custom fields for this client\r\n            const customFields = await fetchClientCustomFields(clientId);\r\n            \r\n            // Combine the data\r\n            return {\r\n              ...data.client,\r\n              custom_field_values: customFields\r\n            };\r\n          }\r\n          return null;\r\n        } catch (err) {\r\n          console.error(`Failed to load client ${clientId}:`, err);\r\n          return null;\r\n        }\r\n      });\r\n\r\n      const clients = await Promise.all(clientPromises);\r\n      const validClients = clients.filter(client => client !== null) as ClioClient[];\r\n      setRelatedClients(validClients);\r\n    } catch (err) {\r\n      console.error('Error loading related clients:', err);\r\n      setError('Failed to load related client details');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleAddClient = async (client: ClioClient) => {\r\n    // Prevent adding the main client as a related client\r\n    if (mainClientId && client.id === mainClientId) {\r\n      setError('This client is already the main client for this matter.');\r\n      return;\r\n    }\r\n\r\n    // Check if client is already in related clients\r\n    if (relatedClients.some(existingClient => existingClient.id === client.id)) {\r\n      setError('This client is already added as a related client.');\r\n      return;\r\n    }\r\n\r\n    setIsUpdating(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch('/api/related-clients/add', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          instructionRef,\r\n          clientId: client.id\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Failed to add related client');\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      // Update the parent component with new related client IDs\r\n      if (onRelatedClientsUpdate) {\r\n        onRelatedClientsUpdate(data.relatedClientId);\r\n      }\r\n\r\n      // Add the new client to our local state immediately for better UX\r\n      setRelatedClients(prev => [...prev, client]);\r\n    } catch (err) {\r\n      console.error('Error adding related client:', err);\r\n      setError(err instanceof Error ? err.message : 'Failed to add related client');\r\n    } finally {\r\n      setIsUpdating(false);\r\n    }\r\n  };\r\n\r\n  const handleRemoveClient = async (clientId: string) => {\r\n    setIsUpdating(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch('/api/related-clients/remove', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          instructionRef,\r\n          clientId\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Failed to remove related client');\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      // Update the parent component with updated related client IDs\r\n      if (onRelatedClientsUpdate) {\r\n        onRelatedClientsUpdate(data.relatedClientId || '');\r\n      }\r\n\r\n      // Remove the client from our local state immediately for better UX\r\n      setRelatedClients(prev => prev.filter(client => client.id !== clientId));\r\n    } catch (err) {\r\n      console.error('Error removing related client:', err);\r\n      setError(err instanceof Error ? err.message : 'Failed to remove related client');\r\n    } finally {\r\n      setIsUpdating(false);\r\n    }\r\n  };\r\n\r\n  const renderClientCard = (client: ClioClient, isMainClient: boolean = false) => {\r\n    // Determine the best email and phone to display\r\n    const displayEmail = client.primary_email_address || client.email;\r\n    const displayPhone = client.primary_phone_number || client.phone;\r\n    \r\n    // Extract relevant custom fields for display from the structured custom_field_values\r\n    const customFieldsToShow = client.custom_field_values \r\n      ? client.custom_field_values\r\n          .filter(field => field.value && String(field.value).trim() !== '')\r\n      : [];\r\n\r\n    return (\r\n      <div\r\n        key={client.id}\r\n        style={{\r\n          padding: '16px',\r\n          border: `1px solid ${isDarkMode ? colours.dark.border : '#e1e5e9'}`,\r\n          borderRadius: '8px',\r\n          backgroundColor: isDarkMode ? '#1e293b' : '#ffffff',\r\n          position: 'relative',\r\n          boxShadow: isDarkMode ? '0 4px 12px rgba(2, 6, 23, 0.25)' : '0 2px 8px rgba(15, 23, 42, 0.06)'\r\n        }}\r\n      >\r\n        <Stack tokens={{ childrenGap: 12 }}>\r\n          {/* Header row with avatar, name, and actions */}\r\n          <Stack horizontal verticalAlign=\"center\" tokens={{ childrenGap: 12 }}>\r\n            {/* Custom Clio icon avatar - clickable to open in Clio */}\r\n            <div \r\n              style={{\r\n                width: 40,\r\n                height: 40,\r\n                borderRadius: '50%',\r\n                backgroundColor: isDarkMode ? '#334155' : '#f8fafc',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                border: `2px solid ${isDarkMode ? colours.dark.border : '#e2e8f0'}`,\r\n                flexShrink: 0,\r\n                boxShadow: isDarkMode ? '0 2px 8px rgba(0, 0, 0, 0.3)' : '0 2px 4px rgba(0, 0, 0, 0.1)',\r\n                cursor: 'pointer',\r\n                transition: 'all 0.2s ease'\r\n              }}\r\n              onClick={() => window.open(`https://eu.app.clio.com/nc/#/contacts/${client.id}`, '_blank')}\r\n              title=\"Open in Clio\"\r\n            >\r\n              <img \r\n                src={clioIcon} \r\n                alt=\"Clio Client\" \r\n                style={{ \r\n                  width: 20, \r\n                  height: 20,\r\n                  opacity: isDarkMode ? 0.9 : 1\r\n                }} \r\n              />\r\n            </div>\r\n            \r\n            <Stack grow>\r\n              <Stack horizontal verticalAlign=\"center\" tokens={{ childrenGap: 8 }}>\r\n                <Text \r\n                  variant=\"mediumPlus\" \r\n                  style={{ \r\n                    fontWeight: 600,\r\n                    color: isDarkMode ? '#e2e8f0' : '#374151'\r\n                  }}\r\n                >\r\n                  {client.name}\r\n                </Text>\r\n                <Text \r\n                  variant=\"small\" \r\n                  style={{ \r\n                    color: isDarkMode ? 'rgba(226, 232, 240, 0.72)' : colours.greyText,\r\n                    backgroundColor: isDarkMode ? colours.dark.background : '#f4f4f6',\r\n                    padding: '3px 8px',\r\n                    borderRadius: '6px',\r\n                    fontSize: '10px',\r\n                    fontWeight: 600,\r\n                    textTransform: 'uppercase',\r\n                    letterSpacing: '0.025em'\r\n                  }}\r\n                >\r\n                  {client.type}\r\n                </Text>\r\n              </Stack>\r\n              \r\n              {/* Client ID */}\r\n              <Text \r\n                variant=\"small\" \r\n                style={{ \r\n                  color: isDarkMode ? 'rgba(226, 232, 240, 0.6)' : '#6b7280',\r\n                  fontSize: '11px',\r\n                  fontFamily: 'monospace'\r\n                }}\r\n              >\r\n                ID: {client.id}\r\n              </Text>\r\n            </Stack>\r\n            \r\n            {!isMainClient && (\r\n              <TooltipHost content=\"Remove related client\">\r\n                <IconButton\r\n                  iconProps={{ iconName: 'Cancel' }}\r\n                  onClick={() => handleRemoveClient(client.id)}\r\n                  disabled={isUpdating}\r\n                  styles={{\r\n                    root: {\r\n                      color: isDarkMode ? 'rgba(226, 232, 240, 0.72)' : colours.greyText,\r\n                      ':hover': {\r\n                        color: '#dc2626',\r\n                        backgroundColor: isDarkMode ? '#334155' : '#f8f9fa'\r\n                      }\r\n                    }\r\n                  }}\r\n                />\r\n              </TooltipHost>\r\n            )}\r\n          </Stack>\r\n\r\n          {/* Contact Information Grid */}\r\n          <div style={{\r\n            display: 'grid',\r\n            gridTemplateColumns: '1fr 1fr',\r\n            gap: '12px',\r\n            paddingTop: '8px',\r\n            borderTop: `1px solid ${isDarkMode ? '#334155' : '#f1f5f9'}`\r\n          }}>\r\n            {/* Email */}\r\n            {displayEmail && (\r\n              <div>\r\n                <Text \r\n                  variant=\"xSmall\" \r\n                  style={{ \r\n                    color: isDarkMode ? 'rgba(148, 163, 184, 0.9)' : '#64748b',\r\n                    textTransform: 'uppercase',\r\n                    fontWeight: 600,\r\n                    letterSpacing: '0.05em',\r\n                    marginBottom: '4px',\r\n                    display: 'block'\r\n                  }}\r\n                >\r\n                  Email\r\n                </Text>\r\n                <Text \r\n                  variant=\"small\" \r\n                  style={{ \r\n                    color: isDarkMode ? '#e2e8f0' : '#374151',\r\n                    fontWeight: 500,\r\n                    wordBreak: 'break-word'\r\n                  }}\r\n                >\r\n                  {displayEmail}\r\n                </Text>\r\n              </div>\r\n            )}\r\n            \r\n            {/* Phone */}\r\n            {displayPhone && (\r\n              <div>\r\n                <Text \r\n                  variant=\"xSmall\" \r\n                  style={{ \r\n                    color: isDarkMode ? 'rgba(148, 163, 184, 0.9)' : '#64748b',\r\n                    textTransform: 'uppercase',\r\n                    fontWeight: 600,\r\n                    letterSpacing: '0.05em',\r\n                    marginBottom: '4px',\r\n                    display: 'block'\r\n                  }}\r\n                >\r\n                  Phone\r\n                </Text>\r\n                <Text \r\n                  variant=\"small\" \r\n                  style={{ \r\n                    color: isDarkMode ? '#e2e8f0' : '#374151',\r\n                    fontWeight: 500\r\n                  }}\r\n                >\r\n                  {displayPhone}\r\n                </Text>\r\n              </div>\r\n            )}\r\n            \r\n            {/* Company/Title (if available) */}\r\n            {(client.company || client.title) && (\r\n              <div>\r\n                <Text \r\n                  variant=\"xSmall\" \r\n                  style={{ \r\n                    color: isDarkMode ? 'rgba(148, 163, 184, 0.9)' : '#64748b',\r\n                    textTransform: 'uppercase',\r\n                    fontWeight: 600,\r\n                    letterSpacing: '0.05em',\r\n                    marginBottom: '4px',\r\n                    display: 'block'\r\n                  }}\r\n                >\r\n                  {client.company ? 'Company' : 'Title'}\r\n                </Text>\r\n                <Text \r\n                  variant=\"small\" \r\n                  style={{ \r\n                    color: isDarkMode ? '#e2e8f0' : '#374151',\r\n                    fontWeight: 500\r\n                  }}\r\n                >\r\n                  {client.company || client.title}\r\n                </Text>\r\n              </div>\r\n            )}\r\n            \r\n            {/* Client Type details */}\r\n            <div>\r\n              <Text \r\n                variant=\"xSmall\" \r\n                style={{ \r\n                  color: isDarkMode ? 'rgba(148, 163, 184, 0.9)' : '#64748b',\r\n                  textTransform: 'uppercase',\r\n                  fontWeight: 600,\r\n                  letterSpacing: '0.05em',\r\n                  marginBottom: '4px',\r\n                  display: 'block'\r\n                }}\r\n              >\r\n                Type\r\n              </Text>\r\n              <Text \r\n                variant=\"small\" \r\n                style={{ \r\n                  color: isDarkMode ? '#e2e8f0' : '#374151',\r\n                  fontWeight: 500\r\n                }}\r\n              >\r\n                {client.type} {client.firstName && client.lastName ? `(${client.firstName} ${client.lastName})` : ''}\r\n              </Text>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Custom Fields (if any) */}\r\n          {(customFieldsToShow.length > 0 || (isLoadingCustomFields && isMainClient)) && (\r\n            <div style={{\r\n              paddingTop: '8px',\r\n              borderTop: `1px solid ${isDarkMode ? '#334155' : '#f1f5f9'}`\r\n            }}>\r\n              <Text \r\n                variant=\"xSmall\" \r\n                style={{ \r\n                  color: isDarkMode ? 'rgba(148, 163, 184, 0.9)' : '#64748b',\r\n                  textTransform: 'uppercase',\r\n                  fontWeight: 600,\r\n                  letterSpacing: '0.05em',\r\n                  marginBottom: '8px',\r\n                  display: 'block'\r\n                }}\r\n              >\r\n                Custom Fields\r\n              </Text>\r\n              \r\n              {isLoadingCustomFields && isMainClient ? (\r\n                <Stack horizontal verticalAlign=\"center\" tokens={{ childrenGap: 8 }}>\r\n                  <Spinner size={SpinnerSize.small} />\r\n                  <Text \r\n                    variant=\"small\" \r\n                    style={{ \r\n                      color: isDarkMode ? 'rgba(148, 163, 184, 0.8)' : '#64748b',\r\n                      fontStyle: 'italic'\r\n                    }}\r\n                  >\r\n                    Loading custom fields...\r\n                  </Text>\r\n                </Stack>\r\n              ) : customFieldsToShow.length > 0 ? (\r\n                <div style={{ \r\n                  display: 'grid', \r\n                  gridTemplateColumns: customFieldsToShow.length === 1 ? '1fr' : 'repeat(auto-fit, minmax(140px, 1fr))', \r\n                  gap: '8px' \r\n                }}>\r\n                  {customFieldsToShow.map((field) => (\r\n                    <div key={field.id}>\r\n                      <Text \r\n                        variant=\"xSmall\" \r\n                        style={{ \r\n                          color: isDarkMode ? 'rgba(226, 232, 240, 0.6)' : '#6b7280',\r\n                          fontWeight: 500,\r\n                          marginBottom: '2px',\r\n                          display: 'block'\r\n                        }}\r\n                      >\r\n                        {field.field_name}\r\n                      </Text>\r\n                      <Text \r\n                        variant=\"small\" \r\n                        style={{ \r\n                          color: isDarkMode ? '#e2e8f0' : '#374151',\r\n                          fontSize: '11px',\r\n                          wordBreak: 'break-word'\r\n                        }}\r\n                      >\r\n                        {field.value}\r\n                      </Text>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <Text \r\n                  variant=\"small\" \r\n                  style={{ \r\n                    color: isDarkMode ? 'rgba(148, 163, 184, 0.7)' : '#64748b',\r\n                    fontStyle: 'italic'\r\n                  }}\r\n                >\r\n                  No custom fields available\r\n                </Text>\r\n              )}\r\n            </div>\r\n          )}\r\n        </Stack>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const leadClientCard = () => {\r\n    if (!mainClient) {\r\n      return (\r\n        <Stack\r\n          horizontalAlign=\"center\"\r\n          verticalAlign=\"center\"\r\n          styles={{\r\n            root: {\r\n              padding: '20px',\r\n              backgroundColor: isDarkMode ? colours.dark.background : '#f8f9fa',\r\n              borderRadius: '6px',\r\n              border: `1px dashed ${isDarkMode ? colours.dark.border : '#d0d0d7'}`,\r\n              textAlign: 'center'\r\n            }\r\n          }}\r\n        >\r\n          <FontIcon\r\n            iconName=\"ContactInfo\"\r\n            style={{\r\n              fontSize: '22px',\r\n              color: isDarkMode ? 'rgba(226, 232, 240, 0.72)' : colours.greyText,\r\n              marginBottom: '8px'\r\n            }}\r\n          />\r\n          <Text\r\n            variant=\"small\"\r\n            style={{\r\n              color: isDarkMode ? 'rgba(226, 232, 240, 0.72)' : colours.greyText,\r\n              fontWeight: 600\r\n            }}\r\n          >\r\n            Lead client not linked\r\n          </Text>\r\n          <Text\r\n            variant=\"small\"\r\n            style={{\r\n              marginTop: '4px',\r\n              color: isDarkMode ? 'rgba(226, 232, 240, 0.72)' : colours.greyText\r\n            }}\r\n          >\r\n            Run the Matter Opening workflow to associate the primary client.\r\n          </Text>\r\n        </Stack>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          padding: '16px',\r\n          border: `1px solid ${isDarkMode ? colours.dark.border : '#e1e5e9'}`,\r\n          borderRadius: '8px',\r\n          backgroundColor: isDarkMode ? '#1e293b' : '#ffffff',\r\n          boxShadow: '0 10px 24px rgba(15, 23, 42, 0.08)'\r\n        }}\r\n      >\r\n        <Stack tokens={{ childrenGap: 12 }}>\r\n          <Stack horizontal horizontalAlign=\"space-between\" verticalAlign=\"center\">\r\n            <Stack horizontal verticalAlign=\"center\" tokens={{ childrenGap: 8 }}>\r\n              <FontIcon\r\n                iconName=\"Contact\"\r\n                style={{ fontSize: '14px', color: isDarkMode ? '#e2e8f0' : '#0f172a' }}\r\n              />\r\n              <Text\r\n                variant=\"medium\"\r\n                style={{\r\n                  fontWeight: 600,\r\n                  color: isDarkMode ? '#e2e8f0' : '#0f172a'\r\n                }}\r\n              >\r\n                Lead Client\r\n              </Text>\r\n            </Stack>\r\n            <Text\r\n              variant=\"small\"\r\n              style={{\r\n                color: isDarkMode ? 'rgba(226, 232, 240, 0.72)' : colours.greyText,\r\n                fontSize: '11px'\r\n              }}\r\n            >\r\n              Linked via Matter Opening\r\n            </Text>\r\n          </Stack>\r\n\r\n          {renderClientCard(mainClient, true)}\r\n        </Stack>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const connectorLine = (length: number = 32) => (\r\n    <div\r\n      style={{\r\n        height: length,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          width: '2px',\r\n          height: length - 8,\r\n          backgroundColor: isDarkMode ? '#334155' : '#d2d6dc',\r\n          borderRadius: '999px'\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  const originDealCard = () => {\r\n    if (!originDeal) return null;\r\n\r\n    const amountValue = originDeal.amount\r\n      ? typeof originDeal.amount === 'number'\r\n        ? new Intl.NumberFormat('en-GB', {\r\n            style: 'currency',\r\n            currency: originDeal.currency || 'GBP',\r\n            maximumFractionDigits: 0\r\n          }).format(originDeal.amount)\r\n        : originDeal.amount\r\n      : 'TBC';\r\n\r\n    const createdOn = originDeal.createdDate\r\n      ? new Date(originDeal.createdDate).toLocaleDateString()\r\n      : 'Pending';\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          padding: '16px',\r\n          border: `1px solid ${isDarkMode ? colours.dark.border : '#e1e5e9'}`,\r\n          borderRadius: '8px',\r\n          backgroundColor: isDarkMode ? '#111827' : '#f8fafc',\r\n          boxShadow: '0 12px 32px rgba(15, 23, 42, 0.08)'\r\n        }}\r\n      >\r\n        <Stack tokens={{ childrenGap: 12 }}>\r\n          <Stack horizontal horizontalAlign=\"space-between\" verticalAlign=\"center\">\r\n            <Stack horizontal verticalAlign=\"center\" tokens={{ childrenGap: 8 }}>\r\n              <FontIcon\r\n                iconName=\"FlowChart\"\r\n                style={{ fontSize: '14px', color: isDarkMode ? '#f8fafc' : '#1e293b' }}\r\n              />\r\n              <Text\r\n                variant=\"medium\"\r\n                style={{\r\n                  fontWeight: 600,\r\n                  color: isDarkMode ? '#f8fafc' : '#1e293b'\r\n                }}\r\n              >\r\n                Originating Deal\r\n              </Text>\r\n            </Stack>\r\n            {originDeal.stage && (\r\n              <Stack horizontalAlign=\"end\" tokens={{ childrenGap: 2 }}>\r\n                <Text\r\n                  variant=\"small\"\r\n                  style={{\r\n                    color: isDarkMode ? 'rgba(226, 232, 240, 0.72)' : colours.greyText,\r\n                    textTransform: 'uppercase',\r\n                    letterSpacing: '0.04em',\r\n                    fontSize: '10px'\r\n                  }}\r\n                >\r\n                  {originDeal.stage}\r\n                </Text>\r\n                {originDeal.stage.toUpperCase() === 'PITCHED' && originDeal.pitchedAt && (\r\n                  <Text\r\n                    variant=\"small\"\r\n                    style={{\r\n                      color: isDarkMode ? 'rgba(226, 232, 240, 0.6)' : '#6b7280',\r\n                      fontSize: '9px',\r\n                      fontWeight: 400\r\n                    }}\r\n                  >\r\n                    {new Date(originDeal.pitchedAt).toLocaleString('en-GB', {\r\n                      day: '2-digit',\r\n                      month: '2-digit',\r\n                      year: 'numeric',\r\n                      hour: '2-digit',\r\n                      minute: '2-digit',\r\n                      hour12: false\r\n                    })}\r\n                  </Text>\r\n                )}\r\n              </Stack>\r\n            )}\r\n          </Stack>\r\n\r\n          <Stack tokens={{ childrenGap: 8 }}>\r\n            <Text\r\n              variant=\"mediumPlus\"\r\n              style={{\r\n                fontWeight: 600,\r\n                color: isDarkMode ? '#e2e8f0' : '#0f172a'\r\n              }}\r\n            >\r\n              {originDeal.title || 'Deal summary unavailable'}\r\n            </Text>\r\n            {originDeal.service && (\r\n              <Text\r\n                variant=\"small\"\r\n                style={{ color: isDarkMode ? 'rgba(226, 232, 240, 0.72)' : colours.greyText }}\r\n              >\r\n                Service: {originDeal.service}\r\n              </Text>\r\n            )}\r\n          </Stack>\r\n\r\n          <Stack horizontal tokens={{ childrenGap: 16 }}>\r\n            <Stack>\r\n              <Text\r\n                variant=\"xSmall\"\r\n                style={{\r\n                  textTransform: 'uppercase',\r\n                  fontWeight: 600,\r\n                  letterSpacing: '0.05em',\r\n                  color: isDarkMode ? 'rgba(148, 163, 184, 0.9)' : '#475569'\r\n                }}\r\n              >\r\n                Deal Value\r\n              </Text>\r\n              <Text\r\n                variant=\"medium\"\r\n                style={{\r\n                  fontWeight: 600,\r\n                  color: isDarkMode ? '#f8fafc' : '#0f172a'\r\n                }}\r\n              >\r\n                {amountValue}\r\n              </Text>\r\n            </Stack>\r\n\r\n            <Stack>\r\n              <Text\r\n                variant=\"xSmall\"\r\n                style={{\r\n                  textTransform: 'uppercase',\r\n                  fontWeight: 600,\r\n                  letterSpacing: '0.05em',\r\n                  color: isDarkMode ? 'rgba(148, 163, 184, 0.9)' : '#475569'\r\n                }}\r\n              >\r\n                Created\r\n              </Text>\r\n              <Text\r\n                variant=\"medium\"\r\n                style={{\r\n                  fontWeight: 500,\r\n                  color: isDarkMode ? '#e2e8f0' : '#1e293b'\r\n                }}\r\n              >\r\n                {createdOn}\r\n              </Text>\r\n            </Stack>\r\n\r\n            {originDeal.owner && (\r\n              <Stack>\r\n                <Text\r\n                  variant=\"xSmall\"\r\n                  style={{\r\n                    textTransform: 'uppercase',\r\n                    fontWeight: 600,\r\n                    letterSpacing: '0.05em',\r\n                    color: isDarkMode ? 'rgba(148, 163, 184, 0.9)' : '#475569'\r\n                  }}\r\n                >\r\n                  Owner\r\n                </Text>\r\n                <Text\r\n                  variant=\"medium\"\r\n                  style={{\r\n                    fontWeight: 500,\r\n                    color: isDarkMode ? '#e2e8f0' : '#1e293b'\r\n                  }}\r\n                >\r\n                  {originDeal.owner}\r\n                </Text>\r\n              </Stack>\r\n            )}\r\n          </Stack>\r\n\r\n          <Stack horizontal verticalAlign=\"center\" tokens={{ childrenGap: 6 }}>\r\n            <FontIcon\r\n              iconName=\"Link\"\r\n              style={{ fontSize: '12px', color: isDarkMode ? '#38bdf8' : colours.blue }}\r\n            />\r\n            <Text\r\n              variant=\"small\"\r\n              style={{\r\n                color: isDarkMode ? 'rgba(226, 232, 240, 0.72)' : colours.greyText,\r\n                fontFamily: 'monospace'\r\n              }}\r\n            >\r\n              {originDeal.reference ? `Prospect ${originDeal.reference}` : 'No linked prospect'}\r\n            </Text>\r\n          </Stack>\r\n        </Stack>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const relatedClientsSection = () => (\r\n    <Stack tokens={{ childrenGap: 12 }}>\r\n      <Stack horizontal horizontalAlign=\"space-between\" verticalAlign=\"center\">\r\n        <Stack horizontal verticalAlign=\"center\" tokens={{ childrenGap: 8 }}>\r\n          <FontIcon\r\n            iconName=\"People\"\r\n            style={{\r\n              fontSize: '14px',\r\n              color: isDarkMode ? '#e2e8f0' : '#374151'\r\n            }}\r\n          />\r\n          <Text\r\n            variant=\"medium\"\r\n            style={{\r\n              fontWeight: 600,\r\n              color: isDarkMode ? '#e2e8f0' : '#374151'\r\n            }}\r\n          >\r\n            Related Clients\r\n          </Text>\r\n          {relatedClients.length > 0 && (\r\n            <Text\r\n              variant=\"small\"\r\n              style={{\r\n                color: isDarkMode ? 'rgba(226, 232, 240, 0.72)' : colours.greyText,\r\n                backgroundColor: isDarkMode ? colours.dark.background : '#f4f4f6',\r\n                padding: '2px 6px',\r\n                borderRadius: '4px',\r\n                fontSize: '10px',\r\n                fontWeight: 500\r\n              }}\r\n            >\r\n              {relatedClients.length}\r\n            </Text>\r\n          )}\r\n        </Stack>\r\n\r\n        <DefaultButton\r\n          iconProps={{ iconName: 'Add' }}\r\n          text=\"Link Client\"\r\n          onClick={() => setShowLookupModal(true)}\r\n          disabled={isUpdating}\r\n          styles={{\r\n            root: {\r\n              fontSize: '12px',\r\n              padding: '6px 12px',\r\n              minWidth: 'auto'\r\n            }\r\n          }}\r\n        />\r\n      </Stack>\r\n\r\n      {error && (\r\n        <MessageBar\r\n          messageBarType={MessageBarType.error}\r\n          onDismiss={() => setError(null)}\r\n          styles={{ root: { fontSize: '12px' } }}\r\n        >\r\n          {error}\r\n        </MessageBar>\r\n      )}\r\n\r\n      {isLoading && (\r\n        <Stack horizontal verticalAlign=\"center\" tokens={{ childrenGap: 8 }}>\r\n          <Spinner size={1} />\r\n          <Text\r\n            variant=\"small\"\r\n            style={{ color: isDarkMode ? 'rgba(226, 232, 240, 0.72)' : colours.greyText }}\r\n          >\r\n            Loading related clients...\r\n          </Text>\r\n        </Stack>\r\n      )}\r\n\r\n      {!isLoading && relatedClients.length > 0 && (\r\n        <Stack tokens={{ childrenGap: 8 }}>\r\n          {relatedClients.map(client => renderClientCard(client, false))}\r\n        </Stack>\r\n      )}\r\n\r\n      {!isLoading && relatedClients.length === 0 && (\r\n        <Stack\r\n          horizontalAlign=\"center\"\r\n          verticalAlign=\"center\"\r\n          styles={{\r\n            root: {\r\n              padding: '24px',\r\n              backgroundColor: isDarkMode ? colours.dark.background : '#f8f9fa',\r\n              borderRadius: '6px',\r\n              border: `1px dashed ${isDarkMode ? colours.dark.border : '#d0d0d7'}`\r\n            }\r\n          }}\r\n        >\r\n          <FontIcon\r\n            iconName=\"PeopleAdd\"\r\n            style={{\r\n              fontSize: '20px',\r\n              color: isDarkMode ? 'rgba(226, 232, 240, 0.72)' : colours.greyText,\r\n              marginBottom: '8px'\r\n            }}\r\n          />\r\n          <Text\r\n            variant=\"small\"\r\n            style={{\r\n              color: isDarkMode ? 'rgba(226, 232, 240, 0.72)' : colours.greyText,\r\n              textAlign: 'center'\r\n            }}\r\n          >\r\n            No related clients linked yet\r\n          </Text>\r\n          <Text\r\n            variant=\"small\"\r\n            style={{\r\n              color: isDarkMode ? 'rgba(226, 232, 240, 0.72)' : colours.greyText,\r\n              textAlign: 'center',\r\n              marginTop: '4px'\r\n            }}\r\n          >\r\n            Use “Link Client” to connect additional contacts involved in this matter.\r\n          </Text>\r\n        </Stack>\r\n      )}\r\n\r\n      {isUpdating && (\r\n        <Stack\r\n          horizontal\r\n          horizontalAlign=\"center\"\r\n          verticalAlign=\"center\"\r\n          tokens={{ childrenGap: 8 }}\r\n          styles={{\r\n            root: {\r\n              padding: '8px',\r\n              backgroundColor: isDarkMode ? '#1e293b' : '#ffffff',\r\n              borderRadius: '4px',\r\n              border: `1px solid ${isDarkMode ? colours.dark.border : '#e1e5e9'}`\r\n            }\r\n          }}\r\n        >\r\n          <Spinner size={1} />\r\n          <Text\r\n            variant=\"small\"\r\n            style={{ color: isDarkMode ? 'rgba(226, 232, 240, 0.72)' : colours.greyText }}\r\n          >\r\n            Updating related clients...\r\n          </Text>\r\n        </Stack>\r\n      )}\r\n    </Stack>\r\n  );\r\n\r\n  return (\r\n    <Stack tokens={{ childrenGap: 12 }}>\r\n      {leadClientCard()}\r\n      {originDeal && connectorLine()}\r\n      {originDealCard()}\r\n      {originDeal && connectorLine()}\r\n      {relatedClientsSection()}\r\n\r\n      <ClientLookupModal\r\n        isOpen={showLookupModal}\r\n        onDismiss={() => setShowLookupModal(false)}\r\n        onClientSelected={handleAddClient}\r\n        userInitials={userInitials}\r\n      />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default RelatedClientsSection;\r\n","import React, { useState, useEffect, useMemo, useRef } from 'react';\r\nimport { mergeStyles } from '@fluentui/merge-styles';\r\nimport { FontIcon } from '@fluentui/react';\r\nimport { colours } from '../../app/styles/colours';\r\nimport clioIcon from '../../assets/clio.svg';\r\nimport RelatedClientsSection from './components/RelatedClientsSection';\r\n\r\ninterface MatterOperationsProps {\r\n  selectedInstruction: any;\r\n  selectedOverviewItem: any;\r\n  isDarkMode: boolean;\r\n  onStatusUpdate?: () => void;\r\n}\r\n\r\ninterface MatterData {\r\n  matterId?: string;\r\n  status: string;\r\n  openDate?: string;\r\n  displayNumber?: string;\r\n  clientLinked: boolean;\r\n  clientId?: string;\r\n  description?: string;\r\n  practiceArea?: string;\r\n  responsibleSolicitor?: string;\r\n  isLoading: boolean;\r\n}\r\n\r\ninterface ClientData {\r\n  id?: string;\r\n  name?: string;\r\n  email?: string;\r\n  phone?: string;\r\n  type?: string;\r\n  matters?: any[];\r\n  isLoading: boolean;\r\n}\r\n\r\ninterface OriginDeal {\r\n  title?: string;\r\n  reference?: string | number;\r\n  stage?: string;\r\n  service?: string;\r\n  amount?: number | string;\r\n  currency?: string;\r\n  createdDate?: string;\r\n  owner?: string;\r\n}\r\n\r\ntype MatterLike = Record<string, unknown>;\r\n\r\nconst parseDateValue = (value: unknown): number | null => {\r\n  if (!value) return null;\r\n  const asString = typeof value === 'string' ? value : String(value);\r\n  const parsed = new Date(asString);\r\n  const timestamp = parsed.getTime();\r\n  return Number.isNaN(timestamp) ? null : timestamp;\r\n};\r\n\r\nconst getMatterOpenedAt = (matter: MatterLike): number | null => {\r\n  const candidates = [\r\n    matter.open_date,\r\n    matter.OpenDate,\r\n    matter.openDate,\r\n    matter['Open Date'],\r\n    matter.opened_at,\r\n    matter.OpenedAt,\r\n  ];\r\n\r\n  for (const candidate of candidates) {\r\n    const timestamp = parseDateValue(candidate);\r\n    if (timestamp !== null) {\r\n      return timestamp;\r\n    }\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst getMatterDisplayNumber = (matter: MatterLike): string => {\r\n  const candidate = matter.display_number ?? matter.DisplayNumber ?? matter.displayNumber ?? '';\r\n  if (candidate === undefined || candidate === null) return '';\r\n  return typeof candidate === 'string' ? candidate : String(candidate);\r\n};\r\n\r\nconst getMatterIdString = (matter: MatterLike): string => {\r\n  const candidate = matter.id ?? matter.MatterID ?? matter.matter_id ?? matter.MatterId;\r\n  if (candidate === undefined || candidate === null) return '';\r\n  return typeof candidate === 'string' ? candidate : String(candidate);\r\n};\r\n\r\nconst getMatterNumericId = (matter: MatterLike): number => {\r\n  const candidate = matter.id ?? matter.MatterID ?? matter.matter_id ?? matter.MatterId;\r\n  if (candidate === undefined || candidate === null) return 0;\r\n  const numeric = typeof candidate === 'number' ? candidate : Number(String(candidate));\r\n  return Number.isNaN(numeric) ? 0 : numeric;\r\n};\r\n\r\nconst compareMatters = (a: MatterLike, b: MatterLike): number => {\r\n  const openedA = getMatterOpenedAt(a);\r\n  const openedB = getMatterOpenedAt(b);\r\n\r\n  if (openedA !== null || openedB !== null) {\r\n    if (openedA === null) return 1;\r\n    if (openedB === null) return -1;\r\n    if (openedA !== openedB) return openedB - openedA;\r\n  }\r\n\r\n  const displayA = getMatterDisplayNumber(a);\r\n  const displayB = getMatterDisplayNumber(b);\r\n  if (displayA && displayB) {\r\n    const comparison = displayA.localeCompare(displayB, undefined, { numeric: true, sensitivity: 'base' });\r\n    if (comparison !== 0) {\r\n      return comparison;\r\n    }\r\n  }\r\n\r\n  const idA = getMatterNumericId(a);\r\n  const idB = getMatterNumericId(b);\r\n  if (idA !== idB) {\r\n    return idB - idA;\r\n  }\r\n\r\n  return 0;\r\n};\r\n\r\nconst dedupeClientMatters = (matters: MatterLike[]): MatterLike[] => {\r\n  const deduped = new Map<string, MatterLike>();\r\n\r\n  matters.forEach((matter, index) => {\r\n    const keySource = getMatterIdString(matter) || getMatterDisplayNumber(matter) || `index-${index}`;\r\n\r\n    const existing = deduped.get(keySource);\r\n    if (!existing) {\r\n      deduped.set(keySource, matter);\r\n      return;\r\n    }\r\n\r\n    const existingDisplay = getMatterDisplayNumber(existing);\r\n    const candidateDisplay = getMatterDisplayNumber(matter);\r\n    if (!existingDisplay && candidateDisplay) {\r\n      deduped.set(keySource, matter);\r\n    }\r\n  });\r\n\r\n  return Array.from(deduped.values()).sort(compareMatters);\r\n};\r\n\r\nconst panelBackground = (dark: boolean): string => (\r\n  dark\r\n    ? 'linear-gradient(135deg, rgba(17, 24, 39, 0.94) 0%, rgba(15, 23, 42, 0.98) 100%)'\r\n    : 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)'\r\n);\r\n\r\nconst cardBackground = (dark: boolean): string => (\r\n  dark\r\n    ? 'linear-gradient(135deg, rgba(30, 41, 59, 0.92) 0%, rgba(15, 23, 42, 0.96) 100%)'\r\n    : '#FFFFFF'\r\n);\r\n\r\nconst borderColour = (dark: boolean): string => (\r\n  dark ? 'rgba(148, 163, 184, 0.32)' : '#e2e8f0'\r\n);\r\n\r\nconst mutedText = (dark: boolean): string => (\r\n  dark ? 'rgba(226, 232, 240, 0.72)' : colours.greyText\r\n);\r\n\r\nconst elevatedShadow = (dark: boolean): string => (\r\n  dark ? '0 8px 20px rgba(2, 6, 23, 0.45)' : '0 10px 24px rgba(15, 23, 42, 0.12)'\r\n);\r\n\r\nconst MatterOperations: React.FC<MatterOperationsProps> = ({\r\n  selectedInstruction,\r\n  selectedOverviewItem,\r\n  isDarkMode,\r\n  onStatusUpdate\r\n}) => {\r\n  const [matterData, setMatterData] = useState<MatterData>({\r\n    status: 'Not Created',\r\n    clientLinked: false,\r\n    isLoading: false\r\n  });\r\n  const [clientData, setClientData] = useState<ClientData>({\r\n    isLoading: false,\r\n    matters: []\r\n  });\r\n  const [relatedClientIds, setRelatedClientIds] = useState<string>('');\r\n  const fetchedDisplayNumbers = useRef<Set<string>>(new Set());\r\n  const displayNumberLabel = useMemo(() => {\r\n    const display = (matterData.displayNumber || '').trim();\r\n    if (display && display !== matterData.matterId) {\r\n      return display;\r\n    }\r\n    if (display) {\r\n      return display;\r\n    }\r\n    if (matterData.matterId && matterData.matterId !== 'NO_MATTER') {\r\n      return `Matter ${matterData.matterId}`;\r\n    }\r\n    return 'Display number pending';\r\n  }, [matterData.displayNumber, matterData.matterId]);\r\n\r\n  const ensureDisplayNumber = async (matterId: string | undefined, currentDisplay?: string) => {\r\n    if (!matterId || matterId === 'NO_MATTER') return;\r\n\r\n    const trimmedDisplay = (currentDisplay || '').trim();\r\n    const looksLikeNumeric = trimmedDisplay && /^\\d+$/.test(trimmedDisplay);\r\n    if (trimmedDisplay && !looksLikeNumeric && trimmedDisplay !== matterId) {\r\n      return;\r\n    }\r\n\r\n    if (fetchedDisplayNumbers.current.has(matterId)) {\r\n      return;\r\n    }\r\n\r\n    fetchedDisplayNumbers.current.add(matterId);\r\n\r\n    try {\r\n      const resp = await fetch(`/api/matters/${matterId}`);\r\n      if (!resp.ok) {\r\n        fetchedDisplayNumbers.current.delete(matterId);\r\n        throw new Error(await resp.text());\r\n      }\r\n      const payload = await resp.json();\r\n      const refreshedDisplay = payload?.displayNumber || payload?.display_number;\r\n      if (refreshedDisplay) {\r\n        setMatterData(prev => (\r\n          prev.matterId === matterId\r\n            ? { ...prev, displayNumber: refreshedDisplay }\r\n            : prev\r\n        ));\r\n      }\r\n    } catch (err) {\r\n      fetchedDisplayNumbers.current.delete(matterId);\r\n      console.warn('Failed to refresh Clio display number', matterId, err);\r\n    }\r\n  };\r\n  // Matter opening is handled by a dedicated workflow; creation UI removed here\r\n\r\n  const originDeal: OriginDeal | null = useMemo(() => {\r\n    const dealSource = (selectedInstruction?.deal as any)\r\n      || (selectedOverviewItem?.deal as any)\r\n      || (selectedOverviewItem?.instruction?.deal as any)\r\n      || null;\r\n\r\n    if (!dealSource) {\r\n      return null;\r\n    }\r\n\r\n    const rawAmount = dealSource.Amount ?? dealSource.amount ?? dealSource.Estimate ?? dealSource.QuoteAmount;\r\n    const amount = typeof rawAmount === 'number'\r\n      ? rawAmount\r\n      : rawAmount && !Number.isNaN(Number(rawAmount))\r\n        ? Number(rawAmount)\r\n        : undefined;\r\n\r\n    return {\r\n      title: dealSource.ServiceDescription || dealSource.Service || dealSource.Title || dealSource.Name || selectedInstruction?.MatterDescription,\r\n      reference: dealSource.ProspectId || dealSource.prospectId || dealSource.DealId || dealSource.Id || dealSource.dealId,\r\n      stage: dealSource.Stage || dealSource.StageName || dealSource.Status,\r\n      service: dealSource.ServiceDescription || dealSource.Service || selectedInstruction?.AreaOfWork,\r\n      amount: amount ?? rawAmount,\r\n      currency: dealSource.Currency || dealSource.currency || 'GBP',\r\n      createdDate: dealSource.CreatedDate || dealSource.CreatedOn || dealSource.CreatedTime || dealSource.Created?.Date,\r\n      owner: dealSource.Owner || dealSource.OwnerName || dealSource.ResponsibleSolicitor || dealSource.Solicitor || selectedInstruction?.ResponsibleSolicitor\r\n    };\r\n  }, [selectedInstruction, selectedOverviewItem]);\r\n\r\n  // Load matter data when instruction changes\r\n  useEffect(() => {\r\n    if (selectedInstruction?.InstructionRef) {\r\n      loadMatterData();\r\n      \r\n      if (selectedInstruction.ClientId) {\r\n        loadClientData();\r\n      } else {\r\n        setClientData({ isLoading: false, matters: [] });\r\n      }\r\n    }\r\n  }, [selectedInstruction?.InstructionRef]);\r\n\r\n  const loadMatterData = async () => {\r\n    if (!selectedInstruction?.InstructionRef) return;\r\n    \r\n    setMatterData(prev => ({ ...prev, isLoading: true }));\r\n    \r\n    try {\r\n      const response = await fetch(`/api/matter-operations/matter/${selectedInstruction.InstructionRef}`);\r\n      if (response.ok) {\r\n        const { matter } = await response.json();\r\n        setMatterData({\r\n          matterId: matter.MatterID,\r\n          status: matter.Status || 'Open',\r\n          openDate: matter.OpenDate,\r\n          displayNumber: matter.DisplayNumber,\r\n          clientLinked: !!matter.ClientID,\r\n          clientId: matter.ClientID,\r\n          description: matter.Description,\r\n          practiceArea: matter.PracticeArea,\r\n          responsibleSolicitor: matter.ResponsibleSolicitor,\r\n          isLoading: false\r\n        });\r\n        if (matter?.MatterID && matter?.MatterID !== 'NO_MATTER') {\r\n          ensureDisplayNumber(matter.MatterID, matter.DisplayNumber);\r\n        }\r\n        // Load related client IDs from instruction data\r\n        setRelatedClientIds(selectedInstruction.RelatedClientId || '');\r\n      } else if (response.status === 404) {\r\n        // Matter doesn't exist yet\r\n        setMatterData({\r\n          status: 'Not Created',\r\n          clientLinked: !!selectedInstruction.ClientId,\r\n          clientId: selectedInstruction.ClientId,\r\n          isLoading: false\r\n        });\r\n        // Load related client IDs from instruction data\r\n        setRelatedClientIds(selectedInstruction.RelatedClientId || '');\r\n      } else {\r\n        throw new Error('Failed to load matter data');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading matter data:', error);\r\n      // Set fallback data when API fails\r\n      setMatterData({\r\n        status: 'API Unavailable',\r\n        clientLinked: !!selectedInstruction.ClientId,\r\n        clientId: selectedInstruction.ClientId,\r\n        isLoading: false\r\n      });\r\n      // Load related client IDs from instruction data\r\n      setRelatedClientIds(selectedInstruction.RelatedClientId || '');\r\n    }\r\n  };\r\n\r\n  const loadClientData = async () => {\r\n    if (!selectedInstruction?.ClientId) return;\r\n    \r\n    setClientData(prev => ({ ...prev, isLoading: true }));\r\n    \r\n    try {\r\n      // Get initials from responsible solicitor or default to 'LZ'\r\n      const initials = selectedInstruction.ResponsibleSolicitor?.split(' ')\r\n        .map((name: string) => name[0])\r\n        .join('') || 'LZ';\r\n      \r\n      const response = await fetch(`/api/clio-client-query/${selectedInstruction.ClientId}/${initials}`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        const matters = Array.isArray(data.matters)\r\n          ? dedupeClientMatters(data.matters as MatterLike[])\r\n          : [];\r\n        setClientData({\r\n          id: data.client?.id?.toString(),\r\n          name: data.client?.name,\r\n          email: data.client?.primary_email_address,\r\n          phone: data.client?.primary_phone_number,\r\n          type: data.client?.type,\r\n          matters,\r\n          isLoading: false\r\n        });\r\n      } else {\r\n        throw new Error('Failed to load client data');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading client data:', error);\r\n      setClientData({ isLoading: false, matters: [] });\r\n    }\r\n  };\r\n\r\n  const handleRelatedClientsUpdate = (newClientIds: string) => {\r\n    setRelatedClientIds(newClientIds);\r\n  };\r\n\r\n  // Matter status logic\r\n  const matterStatus = useMemo(() => {\r\n    const neutral = isDarkMode ? colours.dark.text : '#374151';\r\n    if (matterData.isLoading) return { label: 'Loading...', color: colours.greyText };\r\n    if (matterData.matterId && matterData.matterId !== 'NO_MATTER') return { label: 'Active Matter', color: neutral };\r\n    if (selectedInstruction?.ClientId) return { label: 'Ready to Create', color: neutral };\r\n    return { label: 'Client Required', color: neutral };\r\n  }, [matterData, selectedInstruction, isDarkMode]);\r\n\r\n  // Creation and client-linking are handled elsewhere\r\n\r\n  const handleOpenMatterDashboard = () => {\r\n    if (matterData.matterId && matterData.matterId !== 'NO_MATTER') {\r\n      const clioUrl = `https://eu.app.clio.com/nc/#/matters/${matterData.matterId}`;\r\n      window.open(clioUrl, '_blank');\r\n    }\r\n  };\r\n\r\n  const buttonStyle = (variant: 'primary' | 'secondary' | 'danger' = 'primary') => {\r\n    // More subtle, workbench-integrated styling\r\n    const getColors = () => {\r\n      if (variant === 'primary') {\r\n        return {\r\n          bg: isDarkMode ? 'rgba(54, 144, 206, 0.15)' : 'rgba(54, 144, 206, 0.08)',\r\n          hover: isDarkMode ? 'rgba(54, 144, 206, 0.25)' : 'rgba(54, 144, 206, 0.12)',\r\n          text: isDarkMode ? '#87ceeb' : colours.blue,\r\n          border: isDarkMode ? 'rgba(54, 144, 206, 0.3)' : 'rgba(54, 144, 206, 0.2)'\r\n        };\r\n      } else {\r\n        return {\r\n          bg: isDarkMode ? 'rgba(148, 163, 184, 0.1)' : 'rgba(107, 114, 128, 0.06)',\r\n          hover: isDarkMode ? 'rgba(148, 163, 184, 0.18)' : 'rgba(107, 114, 128, 0.1)',\r\n          text: isDarkMode ? 'rgba(226, 232, 240, 0.85)' : '#4b5563',\r\n          border: isDarkMode ? 'rgba(148, 163, 184, 0.25)' : 'rgba(107, 114, 128, 0.15)'\r\n        };\r\n      }\r\n    };\r\n    \r\n    const colors = getColors();\r\n    \r\n    return mergeStyles({\r\n      padding: '8px 12px',\r\n      borderRadius: 6,\r\n      border: `1px solid ${colors.border}`,\r\n      background: colors.bg,\r\n      color: colors.text,\r\n      cursor: 'pointer',\r\n      fontSize: 11,\r\n      fontWeight: 500,\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      gap: 6,\r\n      textTransform: 'none',\r\n      letterSpacing: '0.01em',\r\n      transition: 'all 0.15s ease',\r\n      backdropFilter: isDarkMode ? 'blur(8px)' : 'none',\r\n      ':hover': {\r\n        background: colors.hover,\r\n        borderColor: isDarkMode ? 'rgba(54, 144, 206, 0.4)' : 'rgba(54, 144, 206, 0.25)',\r\n        transform: 'translateY(-0.5px)',\r\n        boxShadow: isDarkMode \r\n          ? '0 4px 12px rgba(0, 0, 0, 0.3)' \r\n          : '0 2px 8px rgba(15, 23, 42, 0.08)'\r\n      },\r\n      ':active': {\r\n        transform: 'translateY(0px)',\r\n      },\r\n      ':disabled': {\r\n        opacity: 0.5,\r\n        cursor: 'not-allowed',\r\n        transform: 'none',\r\n      }\r\n    });\r\n  };\r\n\r\n  const cardStyle = mergeStyles({\r\n    background: cardBackground(isDarkMode),\r\n    borderRadius: '12px',\r\n    padding: '16px',\r\n    border: `1px solid ${borderColour(isDarkMode)}`,\r\n    marginBottom: '12px',\r\n    boxShadow: elevatedShadow(isDarkMode)\r\n  });\r\n\r\n  const headerStyle = mergeStyles({\r\n    fontSize: '11px',\r\n    fontWeight: 600,\r\n    color: isDarkMode ? colours.dark.text : '#1f2937',\r\n    marginBottom: '12px',\r\n    textTransform: 'uppercase',\r\n    letterSpacing: '0.025em',\r\n    borderBottom: `1px solid ${borderColour(isDarkMode)}`,\r\n    paddingBottom: '8px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between'\r\n  });\r\n\r\n  const statusIndicator = (status: boolean, size: number = 6) => (\r\n    <div style={{\r\n      width: size,\r\n      height: size,\r\n      borderRadius: '50%',\r\n      background: status ? (isDarkMode ? colours.dark.text : '#6b7280') : colours.greyText,\r\n      display: 'inline-block'\r\n    }} />\r\n  );\r\n\r\n  const clientMatters = clientData.matters ?? [];\r\n\r\n  if (!selectedInstruction) {\r\n    return (\r\n      <div style={{\r\n          padding: '40px 20px',\r\n          textAlign: 'center',\r\n          color: mutedText(isDarkMode),\r\n          fontSize: '12px',\r\n          background: panelBackground(isDarkMode),\r\n          borderRadius: '12px',\r\n          border: `1px dashed ${borderColour(isDarkMode)}`\r\n      }}>\r\n        Select an instruction to manage matter operations\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* Client and Matter Details - Side by Side */}\r\n      <div style={{ \r\n        display: 'grid', \r\n        gridTemplateColumns: 'minmax(0, 1fr) minmax(0, 1fr)', \r\n        gap: '16px',\r\n        marginBottom: '16px'\r\n      }}>\r\n        \r\n        {/* Client Information Card - Now handled by Related Clients Section below */}\r\n        {/* <div className={cardStyle}>\r\n          <div className={headerStyle}>\r\n            <span>Client Information</span>\r\n            <div style={{ display: 'flex', alignItems: 'center', gap: 8 }}>\r\n              {statusIndicator(!!clientData.id)}\r\n              <span style={{ \r\n                color: isDarkMode ? colours.dark.text : '#374151', \r\n                fontSize: 10, \r\n                fontWeight: 600,\r\n                textTransform: 'uppercase'\r\n              }}>\r\n                {clientData.id ? 'Linked' : 'Not Linked'}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          \r\n          {clientData.isLoading ? (\r\n            <div style={{ padding: '20px', textAlign: 'center', color: colours.greyText }}>\r\n              <div style={{ \r\n                width: 16, \r\n                height: 16, \r\n                border: `2px solid ${colours.greyText}30`,\r\n                borderTop: `2px solid ${colours.greyText}`,\r\n                borderRadius: '50%',\r\n                animation: 'spin 1s linear infinite',\r\n                display: 'inline-block'\r\n              }} />\r\n              <div style={{ marginTop: 8, fontSize: 11 }}>Loading client data...</div>\r\n            </div>\r\n          ) : clientData.id ? (\r\n            <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>\r\n              <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '12px' }}>\r\n                <div>\r\n                  <div style={{ fontSize: 9, color: mutedText(isDarkMode), marginBottom: 2 }}>CLIENT NAME</div>\r\n                  <div style={{ fontSize: 11, fontWeight: 500, color: isDarkMode ? colours.dark.text : '#111827' }}>\r\n                    {clientData.name || 'Unknown'}\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <div style={{ fontSize: 9, color: mutedText(isDarkMode), marginBottom: 2 }}>CLIENT TYPE</div>\r\n                  <div style={{ fontSize: 11, fontWeight: 500, color: isDarkMode ? colours.dark.text : '#111827' }}>\r\n                    {clientData.type || 'Individual'}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '12px' }}>\r\n                <div>\r\n                  <div style={{ fontSize: 9, color: mutedText(isDarkMode), marginBottom: 2 }}>EMAIL</div>\r\n                  <div style={{ fontSize: 10, fontWeight: 400, color: isDarkMode ? colours.dark.text : '#111827' }}>\r\n                    {clientData.email || 'Not provided'}\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <div style={{ fontSize: 9, color: mutedText(isDarkMode), marginBottom: 2 }}>PHONE</div>\r\n                  <div style={{ fontSize: 10, fontWeight: 400, color: isDarkMode ? colours.dark.text : '#111827' }}>\r\n                    {clientData.phone || 'Not provided'}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '12px' }}>\r\n                <div>\r\n                  <div style={{ fontSize: 9, color: mutedText(isDarkMode), marginBottom: 2 }}>CLIO CLIENT ID</div>\r\n                  <div style={{ fontSize: 10, fontWeight: 400, color: isDarkMode ? colours.dark.text : '#111827' }}>\r\n                    {clientData.id}\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <div style={{ fontSize: 9, color: mutedText(isDarkMode), marginBottom: 2 }}>EXISTING MATTERS</div>\r\n                  <div style={{ fontSize: 10, fontWeight: 400, color: isDarkMode ? colours.dark.text : '#111827' }}>\r\n                    {clientData.matters?.length || 0} matters\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div style={{\r\n              padding: '16px',\r\n              textAlign: 'center',\r\n              color: mutedText(isDarkMode),\r\n              fontSize: '11px',\r\n              background: panelBackground(isDarkMode),\r\n              borderRadius: '8px',\r\n              border: `1px dashed ${borderColour(isDarkMode)}`\r\n            }}>\r\n              <div style={{ marginBottom: '8px', fontSize: '12px', fontWeight: 600 }}>\r\n                No Client Linked\r\n              </div>\r\n              <div style={{ fontSize: '10px', lineHeight: '1.4' }}>\r\n                Use the Matter Opening workflow to link a client\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div> */}\r\n\r\n        {/* Related Clients Section */}\r\n        <RelatedClientsSection\r\n          key={`related-clients-${selectedInstruction?.InstructionRef}`}\r\n          instructionRef={selectedInstruction?.InstructionRef}\r\n          relatedClientIds={relatedClientIds}\r\n          mainClientId={matterData.clientId}\r\n          originDeal={originDeal}\r\n          onRelatedClientsUpdate={handleRelatedClientsUpdate}\r\n          userInitials={selectedInstruction?.ResponsibleSolicitor?.split(' ')\r\n            .map((name: string) => name[0])\r\n            .join('') || 'LZ'}\r\n        />\r\n        \r\n        {/* Matter Overview Card */}\r\n        <div className={cardStyle}>\r\n          <div style={{ \r\n            display: 'flex', \r\n            justifyContent: 'space-between', \r\n            alignItems: 'center',\r\n            marginBottom: '16px'\r\n          }}>\r\n            <div style={{ display: 'flex', alignItems: 'center', gap: 8 }}>\r\n              <FontIcon\r\n                iconName=\"FabricFolder\"\r\n                style={{ fontSize: '14px', color: isDarkMode ? '#e2e8f0' : '#0f172a' }}\r\n              />\r\n              <span style={{\r\n                fontSize: '14px',\r\n                fontWeight: 600,\r\n                color: isDarkMode ? '#e2e8f0' : '#0f172a'\r\n              }}>\r\n                Active Matter\r\n              </span>\r\n            </div>\r\n            <span style={{ \r\n              color: matterStatus.color, \r\n              fontSize: 11, \r\n              fontWeight: 500\r\n            }}>\r\n              {matterStatus.label}\r\n            </span>\r\n          </div>\r\n\r\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '16px' }}>\r\n            <div style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              gap: 12,\r\n              padding: '12px 14px',\r\n              borderRadius: '10px',\r\n              background: isDarkMode ? 'rgba(30, 41, 59, 0.55)' : '#f8fafc',\r\n              border: `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.24)' : '#e2e8f0'}`\r\n            }}>\r\n              <div style={{\r\n                width: 40,\r\n                height: 40,\r\n                borderRadius: '50%',\r\n                backgroundColor: isDarkMode ? '#334155' : '#ffffff',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                border: `2px solid ${isDarkMode ? colours.dark.border : '#e2e8f0'}`,\r\n                boxShadow: isDarkMode ? '0 2px 8px rgba(0, 0, 0, 0.35)' : '0 2px 6px rgba(15, 23, 42, 0.08)'\r\n              }}>\r\n                <img\r\n                  src={clioIcon}\r\n                  alt=\"Clio Matter\"\r\n                  style={{ width: 20, height: 20, opacity: isDarkMode ? 0.9 : 1 }}\r\n                />\r\n              </div>\r\n              <div style={{ display: 'flex', flexDirection: 'column', gap: 4 }}>\r\n                <span style={{\r\n                  fontSize: '15px',\r\n                  fontWeight: 600,\r\n                  color: isDarkMode ? '#e2e8f0' : '#0f172a'\r\n                }}>\r\n                  {displayNumberLabel}\r\n                </span>\r\n                <span style={{\r\n                  fontSize: '11px',\r\n                  color: isDarkMode ? 'rgba(226, 232, 240, 0.72)' : colours.greyText\r\n                }}>\r\n                  {matterData.status ? `Status: ${matterData.status}` : 'Status unavailable'}\r\n                </span>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '12px' }}>\r\n              <div>\r\n                <div style={{ fontSize: 9, color: mutedText(isDarkMode), marginBottom: 2 }}>CLIO MATTER ID</div>\r\n                <div style={{ fontSize: 11, fontWeight: 500, color: isDarkMode ? colours.dark.text : '#111827' }}>\r\n                  {(matterData.matterId && matterData.matterId !== 'NO_MATTER') ? matterData.matterId : 'Not assigned'}\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <div style={{ fontSize: 9, color: mutedText(isDarkMode), marginBottom: 2 }}>OPEN DATE</div>\r\n                <div style={{ fontSize: 10, fontWeight: 400, color: isDarkMode ? colours.dark.text : '#111827' }}>\r\n                  {matterData.openDate ? new Date(matterData.openDate).toLocaleDateString() : 'Not opened'}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '12px' }}>\r\n              <div>\r\n                <div style={{ fontSize: 9, color: mutedText(isDarkMode), marginBottom: 2 }}>PRACTICE AREA</div>\r\n                <div style={{ fontSize: 10, fontWeight: 400, color: isDarkMode ? colours.dark.text : '#111827' }}>\r\n                  {matterData.practiceArea || selectedInstruction.AreaOfWork || 'General Legal Services'}\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <div style={{ fontSize: 9, color: mutedText(isDarkMode), marginBottom: 2 }}>RESPONSIBLE SOLICITOR</div>\r\n                <div style={{ fontSize: 10, fontWeight: 400, color: isDarkMode ? colours.dark.text : '#111827' }}>\r\n                  {matterData.responsibleSolicitor || selectedInstruction.ResponsibleSolicitor || 'Unassigned'}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{ borderTop: `1px solid ${borderColour(isDarkMode)}`, paddingTop: '12px' }}>\r\n              <div style={{\r\n                fontSize: 9,\r\n                color: mutedText(isDarkMode),\r\n                textTransform: 'uppercase',\r\n                letterSpacing: '0.04em',\r\n                marginBottom: '8px'\r\n              }}>\r\n                Actions\r\n              </div>\r\n              {!matterData.matterId || matterData.matterId === 'NO_MATTER' ? (\r\n                <div style={{\r\n                  padding: '16px',\r\n                  color: mutedText(isDarkMode),\r\n                  fontSize: 11,\r\n                  fontStyle: 'italic',\r\n                  background: panelBackground(isDarkMode),\r\n                  borderRadius: 8,\r\n                  border: `1px dashed ${borderColour(isDarkMode)}`,\r\n                  textAlign: 'center'\r\n                }}>\r\n                  <div style={{ marginBottom: '8px', fontSize: '12px', fontWeight: 600 }}>\r\n                    No Matter Created\r\n                  </div>\r\n                  <div>\r\n                    Use the Matter Opening workflow to create and configure the matter.\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div style={{ display: 'flex', gap: '12px', flexWrap: 'wrap' }}>\r\n                  <button\r\n                    className={buttonStyle('primary')}\r\n                    onClick={handleOpenMatterDashboard}\r\n                  >\r\n                    <FontIcon iconName=\"ViewDashboard\" style={{ fontSize: '12px' }} />\r\n                    View in Clio\r\n                  </button>\r\n                  <button\r\n                    className={buttonStyle('secondary')}\r\n                    onClick={() => {\r\n                      console.log('Opening matter timeline');\r\n                    }}\r\n                  >\r\n                    <FontIcon iconName=\"Timeline\" style={{ fontSize: '12px' }} />\r\n                    Timeline\r\n                  </button>\r\n                  <button\r\n                    className={buttonStyle('secondary')}\r\n                    onClick={() => {\r\n                      console.log('Opening matter documents');\r\n                    }}\r\n                  >\r\n                    <FontIcon iconName=\"Documentation\" style={{ fontSize: '12px' }} />\r\n                    Documents\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {clientMatters.length > 0 && (\r\n              <div style={{ borderTop: `1px solid ${borderColour(isDarkMode)}`, paddingTop: '12px' }}>\r\n                <div style={{\r\n                  fontSize: 9,\r\n                  color: mutedText(isDarkMode),\r\n                  textTransform: 'uppercase',\r\n                  letterSpacing: '0.04em',\r\n                  marginBottom: '8px'\r\n                }}>\r\n                  Client's Other Matters ({clientMatters.length})\r\n                </div>\r\n                <div style={{ display: 'flex', flexDirection: 'column', gap: '8px', maxHeight: '200px', overflowY: 'auto' }}>\r\n                  {clientMatters.map((matter: any, index: number) => (\r\n                    <div key={index} style={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                      alignItems: 'center',\r\n                      padding: '12px',\r\n                      background: cardBackground(isDarkMode),\r\n                      borderRadius: 8,\r\n                      border: `1px solid ${borderColour(isDarkMode)}`,\r\n                      fontSize: 10,\r\n                      boxShadow: elevatedShadow(isDarkMode)\r\n                    }}>\r\n                      <div>\r\n                        <div style={{ fontWeight: 600, color: isDarkMode ? colours.dark.text : '#111827', marginBottom: '4px' }}>\r\n                          {(() => {\r\n                            const displayValue = getMatterDisplayNumber(matter);\r\n                            const matterId = getMatterIdString(matter);\r\n                            if (displayValue && displayValue !== matterId) {\r\n                              return displayValue;\r\n                            }\r\n                            return matterId ? `Matter ${matterId}` : 'Matter';\r\n                          })()}\r\n                        </div>\r\n                        <div style={{ color: mutedText(isDarkMode), fontSize: 9 }}>\r\n                          {matter.description || 'No description'}\r\n                        </div>\r\n                      </div>\r\n                      {getMatterIdString(matter) && (\r\n                        <div style={{ fontSize: 9, color: mutedText(isDarkMode) }}>\r\n                          ID: {getMatterIdString(matter)}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <style>\r\n        {`\r\n          @keyframes spin {\r\n            0% { transform: rotate(0deg); }\r\n            100% { transform: rotate(360deg); }\r\n          }\r\n        `}\r\n      </style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MatterOperations;","//\r\nimport React, { useState } from 'react'; // invisible change\r\n// invisible change 2.2\r\nimport { SearchBox } from '@fluentui/react';\r\nimport './MinimalSearchBox.css';\r\n\r\ninterface MinimalSearchBoxProps {\r\n  value: string;\r\n  onChange: (v: string) => void;\r\n  focused: boolean;\r\n  onRequestClose: () => void;\r\n  onRequestOpen?: () => void;\r\n}\r\n\r\nconst MinimalSearchBox: React.FC<MinimalSearchBoxProps> = ({ value, onChange, focused, onRequestClose, onRequestOpen }) => {\r\n  return (\r\n    <div className={`minimal-searchbox${focused ? ' expanded' : ''}`}>\r\n      {!focused && !value && (\r\n        <button\r\n          className=\"minimal-searchbox-iconbtn\"\r\n          aria-label=\"Search clients\"\r\n          tabIndex={0}\r\n          type=\"button\"\r\n          onClick={onRequestOpen}\r\n        >\r\n          <span className=\"ms-SearchBox-icon\" style={{ color: '#0078d4', fontSize: 20, display: 'flex', alignItems: 'center' }}>\r\n            <i className=\"ms-Icon ms-Icon--Search\" aria-hidden=\"true\" />\r\n          </span>\r\n        </button>\r\n      )}\r\n      {focused && (\r\n        <SearchBox\r\n          value={value}\r\n          onChange={(_, v) => onChange(v || '')}\r\n          placeholder=\"Search clients...\"\r\n          styles={{\r\n            root: {\r\n              background: '#fff',\r\n              borderRadius: 24,\r\n              minWidth: 220,\r\n              maxWidth: 320,\r\n              boxShadow: '0 4px 24px 0 rgba(0,120,212,0.12)',\r\n              transition: 'box-shadow 0.3s',\r\n              border: '1.5px solid #0078d4',\r\n              padding: '0 8px',\r\n            },\r\n            field: {\r\n              fontSize: 16,\r\n              background: 'transparent',\r\n              border: 'none',\r\n              padding: '8px 0',\r\n            },\r\n            icon: {\r\n              color: '#0078d4',\r\n              fontSize: 18,\r\n            },\r\n          }}\r\n          underlined={false}\r\n          disableAnimation={false}\r\n          onBlur={onRequestClose}\r\n          onFocus={onRequestOpen}\r\n          onKeyDown={e => {\r\n            if (e.key === 'Escape') {\r\n              onRequestClose();\r\n            }\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MinimalSearchBox;\r\n// invisible change 2\r\n","//\r\nexport type StepKey = // invisible change\r\n// invisible change 2.2\r\n    | 'clientInfo'\r\n    | 'poidSelection'\r\n    | 'areaOfWork'\r\n    | 'practiceArea'\r\n    | 'description'\r\n    | 'folderStructure'\r\n    | 'disputeValue'\r\n    | 'source'\r\n    | 'opponentDetails'\r\n    | 'review';\r\n\r\nexport const stepTitles: { [key in StepKey]: string } = {\r\n    clientInfo: 'Main Details',\r\n    poidSelection: 'Choose Proof of Identity',\r\n    areaOfWork: 'Select Area of Work',\r\n    practiceArea: 'Select Practice Area',\r\n    description: 'Enter Description',\r\n    folderStructure: 'Select NetDocuments Folder Structure',\r\n    disputeValue: 'Select Value of the Dispute',\r\n    source: 'Select Source & Confirm Referrer (if applicable)',\r\n    opponentDetails: 'Confirm Opponent Details',\r\n    review: 'Review & Build Matter',\r\n};\r\n\r\nexport const practiceAreasByArea: { [key: string]: string[] } = {\r\n    Commercial: [\r\n        'Commercial',\r\n        'Director Rights & Dispute Advice',\r\n        'Shareholder Rights & Dispute Advice',\r\n        'Civil/Commercial Fraud Advice',\r\n        'Partnership Advice',\r\n        'Business Contract Dispute',\r\n        'Unpaid Loan Recovery',\r\n        'Contentious Probate',\r\n        'Statutory Demand - Drafting',\r\n        'Statutory Demand - Advising',\r\n        'Winding Up Petition Advice',\r\n        'Bankruptcy Petition Advice',\r\n        'Injunction Advice',\r\n        'Intellectual Property',\r\n        'Professional Negligence',\r\n        'Unpaid Invoice/Debt Dispute',\r\n        'Commercial Contract - Drafting',\r\n        'Company Restoration',\r\n        'Small Claim Advice',\r\n        'Trust Advice',\r\n        'Terms and Conditions - Drafting',\r\n        'Miscellaneous',\r\n    ],\r\n    Construction: [\r\n        'Final Account Recovery',\r\n        'Retention Recovery Advice',\r\n        'Adjudication Advice & Dispute',\r\n        'Construction Contract Advice',\r\n        'Interim Payment Recovery',\r\n        'Contract Dispute',\r\n        'Miscellaneous',\r\n    ],\r\n    Property: [\r\n        'Landlord & Tenant – Commercial Dispute',\r\n        'Landlord & Tenant – Residential Dispute',\r\n        'Boundary and Nuisance Advice',\r\n        'Trust of Land (Tolata) Advice',\r\n        'Service Charge Recovery & Dispute Advice',\r\n        'Breach of Lease Advice',\r\n        'Terminal Dilapidations Advice',\r\n        'Investment Sale and Ownership – Advice',\r\n        'Trespass',\r\n        'Right of Way',\r\n        'Miscellaneous',\r\n    ],\r\n    Employment: [\r\n        'Employment Contract - Drafting',\r\n        'Employment Retainer Instruction',\r\n        'Settlement Agreement - Drafting',\r\n        'Settlement Agreement - Advising',\r\n        'Handbook - Drafting',\r\n        'Policy - Drafting',\r\n        'Redundancy - Advising',\r\n        'Sick Leave - Advising',\r\n        'Disciplinary - Advising',\r\n        'Restrictive Covenant Advice',\r\n        'Post Termination Dispute',\r\n        'Employment Tribunal Claim - Advising',\r\n        'Miscellaneous',\r\n    ],\r\n};\r\n\r\nexport const partnerOptions = ['Alex', 'Jonathan', 'Luke', 'Kanchel'];\r\n\r\nexport const getGroupColor = (group: string): string => {\r\n    switch (group) {\r\n        case 'Commercial':\r\n            return '#91a7ff';\r\n        case 'Construction':\r\n            return '#ffba08';\r\n        case 'Property':\r\n            return '#4ecdc4';\r\n        case 'Employment':\r\n            return '#ffd166';\r\n        default:\r\n            return '#ff686b';\r\n    }\r\n};\r\n\r\n","//\r\nimport React from 'react'; // invisible change // invisible change\r\n// invisible change 2.2\r\nimport { Stack } from '@fluentui/react';\r\nimport { colours } from '../../../app/styles/colours';\r\n\r\nexport interface ModernMultiSelectOption {\r\n    key: string;\r\n    text: string;\r\n    disabled?: boolean;\r\n}\r\n\r\ninterface ModernMultiSelectProps {\r\n    label: string;\r\n    options: ModernMultiSelectOption[];\r\n    selectedValue: string | null;\r\n    onSelectionChange: (value: string) => void;\r\n    variant?: 'default' | 'binary' | 'grid';\r\n    className?: string;\r\n    disabled?: boolean;\r\n}\r\n\r\nconst ModernMultiSelect: React.FC<ModernMultiSelectProps> = ({\r\n    label,\r\n    options,\r\n    selectedValue,\r\n    onSelectionChange,\r\n    variant = 'default',\r\n    className = '',\r\n    disabled = false\r\n}) => {\r\n    const getGridColumns = () => {\r\n        if (variant === 'binary' && options.length === 2) {\r\n            return 'repeat(2, 1fr)';\r\n        }\r\n        if (variant === 'grid') {\r\n            return 'repeat(auto-fit, minmax(120px, 1fr))';\r\n        }\r\n        // Default horizontal layout\r\n        return `repeat(${options.length}, 1fr)`;\r\n    };\r\n\r\n    const containerStyle: React.CSSProperties = {\r\n        display: 'grid',\r\n        gridTemplateColumns: getGridColumns(),\r\n        gap: variant === 'binary' ? '0' : '6px',\r\n        width: '100%',\r\n        border: variant === 'binary' ? `1px solid ${selectedValue ? colours.highlight : '#E2E8F0'}` : 'none',\r\n        borderRadius: '6px', // Slightly rounded for modern look\r\n        overflow: 'hidden',\r\n        background: variant === 'binary' ? 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)' : 'transparent',\r\n        boxShadow: variant === 'binary' ? '0 1px 2px rgba(0,0,0,0.03)' : 'none',\r\n    };\r\n\r\n    const getOptionStyle = (option: ModernMultiSelectOption, index: number): React.CSSProperties => {\r\n        const isSelected = selectedValue === option.key;\r\n        const isDisabled = disabled || option.disabled;\r\n        \r\n        const baseStyle: React.CSSProperties = {\r\n            padding: variant === 'binary' ? '10px 12px' : '8px 12px',\r\n            textAlign: 'center',\r\n            cursor: isDisabled ? 'not-allowed' : 'pointer',\r\n            userSelect: 'none',\r\n            fontSize: '12px',\r\n            fontWeight: '500',\r\n            transition: 'all 0.2s ease',\r\n            border: variant === 'binary' ? 'none' : `1px solid #e0e0e0`,\r\n            background: 'transparent',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            minHeight: '36px',\r\n            position: 'relative',\r\n        };\r\n\r\n        if (variant === 'binary') {\r\n            return {\r\n                ...baseStyle,\r\n                color: isSelected ? colours.highlight : '#64748B',\r\n                background: isSelected ? `${colours.highlight}15` : 'transparent',\r\n                borderRight: index === 0 && options.length > 1 ? `1px solid #E2E8F0` : 'none',\r\n                opacity: isDisabled ? 0.5 : 1,\r\n                fontWeight: isSelected ? '600' : '500',\r\n                transition: 'all 0.2s cubic-bezier(0.4, 0, 0.2, 1)',\r\n            };\r\n        }\r\n\r\n        return {\r\n            ...baseStyle,\r\n            color: isSelected ? colours.highlight : '#64748B',\r\n            background: isSelected ? `${colours.highlight}15` : 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n            borderColor: isSelected ? colours.highlight : '#E2E8F0',\r\n            opacity: isDisabled ? 0.5 : 1,\r\n            boxShadow: isSelected ? `0 1px 3px ${colours.highlight}20` : '0 1px 2px rgba(0,0,0,0.03)',\r\n            borderRadius: '6px',\r\n        };\r\n    };\r\n\r\n    const questionBannerStyle: React.CSSProperties = {\r\n        background: `linear-gradient(to right, #ffffff, ${colours.light.grey})`,\r\n        borderLeft: `3px solid ${colours.cta}`,\r\n        padding: '4px 8px',\r\n        fontWeight: '600',\r\n        color: '#061733',\r\n        marginBottom: '6px',\r\n        fontSize: '11px',\r\n        borderRadius: '0 4px 4px 0',\r\n    };\r\n\r\n    return (\r\n        <Stack tokens={{ childrenGap: 0 }} className={className}>\r\n            {label && (\r\n                <div style={questionBannerStyle}>\r\n                    {label}\r\n                </div>\r\n            )}\r\n            <div style={containerStyle}>\r\n                {options.map((option, index) => (\r\n                    <div\r\n                        key={option.key}\r\n                        style={getOptionStyle(option, index)}\r\n                        onClick={() => {\r\n                            if (!disabled && !option.disabled) {\r\n                                onSelectionChange(option.key);\r\n                            }\r\n                        }}\r\n                        onMouseEnter={(e) => {\r\n                            if (!disabled && !option.disabled && selectedValue !== option.key) {\r\n                                if (variant === 'binary') {\r\n                                    e.currentTarget.style.background = 'linear-gradient(135deg, #F1F5F9 0%, #E2E8F0 100%)';\r\n                                    e.currentTarget.style.color = '#3690CE';\r\n                                } else {\r\n                                    e.currentTarget.style.background = 'linear-gradient(135deg, #F1F5F9 0%, #E2E8F0 100%)';\r\n                                    e.currentTarget.style.borderColor = colours.highlight;\r\n                                    e.currentTarget.style.boxShadow = '0 2px 4px rgba(0,0,0,0.06)';\r\n                                }\r\n                            }\r\n                        }}\r\n                        onMouseLeave={(e) => {\r\n                            if (!disabled && !option.disabled && selectedValue !== option.key) {\r\n                                if (variant === 'binary') {\r\n                                    e.currentTarget.style.background = 'transparent';\r\n                                    e.currentTarget.style.color = '#64748B';\r\n                                } else {\r\n                                    e.currentTarget.style.background = 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)';\r\n                                    e.currentTarget.style.borderColor = '#E2E8F0';\r\n                                    e.currentTarget.style.boxShadow = '0 1px 2px rgba(0,0,0,0.03)';\r\n                                }\r\n                            }\r\n                        }}\r\n                        role=\"button\"\r\n                        tabIndex={disabled || option.disabled ? -1 : 0}\r\n                        aria-pressed={selectedValue === option.key}\r\n                        onKeyDown={(e) => {\r\n                            if (e.key === 'Enter' || e.key === ' ') {\r\n                                e.preventDefault();\r\n                                if (!disabled && !option.disabled) {\r\n                                    onSelectionChange(option.key);\r\n                                }\r\n                            }\r\n                        }}\r\n                    >\r\n                        {option.text}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </Stack>\r\n    );\r\n};\r\n\r\nexport default ModernMultiSelect;\r\n","import React from 'react'; // invisible change // invisible change\r\n// invisible change 2.2\r\nimport {\r\n    Stack,\r\n    Text,\r\n    PrimaryButton,\r\n    mergeStyles,\r\n    TextField,\r\n} from '@fluentui/react';\r\nimport { sharedPrimaryButtonStyles } from '../../../app/styles/ButtonStyles';\r\nimport { colours } from '../../../app/styles/colours';\r\nimport '../../../app/styles/MultiSelect.css';\r\nimport ModernMultiSelect from './ModernMultiSelect';\r\n\r\ninterface ClientInfoStepProps {\r\n    selectedDate: Date | null;\r\n    setSelectedDate: (d: Date) => void;\r\n    teamMember: string;\r\n    setTeamMember: (s: string) => void;\r\n    teamMemberOptions: string[];\r\n    supervisingPartner: string;\r\n    setSupervisingPartner: (s: string) => void;\r\n    originatingSolicitor: string;\r\n    setOriginatingSolicitor: (s: string) => void;\r\n    isDateCalloutOpen: boolean;\r\n    setIsDateCalloutOpen: (v: boolean) => void;\r\n    dateButtonRef: React.RefObject<HTMLDivElement>;\r\n    partnerOptions: string[];\r\n    /** Options for Responsible/Originating Solicitor (active solicitors/partners) */\r\n    solicitorOptions: string[];\r\n    requestingUser: string;\r\n    requestingUserClioId: string;\r\n    onContinue?: () => void;\r\n}\r\n\r\nconst ClientInfoStep: React.FC<ClientInfoStepProps> = ({\r\n    selectedDate,\r\n    setSelectedDate,\r\n    teamMember,\r\n    setTeamMember,\r\n    teamMemberOptions,\r\n    supervisingPartner,\r\n    setSupervisingPartner,\r\n    originatingSolicitor,\r\n    setOriginatingSolicitor,\r\n    isDateCalloutOpen,\r\n    setIsDateCalloutOpen,\r\n    dateButtonRef,\r\n    partnerOptions,\r\n    solicitorOptions,\r\n    requestingUser,\r\n    requestingUserClioId,\r\n    onContinue,\r\n}) => {\r\n    const separatorStyle = mergeStyles({\r\n        height: '1px',\r\n        backgroundColor: colours.light.border,\r\n        margin: '0.5rem 0',\r\n    });\r\n\r\n    // Live time state\r\n    const [liveTime, setLiveTime] = React.useState<string>(\r\n        new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' } as any)\r\n    );\r\n    React.useEffect(() => {\r\n        const interval = setInterval(\r\n            () => setLiveTime(new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' } as any)),\r\n            15000\r\n        );\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Stack tokens={{ childrenGap: 8 }}>\r\n                {/* Date/User chips now shown in global header; removed local chips row */}\r\n\r\n                {/* Responsible Solicitor / Originating Solicitor */}\r\n                <div style={{ display: 'flex', gap: 12 }}>\r\n                    <div style={{ flex: 1 }}>\r\n                        <div style={{ display: 'flex', alignItems: 'center', gap: 8, marginBottom: 4 }}>\r\n                            <i className=\"ms-Icon ms-Icon--Contact\" style={{ fontSize: 16, color: '#3690CE' }} />\r\n                            <span style={{ fontSize: 16, fontWeight: 600, color: colours.greyText }}>Responsible Solicitor</span>\r\n                        </div>\r\n                        <div\r\n                            style={{\r\n                                position: 'relative',\r\n                                width: '100%',\r\n                                height: '40px',\r\n                                border: `1px solid ${colours.highlight}`,\r\n                                borderRadius: 6,\r\n                                background: teamMember\r\n                                    ? `${colours.highlight}15`\r\n                                    : '#fff',\r\n                                overflow: 'hidden',\r\n                            }}\r\n                        >\r\n                            <select\r\n                                value={teamMember}\r\n                                onChange={(e) => setTeamMember(e.target.value)}\r\n                                style={{\r\n                                    width: '100%',\r\n                                    height: '100%',\r\n                                    border: 'none',\r\n                                    background: 'transparent',\r\n                                    padding: '0 32px 0 12px',\r\n                                    fontSize: '13px',\r\n                                    color: teamMember ? colours.highlight : '#4a5568',\r\n                                    fontWeight: '400',\r\n                                    appearance: 'none',\r\n                                    cursor: 'pointer',\r\n                                    outline: 'none',\r\n                                }}\r\n                            >\r\n                                <option value=\"\" disabled>\r\n                                    Select Responsible Solicitor\r\n                                </option>\r\n                                {solicitorOptions.map((name) => (\r\n                                    <option key={name} value={name}>\r\n                                        {name}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                            <div\r\n                                style={{\r\n                                    position: 'absolute',\r\n                                    right: '8px',\r\n                                    top: '50%',\r\n                                    transform: 'translateY(-50%)',\r\n                                    pointerEvents: 'none',\r\n                                    color: teamMember ? colours.highlight : '#4a5568',\r\n                                }}\r\n                            >\r\n                                <svg\r\n                                    width=\"12\"\r\n                                    height=\"12\"\r\n                                    viewBox=\"0 0 24 24\"\r\n                                    fill=\"none\"\r\n                                >\r\n                                    <path\r\n                                        d=\"M6 9l6 6 6-6\"\r\n                                        stroke=\"currentColor\"\r\n                                        strokeWidth=\"2\"\r\n                                        strokeLinecap=\"round\"\r\n                                        strokeLinejoin=\"round\"\r\n                                    />\r\n                                </svg>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div style={{ flex: 1 }}>\r\n                        <div style={{ display: 'flex', alignItems: 'center', gap: 8, marginBottom: 4 }}>\r\n                            <i className=\"ms-Icon ms-Icon--Contact\" style={{ fontSize: 16, color: '#3690CE' }} />\r\n                            <span style={{ fontSize: 16, fontWeight: 600, color: colours.greyText }}>Originating Solicitor</span>\r\n                        </div>\r\n                        <div\r\n                            style={{\r\n                                position: 'relative',\r\n                                width: '100%',\r\n                                height: '40px',\r\n                                border: `1px solid ${colours.highlight}`,\r\n                                borderRadius: 6,\r\n                                background: originatingSolicitor\r\n                                    ? `${colours.highlight}15`\r\n                                    : '#fff',\r\n                                overflow: 'hidden',\r\n                            }}\r\n                        >\r\n                            <select\r\n                                value={originatingSolicitor}\r\n                                onChange={(e) =>\r\n                                    setOriginatingSolicitor(e.target.value)\r\n                                }\r\n                                style={{\r\n                                    width: '100%',\r\n                                    height: '100%',\r\n                                    border: 'none',\r\n                                    background: 'transparent',\r\n                                    padding: '0 40px 0 16px',\r\n                                    fontSize: '13px',\r\n                                    color: originatingSolicitor\r\n                                        ? colours.highlight\r\n                                        : '#4a5568',\r\n                                    fontWeight: '400',\r\n                                    appearance: 'none',\r\n                                    cursor: 'pointer',\r\n                                    outline: 'none',\r\n                                }}\r\n                            >\r\n                                <option value=\"\" disabled>\r\n                                    Select Originating Solicitor\r\n                                </option>\r\n                                {solicitorOptions.map((name) => (\r\n                                    <option key={name} value={name}>\r\n                                        {name}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                            <div\r\n                                style={{\r\n                                    position: 'absolute',\r\n                                    right: '12px',\r\n                                    top: '50%',\r\n                                    transform: 'translateY(-50%)',\r\n                                    pointerEvents: 'none',\r\n                                    color: originatingSolicitor\r\n                                        ? colours.highlight\r\n                                        : '#4a5568',\r\n                                }}\r\n                            >\r\n                                <svg\r\n                                    width=\"16\"\r\n                                    height=\"16\"\r\n                                    viewBox=\"0 0 24 24\"\r\n                                    fill=\"none\"\r\n                                >\r\n                                    <path\r\n                                        d=\"M6 9l6 6 6-6\"\r\n                                        stroke=\"currentColor\"\r\n                                        strokeWidth=\"2\"\r\n                                        strokeLinecap=\"round\"\r\n                                        strokeLinejoin=\"round\"\r\n                                    />\r\n                                </svg>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Supervising Partner */}\r\n                <div style={{ marginTop: 12 }}>\r\n                    <div style={{ display: 'flex', alignItems: 'center', gap: 8, marginBottom: 4 }}>\r\n                        <i className=\"ms-Icon ms-Icon--Contact\" style={{ fontSize: 16, color: '#3690CE' }} />\r\n                        <span style={{ fontSize: 16, fontWeight: 600, color: colours.greyText }}>Supervising Partner</span>\r\n                    </div>\r\n                    <ModernMultiSelect\r\n                        label=\"\"\r\n                        options={partnerOptions.map((name) => ({\r\n                            key: name,\r\n                            text: name,\r\n                        }))}\r\n                        selectedValue={supervisingPartner}\r\n                        onSelectionChange={setSupervisingPartner}\r\n                        variant=\"grid\"\r\n                    />\r\n                </div>\r\n\r\n                {onContinue && (\r\n                    <PrimaryButton\r\n                        text=\"Continue\"\r\n                        onClick={onContinue}\r\n                        styles={sharedPrimaryButtonStyles}\r\n                    />\r\n                )}\r\n            </Stack>\r\n\r\n            <style>{`\r\n        @keyframes pulse {\r\n          0% {\r\n            box-shadow: 0 0 0 0 rgba(16, 185, 129, 0.7);\r\n          }\r\n          70% {\r\n            box-shadow: 0 0 0 6px rgba(16, 185, 129, 0);\r\n          }\r\n          100% {\r\n            box-shadow: 0 0 0 0 rgba(16, 185, 129, 0);\r\n          }\r\n        }\r\n      `}</style>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ClientInfoStep;\r\n","// ---   Imports ---\r\n// invisible change 2.1\r\n//\r\nimport { Stack, Text, mergeStyles, Icon } from '@fluentui/react';\r\nimport { POID, TeamData } from '../../app/functionality/types';\r\nimport { useTheme } from '../../app/functionality/ThemeContext';\r\nimport { colours } from '../../app/styles/colours';\r\nimport { componentTokens } from '../../app/styles/componentTokens';\r\nimport React, { useMemo } from 'react';// Helper to calculate countdown to midnight after expiry date\r\n\r\n// Button style for PEP & Address (inspired by client type, but color-coded, no rounded corners, full width, banner font size)\r\nconst verificationButtonStyle = (status: string) => ({\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: '4px 8px', // Match banner padding\r\n    fontSize: '0.9rem', // Match banner font size\r\n    fontWeight: 400,\r\n    borderRadius: 0,\r\n    border: '1px solid', // Changed from 2px to 1px for a neater look\r\n    borderColor: status === 'passed' ? '#107C10' : '#FFB900',\r\n    background: status === 'passed' ? '#e6f4ea' : '#fffbe6',\r\n    color: status === 'passed' ? '#107C10' : '#b88600',\r\n    marginRight: 0,\r\n    marginBottom: 0,\r\n    minWidth: 0,\r\n    width: '50%',\r\n    transition: 'background 0.18s, border 0.18s, color 0.18s',\r\n    cursor: 'default',\r\n    boxShadow: '0 1px 2px rgba(6,23,51,0.04)'\r\n});\r\n// src/tabs/matters/PoidCard.tsx\r\nfunction getExpiryCountdown(expiryDateString: string | undefined): string | null {\r\n    if (!expiryDateString) return null;\r\n    // Parse expiry date (assume yyyy-mm-dd or ISO)\r\n    const expiryDate = new Date(expiryDateString);\r\n    if (isNaN(expiryDate.getTime())) return null;\r\n    // Set to midnight (00:00) the day after expiry\r\n    const expiryMidnight = new Date(expiryDate);\r\n    expiryMidnight.setDate(expiryMidnight.getDate() + 1);\r\n    expiryMidnight.setHours(0, 0, 0, 0);\r\n    const now = new Date();\r\n    let diff = expiryMidnight.getTime() - now.getTime();\r\n    if (diff <= 0) return 'expired';\r\n    // Calculate months, days, hours\r\n    const msPerHour = 1000 * 60 * 60;\r\n    const msPerDay = msPerHour * 24;\r\n    // Months: rough calculation (30d per month)\r\n    const months = Math.floor(diff / (msPerDay * 30));\r\n    diff -= months * msPerDay * 30;\r\n    const days = Math.floor(diff / msPerDay);\r\n    diff -= days * msPerDay;\r\n    const hours = Math.floor(diff / msPerHour);\r\n    // Format string\r\n    let parts = [];\r\n    if (months > 0) parts.push(`${months}m`);\r\n    if (days > 0) parts.push(`${days}d`);\r\n    if (hours > 0) parts.push(`${hours}h`);\r\n    if (parts.length === 0) parts.push('<1h');\r\n    return `expires in ${parts.join(' ')}`;\r\n}\r\n\r\nconst getVerificationColor = (result: string) => {\r\n    const level = result?.toLowerCase();\r\n    if (level === 'passed' || level === 'pass' || level === 'approved') {\r\n        return { background: '#e6f4ea', text: '#107C10', border: '#107C10' };\r\n    }\r\n    if (level === 'review' || level === 'pending') {\r\n        return { background: '#fffbe6', text: '#b88600', border: '#FFB900' };\r\n    }\r\n    if (level === 'failed' || level === 'fail' || level === 'rejected') {\r\n        return { background: '#fde7e9', text: '#d13438', border: '#d13438' };\r\n    }\r\n    return { background: '#f4f4f6', text: '#666', border: '#e1dfdd' };\r\n};\r\n\r\n// Helper to calculate age from a date string\r\nconst calculateAge = (dob: string): number => {\r\n    const birthDate = new Date(dob);\r\n    const today = new Date();\r\n    let age = today.getFullYear() - birthDate.getFullYear();\r\n    const m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n        age--;\r\n    }\r\n    return age;\r\n};\r\n\r\ninterface PoidCardProps {\r\n    poid: POID;\r\n    selected: boolean;\r\n    onClick: () => void;\r\n    teamData?: TeamData[] | null;\r\n    companyName?: string; // invisible change 3: now passed from parent, not POID\r\n    /** Optional explicit instruction reference to display (overrides POID-derived) */\r\n    instructionRefOverride?: string;\r\n    /** Optional explicit matter reference to display */\r\n    matterRefOverride?: string;\r\n}\r\n\r\n// Updated card dimensions to fit nicely in a 2-column grid\r\nconst baseCardStyle = mergeStyles({\r\n    position: 'relative',\r\n    padding: '15px',\r\n    borderRadius: '8px',\r\n    width: '100%',\r\n    minWidth: '280px', // Adjusted for 2-card layout\r\n    maxWidth: '450px', // Increased maximum width for better use of space\r\n    cursor: 'pointer',\r\n    background: 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n    boxSizing: 'border-box',\r\n    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.07)',\r\n    fontFamily: 'Raleway, sans-serif',\r\n    transition: 'transform 0.2s ease, box-shadow 0.2s ease, height 0.3s ease, z-index 0.2s ease',\r\n    overflow: 'visible',\r\n    zIndex: 1, // Default z-index for cards\r\n    selectors: {\r\n        ':hover': {\r\n            transform: 'translateY(-1px)', // Professional subtle lift\r\n            boxShadow: '0 8px 16px rgba(0,0,0,0.12)',\r\n        },\r\n        // Show icon in full opacity on hover\r\n        ':hover .backgroundIcon': {\r\n            opacity: 1,\r\n        },\r\n    },\r\n});\r\n\r\nconst darkCardStyle = mergeStyles({\r\n    background: 'linear-gradient(135deg, #1a2332 0%, #151d28 100%)',\r\n    border: '1px solid rgba(255,255,255,0.08)',\r\n    fontFamily: 'Raleway, sans-serif',\r\n    color: '#e2e8f0',\r\n    boxShadow: '0 4px 8px rgba(0,0,0,0.3)',\r\n    selectors: {\r\n        ':hover': {\r\n            boxShadow: '0 8px 16px rgba(0,0,0,0.4)',\r\n        },\r\n    },\r\n});\r\n\r\nconst selectedCardStyle = mergeStyles({\r\n    // Keep border on selection, matching instruction card styling\r\n    border: `2px solid ${colours.highlight}`,\r\n    background: `linear-gradient(135deg, #EAF3FB 0%, #DDEBF7 100%)`,\r\n    fontFamily: 'Raleway, sans-serif',\r\n    selectors: {\r\n        // Keep icon at full opacity when selected\r\n        '.inlinePersonCompanyIcon': {\r\n            opacity: '1 !important',\r\n        }\r\n    }\r\n});\r\n\r\nconst selectedDarkCardStyle = mergeStyles({\r\n    border: `2px solid ${colours.highlight}`,\r\n    background: `linear-gradient(135deg, rgba(54,144,206,0.15) 0%, rgba(54,144,206,0.08) 100%)`,\r\n    color: '#e2e8f0',\r\n    fontFamily: 'Raleway, sans-serif',\r\n    selectors: {\r\n        '.inlinePersonCompanyIcon': {\r\n            opacity: '1 !important',\r\n        }\r\n    }\r\n});\r\n\r\nconst iconStyle = mergeStyles({\r\n    position: 'absolute',\r\n    top: 10,\r\n    right: 10,\r\n    fontSize: 24,\r\n    color: colours.highlight,\r\n});\r\n\r\nconst bottomContainerStyle = mergeStyles({\r\n    position: 'absolute',\r\n    bottom: 15,\r\n    left: 15,\r\n    right: 15, // Extended to allow more space\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    zIndex: 10, // Ensure it stays on top\r\n    height: '30px', // Set explicit height for the bottom container\r\n});\r\n\r\nconst idTextStyle = mergeStyles({\r\n    fontSize: '0.8rem',\r\n    fontWeight: 600,\r\n    fontFamily: 'Raleway, sans-serif',\r\n    maxWidth: '70%',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    whiteSpace: 'nowrap',\r\n    padding: '2px 0',\r\n    backgroundColor: 'rgba(255, 255, 255, 0.8)',\r\n});\r\n\r\nconst badgeStyle = mergeStyles({\r\n    padding: '2px 8px',\r\n    borderRadius: '0px',\r\n    backgroundColor: colours.grey,\r\n    color: '#333',\r\n    fontSize: '0.7rem',\r\n    fontWeight: 600,\r\n    fontFamily: 'Raleway, sans-serif',\r\n});\r\n\r\nconst backgroundIconStyle = mergeStyles({\r\n    position: 'absolute',\r\n    bottom: 20,\r\n    right: 10,\r\n    fontSize: '55px',\r\n    transformOrigin: 'bottom right',\r\n    opacity: 0.3, // Reduced default opacity\r\n    pointerEvents: 'none',\r\n    zIndex: 0,\r\n    color: colours.highlight,\r\n    overflow: 'hidden',\r\n    transition: 'opacity 0.2s ease', // Add transition for smooth opacity change\r\n});\r\n\r\nconst contentStyle = mergeStyles({\r\n    position: 'relative',\r\n    zIndex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-start',\r\n    overflow: 'visible', // Allow content to expand naturally\r\n    width: '100%', // Ensure content uses full width\r\n});\r\n\r\n// Animate in the links on card hover\r\nconst cardWithLinksHover = mergeStyles({\r\n    selectors: {\r\n        ':hover': {\r\n            zIndex: '10 !important', // Bring expanded card above others\r\n            boxShadow: '0 6px 20px rgba(0,0,0,0.2) !important', // Enhanced shadow when expanded\r\n            border: '1px solid #e1e5ea', // Subtle border when expanded\r\n            transform: 'translateY(-2px) !important', // Consistent with base hover\r\n        },\r\n        ':hover .profileLink': {\r\n            opacity: 1,\r\n            pointerEvents: 'auto',\r\n            height: '44px', // Animate in height for links\r\n        },\r\n        ':hover .expandableContact': {\r\n            maxHeight: '250px',\r\n            opacity: 1,\r\n            padding: '8px',\r\n            marginTop: '0px', // No gap for visual connection\r\n        },\r\n        ':hover .chevron-indicator': {\r\n            transform: 'rotate(180deg)',\r\n        },\r\n        ':hover .expandableContact .contact-item': {\r\n            animation: 'cascadeIn 0.4s ease-out forwards',\r\n        },\r\n        ':hover .expandableContact .contact-item:nth-child(1)': { animationDelay: '0.05s' },\r\n        ':hover .expandableContact .contact-item:nth-child(2)': { animationDelay: '0.1s' },\r\n        ':hover .expandableContact .contact-item:nth-child(3)': { animationDelay: '0.15s' },\r\n        ':hover .expandableContact .contact-item:nth-child(4)': { animationDelay: '0.2s' },\r\n        ':hover .expandableContact .contact-item:nth-child(5)': { animationDelay: '0.25s' },\r\n        ':hover .expandableContact .contact-item:nth-child(6)': { animationDelay: '0.3s' },\r\n    },\r\n});\r\n\r\n// Compact contact block (always visible)\r\nconst contactBlockStyle = mergeStyles({\r\n    padding: '8px',\r\n    backgroundColor: '#f8f9fb',\r\n    border: '1px solid #e1e5ea',\r\n    marginTop: '4px',\r\n});\r\n\r\n// New style for profile link buttons - same size and behaviour as client type buttons\r\nconst profileButtonStyle = mergeStyles({\r\n    flex: 1,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    textDecoration: 'none',\r\n    color: '#061733',\r\n    border: '2px solid #e1dfdd',\r\n    borderRadius: 0,\r\n    padding: '12px 18px',\r\n    fontSize: '0.9rem',\r\n    fontWeight: 600,\r\n    background: '#fff',\r\n    transition: 'background 0.18s, border 0.18s, color 0.18s',\r\n    minWidth: 0,\r\n    boxShadow: '0 1px 2px rgba(6,23,51,0.04)',\r\n    cursor: 'pointer',\r\n    gap: 8,\r\n    selectors: {\r\n        ':hover': {\r\n            background: '#e7f1ff',\r\n            border: '2px solid #3690CE',\r\n            color: '#3690CE',\r\n            textDecoration: 'none',\r\n        },\r\n        ':focus': {\r\n            outline: '2px solid #3690CE',\r\n        },\r\n        ':active': {\r\n            background: '#d0e7ff',\r\n        },\r\n    },\r\n});\r\n\r\nconst PoidCard: React.FC<PoidCardProps> = ({ poid, selected, onClick, teamData, companyName, instructionRefOverride, matterRefOverride }) => {\r\n    const { isDarkMode } = useTheme();\r\n\r\n\r\n    // Compose card style\r\n    const cardStyle = mergeStyles(\r\n        baseCardStyle,\r\n        isDarkMode && darkCardStyle,\r\n        selected && (isDarkMode ? selectedDarkCardStyle : selectedCardStyle),\r\n        cardWithLinksHover,\r\n        'poid-card'\r\n    );\r\n\r\n    // Choose icon based on whether POID has company information\r\n    const isCompany = !!(poid.company_name || poid.company_number);\r\n    const backgroundIconName = isCompany ? \"CityNext\" : \"Contact\";\r\n\r\n    const teamMember = teamData?.find(\r\n        (member) => member.Email?.toLowerCase() === poid.poc?.toLowerCase()\r\n    );\r\n    const badgeInitials = teamMember?.Initials;\r\n\r\n    const stage = poid.stage?.toLowerCase();\r\n    const isCompleted = stage === 'completed';\r\n    const isReview = stage === 'review';\r\n\r\n    // --- New: Extract more fields for realistic display ---\r\n    // Accept both snake_case and camelCase for compatibility, but POID type is mostly snake_case\r\n    const fullName = `${poid.prefix || ''} ${poid.first || '[No First Name]'} ${poid.last || '[No Last Name]'}`.trim();\r\n    // companyName is now a prop, not from poid\r\n    const dob = poid.date_of_birth;\r\n    const age = dob ? calculateAge(dob) : undefined;\r\n    const nationality = poid.nationality;\r\n    const nationalityAlpha2 = poid.nationality_iso || poid.country_code;\r\n    const email = (poid as any).email || (poid as any).Email;\r\n    const phone = (poid as any).phone || (poid as any).Phone;\r\n    // Defensive: POID type may use camelCase for some fields, fallback to those if needed\r\n    // Defensive: fallback to camelCase only if POID type allows index signature\r\n    const address = [\r\n        (poid as any).house_number || (poid as any).HouseNumber,\r\n        (poid as any).street || (poid as any).Street,\r\n        (poid as any).city || (poid as any).City,\r\n        (poid as any).county || (poid as any).County,\r\n        (poid as any).post_code || (poid as any).Postcode,\r\n        (poid as any).country || (poid as any).Country\r\n    ].filter(Boolean).join(', ');\r\n    const idType = (poid as any).id_type || (poid as any).IdType;\r\n    const passport = (poid as any).passport_number || (poid as any).PassportNumber;\r\n    const driversLicense = (poid as any).drivers_license_number || (poid as any).DriversLicenseNumber;\r\n    const instructionRef = instructionRefOverride || (poid as any).instruction_ref || (poid as any).InstructionRef;\r\n    const matterId = matterRefOverride || (poid as any).matter_id || (poid as any).MatterId;\r\n    const prospectId = (poid as any).prospect_id || (poid as any).ProspectId;\r\n    const paymentResult = (poid as any).payment_result || (poid as any).PaymentResult;\r\n    const paymentAmount = (poid as any).payment_amount || (poid as any).PaymentAmount;\r\n    const paymentProduct = (poid as any).payment_product || (poid as any).PaymentProduct;\r\n\r\n    // Deal/Service info\r\n    const serviceDescription =\r\n        (poid as any).service_description ||\r\n        (poid as any).ServiceDescription ||\r\n        paymentProduct;\r\n    const dealAmount = parseFloat((poid as any).amount || (poid as any).Amount || paymentAmount) || 0;\r\n    \r\n    // ID Verification fields\r\n    const checkResult = (poid as any).check_result || poid.check_result;\r\n    const pepSanctionsResult = (poid as any).pep_sanctions_result || poid.pep_sanctions_result || (poid as any).PEPAndSanctionsCheckResult;\r\n    const addressVerificationResult = (poid as any).address_verification_result || poid.address_verification_result || (poid as any).AddressVerificationResult;\r\n    const checkExpiry = (poid as any).check_expiry || poid.check_expiry || (poid as any).CheckExpiry;\r\n    const checkId = (poid as any).check_id || poid.check_id || (poid as any).EIDCheckId;\r\n    const eidStatus = (poid as any).EIDStatus || (poid as any).eid_status || '';\r\n    const eidCheckedDate = (poid as any).EIDCheckedDate || (poid as any).eid_checked_date || '';\r\n    \r\n    const verificationColors = getVerificationColor(checkResult || '');\r\n    const pepColors = getVerificationColor(pepSanctionsResult || '');\r\n    const addressColors = getVerificationColor(addressVerificationResult || '');\r\n    // --- End new fields ---\r\n\r\n    return (\r\n        <div onClick={onClick} className={cardStyle}>\r\n            <div className={contentStyle}>\r\n                <Stack tokens={{ childrenGap: 8 }}>\r\n                    {/* Name and Company */}\r\n                    <Stack horizontal tokens={{ childrenGap: 8 }} verticalAlign=\"center\" style={{ width: '100%' }}>\r\n                        <Text\r\n                            variant=\"mediumPlus\"\r\n                            styles={{\r\n                                root: {\r\n                                    fontWeight: 700,\r\n                                    color: colours.highlight,\r\n                                    fontFamily: 'Raleway, sans-serif',\r\n                                    lineHeight: '1.2',\r\n                                },\r\n                            }}\r\n                        >\r\n                            {companyName && (\r\n                                <>\r\n                                    <span style={{ color: '#666', fontWeight: 600, marginRight: '4px' }}>{companyName}</span>\r\n                                    <span style={{ color: '#999', marginRight: '4px' }}>|</span>\r\n                                </>\r\n                            )}\r\n                            {fullName}\r\n                        </Text>\r\n                        {age !== undefined && (\r\n                            <Text variant=\"small\" styles={{ root: { fontFamily: 'Raleway, sans-serif', lineHeight: '1.2', color: '#555' } }}>{age} yrs</Text>\r\n                        )}\r\n                        {nationalityAlpha2 && (\r\n                            <Text variant=\"small\" styles={{ root: { fontFamily: 'Raleway, sans-serif', lineHeight: '1.2', color: '#555' } }}>{nationalityAlpha2}</Text>\r\n                        )}\r\n                        <div style={{ flex: 1 }} />\r\n                        <Icon\r\n                            iconName={backgroundIconName}\r\n                            style={{\r\n                                fontSize: 22,\r\n                                opacity: 0.3,\r\n                                transition: 'opacity 0.2s',\r\n                                color: colours.highlight,\r\n                                marginLeft: 8,\r\n                                verticalAlign: 'middle',\r\n                            }}\r\n                            className=\"inlinePersonCompanyIcon\"\r\n                        />\r\n                    </Stack>\r\n                    {/* Trace chips under name: Instruction & Matter */}\r\n                    {(instructionRef || matterId) && (\r\n                        <Stack horizontal tokens={{ childrenGap: 6 }} verticalAlign=\"center\">\r\n                            {instructionRef && (\r\n                                <span style={{\r\n                                    display: 'inline-flex', alignItems: 'center', gap: 6,\r\n                                    padding: '2px 6px', border: '1px solid #e1e5ea', borderRadius: 6,\r\n                                    background: '#F4F6F9', color: '#425466', fontSize: '0.7rem', fontWeight: 600\r\n                                }}>\r\n                                    <Icon iconName=\"TextDocument\" styles={{ root: { fontSize: 10, color: '#6B7280' } }} />\r\n                                    {instructionRef}\r\n                                </span>\r\n                            )}\r\n                            {matterId && (\r\n                                <span style={{\r\n                                    display: 'inline-flex', alignItems: 'center', gap: 6,\r\n                                    padding: '2px 6px', border: '1px solid #e1e5ea', borderRadius: 6,\r\n                                    background: '#F4F6F9', color: '#425466', fontSize: '0.7rem', fontWeight: 600\r\n                                }}>\r\n                                    <Icon iconName=\"FabricFolder\" styles={{ root: { fontSize: 10, color: '#6B7280' } }} />\r\n                                    {matterId}\r\n                                </span>\r\n                            )}\r\n                        </Stack>\r\n                    )}\r\n                    {/* Compact status chips row */}\r\n                    {(checkResult || pepSanctionsResult || addressVerificationResult || paymentResult) && (\r\n                        <Stack horizontal wrap tokens={{ childrenGap: 8 }} verticalAlign=\"center\">\r\n                            {checkResult && (\r\n                                <div style={{\r\n                                    padding: '2px 6px',\r\n                                    backgroundColor: verificationColors.background,\r\n                                    color: verificationColors.text,\r\n                                    border: `1px solid ${verificationColors.border}30`,\r\n                                    fontSize: '0.7rem',\r\n                                    fontWeight: 600,\r\n                                    display: 'inline-flex',\r\n                                    alignItems: 'center',\r\n                                    gap: 4\r\n                                }}>\r\n                                    <Icon iconName=\"Shield\" styles={{ root: { fontSize: 10 } }} />\r\n                                    ID: {checkResult}\r\n                                </div>\r\n                            )}\r\n                            {pepSanctionsResult && (\r\n                                <div style={{\r\n                                    padding: '2px 6px',\r\n                                    backgroundColor: pepColors.background,\r\n                                    color: pepColors.text,\r\n                                    border: `1px solid ${pepColors.border}30`,\r\n                                    fontSize: '0.7rem',\r\n                                    fontWeight: 600,\r\n                                    display: 'inline-flex',\r\n                                    alignItems: 'center',\r\n                                    gap: 4\r\n                                }}>\r\n                                    <Icon iconName=\"PageShield\" styles={{ root: { fontSize: 10 } }} />\r\n                                    PEP: {pepSanctionsResult}\r\n                                </div>\r\n                            )}\r\n                            {addressVerificationResult && (\r\n                                <div style={{\r\n                                    padding: '2px 6px',\r\n                                    backgroundColor: addressColors.background,\r\n                                    color: addressColors.text,\r\n                                    border: `1px solid ${addressColors.border}30`,\r\n                                    fontSize: '0.7rem',\r\n                                    fontWeight: 600,\r\n                                    display: 'inline-flex',\r\n                                    alignItems: 'center',\r\n                                    gap: 4\r\n                                }}>\r\n                                    <Icon iconName=\"POI\" styles={{ root: { fontSize: 10 } }} />\r\n                                    Addr: {addressVerificationResult}\r\n                                </div>\r\n                            )}\r\n                            {paymentResult && (\r\n                                <div style={{\r\n                                    padding: '2px 6px',\r\n                                    backgroundColor: paymentResult === 'successful' ? '#e6f4ea' : paymentResult === 'failed' ? '#fde7e9' : '#fffbe6',\r\n                                    color: paymentResult === 'successful' ? '#107C10' : paymentResult === 'failed' ? '#d13438' : '#b88600',\r\n                                    border: `1px solid ${paymentResult === 'successful' ? '#107C10' : paymentResult === 'failed' ? '#d13438' : '#FFB900'}30`,\r\n                                    fontSize: '0.7rem',\r\n                                    fontWeight: 600,\r\n                                    display: 'inline-flex',\r\n                                    alignItems: 'center',\r\n                                    gap: 4\r\n                                }}>\r\n                                    <Icon iconName=\"PaymentCard\" styles={{ root: { fontSize: 10 } }} />\r\n                                    Payment: {paymentResult}\r\n                                </div>\r\n                            )}\r\n                        </Stack>\r\n                    )}\r\n                    {/* Service Description and Amount - REMOVED to avoid duplication */}\r\n                    {/* Compact Contact & ID Details */}\r\n                    <div className={contactBlockStyle}>\r\n                        <Stack tokens={{ childrenGap: 6 }}>\r\n                            {email && (\r\n                                <div style={{ display: 'flex', alignItems: 'center', gap: '6px' }}>\r\n                                    <Icon iconName=\"Mail\" styles={{ root: { fontSize: '12px', color: '#666' } }} />\r\n                                    <Text variant=\"xSmall\" styles={{ root: { color: '#444', fontSize: '0.75rem', fontFamily: 'Raleway, sans-serif' } }}>\r\n                                        {email}\r\n                                    </Text>\r\n                                </div>\r\n                            )}\r\n                            {phone && (\r\n                                <div style={{ display: 'flex', alignItems: 'center', gap: '6px' }}>\r\n                                    <Icon iconName=\"Phone\" styles={{ root: { fontSize: '12px', color: '#666' } }} />\r\n                                    <Text variant=\"xSmall\" styles={{ root: { color: '#444', fontSize: '0.75rem', fontFamily: 'Raleway, sans-serif' } }}>\r\n                                        {phone}\r\n                                    </Text>\r\n                                </div>\r\n                            )}\r\n                            {address && (\r\n                                <div style={{ display: 'flex', alignItems: 'flex-start', gap: '6px' }}>\r\n                                    <Icon iconName=\"MapPin\" styles={{ root: { fontSize: '12px', color: '#666', marginTop: '1px' } }} />\r\n                                    <Text variant=\"xSmall\" styles={{ root: { color: '#666', fontSize: '0.75rem', fontStyle: 'italic', fontFamily: 'Raleway, sans-serif' } }}>\r\n                                        {address}\r\n                                    </Text>\r\n                                </div>\r\n                            )}\r\n                            {idType && (\r\n                                <div style={{ display: 'flex', alignItems: 'center', gap: '6px' }}>\r\n                                    <Icon iconName=\"ContactCard\" styles={{ root: { fontSize: '12px', color: '#666' } }} />\r\n                                    <Text variant=\"xSmall\" styles={{ root: { color: '#444', fontSize: '0.75rem', fontFamily: 'Raleway, sans-serif' } }}>\r\n                                        ID Type: {idType}\r\n                                    </Text>\r\n                                </div>\r\n                            )}\r\n                            {passport && (\r\n                                <div style={{ display: 'flex', alignItems: 'center', gap: '6px' }}>\r\n                                    <Icon iconName=\"Permissions\" styles={{ root: { fontSize: '12px', color: '#666' } }} />\r\n                                    <Text variant=\"xSmall\" styles={{ root: { color: '#444', fontSize: '0.75rem', fontFamily: 'Raleway, sans-serif' } }}>\r\n                                        Passport: {passport}\r\n                                    </Text>\r\n                                </div>\r\n                            )}\r\n                            {driversLicense && (\r\n                                <div style={{ display: 'flex', alignItems: 'center', gap: '6px' }}>\r\n                                    <Icon iconName=\"Car\" styles={{ root: { fontSize: '12px', color: '#666' } }} />\r\n                                    <Text variant=\"xSmall\" styles={{ root: { color: '#444', fontSize: '0.75rem', fontFamily: 'Raleway, sans-serif' } }}>\r\n                                        License: {driversLicense}\r\n                                    </Text>\r\n                                </div>\r\n                            )}\r\n                        </Stack>\r\n                    </div>\r\n                    {/* ID Verification Status - Integrated */}\r\n                    {(pepSanctionsResult || addressVerificationResult) && (\r\n                        <Stack horizontal tokens={{ childrenGap: 8 }} verticalAlign=\"center\">\r\n                            {pepSanctionsResult && (\r\n                                <div style={{\r\n                                    padding: '2px 6px',\r\n                                    backgroundColor: pepColors.background,\r\n                                    color: pepColors.text,\r\n                                    border: `1px solid ${pepColors.border}30`,\r\n                                    fontSize: '0.7rem',\r\n                                    fontWeight: 500,\r\n                                    display: 'flex',\r\n                                    alignItems: 'center',\r\n                                    gap: 4\r\n                                }}>\r\n                                    <Icon iconName=\"Shield\" styles={{ root: { fontSize: '10px' } }} />\r\n                                    PEP: {pepSanctionsResult}\r\n                                </div>\r\n                            )}\r\n                            {addressVerificationResult && (\r\n                                <div style={{\r\n                                    padding: '2px 6px',\r\n                                    backgroundColor: addressColors.background,\r\n                                    color: addressColors.text,\r\n                                    border: `1px solid ${addressColors.border}30`,\r\n                                    fontSize: '0.7rem',\r\n                                    fontWeight: 500,\r\n                                    display: 'flex',\r\n                                    alignItems: 'center',\r\n                                    gap: 4\r\n                                }}>\r\n                                    <Icon iconName=\"MapPin\" styles={{ root: { fontSize: '10px' } }} />\r\n                                    Address: {addressVerificationResult}\r\n                                </div>\r\n                            )}\r\n                        </Stack>\r\n                    )}\r\n                    {/* EID checked date & status */}\r\n                    {(eidStatus || eidCheckedDate) && (\r\n                        <Text variant=\"xSmall\" styles={{ root: { \r\n                            color: '#888', \r\n                            fontFamily: 'Raleway, sans-serif', \r\n                            fontSize: '0.7rem'\r\n                        }}}>\r\n                            {eidStatus ? `EID ${eidStatus}` : ''}{eidStatus && eidCheckedDate ? ' • ' : ''}{eidCheckedDate ? `Checked ${new Date(eidCheckedDate).toLocaleDateString()}` : ''}\r\n                        </Text>\r\n                    )}\r\n                    {/* Correlation ID - on its own line */}\r\n                    {checkId && (\r\n                        <Text variant=\"xSmall\" styles={{ root: { \r\n                            color: '#aaa', \r\n                            fontFamily: 'Raleway, sans-serif', \r\n                            fontSize: '0.65rem',\r\n                            letterSpacing: '0.5px'\r\n                        }}}>\r\n                            #{checkId}\r\n                        </Text>\r\n                    )}\r\n                    {/* Verification expiry - subtle info */}\r\n                    {checkExpiry && (\r\n                        <Text variant=\"xSmall\" styles={{ root: { \r\n                            color: getExpiryCountdown(checkExpiry) === 'expired' ? '#d13438' : '#888',\r\n                            fontStyle: 'italic',\r\n                            fontSize: '0.7rem',\r\n                            fontFamily: 'Raleway, sans-serif'\r\n                        }}}>\r\n                            {getExpiryCountdown(checkExpiry) ? `Expires ${getExpiryCountdown(checkExpiry)}` : `Verified until ${new Date(checkExpiry).toLocaleDateString()}`}\r\n                        </Text>\r\n                    )}\r\n                    {/* Payment info if present - only show if there's meaningful data */}\r\n                    {(paymentResult || (serviceDescription && serviceDescription.trim() && serviceDescription !== '0') || (dealAmount && dealAmount > 0 && !isNaN(dealAmount))) && (\r\n                        <Stack tokens={{ childrenGap: 4 }} verticalAlign=\"center\">\r\n                            {paymentResult && (\r\n                                <Stack horizontal tokens={{ childrenGap: 8 }} verticalAlign=\"center\">\r\n                                    <Text variant=\"small\" styles={{ root: { color: paymentResult === 'successful' ? '#107C10' : paymentResult === 'failed' ? '#D83B01' : '#555', fontFamily: 'Raleway, sans-serif' } }}>Payment: {paymentResult}</Text>\r\n                                </Stack>\r\n                            )}\r\n                            {((serviceDescription && serviceDescription.trim() && serviceDescription !== '0') || (dealAmount && dealAmount > 0 && !isNaN(dealAmount))) && (\r\n                                <Stack horizontal tokens={{ childrenGap: 8 }} verticalAlign=\"center\">\r\n                                    {serviceDescription && serviceDescription.trim() && serviceDescription !== '0' && (\r\n                                        <Text variant=\"small\" styles={{ root: { color: '#3690CE', fontWeight: 600, fontSize: '0.85rem', fontFamily: 'Raleway, sans-serif' } }}>\r\n                                            {serviceDescription}\r\n                                        </Text>\r\n                                    )}\r\n                                    {dealAmount && dealAmount > 0 && !isNaN(dealAmount) && (\r\n                                        <Text variant=\"small\" styles={{ root: { color: '#3690CE', fontWeight: 700, fontSize: '0.85rem', fontFamily: 'Raleway, sans-serif' } }}>\r\n                                            £{dealAmount.toLocaleString()}\r\n                                        </Text>\r\n                                    )}\r\n                                </Stack>\r\n                            )}\r\n                        </Stack>\r\n                    )}\r\n                    {/* Instruction/Deal IDs for traceability - REMOVED, moved up with name */}\r\n                </Stack>\r\n            </div>\r\n            <div className={bottomContainerStyle}>\r\n                {badgeInitials && (\r\n                    <div className={badgeStyle} aria-label={`POC: ${badgeInitials}`}>\r\n                        {badgeInitials}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <style>{`\r\n                .poid-card:hover .inlinePersonCompanyIcon {\r\n                    opacity: 1 !important;\r\n                }\r\n                \r\n                @keyframes cascadeIn {\r\n                    from {\r\n                        opacity: 0;\r\n                        transform: translateY(8px);\r\n                    }\r\n                    to {\r\n                        opacity: 1;\r\n                        transform: translateY(0);\r\n                    }\r\n                }\r\n            `}</style>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PoidCard;\r\n","//\r\nimport React from 'react'; // invisible change\r\n// invisible change 2.2\r\nimport { Stack } from '@fluentui/react';\r\nimport { useTheme } from '../../../app/functionality/ThemeContext';\r\nimport PoidCard from '../PoidCard';\r\nimport { POID, TeamData } from '../../../app/functionality/types';\r\nimport helixLogo from '../../../assets/dark blue mark.svg';\r\n\r\ninterface PoidSelectionStepProps {\r\n    poidData: POID[];\r\n    teamData?: TeamData[] | null;\r\n    filteredPoidData: POID[];\r\n    visiblePoidCount: number;\r\n    selectedPoidIds: string[];\r\n    preselectedPoidIds?: string[];\r\n    poidSearchTerm: string;\r\n    setPoidSearchTerm: (v: string) => void;\r\n    poidGridRef: React.RefObject<HTMLDivElement | null>;\r\n    handlePoidClick: (p: POID) => void;\r\n    onConfirm?: () => void;\r\n    pendingClientType: string;\r\n    setPendingClientType: (type: string) => void;\r\n    onClientTypeChange?: (newType: string, shouldLimitToSingle: boolean) => void;\r\n    clientAsOnFile: string;\r\n    setClientAsOnFile: (v: string) => void;\r\n    /** When true (instruction entry), hide the Select Client section entirely */\r\n    hideClientSections?: boolean;\r\n    /** Optional identifiers to show in banner when context is instruction/matter */\r\n    instructionRef?: string;\r\n    matterRef?: string;\r\n}\r\n\r\n// Animated transition for POID selection area\r\ninterface PoidSelectionTransitionProps {\r\n    show: boolean;\r\n    children: React.ReactNode;\r\n}\r\n\r\nconst PoidSelectionTransition: React.FC<PoidSelectionTransitionProps> = ({ show, children }) => { /* invisible change */\r\n    const [visible, setVisible] = React.useState(show);\r\n    const [render, setRender] = React.useState(show);\r\n    React.useEffect(() => {\r\n        if (show) {\r\n            setRender(true);\r\n            const t = window.setTimeout(() => setVisible(true), 10);\r\n            return () => window.clearTimeout(t);\r\n        } else {\r\n            setVisible(false);\r\n            const timeout = window.setTimeout(() => setRender(false), 400);\r\n            return () => window.clearTimeout(timeout);\r\n        }\r\n    }, [show]);\r\n    if (!render) return null;\r\n    return (\r\n        <div\r\n            className={\"poid-selection-animated\" + (visible ? \" visible\" : \"\")}\r\n            style={{\r\n                maxHeight: visible ? 1200 : 0,\r\n                opacity: visible ? 1 : 0,\r\n                overflow: 'hidden',\r\n                transition: 'max-height 0.5s cubic-bezier(.4,0,.2,1), opacity 0.4s cubic-bezier(.4,0,.2,1)',\r\n                pointerEvents: visible ? 'auto' : 'none',\r\n            }}\r\n        >\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst PoidSelectionStep: React.FC<PoidSelectionStepProps> = ({\r\n    poidData,\r\n    teamData,\r\n    filteredPoidData,\r\n    visiblePoidCount,\r\n    selectedPoidIds,\r\n    preselectedPoidIds = [],\r\n    poidSearchTerm,\r\n    setPoidSearchTerm,\r\n    poidGridRef,\r\n    handlePoidClick,\r\n    onConfirm,\r\n    pendingClientType,\r\n    setPendingClientType,\r\n    onClientTypeChange,\r\n    clientAsOnFile,\r\n    setClientAsOnFile,\r\n    hideClientSections = false,\r\n    instructionRef,\r\n    matterRef\r\n}) => {\r\n    // Build selection context (selected ids, selected POIDs, inferred company/individuals)\r\n    const { isDarkMode } = useTheme();\r\n    const selectedIds = (selectedPoidIds && selectedPoidIds.length > 0)\r\n        ? selectedPoidIds\r\n        : (preselectedPoidIds || []);\r\n    const byId = (id: string) => poidData.find(p => p.poid_id === id) || filteredPoidData.find(p => p.poid_id === id);\r\n    const baseSelectedPoids = selectedIds.map(byId).filter(Boolean) as POID[];\r\n    // Fallback: if no explicit selection but we have an instructionRef, try to resolve matching POIDs by reference\r\n    const instructionMatchedPoids = React.useMemo(() => {\r\n        if (!instructionRef) return [] as POID[];\r\n        const matches = (poidData || []).filter((p: any) => (p?.InstructionRef || p?.instruction_ref) === instructionRef);\r\n        if (matches.length > 0) return matches as POID[];\r\n        const alt = (filteredPoidData || []).filter((p: any) => (p?.InstructionRef || p?.instruction_ref) === instructionRef);\r\n        return alt as POID[];\r\n    }, [poidData, filteredPoidData, instructionRef]);\r\n    const selectedPoids = (baseSelectedPoids.length > 0 ? baseSelectedPoids : instructionMatchedPoids) as POID[];\r\n    const companyPoid = selectedPoids.find(p => !!(p.company_name || p.company_number));\r\n    const individualPoids = selectedPoids.filter(p => !(p.company_name || p.company_number));\r\n\r\n    const inferredType = (() => {\r\n        if (pendingClientType) return pendingClientType;\r\n        if (companyPoid) return 'Company';\r\n        if (selectedPoids.length > 1) return 'Multiple Individuals';\r\n        if (selectedPoids.length === 1) return 'Individual';\r\n        return '';\r\n    })();\r\n\r\n    const formatName = (p: POID) => `${p.first || ''} ${p.last || ''}`.trim();\r\n    const formatPeopleList = (people: POID[], max = 2) => {\r\n        if (people.length === 0) return '';\r\n        const names = people.map(formatName).filter(Boolean);\r\n        const head = names.slice(0, max).join(', ');\r\n        const remaining = names.length - max;\r\n        return remaining > 0 ? `${head} +${remaining} more` : head;\r\n    };\r\n\r\n    const bannerTitle = (() => {\r\n        if (companyPoid) return companyPoid.company_name || 'Company';\r\n        if (individualPoids.length > 0) return formatPeopleList(individualPoids, 2);\r\n        return 'Select Client';\r\n    })();\r\n\r\n    const bannerSubtitle = (() => {\r\n        if (companyPoid) {\r\n            const parts: string[] = [];\r\n            if (companyPoid.company_number) parts.push(`Company No: ${companyPoid.company_number}`);\r\n            if (individualPoids.length > 0) parts.push(`Directors: ${formatPeopleList(individualPoids, 3)}`);\r\n            return parts.join(' • ');\r\n        }\r\n        if (individualPoids.length > 0 && inferredType === 'Multiple Individuals') {\r\n            return `Clients: ${formatPeopleList(individualPoids, 3)}`;\r\n        }\r\n        return inferredType || undefined;\r\n    })();\r\n\r\n    // Meta chips for context\r\n    const meta: string[] = [];\r\n    if (instructionRef) meta.push(`Instruction: ${instructionRef}`);\r\n    if (matterRef) meta.push(`Matter: ${matterRef}`);\r\n\r\n    // Aggregate verification results from selected POIDs\r\n    type Verif = 'passed' | 'review' | 'failed' | 'pending' | '';\r\n    const norm = (v?: string): Verif => {\r\n        const s = (v || '').toLowerCase().trim();\r\n        if (!s) return '';\r\n        if (s.startsWith('pass')) return 'passed';\r\n        if (s.startsWith('rev')) return 'review';\r\n        if (s.startsWith('fail') || s.startsWith('rej')) return 'failed';\r\n        if (s.startsWith('pend')) return 'pending';\r\n        // Handle some other possible values\r\n        if (s === 'approved') return 'passed';\r\n        if (s === 'manual review' || s === 'manual_review') return 'review';\r\n        return '';\r\n    };\r\n    const getFor = (p: POID) => ({\r\n        id: norm((p as any).check_result || (p as any).EIDOverallResult || (p as any).EIDStatus),\r\n        pep: norm((p as any).pep_sanctions_result || (p as any).PEPAndSanctionsCheckResult),\r\n        addr: norm((p as any).address_verification_result || (p as any).AddressVerificationResult),\r\n    });\r\n    const selectedVerifs = selectedPoids.map(getFor);\r\n    const agg = (key: 'id'|'pep'|'addr'): Verif => {\r\n        if (selectedVerifs.some(v => v[key] === 'failed')) return 'failed';\r\n        if (selectedVerifs.some(v => v[key] === 'review')) return 'review';\r\n        if (selectedVerifs.length > 0 && selectedVerifs.every(v => v[key] === 'passed')) return 'passed';\r\n        if (selectedVerifs.some(v => v[key] === 'pending')) return 'pending';\r\n        return '';\r\n    };\r\n    const aggId = agg('id');\r\n    const aggPep = agg('pep');\r\n    const aggAddr = agg('addr');\r\n    const chipStyle = (state: Verif): React.CSSProperties => {\r\n        const map: Record<Verif, { bg: string; text: string; brd: string }> = {\r\n            passed: { bg: '#e6f4ea', text: '#107C10', brd: '#107C10' },\r\n            review: { bg: '#fffbe6', text: '#b88600', brd: '#FFB900' },\r\n            failed: { bg: '#fde7e9', text: '#d13438', brd: '#d13438' },\r\n            pending: { bg: '#f4f4f6', text: '#666', brd: '#e1dfdd' },\r\n            '': { bg: '#f4f4f6', text: '#666', brd: '#e1dfdd' },\r\n        };\r\n        const c = map[state];\r\n        return {\r\n            display: 'inline-flex', alignItems: 'center', gap: 6,\r\n            padding: '4px 8px', border: `1px solid ${c.brd}66`, borderRadius: 6,\r\n            background: c.bg, color: c.text, fontSize: 12, fontWeight: 700,\r\n        };\r\n    };\r\n\r\n    // Collapsible state for unified Client Selection section - must be before any early returns\r\n    const [isClientSectionOpen, setIsClientSectionOpen] = React.useState<boolean>(!!pendingClientType);\r\n    React.useEffect(() => {\r\n        // When a client type is chosen, auto-open the section\r\n        if (pendingClientType) setIsClientSectionOpen(true);\r\n    }, [pendingClientType]);\r\n\r\n    const renderSelectionSummary = () => {\r\n        const selectedPoid = selectedPoids[0];\r\n        \r\n        return (\r\n            <div\r\n                className=\"instruction-card-banner\"\r\n                style={{\r\n                    background: 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n                    border: '1px solid #E5E7EB',\r\n                    borderRadius: 12,\r\n                    padding: '16px 20px',\r\n                    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.07)',\r\n                    color: '#061733',\r\n                    marginBottom: 16\r\n                }}\r\n            >\r\n                {/* Main client header - compact */}\r\n                <div style={{ display: 'flex', alignItems: 'flex-start', justifyContent: 'space-between', gap: 16, marginBottom: selectedPoids.length > 0 ? 16 : 0 }}>\r\n                    <div style={{ display: 'flex', alignItems: 'flex-start', gap: 16, flex: 1 }}>\r\n                        <div style={{ \r\n                            background: '#F4F4F6', // Helix grey\r\n                            border: '1px solid #E5E7EB',\r\n                            borderRadius: 10,\r\n                            padding: 8,\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            flexShrink: 0,\r\n                            marginTop: 2,\r\n                            width: 42,\r\n                            height: 42,\r\n                            boxShadow: '0 1px 3px rgba(0,0,0,0.08)'\r\n                        }}>\r\n                            <img \r\n                                src={helixLogo} \r\n                                alt=\"Helix\" \r\n                                style={{ \r\n                                    width: 28, \r\n                                    height: 28,\r\n                                    objectFit: 'contain'\r\n                                }} \r\n                            />\r\n                        </div>\r\n                        \r\n                        <div style={{ flex: 1, minWidth: 0 }}>\r\n                            <div style={{ \r\n                                fontWeight: 700, \r\n                                fontSize: 16, \r\n                                lineHeight: 1.3, \r\n                                color: '#061733',\r\n                                marginBottom: 2\r\n                            }}>\r\n                                {bannerTitle}\r\n                            </div>\r\n                            {bannerSubtitle && (\r\n                                <div style={{ \r\n                                    fontSize: 13, \r\n                                    color: '#6B7280', \r\n                                    lineHeight: 1.3,\r\n                                    marginBottom: 8\r\n                                }}>\r\n                                    {bannerSubtitle}\r\n                                </div>\r\n                            )}\r\n                            \r\n                            {/* Contact details */}\r\n                            {selectedPoid && (\r\n                                <div style={{ \r\n                                    display: 'flex', \r\n                                    gap: 16, \r\n                                    flexWrap: 'wrap', \r\n                                    fontSize: 13, \r\n                                    color: '#4B5563',\r\n                                    marginBottom: 8\r\n                                }}>\r\n                                    {selectedPoid.email && (\r\n                                        <div style={{ display: 'flex', alignItems: 'center', gap: 6 }}>\r\n                                            <i className=\"ms-Icon ms-Icon--Mail\" style={{ fontSize: 12, color: '#6B7280' }} />\r\n                                            <span>{selectedPoid.email}</span>\r\n                                        </div>\r\n                                    )}\r\n                                    {selectedPoid.best_number && (\r\n                                        <div style={{ display: 'flex', alignItems: 'center', gap: 6 }}>\r\n                                            <i className=\"ms-Icon ms-Icon--Phone\" style={{ fontSize: 12, color: '#6B7280' }} />\r\n                                            <span>{selectedPoid.best_number}</span>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n                            \r\n                            {/* Address - separate line with pin icon */}\r\n                            {selectedPoid && (selectedPoid.house_building_number || selectedPoid.street || selectedPoid.city || selectedPoid.post_code) && (\r\n                                <div style={{ \r\n                                    display: 'flex', \r\n                                    alignItems: 'flex-start', \r\n                                    gap: 6,\r\n                                    fontSize: 13, \r\n                                    color: '#4B5563',\r\n                                    marginBottom: 8\r\n                                }}>\r\n                                    <i className=\"ms-Icon ms-Icon--POI\" style={{ fontSize: 12, color: '#6B7280', marginTop: 2 }} />\r\n                                    <span>{[\r\n                                        selectedPoid.house_building_number,\r\n                                        selectedPoid.street,\r\n                                        selectedPoid.city,\r\n                                        selectedPoid.county,\r\n                                        selectedPoid.post_code,\r\n                                        selectedPoid.country\r\n                                    ].filter(Boolean).join(', ')}</span>\r\n                                </div>\r\n                            )}\r\n                            \r\n                            {/* Additional personal details */}\r\n                            {selectedPoid && (\r\n                                <div style={{ \r\n                                    display: 'flex', \r\n                                    gap: 16, \r\n                                    flexWrap: 'wrap', \r\n                                    fontSize: 12, \r\n                                    color: '#6B7280',\r\n                                    marginTop: 4\r\n                                }}>\r\n                                    {selectedPoid.date_of_birth && (\r\n                                        <div style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\r\n                                            <i className=\"ms-Icon ms-Icon--Calendar\" style={{ fontSize: 11, color: '#9CA3AF' }} />\r\n                                            <span>DOB: {new Date(selectedPoid.date_of_birth).toLocaleDateString('en-GB', { day: '2-digit', month: '2-digit', year: 'numeric' })}</span>\r\n                                        </div>\r\n                                    )}\r\n                                    {selectedPoid.gender && (\r\n                                        <div style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\r\n                                            <i className=\"ms-Icon ms-Icon--Contact\" style={{ fontSize: 11, color: '#9CA3AF' }} />\r\n                                            <span>{selectedPoid.gender}</span>\r\n                                        </div>\r\n                                    )}\r\n                                    {selectedPoid.nationality && (\r\n                                        <div style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\r\n                                            <i className=\"ms-Icon ms-Icon--Globe\" style={{ fontSize: 11, color: '#9CA3AF' }} />\r\n                                            <span>{selectedPoid.nationality}</span>\r\n                                        </div>\r\n                                    )}\r\n                                    {selectedPoid.passport_number && (\r\n                                        <div style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\r\n                                            <i className=\"ms-Icon ms-Icon--Passport\" style={{ fontSize: 11, color: '#9CA3AF' }} />\r\n                                            <span>Passport: {selectedPoid.passport_number}</span>\r\n                                        </div>\r\n                                    )}\r\n                                    {selectedPoid.drivers_license_number && (\r\n                                        <div style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\r\n                                            <i className=\"ms-Icon ms-Icon--Car\" style={{ fontSize: 11, color: '#9CA3AF' }} />\r\n                                            <span>DL: {selectedPoid.drivers_license_number}</span>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n                            \r\n                            {/* Company details and address for company clients */}\r\n                            {selectedPoid && (selectedPoid.company_name || selectedPoid.company_number) && (\r\n                                <div style={{ \r\n                                    fontSize: 13, \r\n                                    color: '#4B5563',\r\n                                    marginTop: 8,\r\n                                    marginBottom: 8\r\n                                }}>\r\n                                    {/* Company name and number */}\r\n                                    <div style={{ \r\n                                        display: 'flex', \r\n                                        alignItems: 'center', \r\n                                        gap: 6,\r\n                                        marginBottom: 6\r\n                                    }}>\r\n                                        <i className=\"ms-Icon ms-Icon--BuildingRegular\" style={{ fontSize: 12, color: '#6B7280' }} />\r\n                                        <span style={{ fontWeight: 600 }}>\r\n                                            {selectedPoid.company_name}\r\n                                            {selectedPoid.company_number && ` (${selectedPoid.company_number})`}\r\n                                        </span>\r\n                                    </div>\r\n                                    \r\n                                    {/* Company address if different from personal address */}\r\n                                    {(selectedPoid.company_house_building_number || selectedPoid.company_street || selectedPoid.company_city || selectedPoid.company_post_code) && (\r\n                                        <div style={{ \r\n                                            display: 'flex', \r\n                                            alignItems: 'flex-start', \r\n                                            gap: 6,\r\n                                            fontSize: 12,\r\n                                            color: '#6B7280'\r\n                                        }}>\r\n                                            <i className=\"ms-Icon ms-Icon--POI\" style={{ fontSize: 11, color: '#9CA3AF', marginTop: 2 }} />\r\n                                            <span>{[\r\n                                                selectedPoid.company_house_building_number,\r\n                                                selectedPoid.company_street,\r\n                                                selectedPoid.company_city,\r\n                                                selectedPoid.company_county,\r\n                                                selectedPoid.company_post_code,\r\n                                                selectedPoid.company_country\r\n                                            ].filter(Boolean).join(', ')}</span>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    {/* Instruction ref - top right, no label */}\r\n                    {instructionRef && (\r\n                        <div style={{ \r\n                            fontSize: 12, \r\n                            color: '#6B7280',\r\n                            fontWeight: 600,\r\n                            flexShrink: 0,\r\n                            textAlign: 'right'\r\n                        }}>\r\n                            {instructionRef}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                {/* Remove the old reference info section since it's now moved to top right */}\r\n\r\n                {/* Verification status - clear visual hierarchy */}\r\n                {selectedPoids.length > 0 && (\r\n                    <div style={{\r\n                        borderTop: '1px solid #E5E7EB',\r\n                        paddingTop: 16,\r\n                        background: 'rgba(248, 250, 252, 0.5)',\r\n                        margin: '0 -20px -16px -20px',\r\n                        padding: '16px 20px',\r\n                        borderRadius: '0 0 12px 12px'\r\n                    }}>\r\n                        {/* Overall status indicator */}\r\n                        <div style={{ \r\n                            display: 'flex', \r\n                            alignItems: 'center', \r\n                            marginBottom: 12\r\n                        }}>\r\n                            <div style={{ \r\n                                fontSize: 12, \r\n                                fontWeight: 700, \r\n                                color: '#374151',\r\n                                textTransform: 'uppercase',\r\n                                letterSpacing: '0.5px'\r\n                            }}>\r\n                                Verification Status\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        {/* Individual verification chips - ID is overall, others are sub-results */}\r\n                        <div style={{ display: 'flex', gap: 8, flexWrap: 'wrap' }}>\r\n                            {/* ID is the OVERALL result - make it prominent */}\r\n                            <span style={{\r\n                                ...chipStyle(aggId),\r\n                                padding: '8px 14px',\r\n                                borderRadius: 8,\r\n                                fontSize: 12,\r\n                                fontWeight: 800,\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                gap: 6,\r\n                                minWidth: 'auto',\r\n                                boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\r\n                            }}>\r\n                                <i className=\"ms-Icon ms-Icon--Shield\" style={{ fontSize: 13 }} /> \r\n                                ID: {aggId || 'pending'}\r\n                            </span>\r\n                            {/* PEP and Address are sub-results - smaller */}\r\n                            <span style={{\r\n                                ...chipStyle(aggPep),\r\n                                padding: '6px 10px',\r\n                                borderRadius: 6,\r\n                                fontSize: 10,\r\n                                fontWeight: 600,\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                gap: 4,\r\n                                minWidth: 'auto',\r\n                                opacity: 0.8\r\n                            }}>\r\n                                <i className=\"ms-Icon ms-Icon--PageShield\" style={{ fontSize: 10 }} /> \r\n                                PEP: {aggPep || 'pending'}\r\n                            </span>\r\n                            <span style={{\r\n                                ...chipStyle(aggAddr),\r\n                                padding: '6px 10px',\r\n                                borderRadius: 6,\r\n                                fontSize: 10,\r\n                                fontWeight: 600,\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                gap: 4,\r\n                                minWidth: 'auto',\r\n                                opacity: 0.8\r\n                            }}>\r\n                                <i className=\"ms-Icon ms-Icon--POI\" style={{ fontSize: 10 }} /> \r\n                                Address: {aggAddr || 'pending'}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    // If instructed to hide selection UI, show banner only\r\n    if (hideClientSections) {\r\n        return (\r\n            <Stack tokens={{ childrenGap: 16 }}>\r\n                {renderSelectionSummary()}\r\n            </Stack>\r\n        );\r\n    }\r\n    const onlyShowPreselected = preselectedPoidIds?.length === 1 && filteredPoidData.length === 1;\r\n    const displayPoidData = filteredPoidData;\r\n\r\n    return (\r\n        <Stack tokens={{ childrenGap: 16 }}>\r\n            {/* Client Type Question Section */}\r\n            <div className=\"client-type-selection\" style={{ width: '100%', margin: 0, padding: 0, border: 'none', boxShadow: 'none', background: 'transparent' }}>\r\n            <div style={{ padding: 4, background: 'transparent' }}>\r\n                <div style={{ \r\n                    display: 'flex', \r\n                    alignItems: 'center', \r\n                    gap: 8, \r\n                    marginBottom: 12 \r\n                }}>\r\n                    <i className=\"ms-Icon ms-Icon--Contact\" style={{ \r\n                        fontSize: 16, \r\n                        color: '#3690CE' \r\n                    }} />\r\n                    <span style={{ \r\n                        fontSize: 16, \r\n                        fontWeight: 600, \r\n                        color: '#0F172A' \r\n                    }}>\r\n                        What type of client is this matter for?\r\n                    </span>\r\n                </div>\r\n                <div className=\"client-details-contact-bigrow\" style={{ margin: '8px 0 12px 0', display: 'flex', gap: 12, flexWrap: 'wrap' }}>\r\n                    {[ \r\n                        { type: 'Individual', icon: 'Contact' },\r\n                        { type: 'Company', icon: 'CityNext' },\r\n                        { type: 'Multiple Individuals', icon: 'People' },\r\n                        { type: 'Existing Client', icon: 'ContactHeart' }\r\n                    ].map(({ type, icon }) => {\r\n                        const isActive = pendingClientType === type;\r\n                        return (\r\n                            <button\r\n                                key={type}\r\n                                className={`client-details-contact-bigbtn client-type-icon-btn${isActive ? ' active' : ''}`}\r\n                                type=\"button\"\r\n                                onClick={() => {\r\n                                    // Only trigger change if type is actually changing\r\n                                    if (pendingClientType !== type) {\r\n                                        // Multiple Individuals and Company allow unlimited selections, others are more restrictive\r\n                                        const allowsUnlimitedSelections = type === 'Multiple Individuals' || type === 'Company';\r\n                                        setPendingClientType(type);\r\n                                        if (onClientTypeChange) {\r\n                                            onClientTypeChange(type, !allowsUnlimitedSelections);\r\n                                        }\r\n                                    }\r\n                                }}\r\n                                aria-pressed={isActive}\r\n                                style={{\r\n                                    position: 'relative',\r\n                                    display: 'flex',\r\n                                    flexDirection: 'column',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'center',\r\n                                    padding: '12px 14px',\r\n                                    border: `1px solid ${isActive ? '#3690CE' : '#E2E8F0'}`,\r\n                                    borderRadius: '8px',\r\n                                    background: isActive \r\n                                        ? 'linear-gradient(135deg, #3690CE15 0%, #3690CE08 100%)' \r\n                                        : 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n                                    cursor: 'pointer',\r\n                                    transition: 'all 0.2s cubic-bezier(0.4, 0, 0.2, 1)',\r\n                                    minHeight: '70px',\r\n                                    minWidth: '120px',\r\n                                    boxShadow: isActive \r\n                                        ? '0 3px 10px rgba(54, 144, 206, 0.15), 0 1px 2px rgba(0,0,0,0.03)' \r\n                                        : '0 1px 3px rgba(0,0,0,0.03)',\r\n                                    outline: 'none',\r\n                                    transform: isActive ? 'translateY(-2px)' : 'translateY(0)',\r\n                                }}\r\n                                onMouseEnter={(e) => {\r\n                                    if (!isActive) {\r\n                                        e.currentTarget.style.background = 'linear-gradient(135deg, #F1F5F9 0%, #E2E8F0 100%)';\r\n                                        e.currentTarget.style.borderColor = '#3690CE';\r\n                                        e.currentTarget.style.transform = 'translateY(-1px)';\r\n                                        e.currentTarget.style.boxShadow = '0 3px 6px rgba(0,0,0,0.06)';\r\n                                    }\r\n                                }}\r\n                                onMouseLeave={(e) => {\r\n                                    if (!isActive) {\r\n                                        e.currentTarget.style.background = 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)';\r\n                                        e.currentTarget.style.borderColor = '#E2E8F0';\r\n                                        e.currentTarget.style.transform = 'translateY(0)';\r\n                                        e.currentTarget.style.boxShadow = '0 1px 3px rgba(0,0,0,0.03)';\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <i \r\n                                    className={`ms-Icon ms-Icon--${icon}`} \r\n                                    style={{ \r\n                                        fontSize: 24, \r\n                                        color: isActive ? '#3690CE' : '#64748B',\r\n                                        marginBottom: 6,\r\n                                        transition: 'color 0.2s cubic-bezier(0.4, 0, 0.2, 1)'\r\n                                    }} \r\n                                />\r\n                                <span\r\n                                    style={{\r\n                                        fontSize: 12,\r\n                                        fontWeight: 500,\r\n                                        color: isActive ? '#3690CE' : '#64748B',\r\n                                        textAlign: 'center',\r\n                                        lineHeight: 1.2,\r\n                                        transition: 'color 0.2s cubic-bezier(0.4, 0, 0.2, 1)'\r\n                                    }}\r\n                                >\r\n                                    {type}\r\n                                </span>\r\n                            </button>\r\n                        );\r\n                    })}\r\n                </div>\r\n                \r\n                {/* Removed helper text for selection rules for cleaner UI */}\r\n                \r\n            {/* POID list section */}\r\n            {/* Unified Client Selection section: header with chevron + collapsible content */}\r\n                <div style={{ marginTop: 32 }}>\r\n                    <div\r\n                        style={{\r\n                            border: '1px solid #e1e5ea',\r\n                            borderRadius: 8,\r\n                            background: 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n                            boxShadow: isDarkMode ? '0 4px 6px rgba(0,0,0,0.3)' : '0 4px 6px rgba(0,0,0,0.07)'\r\n                        }}\r\n                    >\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={() => setIsClientSectionOpen(o => !o)}\r\n                            aria-expanded={isClientSectionOpen}\r\n                            style={{\r\n                                width: '100%',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'space-between',\r\n                                gap: 12,\r\n                                padding: '0 14px 0 0',\r\n                                background: 'transparent',\r\n                                border: 'none',\r\n                                cursor: 'pointer'\r\n                            }}\r\n                        >\r\n                            <div style={{ flex: 1, minWidth: 0 }}>\r\n                                {renderSelectionSummary()}\r\n                            </div>\r\n                            <i\r\n                                className=\"ms-Icon ms-Icon--ChevronDown\"\r\n                                style={{\r\n                                    fontSize: 14,\r\n                                    color: '#3690CE',\r\n                                    transition: 'transform 0.2s ease',\r\n                                    transform: isClientSectionOpen ? 'rotate(180deg)' : 'rotate(0deg)'\r\n                                }}\r\n                            />\r\n                        </button>\r\n\r\n                        <PoidSelectionTransition show={!!pendingClientType && isClientSectionOpen}>\r\n                            <div style={{ padding: '0 14px 14px 14px' }}>\r\n                                {pendingClientType === 'Multiple Individuals' && (\r\n                                    <div style={{ margin: '8px 0' }}>\r\n                                        <div className=\"question-banner\">Confirm Client as on File</div>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={clientAsOnFile}\r\n                                            onChange={e => setClientAsOnFile(e.target.value)}\r\n                                            style={{ \r\n                                                width: '100%', \r\n                                                padding: '8px 12px', \r\n                                                height: '38px',\r\n                                                boxSizing: 'border-box',\r\n                                                background: clientAsOnFile ? \"#3690CE22\" : \"#fff\",\r\n                                                color: \"#061733\",\r\n                                                border: clientAsOnFile ? \"1px solid #3690CE\" : \"1px solid #e3e8ef\",\r\n                                                borderRadius: 0,\r\n                                                boxShadow: \"0 2px 8px rgba(0,0,0,0.08)\",\r\n                                                transition: \"background 0.2s, color 0.2s, border 0.2s\",\r\n                                                outline: \"none\",\r\n                                                fontSize: \"14px\"\r\n                                            }}\r\n                                            placeholder=\"Enter client name as on file\"\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n\r\n                                {/* Show POID selection only after client type is chosen */}\r\n                                <PoidSelectionTransition show={!!pendingClientType}>\r\n                                    {pendingClientType && (\r\n                                        <>\r\n                                            {/* POID Grid - Compact layout when selections are made */}\r\n                                            <div \r\n                                                style={{ \r\n                                                    width: '100%',\r\n                                                    overflow: 'visible',\r\n                                                    border: '1px solid #e3e8ef',\r\n                                                    borderRadius: '4px',\r\n                                                    background: '#fafafa',\r\n                                                    transition: 'all 0.4s ease-out',\r\n                                                    padding: '16px',\r\n                                                }} \r\n                                                className=\"poid-grid\" \r\n                                                ref={poidGridRef as any}\r\n                                            >\r\n                                                {(() => {\r\n                                                    const hasSelection = selectedPoidIds.length > 0;\r\n                                                    \r\n                                                    // Filter POIDs based on client type\r\n                                                    const filteredData = displayPoidData.filter((poid) => {\r\n                                                        const isCompany = !!(\r\n                                                            poid.company_name ||\r\n                                                            poid.company_number\r\n                                                        );\r\n                                                        if (pendingClientType === 'Individual') {\r\n                                                            return !isCompany;\r\n                                                        } else if (pendingClientType === 'Company') {\r\n                                                            // Two-stage selection for Company type\r\n                                                            const currentSelectedPoids = selectedPoidIds.map(id => \r\n                                                                displayPoidData.find(p => p.poid_id === id)\r\n                                                            ).filter(Boolean);\r\n                                                            \r\n                                                            const hasCompanySelected = currentSelectedPoids.some(p => \r\n                                                                p && !!(p.company_name || p.company_number)\r\n                                                            );\r\n                                                            \r\n                                                            if (!hasCompanySelected) {\r\n                                                                // Stage 1: Show only companies until one is selected\r\n                                                                return isCompany;\r\n                                                            } else {\r\n                                                                // Stage 2: Show only individuals for director selection\r\n                                                                return !isCompany;\r\n                                                            }\r\n                                                        } else if (pendingClientType === 'Multiple Individuals') {\r\n                                                            // Show only individuals for multiple selection\r\n                                                            return !isCompany;\r\n                                                        }\r\n                                                        return true; // Existing Client shows all\r\n                                                    });\r\n\r\n                                                    // Special handling for Company type two-stage selection\r\n                                                    let cardsToShow;\r\n                                                    if (pendingClientType === 'Company') {\r\n                                                        const currentSelectedPoids = selectedPoidIds.map(id => \r\n                                                            displayPoidData.find(p => p.poid_id === id)\r\n                                                        ).filter(Boolean);\r\n                                                        \r\n                                                        const hasCompanySelected2 = currentSelectedPoids.some(p => \r\n                                                            p && !!(p.company_name || p.company_number)\r\n                                                        );\r\n                                                        \r\n                                                        if (hasCompanySelected2) {\r\n                                                            // Stage 2: Show only available directors (hide the selected company from this view)\r\n                                                            cardsToShow = filteredData.slice(0, visiblePoidCount);\r\n                                                        } else {\r\n                                                            // Stage 1: Show only available companies\r\n                                                            cardsToShow = filteredData.slice(0, visiblePoidCount);\r\n                                                        }\r\n                                                    } else {\r\n                                                        // For other client types, use different logic based on whether multiple selection is allowed\r\n                                                        if (pendingClientType === 'Multiple Individuals') {\r\n                                                            // Always show all available options for multiple selection\r\n                                                            cardsToShow = filteredData.slice(0, visiblePoidCount);\r\n                                                        } else {\r\n                                                            // Single selection types: show only selected when there's a selection\r\n                                                            cardsToShow = hasSelection \r\n                                                                ? filteredData.filter(poid => selectedPoidIds.includes(poid.poid_id))\r\n                                                                : filteredData.slice(0, visiblePoidCount);\r\n                                                        }\r\n                                                    }\r\n\r\n                                                    return cardsToShow.map((poid) => {\r\n                                                        const isSelected = selectedPoidIds.includes(poid.poid_id);\r\n                                                        const singlePreselected = onlyShowPreselected && displayPoidData.length === 1;\r\n                                                        \r\n                                                        return (\r\n                                                            <div \r\n                                                                key={poid.poid_id} \r\n                                                                onClick={() => handlePoidClick(poid)} \r\n                                                                role=\"button\" \r\n                                                                tabIndex={0}\r\n                                                                style={{\r\n                                                                    opacity: 1, // Always full opacity for visible cards\r\n                                                                    transform: 'translateY(0)',\r\n                                                                    transition: 'opacity 0.4s ease-out, transform 0.4s ease-out',\r\n                                                                    animation: 'fadeInUp 0.4s ease-out',\r\n                                                                    pointerEvents: 'auto',\r\n                                                                    filter: 'none',\r\n                                                                    gridColumn: singlePreselected ? 'span 2' : undefined,\r\n                                                                }}\r\n                                                            >\r\n                                                                <PoidCard \r\n                                                                    poid={poid} \r\n                                                                    selected={isSelected} \r\n                                                                    onClick={() => handlePoidClick(poid)} \r\n                                                                    teamData={teamData}\r\n                                                                    instructionRefOverride={instructionRef}\r\n                                                                    matterRefOverride={matterRef}\r\n                                                                    companyName={(() => {\r\n                                                                        if (pendingClientType === 'Company') {\r\n                                                                            if (poid.company_name) return poid.company_name;\r\n                                                                            return '';\r\n                                                                        }\r\n                                                                        return undefined;\r\n                                                                    })()}\r\n                                                                />\r\n                                                            </div>\r\n                                                        );\r\n                                                    });\r\n                                                })()}\r\n                                            </div>\r\n                                        </>\r\n                                    )}\r\n                                </PoidSelectionTransition>\r\n                            </div>\r\n                        </PoidSelectionTransition>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    </Stack>\r\n    );\r\n};\r\n\r\nexport default PoidSelectionStep;","// invisible change 3\r\nimport React from 'react'; // invisible change // invisible change 2\r\n// invisible change 2.2\r\nimport { Stack, Text, Icon } from '@fluentui/react';\r\nimport '../../../app/styles/MultiSelect.css';\r\nimport { colours } from '../../../app/styles/colours';\r\n\r\ninterface AreaOfWorkStepProps {\r\n    areaOfWork: string;\r\n    setAreaOfWork: (v: string) => void;\r\n    onContinue: () => void;\r\n    getGroupColor: (area: string) => string;\r\n}\r\n\r\nconst areaColors: Record<string, string> = { /* invisible change */\r\n    Commercial: colours.blue,\r\n    Property: colours.green,\r\n    Construction: colours.orange,\r\n    Employment: colours.yellow,\r\n};\r\n\r\nconst options = [\r\n    { type: 'Commercial', icon: 'KnowledgeArticle' },\r\n    { type: 'Property', icon: 'CityNext' },\r\n    { type: 'Construction', icon: 'ConstructionCone' },\r\n    { type: 'Employment', icon: 'People' },\r\n];\r\n\r\nconst AreaOfWorkStep: React.FC<AreaOfWorkStepProps> = ({ areaOfWork, setAreaOfWork, onContinue, getGroupColor }) => {\r\n    // Professional theme colors\r\n    const colours = {\r\n        bg: 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n        border: '#E2E8F0',\r\n        text: '#0F172A',\r\n        shadow: '0 2px 4px rgba(0, 0, 0, 0.04)'\r\n    };\r\n\r\n    return (\r\n        <div style={{\r\n            background: colours.bg,\r\n            border: `1px solid ${colours.border}`,\r\n            borderRadius: 12,\r\n            padding: 20,\r\n            boxShadow: colours.shadow,\r\n            boxSizing: 'border-box'\r\n        }}>\r\n            <Stack tokens={{ childrenGap: 16 }}>\r\n                {/* Professional header with icon */}\r\n                <div style={{ \r\n                    display: 'flex', \r\n                    alignItems: 'center', \r\n                    gap: 8, \r\n                    marginBottom: 4 \r\n                }}>\r\n                    <i className=\"ms-Icon ms-Icon--WorkItem\" style={{ \r\n                        fontSize: 16, \r\n                        color: '#3690CE' \r\n                    }} />\r\n                    <span style={{ \r\n                        fontSize: 16, \r\n                        fontWeight: 500, \r\n                        color: colours.text \r\n                    }}>\r\n                        Select Area of Work\r\n                    </span>\r\n                </div>\r\n                \r\n                <div className=\"area-of-work-selection\">\r\n                    <div style={{ \r\n                        display: 'grid', \r\n                        gridTemplateColumns: 'repeat(auto-fit, minmax(140px, 1fr))', \r\n                        gap: '6px'\r\n                    }}>\r\n                        {options.map(({ type, icon }) => {\r\n                            const isActive = areaOfWork === type;\r\n                            const areaColor = areaColors[type];\r\n                            \r\n                            return (\r\n                                <button\r\n                                    key={type}\r\n                                    className={`client-type-icon-btn${isActive ? ' active' : ''}`}\r\n                                    onClick={() => {\r\n                                        setAreaOfWork(type);\r\n                                        onContinue();\r\n                                    }}\r\n                                    style={{\r\n                                        position: 'relative',\r\n                                        display: 'flex',\r\n                                        flexDirection: 'column',\r\n                                        alignItems: 'center',\r\n                                        justifyContent: 'center',\r\n                                        padding: '10px 12px',\r\n                                        border: `1px solid ${isActive ? areaColor : colours.border}`,\r\n                                        borderRadius: '6px',\r\n                                        background: isActive \r\n                                            ? `linear-gradient(135deg, ${areaColor}15 0%, ${areaColor}08 100%)` \r\n                                            : 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n                                        cursor: 'pointer',\r\n                                        transition: 'all 0.2s cubic-bezier(0.4, 0, 0.2, 1)',\r\n                                        minHeight: '36px',\r\n                                        boxShadow: '0 1px 2px rgba(0,0,0,0.04)',\r\n                                        // CSS vars for hover/press\r\n                                        ['--area-hover-bg' as any]: `linear-gradient(135deg, ${areaColor}12 0%, ${areaColor}06 100%)`,\r\n                                        ['--area-hover-color' as any]: areaColor,\r\n                                        ['--area-press-bg' as any]: `linear-gradient(135deg, ${areaColor}25 0%, ${areaColor}15 100%)`,\r\n                                        ['--area-press-color' as any]: areaColor,\r\n                                        transform: 'translateY(0)',\r\n                                    }}\r\n                                >\r\n                                    <div\r\n                                        className=\"client-type-icon\"\r\n                                        style={{\r\n                                            fontSize: '16px',\r\n                                            color: isActive ? areaColor : '#64748B',\r\n                                            marginBottom: '8px',\r\n                                            opacity: 1,\r\n                                            transition: 'all 0.2s ease',\r\n                                            pointerEvents: 'none',\r\n                                        }}\r\n                                    >\r\n                                        <Icon iconName={icon} />\r\n                                    </div>\r\n                                    <div\r\n                                        className=\"client-type-label\"\r\n                                        style={{\r\n                                            fontSize: '12px',\r\n                                            fontWeight: 400,\r\n                                            color: isActive ? areaColor : '#64748B',\r\n                                            textAlign: 'center',\r\n                                            opacity: 1,\r\n                                            transform: 'translateY(0)',\r\n                                            transition: 'all 0.2s ease',\r\n                                            pointerEvents: 'none',\r\n                                            lineHeight: 1.3\r\n                                        }}\r\n                                    >\r\n                                        {type}\r\n                                    </div>\r\n                                </button>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </Stack>\r\n            <style>{`\r\n                .area-of-work-selection .client-type-icon-btn .client-type-label,\r\n                .area-of-work-selection .client-type-icon-btn .client-type-icon {\r\n                    pointer-events: none;\r\n                }\r\n                .area-of-work-selection .client-type-icon-btn:not(.active):hover {\r\n                    background: var(--area-hover-bg, linear-gradient(135deg, #F1F5F9 0%, #E2E8F0 100%)) !important;\r\n                    border-color: var(--area-hover-color, #3690CE) !important;\r\n                    transform: translateY(-2px) !important;\r\n                    box-shadow: 0 4px 12px rgba(0,0,0,0.06) !important;\r\n                }\r\n                .area-of-work-selection .client-type-icon-btn:not(.active):hover .client-type-icon {\r\n                    color: var(--area-hover-color, #3690CE) !important;\r\n                    transform: scale(1.1) !important;\r\n                }\r\n                .area-of-work-selection .client-type-icon-btn:not(.active):hover .client-type-label {\r\n                    color: var(--area-hover-color, #3690CE) !important;\r\n                }\r\n                .area-of-work-selection .client-type-icon-btn:active {\r\n                    background: var(--area-press-bg, linear-gradient(135deg, #E2E8F0 0%, #CBD5E1 100%)) !important;\r\n                    border-color: var(--area-press-color, #1565c0) !important;\r\n                    transform: translateY(-1px) !important;\r\n                }\r\n                .area-of-work-selection .client-type-icon-btn.active .client-type-icon {\r\n                    transform: scale(1.05) !important;\r\n                }\r\n                .area-of-work-selection .client-type-icon-btn.active .client-type-label {\r\n                }\r\n            `}</style>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AreaOfWorkStep;","//\r\nimport React from 'react'; // invisible change\r\n// invisible change 2.2\r\nimport { Stack, Text } from '@fluentui/react';\r\nimport '../../../app/styles/MultiSelect.css';\r\nimport { colours } from '../../../app/styles/colours';\r\n\r\nconst areaColors: Record<string, string> = { /* invisible change */\r\n    // Commercial: colours.blue, // Removed Commercial\r\n    Property: colours.green,\r\n    Construction: colours.orange,\r\n    Employment: colours.yellow,\r\n};\r\n\r\ninterface PracticeAreaStepProps {\r\n    options: string[];\r\n    practiceArea: string;\r\n    setPracticeArea: (v: string) => void;\r\n    onContinue: () => void;\r\n    areaOfWork: string;\r\n}\r\n\r\nconst PracticeAreaStep: React.FC<PracticeAreaStepProps> = ({ options, practiceArea, setPracticeArea, onContinue, areaOfWork }) => {\r\n    const color = areaColors[areaOfWork] || '#3690CE';\r\n    // Filter out 'Commercial' from the options before rendering\r\n    const filteredOptions = options.filter((pa) => pa !== 'Commercial');\r\n    \r\n    // Professional theme colors\r\n    const colours = {\r\n        bg: 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n        border: '#E2E8F0',\r\n        text: '#0F172A',\r\n        shadow: '0 2px 4px rgba(0, 0, 0, 0.04)'\r\n    };\r\n    \r\n    return (\r\n        <div style={{\r\n            background: colours.bg,\r\n            border: `1px solid ${colours.border}`,\r\n            borderRadius: 12,\r\n            padding: 20,\r\n            boxShadow: colours.shadow,\r\n            boxSizing: 'border-box'\r\n        }}>\r\n            <Stack tokens={{ childrenGap: 16 }}>\r\n                {/* Professional header with icon */}\r\n                <div style={{ \r\n                    display: 'flex', \r\n                    alignItems: 'center', \r\n                    gap: 8, \r\n                    marginBottom: 4 \r\n                }}>\r\n                    <i className=\"ms-Icon ms-Icon--WorkItem\" style={{ \r\n                        fontSize: 16, \r\n                        color: color\r\n                    }} />\r\n                    <span style={{ \r\n                        fontSize: 16, \r\n                        fontWeight: 600, \r\n                        color: colours.text \r\n                    }}>\r\n                        Select Practice Area\r\n                    </span>\r\n                </div>\r\n                \r\n                <div className=\"practice-area-selection\">\r\n                    <div style={{ \r\n                        display: 'grid', \r\n                        gridTemplateColumns: 'repeat(auto-fit, minmax(140px, 1fr))', \r\n                        gap: '6px'\r\n                    }}>\r\n                        {filteredOptions.map((pa) => {\r\n                            const isActive = practiceArea === pa;\r\n                            return (\r\n                                <div\r\n                                    key={pa}\r\n                                    className={`client-type-icon-btn${isActive ? ' active' : ''}`}\r\n                                    onClick={() => {\r\n                                        setPracticeArea(pa);\r\n                                        onContinue();\r\n                                    }}\r\n                                    style={{\r\n                                        position: 'relative',\r\n                                        display: 'flex',\r\n                                        flexDirection: 'column',\r\n                                        alignItems: 'center',\r\n                                        justifyContent: 'center',\r\n                                        padding: '8px 12px',\r\n                                        border: `1px solid ${isActive ? color : colours.border}`,\r\n                                        borderRadius: '6px',\r\n                                        background: isActive \r\n                                            ? `linear-gradient(135deg, ${color}15 0%, ${color}08 100%)` \r\n                                            : 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n                                        cursor: 'pointer',\r\n                                        transition: 'all 0.2s cubic-bezier(0.4, 0, 0.2, 1)',\r\n                                        minHeight: '36px',\r\n                                        boxShadow: '0 1px 2px rgba(0,0,0,0.04)',\r\n                                        fontSize: '12px',\r\n                                        fontWeight: 400,\r\n                                        color: isActive ? color : colours.text,\r\n                                        // CSS vars for hover/press\r\n                                        ['--area-hover-bg' as any]: `linear-gradient(135deg, ${color}10 0%, ${color}05 100%)`,\r\n                                        ['--area-hover-color' as any]: color,\r\n                                        ['--area-press-bg' as any]: `linear-gradient(135deg, ${color}25 0%, ${color}15 100%)`,\r\n                                        ['--area-press-color' as any]: color,\r\n                                        transform: 'translateY(0)',\r\n                                    }}\r\n                                >\r\n                                    <span className=\"client-type-label\" style={{\r\n                                        opacity: 1,\r\n                                        transform: 'translateY(0)',\r\n                                        transition: 'all 0.2s ease',\r\n                                        pointerEvents: 'none',\r\n                                        textAlign: 'center',\r\n                                        lineHeight: 1.3\r\n                                    }}>{pa}</span>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </Stack>\r\n            <style>{`\r\n                .practice-area-selection .client-type-icon-btn .client-type-label {\r\n                    pointer-events: none;\r\n                }\r\n                .practice-area-selection .client-type-icon-btn:not(.active):hover {\r\n                    background: var(--area-hover-bg, linear-gradient(135deg, #F1F5F9 0%, #E2E8F0 100%)) !important;\r\n                    border-color: var(--area-hover-color, #3690CE) !important;\r\n                    transform: translateY(-1px) !important;\r\n                    box-shadow: 0 3px 6px rgba(0,0,0,0.06) !important;\r\n                }\r\n                .practice-area-selection .client-type-icon-btn:not(.active):hover .client-type-label {\r\n                    color: var(--area-hover-color, #3690CE) !important;\r\n                }\r\n                .practice-area-selection .client-type-icon-btn:active {\r\n                    background: var(--area-press-bg, linear-gradient(135deg, #E2E8F0 0%, #CBD5E1 100%)) !important;\r\n                    border-color: var(--area-press-color, #1565c0) !important;\r\n                    transform: translateY(0px) !important;\r\n                }\r\n                .practice-area-selection .client-type-icon-btn.active .client-type-label {\r\n                    color: ${color} !important;\r\n                }\r\n            `}</style>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PracticeAreaStep;","//\r\nimport React from \"react\"; // invisible change\r\n// invisible change 2.2\r\nimport { Stack, PrimaryButton } from \"@fluentui/react\";\r\nimport { sharedPrimaryButtonStyles } from \"../../../app/styles/ButtonStyles\";\r\nimport BubbleTextField from \"../../../app/styles/BubbleTextField\";\r\nimport { useTheme } from \"../../../app/functionality/ThemeContext\";\r\n\r\ninterface DescriptionStepProps {\r\n    description: string;\r\n    setDescription: (v: string) => void;\r\n    onContinue?: () => void;\r\n    matterRefPreview?: string;\r\n}\r\n\r\nconst DescriptionStep: React.FC<DescriptionStepProps> = ({\r\n    description,\r\n    setDescription,\r\n    onContinue,\r\n    matterRefPreview,\r\n}) => {\r\n    const { isDarkMode } = useTheme();\r\n    const colours = {\r\n        dark: {\r\n            bg: 'linear-gradient(135deg, #1E293B 0%, #0F172A 100%)',\r\n            panel: 'linear-gradient(135deg, #1E293B 0%, #334155 100%)',\r\n            border: '#334155',\r\n            text: '#F1F5F9',\r\n            subtle: '#94A3B8',\r\n            focus: '#3690CE',\r\n            shadow: '0 2px 4px rgba(0, 0, 0, 0.15)'\r\n        },\r\n        light: {\r\n            bg: 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n            panel: 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n            border: '#E2E8F0',\r\n            text: '#0F172A',\r\n            subtle: '#64748B',\r\n            focus: '#3690CE',\r\n            shadow: '0 2px 4px rgba(0, 0, 0, 0.04)'\r\n        }\r\n    };\r\n    \r\n    const c = isDarkMode ? colours.dark : colours.light;\r\n    \r\n    return (\r\n        <div style={{\r\n            background: c.bg,\r\n            border: `1px solid ${c.border}`,\r\n            borderRadius: 12,\r\n            padding: 20,\r\n            boxShadow: c.shadow,\r\n            boxSizing: 'border-box'\r\n        }}>\r\n            <Stack tokens={{ childrenGap: 16 }}>\r\n                {/* Professional header with icon */}\r\n                <div style={{ \r\n                    display: 'flex', \r\n                    alignItems: 'center', \r\n                    gap: 8, \r\n                    marginBottom: 4 \r\n                }}>\r\n                    <i className=\"ms-Icon ms-Icon--EditNote\" style={{ \r\n                        fontSize: 16, \r\n                        color: '#3690CE' \r\n                    }} />\r\n                    <span style={{ \r\n                        fontSize: 16, \r\n                        fontWeight: 600, \r\n                        color: c.text \r\n                    }}>\r\n                        Matter Description\r\n                    </span>\r\n                </div>\r\n                \r\n                {/* Matter preview card */}\r\n                <div style={{\r\n                    background: c.panel,\r\n                    border: `1px solid ${c.border}`,\r\n                    borderRadius: 10,\r\n                    padding: '14px 16px 12px 16px',\r\n                    boxShadow: '0 2px 4px rgba(0,0,0,0.05)',\r\n                    marginBottom: 4\r\n                }}>\r\n                    <div style={{ \r\n                        display: 'flex', \r\n                        alignItems: 'center', \r\n                        gap: 10, \r\n                        marginBottom: 8 \r\n                    }}>\r\n                        <i className=\"ms-Icon ms-Icon--OpenFolderHorizontal\" style={{ \r\n                            fontSize: 18, \r\n                            color: '#3690CE' \r\n                        }} />\r\n                        <span style={{ \r\n                            fontSize: 15, \r\n                            fontWeight: 700, \r\n                            color: '#3690CE',\r\n                            letterSpacing: 0.3\r\n                        }}>\r\n                            {matterRefPreview || '[Matter Ref]'}\r\n                        </span>\r\n                    </div>\r\n                    <div style={{ \r\n                        color: c.text, \r\n                        fontSize: 14, \r\n                        fontWeight: 400,\r\n                        minHeight: 20,\r\n                        opacity: description ? 1 : 0.6,\r\n                        fontStyle: description ? 'normal' : 'italic',\r\n                        lineHeight: 1.4\r\n                    }}>\r\n                        {description || 'Matter description will appear here...'}\r\n                    </div>\r\n                </div>\r\n                \r\n                {/* Modern input field */}\r\n                <div style={{ position: 'relative' }}>\r\n                    <input\r\n                        type=\"text\"\r\n                        style={{\r\n                            width: '100%',\r\n                            background: description ? '#3690CE08' : c.panel,\r\n                            border: description ? '2px solid #3690CE' : `1px solid ${c.border}`,\r\n                            borderRadius: 10,\r\n                            fontSize: 15,\r\n                            color: c.text,\r\n                            fontWeight: 400,\r\n                            padding: '14px 16px',\r\n                            transition: 'all 0.2s cubic-bezier(0.4, 0, 0.2, 1)',\r\n                            outline: 'none',\r\n                            boxSizing: 'border-box',\r\n                            fontFamily: 'inherit',\r\n                            boxShadow: description ? '0 0 0 3px rgba(54, 144, 206, 0.1)' : 'none',\r\n                        }}\r\n                        value={description}\r\n                        onChange={e => setDescription(e.target.value)}\r\n                        placeholder=\"Enter matter description...\"\r\n                        onFocus={(e) => {\r\n                            e.target.style.borderColor = '#3690CE';\r\n                            e.target.style.boxShadow = '0 0 0 3px rgba(54, 144, 206, 0.1)';\r\n                        }}\r\n                        onBlur={(e) => {\r\n                            if (!description) {\r\n                                e.target.style.borderColor = c.border;\r\n                                e.target.style.boxShadow = 'none';\r\n                            }\r\n                        }}\r\n                    />\r\n                </div>\r\n                \r\n                {onContinue && (\r\n                    <PrimaryButton\r\n                        text=\"Continue\"\r\n                        onClick={onContinue}\r\n                        styles={{\r\n                            root: {\r\n                                background: 'linear-gradient(135deg, #3690CE 0%, #2563EB 100%)',\r\n                                border: 'none',\r\n                                borderRadius: 10,\r\n                                height: 44,\r\n                                fontWeight: 600,\r\n                                fontSize: 14,\r\n                                boxShadow: c.shadow,\r\n                                transition: 'all 0.2s cubic-bezier(0.4, 0, 0.2, 1)',\r\n                                ':hover': {\r\n                                    background: 'linear-gradient(135deg, #2563EB 0%, #1D4ED8 100%)',\r\n                                    transform: 'translateY(-1px)',\r\n                                    boxShadow: '0 6px 12px rgba(0, 0, 0, 0.15)'\r\n                                },\r\n                                ':active': {\r\n                                    transform: 'translateY(0)'\r\n                                }\r\n                            }\r\n                        }}\r\n                    />\r\n                )}\r\n            </Stack>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DescriptionStep;\r\n","//\r\nimport React from 'react'; // invisible change // invisible change\r\n// invisible change 2.2\r\nimport { Stack, Text } from '@fluentui/react';\r\nimport '../../../app/styles/MultiSelect.css';\r\nimport ModernMultiSelect from './ModernMultiSelect';\r\n\r\ninterface FolderStructureStepProps {\r\n    folderStructure: string;\r\n    setFolderStructure: (v: string) => void;\r\n    onContinue: () => void;\r\n    folderOptions: string[];\r\n}\r\n\r\nconst FolderStructureStep: React.FC<FolderStructureStepProps> = ({ folderStructure, setFolderStructure, onContinue, folderOptions }) => {\r\n    // Professional theme colors\r\n    const colours = {\r\n        bg: 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n        border: '#E2E8F0',\r\n        text: '#0F172A',\r\n        shadow: '0 2px 4px rgba(0, 0, 0, 0.04)'\r\n    };\r\n\r\n    return (\r\n        <div style={{\r\n            background: colours.bg,\r\n            border: `1px solid ${colours.border}`,\r\n            borderRadius: 12,\r\n            padding: 20,\r\n            boxShadow: colours.shadow,\r\n            boxSizing: 'border-box'\r\n        }}>\r\n            <Stack tokens={{ childrenGap: 16 }}>\r\n                {/* Professional header with icon */}\r\n                <div style={{ \r\n                    display: 'flex', \r\n                    alignItems: 'center', \r\n                    gap: 8, \r\n                    marginBottom: 4 \r\n                }}>\r\n                    <i className=\"ms-Icon ms-Icon--FolderHorizontal\" style={{ \r\n                        fontSize: 16, \r\n                        color: '#3690CE' \r\n                    }} />\r\n                    <span style={{ \r\n                        fontSize: 16, \r\n                        fontWeight: 600, \r\n                        color: colours.text \r\n                    }}>\r\n                        Select NetDocuments Folder Structure\r\n                    </span>\r\n                </div>\r\n                \r\n                <ModernMultiSelect\r\n                    label=\"\"\r\n                    options={folderOptions.map(option => ({ key: option, text: option }))}\r\n                    selectedValue={folderStructure}\r\n                    onSelectionChange={(value) => {\r\n                        setFolderStructure(value);\r\n                        onContinue();\r\n                    }}\r\n                    variant=\"default\"\r\n                />\r\n            </Stack>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FolderStructureStep;","//\r\nimport React from 'react'; // invisible change\r\n// invisible change 2.2\r\nimport { Stack, TextField, mergeStyles } from '@fluentui/react';\r\nimport { colours } from '../../../app/styles/colours';\r\nimport '../../../app/styles/MultiSelect.css';\r\nimport ModernMultiSelect from './ModernMultiSelect';\r\n\r\ninterface ValueAndSourceStepProps {\r\n    disputeValue: string;\r\n    setDisputeValue: (v: string) => void;\r\n    source: string;\r\n    setSource: (v: string) => void;\r\n    referrerName: string;\r\n    setReferrerName: (v: string) => void;\r\n    onContinue?: () => void;\r\n}\r\n\r\nconst disputeValueOptions = ['Less than £10k', '£10k - £500k', '£500k - £1m', '£1m - £5m', '£5 - £20m', '£20m+'];\r\n\r\nconst ValueAndSourceStep: React.FC<ValueAndSourceStepProps> = ({ \r\n    disputeValue, \r\n    setDisputeValue, \r\n    source, \r\n    setSource, \r\n    referrerName, \r\n    setReferrerName, \r\n    onContinue \r\n}) => {\r\n    // Professional theme colors\r\n    const colours = {\r\n        bg: 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n        border: '#E2E8F0',\r\n        text: '#0F172A',\r\n        shadow: '0 2px 4px rgba(0, 0, 0, 0.04)'\r\n    };\r\n\r\n    return (\r\n        <div style={{\r\n            background: colours.bg,\r\n            border: `1px solid ${colours.border}`,\r\n            borderRadius: 12,\r\n            padding: 20,\r\n            boxShadow: colours.shadow,\r\n            boxSizing: 'border-box'\r\n        }}>\r\n            <Stack tokens={{ childrenGap: 20 }}>\r\n                {/* Dispute Value Section */}\r\n                <div>\r\n                    <div style={{ \r\n                        display: 'flex', \r\n                        alignItems: 'center', \r\n                        gap: 8, \r\n                        marginBottom: 12 \r\n                    }}>\r\n                        <i className=\"ms-Icon ms-Icon--Money\" style={{ \r\n                            fontSize: 16, \r\n                            color: '#3690CE' \r\n                        }} />\r\n                        <span style={{ \r\n                            fontSize: 16, \r\n                            fontWeight: 600, \r\n                            color: colours.text \r\n                        }}>\r\n                            Select Value of the Dispute\r\n                        </span>\r\n                    </div>\r\n                    <ModernMultiSelect\r\n                        label=\"\"\r\n                        options={disputeValueOptions.map(option => ({ key: option, text: option }))}\r\n                        selectedValue={disputeValue}\r\n                        onSelectionChange={setDisputeValue}\r\n                        variant=\"grid\"\r\n                    />\r\n                </div>\r\n\r\n                {/* Source Selection */}\r\n                <div>\r\n                    <div style={{ \r\n                        display: 'flex', \r\n                        alignItems: 'center', \r\n                        gap: 8, \r\n                        marginBottom: 12 \r\n                    }}>\r\n                        <i className=\"ms-Icon ms-Icon--UserFollowed\" style={{ \r\n                            fontSize: 16, \r\n                            color: '#3690CE' \r\n                        }} />\r\n                        <span style={{ \r\n                            fontSize: 16, \r\n                            fontWeight: 600, \r\n                            color: colours.text \r\n                        }}>\r\n                            Select Source\r\n                        </span>\r\n                    </div>\r\n                    <ModernMultiSelect\r\n                        label=\"\"\r\n                        options={[\r\n                            { key: 'search', text: 'Search' },\r\n                            { key: 'referral', text: 'Referral' },\r\n                            { key: 'your following', text: 'Your Following' },\r\n                            { key: 'uncertain', text: 'Uncertain' }\r\n                        ]}\r\n                        selectedValue={source}\r\n                        onSelectionChange={(value) => {\r\n                            setSource(value);\r\n                            if (value !== 'referral') setReferrerName('');\r\n                        }}\r\n                        variant=\"default\"\r\n                    />\r\n                </div>\r\n\r\n                {/* Referrer Name Field - only show if source is referral */}\r\n                {source === 'referral' && (\r\n                    <div>\r\n                        <div style={{ \r\n                            display: 'flex', \r\n                            alignItems: 'center', \r\n                            gap: 8, \r\n                            marginBottom: 8 \r\n                        }}>\r\n                            <i className=\"ms-Icon ms-Icon--Contact\" style={{ \r\n                                fontSize: 16, \r\n                                color: '#3690CE' \r\n                            }} />\r\n                            <span style={{ \r\n                                fontSize: 14, \r\n                                fontWeight: 600, \r\n                                color: colours.text \r\n                            }}>\r\n                                Referrer Name\r\n                            </span>\r\n                        </div>\r\n                        <TextField\r\n                            placeholder=\"Enter referrer's name\"\r\n                            value={referrerName}\r\n                            onChange={(_: any, newVal: string | undefined) => setReferrerName(newVal || '')}\r\n                            styles={{ \r\n                                root: { width: '100%' },\r\n                                fieldGroup: {\r\n                                    border: `1px solid ${colours.border}`,\r\n                                    borderRadius: 10,\r\n                                    background: 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n                                    boxShadow: '0 1px 2px rgba(0,0,0,0.03)',\r\n                                    transition: 'all 0.2s ease',\r\n                                    ':hover': {\r\n                                        borderColor: '#3690CE',\r\n                                        boxShadow: '0 2px 4px rgba(0,0,0,0.06)'\r\n                                    },\r\n                                    ':focus-within': {\r\n                                        borderColor: '#3690CE',\r\n                                        boxShadow: '0 0 0 3px rgba(54, 144, 206, 0.1)'\r\n                                    }\r\n                                },\r\n                                field: {\r\n                                    padding: '12px 16px',\r\n                                    fontSize: 14,\r\n                                    fontWeight: 400\r\n                                }\r\n                            }}\r\n                        />\r\n                    </div>\r\n                )}\r\n            </Stack>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ValueAndSourceStep;\r\n","// List of English counties (add more as needed)\r\n// invisible change\r\nexport const counties: string[] = [\r\n  \"Bedfordshire\", \"Berkshire\", \"Bristol\", \"Buckinghamshire\", \"Cambridgeshire\", \"Cheshire\", \"City of London\", \"Cornwall\", \"Cumbria\", \"Derbyshire\", \"Devon\", \"Dorset\", \"Durham\", \"East Riding of Yorkshire\", \"East Sussex\", \"Essex\", \"Gloucestershire\", \"Greater London\", \"Greater Manchester\", \"Hampshire\", \"Herefordshire\", \"Hertfordshire\", \"Isle of Wight\", \"Kent\", \"Lancashire\", \"Leicestershire\", \"Lincolnshire\", \"Merseyside\", \"Norfolk\", \"North Yorkshire\", \"Northamptonshire\", \"Northumberland\", \"Nottinghamshire\", \"Oxfordshire\", \"Rutland\", \"Shropshire\", \"Somerset\", \"South Yorkshire\", \"Staffordshire\", \"Suffolk\", \"Surrey\", \"Tyne and Wear\", \"Warwickshire\", \"West Midlands\", \"West Sussex\", \"West Yorkshire\", \"Wiltshire\", \"Worcestershire\"\r\n];\r\nexport interface Country {\r\n  name: string;\r\n  code: string;\r\n}\r\n\r\nexport interface Title {\r\n  name: string;\r\n}\r\n\r\nexport interface Gender {\r\n  name: string;\r\n  code: string;\r\n}\r\n\r\nexport const countries: Country[] = [\r\n  { name: \"United Kingdom\", code: \"GB\" },\r\n  { name: \"United States\", code: \"US\" },\r\n  { name: \"France\", code: \"FR\" },\r\n  { name: \"Germany\", code: \"DE\" },\r\n  { name: \"Ireland\", code: \"IE\" },\r\n  { name: \"Australia\", code: \"AU\" },\r\n  { name: \"Canada\", code: \"CA\" },\r\n  { name: \"Afghanistan\", code: \"AF\" },\r\n  { name: \"Albania\", code: \"AL\" },\r\n  { name: \"Algeria\", code: \"DZ\" },\r\n  { name: \"Andorra\", code: \"AD\" },\r\n  { name: \"Angola\", code: \"AO\" },\r\n  { name: \"Argentina\", code: \"AR\" },\r\n  { name: \"Armenia\", code: \"AM\" },\r\n  { name: \"Austria\", code: \"AT\" },\r\n  { name: \"Azerbaijan\", code: \"AZ\" },\r\n  { name: \"Bahamas\", code: \"BS\" },\r\n  { name: \"Bahrain\", code: \"BH\" },\r\n  { name: \"Bangladesh\", code: \"BD\" },\r\n  { name: \"Barbados\", code: \"BB\" },\r\n  { name: \"Belarus\", code: \"BY\" },\r\n  { name: \"Belgium\", code: \"BE\" },\r\n  { name: \"Belize\", code: \"BZ\" },\r\n  { name: \"Benin\", code: \"BJ\" },\r\n  { name: \"Bhutan\", code: \"BT\" },\r\n  { name: \"Bolivia\", code: \"BO\" },\r\n  { name: \"Bosnia and Herzegovina\", code: \"BA\" },\r\n  { name: \"Botswana\", code: \"BW\" },\r\n  { name: \"Brazil\", code: \"BR\" },\r\n  { name: \"Brunei\", code: \"BN\" },\r\n  { name: \"Bulgaria\", code: \"BG\" },\r\n  { name: \"Burkina Faso\", code: \"BF\" },\r\n  { name: \"Burundi\", code: \"BI\" },\r\n  { name: \"Cambodia\", code: \"KH\" },\r\n  { name: \"Cameroon\", code: \"CM\" },\r\n  { name: \"Cape Verde\", code: \"CV\" },\r\n  { name: \"Central African Republic\", code: \"CF\" },\r\n  { name: \"Chad\", code: \"TD\" },\r\n  { name: \"Chile\", code: \"CL\" },\r\n  { name: \"China\", code: \"CN\" },\r\n  { name: \"Colombia\", code: \"CO\" },\r\n  { name: \"Comoros\", code: \"KM\" },\r\n  { name: \"Congo (Brazzaville)\", code: \"CG\" },\r\n  { name: \"Congo (Kinshasa)\", code: \"CD\" },\r\n  { name: \"Costa Rica\", code: \"CR\" },\r\n  { name: \"Croatia\", code: \"HR\" },\r\n  { name: \"Cuba\", code: \"CU\" },\r\n  { name: \"Cyprus\", code: \"CY\" },\r\n  { name: \"Czech Republic\", code: \"CZ\" },\r\n  { name: \"Denmark\", code: \"DK\" },\r\n  { name: \"Djibouti\", code: \"DJ\" },\r\n  { name: \"Dominica\", code: \"DM\" },\r\n  { name: \"Dominican Republic\", code: \"DO\" },\r\n  { name: \"Ecuador\", code: \"EC\" },\r\n  { name: \"Egypt\", code: \"EG\" },\r\n  { name: \"El Salvador\", code: \"SV\" },\r\n  { name: \"Equatorial Guinea\", code: \"GQ\" },\r\n  { name: \"Eritrea\", code: \"ER\" },\r\n  { name: \"Estonia\", code: \"EE\" },\r\n  { name: \"Eswatini\", code: \"SZ\" },\r\n  { name: \"Ethiopia\", code: \"ET\" },\r\n  { name: \"Fiji\", code: \"FJ\" },\r\n  { name: \"Finland\", code: \"FI\" },\r\n  { name: \"Gabon\", code: \"GA\" },\r\n  { name: \"Gambia\", code: \"GM\" },\r\n  { name: \"Georgia\", code: \"GE\" },\r\n  { name: \"Ghana\", code: \"GH\" },\r\n  { name: \"Greece\", code: \"GR\" },\r\n  { name: \"Grenada\", code: \"GD\" },\r\n  { name: \"Guatemala\", code: \"GT\" },\r\n  { name: \"Guinea\", code: \"GN\" },\r\n  { name: \"Guinea-Bissau\", code: \"GW\" },\r\n  { name: \"Guyana\", code: \"GY\" },\r\n  { name: \"Haiti\", code: \"HT\" },\r\n  { name: \"Honduras\", code: \"HN\" },\r\n  { name: \"Hungary\", code: \"HU\" },\r\n  { name: \"Iceland\", code: \"IS\" },\r\n  { name: \"India\", code: \"IN\" },\r\n  { name: \"Indonesia\", code: \"ID\" },\r\n  { name: \"Iran\", code: \"IR\" },\r\n  { name: \"Iraq\", code: \"IQ\" },\r\n  { name: \"Israel\", code: \"IL\" },\r\n  { name: \"Italy\", code: \"IT\" },\r\n  { name: \"Jamaica\", code: \"JM\" },\r\n  { name: \"Japan\", code: \"JP\" },\r\n  { name: \"Jordan\", code: \"JO\" },\r\n  { name: \"Kazakhstan\", code: \"KZ\" },\r\n  { name: \"Kenya\", code: \"KE\" },\r\n  { name: \"Kiribati\", code: \"KI\" },\r\n  { name: \"Kuwait\", code: \"KW\" },\r\n  { name: \"Kyrgyzstan\", code: \"KG\" },\r\n  { name: \"Laos\", code: \"LA\" },\r\n  { name: \"Latvia\", code: \"LV\" },\r\n  { name: \"Lebanon\", code: \"LB\" },\r\n  { name: \"Lesotho\", code: \"LS\" },\r\n  { name: \"Liberia\", code: \"LR\" },\r\n  { name: \"Libya\", code: \"LY\" },\r\n  { name: \"Liechtenstein\", code: \"LI\" },\r\n  { name: \"Lithuania\", code: \"LT\" },\r\n  { name: \"Luxembourg\", code: \"LU\" },\r\n  { name: \"Madagascar\", code: \"MG\" },\r\n  { name: \"Malawi\", code: \"MW\" },\r\n  { name: \"Malaysia\", code: \"MY\" },\r\n  { name: \"Maldives\", code: \"MV\" },\r\n  { name: \"Mali\", code: \"ML\" },\r\n  { name: \"Malta\", code: \"MT\" },\r\n  { name: \"Marshall Islands\", code: \"MH\" },\r\n  { name: \"Mauritania\", code: \"MR\" },\r\n  { name: \"Mauritius\", code: \"MU\" },\r\n  { name: \"Mexico\", code: \"MX\" },\r\n  { name: \"Micronesia\", code: \"FM\" },\r\n  { name: \"Moldova\", code: \"MD\" },\r\n  { name: \"Monaco\", code: \"MC\" },\r\n  { name: \"Mongolia\", code: \"MN\" },\r\n  { name: \"Montenegro\", code: \"ME\" },\r\n  { name: \"Morocco\", code: \"MA\" },\r\n  { name: \"Mozambique\", code: \"MZ\" },\r\n  { name: \"Myanmar\", code: \"MM\" },\r\n  { name: \"Namibia\", code: \"NA\" },\r\n  { name: \"Nauru\", code: \"NR\" },\r\n  { name: \"Nepal\", code: \"NP\" },\r\n  { name: \"Netherlands\", code: \"NL\" },\r\n  { name: \"New Zealand\", code: \"NZ\" },\r\n  { name: \"Nicaragua\", code: \"NI\" },\r\n  { name: \"Niger\", code: \"NE\" },\r\n  { name: \"Nigeria\", code: \"NG\" },\r\n  { name: \"North Korea\", code: \"KP\" },\r\n  { name: \"North Macedonia\", code: \"MK\" },\r\n  { name: \"Norway\", code: \"NO\" },\r\n  { name: \"Oman\", code: \"OM\" },\r\n  { name: \"Pakistan\", code: \"PK\" },\r\n  { name: \"Palau\", code: \"PW\" },\r\n  { name: \"Palestine\", code: \"PS\" },\r\n  { name: \"Panama\", code: \"PA\" },\r\n  { name: \"Papua New Guinea\", code: \"PG\" },\r\n  { name: \"Paraguay\", code: \"PY\" },\r\n  { name: \"Peru\", code: \"PE\" },\r\n  { name: \"Philippines\", code: \"PH\" },\r\n  { name: \"Poland\", code: \"PL\" },\r\n  { name: \"Portugal\", code: \"PT\" },\r\n  { name: \"Qatar\", code: \"QA\" },\r\n  { name: \"Romania\", code: \"RO\" },\r\n  { name: \"Russia\", code: \"RU\" },\r\n  { name: \"Rwanda\", code: \"RW\" },\r\n  { name: \"Saint Kitts and Nevis\", code: \"KN\" },\r\n  { name: \"Saint Lucia\", code: \"LC\" },\r\n  { name: \"Saint Vincent and the Grenadines\", code: \"VC\" },\r\n  { name: \"Samoa\", code: \"WS\" },\r\n  { name: \"San Marino\", code: \"SM\" },\r\n  { name: \"Sao Tome and Principe\", code: \"ST\" },\r\n  { name: \"Saudi Arabia\", code: \"SA\" },\r\n  { name: \"Senegal\", code: \"SN\" },\r\n  { name: \"Serbia\", code: \"RS\" },\r\n  { name: \"Seychelles\", code: \"SC\" },\r\n  { name: \"Sierra Leone\", code: \"SL\" },\r\n  { name: \"Singapore\", code: \"SG\" },\r\n  { name: \"Slovakia\", code: \"SK\" },\r\n  { name: \"Slovenia\", code: \"SI\" },\r\n  { name: \"Solomon Islands\", code: \"SB\" },\r\n  { name: \"Somalia\", code: \"SO\" },\r\n  { name: \"South Africa\", code: \"ZA\" },\r\n  { name: \"South Korea\", code: \"KR\" },\r\n  { name: \"South Sudan\", code: \"SS\" },\r\n  { name: \"Spain\", code: \"ES\" },\r\n  { name: \"Sri Lanka\", code: \"LK\" },\r\n  { name: \"Sudan\", code: \"SD\" },\r\n  { name: \"Suriname\", code: \"SR\" },\r\n  { name: \"Sweden\", code: \"SE\" },\r\n  { name: \"Switzerland\", code: \"CH\" },\r\n  { name: \"Syria\", code: \"SY\" },\r\n  { name: \"Taiwan\", code: \"TW\" },\r\n  { name: \"Tajikistan\", code: \"TJ\" },\r\n  { name: \"Tanzania\", code: \"TZ\" },\r\n  { name: \"Thailand\", code: \"TH\" },\r\n  { name: \"Timor-Leste\", code: \"TL\" },\r\n  { name: \"Togo\", code: \"TG\" },\r\n  { name: \"Tonga\", code: \"TO\" },\r\n  { name: \"Trinidad and Tobago\", code: \"TT\" },\r\n  { name: \"Tunisia\", code: \"TN\" },\r\n  { name: \"Turkey\", code: \"TR\" },\r\n  { name: \"Turkmenistan\", code: \"TM\" },\r\n  { name: \"Tuvalu\", code: \"TV\" },\r\n  { name: \"Uganda\", code: \"UG\" },\r\n  { name: \"Ukraine\", code: \"UA\" },\r\n  { name: \"United Arab Emirates\", code: \"AE\" },\r\n  { name: \"Uruguay\", code: \"UY\" },\r\n  { name: \"Uzbekistan\", code: \"UZ\" },\r\n  { name: \"Vanuatu\", code: \"VU\" },\r\n  { name: \"Vatican City\", code: \"VA\" },\r\n  { name: \"Venezuela\", code: \"VE\" },\r\n  { name: \"Vietnam\", code: \"VN\" },\r\n  { name: \"Yemen\", code: \"YE\" },\r\n  { name: \"Zambia\", code: \"ZM\" },\r\n  { name: \"Zimbabwe\", code: \"ZW\" }\r\n];\r\n\r\nexport const titles: Title[] = [\r\n  { name: \"Mr\" },\r\n  { name: \"Mrs\" },\r\n  { name: \"Ms\" },\r\n  { name: \"Miss\" },\r\n  { name: \"Dr\" },\r\n  { name: \"Prof\" },\r\n  { name: \"Other\" }\r\n];\r\n\r\nexport const genders: Gender[] = [\r\n  { name: \"Male\", code: \"M\" },\r\n  { name: \"Female\", code: \"F\" },\r\n  { name: \"Other\", code: \"O\" }\r\n];\r\n","/**\r\n * Opponent Data Tracker\r\n * Manages the distinction between placeholder and real user data\r\n */\r\n\r\nexport interface OpponentDataStatus {\r\n  fieldName: string;\r\n  isPlaceholder: boolean;\r\n  lastUpdated: Date;\r\n  value: string;\r\n}\r\n\r\nexport interface OpponentDataSheet {\r\n  matterId?: string;\r\n  fields: { [fieldName: string]: OpponentDataStatus };\r\n}\r\n\r\n/**\r\n * Default placeholder indicators - these values indicate placeholder data\r\n */\r\nexport const PLACEHOLDER_INDICATORS = new Set([\r\n  'Pending',\r\n  'Data Entry',\r\n  'Awaiting details',\r\n  'Pending entry',\r\n  'TBD',\r\n  'Awaiting Company Details',\r\n  'Awaiting Solicitor Details',\r\n  'pending-solicitor@awaiting-details.temp'\r\n]);\r\n\r\n/**\r\n * Check if a value appears to be placeholder data\r\n */\r\nexport function isPlaceholderValue(value: string): boolean {\r\n  if (!value || value.trim() === '') return false;\r\n  return PLACEHOLDER_INDICATORS.has(value.trim());\r\n}\r\n\r\n/**\r\n * Create a new data sheet for tracking opponent information\r\n */\r\nexport function createOpponentDataSheet(matterId?: string): OpponentDataSheet {\r\n  return {\r\n    matterId,\r\n    fields: {}\r\n  };\r\n}\r\n\r\n/**\r\n * Mark a field as containing placeholder data\r\n */\r\nexport function markFieldAsPlaceholder(\r\n  sheet: OpponentDataSheet, \r\n  fieldName: string, \r\n  value: string\r\n): OpponentDataSheet {\r\n  return {\r\n    ...sheet,\r\n    fields: {\r\n      ...sheet.fields,\r\n      [fieldName]: {\r\n        fieldName,\r\n        isPlaceholder: true,\r\n        lastUpdated: new Date(),\r\n        value\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Mark a field as containing real user data\r\n */\r\nexport function markFieldAsRealData(\r\n  sheet: OpponentDataSheet,\r\n  fieldName: string,\r\n  value: string\r\n): OpponentDataSheet {\r\n  return {\r\n    ...sheet,\r\n    fields: {\r\n      ...sheet.fields,\r\n      [fieldName]: {\r\n        fieldName,\r\n        isPlaceholder: false,\r\n        lastUpdated: new Date(),\r\n        value\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Get all fields that contain placeholder data\r\n */\r\nexport function getPlaceholderFields(sheet: OpponentDataSheet): string[] {\r\n  return Object.values(sheet.fields)\r\n    .filter(field => field.isPlaceholder)\r\n    .map(field => field.fieldName);\r\n}\r\n\r\n/**\r\n * Get all fields that contain real user data\r\n */\r\nexport function getRealDataFields(sheet: OpponentDataSheet): string[] {\r\n  return Object.values(sheet.fields)\r\n    .filter(field => !field.isPlaceholder)\r\n    .map(field => field.fieldName);\r\n}\r\n\r\n/**\r\n * Get only the real data for API submission\r\n */\r\nexport function getRealDataForSubmission(\r\n  sheet: OpponentDataSheet,\r\n  allFieldData: { [key: string]: any }\r\n): { [key: string]: any } {\r\n  const realFields = getRealDataFields(sheet);\r\n  const realData: { [key: string]: any } = {};\r\n\r\n  realFields.forEach(fieldName => {\r\n    if (allFieldData[fieldName] && allFieldData[fieldName].trim()) {\r\n      realData[fieldName] = allFieldData[fieldName];\r\n    }\r\n  });\r\n\r\n  return realData;\r\n}\r\n\r\n/**\r\n * Serialize sheet for storage\r\n */\r\nexport function serializeDataSheet(sheet: OpponentDataSheet): string {\r\n  return JSON.stringify(sheet);\r\n}\r\n\r\n/**\r\n * Deserialize sheet from storage\r\n */\r\nexport function deserializeDataSheet(data: string): OpponentDataSheet {\r\n  try {\r\n    return JSON.parse(data);\r\n  } catch {\r\n    return createOpponentDataSheet();\r\n  }\r\n}\r\n\r\n/**\r\n * Save data sheet to localStorage (for persistence across sessions)\r\n */\r\nexport function saveDataSheetToStorage(sheet: OpponentDataSheet, key: string = 'opponentDataSheet'): void {\r\n  try {\r\n    localStorage.setItem(key, serializeDataSheet(sheet));\r\n  } catch (error) {\r\n    console.warn('Failed to save opponent data sheet to localStorage:', error);\r\n  }\r\n}\r\n\r\n/**\r\n * Load data sheet from localStorage\r\n */\r\nexport function loadDataSheetFromStorage(key: string = 'opponentDataSheet'): OpponentDataSheet {\r\n  try {\r\n    const stored = localStorage.getItem(key);\r\n    return stored ? deserializeDataSheet(stored) : createOpponentDataSheet();\r\n  } catch (error) {\r\n    console.warn('Failed to load opponent data sheet from localStorage:', error);\r\n    return createOpponentDataSheet();\r\n  }\r\n}","//\r\nimport React from \"react\"; // invisible change\r\n// invisible change 2.2\r\nimport { Stack, TextField, Dropdown, IDropdownOption, Checkbox, PrimaryButton, Icon, FontIcon } from \"@fluentui/react\";\r\nimport type { ICheckboxStyles } from \"@fluentui/react\";\r\nimport { sharedPrimaryButtonStyles } from \"../../../app/styles/ButtonStyles\";\r\nimport \"../../../app/styles/MultiSelect.css\";\r\nimport BubbleTextField from \"../../../app/styles/BubbleTextField\";\r\nimport { useTheme } from \"../../../app/functionality/ThemeContext\";\r\nimport { countries } from \"../../../data/referenceData\";\r\nimport ModernMultiSelect from './ModernMultiSelect';\r\nimport {\r\n  isPlaceholderValue,\r\n  loadDataSheetFromStorage,\r\n  saveDataSheetToStorage,\r\n  markFieldAsPlaceholder,\r\n  markFieldAsRealData,\r\n  OpponentDataSheet\r\n} from \"../../../utils/opponentDataTracker\";\r\nimport { colours } from \"../../../app/styles/colours\";\r\n\r\n// Local persistence helper mirroring FlatMatterOpening behaviour\r\nfunction useDraftedState<T>(key: string, initialValue: T): [T, React.Dispatch<React.SetStateAction<T>>] {\r\n  const storageKey = `matterOpeningDraft_${key}`;\r\n  const [state, setState] = React.useState<T>(() => {\r\n    try {\r\n      const item = localStorage.getItem(storageKey);\r\n      return item ? (JSON.parse(item) as T) : initialValue;\r\n    } catch {\r\n      return initialValue;\r\n    }\r\n  });\r\n  React.useEffect(() => {\r\n    try {\r\n      localStorage.setItem(storageKey, JSON.stringify(state));\r\n    } catch {}\r\n  }, [state, storageKey]);\r\n  return [state, setState];\r\n}\r\n\r\ninterface OpponentDetailsStepProps {\r\n  opponentName: string;\r\n  setOpponentName: (v: string) => void;\r\n  opponentEmail: string;\r\n  setOpponentEmail: (v: string) => void;\r\n  opponentSolicitorName: string;\r\n  setOpponentSolicitorName: (v: string) => void;\r\n  opponentSolicitorCompany: string;\r\n  setOpponentSolicitorCompany: (v: string) => void;\r\n  opponentSolicitorEmail: string;\r\n  setOpponentSolicitorEmail: (v: string) => void;\r\n  noConflict: boolean;\r\n  setNoConflict: (v: boolean) => void;\r\n  disputeValue: string;\r\n  setDisputeValue: (v: string) => void;\r\n  setOpponentTitle?: (v: string) => void;\r\n  opponentTitle?: string;\r\n  setOpponentFirst?: (v: string) => void;\r\n  opponentFirst?: string;\r\n  setOpponentLast?: (v: string) => void;\r\n  opponentLast?: string;\r\n  setOpponentPhone?: (v: string) => void;\r\n  opponentPhone?: string;\r\n  setOpponentHouseNumber?: (v: string) => void;\r\n  opponentHouseNumber?: string;\r\n  setOpponentStreet?: (v: string) => void;\r\n  opponentStreet?: string;\r\n  setOpponentCity?: (v: string) => void;\r\n  opponentCity?: string;\r\n  setOpponentCounty?: (v: string) => void;\r\n  opponentCounty?: string;\r\n  setOpponentPostcode?: (v: string) => void;\r\n  opponentPostcode?: string;\r\n  setOpponentCountry?: (v: string) => void;\r\n  opponentCountry?: string;\r\n  opponentHasCompany?: boolean;\r\n  setOpponentHasCompany?: (v: boolean) => void;\r\n  opponentCompanyName?: string;\r\n  setOpponentCompanyName?: (v: string) => void;\r\n  opponentCompanyNumber?: string;\r\n  setOpponentCompanyNumber?: (v: string) => void;\r\n  // Solicitor fields\r\n  setSolicitorTitle?: (v: string) => void;\r\n  solicitorTitle?: string;\r\n  setSolicitorFirst?: (v: string) => void;\r\n  solicitorFirst?: string;\r\n  setSolicitorLast?: (v: string) => void;\r\n  solicitorLast?: string;\r\n  setSolicitorPhone?: (v: string) => void;\r\n  solicitorPhone?: string;\r\n  setSolicitorHouseNumber?: (v: string) => void;\r\n  solicitorHouseNumber?: string;\r\n  setSolicitorStreet?: (v: string) => void;\r\n  solicitorStreet?: string;\r\n  setSolicitorCity?: (v: string) => void;\r\n  solicitorCity?: string;\r\n  setSolicitorCounty?: (v: string) => void;\r\n  solicitorCounty?: string;\r\n  setSolicitorPostcode?: (v: string) => void;\r\n  solicitorPostcode?: string;\r\n  setSolicitorCountry?: (v: string) => void;\r\n  solicitorCountry?: string;\r\n  solicitorCompanyNumber?: string;\r\n  setSolicitorCompanyNumber?: (v: string) => void;\r\n  // Choice tracking\r\n  opponentChoiceMade?: boolean;\r\n  setOpponentChoiceMade?: (v: boolean) => void;\r\n  onContinue?: () => void; // <-- Add this line\r\n}\r\n\r\nconst titleOptions: IDropdownOption[] = [\r\n  { key: \"\", text: \"Title\" },\r\n  // { key: \"AI\", text: \"AI\" }, // Hide AI from dropdown, but use as fallback\r\n  { key: \"Mr\", text: \"Mr\" },\r\n  { key: \"Mrs\", text: \"Mrs\" },\r\n  { key: \"Ms\", text: \"Ms\" },\r\n  { key: \"Miss\", text: \"Miss\" },\r\n  { key: \"Dr\", text: \"Dr\" },\r\n  { key: \"Prof\", text: \"Prof\" },\r\n  { key: \"Other\", text: \"Other\" },\r\n];\r\n\r\nconst containerStyle: React.CSSProperties = { /* compact, consistent card */\r\n  background: \"#F8FAFC\",\r\n  border: \"1px solid #e3e8ef\",\r\n  borderRadius: 8,\r\n  boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.04)\",\r\n  padding: \"14px 14px 10px 14px\",\r\n  marginBottom: 12,\r\n  marginTop: 4,\r\n  transition: \"box-shadow 0.2s, border-color 0.2s\"\r\n};\r\n\r\nconst answeredFieldStyle = {\r\n  background: \"rgba(54, 144, 206, 0.10)\",\r\n  color: \"#061733\",\r\n  border: \"none\",\r\n  borderRadius: 0,\r\n  boxShadow: \"none\",\r\n  transition: \"background 0.2s, color 0.2s, border 0.2s\"\r\n};\r\nconst placeholderFieldStyle = {\r\n  background: \"#fafbfc\",\r\n  color: \"#9ca3af\",\r\n  border: \"none\",\r\n  borderRadius: 0,\r\n  boxShadow: \"0 1px 2px rgba(0,0,0,0.02)\",\r\n  transition: \"background 0.2s, color 0.2s, border 0.2s\"\r\n};\r\nconst unansweredFieldStyle = {\r\n  background: \"#FFFFFF\",\r\n  color: \"#061733\",\r\n  border: \"none\",\r\n  borderRadius: 0,\r\n  boxShadow: \"0 2px 8px rgba(0,0,0,0.08)\",\r\n  transition: \"background 0.2s, color 0.2s, border 0.2s\"\r\n};\r\n\r\n// Inline validators (touched-gated)\r\nconst emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\nconst phoneAllowed = /[0-9+()\\-\\s]/g;\r\nconst companyNumberRegex = /^(?:[A-Z]{2}\\d{6}|\\d{8})$/i; // Simplified UK formats\r\n\r\nfunction getEmailErrorMessage(value: string, touched: boolean): string {\r\n  if (!touched || !value) return \"\";\r\n  return emailRegex.test(value) ? \"\" : \"Enter a valid email\";\r\n}\r\n\r\nfunction getPhoneErrorMessage(value: string, touched: boolean): string {\r\n  if (!touched || !value) return \"\";\r\n  const digits = (value.match(/\\d/g) || []).length;\r\n  const validChars = value.replace(phoneAllowed, \"\");\r\n  if (validChars.length > 0) return \"Phone contains invalid characters\";\r\n  return digits >= 7 ? \"\" : \"Enter a valid phone number\";\r\n}\r\n\r\nfunction getCompanyNumberErrorMessage(value: string, touched: boolean): string {\r\n  if (!touched || !value) return \"\";\r\n  return companyNumberRegex.test(value.trim()) ? \"\" : \"Enter a valid UK company number\";\r\n}\r\n\r\n// UK address parser (lightweight heuristic)\r\nconst UK_POSTCODE = /\\b([A-Z]{1,2}\\d[A-Z\\d]?\\s*\\d[A-Z]{2})\\b/i;\r\nfunction parseUKAddress(text: string) {\r\n  const lines = text\r\n    .split(/\\n|,/) // allow comma or newline separated\r\n    .map(s => s.trim())\r\n    .filter(Boolean);\r\n\r\n  let postcode = \"\";\r\n  // Find postcode in any line\r\n  for (let i = lines.length - 1; i >= 0; i--) {\r\n    const m = lines[i].match(UK_POSTCODE);\r\n    if (m) {\r\n      postcode = m[1].toUpperCase().replace(/\\s+/, \" \");\r\n      lines[i] = lines[i].replace(UK_POSTCODE, \"\").trim();\r\n      if (!lines[i]) lines.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n\r\n  const first = lines[0] || \"\";\r\n  let houseNumber = \"\";\r\n  let street = \"\";\r\n  const firstParts = first.split(/\\s+/);\r\n  if (firstParts.length && /^\\d+[A-Z]?$/i.test(firstParts[0])) {\r\n    houseNumber = firstParts[0];\r\n    street = firstParts.slice(1).join(\" \");\r\n  } else {\r\n    street = first;\r\n  }\r\n\r\n  const tail = lines.slice(1);\r\n  let city = tail.length ? tail[0] : \"\";\r\n  let county = tail.length > 1 ? tail[1] : \"\";\r\n\r\n  // Fallback: if only one tail element, treat it as city\r\n  return { houseNumber, street, city, county, postcode };\r\n}\r\n// Pressed state mimics .navigatorPivot .ms-Pivot-link:active from NavigatorPivot.css\r\nconst pressedFieldStyle = {\r\n  background: \"rgba(0, 0, 0, 0.05)\",\r\n  color: \"var(--helix-highlight, #3690CE)\",\r\n  border: \"0.25px solid rgba(54, 144, 206, 0.4)\",\r\n  borderRadius: 0,\r\n  boxShadow: \"none\",\r\n  outline: \"none\",\r\n  transition: \"all 0.3s cubic-bezier(0.4, 0, 0.2, 1)\"\r\n};\r\n\r\nconst addressFields = [\r\n  { id: \"houseNumber\", placeholder: \"House/Building Number or Name\" },\r\n  { id: \"street\", placeholder: \"Street\" },\r\n  { id: \"city\", placeholder: \"City/Town\" },\r\n  { id: \"county\", placeholder: \"County\" },\r\n  { id: \"postcode\", placeholder: \"Post Code\" },\r\n  { id: \"country\", placeholder: \"Country\" }\r\n];\r\n\r\nconst dummyData = {\r\n  opponentTitle: \"Mr\",\r\n  opponentFirst: \"Invent\",\r\n  opponentLast: \"Name\",\r\n  opponentEmail: \"opponent@helix-law.com\",\r\n  opponentPhone: \"0345 314 2044\",\r\n  opponentHouseNumber: \"Second Floor\",\r\n  opponentStreet: \"Britannia House, 21 Station Street\",\r\n  opponentCity: \"Brighton\",\r\n  opponentCounty: \"East Sussex\",\r\n  opponentPostcode: \"BN1 4DE\",\r\n  opponentCountry: \"United Kingdom\",\r\n  opponentHasCompany: true,\r\n  opponentCompanyName: \"Helix Law Ltd\",\r\n  opponentCompanyNumber: \"07845461\",\r\n  opponentSolicitorCompany: \"Helix Law Ltd\",\r\n  solicitorCompanyNumber: \"07845461\",\r\n  solicitorTitle: \"Mr\",\r\n  solicitorFirst: \"Invent\",\r\n  solicitorLast: \"Solicitor Name\",\r\n  opponentSolicitorEmail: \"opponentsolicitor@helix-law.com\",\r\n  solicitorPhone: \"0345 314 2044\",\r\n  solicitorHouseNumber: \"Second Floor\",\r\n  solicitorStreet: \"Britannia House, 21 Station Street\",\r\n  solicitorCity: \"Brighton\",\r\n  solicitorCounty: \"East Sussex\",\r\n  solicitorPostcode: \"BN1 4DE\",\r\n  solicitorCountry: \"United Kingdom\"\r\n};\r\n\r\nconst OpponentDetailsStep: React.FC<OpponentDetailsStepProps> = ({\r\n  opponentName,\r\n  setOpponentName,\r\n  opponentEmail,\r\n  setOpponentEmail,\r\n  opponentSolicitorName,\r\n  setOpponentSolicitorName,\r\n  opponentSolicitorCompany,\r\n  setOpponentSolicitorCompany,\r\n  opponentSolicitorEmail,\r\n  setOpponentSolicitorEmail,\r\n  noConflict,\r\n  setNoConflict,\r\n  disputeValue,\r\n  setDisputeValue,\r\n  // New/extended props\r\n  setOpponentTitle,\r\n  opponentTitle,\r\n  setOpponentFirst,\r\n  opponentFirst,\r\n  setOpponentLast,\r\n  opponentLast,\r\n  setOpponentPhone,\r\n  opponentPhone,\r\n  setOpponentHouseNumber,\r\n  opponentHouseNumber,\r\n  setOpponentStreet,\r\n  opponentStreet,\r\n  setOpponentCity,\r\n  opponentCity,\r\n  setOpponentCounty,\r\n  opponentCounty,\r\n  setOpponentPostcode,\r\n  opponentPostcode,\r\n  setOpponentCountry,\r\n  opponentCountry,\r\n  opponentHasCompany,\r\n  setOpponentHasCompany,\r\n  opponentCompanyName,\r\n  setOpponentCompanyName,\r\n  opponentCompanyNumber,\r\n  setOpponentCompanyNumber,\r\n  setSolicitorTitle,\r\n  solicitorTitle,\r\n  setSolicitorFirst,\r\n  solicitorFirst,\r\n  setSolicitorLast,\r\n  solicitorLast,\r\n  setSolicitorPhone,\r\n  solicitorPhone,\r\n  setSolicitorHouseNumber,\r\n  solicitorHouseNumber,\r\n  setSolicitorStreet,\r\n  solicitorStreet,\r\n  setSolicitorCity,\r\n  solicitorCity,\r\n  setSolicitorCounty,\r\n  solicitorCounty,\r\n  setSolicitorPostcode,\r\n  solicitorPostcode,\r\n  setSolicitorCountry,\r\n  solicitorCountry,\r\n  solicitorCompanyNumber,\r\n  setSolicitorCompanyNumber,\r\n  // Choice tracking\r\n  opponentChoiceMade,\r\n  setOpponentChoiceMade,\r\n  onContinue, // <-- Add this line\r\n}) => {\r\n  // Local state for new fields if not provided by parent\r\n  const [localOpponentTitle, setLocalOpponentTitle] = React.useState(\"\");\r\n  const [localOpponentFirst, setLocalOpponentFirst] = React.useState(\"\");\r\n  const [localOpponentLast, setLocalOpponentLast] = React.useState(\"\");\r\n  const [localOpponentPhone, setLocalOpponentPhone] = React.useState(\"\");\r\n  const [localOpponentAddress, setLocalOpponentAddress] = React.useState(\"\");\r\n  const [localOpponentHasCompany, setLocalOpponentHasCompany] = React.useState(false);\r\n  const [localOpponentCompanyName, setLocalOpponentCompanyName] = React.useState(\"\");\r\n  const [localOpponentCompanyNumber, setLocalOpponentCompanyNumber] = React.useState(\"\");\r\n  // Opponent company address (for Individual opponents too)\r\n  const [localOpponentCompanyHouseNumber, setLocalOpponentCompanyHouseNumber] = useDraftedState<string>('opponentCompanyHouseNumber', \"\");\r\n  const [localOpponentCompanyStreet, setLocalOpponentCompanyStreet] = useDraftedState<string>('opponentCompanyStreet', \"\");\r\n  const [localOpponentCompanyCity, setLocalOpponentCompanyCity] = useDraftedState<string>('opponentCompanyCity', \"\");\r\n  const [localOpponentCompanyCounty, setLocalOpponentCompanyCounty] = useDraftedState<string>('opponentCompanyCounty', \"\");\r\n  const [localOpponentCompanyPostcode, setLocalOpponentCompanyPostcode] = useDraftedState<string>('opponentCompanyPostcode', \"\");\r\n  const [localOpponentCompanyCountry, setLocalOpponentCompanyCountry] = useDraftedState<string>('opponentCompanyCountry', \"\");\r\n  const [localSolicitorTitle, setLocalSolicitorTitle] = React.useState(\"\");\r\n  const [localSolicitorFirst, setLocalSolicitorFirst] = React.useState(\"\");\r\n  const [localSolicitorLast, setLocalSolicitorLast] = React.useState(\"\");\r\n  const [localSolicitorPhone, setLocalSolicitorPhone] = React.useState(\"\");\r\n  const [localSolicitorCompanyNumber, setLocalSolicitorCompanyNumber] = React.useState(\"\");\r\n\r\n  // Add local state for email fields if not provided by parent\r\n  const [localOpponentEmail, setLocalOpponentEmail] = useDraftedState<string>('opponentEmail', \"\");\r\n  const [localOpponentSolicitorEmail, setLocalOpponentSolicitorEmail] = useDraftedState<string>('opponentSolicitorEmail', \"\");\r\n\r\n  // Add local state for address fields if not provided by parent\r\n  const [localOpponentHouseNumber, setLocalOpponentHouseNumber] = useDraftedState<string>('opponentHouseNumber', \"\");\r\n  const [localOpponentStreet, setLocalOpponentStreet] = useDraftedState<string>('opponentStreet', \"\");\r\n  const [localOpponentCity, setLocalOpponentCity] = useDraftedState<string>('opponentCity', \"\");\r\n  const [localOpponentCounty, setLocalOpponentCounty] = useDraftedState<string>('opponentCounty', \"\");\r\n  const [localOpponentPostcode, setLocalOpponentPostcode] = useDraftedState<string>('opponentPostcode', \"\");\r\n  const [localOpponentCountry, setLocalOpponentCountry] = useDraftedState<string>('opponentCountry', \"\");\r\n\r\n  const [localSolicitorHouseNumber, setLocalSolicitorHouseNumber] = useDraftedState<string>('solicitorHouseNumber', \"\");\r\n  const [localSolicitorStreet, setLocalSolicitorStreet] = useDraftedState<string>('solicitorStreet', \"\");\r\n  const [localSolicitorCity, setLocalSolicitorCity] = useDraftedState<string>('solicitorCity', \"\");\r\n  const [localSolicitorCounty, setLocalSolicitorCounty] = useDraftedState<string>('solicitorCounty', \"\");\r\n  const [localSolicitorPostcode, setLocalSolicitorPostcode] = useDraftedState<string>('solicitorPostcode', \"\");\r\n  const [localSolicitorCountry, setLocalSolicitorCountry] = useDraftedState<string>('solicitorCountry', \"\");\r\n\r\n  // Use parent state if provided, else local state\r\n  const _opponentTitle = opponentTitle ?? localOpponentTitle;\r\n  const _setOpponentTitle = setOpponentTitle ?? setLocalOpponentTitle;\r\n  const _opponentFirst = opponentFirst ?? localOpponentFirst;\r\n  const _setOpponentFirst = setOpponentFirst ?? setLocalOpponentFirst;\r\n  const _opponentLast = opponentLast ?? localOpponentLast;\r\n  const _setOpponentLast = setOpponentLast ?? setLocalOpponentLast;\r\n  const _opponentEmail = opponentEmail ?? localOpponentEmail;\r\n  const _setOpponentEmail = setOpponentEmail ?? setLocalOpponentEmail;\r\n  const _opponentPhone = opponentPhone ?? localOpponentPhone;\r\n  const _setOpponentPhone = setOpponentPhone ?? setLocalOpponentPhone;\r\n  const _opponentHouseNumber = opponentHouseNumber ?? localOpponentHouseNumber;\r\n  const _setOpponentHouseNumber = setOpponentHouseNumber ?? setLocalOpponentHouseNumber;\r\n  const _opponentStreet = opponentStreet ?? localOpponentStreet;\r\n  const _setOpponentStreet = setOpponentStreet ?? setLocalOpponentStreet;\r\n  const _opponentCity = opponentCity ?? localOpponentCity;\r\n  const _setOpponentCity = setOpponentCity ?? setLocalOpponentCity;\r\n  const _opponentCounty = opponentCounty ?? localOpponentCounty;\r\n  const _setOpponentCounty = setOpponentCounty ?? setLocalOpponentCounty;\r\n  const _opponentPostcode = opponentPostcode ?? localOpponentPostcode;\r\n  const _setOpponentPostcode = setOpponentPostcode ?? setLocalOpponentPostcode;\r\n  const _opponentCountry = opponentCountry ?? localOpponentCountry;\r\n  const _setOpponentCountry = setOpponentCountry ?? setLocalOpponentCountry;\r\n  const _opponentHasCompany = opponentHasCompany ?? localOpponentHasCompany;\r\n  const _setOpponentHasCompany = setOpponentHasCompany ?? setLocalOpponentHasCompany;\r\n  const _opponentCompanyName = opponentCompanyName ?? localOpponentCompanyName;\r\n  const _setOpponentCompanyName = setOpponentCompanyName ?? setLocalOpponentCompanyName;\r\n  const _opponentCompanyNumber = opponentCompanyNumber ?? localOpponentCompanyNumber;\r\n  const _setOpponentCompanyNumber = setOpponentCompanyNumber ?? setLocalOpponentCompanyNumber;\r\n  const _opponentCompanyHouseNumber = localOpponentCompanyHouseNumber;\r\n  const _setOpponentCompanyHouseNumber = setLocalOpponentCompanyHouseNumber;\r\n  const _opponentCompanyStreet = localOpponentCompanyStreet;\r\n  const _setOpponentCompanyStreet = setLocalOpponentCompanyStreet;\r\n  const _opponentCompanyCity = localOpponentCompanyCity;\r\n  const _setOpponentCompanyCity = setLocalOpponentCompanyCity;\r\n  const _opponentCompanyCounty = localOpponentCompanyCounty;\r\n  const _setOpponentCompanyCounty = setLocalOpponentCompanyCounty;\r\n  const _opponentCompanyPostcode = localOpponentCompanyPostcode;\r\n  const _setOpponentCompanyPostcode = setLocalOpponentCompanyPostcode;\r\n  const _opponentCompanyCountry = localOpponentCompanyCountry;\r\n  const _setOpponentCompanyCountry = setLocalOpponentCompanyCountry;\r\n  const _solicitorTitle = solicitorTitle ?? localSolicitorTitle;\r\n  const _setSolicitorTitle = setSolicitorTitle ?? setLocalSolicitorTitle;\r\n  const _solicitorFirst = solicitorFirst ?? localSolicitorFirst;\r\n  const _setSolicitorFirst = setSolicitorFirst ?? setLocalSolicitorFirst;\r\n  const _solicitorLast = solicitorLast ?? localSolicitorLast;\r\n  const _setSolicitorLast = setSolicitorLast ?? setLocalSolicitorLast;\r\n  const _solicitorPhone = solicitorPhone ?? localSolicitorPhone;\r\n  const _setSolicitorPhone = setSolicitorPhone ?? setLocalSolicitorPhone;\r\n  const _solicitorHouseNumber = solicitorHouseNumber ?? localSolicitorHouseNumber;\r\n  const _setSolicitorHouseNumber = setSolicitorHouseNumber ?? setLocalSolicitorHouseNumber;\r\n  const _solicitorStreet = solicitorStreet ?? localSolicitorStreet;\r\n  const _setSolicitorStreet = setSolicitorStreet ?? setLocalSolicitorStreet;\r\n  const _solicitorCity = solicitorCity ?? localSolicitorCity;\r\n  const _setSolicitorCity = setSolicitorCity ?? setLocalSolicitorCity;\r\n  const _solicitorCounty = solicitorCounty ?? localSolicitorCounty;\r\n  const _setSolicitorCounty = setSolicitorCounty ?? setLocalSolicitorCounty;\r\n  const _solicitorPostcode = solicitorPostcode ?? localSolicitorPostcode;\r\n  const _setSolicitorPostcode = setSolicitorPostcode ?? setLocalSolicitorPostcode;\r\n  const _solicitorCountry = solicitorCountry ?? localSolicitorCountry;\r\n  const _setSolicitorCountry = setSolicitorCountry ?? setLocalSolicitorCountry;\r\n  const _solicitorCompanyNumber = solicitorCompanyNumber ?? localSolicitorCompanyNumber;\r\n  const _setSolicitorCompanyNumber = setSolicitorCompanyNumber ?? setLocalSolicitorCompanyNumber;\r\n  const _opponentSolicitorEmail = opponentSolicitorEmail ?? localOpponentSolicitorEmail;\r\n  const _setOpponentSolicitorEmail = setOpponentSolicitorEmail ?? setLocalOpponentSolicitorEmail;\r\n\r\n  const { isDarkMode } = useTheme();\r\n  // Modern chip-like styles for selector checkboxes\r\n  const checkboxChipStyles: ICheckboxStyles = React.useMemo(() => {\r\n    const lightGrad = \"linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)\";\r\n    const darkGrad = \"linear-gradient(135deg, #1F2937 0%, #111827 100%)\";\r\n  const accent = colours.highlight; // project blue (#3690CE)\r\n    const baseBorder = isDarkMode ? \"#334155\" : \"#e3e8ef\";\r\n    const shadow = isDarkMode ? \"0 4px 6px rgba(0, 0, 0, 0.3)\" : \"0 4px 6px rgba(0, 0, 0, 0.07)\";\r\n    const hoverShadow = isDarkMode ? \"0 6px 10px rgba(0, 0, 0, 0.35)\" : \"0 6px 12px rgba(0, 0, 0, 0.12)\";\r\n    const textColor = isDarkMode ? \"#E5E7EB\" : \"#061733\";\r\n    return {\r\n      root: {\r\n        selectors: {\r\n          \".ms-Checkbox-label\": {\r\n            background: \"transparent\",\r\n            border: \"none\",\r\n            borderRadius: 0,\r\n            padding: 0,\r\n            display: \"inline-flex\",\r\n            alignItems: \"center\",\r\n            gap: 8,\r\n            boxShadow: \"none\",\r\n            transition: \"color 120ms ease\"\r\n          },\r\n          \":hover .ms-Checkbox-label\": {},\r\n          \"&:hover .ms-Checkbox-checkbox\": {\r\n            borderColor: accent,\r\n            background: isDarkMode ? \"#0B1220\" : \"#FFFFFF\"\r\n          },\r\n          \"&:hover .ms-Checkbox-text\": {\r\n            color: textColor\r\n          },\r\n          \"&.is-checked .ms-Checkbox-label\": {},\r\n          \"&.is-checked:hover .ms-Checkbox-label\": {},\r\n          \"&.is-checked .ms-Checkbox-checkbox\": {\r\n            background: accent,\r\n            borderColor: accent\r\n          },\r\n          \"&.is-checked:hover .ms-Checkbox-checkbox\": {\r\n            background: accent,\r\n            borderColor: accent\r\n          },\r\n          \"&.is-checked .ms-Checkbox-checkmark\": {\r\n            color: \"#ffffff\"\r\n          },\r\n          \"&.is-checked:hover .ms-Checkbox-checkmark\": {\r\n            color: \"#ffffff\"\r\n          },\r\n          \"&.is-checked .ms-Checkbox-text\": {\r\n            color: isDarkMode ? \"#E6ECFF\" : accent\r\n          },\r\n          \"&.is-checked:hover .ms-Checkbox-text\": {\r\n            color: isDarkMode ? \"#E6ECFF\" : accent\r\n          },\r\n          \":focus-within .ms-Checkbox-label\": {}\r\n        }\r\n      },\r\n      checkbox: {\r\n        borderRadius: 3,\r\n        borderColor: baseBorder,\r\n        backgroundColor: isDarkMode ? \"#0B1220\" : \"#FFFFFF\"\r\n      },\r\n      checkmark: {\r\n        color: isDarkMode ? \"#D1D5DB\" : \"#1F2937\"\r\n      },\r\n      text: {\r\n        color: textColor,\r\n        fontWeight: 500\r\n      }\r\n    };\r\n  }, [isDarkMode]);\r\n\r\n  // Unified pill container styling (encapsulates header, hint, and fields)\r\n  const chipContainer = (checked: boolean): React.CSSProperties => {\r\n    const lightGrad = \"linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)\";\r\n    const darkGrad = \"linear-gradient(135deg, #1F2937 0%, #111827 100%)\";\r\n    const accent = colours.highlight;\r\n    const baseBorder = isDarkMode ? \"#334155\" : \"#e3e8ef\";\r\n    const shadow = isDarkMode ? \"0 4px 6px rgba(0, 0, 0, 0.3)\" : \"0 4px 6px rgba(0, 0, 0, 0.07)\";\r\n    return {\r\n      background: checked\r\n        ? (isDarkMode ? `linear-gradient(135deg, ${accent}26 0%, ${accent}1f 100%)` : \"rgba(54, 144, 206, 0.10)\")\r\n        : (isDarkMode ? darkGrad : lightGrad),\r\n      border: `1px solid ${checked ? (isDarkMode ? `${accent}66` : \"#c9dfef\") : baseBorder}`,\r\n      borderRadius: 8,\r\n      boxShadow: shadow,\r\n      padding: \"8px 10px\",\r\n      margin: \"4px 0 8px 0\",\r\n      transition: \"background 120ms ease, border-color 120ms ease, box-shadow 120ms ease\"\r\n    };\r\n  };\r\n\r\n  // Section visibility selection (persisted)\r\n  type SectionKey = 'name' | 'contact' | 'address' | 'company';\r\n  type PartyKey = 'opponent' | 'solicitor';\r\n  const [visibleSections, setVisibleSections] = useDraftedState<{\r\n    opponent: Record<SectionKey, boolean>;\r\n    solicitor: Record<SectionKey, boolean>;\r\n  }>('visibleSections', {\r\n    opponent: { name: false, contact: false, address: false, company: false },\r\n    solicitor: { name: false, contact: false, address: false, company: false }\r\n  });\r\n  const toggleSection = (party: PartyKey, section: SectionKey) => {\r\n    setVisibleSections(prev => ({\r\n      ...prev,\r\n      [party]: { ...prev[party], [section]: !prev[party][section] }\r\n    }));\r\n  };\r\n\r\n  // On load, screen prefilled data against static indicators/sheet and mark placeholders\r\n  React.useEffect(() => {\r\n    try {\r\n      let sheet: OpponentDataSheet = loadDataSheetFromStorage();\r\n      const entries: Array<[string, string]> = [\r\n        ['opponentTitle', _opponentTitle],\r\n        ['opponentFirst', _opponentFirst],\r\n        ['opponentLast', _opponentLast],\r\n        ['opponentEmail', _opponentEmail],\r\n        ['opponentPhone', _opponentPhone],\r\n        ['opponentHouseNumber', _opponentHouseNumber],\r\n        ['opponentStreet', _opponentStreet],\r\n        ['opponentCity', _opponentCity],\r\n        ['opponentCounty', _opponentCounty],\r\n        ['opponentPostcode', _opponentPostcode],\r\n        ['opponentCountry', _opponentCountry],\r\n        ['opponentCompanyName', _opponentCompanyName],\r\n        ['opponentCompanyNumber', _opponentCompanyNumber],\r\n  ['opponentCompanyHouseNumber', _opponentCompanyHouseNumber],\r\n  ['opponentCompanyStreet', _opponentCompanyStreet],\r\n  ['opponentCompanyCity', _opponentCompanyCity],\r\n  ['opponentCompanyCounty', _opponentCompanyCounty],\r\n  ['opponentCompanyPostcode', _opponentCompanyPostcode],\r\n  ['opponentCompanyCountry', _opponentCompanyCountry],\r\n        ['opponentSolicitorCompany', opponentSolicitorCompany],\r\n        ['solicitorCompanyNumber', _solicitorCompanyNumber],\r\n        ['solicitorTitle', _solicitorTitle],\r\n        ['solicitorFirst', _solicitorFirst],\r\n        ['solicitorLast', _solicitorLast],\r\n        ['opponentSolicitorEmail', _opponentSolicitorEmail],\r\n        ['solicitorPhone', _solicitorPhone],\r\n        ['solicitorHouseNumber', _solicitorHouseNumber],\r\n        ['solicitorStreet', _solicitorStreet],\r\n        ['solicitorCity', _solicitorCity],\r\n        ['solicitorCounty', _solicitorCounty],\r\n        ['solicitorPostcode', _solicitorPostcode],\r\n        ['solicitorCountry', _solicitorCountry]\r\n      ];\r\n\r\n      const newFlags: { [k: string]: boolean } = {};\r\n      let changed = false;\r\n      entries.forEach(([key, val]) => {\r\n        const v = (val ?? '').trim();\r\n        if (!v) return;\r\n        const existing = sheet.fields?.[key];\r\n        // Treat known dummyData values as placeholders when reloading\r\n        const dummyMatch = (dummyData as Record<string, unknown>)[key] === val;\r\n        const isPh = existing ? existing.isPlaceholder : (isPlaceholderValue(v) || !!dummyMatch);\r\n        newFlags[key] = isPh;\r\n        const nextSheet = isPh\r\n          ? markFieldAsPlaceholder(sheet, key, v)\r\n          : markFieldAsRealData(sheet, key, v);\r\n        if (nextSheet !== sheet) {\r\n          sheet = nextSheet;\r\n          changed = true;\r\n        }\r\n      });\r\n      if (Object.keys(newFlags).length) {\r\n        setPlaceholderFilledFields(prev => ({ ...prev, ...newFlags }));\r\n      }\r\n      if (changed) saveDataSheetToStorage(sheet);\r\n    } catch {}\r\n    // We only want to screen once on load\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // Add this function inside the component\r\n  const fillDummyData = () => {\r\n    if (!opponentType) {\r\n      setOpponentType('Company');\r\n    }\r\n\r\n    _setOpponentTitle(dummyData.opponentTitle);\r\n    _setOpponentFirst(dummyData.opponentFirst);\r\n    _setOpponentLast(dummyData.opponentLast);\r\n    _setOpponentEmail(dummyData.opponentEmail);\r\n    _setOpponentPhone(dummyData.opponentPhone);\r\n    _setOpponentHouseNumber(dummyData.opponentHouseNumber);\r\n    _setOpponentStreet(dummyData.opponentStreet);\r\n    _setOpponentCity(dummyData.opponentCity);\r\n    _setOpponentCounty(dummyData.opponentCounty);\r\n    _setOpponentPostcode(dummyData.opponentPostcode);\r\n    _setOpponentCountry(dummyData.opponentCountry);\r\n    _setOpponentHasCompany(dummyData.opponentHasCompany);\r\n    _setOpponentCompanyName(dummyData.opponentCompanyName);\r\n    _setOpponentCompanyNumber(dummyData.opponentCompanyNumber);\r\n  // Use opponent address dummy values for company address as defaults\r\n  _setOpponentCompanyHouseNumber(dummyData.opponentHouseNumber);\r\n  _setOpponentCompanyStreet(dummyData.opponentStreet);\r\n  _setOpponentCompanyCity(dummyData.opponentCity);\r\n  _setOpponentCompanyCounty(dummyData.opponentCounty);\r\n  _setOpponentCompanyPostcode(dummyData.opponentPostcode);\r\n  _setOpponentCompanyCountry(dummyData.opponentCountry);\r\n\r\n    setOpponentSolicitorCompany(dummyData.opponentSolicitorCompany);\r\n    _setSolicitorCompanyNumber(dummyData.solicitorCompanyNumber);\r\n    _setSolicitorTitle(dummyData.solicitorTitle);\r\n    _setSolicitorFirst(dummyData.solicitorFirst);\r\n    _setSolicitorLast(dummyData.solicitorLast);\r\n    _setOpponentSolicitorEmail(dummyData.opponentSolicitorEmail);\r\n    _setSolicitorPhone(dummyData.solicitorPhone);\r\n    _setSolicitorHouseNumber(dummyData.solicitorHouseNumber);\r\n    _setSolicitorStreet(dummyData.solicitorStreet);\r\n    _setSolicitorCity(dummyData.solicitorCity);\r\n    _setSolicitorCounty(dummyData.solicitorCounty);\r\n    _setSolicitorPostcode(dummyData.solicitorPostcode);\r\n    _setSolicitorCountry(dummyData.solicitorCountry);\r\n\r\n    // Mark these fields as placeholder-filled (but NOT as touched by user)\r\n    setPlaceholderFilledFields(prev => ({\r\n      ...prev,\r\n      opponentTitle: true,\r\n      opponentFirst: true,\r\n      opponentLast: true,\r\n      opponentEmail: true,\r\n      opponentPhone: true,\r\n      opponentHouseNumber: true,\r\n      opponentStreet: true,\r\n      opponentCity: true,\r\n      opponentCounty: true,\r\n      opponentPostcode: true,\r\n      opponentCountry: true,\r\n      opponentCompanyName: true,\r\n      opponentCompanyNumber: true,\r\n  opponentCompanyHouseNumber: true,\r\n  opponentCompanyStreet: true,\r\n  opponentCompanyCity: true,\r\n  opponentCompanyCounty: true,\r\n  opponentCompanyPostcode: true,\r\n  opponentCompanyCountry: true,\r\n      opponentSolicitorCompany: true,\r\n      solicitorCompanyNumber: true,\r\n      solicitorTitle: true,\r\n      solicitorFirst: true,\r\n      solicitorLast: true,\r\n      opponentSolicitorEmail: true,\r\n      solicitorPhone: true,\r\n      solicitorHouseNumber: true,\r\n      solicitorStreet: true,\r\n      solicitorCity: true,\r\n      solicitorCounty: true,\r\n      solicitorPostcode: true,\r\n      solicitorCountry: true,\r\n    }));\r\n  };\r\n\r\n  const copyCompanyAddressToPersonal = () => {\r\n    _setOpponentHouseNumber(_opponentCompanyHouseNumber);\r\n    _setOpponentStreet(_opponentCompanyStreet);\r\n    _setOpponentCity(_opponentCompanyCity);\r\n    _setOpponentCounty(_opponentCompanyCounty);\r\n    _setOpponentPostcode(_opponentCompanyPostcode);\r\n    _setOpponentCountry(_opponentCompanyCountry);\r\n    setTouchedFields(prev => ({\r\n      ...prev,\r\n      opponentHouseNumber: true,\r\n      opponentStreet: true,\r\n      opponentCity: true,\r\n      opponentCounty: true,\r\n      opponentPostcode: true,\r\n      opponentCountry: true,\r\n    }));\r\n    // Ensure style updates from placeholder grey to answered blue\r\n    setPlaceholderFilledFields(prev => ({\r\n      ...prev,\r\n      opponentHouseNumber: false,\r\n      opponentStreet: false,\r\n      opponentCity: false,\r\n      opponentCounty: false,\r\n      opponentPostcode: false,\r\n      opponentCountry: false,\r\n    }));\r\n  };\r\n\r\n  // Persisted state for preview and opponent choices\r\n  const [showSummary, setShowSummary] = useDraftedState<boolean>('showSummary', false);\r\n  // Toggle: does user want to enter opponent details now?\r\n  const [enterOpponentNow, setEnterOpponentNow] = useDraftedState<null | boolean>('enterOpponentNow', null);\r\n  // Add new state for opponent type (Individual or Company)\r\n  const [opponentType, setOpponentType] = useDraftedState<string>('opponentType', \"\");\r\n  // removed address paste helpers (opponent & solicitor) per spec\r\n\r\n  // Skip details and show summary (user can return to edit later)\r\n  const skipAndShowSummary = () => {\r\n    setShowSummary(true);\r\n  };\r\n\r\n  // Reset to editable mode\r\n  const handleEdit = () => {\r\n    setShowSummary(false);\r\n  };\r\n\r\n  // Helper to render a summary row (clean, compact)\r\n  const SummaryRow = ({ label, value }: { label: string; value: React.ReactNode }) => (\r\n    <div style={{\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      marginBottom: 2,\r\n      fontSize: 14,\r\n      color: \"#2d3748\"\r\n    }}>\r\n      <span style={{ minWidth: 110, color: \"#6b7280\", fontWeight: 400 }}>{label}</span>\r\n      <span style={{ color: value ? \"#222\" : \"#b0b7be\", marginLeft: 8 }}>{value || <span>—</span>}</span>\r\n    </div>\r\n  );\r\n\r\n  // Helper to render address summary (compact)\r\n  const AddressSummary = (data: any) => (\r\n    <div>\r\n      <SummaryRow label=\"House/Building or Name\" value={data.houseNumber} />\r\n      <SummaryRow label=\"Street\" value={data.street} />\r\n      <SummaryRow label=\"City/Town\" value={data.city} />\r\n      <SummaryRow label=\"County\" value={data.county} />\r\n      <SummaryRow label=\"Post Code\" value={data.postcode} />\r\n      <SummaryRow label=\"Country\" value={data.country} />\r\n    </div>\r\n  );\r\n\r\n  // Clean summary group with icon, label, and card background\r\n  const SummaryGroup = ({\r\n    iconName,\r\n    label,\r\n    children,\r\n    style = {},\r\n    forceWhite = false,\r\n  }: {\r\n    iconName: string;\r\n    label: string;\r\n    children: React.ReactNode;\r\n    style?: React.CSSProperties;\r\n    forceWhite?: boolean;\r\n  }) => (\r\n    <div\r\n      style={{\r\n        background: forceWhite ? \"#fff\" : \"linear-gradient(90deg, #f4f7fb 80%, #eaf1fa 100%)\",\r\n        border: forceWhite ? \"none\" : \"1.5px solid #b6c6e3\",\r\n        borderRadius: 0,\r\n        boxShadow: forceWhite ? \"none\" : \"0 2px 8px rgba(54, 144, 206, 0.07)\",\r\n        padding: \"16px 18px 12px 18px\",\r\n        marginBottom: 14,\r\n        marginTop: 4,\r\n        transition: \"box-shadow 0.2s, border-color 0.2s\",\r\n        ...style\r\n      }}\r\n    >\r\n      <div style={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        marginBottom: 10,\r\n        fontSize: 15,\r\n        color: \"#3b5b7e\"\r\n      }}>\r\n        <FontIcon iconName={iconName} style={{ fontSize: 18, marginRight: 10, color: \"#6b8bbd\" }} />\r\n        <span style={{ fontWeight: 600, letterSpacing: 0.2 }}>{label}</span>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: \"repeat(auto-fit, minmax(220px, 1fr))\",\r\n          gap: \"0 18px\",\r\n        }}\r\n      >\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // Add local state for focus/blur/active for each field group\r\n  const [activeField, setActiveField] = React.useState<string | null>(null);\r\n  const [touchedFields, setTouchedFields] = useDraftedState<{ [key: string]: boolean }>('touchedFields', {});\r\n  const [placeholderFilledFields, setPlaceholderFilledFields] = useDraftedState<{ [key: string]: boolean }>('placeholderFilledFields', {});\r\n\r\n  // Helper to get field style\r\n  function getFieldStyle(fieldKey: string, value: string, isDropdown = false) {\r\n    const isActive = activeField === fieldKey;\r\n    const isTouched = touchedFields[fieldKey];\r\n    const isPlaceholderFilled = placeholderFilledFields[fieldKey];\r\n    \r\n    if (isActive) return pressedFieldStyle;\r\n    if (isPlaceholderFilled && value) return placeholderFieldStyle;\r\n    if (isTouched && value) return answeredFieldStyle;\r\n    return unansweredFieldStyle;\r\n  }\r\n\r\n  // Helper to handle field focus - clears placeholder status when user starts typing\r\n  const handleFieldFocus = (fieldKey: string) => {\r\n    setActiveField(fieldKey);\r\n    // Clear placeholder status when user focuses on field\r\n    if (placeholderFilledFields[fieldKey]) {\r\n      setPlaceholderFilledFields(prev => ({ ...prev, [fieldKey]: false }));\r\n    }\r\n  };\r\n\r\n  // Helper to handle field blur - marks field as touched\r\n  const handleFieldBlur = (fieldKey: string) => {\r\n    setActiveField(null);\r\n    setTouchedFields((prev) => ({ ...prev, [fieldKey]: true }));\r\n  };\r\n\r\n  // Remove blue border on focus for all intake fields using inline style override\r\n  // (for TextField, Dropdown, etc.)\r\n  // Add this style to all fieldGroup and dropdown/title style objects:\r\n  const noFocusOutline = {\r\n    outline: \"none\",\r\n    boxShadow: \"none\",\r\n    borderColor: \"transparent\"\r\n  };\r\n\r\n  // Prefill default countries to reduce clicks; show as answered (blue)\r\n  React.useEffect(() => {\r\n    const UK = 'United Kingdom';\r\n    const updates: Record<string, string> = {};\r\n    if (!_opponentCountry) {\r\n      _setOpponentCountry(UK);\r\n      updates.opponentCountry = UK;\r\n    }\r\n    if (!_opponentCompanyCountry) {\r\n      _setOpponentCompanyCountry(UK);\r\n      updates.opponentCompanyCountry = UK;\r\n    }\r\n    if (!_solicitorCountry) {\r\n      _setSolicitorCountry(UK);\r\n      updates.solicitorCountry = UK;\r\n    }\r\n    if (Object.keys(updates).length) {\r\n      // Mark as answered (blue): clear placeholder flags and set touched\r\n      setPlaceholderFilledFields(prev => ({\r\n        ...prev,\r\n        ...Object.fromEntries(Object.keys(updates).map(k => [k, false]))\r\n      }));\r\n      setTouchedFields(prev => ({\r\n        ...prev,\r\n        ...Object.fromEntries(Object.keys(updates).map(k => [k, true]))\r\n      }));\r\n      try {\r\n        let sheet = loadDataSheetFromStorage();\r\n        Object.entries(updates).forEach(([k, v]) => {\r\n          sheet = markFieldAsRealData(sheet, k, v);\r\n        });\r\n        saveDataSheetToStorage(sheet);\r\n      } catch {}\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{\r\n      background: 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n      border: '1px solid #E2E8F0',\r\n      borderRadius: 12,\r\n      padding: 20,\r\n      boxShadow: '0 2px 4px rgba(0, 0, 0, 0.04)',\r\n      boxSizing: 'border-box'\r\n    }}>\r\n      <div style={{ display: 'flex', flexDirection: 'column', gap: 20 }}>\r\n        {/* Conflict of Interest Section */}\r\n        <div>\r\n          <div style={{ \r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            gap: 8, \r\n            marginBottom: 12 \r\n          }}>\r\n            <i className=\"ms-Icon ms-Icon--ShieldAlert\" style={{ \r\n              fontSize: 16, \r\n              color: '#3690CE' \r\n            }} />\r\n            <span style={{ \r\n              fontSize: 16, \r\n              fontWeight: 600, \r\n              color: '#0F172A' \r\n            }}>\r\n              Confirm No Conflict of Interest\r\n            </span>\r\n          </div>\r\n          <ModernMultiSelect\r\n            label=\"\"\r\n            options={[\r\n              { key: 'true', text: 'Confirmed - No Conflict' },\r\n              { key: 'false', text: 'Not Confirmed' }\r\n            ]}\r\n            selectedValue={noConflict ? 'true' : 'false'}\r\n            onSelectionChange={(value) => setNoConflict(value === 'true')}\r\n            variant=\"binary\"\r\n          />\r\n        </div>\r\n\r\n        {/* Only show opponent/solicitor details if noConflict is confirmed */}\r\n        {noConflict && (\r\n          <>\r\n            {/* Opponent Type Selection */}\r\n            <div>\r\n              <div style={{ \r\n                display: 'flex', \r\n                alignItems: 'center', \r\n                gap: 8, \r\n                marginBottom: 12 \r\n              }}>\r\n                <i className=\"ms-Icon ms-Icon--People\" style={{ \r\n                  fontSize: 16, \r\n                  color: '#3690CE' \r\n                }} />\r\n                <span style={{ \r\n                  fontSize: 16, \r\n                  fontWeight: 600, \r\n                  color: '#0F172A' \r\n                }}>\r\n                  What type of opponent is this matter against?\r\n                </span>\r\n              </div>\r\n              \r\n              <div style={{ \r\n                display: 'grid', \r\n                gridTemplateColumns: 'repeat(auto-fit, minmax(140px, 1fr))', \r\n                gap: '12px'\r\n              }}>\r\n                {[ \r\n                  { type: 'Individual', icon: 'Contact' },\r\n                  { type: 'Company', icon: 'CityNext' }\r\n                ].map(({ type, icon }) => {\r\n                  const isActive = opponentType === type;\r\n                  return (\r\n                    <button\r\n                      key={type}\r\n                      className={`client-type-icon-btn${isActive ? ' active' : ''}`}\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        setOpponentType(type);\r\n                        setShowSummary(false);\r\n                      }}\r\n                      style={{\r\n                        position: 'relative',\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        padding: '12px 14px',\r\n                        border: `1px solid ${isActive ? '#3690CE' : '#E2E8F0'}`,\r\n                        borderRadius: '8px',\r\n                        background: isActive \r\n                          ? 'linear-gradient(135deg, #3690CE15 0%, #3690CE08 100%)' \r\n                          : 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n                        cursor: 'pointer',\r\n                        transition: 'all 0.2s cubic-bezier(0.4, 0, 0.2, 1)',\r\n                        minHeight: '70px',\r\n                        boxShadow: isActive \r\n                          ? '0 3px 10px rgba(54, 144, 206, 0.15), 0 1px 2px rgba(0,0,0,0.03)' \r\n                          : '0 1px 3px rgba(0,0,0,0.03)',\r\n                        outline: 'none',\r\n                        transform: isActive ? 'translateY(-2px)' : 'translateY(0)',\r\n                      }}\r\n                      onMouseEnter={(e) => {\r\n                        if (!isActive) {\r\n                          e.currentTarget.style.background = 'linear-gradient(135deg, #F1F5F9 0%, #E2E8F0 100%)';\r\n                          e.currentTarget.style.borderColor = '#3690CE';\r\n                          e.currentTarget.style.transform = 'translateY(-1px)';\r\n                          e.currentTarget.style.boxShadow = '0 3px 8px rgba(0,0,0,0.06)';\r\n                        }\r\n                      }}\r\n                      onMouseLeave={(e) => {\r\n                        if (!isActive) {\r\n                          e.currentTarget.style.background = 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)';\r\n                          e.currentTarget.style.borderColor = '#E2E8F0';\r\n                          e.currentTarget.style.transform = 'translateY(0)';\r\n                          e.currentTarget.style.boxShadow = '0 1px 3px rgba(0,0,0,0.03)';\r\n                        }\r\n                      }}\r\n                    >\r\n                      <div style={{\r\n                        fontSize: '26px',\r\n                        color: isActive ? '#3690CE' : '#64748B',\r\n                        marginBottom: '8px',\r\n                        transition: 'all 0.2s ease',\r\n                      }}>\r\n                        <i className={`ms-Icon ms-Icon--${icon}`} />\r\n                      </div>\r\n                      <span style={{\r\n                        fontSize: '13px',\r\n                        fontWeight: isActive ? 600 : 500,\r\n                        color: isActive ? '#3690CE' : '#0F172A',\r\n                        textAlign: 'center',\r\n                        lineHeight: 1.3,\r\n                        transition: 'all 0.2s ease'\r\n                      }}>\r\n                        {type}\r\n                      </span>\r\n                    </button>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n            <style>{`\r\n                .opponent-type-selection .client-type-icon-btn .client-type-label {\r\n                    pointer-events: none;\r\n                }\r\n                .opponent-type-selection .client-type-icon-btn:not(.active):not(.pressed):not(:active):hover {\r\n                    background: #e3f0fc !important; /* subtle blue hover */\r\n                    border-color: #3690CE !important;\r\n                }\r\n                .opponent-type-selection .client-type-icon-btn:not(.active):not(.pressed):not(:active):hover .client-type-icon,\r\n                .opponent-type-selection .client-type-icon-btn:not(.active):not(.pressed):not(:active):hover .client-type-icon i {\r\n                    color: #3690CE !important;\r\n                }\r\n                .opponent-type-selection .client-type-icon-btn:not(.active):not(.pressed):not(:active):hover .client-type-label {\r\n                    color: #3690CE !important;\r\n                }\r\n                .opponent-type-selection .client-type-icon-btn.pressed,\r\n                .opponent-type-selection .client-type-icon-btn:active {\r\n                    background: #b3d3f7 !important; /* deeper blue for press */\r\n                    border-color: #1565c0 !important;\r\n                }\r\n                /* Animation for smooth transitions */\r\n                .opponent-type-selection .client-type-icon-btn {\r\n                    transition: all 0.2s ease-out;\r\n                }\r\n                .opponent-type-selection .client-type-icon-btn.active .client-type-icon {\r\n                    opacity: 0 !important;\r\n                }\r\n                .opponent-type-selection .client-type-icon-btn.active .client-type-label {\r\n                    opacity: 1 !important;\r\n                    transform: translateY(0) !important;\r\n                }\r\n                \r\n                /* Animation keyframes for opponent details entrance */\r\n                @keyframes slideInFromTop {\r\n                    from {\r\n                        opacity: 0;\r\n                        transform: translateY(20px);\r\n                    }\r\n                    to {\r\n                        opacity: 1;\r\n                        transform: translateY(0);\r\n                    }\r\n                }\r\n                \r\n                @keyframes cascadeSlideIn {\r\n                    from {\r\n                        opacity: 0;\r\n                        transform: translateY(10px);\r\n                    }\r\n                    to {\r\n                        opacity: 1;\r\n                        transform: translateY(0);\r\n                    }\r\n                }\r\n                \r\n                /* Animated placeholders */\r\n                @keyframes shimmer {\r\n                    0% {\r\n                        background-position: -200px 0;\r\n                    }\r\n                    100% {\r\n                        background-position: calc(200px + 100%) 0;\r\n                    }\r\n                }\r\n                \r\n                .placeholder-shimmer {\r\n                    background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);\r\n                    background-size: 200px 100%;\r\n                    animation: shimmer 1.5s infinite;\r\n                }\r\n                \r\n                /* Shimmer pass animation for placeholder banner */\r\n                @keyframes shimmerPass {\r\n                    0% {\r\n                        left: -100%;\r\n                        opacity: 0;\r\n                    }\r\n                    50% {\r\n                        opacity: 1;\r\n                    }\r\n                    100% {\r\n                        left: 100%;\r\n                        opacity: 0;\r\n                    }\r\n                }\r\n                \r\n                /* Separator slide in animation */\r\n                @keyframes separatorSlideIn {\r\n                    0% {\r\n                        opacity: 0;\r\n                        transform: scaleX(0);\r\n                    }\r\n                    100% {\r\n                        opacity: 1;\r\n                        transform: scaleX(1);\r\n                    }\r\n                }\r\n                \r\n                /* Question banner slide in animation */\r\n                @keyframes questionSlideIn {\r\n                    0% {\r\n                        opacity: 0;\r\n                        transform: translateY(15px);\r\n                    }\r\n                    100% {\r\n                        opacity: 1;\r\n                        transform: translateY(0);\r\n                    }\r\n                }\r\n                \r\n                /* Button row slide in animation */\r\n                @keyframes buttonRowSlideIn {\r\n                    0% {\r\n                        opacity: 0;\r\n                        transform: translateY(20px);\r\n                    }\r\n                    100% {\r\n                        opacity: 1;\r\n                        transform: translateY(0);\r\n                    }\r\n                }\r\n            `}</style>\r\n          \r\n          {/* Only show option to delay details entry if opponent type is selected */}\r\n          {opponentType && (\r\n            <div style={{ \r\n              display: \"flex\", \r\n              flexDirection: \"column\", \r\n              alignItems: \"stretch\", \r\n              width: \"100%\",\r\n              margin: \"0 0 16px 0\",\r\n              animation: 'slideInFromTop 0.4s cubic-bezier(0.4, 0, 0.2, 1) forwards',\r\n              animationDelay: '0ms',\r\n              opacity: 0,\r\n              transform: 'translateY(20px)'\r\n            }}>\r\n              <ModernMultiSelect\r\n                label=\"Opponent Details\"\r\n                options={[\r\n                  { key: 'true', text: 'I have Opponent Details to enter' },\r\n                  { key: 'false', text: \"I'll enter opponent details later\" }\r\n                ]}\r\n                selectedValue={enterOpponentNow === null ? null : (enterOpponentNow ? 'true' : 'false')}\r\n                onSelectionChange={(value) => {\r\n                  const willEnter = value === 'true';\r\n                  setEnterOpponentNow(willEnter);\r\n                  if (willEnter) {\r\n                    setShowSummary(false);\r\n                    // Reset to folded state (all sections unchecked) when starting entry\r\n                    setVisibleSections({\r\n                      opponent: { name: false, contact: false, address: false, company: false },\r\n                      solicitor: { name: false, contact: false, address: false, company: false }\r\n                    });\r\n                  } else {\r\n                    setShowSummary(true);\r\n                    fillDummyData();\r\n                  }\r\n                  if (setOpponentChoiceMade) setOpponentChoiceMade(true);\r\n                }}\r\n                variant=\"binary\"\r\n              />\r\n            </div>\r\n          )}\r\n          \r\n          {/* Only show details if user wants to enter them now */}\r\n          {enterOpponentNow === true ? (\r\n            <div style={{\r\n              animation: 'cascadeSlideIn 0.4s cubic-bezier(0.4, 0, 0.2, 1) forwards',\r\n              animationDelay: '150ms',\r\n              opacity: 0,\r\n              transform: 'translateY(20px)'\r\n            }}>\r\n              {/* Integrated toggles now appear inline with each section header below */}\r\n              {/* Opponent Details Fields */}\r\n              <div style={containerStyle}>\r\n                <Stack tokens={{ childrenGap: 6 }}>\r\n                  {/* Section Header */}\r\n                  <div style={{ \r\n                    fontWeight: 600, \r\n                    fontSize: 15, \r\n                    marginBottom: 8, \r\n                    color: '#061733'\r\n                  }}>\r\n                    Opponent\r\n                  </div>\r\n                  {/* Company sublabel - shown first for Company opponent type */}\r\n                  <div style={chipContainer(visibleSections.opponent.company)}>\r\n                      <div style={{ display:'flex', alignItems:'center', gap: 10, justifyContent:'space-between', marginBottom: visibleSections.opponent.company ? 8 : 0 }}>\r\n                        <div style={{ display:'flex', alignItems:'center', gap:10, flex: '1 1 auto' }}>\r\n                          <Checkbox\r\n                            styles={checkboxChipStyles}\r\n                            label=\"Company\"\r\n                            boxSide=\"start\"\r\n                            checked={visibleSections.opponent.company}\r\n                            onChange={() => toggleSection('opponent','company')}\r\n                          />\r\n                          <span style={{ fontSize: 11, color: '#6b7280' }}>Company name, number and address</span>\r\n                        </div>\r\n                        <span className=\"ms-Icon ms-Icon--CityNext\" style={{ fontSize: 18, color: '#6b8bbd' }} />\r\n                      </div>\r\n                      {visibleSections.opponent.company && (\r\n                        <>\r\n                          <Stack horizontal tokens={{ childrenGap: 5 }} style={{ marginBottom: 6, width: \"100%\" }}>\r\n                            <TextField\r\n                              placeholder=\"Company Name\"\r\n                              value={_opponentCompanyName}\r\n                              onChange={(_, v) => _setOpponentCompanyName(v || \"\")}\r\n                              styles={{\r\n                                root: {\r\n                                  flex: 1,\r\n                                  minWidth: 180,\r\n                                  height: 38,\r\n                                  ...(touchedFields[\"opponentCompanyName\"] && _opponentCompanyName ? answeredFieldStyle : unansweredFieldStyle)\r\n                                },\r\n                                fieldGroup: {\r\n                                  borderRadius: 0,\r\n                                  height: 38,\r\n                                  background: \"transparent\",\r\n                                  border: \"none\"\r\n                                },\r\n                                field: {\r\n                                  color: \"#061733\",\r\n                                  background: \"transparent\"\r\n                                }\r\n                              }}\r\n                              onFocus={() => handleFieldFocus(\"opponentCompanyName\")}\r\n                              onBlur={() => {\r\n                                setActiveField(null);\r\n                                setTouchedFields((prev) => ({ ...prev, opponentCompanyName: true }));\r\n                              }}\r\n                            />\r\n                            <TextField\r\n                              placeholder=\"Company Number\"\r\n                              value={_opponentCompanyNumber}\r\n                              onChange={(_, v) => _setOpponentCompanyNumber(v || \"\")}\r\n                              onGetErrorMessage={() => getCompanyNumberErrorMessage(_opponentCompanyNumber, !!touchedFields[\"opponentCompanyNumber\"]) }\r\n                              styles={{\r\n                                root: {\r\n                                  flex: 1,\r\n                                  minWidth: 140,\r\n                                  height: 38,\r\n                                  ...(touchedFields[\"opponentCompanyNumber\"] && _opponentCompanyNumber ? answeredFieldStyle : unansweredFieldStyle)\r\n                                },\r\n                                fieldGroup: {\r\n                                  borderRadius: 0,\r\n                                  height: 38,\r\n                                  background: \"transparent\",\r\n                                  border: \"none\"\r\n                                },\r\n                                field: {\r\n                                  color: \"#061733\",\r\n                                  background: \"transparent\"\r\n                                }\r\n                              }}\r\n                              onFocus={() => handleFieldFocus(\"opponentCompanyNumber\")}\r\n                              onBlur={() => {\r\n                                setActiveField(null);\r\n                                setTouchedFields((prev) => ({ ...prev, opponentCompanyNumber: true }));\r\n                              }}\r\n                            />\r\n                          </Stack>\r\n                          {/* Company address grid */}\r\n                          <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(3, minmax(180px, 1fr))\", gap: 6, marginBottom: 0 }}>\r\n                            <TextField\r\n                              placeholder=\"House/Building Number or Name\"\r\n                              value={_opponentCompanyHouseNumber}\r\n                              onChange={(_, v) => _setOpponentCompanyHouseNumber(v || \"\")}\r\n                              styles={{\r\n                                root: {\r\n                                  minWidth: 80,\r\n                                  flex: 1,\r\n                                  height: 38,\r\n                                  ...getFieldStyle(\"opponentCompanyHouseNumber\", _opponentCompanyHouseNumber)\r\n                                },\r\n                                fieldGroup: {\r\n                                  borderRadius: 0,\r\n                                  height: 38,\r\n                                  background: \"transparent\",\r\n                                  border: \"none\",\r\n                                  ...noFocusOutline\r\n                                },\r\n                                field: {\r\n                                  color: \"#061733\",\r\n                                  background: \"transparent\"\r\n                                }\r\n                              }}\r\n                              onFocus={() => handleFieldFocus(\"opponentCompanyHouseNumber\")}\r\n                              onBlur={() => setTouchedFields(prev => ({ ...prev, opponentCompanyHouseNumber: true }))}\r\n                            />\r\n                            <TextField\r\n                              placeholder=\"Street\"\r\n                              value={_opponentCompanyStreet}\r\n                              onChange={(_, v) => _setOpponentCompanyStreet(v || \"\")}\r\n                              styles={{\r\n                                root: {\r\n                                  minWidth: 100,\r\n                                  flex: 1,\r\n                                  height: 38,\r\n                                  ...getFieldStyle(\"opponentCompanyStreet\", _opponentCompanyStreet)\r\n                                },\r\n                                fieldGroup: {\r\n                                  borderRadius: 0,\r\n                                  height: 38,\r\n                                  background: \"transparent\",\r\n                                  border: \"none\",\r\n                                  ...noFocusOutline\r\n                                },\r\n                                field: {\r\n                                  color: \"#061733\",\r\n                                  background: \"transparent\"\r\n                                }\r\n                              }}\r\n                              onFocus={() => handleFieldFocus(\"opponentCompanyStreet\")}\r\n                              onBlur={() => setTouchedFields(prev => ({ ...prev, opponentCompanyStreet: true }))}\r\n                            />\r\n                            <TextField\r\n                              placeholder=\"City/Town\"\r\n                              value={_opponentCompanyCity}\r\n                              onChange={(_, v) => _setOpponentCompanyCity(v || \"\")}\r\n                              styles={{\r\n                                root: {\r\n                                  minWidth: 100,\r\n                                  flex: 1,\r\n                                  height: 38,\r\n                                  ...getFieldStyle(\"opponentCompanyCity\", _opponentCompanyCity)\r\n                                },\r\n                                fieldGroup: {\r\n                                  borderRadius: 0,\r\n                                  height: 38,\r\n                                  background: \"transparent\",\r\n                                  border: \"none\",\r\n                                  ...noFocusOutline\r\n                                },\r\n                                field: {\r\n                                  color: \"#061733\",\r\n                                  background: \"transparent\"\r\n                                }\r\n                              }}\r\n                              onFocus={() => handleFieldFocus(\"opponentCompanyCity\")}\r\n                              onBlur={() => setTouchedFields(prev => ({ ...prev, opponentCompanyCity: true }))}\r\n                            />\r\n                            <TextField\r\n                              placeholder=\"County\"\r\n                              value={_opponentCompanyCounty}\r\n                              onChange={(_, v) => _setOpponentCompanyCounty(v || \"\")}\r\n                              styles={{\r\n                                root: {\r\n                                  minWidth: 80,\r\n                                  flex: 1,\r\n                                  height: 38,\r\n                                  ...getFieldStyle(\"opponentCompanyCounty\", _opponentCompanyCounty)\r\n                                },\r\n                                fieldGroup: {\r\n                                  borderRadius: 0,\r\n                                  height: 38,\r\n                                  background: \"transparent\",\r\n                                  border: \"none\",\r\n                                  ...noFocusOutline\r\n                                },\r\n                                field: {\r\n                                  color: \"#061733\",\r\n                                  background: \"transparent\"\r\n                                }\r\n                              }}\r\n                              onFocus={() => handleFieldFocus(\"opponentCompanyCounty\")}\r\n                              onBlur={() => setTouchedFields(prev => ({ ...prev, opponentCompanyCounty: true }))}\r\n                            />\r\n                            <TextField\r\n                              placeholder=\"Post Code\"\r\n                              value={_opponentCompanyPostcode}\r\n                              onChange={(_, v) => _setOpponentCompanyPostcode(v || \"\")}\r\n                              styles={{\r\n                                root: {\r\n                                  minWidth: 80,\r\n                                  flex: 1,\r\n                                  height: 38,\r\n                                  ...getFieldStyle(\"opponentCompanyPostcode\", _opponentCompanyPostcode)\r\n                                },\r\n                                fieldGroup: {\r\n                                  borderRadius: 0,\r\n                                  height: 38,\r\n                                  background: \"transparent\",\r\n                                  border: \"none\",\r\n                                  ...noFocusOutline\r\n                                },\r\n                                field: {\r\n                                  color: \"#061733\",\r\n                                  background: \"transparent\"\r\n                                }\r\n                              }}\r\n                              onFocus={() => handleFieldFocus(\"opponentCompanyPostcode\")}\r\n                              onBlur={() => setTouchedFields(prev => ({ ...prev, opponentCompanyPostcode: true }))}\r\n                            />\r\n                            <Dropdown\r\n                              placeholder=\"Country\"\r\n                              options={countries.map((c: { name: string; code: string }) => ({ key: c.name, text: `${c.name} (${c.code})` }))}\r\n                              selectedKey={_opponentCompanyCountry}\r\n                              onChange={(_, o) => _setOpponentCompanyCountry(o?.key as string || \"\")}\r\n                              styles={{\r\n                                root: {\r\n                                  minWidth: 100,\r\n                                  flex: 1,\r\n                                  height: 38,\r\n                                  alignSelf: 'flex-end',\r\n                                  ...getFieldStyle(\"opponentCompanyCountry\", _opponentCompanyCountry, true)\r\n                                },\r\n                                dropdown: { borderRadius: 0, height: 38, background: \"transparent\", ...noFocusOutline },\r\n                                title: { borderRadius: 0, height: 38, background: \"transparent\", color: \"#061733\", display: 'flex', alignItems: 'center', ...noFocusOutline }\r\n                              }}\r\n                              calloutProps={{ styles: { calloutMain: { borderRadius: 0 } } }}\r\n                              onFocus={() => handleFieldFocus(\"opponentCompanyCountry\")}\r\n                              onBlur={() => setTouchedFields(prev => ({ ...prev, opponentCompanyCountry: true }))}\r\n                            />\r\n                          </div>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  {/* Name sublabel */}\r\n                  <div style={chipContainer(visibleSections.opponent.name)}>\r\n                    <div style={{ display:'flex', alignItems:'center', gap: 10, justifyContent:'space-between', marginBottom: visibleSections.opponent.name ? 8 : 0 }}>\r\n                      <div style={{ display:'flex', alignItems:'center', gap:10, flex: '1 1 auto' }}>\r\n                        <Checkbox\r\n                          styles={checkboxChipStyles}\r\n                          label=\"Name\"\r\n                          boxSide=\"start\"\r\n                          checked={visibleSections.opponent.name}\r\n                          onChange={() => toggleSection('opponent','name')}\r\n                        />\r\n                        <span style={{ fontSize: 11, color: '#6b7280' }}>Title, first and last name</span>\r\n                      </div>\r\n                      <span className=\"ms-Icon ms-Icon--ContactInfo\" style={{ fontSize: 18, color: '#6b8bbd' }} />\r\n                    </div>\r\n                  {visibleSections.opponent.name && (\r\n                  <Stack horizontal tokens={{ childrenGap: 4 }} style={{ marginBottom: 0, width: \"100%\" }}>\r\n                    <Dropdown\r\n                      placeholder=\"Title\"\r\n                      options={titleOptions}\r\n                      selectedKey={_opponentTitle}\r\n                      onChange={(_, o) => _setOpponentTitle(o?.key as string)}\r\n                      styles={{\r\n                        root: {\r\n                          flex: '0 0 auto',\r\n                          minWidth: 80,\r\n                          width: '18%',\r\n                          height: 38,\r\n                          alignSelf: 'flex-end',\r\n                          ...getFieldStyle(\"opponentTitle\", _opponentTitle, true)\r\n                        },\r\n                        dropdown: { borderRadius: 0, height: 38, background: \"transparent\", ...noFocusOutline },\r\n                        title: {\r\n                          borderRadius: 0,\r\n                          height: 38,\r\n                          background: \"transparent\",\r\n                          color: \"#061733\",\r\n                          display: 'flex',\r\n                          alignItems: 'center',\r\n                          ...noFocusOutline\r\n                        }\r\n                      }}\r\n                      calloutProps={{ styles: { calloutMain: { borderRadius: 0 } } }}\r\n                      onFocus={() => handleFieldFocus(\"opponentTitle\")}\r\n                      onBlur={() => handleFieldBlur(\"opponentTitle\")}\r\n                    />\r\n                    <TextField\r\n                      placeholder=\"First Name\"\r\n                      value={_opponentFirst}\r\n                      onChange={(_, v) => _setOpponentFirst(v || \"\")}\r\n                      styles={{\r\n                        root: {\r\n                          flex: '1 1 auto',\r\n                          minWidth: 100,\r\n                          height: 38,\r\n                          ...getFieldStyle(\"opponentFirst\", _opponentFirst)\r\n                        },\r\n                        fieldGroup: {\r\n                          borderRadius: 0,\r\n                          height: 38,\r\n                          background: \"transparent\",\r\n                          border: \"none\",\r\n                          ...noFocusOutline\r\n                        },\r\n                        field: {\r\n                          color: \"#061733\",\r\n                          background: \"transparent\"\r\n                        }\r\n                      }}\r\n                      onFocus={() => handleFieldFocus(\"opponentFirst\")}\r\n                      onBlur={() => handleFieldBlur(\"opponentFirst\")}\r\n                    />\r\n                    <TextField\r\n                      placeholder=\"Last Name\"\r\n                      value={_opponentLast}\r\n                      onChange={(_, v) => _setOpponentLast(v || \"\")}\r\n                      styles={{\r\n                        root: {\r\n                          flex: '1 1 auto',\r\n                          minWidth: 100,\r\n                          height: 38,\r\n                          ...getFieldStyle(\"opponentLast\", _opponentLast)\r\n                        },\r\n                        fieldGroup: {\r\n                          borderRadius: 0,\r\n                          height: 38,\r\n                          background: \"transparent\",\r\n                          border: \"none\",\r\n                          ...noFocusOutline\r\n                        },\r\n                        field: {\r\n                          color: \"#061733\",\r\n                          background: \"transparent\"\r\n                        }\r\n                      }}\r\n                      onFocus={() => handleFieldFocus(\"opponentLast\")}\r\n                      onBlur={() => handleFieldBlur(\"opponentLast\")}\r\n                    />\r\n                  </Stack>\r\n                  )}\r\n                  </div>\r\n                  {/* Separator removed for cleaner layout */}\r\n                  {/* Contact Details sublabel (icon-labeled only) */}\r\n                  <div style={chipContainer(visibleSections.opponent.contact)}>\r\n                    <div style={{ display:'flex', alignItems:'center', gap: 10, justifyContent:'space-between', marginBottom: visibleSections.opponent.contact ? 8 : 0 }}>\r\n                      <div style={{ display:'flex', alignItems:'center', gap:10, flex: '1 1 auto' }}>\r\n                        <Checkbox\r\n                          styles={checkboxChipStyles}\r\n                          label=\"Contact Details\"\r\n                          boxSide=\"start\"\r\n                          checked={visibleSections.opponent.contact}\r\n                          onChange={() => toggleSection('opponent','contact')}\r\n                        />\r\n                        <span style={{ fontSize: 11, color: '#6b7280' }}>Email and phone</span>\r\n                      </div>\r\n                      <span className=\"ms-Icon ms-Icon--Mail\" style={{ fontSize: 18, color: '#6b8bbd' }} />\r\n                    </div>\r\n                  {visibleSections.opponent.contact && (\r\n                  <Stack horizontal tokens={{ childrenGap: 4 }} style={{ marginBottom: 0, width: \"100%\" }}>\r\n                    <TextField\r\n                      placeholder=\"Email\"\r\n                      value={_opponentEmail}\r\n                      onChange={(_, v) => _setOpponentEmail(v || \"\")}\r\n                      onGetErrorMessage={() => getEmailErrorMessage(_opponentEmail, !!touchedFields[\"opponentEmail\"]) }\r\n                      styles={{\r\n                        root: {\r\n                          flex: 1,\r\n                          minWidth: 0,\r\n                          maxWidth: 'none',\r\n                          height: 38,\r\n                          ...getFieldStyle(\"opponentEmail\", _opponentEmail)\r\n                        },\r\n                        fieldGroup: {\r\n                          borderRadius: 0,\r\n                          height: 38,\r\n                          background: \"transparent\",\r\n                          border: \"none\",\r\n                          ...noFocusOutline\r\n                        },\r\n                        field: {\r\n                          color: \"#061733\",\r\n                          background: \"transparent\"\r\n                        }\r\n                      }}\r\n                      onFocus={() => handleFieldFocus(\"opponentEmail\")}\r\n                      onBlur={() => handleFieldBlur(\"opponentEmail\")}\r\n                    />\r\n                    <TextField\r\n                      placeholder=\"Phone\"\r\n                      value={_opponentPhone}\r\n                      onChange={(_, v) => _setOpponentPhone(v || \"\")}\r\n                      onGetErrorMessage={() => getPhoneErrorMessage(_opponentPhone, !!touchedFields[\"opponentPhone\"]) }\r\n                      styles={{\r\n                        root: {\r\n                          flex: 1,\r\n                          minWidth: 0,\r\n                          maxWidth: 'none',\r\n                          height: 38,\r\n                          ...getFieldStyle(\"opponentPhone\", _opponentPhone)\r\n                        },\r\n                        fieldGroup: {\r\n                          borderRadius: 0,\r\n                          height: 38,\r\n                          background: \"transparent\",\r\n                          border: \"none\",\r\n                          ...noFocusOutline\r\n                        },\r\n                        field: {\r\n                          color: \"#061733\",\r\n                          background: \"transparent\"\r\n                        }\r\n                      }}\r\n                      onFocus={() => handleFieldFocus(\"opponentPhone\")}\r\n                      onBlur={() => {\r\n                        setActiveField(null);\r\n                        setTouchedFields((prev) => ({ ...prev, opponentPhone: true }));\r\n                      }}\r\n                    />\r\n                  </Stack>\r\n                  )}\r\n                  </div>\r\n                  {/* Separator removed for cleaner layout */}\r\n                  {/* Address sublabel (opponent personal address) */}\r\n                  <div style={chipContainer(visibleSections.opponent.address)}>\r\n                    <div style={{ display:'flex', alignItems:'center', gap: 10, justifyContent:'space-between', marginBottom: visibleSections.opponent.address ? 8 : 0 }}>\r\n                      <div style={{ display:'flex', alignItems:'center', gap:10, flex: '1 1 auto' }}>\r\n                        <Checkbox\r\n                          styles={checkboxChipStyles}\r\n                          label=\"Address\"\r\n                          boxSide=\"start\"\r\n                          checked={visibleSections.opponent.address}\r\n                          onChange={() => toggleSection('opponent','address')}\r\n                        />\r\n                        <span style={{ fontSize: 11, color: '#6b7280' }}>House number, street, city, county, postcode, country</span>\r\n                      </div>\r\n                      <div style={{ display:'flex', alignItems:'center', gap:10 }}>\r\n                        {opponentType === 'Individual' && (\r\n                          <button type=\"button\" onClick={copyCompanyAddressToPersonal} disabled={!(_opponentCompanyHouseNumber || _opponentCompanyStreet || _opponentCompanyCity || _opponentCompanyCounty || _opponentCompanyPostcode || _opponentCompanyCountry)}\r\n                            style={{\r\n                              background:'transparent',\r\n                              border:'none',\r\n                              padding:0,\r\n                              margin:0,\r\n                              fontSize:11,\r\n                              color: '#3690CE',\r\n                              cursor: 'pointer',\r\n                              opacity: (_opponentCompanyHouseNumber || _opponentCompanyStreet || _opponentCompanyCity || _opponentCompanyCounty || _opponentCompanyPostcode || _opponentCompanyCountry) ? 1 : 0.5\r\n                            }}\r\n                          >\r\n                            Use company address\r\n                          </button>\r\n                        )}\r\n                        <span className=\"ms-Icon ms-Icon--Home\" style={{ fontSize: 18, color: '#6b8bbd' }} />\r\n                      </div>\r\n                    </div>\r\n                  {visibleSections.opponent.address && (\r\n                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(3, minmax(180px, 1fr))\", gap: 6, marginBottom: 0 }}>\r\n                    <TextField\r\n                      placeholder=\"House/Building Number or Name\"\r\n                      value={_opponentHouseNumber}\r\n                      onChange={(_, v) => _setOpponentHouseNumber(v || \"\")}\r\n                      styles={{\r\n                        root: {\r\n                          minWidth: 80,\r\n                          flex: 1,\r\n                          height: 38,\r\n                          ...getFieldStyle(\"opponentHouseNumber\", _opponentHouseNumber)\r\n                        },\r\n                        fieldGroup: {\r\n                          borderRadius: 0,\r\n                          height: 38,\r\n                          background: \"transparent\",\r\n                          border: \"none\",\r\n                          ...noFocusOutline\r\n                        },\r\n                        field: {\r\n                          color: \"#061733\",\r\n                          background: \"transparent\"\r\n                        }\r\n                      }}\r\n                    onFocus={() => handleFieldFocus(\"opponentHouseNumber\")}\r\n                    onBlur={() => {\r\n                      setActiveField(null);\r\n                      setTouchedFields((prev) => ({ ...prev, opponentHouseNumber: true }));\r\n                    }}\r\n                    />\r\n                    <TextField\r\n                      placeholder=\"Street\"\r\n                      value={_opponentStreet}\r\n                      onChange={(_, v) => _setOpponentStreet(v || \"\")}\r\n                      styles={{\r\n                        root: {\r\n                          minWidth: 100,\r\n                          flex: 1,\r\n                          height: 38,\r\n                          ...getFieldStyle(\"opponentStreet\", _opponentStreet)\r\n                        },\r\n                        fieldGroup: {\r\n                          borderRadius: 0,\r\n                          height: 38,\r\n                          background: \"transparent\",\r\n                          border: \"none\",\r\n                          ...noFocusOutline\r\n                        },\r\n                        field: {\r\n                          color: \"#061733\",\r\n                          background: \"transparent\"\r\n                        }\r\n                      }}\r\n                    onFocus={() => handleFieldFocus(\"opponentStreet\")}\r\n                    onBlur={() => {\r\n                      setActiveField(null);\r\n                      setTouchedFields((prev) => ({ ...prev, opponentStreet: true }));\r\n                    }}\r\n                    />\r\n                    <TextField\r\n                      placeholder=\"City/Town\"\r\n                      value={_opponentCity}\r\n                      onChange={(_, v) => _setOpponentCity(v || \"\")}\r\n                      styles={{\r\n                        root: {\r\n                          minWidth: 100,\r\n                          flex: 1,\r\n                          height: 38,\r\n                          ...getFieldStyle(\"opponentCity\", _opponentCity)\r\n                        },\r\n                        fieldGroup: {\r\n                          borderRadius: 0,\r\n                          height: 38,\r\n                          background: \"transparent\",\r\n                          border: \"none\",\r\n                          ...noFocusOutline\r\n                        },\r\n                        field: {\r\n                          color: \"#061733\",\r\n                          background: \"transparent\"\r\n                        }\r\n                      }}\r\n                    onFocus={() => handleFieldFocus(\"opponentCity\")}\r\n                    onBlur={() => {\r\n                      setActiveField(null);\r\n                      setTouchedFields((prev) => ({ ...prev, opponentCity: true }));\r\n                    }}\r\n                    />\r\n                    <TextField\r\n                      placeholder=\"County\"\r\n                      value={_opponentCounty}\r\n                      onChange={(_, v) => _setOpponentCounty(v || \"\")}\r\n                      styles={{\r\n                        root: {\r\n                          minWidth: 80,\r\n                          flex: 1,\r\n                          height: 38,\r\n                          ...getFieldStyle(\"opponentCounty\", _opponentCounty)\r\n                        },\r\n                        fieldGroup: {\r\n                          borderRadius: 0,\r\n                          height: 38,\r\n                          background: \"transparent\",\r\n                          border: \"none\",\r\n                          ...noFocusOutline\r\n                        },\r\n                        field: {\r\n                          color: \"#061733\",\r\n                          background: \"transparent\"\r\n                        }\r\n                      }}\r\n                    onFocus={() => handleFieldFocus(\"opponentCounty\")}\r\n                    onBlur={() => {\r\n                      setActiveField(null);\r\n                      setTouchedFields((prev) => ({ ...prev, opponentCounty: true }));\r\n                    }}\r\n                    />\r\n                    <TextField\r\n                      placeholder=\"Post Code\"\r\n                      value={_opponentPostcode}\r\n                      onChange={(_, v) => _setOpponentPostcode(v || \"\")}\r\n                      styles={{\r\n                        root: {\r\n                          minWidth: 80,\r\n                          flex: 1,\r\n                          height: 38,\r\n                          ...getFieldStyle(\"opponentPostcode\", _opponentPostcode)\r\n                        },\r\n                        fieldGroup: {\r\n                          borderRadius: 0,\r\n                          height: 38,\r\n                          background: \"transparent\",\r\n                          border: \"none\",\r\n                          ...noFocusOutline\r\n                        },\r\n                        field: {\r\n                          color: \"#061733\",\r\n                          background: \"transparent\"\r\n                        }\r\n                      }}\r\n                    onFocus={() => handleFieldFocus(\"opponentPostcode\")}\r\n                    onBlur={() => {\r\n                      setActiveField(null);\r\n                      setTouchedFields((prev) => ({ ...prev, opponentPostcode: true }));\r\n                    }}\r\n                    />\r\n                    {/* Country dropdown */}\r\n                    <Dropdown\r\n                      placeholder=\"Country\"\r\n                      options={countries.map((c: { name: string; code: string }) => ({\r\n                        key: c.name,\r\n                        text: `${c.name} (${c.code})`\r\n                      }))}\r\n                      selectedKey={_opponentCountry}\r\n                      onChange={(_, o) => _setOpponentCountry(o?.key as string || \"\")}\r\n                      styles={{\r\n                        root: {\r\n                          minWidth: 100,\r\n                          flex: 1,\r\n                          height: 38,\r\n                          alignSelf: 'flex-end',\r\n                          ...getFieldStyle(\"opponentCountry\", _opponentCountry, true)\r\n                        },\r\n                        dropdown: { borderRadius: 0, height: 38, background: \"transparent\", ...noFocusOutline },\r\n                        title: {\r\n                          borderRadius: 0,\r\n                          height: 38,\r\n                          background: \"transparent\",\r\n                          color: \"#061733\",\r\n                          display: 'flex',\r\n                          alignItems: 'center',\r\n                          ...noFocusOutline\r\n                        }\r\n                      }}\r\n                      calloutProps={{ styles: { calloutMain: { borderRadius: 0 } } }}\r\n                      onFocus={() => handleFieldFocus(\"opponentCountry\")}\r\n                      onBlur={() => {\r\n                        setActiveField(null);\r\n                        setTouchedFields((prev) => ({ ...prev, opponentCountry: true }));\r\n                      }}\r\n                    />\r\n                    </div>\r\n                  )}\r\n                  </div>\r\n                </Stack>\r\n              </div>\r\n              \r\n              {/* Opponent's Solicitor Section */}\r\n              <div style={containerStyle}>\r\n                <Stack tokens={{ childrenGap: 6 }}>\r\n                  {/* Section Header */}\r\n                  <div style={{ \r\n                    fontWeight: 600, \r\n                    fontSize: 15, \r\n                    marginBottom: 8, \r\n                    color: '#061733'\r\n                  }}>\r\n                    Opponent's Solicitor\r\n                  </div>\r\n                  {/* Firm (Company) section */}\r\n                  <div style={chipContainer(visibleSections.solicitor.company)}>\r\n                    <div style={{ display:'flex', alignItems:'center', gap: 10, justifyContent:'space-between', marginBottom: visibleSections.solicitor.company ? 8 : 0 }}>\r\n                      <div style={{ display:'flex', alignItems:'center', gap:10, flex: '1 1 auto' }}>\r\n                        <Checkbox\r\n                          styles={checkboxChipStyles}\r\n                          label=\"Firm\"\r\n                          boxSide=\"start\"\r\n                          checked={visibleSections.solicitor.company}\r\n                          onChange={() => toggleSection('solicitor','company')}\r\n                        />\r\n                        <span style={{ fontSize: 11, color: '#6b7280' }}>Company name and number</span>\r\n                      </div>\r\n                      <span className=\"ms-Icon ms-Icon--CityNext\" style={{ fontSize: 18, color: '#6b8bbd' }} />\r\n                    </div>\r\n                  {visibleSections.solicitor.company && (\r\n                  <Stack horizontal tokens={{ childrenGap: 5 }} style={{ width: \"100%\", marginBottom: 0 }}>\r\n                    <TextField\r\n                      placeholder=\"Company Name\"\r\n                      value={opponentSolicitorCompany}\r\n                      onChange={(_, v) => setOpponentSolicitorCompany(v || \"\")}\r\n                      styles={{\r\n                        root: {\r\n                          flex: 1,\r\n                          minWidth: 180,\r\n                          height: 38,\r\n                          ...(touchedFields[\"opponentSolicitorCompany\"] && opponentSolicitorCompany ? answeredFieldStyle : unansweredFieldStyle)\r\n                        },\r\n                        fieldGroup: {\r\n                          borderRadius: 0,\r\n                          height: 38,\r\n                          background: \"transparent\",\r\n                          border: \"none\",\r\n                          ...noFocusOutline\r\n                        },\r\n                        field: {\r\n                          color: \"#061733\",\r\n                          background: \"transparent\"\r\n                        }\r\n                      }}\r\n                      onFocus={() => handleFieldFocus(\"opponentSolicitorCompany\")}\r\n                      onBlur={() => {\r\n                        setActiveField(null);\r\n                        setTouchedFields((prev) => ({ ...prev, opponentSolicitorCompany: true }));\r\n                      }}\r\n                    />\r\n                    <TextField\r\n                      placeholder=\"Company Number\"\r\n                      value={_solicitorCompanyNumber}\r\n                      onChange={(_, v) => _setSolicitorCompanyNumber(v || \"\")}\r\n                      styles={{\r\n                        root: {\r\n                          flex: 1,\r\n                          minWidth: 140,\r\n                          height: 38,\r\n                          ...(touchedFields[\"solicitorCompanyNumber\"] && _solicitorCompanyNumber ? answeredFieldStyle : unansweredFieldStyle)\r\n                        },\r\n                        fieldGroup: {\r\n                          borderRadius: 0,\r\n                          height: 38,\r\n                          background: \"transparent\",\r\n                          border: \"none\",\r\n                          ...noFocusOutline\r\n                        },\r\n                        field: {\r\n                          color: \"#061733\",\r\n                          background: \"transparent\"\r\n                        }\r\n                      }}\r\n                      onFocus={() => handleFieldFocus(\"solicitorCompanyNumber\")}\r\n                      onBlur={() => {\r\n                        setActiveField(null);\r\n                        setTouchedFields((prev) => ({ ...prev, solicitorCompanyNumber: true }));\r\n                      }}\r\n                    />\r\n                  </Stack>\r\n                  )}\r\n                  </div>\r\n                  {/* Solicitor Address (moved under Firm as Firm Address) */}\r\n                  <div style={chipContainer(visibleSections.solicitor.address)}>\r\n                    <div style={{ display:'flex', alignItems:'center', gap: 10, justifyContent:'space-between', marginBottom: visibleSections.solicitor.name ? 8 : 0 }}>\r\n                      <div style={{ display:'flex', alignItems:'center', gap:10, flex: '1 1 auto' }}>\r\n                        <Checkbox\r\n                          styles={checkboxChipStyles}\r\n                          label=\"Address\"\r\n                          boxSide=\"start\"\r\n                          checked={visibleSections.solicitor.address}\r\n                          onChange={() => toggleSection('solicitor','address')}\r\n                        />\r\n                        <span style={{ fontSize: 11, color: '#6b7280' }}>House number, street, city, county, postcode, country</span>\r\n                      </div>\r\n                      <span className=\"ms-Icon ms-Icon--Home\" style={{ fontSize: 18, color: '#6b8bbd' }} />\r\n                    </div>\r\n                  {visibleSections.solicitor.address && (\r\n                  <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(3, minmax(180px, 1fr))\", gap: 5, marginBottom: 0 }}>\r\n                    <TextField\r\n                      placeholder=\"House/Building Number or Name\"\r\n                      value={_solicitorHouseNumber}\r\n                      onChange={(_, v) => _setSolicitorHouseNumber(v || \"\")}\r\n                      styles={{\r\n                        root: {\r\n                          minWidth: 80,\r\n                          flex: 1,\r\n                          height: 38,\r\n                          ...getFieldStyle(\"solicitorHouseNumber\", _solicitorHouseNumber)\r\n                        },\r\n                        fieldGroup: {\r\n                          borderRadius: 0,\r\n                          height: 38,\r\n                          background: \"transparent\",\r\n                          border: \"none\"\r\n                        },\r\n                        field: {\r\n                          color: \"#061733\",\r\n                          background: \"transparent\"\r\n                        }\r\n                      }}\r\n                    onFocus={() => handleFieldFocus(\"solicitorHouseNumber\")}\r\n                    onBlur={() => {\r\n                      setActiveField(null);\r\n                      setTouchedFields((prev) => ({ ...prev, solicitorHouseNumber: true }));\r\n                    }}\r\n                    />\r\n                    <TextField\r\n                      placeholder=\"Street\"\r\n                      value={_solicitorStreet}\r\n                      onChange={(_, v) => _setSolicitorStreet(v || \"\")}\r\n                      styles={{\r\n                        root: {\r\n                          minWidth: 100,\r\n                          flex: 1,\r\n                          height: 38,\r\n                          ...getFieldStyle(\"solicitorStreet\", _solicitorStreet)\r\n                        },\r\n                        fieldGroup: {\r\n                          borderRadius: 0,\r\n                          height: 38,\r\n                          background: \"transparent\",\r\n                          border: \"none\"\r\n                        },\r\n                        field: {\r\n                          color: \"#061733\",\r\n                          background: \"transparent\"\r\n                        }\r\n                      }}\r\n                    onFocus={() => handleFieldFocus(\"solicitorStreet\")}\r\n                    onBlur={() => {\r\n                      setActiveField(null);\r\n                      setTouchedFields((prev) => ({ ...prev, solicitorStreet: true }));\r\n                    }}\r\n                    />\r\n                    <TextField\r\n                      placeholder=\"City/Town\"\r\n                      value={_solicitorCity}\r\n                      onChange={(_, v) => _setSolicitorCity(v || \"\")}\r\n                      styles={{\r\n                        root: {\r\n                          minWidth: 100,\r\n                          flex: 1,\r\n                          height: 38,\r\n                          ...getFieldStyle(\"solicitorCity\", _solicitorCity)\r\n                        },\r\n                        fieldGroup: {\r\n                          borderRadius: 0,\r\n                          height: 38,\r\n                          background: \"transparent\",\r\n                          border: \"none\"\r\n                        },\r\n                        field: {\r\n                          color: \"#061733\",\r\n                          background: \"transparent\"\r\n                        }\r\n                      }}\r\n                    onFocus={() => handleFieldFocus(\"solicitorCity\")}\r\n                    onBlur={() => {\r\n                      setActiveField(null);\r\n                      setTouchedFields((prev) => ({ ...prev, solicitorCity: true }));\r\n                    }}\r\n                    />\r\n                    <TextField\r\n                      placeholder=\"County\"\r\n                      value={_solicitorCounty}\r\n                      onChange={(_, v) => _setSolicitorCounty(v || \"\")}\r\n                      styles={{\r\n                        root: {\r\n                          minWidth: 80,\r\n                          flex: 1,\r\n                          height: 38,\r\n                          ...getFieldStyle(\"solicitorCounty\", _solicitorCounty)\r\n                        },\r\n                        fieldGroup: {\r\n                          borderRadius: 0,\r\n                          height: 38,\r\n                          background: \"transparent\",\r\n                          border: \"none\"\r\n                        },\r\n                        field: {\r\n                          color: \"#061733\",\r\n                          background: \"transparent\"\r\n                        }\r\n                      }}\r\n                    onFocus={() => handleFieldFocus(\"solicitorCounty\")}\r\n                    onBlur={() => {\r\n                      setActiveField(null);\r\n                      setTouchedFields((prev) => ({ ...prev, solicitorCounty: true }));\r\n                    }}\r\n                    />\r\n                    <TextField\r\n                      placeholder=\"Post Code\"\r\n                      value={_solicitorPostcode}\r\n                      onChange={(_, v) => _setSolicitorPostcode(v || \"\")}\r\n                      styles={{\r\n                        root: {\r\n                          minWidth: 80,\r\n                          flex: 1,\r\n                          height: 38,\r\n                          ...getFieldStyle(\"solicitorPostcode\", _solicitorPostcode)\r\n                        },\r\n                        fieldGroup: {\r\n                          borderRadius: 0,\r\n                          height: 38,\r\n                          background: \"transparent\",\r\n                          border: \"none\"\r\n                        },\r\n                        field: {\r\n                          color: \"#061733\",\r\n                          background: \"transparent\"\r\n                        }\r\n                      }}\r\n                    onFocus={() => handleFieldFocus(\"solicitorPostcode\")}\r\n                    onBlur={() => {\r\n                      setActiveField(null);\r\n                      setTouchedFields((prev) => ({ ...prev, solicitorPostcode: true }));\r\n                    }}\r\n                    />\r\n                    {/* Country dropdown */}\r\n                    <Dropdown\r\n                      placeholder=\"Country\"\r\n                      options={countries.map((c: { name: string; code: string }) => ({\r\n                        key: c.name,\r\n                        text: `${c.name} (${c.code})`\r\n                      }))}\r\n                      selectedKey={_solicitorCountry}\r\n                      onChange={(_, o) => _setSolicitorCountry(o?.key as string || \"\")}\r\n                      styles={{\r\n                        root: {\r\n                          minWidth: 100,\r\n                          flex: 1,\r\n                          height: 38,\r\n                          alignSelf: 'flex-end',\r\n                          ...getFieldStyle(\"solicitorCountry\", _solicitorCountry, true)\r\n                        },\r\n                        dropdown: { borderRadius: 0, height: 38, background: \"transparent\", ...noFocusOutline },\r\n                        title: {\r\n                          borderRadius: 0,\r\n                          height: 38,\r\n                          background: \"transparent\",\r\n                          color: \"#061733\",\r\n                          display: 'flex',\r\n                          alignItems: 'center',\r\n                          ...noFocusOutline\r\n                        }\r\n                      }}\r\n                      calloutProps={{ styles: { calloutMain: { borderRadius: 0 } } }}\r\n                      onFocus={() => handleFieldFocus(\"solicitorCountry\")}\r\n                      onBlur={() => {\r\n                        setActiveField(null);\r\n                        setTouchedFields((prev) => ({ ...prev, solicitorCountry: true }));\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  )}\r\n                  </div>\r\n\r\n                  {/* Solicitor Name section (moved below Address) */}\r\n                  <div style={chipContainer(visibleSections.solicitor.name)}>\r\n                    <div style={{ display:'flex', alignItems:'center', gap: 10, justifyContent:'space-between', marginBottom: visibleSections.solicitor.name ? 8 : 0 }}>\r\n                      <div style={{ display:'flex', alignItems:'center', gap:10, flex: '1 1 auto' }}>\r\n                        <Checkbox\r\n                          styles={checkboxChipStyles}\r\n                          label=\"Name\"\r\n                          boxSide=\"start\"\r\n                          checked={visibleSections.solicitor.name}\r\n                          onChange={() => toggleSection('solicitor','name')}\r\n                        />\r\n                        <span style={{ fontSize: 11, color: '#6b7280' }}>Title, first and last name</span>\r\n                      </div>\r\n                      <span className=\"ms-Icon ms-Icon--ContactInfo\" style={{ fontSize: 18, color: '#6b8bbd' }} />\r\n                    </div>\r\n                  {visibleSections.solicitor.name && (\r\n                  <Stack horizontal tokens={{ childrenGap: 5 }} style={{ marginBottom: 0, width: \"100%\" }}>\r\n                    <Dropdown\r\n                      placeholder=\"Title\"\r\n                      options={titleOptions}\r\n                      selectedKey={_solicitorTitle}\r\n                      onChange={(_, o) => _setSolicitorTitle(o?.key as string)}\r\n                      styles={{\r\n                        root: {\r\n                          flex: '0 0 auto',\r\n                          minWidth: 80,\r\n                          width: '18%',\r\n                          height: 38,\r\n                          alignSelf: 'flex-end',\r\n                          ...getFieldStyle(\"solicitorTitle\", _solicitorTitle, true)\r\n                        },\r\n                        dropdown: { borderRadius: 0, height: 38, background: \"transparent\", ...noFocusOutline },\r\n                        title: {\r\n                          borderRadius: 0,\r\n                          height: 38,\r\n                          background: \"transparent\",\r\n                          color: \"#061733\",\r\n                          display: 'flex',\r\n                          alignItems: 'center',\r\n                          ...noFocusOutline\r\n                        }\r\n                      }}\r\n                      calloutProps={{ styles: { calloutMain: { borderRadius: 0 } } }}\r\n                      onFocus={() => handleFieldFocus(\"solicitorTitle\")}\r\n                      onBlur={() => {\r\n                        setActiveField(null);\r\n                        setTouchedFields((prev) => ({ ...prev, solicitorTitle: true }));\r\n                      }}\r\n                    />\r\n                    <TextField\r\n                      placeholder=\"First Name\"\r\n                      value={_solicitorFirst}\r\n                      onChange={(_, v) => _setSolicitorFirst(v || \"\")}\r\n                      styles={{\r\n                        root: {\r\n                          flex: '1 1 auto',\r\n                          minWidth: 100,\r\n                          height: 38,\r\n                          ...getFieldStyle(\"solicitorFirst\", _solicitorFirst)\r\n                        },\r\n                        fieldGroup: {\r\n                          borderRadius: 0,\r\n                          height: 38,\r\n                          background: \"transparent\",\r\n                          border: \"none\",\r\n                          ...noFocusOutline\r\n                        },\r\n                        field: {\r\n                          color: \"#061733\",\r\n                          background: \"transparent\"\r\n                        }\r\n                      }}\r\n                      onFocus={() => handleFieldFocus(\"solicitorFirst\")}\r\n                      onBlur={() => {\r\n                        setActiveField(null);\r\n                        setTouchedFields((prev) => ({ ...prev, solicitorFirst: true }));\r\n                      }}\r\n                    />\r\n                    <TextField\r\n                      placeholder=\"Last Name\"\r\n                      value={_solicitorLast}\r\n                      onChange={(_, v) => _setSolicitorLast(v || \"\")}\r\n                      styles={{\r\n                        root: {\r\n                          flex: '1 1 auto',\r\n                          minWidth: 100,\r\n                          height: 38,\r\n                          ...getFieldStyle(\"solicitorLast\", _solicitorLast)\r\n                        },\r\n                        fieldGroup: {\r\n                          borderRadius: 0,\r\n                          height: 38,\r\n                          background: \"transparent\",\r\n                          border: \"none\",\r\n                          ...noFocusOutline\r\n                        },\r\n                        field: {\r\n                          color: \"#061733\",\r\n                          background: \"transparent\"\r\n                        }\r\n                      }}\r\n                      onFocus={() => handleFieldFocus(\"solicitorLast\")}\r\n                      onBlur={() => {\r\n                        setActiveField(null);\r\n                        setTouchedFields((prev) => ({ ...prev, solicitorLast: true }));\r\n                      }}\r\n                    />\r\n                  </Stack>\r\n                  )}\r\n                  </div>\r\n                  {/* Separator removed for cleaner layout */}\r\n                  {/* Contact Details sublabel */}\r\n                  <div style={chipContainer(visibleSections.solicitor.contact)}>\r\n                    <div style={{ display:'flex', alignItems:'center', gap: 10, justifyContent:'space-between', marginBottom: visibleSections.solicitor.contact ? 8 : 0 }}>\r\n                      <div style={{ display:'flex', alignItems:'center', gap:10, flex: '1 1 auto' }}>\r\n                        <Checkbox\r\n                          styles={checkboxChipStyles}\r\n                          label=\"Contact Details\"\r\n                          boxSide=\"start\"\r\n                          checked={visibleSections.solicitor.contact}\r\n                          onChange={() => toggleSection('solicitor','contact')}\r\n                        />\r\n                        <span style={{ fontSize: 11, color: '#6b7280' }}>Email and phone</span>\r\n                      </div>\r\n                      <span className=\"ms-Icon ms-Icon--Mail\" style={{ fontSize: 18, color: '#6b8bbd' }} />\r\n                    </div>\r\n                  {visibleSections.solicitor.contact && (\r\n                  <Stack horizontal tokens={{ childrenGap: 5 }} style={{ marginBottom: 0, width: \"100%\" }}>\r\n                    <TextField\r\n                      placeholder=\"Email\"\r\n                      value={_opponentSolicitorEmail}\r\n                      onChange={(_, v) => _setOpponentSolicitorEmail(v || \"\")}\r\n                      styles={{\r\n                        root: {\r\n                          flex: 1,\r\n                          minWidth: 0,\r\n                          maxWidth: 'none',\r\n                          height: 38,\r\n                          ...getFieldStyle(\"opponentSolicitorEmail\", _opponentSolicitorEmail)\r\n                        },\r\n                        fieldGroup: {\r\n                          borderRadius: 0,\r\n                          height: 38,\r\n                          background: \"transparent\",\r\n                          border: \"none\",\r\n                          ...noFocusOutline\r\n                        },\r\n                        field: {\r\n                          color: \"#061733\",\r\n                          background: \"transparent\"\r\n                        }\r\n                      }}\r\n                      onFocus={() => handleFieldFocus(\"opponentSolicitorEmail\")}\r\n                      onBlur={() => {\r\n                        setActiveField(null);\r\n                        setTouchedFields((prev) => ({ ...prev, opponentSolicitorEmail: true }));\r\n                      }}\r\n                    />\r\n                    <TextField\r\n                      placeholder=\"Phone\"\r\n                      value={_solicitorPhone}\r\n                      onChange={(_, v) => _setSolicitorPhone(v || \"\")}\r\n                      styles={{\r\n                        root: {\r\n                          flex: 1,\r\n                          minWidth: 0,\r\n                          maxWidth: 'none',\r\n                          height: 38,\r\n                          ...getFieldStyle(\"solicitorPhone\", _solicitorPhone)\r\n                        },\r\n                        fieldGroup: {\r\n                          borderRadius: 0,\r\n                          height: 38,\r\n                          background: \"transparent\",\r\n                          border: \"none\",\r\n                          ...noFocusOutline\r\n                        },\r\n                        field: {\r\n                          color: \"#061733\",\r\n                          background: \"transparent\"\r\n                        }\r\n                      }}\r\n                      onFocus={() => handleFieldFocus(\"solicitorPhone\")}\r\n                      onBlur={() => {\r\n                        setActiveField(null);\r\n                        setTouchedFields((prev) => ({ ...prev, solicitorPhone: true }));\r\n                      }}\r\n                    />\r\n                  </Stack>\r\n                )}\r\n                </div>\r\n                {/* Separator removed for cleaner layout */}\r\n              </Stack>\r\n            </div>\r\n          </div>\r\n        ) : enterOpponentNow === false ? (\r\n          <>\r\n            {/* Animated placeholder banner */}\r\n            <div style={{\r\n                animation: 'slideInFromTop 0.5s cubic-bezier(0.4, 0, 0.2, 1) forwards',\r\n                opacity: 0,\r\n                transform: 'translateY(20px)',\r\n                marginBottom: 16\r\n              }}>\r\n                <div className=\"question-banner\" style={{\r\n                  background: '#fffbe6',\r\n                  border: '2px solid #FFB900',\r\n                  borderRadius: 0,\r\n                  padding: '12px 16px',\r\n                  color: '#b88600',\r\n                  fontSize: 14,\r\n                  fontWeight: 500,\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  gap: 10,\r\n                  position: 'relative',\r\n                  overflow: 'hidden'\r\n                }}>\r\n                  <span style={{ \r\n                    display: 'flex', \r\n                    alignItems: 'center', \r\n                    justifyContent: 'center', \r\n                    width: 20, \r\n                    height: 20, \r\n                    background: '#FFB900', \r\n                    borderRadius: '50%',\r\n                    color: 'white',\r\n                    fontSize: 12,\r\n                    fontWeight: 'bold'\r\n                  }}>\r\n                    i\r\n                  </span>\r\n                  Using placeholder values for opponent details. You'll be prompted to update these later.\r\n                  {/* Subtle shimmer effect */}\r\n                  <div style={{\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    left: '-100%',\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    background: 'linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent)',\r\n                    animation: 'shimmerPass 2s ease-in-out',\r\n                    pointerEvents: 'none'\r\n                  }} />\r\n                </div>\r\n              </div>\r\n          </>\r\n        ) : null}\r\n        </>\r\n      )}\r\n\r\n        {onContinue && (\r\n          <PrimaryButton\r\n            text=\"Continue\"\r\n            onClick={onContinue}\r\n            disabled={!noConflict}\r\n            styles={{\r\n              root: {\r\n                background: 'linear-gradient(135deg, #3690CE 0%, #2563EB 100%)',\r\n                border: 'none',\r\n                borderRadius: 10,\r\n                height: 44,\r\n                fontWeight: 600,\r\n                fontSize: 14,\r\n                boxShadow: '0 2px 4px rgba(0, 0, 0, 0.04)',\r\n                transition: 'all 0.2s cubic-bezier(0.4, 0, 0.2, 1)',\r\n                ':hover': {\r\n                  background: 'linear-gradient(135deg, #2563EB 0%, #1D4ED8 100%)',\r\n                  transform: 'translateY(-1px)',\r\n                  boxShadow: '0 3px 6px rgba(0, 0, 0, 0.08)'\r\n                },\r\n                ':active': {\r\n                  transform: 'translateY(0)'\r\n                }\r\n              }\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OpponentDetailsStep;\r\n","import React from 'react';\r\nimport { Stack, TextField } from '@fluentui/react';\r\nimport ModernMultiSelect from './ModernMultiSelect';\r\n\r\n// Shared light/dark aware colours (fallbacks if global theme not injected)\r\nconst light = {\r\n    bg: 'linear-gradient(135deg,#FFFFFF 0%,#F8FAFC 100%)',\r\n    panel: '#FFFFFF',\r\n    border: '#E2E8F0',\r\n    label: '#334155',\r\n    text: '#0F172A',\r\n    subtle: '#64748B',\r\n    focus: '#2563EB',\r\n};\r\nconst dark = {\r\n    bg: 'linear-gradient(135deg,#1E293B 0%,#0F172A 100%)',\r\n    panel: '#1E293B',\r\n    border: '#334155',\r\n    label: '#CBD5E1',\r\n    text: '#F1F5F9',\r\n    subtle: '#94A3B8',\r\n    focus: '#3B82F6',\r\n};\r\n\r\nfunction useColourMode() {\r\n    if (typeof document === 'undefined') return { isDark:false, c: light };\r\n    const darkMode = document.documentElement.classList.contains('dark');\r\n    return { isDark: darkMode, c: darkMode ? dark : light };\r\n}\r\n\r\ninterface BudgetStepProps {\r\n    budgetRequired: string;\r\n    setBudgetRequired: (v: string) => void;\r\n    budgetAmount: string;\r\n    setBudgetAmount: (v: string) => void;\r\n    threshold: string;\r\n    setThreshold: (v: string) => void;\r\n    notifyUsers: string;\r\n    setNotifyUsers: (v: string) => void;\r\n}\r\n\r\nconst BudgetStep: React.FC<BudgetStepProps> = ({\r\n    budgetRequired,\r\n    setBudgetRequired,\r\n    budgetAmount,\r\n    setBudgetAmount,\r\n    threshold,\r\n    setThreshold,\r\n    notifyUsers,\r\n    setNotifyUsers\r\n}) => {\r\n    // Call hook first (must not be conditional)\r\n    const { c } = useColourMode();\r\n    // Local-only visibility guard: hide entirely in hosted/prod environments\r\n    const isLocal = (typeof window !== 'undefined') && (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1');\r\n    if (!isLocal) return null; // Hidden in production\r\n    const fieldStyle: React.CSSProperties = {\r\n        background: c.panel,\r\n        border: `1px solid ${c.border}`,\r\n        borderRadius: 10,\r\n        boxShadow: c === light ? '0 4px 6px rgba(0,0,0,0.07)' : '0 4px 6px rgba(0,0,0,0.3)',\r\n        padding: '14px 16px',\r\n        position: 'relative'\r\n    };\r\n    const labelStyle: React.CSSProperties = {\r\n        fontSize: 12,\r\n        fontWeight: 600,\r\n        letterSpacing: '.5px',\r\n        textTransform: 'uppercase',\r\n        color: c.label,\r\n        marginBottom: 6,\r\n    };\r\n    const inlineRow: React.CSSProperties = {\r\n        display: 'flex',\r\n        gap: 12,\r\n        flexWrap: 'wrap'\r\n    };\r\n    return (\r\n        <div style={{ display:'flex', flexDirection:'column', gap:16, background:c.bg, padding:16, borderRadius:12, border:`1px solid ${c.border}`, position:'relative' }}>\r\n            <div style={{position:'absolute', top:4, right:8, background:'#DB2777', color:'#FFF', fontSize:11, fontWeight:600, padding:'2px 8px', borderRadius:6, letterSpacing:'.5px', boxShadow:'0 2px 4px rgba(0,0,0,0.15)'}}>LOCAL ONLY</div>\r\n            <div style={fieldStyle}>\r\n                <div style={labelStyle}>Matter Budget Required?</div>\r\n                <ModernMultiSelect\r\n                    label={''}\r\n                    options={[{ key: 'Yes', text: 'Yes' }, { key: 'No', text: 'No' }]}\r\n                    selectedValue={budgetRequired}\r\n                    onSelectionChange={setBudgetRequired}\r\n                    variant=\"default\"\r\n                />\r\n            </div>\r\n            {budgetRequired === 'Yes' && (\r\n                <div style={inlineRow}>\r\n                    <div style={{ ...fieldStyle, flex: '1 1 180px' }}>\r\n                        <div style={labelStyle}>Budget Amount</div>\r\n                        <TextField\r\n                            styles={{ fieldGroup:{ border:'none', background:'transparent' }, field:{ fontWeight:600 } }}\r\n                            prefix=\"£\"\r\n                            value={budgetAmount}\r\n                            onChange={(_, v) => setBudgetAmount(v || '')}\r\n                        />\r\n                    </div>\r\n                    <div style={{ ...fieldStyle, flex: '1 1 160px' }}>\r\n                        <div style={labelStyle}>Notify At</div>\r\n                        <TextField\r\n                            styles={{ fieldGroup:{ border:'none', background:'transparent' }, field:{ fontWeight:600 } }}\r\n                            suffix=\"%\"\r\n                            value={threshold}\r\n                            onChange={(_, v) => setThreshold(v || '')}\r\n                        />\r\n                    </div>\r\n                    <div style={{ ...fieldStyle, flex: '2 1 260px' }}>\r\n                        <div style={labelStyle}>Notify Users</div>\r\n                        <TextField\r\n                            styles={{ fieldGroup:{ border:'none', background:'transparent' } }}\r\n                            placeholder=\"emails separated by commas\"\r\n                            value={notifyUsers}\r\n                            onChange={(_, v) => setNotifyUsers(v || '')}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BudgetStep;\r\n\r\n","//\r\nimport React, { createContext, useContext, useState, ReactNode } from 'react'; // invisible change\r\n// invisible change 2.2\r\n\r\ninterface CompletionState {\r\n    summaryComplete: boolean;\r\n    setSummaryComplete: (done: boolean) => void;\r\n}\r\n\r\nconst CompletionContext = createContext<CompletionState | undefined>(undefined);\r\n\r\nexport const useCompletion = () => {\r\n    const ctx = useContext(CompletionContext);\r\n    if (!ctx) throw new Error('useCompletion must be used within CompletionProvider');\r\n    return ctx;\r\n};\r\n\r\nexport const CompletionProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n    const [summaryComplete, setSummaryCompleteState] = useState(false);\r\n    const setSummaryComplete = (done: boolean) => {\r\n        setSummaryCompleteState(done);\r\n    };\r\n    return (\r\n        <CompletionContext.Provider value={{ summaryComplete, setSummaryComplete }}>\r\n            {children}\r\n        </CompletionContext.Provider>\r\n    );\r\n};","var _path, _path2;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgCcl(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6 2h9l5 5v15a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2z\",\n    fill: \"#004578\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14 2v5h5\",\n    fill: \"#fff\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCcl);\nexport default __webpack_public_path__ + \"static/media/ccl.e664dfc917752f8226cb17119f739838.svg\";\nexport { ForwardRef as ReactComponent };","import { ProcessingStep } from './ProcessingSection';\r\nimport activeIcon from '../../../assets/activecampaign.svg';\r\nimport clioIcon from '../../../assets/clio.svg';\r\nimport asanaIcon from '../../../assets/asana.svg';\r\nimport cclIcon from '../../../assets/ccl.svg';\r\nimport netdocsIcon from '../../../assets/netdocuments.svg';\r\nimport helixBlueMark from '../../../assets/dark blue mark.svg';\r\n\r\n// locally cached values so refresh endpoints can be called in sequence\r\nlet acToken = '';\r\nlet clioClientId = '';\r\nlet clioClientSecret = '';\r\nlet clioRefreshToken = '';\r\nlet asanaClientId = '';\r\nlet asanaSecret = '';\r\nlet asanaRefreshToken = '';\r\nlet opponentId = '';\r\nlet solicitorId = '';\r\nlet clioContactIds: string[] = [];\r\nlet clioCompanyId: string | null = null;\r\nlet clientIdCallback: ((id: string | null) => void) | null = null;\r\nlet matterId: string | null = null;\r\nlet matterIdCallback: ((id: string | null) => void) | null = null;\r\n\r\nexport function registerClientIdCallback(cb: ((id: string | null) => void) | null) {\r\n    clientIdCallback = cb;\r\n}\r\n\r\nexport function registerMatterIdCallback(cb: ((id: string | null) => void) | null) {\r\n    matterIdCallback = cb;\r\n}\r\n\r\nexport interface ProcessingResult {\r\n    message: string;\r\n    url?: string;\r\n}\r\n\r\nexport interface ProcessingAction {\r\n    label: string;\r\n    icon?: string;\r\n    run: (\r\n        formData: Record<string, any>,\r\n        userInitials: string,\r\n        userData?: any[] | null\r\n    ) => Promise<string | ProcessingResult>;\r\n}\r\n\r\n// Lightweight operation observer for admin/local dev diagnostics\r\nexport type OperationObserverEvent = {\r\n    index: number; // current action index set by caller\r\n    label: string;\r\n    phase: 'sent' | 'response' | 'success' | 'error';\r\n    url?: string;\r\n    method?: string;\r\n    status?: number;\r\n    payloadSummary?: string;\r\n    responseSummary?: string;\r\n};\r\n\r\nlet operationObserver: ((e: OperationObserverEvent) => void) | null = null;\r\nexport function registerOperationObserver(cb: ((e: OperationObserverEvent) => void) | null) {\r\n    operationObserver = cb;\r\n}\r\n\r\n// The current action index is set by the caller (simulateProcessing)\r\nlet currentActionIndex = -1;\r\nexport function setCurrentActionIndex(i: number) {\r\n    currentActionIndex = i;\r\n}\r\n\r\n// Helper to keep requests observable without leaking sensitive bodies by default\r\nasync function instrumentedFetch(\r\n    label: string,\r\n    url: string,\r\n    options: RequestInit = {},\r\n    payloadForSummary?: unknown\r\n): Promise<Response> {\r\n    try {\r\n        if (operationObserver) {\r\n            const method = (options.method || 'GET').toString().toUpperCase();\r\n            const payloadSummary = payloadForSummary ? summarize(payloadForSummary) : undefined;\r\n            operationObserver({ index: currentActionIndex, label, phase: 'sent', url, method, payloadSummary });\r\n        }\r\n    } catch {}\r\n    const resp = await fetch(url, options);\r\n    try {\r\n        if (operationObserver) {\r\n            operationObserver({ index: currentActionIndex, label, phase: 'response', url, method: (options.method || 'GET').toString().toUpperCase(), status: resp.status });\r\n        }\r\n    } catch {}\r\n    if (!resp.ok) {\r\n        // On failure, include payload + response snippet\r\n        let respText = '';\r\n        try { respText = await resp.clone().text(); } catch {}\r\n        try {\r\n            if (operationObserver) {\r\n                operationObserver({\r\n                    index: currentActionIndex,\r\n                    label,\r\n                    phase: 'error',\r\n                    url,\r\n                    method: (options.method || 'GET').toString().toUpperCase(),\r\n                    status: resp.status,\r\n                    payloadSummary: payloadForSummary ? summarize(payloadForSummary) : undefined,\r\n                    responseSummary: truncate(respText, 400)\r\n                });\r\n            }\r\n        } catch {}\r\n    } else {\r\n        try {\r\n            if (operationObserver) {\r\n                operationObserver({ index: currentActionIndex, label, phase: 'success', url, method: (options.method || 'GET').toString().toUpperCase(), status: resp.status });\r\n            }\r\n        } catch {}\r\n    }\r\n    return resp;\r\n}\r\n\r\nfunction summarize(obj: unknown): string {\r\n    try {\r\n        return truncate(JSON.stringify(obj, (_k, v) => (typeof v === 'string' && v.length > 200 ? v.slice(0, 200) + '…' : v), 2), 600);\r\n    } catch {\r\n        return '[unserializable payload]';\r\n    }\r\n}\r\n\r\nfunction truncate(text: string, max = 600): string {\r\n    if (!text) return '';\r\n    return text.length > max ? text.slice(0, max) + '…' : text;\r\n}\r\n\r\nexport const processingActions: ProcessingAction[] = [\r\n    {\r\n        label: 'Retrieve ActiveCampaign Token',\r\n        icon: activeIcon,\r\n        run: async () => {\r\n            const res = await instrumentedFetch('Retrieve ActiveCampaign Token', '/api/keys/ac-automations-apitoken');\r\n            if (!res.ok) throw new Error('Failed to fetch secret');\r\n            const data = await res.json();\r\n            acToken = data.value;\r\n            return 'Token retrieved';\r\n        }\r\n    },\r\n    {\r\n        label: 'Refresh ActiveCampaign Token',\r\n        icon: activeIcon,\r\n        run: async () => {\r\n            const resp = await instrumentedFetch('Refresh ActiveCampaign Token', '/api/refresh/activecampaign', { method: 'POST' });\r\n            if (!resp.ok) throw new Error('ActiveCampaign token refresh failed');\r\n            return 'Token refreshed';\r\n        }\r\n    },\r\n    {\r\n        label: 'Retrieve Clio Client ID',\r\n        icon: clioIcon,\r\n        run: async (_form, initials) => {\r\n            const res = await instrumentedFetch('Retrieve Clio Client ID', `/api/keys/${initials.toLowerCase()}-clio-v1-clientid`);\r\n            if (!res.ok) throw new Error('Failed to fetch secret');\r\n            const data = await res.json();\r\n            clioClientId = data.value;\r\n            return 'Client ID retrieved';\r\n        }\r\n    },\r\n    {\r\n        label: 'Retrieve Clio Client Secret',\r\n        icon: clioIcon,\r\n        run: async (_form, initials) => {\r\n            const res = await instrumentedFetch('Retrieve Clio Client Secret', `/api/keys/${initials.toLowerCase()}-clio-v1-clientsecret`);\r\n            if (!res.ok) throw new Error('Failed to fetch secret');\r\n            const data = await res.json();\r\n            clioClientSecret = data.value;\r\n            return 'Client Secret retrieved';\r\n        }\r\n    },\r\n    {\r\n        label: 'Retrieve Clio Refresh Token',\r\n        icon: clioIcon,\r\n        run: async (_form, initials) => {\r\n            const res = await instrumentedFetch('Retrieve Clio Refresh Token', `/api/keys/${initials.toLowerCase()}-clio-v1-refreshtoken`);\r\n            if (!res.ok) throw new Error('Failed to fetch secret');\r\n            const data = await res.json();\r\n            clioRefreshToken = data.value;\r\n            return 'Refresh Token retrieved';\r\n        }\r\n    },\r\n    {\r\n        label: 'Refresh Clio Access Token',\r\n        icon: clioIcon,\r\n        run: async (_form, initials) => {\r\n            const resp = await instrumentedFetch('Refresh Clio Access Token', `/api/refresh/clio/${initials.toLowerCase()}`, {\r\n                method: 'POST'\r\n            });\r\n            if (!resp.ok) throw new Error('Clio token refresh failed');\r\n            return 'Access token refreshed';\r\n        }\r\n    },\r\n    {\r\n        label: 'Retrieve Asana Client ID',\r\n        icon: asanaIcon,\r\n        run: async (_form, _i, userData) => {\r\n            const id = userData?.[0]?.ASANAClientID || userData?.[0]?.ASANAClient_ID;\r\n            if (!id) {\r\n                console.warn('⚠️ [processingActions] Asana Client ID missing from user profile');\r\n                throw new Error('Asana Client ID missing from user profile. Please contact support to configure Asana integration.');\r\n            }\r\n            asanaClientId = id;\r\n            return 'Client ID retrieved';\r\n        }\r\n    },\r\n    {\r\n        label: 'Retrieve Asana Secret',\r\n        icon: asanaIcon,\r\n        run: async (_form, _i, userData) => {\r\n            const secret = userData?.[0]?.ASANASecret || userData?.[0]?.ASANA_Secret;\r\n            if (!secret) {\r\n                console.warn('⚠️ [processingActions] Asana Secret missing from user profile');\r\n                throw new Error('Asana Secret missing from user profile. Please contact support to configure Asana integration.');\r\n            }\r\n            asanaSecret = secret;\r\n            return 'Secret retrieved';\r\n        }\r\n    },\r\n    {\r\n        label: 'Retrieve Asana Refresh Token',\r\n        icon: asanaIcon,\r\n        run: async (_form, _i, userData) => {\r\n            const token = userData?.[0]?.ASANARefreshToken || userData?.[0]?.ASANARefresh_Token;\r\n            if (!token) {\r\n                console.warn('⚠️ [processingActions] Asana Refresh Token missing from user profile');\r\n                throw new Error('Asana Refresh Token missing from user profile. Please contact support to configure Asana integration.');\r\n            }\r\n            asanaRefreshToken = token;\r\n            return 'Refresh Token retrieved';\r\n        }\r\n    },\r\n    {\r\n        label: 'Refresh Asana Access Token',\r\n        icon: asanaIcon,\r\n        run: async () => {\r\n            const payload = { clientId: asanaClientId, clientSecret: asanaSecret, refreshToken: asanaRefreshToken };\r\n            const resp = await instrumentedFetch('Refresh Asana Access Token', '/api/refresh/asana', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(payload)\r\n            }, payload);\r\n            if (!resp.ok) throw new Error('Asana token refresh failed');\r\n            return 'Access token refreshed';\r\n        }\r\n    },\r\n    {\r\n        label: 'Opponent Details Updated',\r\n        icon: clioIcon,\r\n        run: async (formData, userInitials) => {\r\n            const payload = {\r\n                opponent: formData.opponent_details?.opponent || null,\r\n                solicitor: formData.opponent_details?.solicitor || null,\r\n                createdBy: userInitials\r\n            };\r\n\r\n            const resp = await instrumentedFetch('Opponent Details Updated', '/api/opponents', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(payload)\r\n            }, payload);\r\n\r\n            if (!resp.ok) throw new Error('Failed to update opponent details');\r\n            const data = await resp.json();\r\n            opponentId = data.opponentId || '';\r\n            solicitorId = data.solicitorId || '';\r\n            return 'Opponent details updated';\r\n        }\r\n    },\r\n    {\r\n        label: 'Matter Request Created',\r\n        icon: clioIcon,\r\n        run: async (formData, userInitials) => {\r\n            const payload = {\r\n                instructionRef: formData.matter_details?.instruction_ref || null,\r\n                clientType: formData.matter_details?.client_type || null,\r\n                description: formData.matter_details?.description || null,\r\n                practiceArea: formData.matter_details?.practice_area || null,\r\n                value: formData.matter_details?.dispute_value || null,\r\n                budgetRequired: formData.matter_details?.budget_required || null,\r\n                budgetAmount: formData.matter_details?.budget_amount || null,\r\n                budgetNotifyThreshold: formData.matter_details?.budget_notify_threshold || null,\r\n                budgetNotifyUsers: formData.matter_details?.budget_notify_users || null,\r\n                responsibleSolicitor: formData.team_assignments?.fee_earner || null,\r\n                originatingSolicitor: formData.team_assignments?.originating_solicitor || null,\r\n                supervisingPartner: formData.team_assignments?.supervising_partner || null,\r\n                source: formData.source_details?.source || null,\r\n                referrer: formData.source_details?.referrer_name || null,\r\n                opponentId: opponentId || null,\r\n                solicitorId: solicitorId || null,\r\n                createdBy: userInitials\r\n                // MatterID is excluded\r\n            };\r\n\r\n            const resp = await instrumentedFetch('Matter Request Created', '/api/matter-requests', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(payload)\r\n            }, payload);\r\n\r\n            if (!resp.ok) throw new Error('Failed to record matter request');\r\n            const data = await resp.json();\r\n            return data.message || 'Matter request recorded; further IDs will be patched in later steps';\r\n        }\r\n    },\r\n\r\n    { label: 'Contact Created/Updated', icon: activeIcon, run: async () => 'Done' },\r\n    { label: 'Databases Updated', icon: helixBlueMark, run: async () => 'Done' },\r\n    {\r\n        label: 'Clio Contact Created/Updated',\r\n        icon: clioIcon,\r\n        run: async (formData, userInitials) => {\r\n            const payload = { formData, initials: userInitials };\r\n            const resp = await instrumentedFetch('Clio Contact Created/Updated', '/api/clio-contacts', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(payload)\r\n            }, payload);\r\n            if (!resp.ok) throw new Error('Failed to sync Clio contact');\r\n            const data = await resp.json();\r\n            if (!data.ok) throw new Error(data.error || 'Failed to sync Clio contact');\r\n            const names: string[] = [];\r\n            let emptyTotal = 0;\r\n            clioContactIds = [];\r\n            clioCompanyId = null;\r\n            (data.results || []).forEach((r: any) => {\r\n                const attrs = r.data?.attributes || {};\r\n                const id = r.data?.id;\r\n                if (typeof r.emptyFieldCount === 'number') {\r\n                    emptyTotal += r.emptyFieldCount;\r\n                }\r\n                if (id) {\r\n                    clioContactIds.push(String(id));\r\n                }\r\n                if (r.data?.type === 'Company') {\r\n                    clioCompanyId = String(id);\r\n                }\r\n                if (attrs.first_name || attrs.last_name) {\r\n                    names.push(`${attrs.first_name || ''} ${attrs.last_name || ''}`.trim());\r\n                } else if (attrs.name) {\r\n                    names.push(attrs.name);\r\n                }\r\n            });\r\n            const person = (data.results || []).find((r: any) => r.data?.type === 'Person');\r\n            const newId = person?.data?.id ? String(person.data.id) : null;\r\n            if (newId && clientIdCallback) {\r\n                clientIdCallback(newId);\r\n            }\r\n            return `Clio contacts synced: ${names.join(', ')} (${emptyTotal} empty fields)`;\r\n        }\r\n    },\r\n    { label: 'NetDocument Workspace Triggered', icon: netdocsIcon, run: async () => 'Done' },\r\n    { label: 'Databases Updated', icon: helixBlueMark, run: async () => 'Done' },\r\n    {\r\n        label: 'Clio Matter Opened',\r\n        icon: clioIcon,\r\n        run: async (formData, userInitials) => {\r\n            const payload = { formData, initials: userInitials, contactIds: clioContactIds, companyId: clioCompanyId };\r\n            const resp = await instrumentedFetch('Clio Matter Opened', '/api/clio-matters', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(payload)\r\n            }, payload);\r\n            if (!resp.ok) throw new Error('Failed to create Clio matter');\r\n            const data = await resp.json();\r\n            if (!data.ok) throw new Error(data.error || 'Failed to create Clio matter');\r\n            const id = data.matterId || data.matter?.id || null;\r\n            matterId = id ? String(id) : null;\r\n            if (matterId && matterIdCallback) matterIdCallback(matterId);\r\n            return `Matter created with ID ${matterId}`;\r\n        }\r\n    },\r\n    {\r\n        label: 'Instructions Database Synced',\r\n        icon: helixBlueMark,\r\n        run: async (formData, userInitials) => {\r\n            const instructionRef = formData.matter_details?.instruction_ref;\r\n            const clientId = clioContactIds[0]; // Use first contact ID (main client)\r\n            \r\n            if (!instructionRef) {\r\n                console.warn('No instruction reference available for sync');\r\n                return 'Skipped - no instruction reference';\r\n            }\r\n            \r\n            if (!clientId) {\r\n                console.warn('No client ID available for sync');\r\n                return 'Skipped - no client ID';\r\n            }\r\n            \r\n            const payload = {\r\n                instructionRef,\r\n                clientId,\r\n                matterId: matterId || null\r\n            };\r\n            \r\n            const resp = await instrumentedFetch('Instructions Database Synced', '/api/sync-instruction-client/link-client', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(payload)\r\n            }, payload);\r\n            \r\n            if (!resp.ok) {\r\n                const errorText = await resp.text();\r\n                throw new Error(`Failed to sync Instructions database: ${errorText}`);\r\n            }\r\n            \r\n            const data = await resp.json();\r\n            return `Instructions table updated with Client ID ${clientId}${matterId ? ` and Matter ID ${matterId}` : ''}`;\r\n        }\r\n    }\r\n];\r\n\r\nexport const generateDraftCclAction: ProcessingAction = {\r\n    label: 'Generate Draft CCL',\r\n    icon: cclIcon,\r\n    run: async (formData, _initials) => {\r\n        const id = matterId || formData.matter_details.matter_ref;\r\n        const payload = { matterId: id, draftJson: formData };\r\n        const resp = await instrumentedFetch('Generate Draft CCL', '/api/ccl', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(payload)\r\n        }, payload);\r\n        if (!resp.ok) throw new Error('CCL generation failed');\r\n        const { url } = await resp.json();\r\n        return { message: 'Draft CCL created', url };\r\n    }\r\n};\r\n// invisible change 2.2\r\n\r\nexport const initialSteps: ProcessingStep[] = processingActions.map(action => ({\r\n    label: action.label,\r\n    status: 'pending',\r\n    icon: action.icon\r\n}));","//\r\nimport React, { useState, useEffect, useMemo, useRef } from 'react'; // invisible change\r\n// invisible change 2.2\r\nimport { Stack, PrimaryButton, Dialog, DialogType, DialogFooter, DefaultButton } from '@fluentui/react';\r\nimport MinimalSearchBox from './MinimalSearchBox';\r\nimport { POID, TeamData, UserData, InstructionData } from '../../../app/functionality/types';\r\nimport ClientDetails from '../ClientDetails';\r\nimport ClientHub from '../ClientHub';\r\nimport StepWrapper from './StepWrapper';\r\nimport '../../../app/styles/NewMatters.css';\r\nimport '../../../app/styles/MatterOpeningCard.css';\r\nimport {\r\n    practiceAreasByArea,\r\n    getGroupColor,\r\n    partnerOptions as defaultPartners,\r\n} from './config';\r\nimport localTeamDataJson from '../../../localData/team-sql-data.json';\r\nimport teamData from '../../../localData/team-sql-data.json';\r\n\r\nimport ClientInfoStep from './ClientInfoStep';\r\nimport PoidSelectionStep from './PoidSelectionStep';\r\nimport AreaOfWorkStep from './AreaOfWorkStep';\r\nimport PracticeAreaStep from './PracticeAreaStep';\r\nimport DescriptionStep from './DescriptionStep';\r\nimport FolderStructureStep from './FolderStructureStep';\r\nimport ValueAndSourceStep from './ValueAndSourceStep';\r\nimport SourceStep from './SourceStep';\r\nimport OpponentDetailsStep from './OpponentDetailsStep';\r\nimport ModernMultiSelect from './ModernMultiSelect';\r\nimport BudgetStep from './BudgetStep';\r\n\r\nimport { CompletionProvider } from './CompletionContext';\r\nimport ProcessingSection, { ProcessingStep } from './ProcessingSection';\r\nimport { processingActions, initialSteps, registerClientIdCallback, registerMatterIdCallback, registerOperationObserver, setCurrentActionIndex } from './processingActions';\r\nimport idVerifications from '../../../localData/localIdVerifications.json';\r\nimport { sharedPrimaryButtonStyles, sharedDefaultButtonStyles } from '../../../app/styles/ButtonStyles';\r\nimport { clearMatterOpeningDraft, completeMatterOpening } from '../../../app/functionality/matterOpeningUtils';\r\n\r\n// Local implementation of useDraftedState for draft persistence\r\nfunction useDraftedState<T>(key: string, initialValue: T): [T, React.Dispatch<React.SetStateAction<T>>] {\r\n    const storageKey = `matterOpeningDraft_${key}`;\r\n    const [state, setState] = useState<T>(() => {\r\n        try {\r\n            const item = localStorage.getItem(storageKey);\r\n            if (!item) return initialValue;\r\n            const parsed = JSON.parse(item);\r\n            // Special handling for selectedDate: convert string to Date\r\n            if (key === 'selectedDate') {\r\n                if (parsed === null) return null as any;\r\n                if (typeof parsed === 'string' || typeof parsed === 'number') {\r\n                    const d = new Date(parsed);\r\n                    return isNaN(d.getTime()) ? initialValue : (d as any);\r\n                }\r\n            }\r\n            return parsed;\r\n        } catch {\r\n            return initialValue;\r\n        }\r\n    });\r\n    useEffect(() => {\r\n        try {\r\n            // For selectedDate, store as ISO string\r\n            if (key === 'selectedDate' && state instanceof Date) {\r\n                localStorage.setItem(storageKey, JSON.stringify(state.toISOString()));\r\n            } else {\r\n                localStorage.setItem(storageKey, JSON.stringify(state));\r\n            }\r\n        } catch {}\r\n    }, [state, storageKey]);\r\n    return [state, setState];\r\n}\r\n\r\ninterface FlatMatterOpeningProps {\r\n    poidData?: POID[];\r\n    setPoidData: React.Dispatch<React.SetStateAction<POID[]>>;\r\n    teamData?: TeamData[] | null;\r\n    userInitials: string;\r\n    userData?: UserData[] | null;\r\n    instructionRef?: string;\r\n    clientId?: string;\r\n    feeEarner?: string;\r\n    stage?: string;\r\n    matterRef?: string;\r\n    hideClientSections?: boolean;\r\n    initialClientType?: string;\r\n    preselectedPoidIds?: string[];\r\n    instructionPhone?: string;\r\n    /**\r\n     * Preferred source for Select Client cards: pass records directly from the\r\n     * new Instructions DB (instructions table). When provided, the Select Client\r\n     * grid will be sourced exclusively from these records (mapped to POID shape),\r\n     * while legacy POID/idVerification fallback remains available for other flows.\r\n     */\r\n    instructionRecords?: unknown[];\r\n    /**\r\n     * Optional callback triggered when the user chooses to draft the CCL\r\n     * immediately after opening the matter.\r\n     */\r\n    onDraftCclNow?: (matterId: string) => void;\r\n}\r\n\r\nconst FlatMatterOpening: React.FC<FlatMatterOpeningProps> = ({\r\n\r\n    poidData,\r\n    setPoidData,\r\n    teamData,\r\n    userInitials,\r\n    userData,\r\n    instructionRef = '',\r\n    clientId: initialClientId = '',\r\n    feeEarner,\r\n    stage = 'New Matter',\r\n    matterRef,\r\n    hideClientSections = false,\r\n    initialClientType = '',\r\n    preselectedPoidIds = [],\r\n    instructionPhone,\r\n    instructionRecords,\r\n    onDraftCclNow,\r\n}) => {\r\n    const idExpiry = useMemo(() => {\r\n        const d = new Date();\r\n        d.setDate(d.getDate() + 30);\r\n        return d.toLocaleDateString('en-GB');\r\n    }, []); // invisible change\r\n\r\n    const [clientId, setClientId] = useState<string | null>(initialClientId || null);\r\n    const [matterIdState, setMatterIdState] = useState<string | null>(matterRef || null);\r\n    // Meta chip expansion state (date/user detail panel)\r\n    const [openMeta, setOpenMeta] = useState<'date' | 'user' | null>(null);\r\n    useEffect(() => {\r\n        registerClientIdCallback(setClientId);\r\n        registerMatterIdCallback((id) => {\r\n            setMatterIdState(id);\r\n            setOpenedMatterId(id);\r\n        });\r\n        return () => {\r\n            registerClientIdCallback(null);\r\n            registerMatterIdCallback(null);\r\n        };\r\n    }, []);\r\n\r\n    const showPoidSelection = !instructionRef;\r\n    const defaultPoidData: POID[] = useMemo(() => {\r\n        // Step A: Build a robust POID list from provided poidData (preferred) or legacy idVerifications\r\n        const basePoids = ((poidData && poidData.length > 0)\r\n            ? poidData\r\n            : (idVerifications as any[]).map((v) => ({\r\n                poid_id: String(v.InternalId),\r\n                first: v.FirstName,\r\n                last: v.LastName,\r\n                email: v.Email,\r\n                best_number: (v as any).Phone || '',\r\n                nationality: v.Nationality,\r\n                nationality_iso: v.NationalityAlpha2,\r\n                date_of_birth: v.DOB,\r\n                passport_number: v.PassportNumber,\r\n                drivers_license_number: v.DriversLicenseNumber,\r\n                house_building_number: v.HouseNumber,\r\n                street: v.Street,\r\n                city: v.City,\r\n                county: v.County,\r\n                post_code: v.Postcode,\r\n                country: v.Country,\r\n                country_code: v.CountryCode,\r\n                company_name: v.company_name || v.CompanyName,\r\n                company_number: v.company_number || v.CompanyNumber,\r\n                company_house_building_number: v.company_house_building_number || v.CompanyHouseNumber,\r\n                company_street: v.company_street || v.CompanyStreet,\r\n                company_city: v.company_city || v.CompanyCity,\r\n                company_county: v.company_county || v.CompanyCounty,\r\n                company_post_code: v.company_post_code || v.CompanyPostcode,\r\n                company_country: v.company_country || v.CompanyCountry,\r\n                company_country_code: v.company_country_code || v.CompanyCountryCode,\r\n                // Electronic ID verification fields\r\n                stage: v.stage,\r\n                check_result: v.EIDOverallResult,\r\n                pep_sanctions_result: v.PEPAndSanctionsCheckResult,\r\n                address_verification_result: v.AddressVerificationResult,\r\n                check_expiry: v.CheckExpiry,\r\n                check_id: v.EIDCheckId,\r\n                poc: v.poc,\r\n                prefix: v.prefix,\r\n                type: v.type,\r\n                client_id: v.ClientId,\r\n                matter_id: v.MatterId,\r\n                InstructionRef: v.InstructionRef,\r\n            }))\r\n        ) as POID[];\r\n\r\n        // Index basePoids by common join keys for quick lookup\r\n        const byEmail = new Map<string, POID>();\r\n        const byInstRef = new Map<string, POID[]>();\r\n        basePoids.forEach((p) => {\r\n            const emailKey = (p.email || (p as any).Email || '').toLowerCase();\r\n            if (emailKey) byEmail.set(emailKey, p);\r\n            const inst = (p as any).InstructionRef || (p as any).instruction_ref;\r\n            if (inst) {\r\n                const arr = byInstRef.get(String(inst)) || [];\r\n                arr.push(p);\r\n                byInstRef.set(String(inst), arr);\r\n            }\r\n        });\r\n\r\n        // Step B: If instruction records provided, merge additional metadata onto matching basePoids\r\n        if (Array.isArray(instructionRecords) && instructionRecords.length > 0) {\r\n            const merged: POID[] = [];\r\n            (instructionRecords as any[]).forEach((inst) => {\r\n                const instRef = String(inst.InstructionRef || '');\r\n                const emailKey = String(inst.Email || '').toLowerCase();\r\n                // Prefer match by InstructionRef, fall back to email\r\n                let match: POID | undefined = undefined;\r\n                if (instRef && byInstRef.has(instRef)) {\r\n                    // If multiple, pick the one that also matches email when available\r\n                    const candidates = byInstRef.get(instRef)!;\r\n                    match = emailKey ? candidates.find(c => (c.email || '').toLowerCase() === emailKey) || candidates[0] : candidates[0];\r\n                } else if (emailKey) {\r\n                    match = byEmail.get(emailKey);\r\n                }\r\n\r\n                if (match) {\r\n                    // Attach extra fields from instruction to the matched POID (without changing poid_id)\r\n                    merged.push({\r\n                        ...match,\r\n                        InstructionRef: instRef || (match as any).InstructionRef,\r\n                        best_number: match.best_number || inst.Phone,\r\n                        company_name: match.company_name || inst.CompanyName,\r\n                        company_number: match.company_number || inst.CompanyNumber,\r\n                        // Include verification fields from instruction if not present in matched POID\r\n                        check_result: match.check_result || inst.EIDOverallResult,\r\n                        pep_sanctions_result: match.pep_sanctions_result || inst.PEPAndSanctionsCheckResult,\r\n                        address_verification_result: match.address_verification_result || inst.AddressVerificationResult,\r\n                    } as POID);\r\n                } else {\r\n                    // No match in basePoids – include a minimal record for UI visibility (won't be preselected)\r\n                    merged.push({\r\n                        poid_id: String(instRef || inst.id || emailKey || `${inst.FirstName || ''}|${inst.LastName || ''}`),\r\n                        first: inst.FirstName,\r\n                        last: inst.LastName,\r\n                        email: inst.Email,\r\n                        best_number: inst.Phone,\r\n                        company_name: inst.CompanyName,\r\n                        company_number: inst.CompanyNumber,\r\n                        InstructionRef: instRef,\r\n                        // Include verification fields from instruction record\r\n                        check_result: inst.EIDOverallResult,\r\n                        pep_sanctions_result: inst.PEPAndSanctionsCheckResult,\r\n                        address_verification_result: inst.AddressVerificationResult,\r\n                    } as POID);\r\n                }\r\n            });\r\n\r\n            // Deduplicate: prefer entries that have a real numeric poid_id (from basePoids)\r\n            const byKey = new Map<string, POID>();\r\n            merged.concat(basePoids).forEach((p) => {\r\n                const key = String(p.poid_id || (p.email || '').toLowerCase());\r\n                const existing = byKey.get(key);\r\n                if (!existing) {\r\n                    byKey.set(key, p);\r\n                    return;\r\n                }\r\n                // If one of them has more person/company detail, keep the richer one\r\n                const richness = (x: POID) => `${x.first || ''}${x.last || ''}${x.company_name || ''}`.length;\r\n                if (richness(p) > richness(existing)) byKey.set(key, p);\r\n            });\r\n            return Array.from(byKey.values());\r\n        }\r\n\r\n        // No instructionRecords – just return basePoids with email de-duplication\r\n        const uniqueMap = new Map<string, POID>();\r\n        basePoids.forEach((p) => {\r\n            const key = (p.email || '').toLowerCase() || `${p.first?.toLowerCase() || ''}|${p.last?.toLowerCase() || ''}`;\r\n            if (!key) return;\r\n            const inst = (p as any).InstructionRef || (p as any).instruction_ref || '';\r\n            if (!uniqueMap.has(key)) {\r\n                uniqueMap.set(key, p);\r\n                return;\r\n            }\r\n            const existing = uniqueMap.get(key)!;\r\n            const existingInst = (existing as any).InstructionRef || (existing as any).instruction_ref || '';\r\n            if (instructionRef && inst === instructionRef && existingInst !== instructionRef) {\r\n                uniqueMap.set(key, p);\r\n            }\r\n        });\r\n        return Array.from(uniqueMap.values());\r\n    }, [instructionRecords, poidData, instructionRef]);\r\n    \r\n    // Filter out any invalid POID entries that might be causing issues\r\n    const validPoidData = useMemo(() => {\r\n        const preselected = new Set(preselectedPoidIds || []);\r\n        return defaultPoidData.filter((poid) => {\r\n            if (!poid) return false;\r\n            // Always allow explicitly preselected POIDs (e.g., instruction-driven/direct entries)\r\n            if (preselected.has(poid.poid_id)) return true;\r\n            // Accept either a valid person (first+last not numeric) or a company-only record\r\n            const hasPerson = Boolean(\r\n                poid.first &&\r\n                poid.last &&\r\n                isNaN(Number(poid.first)) &&\r\n                isNaN(Number(poid.last))\r\n            );\r\n            const hasCompany = Boolean(poid.company_name);\r\n            return hasPerson || hasCompany;\r\n        });\r\n    }, [defaultPoidData, preselectedPoidIds]);\r\n    \r\n    // Force use of only validated local POID data\r\n    const effectivePoidData: POID[] = validPoidData;\r\n        \r\n    // Debug logging removed\r\n\r\n    const [selectedDate, setSelectedDate] = useDraftedState<Date | null>('selectedDate', null);\r\n    // Ensure an opening date is always present (default to today on first use)\r\n    useEffect(() => {\r\n        if (!selectedDate) {\r\n            setSelectedDate(new Date());\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n    // Note: additional effect to guarantee date on step change is defined after currentStep declaration\r\n    const localTeamData = useMemo(() => localTeamDataJson, []);\r\n    // Developer Tools container removed as requested\r\n    // Restore debug inspector core state (was previously earlier in file)\r\n    const [debugInspectorOpen, setDebugInspectorOpen] = useState(false);\r\n    const [debugActiveTab, setDebugActiveTab] = useState<'json' | 'details' | 'advanced'>('json');\r\n    const [debugAdvancedOpen, setDebugAdvancedOpen] = useState(false);\r\n    const [debugManualJson, setDebugManualJson] = useState('');\r\n    // Ensure client type states exist (some logic references pendingClientType)\r\n    // Re-initialize only if not already declared above (TypeScript will error if duplicate, but patch inserts once)\r\n    // Client type selection\r\n    const [clientType, setClientType] = useDraftedState<string>('clientType', initialClientType || '');\r\n    const [pendingClientType, setPendingClientType] = useDraftedState<string>('pendingClientType', initialClientType || '');\r\n    // Core drafted form field states (restored after container removal patch)\r\n    const [selectedPoidIds, setSelectedPoidIds] = useDraftedState<string[]>('selectedPoidIds', preselectedPoidIds.length > 0 ? preselectedPoidIds : []);\r\n    const [areaOfWork, setAreaOfWork] = useDraftedState<string>('areaOfWork', '');\r\n    const [practiceArea, setPracticeArea] = useDraftedState<string>('practiceArea', '');\r\n    const [description, setDescription] = useDraftedState<string>('description', '');\r\n    const [folderStructure, setFolderStructure] = useDraftedState<string>('folderStructure', '');\r\n    const [disputeValue, setDisputeValue] = useDraftedState<string>('disputeValue', '');\r\n    const [source, setSource] = useDraftedState<string>('source', '');\r\n    const [referrerName, setReferrerName] = useDraftedState<string>('referrerName', '');\r\n    const [budgetRequired, setBudgetRequired] = useDraftedState<string>('budgetRequired', 'No');\r\n    const [budgetAmount, setBudgetAmount] = useDraftedState<string>('budgetAmount', '');\r\n    const [budgetThreshold, setBudgetThreshold] = useDraftedState<string>('budgetThreshold', '');\r\n    const [budgetNotifyUsers, setBudgetNotifyUsers] = useDraftedState<string>('budgetNotifyUsers', '');\r\n    const [opponentName, setOpponentName] = useDraftedState<string>('opponentName', '');\r\n    const [opponentEmail, setOpponentEmail] = useDraftedState<string>('opponentEmail', '');\r\n    const [opponentSolicitorName, setOpponentSolicitorName] = useDraftedState<string>('opponentSolicitorName', '');\r\n    const [opponentSolicitorCompany, setOpponentSolicitorCompany] = useDraftedState<string>('opponentSolicitorCompany', '');\r\n    const [opponentSolicitorEmail, setOpponentSolicitorEmail] = useDraftedState<string>('opponentSolicitorEmail', '');\r\n    const [noConflict, setNoConflict] = useDraftedState<boolean>('noConflict', false);\r\n    const [opponentChoiceMade, setOpponentChoiceMade] = useDraftedState<boolean>('opponentChoiceMade', false);\r\n    const [teamMember, setTeamMember] = useDraftedState<string>('teamMember', '');\r\n    const [supervisingPartner, setSupervisingPartner] = useDraftedState<string>('supervisingPartner', '');\r\n    const [originatingSolicitor, setOriginatingSolicitor] = useDraftedState<string>('originatingSolicitor', '');\r\n    // Additional restored states\r\n    const [clientAsOnFile, setClientAsOnFile] = useDraftedState<string>('clientAsOnFile', '');\r\n    const [isDateCalloutOpen, setIsDateCalloutOpen] = useState(false);\r\n    const dateButtonRef = useRef<HTMLDivElement | null>(null);\r\n    // --- Restored original team option sourcing logic (full active team) ---\r\n    const defaultPartnerOptions = defaultPartners; // fallback partner list\r\n\r\n    // helpers\r\n    const getFullName = (t: unknown): string => {\r\n        const rec = t as any;\r\n        const full = rec?.['Full Name'] || `${rec?.First || ''} ${rec?.Last || ''}`.trim();\r\n        return String(full || '').trim();\r\n    };\r\n    const getFirstName = (t: unknown): string => {\r\n        const rec = t as any;\r\n        const first = rec?.First || rec?.first;\r\n        if (first) return String(first).trim();\r\n        const full = rec?.['Full Name'] || rec?.FullName || '';\r\n        if (full) return String(full).trim().split(/\\s+/)[0] || '';\r\n        return '';\r\n    };\r\n\r\n    const activeTeam = useMemo(() => {\r\n        const dataset = (teamData ?? localTeamData) as unknown;\r\n        if (!Array.isArray(dataset)) return [] as any[];\r\n        return dataset.filter((t: any) => String(t?.status ?? t?.Status ?? '').toLowerCase() === 'active');\r\n    }, [teamData, localTeamData]);\r\n\r\n    const partnerOptionsList = useMemo(() => {\r\n        const partnersFirst = activeTeam\r\n            .filter((t: any) => String(t?.Role || '').toLowerCase() === 'partner')\r\n            .map(getFirstName)\r\n            .filter(Boolean);\r\n        if (partnersFirst.length) return partnersFirst;\r\n        const defaultFirst = (defaultPartnerOptions || [])\r\n            .map((n: string) => String(n || '').trim().split(/\\s+/)[0])\r\n            .filter(Boolean);\r\n        return defaultFirst;\r\n    }, [activeTeam, defaultPartnerOptions]);\r\n\r\n    const teamMemberOptions = useMemo(() => {\r\n        return activeTeam.map(getFullName).filter(Boolean);\r\n    }, [activeTeam]);\r\n\r\n    const solicitorOptions = useMemo(() => {\r\n        return activeTeam.map(getFullName).filter(Boolean);\r\n    }, [activeTeam]);\r\n\r\n    const defaultTeamMember = useMemo(() => {\r\n        if (activeTeam && activeTeam.length > 0) {\r\n            const found = activeTeam.find((t: any) => String(t?.Initials || '').toLowerCase() === userInitials.toLowerCase());\r\n            if (found) return getFullName(found);\r\n            return getFullName(activeTeam[0]);\r\n        }\r\n        return '';\r\n    }, [activeTeam, userInitials]);\r\n\r\n    // Ensure drafted states pick up restored defaults\r\n    useEffect(() => {\r\n        setTeamMember(prev => (prev ? prev : defaultTeamMember));\r\n        setOriginatingSolicitor(prev => (prev ? prev : defaultTeamMember));\r\n    }, [defaultTeamMember]);\r\n    const [debugManualPasteOpen, setDebugManualPasteOpen] = useState(false);\r\n    \r\n    // Workbench states\r\n    const [workbenchMode, setWorkbenchMode] = useState(false);\r\n    const [supportPanelOpen, setSupportPanelOpen] = useState(false);\r\n    const [supportMessage, setSupportMessage] = useState('');\r\n    const [supportCategory, setSupportCategory] = useState<'technical' | 'process' | 'data'>('technical');\r\n    const [supportSending, setSupportSending] = useState(false);\r\n    \r\n    // Debug states shared by unified inspector\r\n    const [debugJsonInput, setDebugJsonInput] = useState('');\r\n    const [debugValidation, setDebugValidation] = useState<{\r\n        isValid: boolean;\r\n        suggestions: string[];\r\n        warnings: string[];\r\n        predictions: { step: string; willPass: boolean; reason: string }[];\r\n    } | null>(null);\r\n    \r\n    // If preselectedPoidIds is provided, set the initial activePoid to the first matching POID\r\n    useEffect(() => {\r\n        if (preselectedPoidIds && preselectedPoidIds.length > 0 && effectivePoidData.length > 0) {\r\n            // Only set if not already set\r\n            setSelectedPoidIds((prev) => (prev.length === 0 ? preselectedPoidIds : prev));\r\n            const found = effectivePoidData.find((p) => p.poid_id === preselectedPoidIds[0]);\r\n            setActivePoid((prev) => (prev == null ? found || null : prev));\r\n        }\r\n        // Only run on mount or when preselectedPoidIds changes\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [preselectedPoidIds, effectivePoidData]);\r\n\r\n    \r\n\r\n    // Opponent fields\r\n    const [opponentTitle, setOpponentTitle] = useDraftedState<string>('opponentTitle', '');\r\n    const [opponentFirst, setOpponentFirst] = useDraftedState<string>('opponentFirst', '');\r\n    const [opponentLast, setOpponentLast] = useDraftedState<string>('opponentLast', '');\r\n    const [opponentPhone, setOpponentPhone] = useDraftedState<string>('opponentPhone', '');\r\n    const [opponentHouseNumber, setOpponentHouseNumber] = useDraftedState<string>('opponentHouseNumber', '');\r\n    const [opponentStreet, setOpponentStreet] = useDraftedState<string>('opponentStreet', '');\r\n    const [opponentCity, setOpponentCity] = useDraftedState<string>('opponentCity', '');\r\n    const [opponentCounty, setOpponentCounty] = useDraftedState<string>('opponentCounty', '');\r\n    const [opponentPostcode, setOpponentPostcode] = useDraftedState<string>('opponentPostcode', '');\r\n    const [opponentCountry, setOpponentCountry] = useDraftedState<string>('opponentCountry', '');\r\n    const [opponentHasCompany, setOpponentHasCompany] = useDraftedState<boolean>('opponentHasCompany', false);\r\n    const [opponentCompanyName, setOpponentCompanyName] = useDraftedState<string>('opponentCompanyName', '');\r\n    const [opponentCompanyNumber, setOpponentCompanyNumber] = useDraftedState<string>('opponentCompanyNumber', '');\r\n    const [opponentType, setOpponentType] = useDraftedState<string>('opponentType', '');\r\n    \r\n    // Track which opponent sections are enabled by the user\r\n    const [visibleSections] = useDraftedState<{\r\n        opponent: { company: boolean; name: boolean; contact: boolean; address: boolean; }\r\n    }>('visibleSections', {\r\n        opponent: { company: false, name: false, contact: false, address: false }\r\n    });\r\n    // Solicitor fields\r\n    const [solicitorTitle, setSolicitorTitle] = useDraftedState<string>('solicitorTitle', '');\r\n    const [solicitorFirst, setSolicitorFirst] = useDraftedState<string>('solicitorFirst', '');\r\n    const [solicitorLast, setSolicitorLast] = useDraftedState<string>('solicitorLast', '');\r\n    const [solicitorPhone, setSolicitorPhone] = useDraftedState<string>('solicitorPhone', '');\r\n    const [solicitorHouseNumber, setSolicitorHouseNumber] = useDraftedState<string>('solicitorHouseNumber', '');\r\n    const [solicitorStreet, setSolicitorStreet] = useDraftedState<string>('solicitorStreet', '');\r\n    const [solicitorCity, setSolicitorCity] = useDraftedState<string>('solicitorCity', '');\r\n    const [solicitorCounty, setSolicitorCounty] = useDraftedState<string>('solicitorCounty', '');\r\n    const [solicitorPostcode, setSolicitorPostcode] = useDraftedState<string>('solicitorPostcode', '');\r\n    const [solicitorCountry, setSolicitorCountry] = useDraftedState<string>('solicitorCountry', '');\r\n    const [solicitorCompanyNumber, setSolicitorCompanyNumber] = useDraftedState<string>('solicitorCompanyNumber', '');\r\n\r\n    // Summary review confirmation state\r\n    const [summaryConfirmed, setSummaryConfirmed] = useDraftedState<boolean>('summaryConfirmed', false);\r\n    // Acknowledgement checkbox for formal confirmation (not persisted)\r\n    const [confirmAcknowledge, setConfirmAcknowledge] = useState<boolean>(false);\r\n    // Track if edits were made after confirmation\r\n    const [editsAfterConfirmation, setEditsAfterConfirmation] = useState<boolean>(false);\r\n\r\n    // Track original values to detect user changes vs placeholders\r\n    const [originalValues] = useState(() => ({\r\n        opponentCompanyName,\r\n        opponentTitle,\r\n        opponentFirst,\r\n        opponentLast,\r\n        opponentEmail,\r\n        opponentPhone,\r\n        opponentHouseNumber,\r\n        opponentStreet,\r\n        opponentCity,\r\n        opponentCounty,\r\n        opponentPostcode,\r\n        opponentCountry,\r\n        opponentSolicitorCompany,\r\n        solicitorFirst,\r\n        solicitorLast,\r\n        opponentSolicitorEmail,\r\n        solicitorPhone,\r\n        solicitorHouseNumber,\r\n        solicitorStreet,\r\n        solicitorCity,\r\n        solicitorCounty,\r\n        solicitorPostcode,\r\n        solicitorCountry\r\n    }));\r\n\r\n    // Helper function to check if a field has been changed from its original value\r\n    const hasUserModified = (currentValue: string, originalValue: string) => {\r\n        // If field was originally empty and now contains placeholder data, it's not a user modification\r\n        if (!originalValue && currentValue && isPlaceholderData(currentValue)) {\r\n            return false;\r\n        }\r\n        return currentValue !== originalValue;\r\n    };\r\n\r\n    // Helper function to identify placeholder data patterns\r\n    const isPlaceholderData = (value: string) => {\r\n        if (!value) return false;\r\n        const trimmed = value.trim();\r\n        \r\n        // Exact matches from dummyData template\r\n        const exactPlaceholders = [\r\n            \"Mr\", \"Mrs\", \"Ms\", \"Dr\",\r\n            \"Invent\", \"Name\", \"Solicitor Name\", \"Invent Solicitor Name\",\r\n            \"opponent@helix-law.com\", \"opponentsolicitor@helix-law.com\",\r\n            \"0345 314 2044\",\r\n            \"Second Floor\", \"Britannia House, 21 Station Street\",\r\n            \"Brighton\", \"East Sussex\", \"BN1 4DE\", \"United Kingdom\",\r\n            \"Helix Law Ltd\", \"07845461\"\r\n        ];\r\n        \r\n        // Check for exact matches\r\n        if (exactPlaceholders.includes(trimmed)) {\r\n            return true;\r\n        }\r\n        \r\n        // Additional pattern-based checks for flexibility\r\n        const lower = trimmed.toLowerCase();\r\n        return (\r\n            lower.includes('placeholder') || \r\n            lower.includes('example') ||\r\n            lower.includes('test') ||\r\n            lower.includes('sample') ||\r\n            lower.includes('helix law') ||\r\n            lower.includes('helix-law.com') ||\r\n            lower.includes('invent') ||\r\n            // Combined name patterns\r\n            trimmed === 'Invent Name' ||\r\n            trimmed === 'Invent Solicitor Name' ||\r\n            // Address pattern combinations\r\n            lower.includes('station street') || \r\n            lower.includes('britannia house')\r\n        );\r\n    };\r\n\r\n    // Helper function to get field style based on whether user modified it\r\n    const getFieldStyle = (currentValue: string, originalValue: string | keyof typeof originalValues) => {\r\n        const original = typeof originalValue === 'string' ? originalValue : (originalValues[originalValue] || '');\r\n        const isModified = hasUserModified(currentValue, original);\r\n        return {\r\n            fontWeight: isModified ? 600 : 400,\r\n            fontSize: 12,\r\n            color: isModified ? '#111827' : '#9ca3af',\r\n            fontStyle: isModified ? 'normal' : 'italic'\r\n        };\r\n    };\r\n\r\n    // Canonical opponent placeholder template (must mirror OpponentDetailsStep dummyData for opponent-only fields)\r\n    const opponentPlaceholderTemplate = {\r\n        opponentCompanyName: 'Helix Law Ltd',\r\n        opponentTitle: 'Mr',\r\n        opponentFirst: 'Invent',\r\n        opponentLast: 'Name',\r\n        opponentEmail: 'opponent@helix-law.com',\r\n        opponentPhone: '0345 314 2044',\r\n        opponentHouseNumber: 'Second Floor',\r\n        opponentStreet: 'Britannia House, 21 Station Street',\r\n        opponentCity: 'Brighton',\r\n        opponentCounty: 'East Sussex',\r\n        opponentPostcode: 'BN1 4DE',\r\n        opponentCountry: 'United Kingdom'\r\n    } as const;\r\n\r\n    type OppFieldKey = keyof typeof opponentPlaceholderTemplate;\r\n\r\n    /**\r\n     * Returns list of opponent field keys whose current values constitute REAL user input (non-empty & not placeholder)\r\n     */\r\n    const getRealOpponentFieldKeys = (): OppFieldKey[] => {\r\n        const currentValues: Record<OppFieldKey, string> = {\r\n            opponentCompanyName,\r\n            opponentTitle,\r\n            opponentFirst,\r\n            opponentLast,\r\n            opponentEmail,\r\n            opponentPhone,\r\n            opponentHouseNumber,\r\n            opponentStreet,\r\n            opponentCity,\r\n            opponentCounty,\r\n            opponentPostcode,\r\n            opponentCountry\r\n        } as const;\r\n        const result: OppFieldKey[] = [];\r\n        (Object.keys(opponentPlaceholderTemplate) as OppFieldKey[]).forEach(k => {\r\n            const currentVal = (currentValues[k] || '').trim();\r\n            const placeholderVal = opponentPlaceholderTemplate[k];\r\n            if (!currentVal) return; // empty -> ignore\r\n            if (currentVal === placeholderVal) return; // unchanged placeholder\r\n            if (isPlaceholderData(currentVal)) return; // still generic placeholder pattern\r\n            result.push(k);\r\n        });\r\n        return result;\r\n    };\r\n\r\n    // Locked card styling helper\r\n    const lockCardStyle = (base: React.CSSProperties): React.CSSProperties => {\r\n        if (!summaryConfirmed) return base;\r\n        return {\r\n            ...base,\r\n            position: 'relative',\r\n            background: 'linear-gradient(135deg, #F2F5F8 0%, #E9EEF2 100%)',\r\n            border: '1px solid #cfd6de',\r\n            boxShadow: 'inset 0 0 0 999px rgba(255,255,255,0.25), 0 0 0 1px rgba(255,255,255,0.4)',\r\n            opacity: 0.9,\r\n            filter: 'saturate(0.85)',\r\n            // Subtle top accent bar\r\n            backgroundImage: 'linear-gradient(to bottom, rgba(55,65,81,0.08), rgba(55,65,81,0) 28%)'\r\n        };\r\n    };\r\n\r\n    const renderLockOverlay = () => {\r\n        if (!summaryConfirmed) return null;\r\n        return (\r\n            <div style={{\r\n                position: 'absolute',\r\n                top: 6,\r\n                right: 6,\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                gap: 4,\r\n                padding: '2px 6px',\r\n                background: 'rgba(55,65,81,0.08)',\r\n                border: '1px solid rgba(55,65,81,0.15)',\r\n                borderRadius: 6,\r\n                fontSize: 10,\r\n                fontWeight: 600,\r\n                letterSpacing: 0.5,\r\n                color: '#374151',\r\n                backdropFilter: 'blur(2px)'\r\n            }}>\r\n                <i className=\"ms-Icon ms-Icon--LockSolid\" style={{ fontSize: 12, color: '#374151' }} />\r\n                LOCKED\r\n            </div>\r\n        );\r\n    };\r\n\r\n    // Helper to reset confirmation when form fields are edited\r\n    const resetConfirmationOnEdit = () => {\r\n        if (summaryConfirmed) {\r\n            setSummaryConfirmed(false);\r\n            setConfirmAcknowledge(false);\r\n            setEditsAfterConfirmation(true);\r\n        }\r\n    };\r\n\r\n    // Wrapper functions that reset confirmation when called\r\n    const setDescriptionWithReset = (value: React.SetStateAction<string>) => {\r\n        setDescription(value);\r\n        resetConfirmationOnEdit();\r\n    };\r\n\r\n    const setAreaOfWorkWithReset = (value: React.SetStateAction<string>) => {\r\n        setAreaOfWork(value);\r\n        resetConfirmationOnEdit();\r\n    };\r\n\r\n    const setPracticeAreaWithReset = (value: React.SetStateAction<string>) => {\r\n        setPracticeArea(value);\r\n        resetConfirmationOnEdit();\r\n    };\r\n\r\n    const setFolderStructureWithReset = (value: React.SetStateAction<string>) => {\r\n        setFolderStructure(value);\r\n        resetConfirmationOnEdit();\r\n    };\r\n\r\n    const setTeamMemberWithReset = (value: React.SetStateAction<string>) => {\r\n        setTeamMember(value);\r\n        resetConfirmationOnEdit();\r\n    };\r\n\r\n    const setSupervisingPartnerWithReset = (value: React.SetStateAction<string>) => {\r\n        setSupervisingPartner(value);\r\n        resetConfirmationOnEdit();\r\n    };\r\n\r\n    const setOriginatingSolicitorWithReset = (value: React.SetStateAction<string>) => {\r\n        setOriginatingSolicitor(value);\r\n        resetConfirmationOnEdit();\r\n    };\r\n\r\n    const setSelectedDateWithReset = (value: React.SetStateAction<Date | null>) => {\r\n        setSelectedDate(value);\r\n        resetConfirmationOnEdit();\r\n    };\r\n\r\n    const setDisputeValueWithReset = (value: React.SetStateAction<string>) => {\r\n        setDisputeValue(value);\r\n        resetConfirmationOnEdit();\r\n    };\r\n\r\n    const setOpponentNameWithReset = (value: React.SetStateAction<string>) => {\r\n        setOpponentName(value);\r\n        resetConfirmationOnEdit();\r\n    };\r\n\r\n    const setOpponentEmailWithReset = (value: React.SetStateAction<string>) => {\r\n        setOpponentEmail(value);\r\n        resetConfirmationOnEdit();\r\n    };\r\n\r\n    const setOpponentSolicitorNameWithReset = (value: React.SetStateAction<string>) => {\r\n        setOpponentSolicitorName(value);\r\n        resetConfirmationOnEdit();\r\n    };\r\n\r\n    const setOpponentSolicitorCompanyWithReset = (value: React.SetStateAction<string>) => {\r\n        setOpponentSolicitorCompany(value);\r\n        resetConfirmationOnEdit();\r\n    };\r\n\r\n    const setOpponentSolicitorEmailWithReset = (value: React.SetStateAction<string>) => {\r\n        setOpponentSolicitorEmail(value);\r\n        resetConfirmationOnEdit();\r\n    };\r\n\r\n    // Processing state for matter submission\r\n    const [isProcessing, setIsProcessing] = useState(false);\r\n    // Track whether processing has been initiated to avoid duplicate Open Matter buttons / triggers\r\n    const [processingStarted, setProcessingStarted] = useState(false);\r\n    const [processingOpen, setProcessingOpen] = useState(false);\r\n    const [processingSteps, setProcessingSteps] = useState<ProcessingStep[]>(initialSteps);\r\n    const [processingLogs, setProcessingLogs] = useState<string[]>([]);\r\n    const [generatedCclUrl, setGeneratedCclUrl] = useState<string>('');\r\n    const [operationEvents, setOperationEvents] = useState<Array<{ index: number; label: string; phase: string; url?: string; method?: string; status?: number; payloadSummary?: string; responseSummary?: string }>>([]);\r\n    const [openedMatterId, setOpenedMatterId] = useState<string | null>(null);\r\n\r\n    const [visiblePoidCount, setVisiblePoidCount] = useState(12); // UI only, not persisted\r\n    const [poidSearchTerm, setPoidSearchTerm] = useState(''); // UI only, not persisted\r\n    const [searchBoxFocused, setSearchBoxFocused] = useState(false);\r\n    const poidGridRef = useRef<HTMLDivElement | null>(null);\r\n    const [activePoid, setActivePoid] = useDraftedState<POID | null>('activePoid', null);\r\n\r\n    // When entering via an instruction, try to set an active POID from InstructionRef if none is selected\r\n    // CRITICAL: Also refresh when effectivePoidData changes to ensure we get fresh instruction data\r\n    useEffect(() => {\r\n        if (!instructionRef) return;\r\n        const match = effectivePoidData.find(p => (p as any).InstructionRef === instructionRef || (p as any).instruction_ref === instructionRef);\r\n        if (match && (!activePoid || (activePoid as any).InstructionRef !== instructionRef)) {\r\n            // Set or refresh activePoid when we have fresh instruction data\r\n            setActivePoid(match);\r\n        }\r\n    }, [instructionRef, effectivePoidData, activePoid, setActivePoid]);\r\n\r\n    const filteredPoidData = effectivePoidData.filter((poid) => {\r\n        const term = poidSearchTerm.toLowerCase();\r\n        return (\r\n            poid.poid_id.toLowerCase().includes(term) ||\r\n            (poid.first && poid.first.toLowerCase().includes(term)) ||\r\n            (poid.last && poid.last.toLowerCase().includes(term))\r\n        );\r\n    });\r\n\r\n    useEffect(() => {\r\n        const observer = new IntersectionObserver(\r\n            (entries) => {\r\n                if (entries[0].isIntersecting) {\r\n                    setVisiblePoidCount((prev) => Math.min(prev + 12, filteredPoidData.length));\r\n                }\r\n            },\r\n            { rootMargin: '200px' }\r\n        );\r\n        if (poidGridRef.current) observer.observe(poidGridRef.current);\r\n        return () => observer.disconnect();\r\n    }, [filteredPoidData]);\r\n\r\n    const handlePoidClick = (poid: POID) => {\r\n        const isCompany = !!(poid.company_name || poid.company_number);\r\n        \r\n        if (selectedPoidIds.includes(poid.poid_id)) {\r\n            // Remove selection\r\n            setSelectedPoidIds((prev: string[]) => prev.filter((id: string) => id !== poid.poid_id));\r\n            if (activePoid && activePoid.poid_id === poid.poid_id) {\r\n                const remaining = effectivePoidData.find((p) => selectedPoidIds.includes(p.poid_id) && p.poid_id !== poid.poid_id);\r\n                setActivePoid(remaining || null);\r\n            }\r\n        } else {\r\n            // Add selection based on client type rules\r\n            if (pendingClientType === 'Individual' || pendingClientType === 'Existing Client') {\r\n                // Single selection only\r\n                setSelectedPoidIds([poid.poid_id]);\r\n                setActivePoid(poid);\r\n            } else if (pendingClientType === 'Company') {\r\n                // Company type: Two-stage selection\r\n                const currentSelectedPoids = selectedPoidIds.map(id => \r\n                    effectivePoidData.find(p => p.poid_id === id)\r\n                ).filter(Boolean);\r\n                \r\n                const hasCompanySelected = currentSelectedPoids.some(p => \r\n                    p && !!(p.company_name || p.company_number)\r\n                );\r\n                \r\n                if (isCompany) {\r\n                    // Selecting a company - replace any existing company\r\n                    const newSelections = selectedPoidIds.filter(id => {\r\n                        const p = effectivePoidData.find(poid => poid.poid_id === id);\r\n                        return p && !(p.company_name || p.company_number); // Keep individuals (directors)\r\n                    });\r\n                    // Ensure uniqueness\r\n                    const next = Array.from(new Set([...newSelections, poid.poid_id]));\r\n                    setSelectedPoidIds(next);\r\n                } else {\r\n                    // Selecting an individual (director) - only allowed if company is already selected\r\n                    if (hasCompanySelected) {\r\n                        // Allow multiple directors - just add to existing selections\r\n                        setSelectedPoidIds((prev: string[]) => (prev.includes(poid.poid_id) ? prev : [...prev, poid.poid_id]));\r\n                    }\r\n                }\r\n                setActivePoid(poid);\r\n            } else if (pendingClientType === 'Multiple Individuals') {\r\n                // Multiple individuals allowed - unlimited selections\r\n                setSelectedPoidIds((prev: string[]) => (prev.includes(poid.poid_id) ? prev : [...prev, poid.poid_id]));\r\n                setActivePoid(poid);\r\n            }\r\n        }\r\n        setSearchBoxFocused(false); // Collapse search box after selection\r\n        setPoidSearchTerm(''); // Optionally clear search term\r\n    };\r\n\r\n    // Handler for Clear All button\r\nconst handleClearAll = () => {\r\n  if (hasDataToClear()) {\r\n    setIsClearDialogOpen(true);\r\n  } else {\r\n    doClearAll();\r\n  }\r\n};\r\n\r\n    // Helper to get nickname from team data\r\n    function getLocalUserNickname(userInitials: string): string {\r\n        if (!userInitials) return '';\r\n        const found = (teamData as any[]).find(\r\n            (u) => (u.Initials || '').toLowerCase() === userInitials.toLowerCase()\r\n        );\r\n        return found ? found.Nickname || found.First || found['Full Name'] || '' : '';\r\n    }\r\n\r\n    // Helper to get nickname from team data\r\n    function getTeamNickname(userInitials: string, teamData: any[]): string {\r\n        if (!userInitials || !teamData) return '';\r\n        const found = teamData.find(\r\n            (u) => (u.Initials || '').toLowerCase() === userInitials.toLowerCase()\r\n        );\r\n        return found ? found.Nickname || found.First || found['Full Name'] || '' : '';\r\n    }\r\n\r\n    // Helper to get partner initials (both initials for partners)\r\n    function getPartnerInitials(teamData: any[]): string[] {\r\n        if (!teamData) return [];\r\n        return teamData\r\n            .filter((member: any) => member.Role === 'Partner')\r\n            .map((member: any) => member.Initials || member['Initials'] || '')\r\n            .filter(Boolean);\r\n    }\r\n\r\n    // Helper to get Clio ID from team data\r\n    function getClioId(userInitials: string, teamData: any[]): string {\r\n        if (!userInitials || !teamData) return '';\r\n        const found = teamData.find(\r\n            (u) => (u.Initials || '').toLowerCase() === userInitials.toLowerCase()\r\n        );\r\n        return found ? found['Clio ID'] || '' : '';\r\n    }\r\n\r\n    // Helper to get initials from full name via team data\r\n    function getInitialsFromName(name: string, teamData: any[]): string {\r\n        if (!name) return '';\r\n        const found = teamData.find(t => {\r\n            const full = (t['Full Name'] || `${t.First || ''} ${t.Last || ''}`).trim();\r\n            return full.toLowerCase() === name.toLowerCase();\r\n        });\r\n        if (found && found.Initials) return found.Initials;\r\n        return name\r\n            .split(' ')\r\n            .filter(Boolean)\r\n            .map(part => part[0].toUpperCase())\r\n            .join('');\r\n    }\r\n\r\n    // Determine requesting user nickname based on environment\r\n    const requestingUserNickname =\r\n        process.env.NODE_ENV === 'production'\r\n            ? getTeamNickname(userInitials, teamData || localTeamDataJson)\r\n            : getLocalUserNickname(userInitials);\r\n\r\n    // Determine requesting user Clio ID based on environment\r\n    const requestingUserClioId = getClioId(userInitials, teamData || localTeamDataJson);\r\n\r\n    // Environment/admin flags for gated backend details\r\n    const isLocalDev = process.env.NODE_ENV !== 'production';\r\n    const isAdminUser = useMemo(() => {\r\n        try {\r\n            const dataset = (teamData || localTeamDataJson) as any[];\r\n            const me = dataset.find(t => (t.Initials || '').toLowerCase() === userInitials.toLowerCase());\r\n            const roleText = (me?.Role || '').toLowerCase();\r\n            return roleText.includes('admin') || roleText.includes('owner') || roleText.includes('manager');\r\n        } catch {\r\n            return false;\r\n        }\r\n    }, [teamData, userInitials]);\r\n    const adminEligible = isLocalDev || isAdminUser;\r\n\r\n    // Horizontal sliding carousel approach\r\n    const [currentStep, setCurrentStep] = useDraftedState<number>('currentStep', 0); // 0: select, 1: form, 2: review\r\n    \r\n    // Guarantee a date when entering the Matter or Review steps\r\n    useEffect(() => {\r\n        if ((currentStep === 1 || currentStep === 2) && !selectedDate) {\r\n            setSelectedDate(new Date());\r\n        }\r\n    }, [currentStep, selectedDate, setSelectedDate]);\r\n    // Removed pendingClientType state - now handled directly in clientType state\r\n\r\n    // Calculate completion percentages for progressive dots\r\n    const calculateClientStepCompletion = (): number => {\r\n        let filledFields = 0;\r\n        let totalFields = 3; // clientType, selectedPoidIds, and opponent details\r\n        \r\n        if (clientType && clientType.trim() !== '') filledFields++;\r\n        if (selectedPoidIds.length > 0) filledFields++;\r\n        \r\n        // Check opponent details completion\r\n        const hasOpponentInfo = (opponentName && opponentName.trim() !== '') || \r\n                               (opponentFirst && opponentFirst.trim() !== '' && opponentLast && opponentLast.trim() !== '');\r\n        const hasDisputeValue = disputeValue && disputeValue.trim() !== '';\r\n        \r\n        if (hasOpponentInfo && hasDisputeValue) filledFields++;\r\n        \r\n        return totalFields > 0 ? (filledFields / totalFields) * 100 : 0;\r\n    };\r\n\r\n    const calculateMatterStepCompletion = (): number => {\r\n        let filledFields = 0;\r\n        let totalFields = 10; // Reduced from 13 since opponent details moved to client step\r\n        \r\n        // Required fields - check for meaningful values, not just existence\r\n        if (selectedDate !== null) filledFields++; // Date has been set\r\n        if (supervisingPartner && supervisingPartner.trim() !== '') filledFields++;\r\n        if (originatingSolicitor && originatingSolicitor.trim() !== '' && originatingSolicitor !== defaultTeamMember) filledFields++;\r\n        if (areaOfWork && areaOfWork.trim() !== '') filledFields++;\r\n        if (practiceArea && practiceArea.trim() !== '') filledFields++;\r\n        if (description && description.trim() !== '') filledFields++;\r\n        if (folderStructure && folderStructure.trim() !== '') filledFields++;\r\n        if (source && source.trim() !== '') filledFields++; // Source must be actively selected\r\n        if (noConflict === true) filledFields++; // Only count if explicitly checked\r\n        if (referrerName && referrerName.trim() !== '') filledFields++; // Optional field\r\n        \r\n        const completion = totalFields > 0 ? (filledFields / totalFields) * 100 : 0;\r\n        \r\n        // Debug logging - remove this after fixing\r\n        if (filledFields > 0) {\r\n            console.log('Matter step filled fields:', filledFields, 'out of', totalFields, 'completion:', completion + '%');\r\n            console.log('Debug values:', {\r\n                selectedDate: selectedDate !== null,\r\n                supervisingPartner: supervisingPartner && supervisingPartner.trim() !== '',\r\n                originatingSolicitor: originatingSolicitor && originatingSolicitor.trim() !== '' && originatingSolicitor !== defaultTeamMember,\r\n                source: source && source.trim() !== '',\r\n                noConflict: noConflict === true,\r\n                defaultTeamMember,\r\n                originatingSolicitorValue: originatingSolicitor,\r\n                sourceValue: source\r\n            });\r\n        }\r\n        \r\n        return completion;\r\n    };\r\n\r\n    const calculateReviewStepCompletion = (): number => {\r\n        // Review step is considered complete when user has reviewed the data\r\n        return currentStep === 2 ? 100 : 0;\r\n    };\r\n\r\n    const getClientDotState = (): number => {\r\n        const completion = calculateClientStepCompletion();\r\n        if (completion === 100) return 3;\r\n        if (completion >= 50) return 2;\r\n        if (completion > 0) return 1;\r\n        return 0;\r\n    };\r\n\r\n    const getMatterDotState = (): number => {\r\n        const completion = calculateMatterStepCompletion();\r\n        if (completion === 100) return 3;\r\n        if (completion >= 50) return 2;\r\n        if (completion > 0) return 1;\r\n        return 0;\r\n    };\r\n\r\n    const getReviewDotState = (): number => {\r\n        const completion = calculateReviewStepCompletion();\r\n        if (completion === 100) return 3;\r\n        if (completion >= 50) return 2;\r\n        if (completion > 0) return 1;\r\n        return 0;\r\n    };\r\n\r\n    // Helper function to get dot color based on state\r\n    const getDotColor = (state: number): string => {\r\n        switch (state) {\r\n            case 3: return '#20b26c'; // Complete - full green\r\n            case 2: return '#20b26c'; // 50%+ filled - full green\r\n            case 1: return '#20b26c'; // First field filled - full green\r\n            case 0: \r\n            default: return '#e0e0e0'; // Empty - gray\r\n        }\r\n    };\r\n\r\n    // Progressive dots across workflow steps\r\n    const getProgressiveDotStates = (): [number, number, number] => {\r\n        const hasClientType = clientType && clientType.trim() !== '';\r\n        const hasPoidSelection = selectedPoidIds.length > 0;\r\n        const hasOpponentInfo = (opponentName && opponentName.trim() !== '') || \r\n                               (opponentFirst && opponentFirst.trim() !== '' && opponentLast && opponentLast.trim() !== '');\r\n        const hasDisputeValue = disputeValue && disputeValue.trim() !== '';\r\n        const hasNoConflictCheck = noConflict === true; // Must be explicitly checked\r\n        const matterCompletion = calculateMatterStepCompletion();\r\n        const reviewCompletion = calculateReviewStepCompletion();\r\n        \r\n        // Check if opponent choice has been made (either \"I have details\" or \"I'll enter later\")\r\n        const opponentQuestionsComplete = opponentChoiceMade === true;\r\n        \r\n        let clientDots = 0;\r\n        let matterDots = 0;\r\n        let reviewDots = 0;\r\n        \r\n        // First dot: lights up when client type is selected\r\n        if (hasClientType) {\r\n            clientDots = 3;\r\n        }\r\n        \r\n        // Second dot: lights up when POID is selected  \r\n        if (hasClientType && hasPoidSelection) {\r\n            matterDots = 3;\r\n        }\r\n        \r\n        // Third dot: lights up when opponent choice has been made (no specific fields required)\r\n        if (hasClientType && hasPoidSelection && opponentQuestionsComplete) {\r\n            reviewDots = 3;\r\n        }\r\n        \r\n        return [clientDots, matterDots, reviewDots];\r\n    };\r\n\r\n    // Build Matter progressive dots - strict completion logic\r\n    const getBuildMatterDotStates = (): [number, number, number] => {\r\n        let dot1 = 0; // First dot: ALL THREE team roles must be filled\r\n        let dot2 = 0; // Second dot: ALL matter details must be filled (description, folder, area, practice)\r\n        let dot3 = 0; // Third dot: Both dispute value AND source must be filled\r\n        \r\n        // First dot: Only lights up when ALL THREE team roles are filled (including prefills)\r\n        const hasTeamMember = teamMember && teamMember.trim() !== '';\r\n        const hasOriginatingSolicitor = originatingSolicitor && originatingSolicitor.trim() !== '';\r\n        const hasSupervisingPartner = supervisingPartner && supervisingPartner.trim() !== '';\r\n        \r\n        if (hasTeamMember && hasOriginatingSolicitor && hasSupervisingPartner) {\r\n            dot1 = 3; // All three roles filled - light up completely\r\n        }\r\n        \r\n        // Second dot: Only lights up when ALL matter details are filled\r\n        const hasDescription = description && description.trim() !== '';\r\n        const hasFolderStructure = folderStructure && folderStructure.trim() !== '';\r\n        const hasAreaOfWork = areaOfWork && areaOfWork.trim() !== '';\r\n        const hasPracticeArea = practiceArea && practiceArea.trim() !== '';\r\n        \r\n        if (hasDescription && hasFolderStructure && hasAreaOfWork && hasPracticeArea) {\r\n            dot2 = 3; // All matter details filled - light up completely\r\n        }\r\n        \r\n        // Third dot: Only lights up when BOTH dispute value AND source are filled\r\n        // Note: Source starts empty, so user must actively select an option\r\n        const hasDisputeValue = disputeValue && disputeValue.trim() !== '';\r\n        const hasActiveSource = source && source.trim() !== ''; // Must actively select a source option\r\n        \r\n        if (hasDisputeValue && hasActiveSource) {\r\n            dot3 = 3; // Both value and actively selected source - light up completely\r\n        }\r\n        \r\n        return [dot1, dot2, dot3];\r\n    };\r\n\r\n    // Determine completion status for each step\r\n    const clientsStepComplete = (() => {\r\n        // For instruction-driven entry, check essential fields only\r\n        if (instructionRef || hideClientSections) {\r\n            // In instruction mode, we need at least dispute value and no-conflict confirmation\r\n            const hasDisputeValue = disputeValue && disputeValue.trim() !== '';\r\n            const hasNoConflictConfirmed = noConflict === true;\r\n            return hasDisputeValue && hasNoConflictConfirmed;\r\n        }\r\n\r\n        // Otherwise use the user's current choice (pendingClientType) or provided initial type\r\n        const type = (pendingClientType || initialClientType || '').trim();\r\n        if (!type) return false;\r\n        if (type === 'Multiple Individuals') {\r\n            const hasDirectEntry = Boolean(clientAsOnFile && clientAsOnFile.trim());\r\n            return selectedPoidIds.length > 0 || hasDirectEntry;\r\n        }\r\n        // Individual, Company, Existing Client require at least one POID selected\r\n        return selectedPoidIds.length > 0;\r\n    })();\r\n    const matterStepComplete = selectedDate && supervisingPartner && originatingSolicitor && areaOfWork && practiceArea && description;\r\n    const reviewStepComplete = false; // Review step doesn't have a \"next\" - it's the final step\r\n\r\n    const handleContinueToForm = () => {\r\n        if (clientsStepComplete) {\r\n            // Persist the actively chosen client type if available\r\n            setClientType(pendingClientType || clientType);\r\n            setCurrentStep(1);\r\n            // Scroll to top when changing steps\r\n            window.scrollTo({ top: 0, behavior: 'smooth' });\r\n        }\r\n    };\r\n\r\n    const handleGoToReview = () => {\r\n        setCurrentStep(2);\r\n        // Scroll to top when changing steps\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    };\r\n\r\n    const handleBackToClients = () => {\r\n        setCurrentStep(0);\r\n        // Scroll to top when changing steps\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    };\r\n\r\n    const handleBackToForm = () => {\r\n        setCurrentStep(1);\r\n        setSummaryConfirmed(false); // Reset confirmation when going back to edit\r\n        setConfirmAcknowledge(false); // Reset acknowledgement checkbox\r\n        setEditsAfterConfirmation(false); // Reset edits flag when explicitly going back\r\n        // Scroll to top when changing steps\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    };\r\n\r\n    const handleClientTypeChange = (newType: string, shouldLimitToSingle: boolean) => {\r\n        // Only clear POID selection when actually switching to a different client type\r\n        // Don't clear if we're staying on the same type (this prevents clearing during multiple selections)\r\n        if (pendingClientType !== newType) {\r\n            // Clear selections when switching between different client types\r\n            setSelectedPoidIds([]);\r\n        }\r\n        setSearchBoxFocused(false); // Collapse search box after client type selection\r\n        setPoidSearchTerm(''); // Optionally clear search term\r\n    };\r\n\r\n    // Helper to generate sample JSON object\r\n    const generateSampleJson = () => {\r\n        const selectedClients = selectedPoidIds.map((id: string) => {\r\n            const client = effectivePoidData.find(p => p.poid_id === id);\r\n            if (!client) {\r\n                // Preserve the selected ID even if we have no further details\r\n                return { poid_id: id };\r\n            }\r\n            const phone =\r\n                client.best_number ||\r\n                (client as any).phone ||\r\n                (client as any).phone_number ||\r\n                (client as any).phoneNumber ||\r\n                (client as any).Phone ||\r\n                instructionPhone ||\r\n                null;\r\n            const email = client.email || (client as any).Email || '';\r\n\r\n            return {\r\n                poid_id: client.poid_id,\r\n                first_name: client.first,\r\n                last_name: client.last,\r\n                email,\r\n                best_number: phone,\r\n                type: client.type || 'individual',\r\n                nationality: client.nationality,\r\n                date_of_birth: client.date_of_birth,\r\n                address: {\r\n                    house_number: client.house_building_number,\r\n                    street: client.street,\r\n                    city: client.city,\r\n                    county: client.county,\r\n                    post_code: client.post_code,\r\n                    country: client.country\r\n                },\r\n                company_details: client.company_name ? {\r\n                    name: client.company_name,\r\n                    number: client.company_number,\r\n                    address: {\r\n                        house_number: client.company_house_building_number,\r\n                        street: client.company_street,\r\n                        city: client.company_city,\r\n                        county: client.company_county,\r\n                        post_code: client.company_post_code,\r\n                        country: client.company_country\r\n                    }\r\n                } : null,\r\n                verification: {\r\n                    stage: client.stage,\r\n                    check_result: client.check_result,\r\n                    pep_sanctions_result: client.pep_sanctions_result,\r\n                    address_verification_result: client.address_verification_result,\r\n                    check_expiry: client.check_expiry,\r\n                    check_id: client.check_id\r\n                }\r\n            };\r\n        });\r\n\r\n        return {\r\n            matter_details: {\r\n                instruction_ref: instructionRef || null,\r\n                client_id: clientId || null,\r\n                matter_ref: matterIdState || matterRef || null,\r\n                stage: stage,\r\n                date_created: selectedDate ? selectedDate.toISOString().split('T')[0] : null,\r\n                client_type: clientType,\r\n                area_of_work: areaOfWork,\r\n                practice_area: practiceArea,\r\n                description: description,\r\n                client_as_on_file: clientAsOnFile || null,\r\n                dispute_value: disputeValue || null,\r\n                folder_structure: folderStructure || null,\r\n                budget_required: budgetRequired,\r\n                budget_amount: budgetRequired === 'Yes' ? budgetAmount : null,\r\n                budget_notify_threshold: budgetRequired === 'Yes' ? budgetThreshold : null,\r\n                budget_notify_users: budgetRequired === 'Yes'\r\n                    ? budgetNotifyUsers.split(',').map(u => u.trim()).filter(Boolean)\r\n                    : []\r\n            },\r\n            team_assignments: {\r\n                fee_earner: teamMember,\r\n                supervising_partner: supervisingPartner,\r\n                originating_solicitor: originatingSolicitor,\r\n                requesting_user: requestingUserNickname,\r\n                fee_earner_initials: getInitialsFromName(teamMember, teamData || localTeamDataJson),\r\n                originating_solicitor_initials: getInitialsFromName(originatingSolicitor, teamData || localTeamDataJson)\r\n            },\r\n            client_information: selectedClients,\r\n            source_details: {\r\n                source: source,\r\n                referrer_name: source === 'referral' ? referrerName : null\r\n            },\r\n            opponent_details: (\r\n                opponentName ||\r\n                opponentSolicitorName ||\r\n                opponentFirst ||\r\n                opponentLast ||\r\n                opponentCompanyName ||\r\n                opponentCompanyNumber ||\r\n                opponentEmail ||\r\n                opponentPhone ||\r\n                opponentHouseNumber ||\r\n                opponentStreet ||\r\n                opponentCity ||\r\n                opponentCounty ||\r\n                opponentPostcode ||\r\n                opponentCountry ||\r\n                opponentSolicitorCompany ||\r\n                solicitorFirst ||\r\n                solicitorLast ||\r\n                solicitorCompanyNumber ||\r\n                opponentSolicitorEmail ||\r\n                solicitorPhone ||\r\n                solicitorHouseNumber ||\r\n                solicitorStreet ||\r\n                solicitorCity ||\r\n                solicitorCounty ||\r\n                solicitorPostcode ||\r\n                solicitorCountry\r\n            ) ? {\r\n                opponent: {\r\n                    title: opponentTitle || null,\r\n                    first_name: opponentFirst || null,\r\n                    last_name: opponentLast || null,\r\n                    is_company: opponentHasCompany || false,\r\n                    company_name: opponentCompanyName || null,\r\n                    company_number: opponentCompanyNumber || null,\r\n                    email: opponentEmail || null,\r\n                    phone: opponentPhone || null,\r\n                    address: {\r\n                        house_number: opponentHouseNumber || null,\r\n                        street: opponentStreet || null,\r\n                        city: opponentCity || null,\r\n                        county: opponentCounty || null,\r\n                        post_code: opponentPostcode || null,\r\n                        country: opponentCountry || null\r\n                    }\r\n                },\r\n                solicitor: {\r\n                    title: solicitorTitle || null,\r\n                    first_name: solicitorFirst || null,\r\n                    last_name: solicitorLast || null,\r\n                    company_name: opponentSolicitorCompany || null,\r\n                    company_number: solicitorCompanyNumber || null,\r\n                    email: opponentSolicitorEmail || null,\r\n                    phone: solicitorPhone || null,\r\n                    address: {\r\n                        house_number: solicitorHouseNumber || null,\r\n                        street: solicitorStreet || null,\r\n                        city: solicitorCity || null,\r\n                        county: solicitorCounty || null,\r\n                        post_code: solicitorPostcode || null,\r\n                        country: solicitorCountry || null\r\n                    }\r\n                }\r\n            } : null,\r\n            compliance: {\r\n                conflict_check_completed: noConflict,\r\n                id_verification_required: true,\r\n                pep_sanctions_check_required: true\r\n            },\r\n            metadata: {\r\n                created_by: userInitials,\r\n                created_at: new Date().toISOString(),\r\n                form_version: \"1.0\",\r\n                processing_status: \"pending_review\"\r\n            }\r\n        };\r\n    };\r\n\r\n    // JSON Debug Validation Function for failed submission diagnostics\r\n    const validateDebugJson = (jsonString: string) => {\r\n        const suggestions: string[] = [];\r\n        const warnings: string[] = [];\r\n        const predictions: { step: string; willPass: boolean; reason: string }[] = [];\r\n\r\n        try {\r\n            const data = JSON.parse(jsonString);\r\n            \r\n            // Check top-level structure\r\n            const expectedSections = ['matter_details', 'team_assignments', 'client_information', 'source_details'];\r\n            const missingSections = expectedSections.filter(section => !data[section]);\r\n            if (missingSections.length > 0) {\r\n                suggestions.push(`Missing required sections: ${missingSections.join(', ')}`);\r\n            }\r\n\r\n            // Validate matter_details\r\n            if (data.matter_details) {\r\n                const md = data.matter_details;\r\n                if (!md.client_type) suggestions.push('client_type is required in matter_details');\r\n                if (!md.area_of_work) suggestions.push('area_of_work is required in matter_details');\r\n                if (!md.practice_area) suggestions.push('practice_area is required in matter_details');\r\n                if (!md.description || md.description.trim().length < 10) {\r\n                    suggestions.push('description should be at least 10 characters long');\r\n                }\r\n                \r\n                // Predict client type selection step\r\n                predictions.push({\r\n                    step: 'Client Type Selection',\r\n                    willPass: !!md.client_type && ['Individual', 'Company', 'Multiple Individuals', 'Existing Client'].includes(md.client_type),\r\n                    reason: md.client_type ? 'Valid client type provided' : 'Client type missing or invalid'\r\n                });\r\n\r\n                // Predict area of work step\r\n                predictions.push({\r\n                    step: 'Area of Work',\r\n                    willPass: !!md.area_of_work && md.area_of_work.trim().length > 0,\r\n                    reason: md.area_of_work ? 'Area of work specified' : 'Area of work missing'\r\n                });\r\n\r\n                // Predict practice area step\r\n                predictions.push({\r\n                    step: 'Practice Area',\r\n                    willPass: !!md.practice_area && md.practice_area.trim().length > 0,\r\n                    reason: md.practice_area ? 'Practice area specified' : 'Practice area missing'\r\n                });\r\n            }\r\n\r\n            // Validate team_assignments\r\n            if (data.team_assignments) {\r\n                const ta = data.team_assignments;\r\n                if (!ta.fee_earner) suggestions.push('fee_earner is required in team_assignments');\r\n                if (!ta.supervising_partner) warnings.push('supervising_partner recommended but not required');\r\n                \r\n                predictions.push({\r\n                    step: 'Team Assignment',\r\n                    willPass: !!ta.fee_earner,\r\n                    reason: ta.fee_earner ? 'Fee earner assigned' : 'Fee earner required but missing'\r\n                });\r\n            }\r\n\r\n            // Validate client_information\r\n            if (data.client_information) {\r\n                const clients = Array.isArray(data.client_information) ? data.client_information : [];\r\n                if (clients.length === 0) {\r\n                    suggestions.push('At least one client must be selected');\r\n                } else {\r\n                    clients.forEach((client: any, index: number) => {\r\n                        if (!client.poid_id) suggestions.push(`Client ${index + 1}: poid_id is required`);\r\n                        if (!client.first_name) suggestions.push(`Client ${index + 1}: first_name is required`);\r\n                        if (!client.last_name) suggestions.push(`Client ${index + 1}: last_name is required`);\r\n                        if (!client.email) warnings.push(`Client ${index + 1}: email is recommended`);\r\n                        \r\n                        // Check verification status\r\n                        if (client.verification) {\r\n                            const verif = client.verification;\r\n                            if (verif.check_result !== 'passed') {\r\n                                warnings.push(`Client ${index + 1}: ID verification not passed (${verif.check_result || 'unknown'})`);\r\n                            }\r\n                            if (verif.pep_sanctions_result !== 'passed') {\r\n                                warnings.push(`Client ${index + 1}: PEP/Sanctions check not passed (${verif.pep_sanctions_result || 'unknown'})`);\r\n                            }\r\n                        } else {\r\n                            warnings.push(`Client ${index + 1}: No verification data found`);\r\n                        }\r\n                    });\r\n                }\r\n\r\n                predictions.push({\r\n                    step: 'Client Selection',\r\n                    willPass: clients.length > 0 && clients.every((c: any) => c.poid_id && c.first_name && c.last_name),\r\n                    reason: clients.length === 0 ? 'No clients selected' : \r\n                           clients.some((c: any) => !c.poid_id || !c.first_name || !c.last_name) ? 'Some clients missing required fields' :\r\n                           'All clients have required information'\r\n                });\r\n            }\r\n\r\n            // Validate source_details\r\n            if (data.source_details) {\r\n                const sd = data.source_details;\r\n                if (!sd.source) suggestions.push('source is required in source_details');\r\n                if (sd.source === 'referral' && !sd.referrer_name) {\r\n                    suggestions.push('referrer_name is required when source is \"referral\"');\r\n                }\r\n\r\n                predictions.push({\r\n                    step: 'Source Information',\r\n                    willPass: !!sd.source && (sd.source !== 'referral' || !!sd.referrer_name),\r\n                    reason: !sd.source ? 'Source missing' : \r\n                           sd.source === 'referral' && !sd.referrer_name ? 'Referrer name required for referral source' :\r\n                           'Source information valid'\r\n                });\r\n            }\r\n\r\n            // Check opponent_details if present\r\n            if (data.opponent_details) {\r\n                const od = data.opponent_details;\r\n                let hasOpponentInfo = false;\r\n                let hasSolicitorInfo = false;\r\n                \r\n                if (od.individual && (od.individual.first_name || od.individual.last_name || od.individual.email)) {\r\n                    hasOpponentInfo = true;\r\n                    if (!od.individual.first_name || !od.individual.last_name) {\r\n                        warnings.push('Opponent individual missing name information');\r\n                    }\r\n                }\r\n                \r\n                if (od.solicitor && (od.solicitor.first_name || od.solicitor.last_name || od.solicitor.company_name)) {\r\n                    hasSolicitorInfo = true;\r\n                    if (!od.solicitor.company_name) {\r\n                        warnings.push('Opponent solicitor missing company name');\r\n                    }\r\n                }\r\n\r\n                predictions.push({\r\n                    step: 'Opponent Details',\r\n                    willPass: true, // Optional step\r\n                    reason: hasOpponentInfo || hasSolicitorInfo ? 'Opponent information provided' : 'No opponent information (optional)'\r\n                });\r\n            }\r\n\r\n            // Overall validation\r\n            const hasRequiredSections = ['matter_details', 'team_assignments', 'client_information', 'source_details'].every(section => data[section]);\r\n            const criticalIssues = suggestions.length > 0;\r\n\r\n            return {\r\n                isValid: hasRequiredSections && !criticalIssues,\r\n                suggestions,\r\n                warnings,\r\n                predictions\r\n            };\r\n\r\n        } catch (error) {\r\n            return {\r\n                isValid: false,\r\n                suggestions: ['Invalid JSON format - please check syntax'],\r\n                warnings: [`Parse error: ${error instanceof Error ? error.message : 'Unknown error'}`],\r\n                predictions: []\r\n            };\r\n        }\r\n    };\r\n\r\n    // Helper function to check if there's any data to clear\r\n    const hasDataToClear = () => {\r\n        return selectedPoidIds.length > 0 || pendingClientType || poidSearchTerm ||\r\n            areaOfWork || practiceArea || description || disputeValue ||\r\n            budgetRequired === 'Yes' || budgetAmount || budgetThreshold || budgetNotifyUsers ||\r\n            source !== 'search' || referrerName || folderStructure ||\r\n            opponentName || opponentEmail || opponentSolicitorName ||\r\n               opponentSolicitorCompany || opponentSolicitorEmail ||\r\n               opponentTitle || opponentFirst || opponentLast || opponentPhone ||\r\n               opponentHouseNumber || opponentStreet || opponentCity || opponentCounty || opponentPostcode || opponentCountry || opponentHasCompany || opponentCompanyName ||\r\n               opponentCompanyNumber || solicitorTitle || solicitorFirst ||\r\n               solicitorLast || solicitorPhone || solicitorHouseNumber || solicitorStreet || solicitorCity || solicitorCounty || solicitorPostcode || solicitorCountry ||\r\n               solicitorCompanyNumber || summaryConfirmed || noConflict ||\r\n               (selectedDate && selectedDate.getTime() !== new Date().setHours(0,0,0,0)) ||\r\n               teamMember !== defaultTeamMember || supervisingPartner ||\r\n               originatingSolicitor !== defaultTeamMember;\r\n    };\r\n\r\n    // Count the number of filled fields for the clear button\r\n    const getFieldCount = () => {\r\n        let count = 0;\r\n        if (selectedPoidIds.length > 0) count++;\r\n        if (pendingClientType) count++;\r\n        if (areaOfWork) count++;\r\n        if (practiceArea) count++;\r\n        if (description) count++;\r\n        if (disputeValue) count++;\r\n        if (budgetRequired === 'Yes') count++;\r\n        if (budgetAmount) count++;\r\n        if (budgetThreshold) count++;\r\n        if (budgetNotifyUsers) count++;\r\n        if (source !== 'search') count++;\r\n        if (referrerName) count++;\r\n        if (folderStructure) count++;\r\n        if (opponentName || opponentEmail || opponentSolicitorName) count++;\r\n        if (summaryConfirmed) count++;\r\n        if (selectedDate && selectedDate.getTime() !== new Date().setHours(0,0,0,0)) count++;\r\n        if (teamMember !== defaultTeamMember) count++;\r\n        if (supervisingPartner) count++;\r\n        if (originatingSolicitor !== defaultTeamMember) count++;\r\n        return count;\r\n    };\r\n\r\n    // Track failing step for summary display\r\n    const [failureSummary, setFailureSummary] = useState<string>('');\r\n\r\n    // Process matter opening steps defined in processingActions\r\n    const simulateProcessing = async () => {\r\n        setIsProcessing(true);\r\n        setProcessingOpen(true);\r\n        setProcessingLogs([]);\r\n        setProcessingSteps(initialSteps);\r\n        setFailureSummary('');\r\n        \r\n        // Activate workbench mode immediately on submission\r\n        // setTimeout(() => setWorkbenchMode(true), 300); // Disabled - keep processing in main section\r\n        \r\n        let url = '';\r\n\r\n        try {\r\n            // Wire observer to capture sent/response/success/error phases\r\n            registerOperationObserver((e) => {\r\n                setOperationEvents(prev => [...prev, e]);\r\n            });\r\n            for (let i = 0; i < processingActions.length; i++) {\r\n                const action = processingActions[i];\r\n                setCurrentActionIndex(i);\r\n                const result = await action.run(generateSampleJson(), userInitials, userData);\r\n                const message = typeof result === 'string' ? result : result.message;\r\n                setProcessingSteps(prev => prev.map((s, idx) => idx === i ? { ...s, status: 'success', message } : s));\r\n                setProcessingLogs(prev => [...prev, `✓ ${message}`]);\r\n                if (typeof result === 'object' && result.url) {\r\n                    url = result.url;\r\n                }\r\n            }\r\n\r\n            setProcessingLogs(prev => [...prev, '🎉 Matter opening completed successfully!']);\r\n            completeMatterOpening();\r\n        } catch (error) {\r\n            console.error('Error during processing:', error);\r\n            const msg = error instanceof Error ? error.message : 'Unknown error';\r\n            // Identify failing step (first still pending at error time)\r\n            let failingIndex = -1;\r\n            setProcessingSteps(prev => {\r\n                const idx = prev.findIndex(ps => ps.status === 'pending');\r\n                failingIndex = idx === -1 ? prev.length - 1 : idx;\r\n                return prev.map((s, i) => i === failingIndex ? { ...s, status: 'error', message: msg } : s);\r\n            });\r\n            const failingLabel = processingActions[failingIndex]?.label || 'Unknown step';\r\n            setFailureSummary(`Failed at: ${failingLabel} – ${msg}`);\r\n            setProcessingLogs(prev => [...prev, `❌ ${failingLabel}: ${msg}`]);\r\n            // Auto-open debug inspector\r\n            setDebugInspectorOpen(true);\r\n        } finally {\r\n            registerOperationObserver(null);\r\n            setTimeout(() => setIsProcessing(false), 2000);\r\n            setProcessingOpen(false);\r\n        }\r\n        setGeneratedCclUrl(url);\r\n        return { url };\r\n    };\r\n\r\n    // Manual JSON validation functions for advanced debugging\r\n    const validateManualJson = () => {\r\n        if (!debugManualJson.trim()) {\r\n            setDebugValidation({ \r\n                isValid: false, \r\n                suggestions: ['Please paste JSON content first'],\r\n                warnings: [],\r\n                predictions: []\r\n            });\r\n            return;\r\n        }\r\n        try {\r\n            JSON.parse(debugManualJson);\r\n            setDebugValidation({ \r\n                isValid: true, \r\n                suggestions: [], \r\n                warnings: [],\r\n                predictions: []\r\n            });\r\n        } catch (error) {\r\n            setDebugValidation({ \r\n                isValid: false, \r\n                suggestions: [`Invalid JSON: ${error instanceof Error ? error.message : 'Unknown error'}`],\r\n                warnings: [],\r\n                predictions: []\r\n            });\r\n        }\r\n    };\r\n\r\n    const processManualJson = async () => {\r\n        if (!debugValidation?.isValid) return;\r\n        try {\r\n            const parsed = JSON.parse(debugManualJson);\r\n            // This would trigger the same processing pipeline with manual data\r\n            console.log('Manual JSON processing would use:', parsed);\r\n            alert('Manual JSON processing is for development use only.');\r\n        } catch (error) {\r\n            console.error('Manual JSON processing failed:', error);\r\n        }\r\n    };\r\n\r\n    // Support email functionality (adapted from PitchBuilder)\r\n    const sendSupportRequest = async () => {\r\n        if (!supportMessage.trim()) return;\r\n        \r\n        setSupportSending(true);\r\n        \r\n        try {\r\n            // Get user email from userData\r\n            const userEmailCandidate = (userData && userData[0]) || {} as any;\r\n            const userEmailAddress = \r\n                (userEmailCandidate.Email && String(userEmailCandidate.Email).trim()) ||\r\n                (userEmailCandidate.WorkEmail && String(userEmailCandidate.WorkEmail).trim()) ||\r\n                (userEmailCandidate.Mail && String(userEmailCandidate.Mail).trim()) ||\r\n                `${userInitials?.toLowerCase()}@helix-law.com`;\r\n\r\n            const debugInfo = {\r\n                timestamp: new Date().toISOString(),\r\n                user: userInitials,\r\n                instructionRef,\r\n                stage,\r\n                clientType,\r\n                selectedPoidIds: selectedPoidIds?.length,\r\n                processingSteps: processingSteps.map(s => ({ label: s.label, status: s.status })),\r\n                systemData: generateSampleJson()\r\n            };\r\n\r\n            const emailBody = `\r\n                <h3>Matter Opening Support Request - ${supportCategory.toUpperCase()}</h3>\r\n                <p><strong>Category:</strong> ${supportCategory}</p>\r\n                <p><strong>User:</strong> ${userInitials} (${userEmailAddress})</p>\r\n                <p><strong>Instruction:</strong> ${instructionRef || 'N/A'}</p>\r\n                <p><strong>Issue Description:</strong></p>\r\n                <div style=\"background: #f5f5f5; padding: 12px; border-left: 3px solid #3690CE; margin: 12px 0;\">\r\n                    ${supportMessage.replace(/\\n/g, '<br/>')}\r\n                </div>\r\n                <h4>Debug Information</h4>\r\n                <pre style=\"background: #f8f8f8; padding: 12px; font-size: 11px; overflow: auto;\">\r\n${JSON.stringify(debugInfo, null, 2)}\r\n                </pre>\r\n            `;\r\n\r\n            const response = await fetch('/api/sendEmail', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    email_contents: emailBody,\r\n                    // Primary recipients now include lz and cb plus support\r\n                    user_email: 'support@helix-law.com,lz@helix-law.com,cb@helix-law.com',\r\n                    subject: `Matter Opening Support: ${supportCategory} - ${instructionRef || 'Generic'}`,\r\n                    from_email: userEmailAddress,\r\n                    bcc_emails: 'automations@helix-law.com'\r\n                })\r\n            });\r\n\r\n            if (response.ok) {\r\n                setSupportMessage('');\r\n                setSupportPanelOpen(false);\r\n                // Show success notification\r\n                alert('Support request sent successfully!');\r\n            } else {\r\n                throw new Error('Failed to send support request');\r\n            }\r\n        } catch (error) {\r\n            console.error('Support request failed:', error);\r\n            alert('Failed to send support request. Please try again.');\r\n        } finally {\r\n            setSupportSending(false);\r\n        }\r\n    };\r\n\r\n    const [isClearDialogOpen, setIsClearDialogOpen] = useState(false);\r\n\r\n    // Entry choice: New vs Existing/Carry On\r\n    const [entryMode, setEntryMode] = useDraftedState<'unset' | 'new' | 'existing'>('entryMode', 'unset');\r\n    // Generic entry no longer shows Start New vs Existing here; the client type question covers it\r\n    const shouldShowEntryModal = false;\r\n\r\n    const handleChooseNew = () => {\r\n        // No-op: generic choice handled by client type control now\r\n        setEntryMode('new');\r\n        setPendingClientType('');\r\n    };\r\n    const handleChooseExisting = () => {\r\n        // No-op: generic choice handled by client type control now\r\n        setEntryMode('existing');\r\n        setPendingClientType('Existing Client');\r\n        setSearchBoxFocused(true);\r\n    };\r\n\r\n    // Clear all selections and inputs\r\n    const doClearAll = () => {\r\n        // Close the confirmation dialog if open\r\n        setIsClearDialogOpen(false);\r\n\r\n        // Clear all the React state\r\n        setSelectedDate(null);\r\n        setTeamMember(defaultTeamMember);\r\n        setSupervisingPartner('');\r\n        setOriginatingSolicitor(defaultTeamMember);\r\n        setClientType(initialClientType || '');\r\n        // Only reset pending client type and POID selection if not in instruction mode\r\n        if (!instructionRef) {\r\n            setPendingClientType(''); // This will reset the client dots\r\n            setSelectedPoidIds([]); // This will reset the client dots\r\n        } else {\r\n            // For instruction mode, clear everything and force refresh from instruction data\r\n            setPendingClientType('');\r\n            setSelectedPoidIds([]);\r\n            setActivePoid(null); // Force refresh of instruction data\r\n        }\r\n        setAreaOfWork('');\r\n        setPracticeArea('');\r\n        setDescription('');\r\n        setFolderStructure('');\r\n        setDisputeValue('');\r\n        setSource('search');\r\n        setReferrerName('');\r\n        setOpponentName('');\r\n        setOpponentEmail('');\r\n        setOpponentSolicitorName('');\r\n        setOpponentSolicitorCompany('');\r\n        setOpponentSolicitorEmail('');\r\n        setNoConflict(false);\r\n        setOpponentChoiceMade(false);\r\n        setOpponentTitle('');\r\n        setOpponentFirst('');\r\n        setOpponentLast('');\r\n        setOpponentPhone('');\r\n        setOpponentHouseNumber('');\r\n        setOpponentStreet('');\r\n        setOpponentCity('');\r\n        setOpponentCounty('');\r\n        setOpponentPostcode('');\r\n        setOpponentCountry('');\r\n        setOpponentHasCompany(false);\r\n        setOpponentCompanyName('');\r\n        setOpponentCompanyNumber('');\r\n        setOpponentType('');\r\n        setSolicitorTitle('');\r\n        setSolicitorFirst('');\r\n        setSolicitorLast('');\r\n        setSolicitorPhone('');\r\n        setSolicitorHouseNumber('');\r\n        setSolicitorStreet('');\r\n        setSolicitorCity('');\r\n        setSolicitorCounty('');\r\n        setSolicitorPostcode('');\r\n        setSolicitorCountry('');\r\n        setSolicitorCompanyNumber('');\r\n        setSummaryConfirmed(false); // Reset summary confirmation\r\n        if (!instructionRef) {\r\n            setActivePoid(null);\r\n        }\r\n        setCurrentStep(0); // This will reset the review dots\r\n        setPoidSearchTerm('');\r\n        \r\n        // Clear all localStorage draft data\r\n        clearMatterOpeningDraft();\r\n    };\r\n\r\n    // Determine if all processing steps completed successfully\r\n    const allProcessingSucceeded = processingSteps.length > 0 && processingSteps.every(s => s.status === 'success');\r\n\r\n    // Show CCL prompt only once processing has finished with success\r\n    const showCclPrompt = currentStep === 2 && summaryConfirmed && allProcessingSucceeded;\r\n\r\n    // State for CCL draft choice and generating status\r\n    const [draftChoice, setDraftChoice] = useState<'yes' | 'no' | undefined>(undefined);\r\n    const [cclGenerating, setCclGenerating] = useState(false);\r\n\r\n    const handleDraftChoice = (choice: 'yes' | 'no') => {\r\n        setDraftChoice(choice);\r\n        if (choice === 'yes' && openedMatterId && onDraftCclNow) {\r\n            onDraftCclNow(openedMatterId);\r\n        }\r\n    };\r\n\r\n    const showProcessingSection = processingSteps.some(s => s.status !== 'pending');\r\n\r\n    // Render the horizontal sliding carousel\r\n    return (\r\n        <CompletionProvider>\r\n            <Stack className=\"workflow-container\">\r\n                {/* Main Container */}\r\n                <div className=\"workflow-main matter-opening-card\">\r\n                    {/* Persistent Header */}\r\n                    <div className=\"persistent-header\" style={{\r\n                        padding: '12px 24px',\r\n                        background: '#fff',\r\n                        position: 'sticky',\r\n                        top: 0,\r\n                        zIndex: 10,\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'space-between',\r\n                        gap: 12,\r\n                        margin: '-20px -20px 0 -20px',\r\n                        minHeight: 'auto',\r\n                        alignContent: 'center'\r\n                    }}>\r\n                        <div style={{ \r\n                            display: 'flex', \r\n                            alignItems: 'center', \r\n                            gap: 4, \r\n                            flex: '1 1 auto',\r\n                            minWidth: 0,\r\n                            overflow: 'hidden'\r\n                        }}>\r\n                            {/* Unified breadcrumbs + actions row */}\r\n                            <div style={{ \r\n                                display: 'flex', \r\n                                alignItems: 'center', \r\n                                gap: 4, \r\n                                fontSize: 14,\r\n                                minWidth: 0,\r\n                                flex: '1 1 auto',\r\n                                overflow: 'hidden'\r\n                            }}>\r\n                                <button \r\n                                    onClick={handleBackToClients}\r\n                                    style={{ \r\n                                        background: 'none', \r\n                                        border: 'none', \r\n                                        color: currentStep === 0 ? '#3690CE' : '#666',\r\n                                        cursor: 'pointer',\r\n                                        display: 'flex',\r\n                                        alignItems: 'center',\r\n                                        gap: 4,\r\n                                        padding: '4px 8px',\r\n                                        borderRadius: 6,\r\n                                        transition: 'all 0.2s ease',\r\n                                        fontWeight: currentStep === 0 ? 600 : 400,\r\n                                        backgroundColor: currentStep === 0 ? '#e3f0fc' : 'transparent',\r\n                                        fontSize: '12px',\r\n                                        whiteSpace: 'nowrap',\r\n                                        flexShrink: 0\r\n                                    }}\r\n                                >\r\n                                    {clientsStepComplete && currentStep !== 0 ? (\r\n                                        <div className=\"completion-tick visible\" style={{ \r\n                                            marginRight: 4,\r\n                                            width: 16,\r\n                                            height: 16,\r\n                                            display: 'inline-flex',\r\n                                            alignItems: 'center',\r\n                                            justifyContent: 'center',\r\n                                            borderRadius: '50%',\r\n                                            background: '#fff',\r\n                                            boxShadow: '0 2px 8px rgba(0, 0, 0, 0.06)',\r\n                                            color: '#20b26c',\r\n                                            border: '2px solid #f8f8f8'\r\n                                        }}>\r\n                                            <svg width=\"10\" height=\"8\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n                                                <polyline points=\"5,13 10,18 19,7\" stroke=\"currentColor\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                            </svg>\r\n                                        </div>\r\n                                    ) : (\r\n                                        <i className=\"ms-Icon ms-Icon--People\" style={{ fontSize: 16 }} />\r\n                                    )}\r\n                                    Select Parties\r\n                                </button>\r\n                                \r\n                                {/* Progressive dots connector */}\r\n                                <div style={{ \r\n                                    display: 'flex',\r\n                                    alignItems: 'center',\r\n                                    gap: 1,\r\n                                    margin: '0 2px',\r\n                                    flexShrink: 0\r\n                                }}>\r\n                                    <div style={{ \r\n                                        width: '4px', \r\n                                        height: '4px', \r\n                                        borderRadius: '50%', \r\n                                        background: getDotColor(getProgressiveDotStates()[0]),\r\n                                        transition: 'background-color 0.3s ease'\r\n                                    }} />\r\n                                    <div style={{ \r\n                                        width: '6px', \r\n                                        height: '1px', \r\n                                        background: '#ddd'\r\n                                    }} />\r\n                                    <div style={{ \r\n                                        width: '4px', \r\n                                        height: '4px', \r\n                                        borderRadius: '50%', \r\n                                        background: getDotColor(getProgressiveDotStates()[1]),\r\n                                        transition: 'background-color 0.3s ease'\r\n                                    }} />\r\n                                    <div style={{ \r\n                                        width: '6px', \r\n                                        height: '1px', \r\n                                        background: '#ddd'\r\n                                    }} />\r\n                                    <div style={{ \r\n                                        width: '4px', \r\n                                        height: '4px', \r\n                                        borderRadius: '50%', \r\n                                        background: getDotColor(getProgressiveDotStates()[2]),\r\n                                        transition: 'background-color 0.3s ease'\r\n                                    }} />\r\n                                </div>\r\n                                \r\n                                <button \r\n                                    onClick={handleBackToForm}\r\n                                    disabled={currentStep === 0}\r\n                                    style={{ \r\n                                        background: 'none', \r\n                                        border: 'none', \r\n                                        color: currentStep === 1 ? '#3690CE' : currentStep === 0 ? '#ccc' : '#666',\r\n                                        cursor: currentStep === 0 ? 'not-allowed' : 'pointer',\r\n                                        display: 'flex',\r\n                                        alignItems: 'center',\r\n                                        gap: 4,\r\n                                        padding: '4px 8px',\r\n                                        borderRadius: 6,\r\n                                        transition: 'all 0.2s ease',\r\n                                        fontWeight: currentStep === 1 ? 600 : 400,\r\n                                        backgroundColor: currentStep === 1 ? '#e3f0fc' : 'transparent',\r\n                                        fontSize: '12px',\r\n                                        whiteSpace: 'nowrap',\r\n                                        flexShrink: 0\r\n                                    }}\r\n                                >\r\n                                    {currentStep === 2 ? (\r\n                                        <div className=\"completion-tick visible\" style={{ \r\n                                            marginRight: 4,\r\n                                            width: 16,\r\n                                            height: 16,\r\n                                            display: 'inline-flex',\r\n                                            alignItems: 'center',\r\n                                            justifyContent: 'center',\r\n                                            borderRadius: '50%',\r\n                                            background: '#fff',\r\n                                            boxShadow: '0 2px 8px rgba(0, 0, 0, 0.06)',\r\n                                            color: '#20b26c',\r\n                                            border: '2px solid #f8f8f8'\r\n                                        }}>\r\n                                            <svg width=\"10\" height=\"8\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n                                                <polyline points=\"5,13 10,18 19,7\" stroke=\"currentColor\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                            </svg>\r\n                                        </div>\r\n                                    ) : (\r\n                                        <i className=\"ms-Icon ms-Icon--OpenFolderHorizontal\" style={{ fontSize: 16 }} />\r\n                                    )}\r\n                                    Build Matter\r\n                                </button>\r\n                                \r\n                                {/* Progressive dots with visible separators */}\r\n                                <div style={{ \r\n                                    display: 'flex',\r\n                                    alignItems: 'center',\r\n                                    gap: 1,\r\n                                    margin: '0 2px',\r\n                                    flexShrink: 0\r\n                                }}>\r\n                                    <div style={{ \r\n                                        width: '4px', \r\n                                        height: '4px', \r\n                                        borderRadius: '50%', \r\n                                        background: getDotColor(getBuildMatterDotStates()[0]),\r\n                                        transition: 'background-color 0.3s ease'\r\n                                    }} />\r\n                                    <div style={{ \r\n                                        width: '6px', \r\n                                        height: '1px', \r\n                                        background: '#ddd'\r\n                                    }} />\r\n                                    <div style={{ \r\n                                        width: '4px', \r\n                                        height: '4px', \r\n                                        borderRadius: '50%', \r\n                                        background: getDotColor(getBuildMatterDotStates()[1]),\r\n                                        transition: 'background-color 0.3s ease'\r\n                                    }} />\r\n                                    <div style={{ \r\n                                        width: '6px', \r\n                                        height: '1px', \r\n                                        background: '#ddd'\r\n                                    }} />\r\n                                    <div style={{ \r\n                                        width: '4px', \r\n                                        height: '4px', \r\n                                        borderRadius: '50%', \r\n                                        background: getDotColor(getBuildMatterDotStates()[2]),\r\n                                        transition: 'background-color 0.3s ease'\r\n                                    }} />\r\n                                </div>\r\n                                \r\n                                <div style={{ \r\n                                    color: currentStep === 2 ? '#3690CE' : '#666',\r\n                                    display: 'flex',\r\n                                    alignItems: 'center',\r\n                                    gap: 4,\r\n                                    padding: '4px 8px',\r\n                                    borderRadius: 6,\r\n                                    fontWeight: currentStep === 2 ? 600 : 400,\r\n                                    backgroundColor: currentStep === 2 ? '#e3f0fc' : 'transparent',\r\n                                    transition: 'all 0.2s ease',\r\n                                    fontSize: '12px',\r\n                                    whiteSpace: 'nowrap',\r\n                                    flexShrink: 0\r\n                                }}>\r\n                                    {summaryConfirmed ? (\r\n                                        <div className=\"completion-tick visible\" style={{ \r\n                                            marginRight: 4,\r\n                                            width: 16,\r\n                                            height: 16,\r\n                                            display: 'inline-flex',\r\n                                            alignItems: 'center',\r\n                                            justifyContent: 'center',\r\n                                            borderRadius: '50%',\r\n                                            background: '#fff',\r\n                                            boxShadow: '0 2px 8px rgba(0, 0, 0, 0.06)',\r\n                                            color: '#20b26c',\r\n                                            border: '2px solid #f8f8f8'\r\n                                        }}>\r\n                                            <svg width=\"10\" height=\"8\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n                                                <polyline points=\"5,13 10,18 19,7\" stroke=\"currentColor\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                            </svg>\r\n                                        </div>\r\n                                    ) : (\r\n                                        <i className=\"ms-Icon ms-Icon--CheckList\" style={{ fontSize: 16 }} />\r\n                                    )}\r\n                                    Review and Confirm\r\n                                </div>\r\n                                {/* Spacer to push actions right */}\r\n                                <div style={{ flex: 1, minWidth: 12 }} />\r\n                                {/* Search (only step 0) */}\r\n                                {currentStep === 0 && showPoidSelection && !((pendingClientType === 'Individual' || pendingClientType === 'Company') && selectedPoidIds.length > 0) && (\r\n                                    <div style={{ position: 'relative' }}>\r\n                                        <MinimalSearchBox\r\n                                            value={poidSearchTerm}\r\n                                            onChange={setPoidSearchTerm}\r\n                                            focused={searchBoxFocused}\r\n                                            onRequestOpen={() => setSearchBoxFocused(true)}\r\n                                            onRequestClose={() => setSearchBoxFocused(false)}\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n                                {/* Clear All inline */}\r\n                                {hasDataToClear() && (\r\n                                    <>\r\n                                        <button \r\n                                            type=\"button\" \r\n                                            onClick={handleClearAll} \r\n                                            style={{\r\n                                                background: 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n                                                border: '1px solid #e5e7eb',\r\n                                                borderRadius: 8,\r\n                                                padding: '8px 12px',\r\n                                                fontSize: 12,\r\n                                                fontWeight: 600,\r\n                                                color: '#D65541',\r\n                                                cursor: 'pointer',\r\n                                                transition: 'all 0.2s ease',\r\n                                                boxShadow: '0 2px 4px rgba(0, 0, 0, 0.05)',\r\n                                                display: 'flex',\r\n                                                alignItems: 'center',\r\n                                                gap: 6,\r\n                                                whiteSpace: 'nowrap'\r\n                                            }}\r\n                                            onMouseEnter={(e) => {\r\n                                                e.currentTarget.style.background = 'linear-gradient(135deg, #FEF2F2 0%, #FEE2E2 100%)';\r\n                                                e.currentTarget.style.borderColor = '#D65541';\r\n                                                e.currentTarget.style.transform = 'translateY(-1px)';\r\n                                                e.currentTarget.style.boxShadow = '0 4px 8px rgba(214, 85, 65, 0.15)';\r\n                                            }}\r\n                                            onMouseLeave={(e) => {\r\n                                                e.currentTarget.style.background = 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)';\r\n                                                e.currentTarget.style.borderColor = '#e5e7eb';\r\n                                                e.currentTarget.style.transform = 'translateY(0)';\r\n                                                e.currentTarget.style.boxShadow = '0 2px 4px rgba(0, 0, 0, 0.05)';\r\n                                            }}\r\n                                        >\r\n                                            <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n                                                <path \r\n                                                    d=\"M3 6h18m-2 0v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6m3 0V4c0-1 1-2 2-2h4c0-1 1-2 2-2v2m-6 5v6m4-6v6\" \r\n                                                    stroke=\"currentColor\" \r\n                                                    strokeWidth=\"2\" \r\n                                                    strokeLinecap=\"round\" \r\n                                                    strokeLinejoin=\"round\"\r\n                                                />\r\n                                            </svg>\r\n                                            Clear All\r\n                                            {getFieldCount() > 0 && (\r\n                                                <span style={{\r\n                                                    background: '#D65541',\r\n                                                    color: '#fff',\r\n                                                    borderRadius: '50%',\r\n                                                    width: '18px',\r\n                                                    height: '18px',\r\n                                                    display: 'flex',\r\n                                                    alignItems: 'center',\r\n                                                    justifyContent: 'center',\r\n                                                    fontSize: '10px',\r\n                                                    fontWeight: 600,\r\n                                                    marginLeft: '2px'\r\n                                                }}>\r\n                                                    {getFieldCount()}\r\n                                                </span>\r\n                                            )}\r\n                                        </button>\r\n                                        <Dialog\r\n                                          hidden={!isClearDialogOpen}\r\n                                          onDismiss={() => setIsClearDialogOpen(false)}\r\n                                          dialogContentProps={{\r\n                                            type: DialogType.normal,\r\n                                            title: 'Clear All Data',\r\n                                            subText: 'Are you sure you want to clear all form data? This action cannot be undone.'\r\n                                          }}\r\n                                          modalProps={{\r\n                                            isBlocking: true\r\n                                          }}\r\n                                        >\r\n                                          <DialogFooter>\r\n                                            <PrimaryButton onClick={doClearAll} text=\"Yes, clear all\" />\r\n                                            <DefaultButton onClick={() => setIsClearDialogOpen(false)} text=\"Cancel\" />\r\n                                          </DialogFooter>\r\n                                        </Dialog>\r\n                                    </>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* Removed obsolete IIFE placeholder for meta chip state (state now at top-level) */}\r\n\r\n                    {/* Neat Separator */}\r\n                    <div style={{\r\n                        height: '1px',\r\n                        background: 'linear-gradient(90deg, transparent 0%, rgba(225, 229, 233, 0.4) 20%, rgba(225, 229, 233, 0.7) 50%, rgba(225, 229, 233, 0.4) 80%, transparent 100%)',\r\n                        margin: '12px -20px 8px -20px',\r\n                        position: 'relative',\r\n                        zIndex: 1,\r\n                        clear: 'both'\r\n                    }} />\r\n\r\n                    {/* System Info Pills - positioned close to separator */}\r\n                    <div style={{ \r\n                        display: 'flex', \r\n                        flexWrap: 'wrap', \r\n                        gap: 6, \r\n                        marginBottom: 20,\r\n                        marginTop: 8,\r\n                        paddingLeft: 4,\r\n                        paddingRight: 4\r\n                    }}>\r\n                        {instructionRef && (\r\n                            <span style={{\r\n                                padding: '3px 8px',\r\n                                border: '1px solid #e5e7eb',\r\n                                borderRadius: 4,\r\n                                background: '#f9fafb',\r\n                                fontSize: 11,\r\n                                fontWeight: 500,\r\n                                color: '#6b7280',\r\n                                fontFamily: 'Monaco, Consolas, \"Courier New\", monospace',\r\n                                letterSpacing: '0.5px'\r\n                            }}>\r\n                                Instruction: {instructionRef}\r\n                            </span>\r\n                        )}\r\n                        {(matterIdState || matterRef) && (\r\n                            <span style={{\r\n                                padding: '3px 8px',\r\n                                border: '1px solid #e5e7eb',\r\n                                borderRadius: 4,\r\n                                background: '#f9fafb',\r\n                                fontSize: 11,\r\n                                fontWeight: 500,\r\n                                color: '#6b7280',\r\n                                fontFamily: 'Monaco, Consolas, \"Courier New\", monospace',\r\n                                letterSpacing: '0.5px'\r\n                            }}>\r\n                                Matter: {matterIdState || matterRef}\r\n                            </span>\r\n                        )}\r\n                        {stage && (\r\n                            <span style={{\r\n                                padding: '3px 8px',\r\n                                border: '1px solid #e5e7eb',\r\n                                borderRadius: 4,\r\n                                background: '#f9fafb',\r\n                                fontSize: 11,\r\n                                fontWeight: 500,\r\n                                color: '#6b7280',\r\n                                fontFamily: 'Monaco, Consolas, \"Courier New\", monospace',\r\n                                letterSpacing: '0.5px'\r\n                            }}>\r\n                                Stage: {stage}\r\n                            </span>\r\n                        )}\r\n                        {(() => {\r\n                            const chipBase: React.CSSProperties = {\r\n                                padding: '3px 8px',\r\n                                border: '1px solid #e5e7eb',\r\n                                borderRadius: 4,\r\n                                background: '#f9fafb',\r\n                                fontSize: 11,\r\n                                fontWeight: 500,\r\n                                color: '#374151',\r\n                                fontFamily: 'Monaco, Consolas, \"Courier New\", monospace',\r\n                                letterSpacing: '0.5px',\r\n                                cursor: 'pointer',\r\n                                display: 'inline-flex',\r\n                                alignItems: 'center',\r\n                                gap: 6,\r\n                                transition: 'background .15s, border-color .15s, color .15s'\r\n                            };\r\n                            const hoverActive = (active: boolean): React.CSSProperties => active ? ({ background: '#eef6ff', borderColor: '#93c5fd', color: '#1d4ed8' }) : ({ background: '#f9fafb' });\r\n                            const dateLabel = selectedDate ? selectedDate.toLocaleDateString('en-GB') : '-';\r\n                            return (\r\n                                <>\r\n                                    <span\r\n                                        onClick={() => setOpenMeta(openMeta === 'date' ? null : 'date')}\r\n                                        style={{ ...chipBase, ...(openMeta === 'date' ? hoverActive(true) : {}) }}\r\n                                    >\r\n                                        Opening Date: {dateLabel}\r\n                                    </span>\r\n                                    {requestingUserNickname && (\r\n                                        <span\r\n                                            onClick={() => setOpenMeta(openMeta === 'user' ? null : 'user')}\r\n                                            style={{ ...chipBase, ...(openMeta === 'user' ? hoverActive(true) : {}) }}\r\n                                        >\r\n                                            User: {requestingUserNickname}{requestingUserClioId ? ` (${requestingUserClioId})` : ''}\r\n                                        </span>\r\n                                    )}\r\n                                    {(openMeta === 'date' || openMeta === 'user') && (\r\n                                        <div style={{\r\n                                            position: 'absolute',\r\n                                            top: '100%',\r\n                                            left: 0,\r\n                                            marginTop: 6,\r\n                                            background: '#FFFFFF',\r\n                                            border: '1px solid #e5e7eb',\r\n                                            borderRadius: 8,\r\n                                            padding: '10px 14px',\r\n                                            boxShadow: '0 8px 20px rgba(0,0,0,0.08)',\r\n                                            fontFamily: 'system-ui, sans-serif',\r\n                                            zIndex: 50,\r\n                                            minWidth: 240\r\n                                        }}>\r\n                                            {openMeta === 'date' && (\r\n                                                <div style={{ fontSize: 12, lineHeight: 1.5 }}>\r\n                                                    <div style={{ fontWeight: 600, marginBottom: 4, color: '#0f172a' }}>Opening Date & Time</div>\r\n                                                    <div style={{ color: '#334155' }}>{dateLabel}</div>\r\n                                                    <div style={{ color: '#475569', marginTop: 2 }}>Now: {new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</div>\r\n                                                    <div style={{ marginTop: 6 }}>\r\n                                                        <button onClick={() => setOpenMeta(null)} style={{\r\n                                                            fontSize: 11,\r\n                                                            padding: '4px 8px',\r\n                                                            borderRadius: 4,\r\n                                                            border: '1px solid #cbd5e1',\r\n                                                            background: '#f8fafc',\r\n                                                            cursor: 'pointer'\r\n                                                        }}>Close</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )}\r\n                                            {openMeta === 'user' && (\r\n                                                <div style={{ fontSize: 12, lineHeight: 1.5 }}>\r\n                                                    <div style={{ fontWeight: 600, marginBottom: 4, color: '#0f172a' }}>Requesting User</div>\r\n                                                    <div style={{ color: '#334155' }}>{requestingUserNickname}</div>\r\n                                                    {requestingUserClioId && <div style={{ color: '#475569', marginTop: 2 }}>Clio ID: {requestingUserClioId}</div>}\r\n                                                    <div style={{ marginTop: 8, display: 'flex', gap: 8 }}>\r\n                                                        <button onClick={() => navigator.clipboard.writeText(requestingUserNickname)} style={{\r\n                                                            fontSize: 11,\r\n                                                            padding: '4px 8px',\r\n                                                            borderRadius: 4,\r\n                                                            border: '1px solid #cbd5e1',\r\n                                                            background: '#f8fafc',\r\n                                                            cursor: 'pointer'\r\n                                                        }}>Copy Name</button>\r\n                                                        {requestingUserClioId && (\r\n                                                            <button onClick={() => navigator.clipboard.writeText(requestingUserClioId)} style={{\r\n                                                                fontSize: 11,\r\n                                                                padding: '4px 8px',\r\n                                                                borderRadius: 4,\r\n                                                                border: '1px solid #cbd5e1',\r\n                                                                background: '#f8fafc',\r\n                                                                cursor: 'pointer'\r\n                                                            }}>Copy ID</button>\r\n                                                        )}\r\n                                                        <button onClick={() => setOpenMeta(null)} style={{\r\n                                                            fontSize: 11,\r\n                                                            padding: '4px 8px',\r\n                                                            borderRadius: 4,\r\n                                                            border: '1px solid #cbd5e1',\r\n                                                            background: '#f1f5f9',\r\n                                                            cursor: 'pointer'\r\n                                                        }}>Close</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                    )}\r\n                                </>\r\n                            );\r\n                        })()}\r\n                    </div>\r\n\r\n                    {/* CSS animations for search controls */}\r\n                    <style>{`\r\n                        @keyframes cascadeSlideIn {\r\n                            from {\r\n                                opacity: 0;\r\n                                transform: translateX(20px);\r\n                            }\r\n                            to {\r\n                                opacity: 1;\r\n                                transform: translateX(0);\r\n                            }\r\n                        }\r\n                        \r\n                        @keyframes cascadeSlideOut {\r\n                            from {\r\n                                opacity: 1;\r\n                                transform: translateX(0);\r\n                            }\r\n                            to {\r\n                                opacity: 0;\r\n                                transform: translateX(20px);\r\n                            }\r\n                        }\r\n                        \r\n                        /* Opponent details slide in animation */\r\n                        @keyframes slideInFromTop {\r\n                            from {\r\n                                opacity: 0;\r\n                                transform: translateY(20px);\r\n                            }\r\n                            to {\r\n                                opacity: 1;\r\n                                transform: translateY(0);\r\n                            }\r\n                        }\r\n                        \r\n                        /* Smooth exit animation when controls disappear */\r\n                        .search-controls-exit {\r\n                            animation: cascadeSlideOut 0.3s cubic-bezier(0.4, 0, 0.2, 1) forwards;\r\n                        }\r\n                        \r\n                        /* Responsive header breakpoints */\r\n                        @media (max-width: 900px) {\r\n                            .persistent-header {\r\n                                flex-wrap: wrap !important;\r\n                                padding: 12px 16px !important;\r\n                            }\r\n                            .persistent-header > div:first-child {\r\n                                order: 1;\r\n                                width: 100%;\r\n                                margin-bottom: 8px;\r\n                            }\r\n                            .persistent-header > div:last-child {\r\n                                order: 2;\r\n                                width: 100%;\r\n                                justify-content: flex-end;\r\n                            }\r\n                        }\r\n                        \r\n                        @media (max-width: 600px) {\r\n                            .persistent-header button {\r\n                                font-size: 12px !important;\r\n                                padding: 4px 8px !important;\r\n                                gap: 4px !important;\r\n                            }\r\n                            .persistent-header button svg,\r\n                            .persistent-header button i {\r\n                                font-size: 12px !important;\r\n                            }\r\n                        }\r\n                    `}</style>\r\n\r\n                    {/* Generic entry choice modal removed: client type question handles this selection */}\r\n\r\n                    {/* Add CSS animation for completion ticks */}\r\n                    <style>{`\r\n                        @keyframes tickPop {\r\n                            from {\r\n                                opacity: 0;\r\n                                transform: scale(0);\r\n                            }\r\n                            to {\r\n                                opacity: 1;\r\n                                transform: scale(1);\r\n                            }\r\n                        }\r\n                        \r\n                        .completion-tick {\r\n                            animation: tickPop 0.3s ease;\r\n                        }\r\n                        \r\n                        .completion-tick.visible {\r\n                            opacity: 1;\r\n                            transform: scale(1);\r\n                        }\r\n                    `}</style>\r\n\r\n                    {/* Sliding Container */}\r\n                    <div style={{ \r\n                        overflow: 'hidden',\r\n                        position: 'relative',\r\n                        width: '100%',\r\n                        // Reduced from 500px to shrink excessive white space after moving processing section\r\n                        minHeight: '320px'\r\n                    }}>\r\n                        <div style={{ \r\n                            display: 'flex',\r\n                            width: '300%', // 3 panels * 100% each\r\n                            transform: `translateX(-${currentStep * 33.333}%)`,\r\n                            transition: 'transform 0.4s cubic-bezier(0.4, 0, 0.2, 1)',\r\n                            height: '100%'\r\n                        }}>\r\n                            \r\n                            {/* Step 1: Client Selection */}\r\n                            <div style={{ width: '33.333%', padding: '16px', boxSizing: 'border-box' }}>\r\n                                <div style={{ width: '100%', maxWidth: 1080, margin: '0 auto 16px auto' }}>\r\n                                    {/** Hide the selection UI entirely for instruction-driven entry */}\r\n                                    <PoidSelectionStep\r\n                                        poidData={effectivePoidData}\r\n                                        teamData={teamData}\r\n                                        filteredPoidData={filteredPoidData}\r\n                                        visiblePoidCount={visiblePoidCount}\r\n                                        selectedPoidIds={selectedPoidIds}\r\n                                        preselectedPoidIds={preselectedPoidIds}\r\n                                        poidSearchTerm={poidSearchTerm}\r\n                                        setPoidSearchTerm={setPoidSearchTerm}\r\n                                        poidGridRef={poidGridRef}\r\n                                        handlePoidClick={handlePoidClick}\r\n                                        pendingClientType={pendingClientType}\r\n                                        setPendingClientType={setPendingClientType}\r\n                                        onClientTypeChange={handleClientTypeChange}\r\n                                        clientAsOnFile={clientAsOnFile}\r\n                                        setClientAsOnFile={setClientAsOnFile}\r\n                                        hideClientSections={hideClientSections || !!instructionRef}\r\n                                        instructionRef={instructionRef}\r\n                                        matterRef={matterIdState || matterRef || ''}\r\n                                    />\r\n                                </div>\r\n                                \r\n                                {/* Opponent Details Step - appears after POID selection OR when in instruction mode */}\r\n                                {((selectedPoidIds.length > 0 && pendingClientType) || (hideClientSections && initialClientType)) && (\r\n                                    <div style={{ \r\n                                        width: '100%', \r\n                                        maxWidth: 1080, \r\n                                        margin: '16px auto 0 auto',\r\n                                        animation: 'cascadeSlideIn 0.4s cubic-bezier(0.4, 0, 0.2, 1) forwards',\r\n                                        animationDelay: '0ms',\r\n                                        opacity: 0,\r\n                                        transform: 'translateY(20px)'\r\n                                    }}>\r\n                                        <OpponentDetailsStep\r\n                                            opponentName={opponentName}\r\n                                            setOpponentName={setOpponentNameWithReset}\r\n                                            opponentEmail={opponentEmail}\r\n                                            setOpponentEmail={setOpponentEmailWithReset}\r\n                                            opponentSolicitorName={opponentSolicitorName}\r\n                                            setOpponentSolicitorName={setOpponentSolicitorNameWithReset}\r\n                                            opponentSolicitorCompany={opponentSolicitorCompany}\r\n                                            setOpponentSolicitorCompany={setOpponentSolicitorCompanyWithReset}\r\n                                            opponentSolicitorEmail={opponentSolicitorEmail}\r\n                                            setOpponentSolicitorEmail={setOpponentSolicitorEmailWithReset}\r\n                                            noConflict={noConflict}\r\n                                            setNoConflict={setNoConflict}\r\n                                            disputeValue={disputeValue}\r\n                                            setDisputeValue={setDisputeValue}\r\n                                            opponentTitle={opponentTitle}\r\n                                            setOpponentTitle={setOpponentTitle}\r\n                                            opponentFirst={opponentFirst}\r\n                                            setOpponentFirst={setOpponentFirst}\r\n                                            opponentLast={opponentLast}\r\n                                            setOpponentLast={setOpponentLast}\r\n                                            opponentPhone={opponentPhone}\r\n                                            setOpponentPhone={setOpponentPhone}\r\n                                            opponentHouseNumber={opponentHouseNumber}\r\n                                            setOpponentHouseNumber={setOpponentHouseNumber}\r\n                                            opponentStreet={opponentStreet}\r\n                                            setOpponentStreet={setOpponentStreet}\r\n                                            opponentCity={opponentCity}\r\n                                            setOpponentCity={setOpponentCity}\r\n                                            opponentCounty={opponentCounty}\r\n                                            setOpponentCounty={setOpponentCounty}\r\n                                            opponentPostcode={opponentPostcode}\r\n                                            setOpponentPostcode={setOpponentPostcode}\r\n                                            opponentCountry={opponentCountry}\r\n                                            setOpponentCountry={setOpponentCountry}\r\n                                            opponentHasCompany={opponentHasCompany}\r\n                                            setOpponentHasCompany={setOpponentHasCompany}\r\n                                            opponentCompanyName={opponentCompanyName}\r\n                                            setOpponentCompanyName={setOpponentCompanyName}\r\n                                            opponentCompanyNumber={opponentCompanyNumber}\r\n                                            setOpponentCompanyNumber={setOpponentCompanyNumber}\r\n                                            solicitorTitle={solicitorTitle}\r\n                                            setSolicitorTitle={setSolicitorTitle}\r\n                                            solicitorFirst={solicitorFirst}\r\n                                            setSolicitorFirst={setSolicitorFirst}\r\n                                            solicitorLast={solicitorLast}\r\n                                            setSolicitorLast={setSolicitorLast}\r\n                                            solicitorPhone={solicitorPhone}\r\n                                            setSolicitorPhone={setSolicitorPhone}\r\n                                            solicitorHouseNumber={solicitorHouseNumber}\r\n                                            setSolicitorHouseNumber={setSolicitorHouseNumber}\r\n                                            solicitorStreet={solicitorStreet}\r\n                                            setSolicitorStreet={setSolicitorStreet}\r\n                                            solicitorCity={solicitorCity}\r\n                                            setSolicitorCity={setSolicitorCity}\r\n                                            solicitorCounty={solicitorCounty}\r\n                                            setSolicitorCounty={setSolicitorCounty}\r\n                                            solicitorPostcode={solicitorPostcode}\r\n                                            setSolicitorPostcode={setSolicitorPostcode}\r\n                                            solicitorCountry={solicitorCountry}\r\n                                            setSolicitorCountry={setSolicitorCountry}\r\n                                            solicitorCompanyNumber={solicitorCompanyNumber}\r\n                                            setSolicitorCompanyNumber={setSolicitorCompanyNumber}\r\n                                            opponentChoiceMade={opponentChoiceMade}\r\n                                            setOpponentChoiceMade={setOpponentChoiceMade}\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n                                \r\n                                {/* Continue Button */}\r\n                                <div style={{ display: 'flex', justifyContent: 'flex-end', marginTop: 24 }}>\r\n                                    <button\r\n                                        onClick={clientsStepComplete ? handleContinueToForm : undefined}\r\n                                        disabled={!clientsStepComplete}\r\n                                        style={{\r\n                                            background: clientsStepComplete ? 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)' : '#f8f9fa',\r\n                                            border: '1px solid #e5e7eb',\r\n                                            borderRadius: 8,\r\n                                            padding: '12px 20px',\r\n                                            fontSize: 14,\r\n                                            fontWeight: 600,\r\n                                            color: clientsStepComplete ? '#374151' : '#9ca3af',\r\n                                            cursor: clientsStepComplete ? 'pointer' : 'not-allowed',\r\n                                            display: 'flex',\r\n                                            alignItems: 'center',\r\n                                            gap: 8,\r\n                                            transition: 'all 0.2s ease',\r\n                                            boxShadow: clientsStepComplete ? '0 2px 4px rgba(0, 0, 0, 0.05)' : 'none',\r\n                                            opacity: clientsStepComplete ? 1 : 0.6\r\n                                        }}\r\n                                        onMouseEnter={clientsStepComplete ? (e) => {\r\n                                            e.currentTarget.style.background = 'linear-gradient(135deg, #F8FAFC 0%, #F1F5F9 100%)';\r\n                                            e.currentTarget.style.borderColor = '#3690CE';\r\n                                            e.currentTarget.style.transform = 'translateY(-1px)';\r\n                                            e.currentTarget.style.boxShadow = '0 4px 8px rgba(0, 0, 0, 0.1)';\r\n                                        } : undefined}\r\n                                        onMouseLeave={clientsStepComplete ? (e) => {\r\n                                            e.currentTarget.style.background = 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)';\r\n                                            e.currentTarget.style.borderColor = '#e5e7eb';\r\n                                            e.currentTarget.style.transform = 'translateY(0)';\r\n                                            e.currentTarget.style.boxShadow = '0 2px 4px rgba(0, 0, 0, 0.05)';\r\n                                        } : undefined}\r\n                                    >\r\n                                        Continue to Matter Details\r\n                                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n                                            <path d=\"M5 12h14m-7-7l7 7-7 7\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                        </svg>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Step 2: Matter Form */}\r\n                            <div style={{ width: '33.333%', padding: '16px', boxSizing: 'border-box' }}>\r\n                                <ClientInfoStep\r\n                                    selectedDate={selectedDate}\r\n                                    setSelectedDate={setSelectedDate}\r\n                                    teamMember={teamMember}\r\n                                    setTeamMember={setTeamMember}\r\n                                    teamMemberOptions={teamMemberOptions}\r\n                                    supervisingPartner={supervisingPartner}\r\n                                    setSupervisingPartner={setSupervisingPartner}\r\n                                    originatingSolicitor={originatingSolicitor}\r\n                                    setOriginatingSolicitor={setOriginatingSolicitor}\r\n                                    isDateCalloutOpen={isDateCalloutOpen}\r\n                                    setIsDateCalloutOpen={setIsDateCalloutOpen}\r\n                                    dateButtonRef={dateButtonRef}\r\n                                    partnerOptions={partnerOptionsList}\r\n                                    solicitorOptions={solicitorOptions}\r\n                                    requestingUser={requestingUserNickname}\r\n                                    requestingUserClioId={requestingUserClioId}\r\n                                />\r\n                                <Stack tokens={{ childrenGap: 24 }} style={{ marginTop: 24 }}>\r\n                                    {/* Move NetDocuments Folder Structure above Area of Work */}\r\n                                    <DescriptionStep\r\n                                        description={description}\r\n                                        setDescription={setDescriptionWithReset}\r\n                                        matterRefPreview={(() => {\r\n                                            // Prefer selected POID; then activePoid; then POID matched by InstructionRef; then first available\r\n                                            const selected = selectedPoidIds[0];\r\n                                            let poid = (selected ? effectivePoidData.find(p => p.poid_id === selected) : undefined) as POID | undefined;\r\n                                            if (!poid) poid = activePoid as POID | undefined;\r\n                                            if (!poid && instructionRef) {\r\n                                                poid = effectivePoidData.find(p => (p as any).InstructionRef === instructionRef || (p as any).instruction_ref === instructionRef) as POID | undefined;\r\n                                            }\r\n\r\n        \t\t\t\t\t\t\t// If we still don't have a POID, try to derive from the instruction record itself\r\n                                            const instFromRecords = (() => {\r\n                                                if (!instructionRef || !Array.isArray(instructionRecords)) return undefined as any;\r\n                                                return (instructionRecords as any[]).find(r => r && (r.InstructionRef === instructionRef));\r\n                                            })();\r\n\r\n                                            if (!poid && !instFromRecords) {\r\n                                                const typeGuess = pendingClientType || 'Individual';\r\n                                                let base = (clientAsOnFile || '').toUpperCase();\r\n                                                if (typeGuess === 'Multiple Individuals') {\r\n                                                    const digits = Math.floor(10000 + Math.random() * 90000);\r\n                                                    return (base.slice(0, 5).padEnd(5, 'X') || 'HLXXX') + digits + '-0001';\r\n                                                }\r\n                                                if (!base) base = 'HLX';\r\n                                                return base.slice(0, 5).padEnd(5, 'X') + '-0001';\r\n                                            }\r\n\r\n                                            // Build from either POID or instruction record details\r\n                                            const type = (() => {\r\n                                                if (pendingClientType) return pendingClientType;\r\n                                                if (poid) return poid.company_name ? 'Company' : 'Individual';\r\n                                                const t = (instFromRecords as any)?.ClientType as string | undefined;\r\n                                                return t || 'Individual';\r\n                                            })();\r\n\r\n                                            const buildFromBase = (raw: string): string => {\r\n                                                const base = (raw || '').toUpperCase() || 'HLX';\r\n                                                return base.slice(0, 5).padEnd(5, 'X') + '-0001';\r\n                                            };\r\n\r\n                                            if (type === 'Multiple Individuals') {\r\n                                                const raw = (clientAsOnFile || (poid?.last || poid?.first) || (instFromRecords?.LastName || instFromRecords?.FirstName) || '').toUpperCase();\r\n                                                const digits = Math.floor(10000 + Math.random() * 90000);\r\n                                                return (raw.slice(0, 5).padEnd(5, 'X') || 'HLXXX') + digits + '-0001';\r\n                                            }\r\n\r\n                                            if (poid) {\r\n                                                if (type === 'Company') {\r\n                                                    return buildFromBase(poid.company_name || clientAsOnFile || poid.last || '');\r\n                                                }\r\n                                                // Individual\r\n                                                return buildFromBase(poid.last || poid.first || clientAsOnFile || '');\r\n                                            }\r\n\r\n                                            // No POID, derive from instruction record\r\n                                            if (instFromRecords) {\r\n                                                const rec: any = instFromRecords;\r\n                                                if (type === 'Company') {\r\n                                                    return buildFromBase(rec.CompanyName || clientAsOnFile || rec.LastName || rec.FirstName || '');\r\n                                                }\r\n                                                return buildFromBase(rec.LastName || rec.FirstName || clientAsOnFile || '');\r\n                                            }\r\n\r\n                                            // Final fallback\r\n                                            return buildFromBase(clientAsOnFile || 'HLX');\r\n                                        })()}\r\n                                    />\r\n                                    <FolderStructureStep\r\n                                        folderStructure={folderStructure}\r\n                                        setFolderStructure={(value) => {\r\n                                            setFolderStructureWithReset(value);\r\n                                            // Auto-select Area of Work based on folder structure\r\n                                            if (value === 'Default / Commercial') setAreaOfWorkWithReset('Commercial');\r\n                                            else if (value === 'Residential Possession') setAreaOfWorkWithReset('Property');\r\n                                            else if (value === 'Adjudication') setAreaOfWorkWithReset('Construction');\r\n                                            else if (value === 'Employment') setAreaOfWorkWithReset('Employment');\r\n                                        }}\r\n                                        folderOptions={['Default / Commercial', 'Residential Possession', 'Adjudication', 'Employment']}\r\n                                        onContinue={function (): void {} }\r\n                                    />\r\n                                    <AreaOfWorkStep\r\n                                        areaOfWork={areaOfWork}\r\n                                        setAreaOfWork={setAreaOfWorkWithReset}\r\n                                        getGroupColor={getGroupColor}\r\n                                        onContinue={function (): void {} }\r\n                                    />\r\n                                    <PracticeAreaStep\r\n                                        options={areaOfWork && practiceAreasByArea[areaOfWork] ? practiceAreasByArea[areaOfWork] : ['Please select an Area of Work']}\r\n                                        practiceArea={practiceArea}\r\n                                        setPracticeArea={setPracticeAreaWithReset}\r\n                                        areaOfWork={areaOfWork}\r\n                                        onContinue={function (): void {} }\r\n                                    />\r\n                                    <ValueAndSourceStep\r\n                                        disputeValue={disputeValue}\r\n                                        setDisputeValue={setDisputeValueWithReset}\r\n                                        source={source}\r\n                                        setSource={setSource}\r\n                                        referrerName={referrerName}\r\n                                        setReferrerName={setReferrerName}\r\n                                        onContinue={() => {}}\r\n                                    />\r\n                                    <BudgetStep\r\n                                        budgetRequired={budgetRequired}\r\n                                        setBudgetRequired={setBudgetRequired}\r\n                                        budgetAmount={budgetAmount}\r\n                                        setBudgetAmount={setBudgetAmount}\r\n                                        threshold={budgetThreshold}\r\n                                        setThreshold={setBudgetThreshold}\r\n                                        notifyUsers={budgetNotifyUsers}\r\n                                        setNotifyUsers={setBudgetNotifyUsers}\r\n                                    />\r\n\r\n                                </Stack>\r\n                                {/* Navigation buttons for form step */}\r\n                                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginTop: 24 }}>\r\n                                    {/* Back button */}\r\n                                    <button\r\n                                        onClick={handleBackToClients}\r\n                                        style={{\r\n                                            background: 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n                                            border: '1px solid #e5e7eb',\r\n                                            borderRadius: 8,\r\n                                            padding: '12px 20px',\r\n                                            fontSize: 14,\r\n                                            fontWeight: 600,\r\n                                            color: '#374151',\r\n                                            cursor: 'pointer',\r\n                                            display: 'flex',\r\n                                            alignItems: 'center',\r\n                                            gap: 8,\r\n                                            transition: 'all 0.2s ease',\r\n                                            boxShadow: '0 2px 4px rgba(0, 0, 0, 0.05)'\r\n                                        }}\r\n                                        onMouseEnter={(e) => {\r\n                                            e.currentTarget.style.background = 'linear-gradient(135deg, #F8FAFC 0%, #F1F5F9 100%)';\r\n                                            e.currentTarget.style.borderColor = '#3690CE';\r\n                                            e.currentTarget.style.transform = 'translateY(-1px)';\r\n                                            e.currentTarget.style.boxShadow = '0 4px 8px rgba(0, 0, 0, 0.1)';\r\n                                        }}\r\n                                        onMouseLeave={(e) => {\r\n                                            e.currentTarget.style.background = 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)';\r\n                                            e.currentTarget.style.borderColor = '#e5e7eb';\r\n                                            e.currentTarget.style.transform = 'translateY(0)';\r\n                                            e.currentTarget.style.boxShadow = '0 2px 4px rgba(0, 0, 0, 0.05)';\r\n                                        }}\r\n                                    >\r\n                                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n                                            <path d=\"M19 12H5M12 19l-7-7 7-7\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                        </svg>\r\n                                        Back to Party Details\r\n                                    </button>\r\n\r\n                                    {/* Forward button */}\r\n                                    <button\r\n                                        onClick={handleGoToReview}\r\n                                        style={{\r\n                                            background: 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n                                            border: '1px solid #e5e7eb',\r\n                                            borderRadius: 8,\r\n                                            padding: '12px 20px',\r\n                                            fontSize: 14,\r\n                                            fontWeight: 600,\r\n                                            color: '#374151',\r\n                                            cursor: 'pointer',\r\n                                            display: 'flex',\r\n                                            alignItems: 'center',\r\n                                            gap: 8,\r\n                                            transition: 'all 0.2s ease',\r\n                                            boxShadow: '0 2px 4px rgba(0, 0, 0, 0.05)'\r\n                                        }}\r\n                                        onMouseEnter={(e) => {\r\n                                            e.currentTarget.style.background = 'linear-gradient(135deg, #F8FAFC 0%, #F1F5F9 100%)';\r\n                                            e.currentTarget.style.borderColor = '#3690CE';\r\n                                            e.currentTarget.style.transform = 'translateY(-1px)';\r\n                                            e.currentTarget.style.boxShadow = '0 4px 8px rgba(0, 0, 0, 0.1)';\r\n                                        }}\r\n                                        onMouseLeave={(e) => {\r\n                                            e.currentTarget.style.background = 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)';\r\n                                            e.currentTarget.style.borderColor = '#e5e7eb';\r\n                                            e.currentTarget.style.transform = 'translateY(0)';\r\n                                            e.currentTarget.style.boxShadow = '0 2px 4px rgba(0, 0, 0, 0.05)';\r\n                                        }}\r\n                                    >\r\n                                        Review Summary\r\n                                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n                                            <path d=\"M5 12h14m-7-7l7 7-7 7\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                        </svg>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Step 3: Review Summary */}\r\n                            <div style={{ width: '33.333%', padding: '16px', boxSizing: 'border-box' }}>\r\n                                    {/* Diagnostic Assistant - Bridge between fee earner and dev team */}\r\n                                    {debugInspectorOpen && (\r\n                                        <div style={{\r\n                                            marginBottom: 24,\r\n                                            border: '2px solid #D65541',\r\n                                            borderRadius: 8,\r\n                                            background: 'linear-gradient(135deg, #FFFFFF 0%, #FEF2F2 100%)',\r\n                                            overflow: 'hidden'\r\n                                        }}>\r\n                                            <div style={{\r\n                                                padding: '12px 16px',\r\n                                                background: 'linear-gradient(135deg, #D65541 0%, #B83C2B 100%)',\r\n                                                color: '#fff',\r\n                                                fontSize: 12,\r\n                                                fontWeight: 600,\r\n                                                display: 'flex',\r\n                                                justifyContent: 'space-between',\r\n                                                alignItems: 'center'\r\n                                            }}>\r\n                                                <span style={{ display: 'flex', alignItems: 'center', gap: 6 }}>\r\n                                                    <i className=\"ms-Icon ms-Icon--Medical\" style={{ fontSize: 12 }} />\r\n                                                    Diagnostic Assistant\r\n                                                </span>\r\n                                                <button\r\n                                                    onClick={() => setDebugInspectorOpen(false)}\r\n                                                    style={{\r\n                                                        background: 'rgba(255,255,255,0.1)',\r\n                                                        border: '1px solid rgba(255,255,255,0.2)',\r\n                                                        borderRadius: 4,\r\n                                                        padding: '4px 8px',\r\n                                                        fontSize: 10,\r\n                                                        color: '#fff',\r\n                                                        cursor: 'pointer',\r\n                                                        display: 'flex',\r\n                                                        alignItems: 'center',\r\n                                                        gap: 4\r\n                                                    }}\r\n                                                >\r\n                                                    <i className=\"ms-Icon ms-Icon--Cancel\" style={{ fontSize: 10 }} />\r\n                                                    Close\r\n                                                </button>\r\n                                            </div>\r\n                                            <div style={{ padding: 16, display: 'grid', gap: 16 }}>\r\n                                                {/* Issue Summary */}\r\n                                                {failureSummary ? (\r\n                                                    <div style={{\r\n                                                        padding: '12px',\r\n                                                        background: 'linear-gradient(135deg, #FFF5F5 0%, #FDE8E8 100%)',\r\n                                                        border: '1px solid #fecaca',\r\n                                                        borderRadius: 6,\r\n                                                        fontSize: 12\r\n                                                    }}>\r\n                                                        <div style={{ fontWeight: 700, color: '#b91c1c', marginBottom: 8, display: 'flex', alignItems: 'center', gap: 6 }}>\r\n                                                            <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#b91c1c\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"10\"/><line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"13\"/><line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"16\"/></svg>\r\n                                                            Issue Detected\r\n                                                        </div>\r\n                                                        <div style={{ color: '#7c2d12', lineHeight: 1.4 }}>{failureSummary}</div>\r\n                                                        <button\r\n                                                            onClick={async () => {\r\n                                                                try {\r\n                                                                    setSupportSending(true);\r\n                                                                    \r\n                                                                    // Prepare detailed report\r\n                                                                    const reportDetails = {\r\n                                                                        issue: failureSummary,\r\n                                                                        user: userInitials,\r\n                                                                        instruction: instructionRef || 'N/A',\r\n                                                                        timestamp: new Date().toLocaleString(),\r\n                                                                        formData: {\r\n                                                                            client_type: clientType,\r\n                                                                            area_of_work: areaOfWork,\r\n                                                                            practice_area: practiceArea,\r\n                                                                            description: description,\r\n                                                                            fee_earner: teamMember,\r\n                                                                            supervising_partner: supervisingPartner\r\n                                                                        },\r\n                                                                        processingSteps: processingSteps.map(step => ({\r\n                                                                            label: step.label,\r\n                                                                            status: step.status,\r\n                                                                            message: step.message\r\n                                                                        })),\r\n                                                                        userAgent: navigator.userAgent,\r\n                                                                        url: window.location.href\r\n                                                                    };\r\n\r\n                                                                    const emailBody = `\r\n                                                                        <h2>Matter Opening Issue Report</h2>\r\n                                                                        <p><strong>Issue:</strong> ${failureSummary}</p>\r\n                                                                        <p><strong>User:</strong> ${userInitials}</p>\r\n                                                                        <p><strong>Instruction Reference:</strong> ${instructionRef || 'N/A'}</p>\r\n                                                                        <p><strong>Time:</strong> ${new Date().toLocaleString()}</p>\r\n                                                                        \r\n                                                                        <h3>Form Data</h3>\r\n                                                                        <ul>\r\n                                                                            <li><strong>Client Type:</strong> ${clientType}</li>\r\n                                                                            <li><strong>Area of Work:</strong> ${areaOfWork}</li>\r\n                                                                            <li><strong>Practice Area:</strong> ${practiceArea}</li>\r\n                                                                            <li><strong>Description:</strong> ${description}</li>\r\n                                                                            <li><strong>Fee Earner:</strong> ${teamMember}</li>\r\n                                                                            <li><strong>Supervising Partner:</strong> ${supervisingPartner}</li>\r\n                                                                        </ul>\r\n\r\n                                                                        <h3>Processing Steps Status</h3>\r\n                                                                        <table border=\"1\" style=\"border-collapse: collapse;\">\r\n                                                                            <tr><th>Step</th><th>Status</th><th>Message</th></tr>\r\n                                                                            ${processingSteps.map(step => \r\n                                                                                `<tr>\r\n                                                                                    <td>${step.label}</td>\r\n                                                                                    <td>${step.status}</td>\r\n                                                                                    <td>${step.message || ''}</td>\r\n                                                                                </tr>`\r\n                                                                            ).join('')}\r\n                                                                        </table>\r\n\r\n                                                                        <h3>Technical Details</h3>\r\n                                                                        <p><strong>User Agent:</strong> ${navigator.userAgent}</p>\r\n                                                                        <p><strong>URL:</strong> ${window.location.href}</p>\r\n                                                                        \r\n                                                                        <pre>${JSON.stringify(reportDetails, null, 2)}</pre>\r\n                                                                    `;\r\n\r\n                                                                    const response = await fetch('/api/sendEmail', {\r\n                                                                        method: 'POST',\r\n                                                                        headers: {\r\n                                                                            'Content-Type': 'application/json',\r\n                                                                        },\r\n                                                                        body: JSON.stringify({\r\n                                                                            to: 'lz@helix-law.com',\r\n                                                                            subject: `Matter Opening Issue - ${userInitials} - ${instructionRef || 'Unknown'}`,\r\n                                                                            html: emailBody,\r\n                                                                            from_email: 'automations@helix-law.com'\r\n                                                                        })\r\n                                                                    });\r\n\r\n                                                                    if (response.ok) {\r\n                                                                        alert('Issue report sent successfully to development team!');\r\n                                                                    } else {\r\n                                                                        const error = await response.text();\r\n                                                                        alert(`Failed to send report: ${error}`);\r\n                                                                    }\r\n                                                                } catch (error) {\r\n                                                                    console.error('Failed to send report:', error);\r\n                                                                    const errorMessage = error instanceof Error ? error.message : String(error);\r\n                                                                    alert(`Failed to send report: ${errorMessage}`);\r\n                                                                } finally {\r\n                                                                    setSupportSending(false);\r\n                                                                }\r\n                                                            }}\r\n                                                            style={{\r\n                                                                marginTop: 10,\r\n                                                                background: supportSending \r\n                                                                    ? 'linear-gradient(135deg, #9CA3AF 0%, #6B7280 100%)' \r\n                                                                    : 'linear-gradient(135deg, #D65541 0%, #B83C2B 100%)',\r\n                                                                border: 'none',\r\n                                                                borderRadius: 4,\r\n                                                                padding: '6px 12px',\r\n                                                                fontSize: 11,\r\n                                                                fontWeight: 600,\r\n                                                                color: '#fff',\r\n                                                                cursor: supportSending ? 'not-allowed' : 'pointer',\r\n                                                                display: 'flex',\r\n                                                                alignItems: 'center',\r\n                                                                gap: 4\r\n                                                            }}\r\n                                                            disabled={supportSending}\r\n                                                        >\r\n                                                            <i className={`ms-Icon ${supportSending ? 'ms-Icon--Clock' : 'ms-Icon--Mail'}`} style={{ fontSize: 10 }} />\r\n                                                            {supportSending ? 'Sending...' : 'Report to Development Team'}\r\n                                                        </button>\r\n                                                    </div>\r\n                                                ) : (\r\n                                                    <div style={{\r\n                                                        padding: '12px',\r\n                                                        background: 'linear-gradient(135deg, #F0FDF4 0%, #DCFCE7 100%)',\r\n                                                        border: '1px solid #bbf7d0',\r\n                                                        borderRadius: 6,\r\n                                                        fontSize: 12,\r\n                                                        color: '#166534'\r\n                                                    }}>\r\n                                                        <div style={{ fontWeight: 700, marginBottom: 4, display: 'flex', alignItems: 'center', gap: 6 }}>\r\n                                                            <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#16a34a\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M9 12l2 2 4-4\"/><circle cx=\"12\" cy=\"12\" r=\"10\"/></svg>\r\n                                                            No Issues Detected\r\n                                                        </div>\r\n                                                        System is running normally. This panel opened for diagnostic purposes.\r\n                                                        \r\n                                                        <button\r\n                                                            onClick={async () => {\r\n                                                                try {\r\n                                                                    setSupportSending(true);\r\n                                                                    \r\n                                                                    // Prepare general feedback report\r\n                                                                    const reportDetails = {\r\n                                                                        type: 'general_feedback',\r\n                                                                        user: userInitials,\r\n                                                                        instruction: instructionRef || 'N/A',\r\n                                                                        timestamp: new Date().toLocaleString(),\r\n                                                                        formData: {\r\n                                                                            client_type: clientType,\r\n                                                                            area_of_work: areaOfWork,\r\n                                                                            practice_area: practiceArea,\r\n                                                                            description: description,\r\n                                                                            fee_earner: teamMember,\r\n                                                                            supervising_partner: supervisingPartner\r\n                                                                        },\r\n                                                                        processingSteps: processingSteps.map(step => ({\r\n                                                                            label: step.label,\r\n                                                                            status: step.status,\r\n                                                                            message: step.message\r\n                                                                        })),\r\n                                                                        userAgent: navigator.userAgent,\r\n                                                                        url: window.location.href\r\n                                                                    };\r\n\r\n                                                                    const emailBody = `\r\n                                                                        <h2>Matter Opening General Feedback</h2>\r\n                                                                        <p><strong>User:</strong> ${userInitials}</p>\r\n                                                                        <p><strong>Instruction Reference:</strong> ${instructionRef || 'N/A'}</p>\r\n                                                                        <p><strong>Time:</strong> ${new Date().toLocaleString()}</p>\r\n                                                                        <p><strong>Type:</strong> General feedback/diagnostic report</p>\r\n                                                                        \r\n                                                                        <h3>Form Data</h3>\r\n                                                                        <ul>\r\n                                                                            <li><strong>Client Type:</strong> ${clientType}</li>\r\n                                                                            <li><strong>Area of Work:</strong> ${areaOfWork}</li>\r\n                                                                            <li><strong>Practice Area:</strong> ${practiceArea}</li>\r\n                                                                            <li><strong>Description:</strong> ${description}</li>\r\n                                                                            <li><strong>Fee Earner:</strong> ${teamMember}</li>\r\n                                                                            <li><strong>Supervising Partner:</strong> ${supervisingPartner}</li>\r\n                                                                        </ul>\r\n\r\n                                                                        <h3>Processing Steps Status</h3>\r\n                                                                        <table border=\"1\" style=\"border-collapse: collapse;\">\r\n                                                                            <tr><th>Step</th><th>Status</th><th>Message</th></tr>\r\n                                                                            ${processingSteps.map(step => \r\n                                                                                `<tr>\r\n                                                                                    <td>${step.label}</td>\r\n                                                                                    <td>${step.status}</td>\r\n                                                                                    <td>${step.message || ''}</td>\r\n                                                                                </tr>`\r\n                                                                            ).join('')}\r\n                                                                        </table>\r\n\r\n                                                                        <h3>Technical Details</h3>\r\n                                                                        <p><strong>User Agent:</strong> ${navigator.userAgent}</p>\r\n                                                                        <p><strong>URL:</strong> ${window.location.href}</p>\r\n                                                                        \r\n                                                                        <pre>${JSON.stringify(reportDetails, null, 2)}</pre>\r\n                                                                    `;\r\n\r\n                                                                    const response = await fetch('/api/sendEmail', {\r\n                                                                        method: 'POST',\r\n                                                                        headers: {\r\n                                                                            'Content-Type': 'application/json',\r\n                                                                        },\r\n                                                                        body: JSON.stringify({\r\n                                                                            to: 'lz@helix-law.com',\r\n                                                                            subject: `Matter Opening Feedback - ${userInitials} - ${instructionRef || 'Unknown'}`,\r\n                                                                            html: emailBody,\r\n                                                                            from_email: 'automations@helix-law.com'\r\n                                                                        })\r\n                                                                    });\r\n\r\n                                                                    if (response.ok) {\r\n                                                                        alert('Feedback sent successfully to development team!');\r\n                                                                    } else {\r\n                                                                        const error = await response.text();\r\n                                                                        alert(`Failed to send feedback: ${error}`);\r\n                                                                    }\r\n                                                                } catch (error) {\r\n                                                                    console.error('Failed to send feedback:', error);\r\n                                                                    const errorMessage = error instanceof Error ? error.message : String(error);\r\n                                                                    alert(`Failed to send feedback: ${errorMessage}`);\r\n                                                                } finally {\r\n                                                                    setSupportSending(false);\r\n                                                                }\r\n                                                            }}\r\n                                                            style={{\r\n                                                                marginTop: 8,\r\n                                                                background: supportSending \r\n                                                                    ? 'linear-gradient(135deg, #9CA3AF 0%, #6B7280 100%)' \r\n                                                                    : 'linear-gradient(135deg, #2563EB 0%, #1D4ED8 100%)',\r\n                                                                border: 'none',\r\n                                                                borderRadius: 4,\r\n                                                                padding: '4px 8px',\r\n                                                                fontSize: 10,\r\n                                                                fontWeight: 600,\r\n                                                                color: '#fff',\r\n                                                                cursor: supportSending ? 'not-allowed' : 'pointer',\r\n                                                                display: 'flex',\r\n                                                                alignItems: 'center',\r\n                                                                gap: 3\r\n                                                            }}\r\n                                                            disabled={supportSending}\r\n                                                        >\r\n                                                            <i className={`ms-Icon ${supportSending ? 'ms-Icon--Clock' : 'ms-Icon--Feedback'}`} style={{ fontSize: 9 }} />\r\n                                                            {supportSending ? 'Sending...' : 'Send Feedback'}\r\n                                                        </button>\r\n                                                    </div>\r\n                                                )}\r\n\r\n                                                {/* Processing Step Status */}\r\n                                                {processingSteps.length > 0 && (\r\n                                                    <div>\r\n                                                        <div style={{ fontSize: 12, fontWeight: 700, color: '#374151', marginBottom: 8 }}>Step Status</div>\r\n                                                        <div style={{\r\n                                                            border: '1px solid #e5e7eb',\r\n                                                            borderRadius: 6,\r\n                                                            overflow: 'hidden',\r\n                                                            background: '#fff'\r\n                                                        }}>\r\n                                                            {processingSteps.slice(0, 6).map((step, idx) => (\r\n                                                                <div key={`step-${idx}`} style={{\r\n                                                                    padding: '8px 12px',\r\n                                                                    borderBottom: idx < 5 ? '1px solid #f1f5f9' : 'none',\r\n                                                                    display: 'flex',\r\n                                                                    justifyContent: 'space-between',\r\n                                                                    alignItems: 'center'\r\n                                                                }}>\r\n                                                                    <span style={{ fontSize: 11, color: '#6b7280' }}>{step.label}</span>\r\n                                                                    <span style={{\r\n                                                                        fontSize: 10,\r\n                                                                        fontWeight: 700,\r\n                                                                        padding: '2px 6px',\r\n                                                                        borderRadius: 3,\r\n                                                                        background: step.status === 'success' ? '#dcfce7' : step.status === 'error' ? '#fecaca' : '#f1f5f9',\r\n                                                                        color: step.status === 'success' ? '#166534' : step.status === 'error' ? '#dc2626' : '#6b7280'\r\n                                                                    }}>\r\n                                                                        {step.status === 'success' ? '✓' : step.status === 'error' ? '✗' : '⋯'}\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            ))}\r\n                                                            {processingSteps.length > 6 && (\r\n                                                                <div style={{ padding: '6px 12px', fontSize: 10, color: '#9ca3af', textAlign: 'center' }}>\r\n                                                                    ...and {processingSteps.length - 6} more steps\r\n                                                                </div>\r\n                                                            )}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )}\r\n\r\n                                                {/* Last Operation Details */}\r\n                                                {operationEvents.length > 0 && (\r\n                                                    <div>\r\n                                                        <div style={{ fontSize: 12, fontWeight: 700, color: '#374151', marginBottom: 8 }}>Last Operation</div>\r\n                                                        <div style={{\r\n                                                            padding: '10px 12px',\r\n                                                            background: '#f8fafc',\r\n                                                            border: '1px solid #e5e7eb',\r\n                                                            borderRadius: 6,\r\n                                                            fontSize: 11\r\n                                                        }}>\r\n                                                            {(() => {\r\n                                                                const lastOp = operationEvents[operationEvents.length - 1];\r\n                                                                const isError = lastOp?.phase === 'error';\r\n                                                                return (\r\n                                                                    <div>\r\n                                                                        <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: 6 }}>\r\n                                                                            <span style={{ fontWeight: 600, color: '#374151' }}>{lastOp?.label || 'Unknown'}</span>\r\n                                                                            <span style={{ color: isError ? '#dc2626' : '#16a34a', fontWeight: 600 }}>\r\n                                                                                {lastOp?.phase?.toUpperCase() || 'N/A'}\r\n                                                                            </span>\r\n                                                                        </div>\r\n                                                                        {lastOp?.method && (\r\n                                                                            <div style={{ color: '#6b7280' }}>Method: {lastOp.method}</div>\r\n                                                                        )}\r\n                                                                        {lastOp?.status && (\r\n                                                                            <div style={{ color: '#6b7280' }}>Status: {lastOp.status}</div>\r\n                                                                        )}\r\n                                                                        {isError && lastOp?.responseSummary && (\r\n                                                                            <div style={{ marginTop: 8, padding: 8, background: '#fef2f2', border: '1px solid #fecaca', borderRadius: 4 }}>\r\n                                                                                <div style={{ fontSize: 10, color: '#dc2626', fontWeight: 600, marginBottom: 4 }}>Error Response:</div>\r\n                                                                                <div style={{ fontFamily: 'monospace', fontSize: 10, color: '#7c2d12' }}>{lastOp.responseSummary}</div>\r\n                                                                            </div>\r\n                                                                        )}\r\n                                                                    </div>\r\n                                                                );\r\n                                                            })()}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )}\r\n\r\n                                                {/* Advanced Section Toggle */}\r\n                                                <div>\r\n                                                    <button\r\n                                                        onClick={() => setDebugAdvancedOpen(!debugAdvancedOpen)}\r\n                                                        style={{\r\n                                                            width: '100%',\r\n                                                            padding: '8px 12px',\r\n                                                            background: 'linear-gradient(135deg, #F8FAFC 0%, #F1F5F9 100%)',\r\n                                                            border: '1px solid #e5e7eb',\r\n                                                            borderRadius: 6,\r\n                                                            fontSize: 11,\r\n                                                            fontWeight: 600,\r\n                                                            color: '#374151',\r\n                                                            cursor: 'pointer',\r\n                                                            display: 'flex',\r\n                                                            justifyContent: 'space-between',\r\n                                                            alignItems: 'center'\r\n                                                        }}\r\n                                                    >\r\n                                                        <span style={{ display: 'flex', alignItems: 'center', gap: 6 }}>\r\n                                                            <i className=\"ms-Icon ms-Icon--DeveloperTools\" style={{ fontSize: 12 }} />\r\n                                                            Advanced Technical Data\r\n                                                        </span>\r\n                                                        <svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" style={{ transform: debugAdvancedOpen ? 'rotate(180deg)' : 'rotate(0deg)', transition: 'transform 0.2s' }}>\r\n                                                            <polyline points=\"6,9 12,15 18,9\"/>\r\n                                                        </svg>\r\n                                                    </button>\r\n\r\n                                                    {debugAdvancedOpen && (\r\n                                                        <div style={{ marginTop: 12, display: 'grid', gap: 12 }}>\r\n                                                            {/* Manual JSON Testing */}\r\n                                                            <div>\r\n                                                                <div style={{ fontSize: 11, fontWeight: 600, color: '#6b7280', marginBottom: 6 }}>Manual JSON Override (Dev Use)</div>\r\n                                                                <textarea\r\n                                                                    value={debugManualJson}\r\n                                                                    onChange={(e) => setDebugManualJson(e.target.value)}\r\n                                                                    placeholder=\"Paste JSON for manual testing...\"\r\n                                                                    style={{\r\n                                                                        width: '100%',\r\n                                                                        height: 100,\r\n                                                                        padding: 8,\r\n                                                                        border: '1px solid #e5e7eb',\r\n                                                                        borderRadius: 4,\r\n                                                                        fontSize: 10,\r\n                                                                        fontFamily: 'Monaco, Consolas, \"Courier New\", monospace',\r\n                                                                        resize: 'vertical',\r\n                                                                        background: '#f8fafc'\r\n                                                                    }}\r\n                                                                />\r\n                                                                <div style={{ display: 'flex', gap: 6, marginTop: 6 }}>\r\n                                                                    <button\r\n                                                                        onClick={validateManualJson}\r\n                                                                        style={{\r\n                                                                            background: 'linear-gradient(135deg, #6b7280 0%, #4b5563 100%)',\r\n                                                                            border: 'none',\r\n                                                                            borderRadius: 3,\r\n                                                                            padding: '4px 8px',\r\n                                                                            fontSize: 10,\r\n                                                                            fontWeight: 600,\r\n                                                                            color: '#fff',\r\n                                                                            cursor: 'pointer'\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        Validate\r\n                                                                    </button>\r\n                                                                    <button\r\n                                                                        onClick={processManualJson}\r\n                                                                        disabled={!debugValidation?.isValid}\r\n                                                                        style={{\r\n                                                                            background: debugValidation?.isValid \r\n                                                                                ? 'linear-gradient(135deg, #16a34a 0%, #15803d 100%)'\r\n                                                                                : '#9ca3af',\r\n                                                                            border: 'none',\r\n                                                                            borderRadius: 3,\r\n                                                                            padding: '4px 8px',\r\n                                                                            fontSize: 10,\r\n                                                                            fontWeight: 600,\r\n                                                                            color: '#fff',\r\n                                                                            cursor: debugValidation?.isValid ? 'pointer' : 'not-allowed'\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        Process\r\n                                                                    </button>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            {/* Current Form Data */}\r\n                                                            <div>\r\n                                                                <div style={{ fontSize: 11, fontWeight: 600, color: '#6b7280', marginBottom: 6 }}>Current Form JSON</div>\r\n                                                                <div style={{\r\n                                                                    padding: 8,\r\n                                                                    background: '#f8fafc',\r\n                                                                    border: '1px solid #e5e7eb',\r\n                                                                    borderRadius: 4,\r\n                                                                    fontFamily: 'Monaco, Consolas, \"Courier New\", monospace',\r\n                                                                    fontSize: 9,\r\n                                                                    maxHeight: 150,\r\n                                                                    overflow: 'auto'\r\n                                                                }}>\r\n                                                                    <pre style={{ margin: 0, whiteSpace: 'pre-wrap', wordBreak: 'break-word' }}>\r\n                                                                        {JSON.stringify(generateSampleJson(), null, 2)}\r\n                                                                    </pre>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    )}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )}\r\n\r\n\r\n\r\n                                    {/* Formal confirmation control moved near submission buttons */}\r\n                                    \r\n                                    {/* Two-column layout */}\r\n                                    <div style={{\r\n                                        display: 'grid',\r\n                                        gridTemplateColumns: '1fr 1fr',\r\n                                        gap: 20,\r\n                                        marginBottom: 8\r\n                                    }}>\r\n                                        {/* Client Information Card (locks subtly on confirmation) */}\r\n                                        <div style={lockCardStyle({\r\n                                            border: '1px solid #e1e5ea',\r\n                                            borderRadius: 8,\r\n                                            background: 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n                                            padding: 14,\r\n                                            position: 'relative'\r\n                                        })}>\r\n                                            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginBottom: 10 }}>\r\n                                                <div style={{ display: 'flex', alignItems: 'center', gap: 6 }}>\r\n                                                    <i className=\"ms-Icon ms-Icon--People\" style={{ fontSize: 12, color: '#6b7280' }} />\r\n                                                    <span style={{ fontSize: 13, fontWeight: 600, color: '#374151' }}>Client Information</span>\r\n                                                </div>\r\n                                                {currentStep === 2 && (\r\n                                                    <button\r\n                                                        onClick={() => setCurrentStep(0)}\r\n                                                        style={{\r\n                                                            background: 'none',\r\n                                                            border: '1px solid #e5e7eb',\r\n                                                            borderRadius: 4,\r\n                                                            padding: '4px 8px',\r\n                                                            fontSize: 11,\r\n                                                            fontWeight: 500,\r\n                                                            color: '#6b7280',\r\n                                                            cursor: 'pointer',\r\n                                                            display: 'flex',\r\n                                                            alignItems: 'center',\r\n                                                            gap: 4,\r\n                                                            transition: 'all 0.2s ease'\r\n                                                        }}\r\n                                                        onMouseEnter={(e) => {\r\n                                                            e.currentTarget.style.borderColor = '#3690CE';\r\n                                                            e.currentTarget.style.color = '#3690CE';\r\n                                                        }}\r\n                                                        onMouseLeave={(e) => {\r\n                                                            e.currentTarget.style.borderColor = '#e5e7eb';\r\n                                                            e.currentTarget.style.color = '#6b7280';\r\n                                                        }}\r\n                                                    >\r\n                                                        <svg width=\"10\" height=\"10\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n                                                            <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                                            <path d=\"m18.5 2.5 3 3L12 15l-4 1 1-4 9.5-9.5z\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                                        </svg>\r\n                                                        Edit\r\n                                                    </button>\r\n                                                )}\r\n                                            </div>\r\n                                            {(() => {\r\n                                                // Unique selection list\r\n                                                const uniqueSelectedIds = Array.from(new Set(selectedPoidIds || []));\r\n                                                const clients = uniqueSelectedIds\r\n                                                    .map((id: string) => effectivePoidData.find(p => p.poid_id === id))\r\n                                                    .filter(Boolean) as POID[];\r\n\r\n                                                const isCompanyType = clientType === 'Company';\r\n                                                const isMultiple = clientType === 'Multiple Individuals';\r\n\r\n                                                const company = clients.find(c => c.company_name || (c as any).company_number);\r\n                                                const directors = clients.filter(c => !(c.company_name || (c as any).company_number));\r\n\r\n                                                // Utility formatters\r\n                                                const formatPersonName = (p: POID) => `${p.first || ''} ${p.last || ''}`.trim();\r\n                                                const formatPersonAddress = (p: POID) => {\r\n                                                    const line1 = [p.house_building_number, p.street].filter(Boolean).join(' ').trim();\r\n                                                    return [line1 || undefined, p.city, p.county, p.post_code, p.country].filter(Boolean).join(', ');\r\n                                                };\r\n                                                const formatCompanyAddress = (p: POID) => {\r\n                                                    const line1 = [p.company_house_building_number, p.company_street].filter(Boolean).join(' ').trim();\r\n                                                    return [line1 || undefined, p.company_city, p.company_county, p.company_post_code, p.company_country].filter(Boolean).join(', ');\r\n                                                };\r\n                                                const getPersonAddressLines = (p: POID): string[] => {\r\n                                                    const l1 = [p.house_building_number, p.street].filter(Boolean).join(' ').trim();\r\n                                                    const l2 = [p.city, p.county].filter(Boolean).join(', ').trim();\r\n                                                    const l3 = [p.post_code, p.country].filter(Boolean).join(' ').trim();\r\n                                                    return [l1, l2, l3].filter(Boolean);\r\n                                                };\r\n                                                const getCompanyAddressLines = (p: POID): string[] => {\r\n                                                    const l1 = [p.company_house_building_number, p.company_street].filter(Boolean).join(' ').trim();\r\n                                                    const l2 = [p.company_city, p.company_county].filter(Boolean).join(', ').trim();\r\n                                                    const l3 = [p.company_post_code, p.company_country].filter(Boolean).join(' ').trim();\r\n                                                    return [l1, l2, l3].filter(Boolean);\r\n                                                };\r\n                                                const formatDob = (dob?: string | null) => {\r\n                                                    if (!dob) return undefined;\r\n                                                    const d = new Date(dob);\r\n                                                    return isNaN(d.getTime()) ? String(dob) : d.toLocaleDateString('en-GB');\r\n                                                };\r\n                                                const getBestPhone = (p: POID): string | undefined => {\r\n                                                    const v = (p as unknown as Record<string, unknown>);\r\n                                                    const raw = p.best_number ||\r\n                                                        (v.phone as string | undefined) ||\r\n                                                        (v.phone_number as string | undefined) ||\r\n                                                        (v.phoneNumber as string | undefined) ||\r\n                                                        (v.Phone as string | undefined) ||\r\n                                                        instructionPhone ||\r\n                                                        undefined;\r\n                                                    return raw && String(raw).trim() ? String(raw).trim() : undefined;\r\n                                                };\r\n\r\n                                                // Build individuals list (for Individual / Multiple Individuals / Existing)\r\n                                                let individualItems: Array<{ name: string; address?: string; email?: string }> = directors.map(p => ({\r\n                                                    name: formatPersonName(p) || (p.email || ''),\r\n                                                    address: formatPersonAddress(p) || undefined,\r\n                                                    email: p.email || undefined\r\n                                                }));\r\n\r\n                                                // Include POIDs that are individuals when not a company flow\r\n                                                if (!isCompanyType) {\r\n                                                    const otherIndividuals = clients.filter(c => !(c.company_name || (c as any).company_number));\r\n                                                    individualItems = otherIndividuals.map(p => ({\r\n                                                        name: formatPersonName(p) || (p.email || ''),\r\n                                                        address: formatPersonAddress(p) || undefined,\r\n                                                        email: p.email || undefined\r\n                                                    }));\r\n                                                }\r\n\r\n                                                // Add direct entry for Multiple Individuals if not duplicate\r\n                                                const directEntryName = (isMultiple && clientAsOnFile && clientAsOnFile.trim()) ? clientAsOnFile.trim() : '';\r\n                                                if (directEntryName) {\r\n                                                    const exists = individualItems.some(i => i.name.toLowerCase() === directEntryName.toLowerCase());\r\n                                                    if (!exists) individualItems.push({ name: directEntryName });\r\n                                                }\r\n\r\n                                                // Dedupe individuals by name (case-insensitive)\r\n                                                const seen = new Set<string>();\r\n                                                individualItems = individualItems.filter(i => {\r\n                                                    const k = i.name.toLowerCase();\r\n                                                    if (seen.has(k)) return false;\r\n                                                    seen.add(k);\r\n                                                    return true;\r\n                                                });\r\n\r\n                                                // Compute a simple nationality summary if all selected persons share one\r\n                                                const allNationalities: string[] = clients\r\n                                                    .map(p => (p as any).nationality as string | undefined)\r\n                                                    .filter(Boolean) as string[];\r\n                                                const uniqueNationalities = Array.from(new Set(allNationalities.map(n => n.trim())));\r\n                                                const nationalitySummary = uniqueNationalities.length === 1 ? uniqueNationalities[0] : undefined;\r\n\r\n                                                return (\r\n                                                    <div style={{ display: 'grid', gridTemplateColumns: '1fr', gap: 6 }}>\r\n                                                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                            <span style={{ color: '#6B6B6B', fontSize: 12 }}>Type</span>\r\n                                                            <span style={{ fontWeight: 600, fontSize: 12 }}>{clientType || '-'}</span>\r\n                                                        </div>\r\n                                                        {nationalitySummary && (\r\n                                                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                <span style={{ color: '#6B6B6B', fontSize: 12 }}>Nationality</span>\r\n                                                                <span style={{ fontWeight: 600, fontSize: 12 }}>{nationalitySummary}</span>\r\n                                                            </div>\r\n                                                        )}\r\n\r\n                                                        {/* Company flow: render company + directors */}\r\n                                                        {isCompanyType && company && (\r\n                                                            <>\r\n                                                                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                    <span style={{ color: '#6B6B6B', fontSize: 12 }}>Company</span>\r\n                                                                    <span style={{ fontWeight: 600, fontSize: 12, textAlign: 'right' }}>{company.company_name || '-'}</span>\r\n                                                                </div>\r\n                                                                {(company as any).company_number && (\r\n                                                                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                        <span style={{ color: '#6B6B6B', fontSize: 12 }}>Company No.</span>\r\n                                                                        <span style={{ fontWeight: 600, fontSize: 12, textAlign: 'right' }}>{(company as any).company_number}</span>\r\n                                                                    </div>\r\n                                                                )}\r\n                                                                {(() => {\r\n                                                                    const lines = getCompanyAddressLines(company);\r\n                                                                    return lines.length > 0 ? (\r\n                                                                        <>\r\n                                                                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                                <span style={{ color: '#6B6B6B', fontSize: 12 }}>Address</span>\r\n                                                                                <span style={{ fontWeight: 600, fontSize: 12, textAlign: 'right', lineHeight: '1.3' }}>{lines[0]}</span>\r\n                                                                            </div>\r\n                                                                            {lines[1] && (\r\n                                                                                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                                    <span style={{ color: '#6B6B6B', fontSize: 12 }}></span>\r\n                                                                                    <span style={{ fontWeight: 600, fontSize: 12, textAlign: 'right', lineHeight: '1.3' }}>{lines[1]}</span>\r\n                                                                                </div>\r\n                                                                            )}\r\n                                                                            {lines[2] && (\r\n                                                                                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                                    <span style={{ color: '#6B6B6B', fontSize: 12 }}></span>\r\n                                                                                    <span style={{ fontWeight: 600, fontSize: 12, textAlign: 'right', lineHeight: '1.3' }}>{lines[2]}</span>\r\n                                                                                </div>\r\n                                                                            )}\r\n                                                                        </>\r\n                                                                    ) : (\r\n                                                                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                            <span style={{ color: '#6B6B6B', fontSize: 12 }}>Address</span>\r\n                                                                            <span style={{ fontWeight: 600, fontSize: 12 }}>-</span>\r\n                                                                        </div>\r\n                                                                    );\r\n                                                                })()}\r\n                                                                {company.address_verification_result && (\r\n                                                                    <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                                                                        <span style={{ color: '#6B6B6B', fontSize: 12 }}>Check Result</span>\r\n                                                                        <span style={{ fontWeight: 600, fontSize: 12, textAlign: 'right' }}>{company.address_verification_result}</span>\r\n                                                                    </div>\r\n                                                                )}\r\n                                                                {directors.length > 0 && (\r\n                                                                    <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', gap: 8 }}>\r\n                                                                        <span style={{ color: '#6B6B6B', fontSize: 12 }}>Directors</span>\r\n                                                                        <div style={{ textAlign: 'right', display: 'grid', gap: 8, maxWidth: '55%' }}>\r\n                                                                            {directors.map((d, idx) => {\r\n                                                                                const lines = getPersonAddressLines(d);\r\n                                                                                return (\r\n                                                                                    <div key={`dir-${d.poid_id}-${idx}`} style={{ display: 'grid', gap: 4 }}>\r\n                                                                                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                                            <span style={{ color: '#6B6B6B', fontSize: 12 }}>Name</span>\r\n                                                                                            <span style={{ fontWeight: 600, fontSize: 12 }}>{formatPersonName(d) || '-'}</span>\r\n                                                                                        </div>\r\n                                                                                        {lines.length > 0 && (\r\n                                                                                            <>\r\n                                                                                                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                                                    <span style={{ color: '#6B6B6B', fontSize: 12 }}>Address</span>\r\n                                                                                                    <span style={{ fontWeight: 600, fontSize: 12, textAlign: 'right', lineHeight: '1.3' }}>{lines[0]}</span>\r\n                                                                                                </div>\r\n                                                                                                {lines[1] && (\r\n                                                                                                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                                                        <span style={{ color: '#6B6B6B', fontSize: 12 }}></span>\r\n                                                                                                        <span style={{ fontWeight: 600, fontSize: 12, textAlign: 'right', lineHeight: '1.3' }}>{lines[1]}</span>\r\n                                                                                                    </div>\r\n                                                                                                )}\r\n                                                                                                {lines[2] && (\r\n                                                                                                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                                                        <span style={{ color: '#6B6B6B', fontSize: 12 }}></span>\r\n                                                                                                        <span style={{ fontWeight: 600, fontSize: 12, textAlign: 'right', lineHeight: '1.3' }}>{lines[2]}</span>\r\n                                                                                                    </div>\r\n                                                                                                )}\r\n                                                                                            </>\r\n                                                                                        )}\r\n                                                                                        {d.email && (\r\n                                                                                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                                                <span style={{ color: '#6B6B6B', fontSize: 12 }}>Email</span>\r\n                                                                                                <span style={{ fontWeight: 600, fontSize: 12 }}>{d.email}</span>\r\n                                                                                            </div>\r\n                                                                                        )}\r\n                                                                                        {getBestPhone(d) && (\r\n                                                                                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                                                <span style={{ color: '#6B6B6B', fontSize: 12 }}>Phone</span>\r\n                                                                                                <span style={{ fontWeight: 600, fontSize: 12 }}>{getBestPhone(d)}</span>\r\n                                                                                            </div>\r\n                                                                                        )}\r\n                                                                                        {d.date_of_birth && (\r\n                                                                                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                                                <span style={{ color: '#6B6B6B', fontSize: 12 }}>DOB</span>\r\n                                                                                                <span style={{ fontWeight: 600, fontSize: 12 }}>{formatDob(d.date_of_birth)}</span>\r\n                                                                                            </div>\r\n                                                                                        )}\r\n                                                                                        {(d as any).nationality && (\r\n                                                                                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                                                <span style={{ color: '#6B6B6B', fontSize: 12 }}>Nationality</span>\r\n                                                                                                <span style={{ fontWeight: 600, fontSize: 12 }}>{(d as any).nationality}</span>\r\n                                                                                            </div>\r\n                                                                                        )}\r\n                                                                                        {((d as any).passport_number || (d as any).drivers_license_number) && (\r\n                                                                                            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start' }}>\r\n                                                                                                <span style={{ color: '#6B6B6B', fontSize: 12 }}>ID Docs</span>\r\n                                                                                                <span style={{ fontWeight: 600, fontSize: 12, textAlign: 'right', lineHeight: '1.3' }}>\r\n                                                                                                    {(d as any).passport_number && <span>Passport: {(d as any).passport_number}</span>}\r\n                                                                                                    {((d as any).passport_number && (d as any).drivers_license_number) && <br />}\r\n                                                                                                    {(d as any).drivers_license_number && <span>DL: {(d as any).drivers_license_number}</span>}\r\n                                                                                                </span>\r\n                                                                                            </div>\r\n                                                                                        )}\r\n                                                                                        {d.address_verification_result && (\r\n                                                                                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                                                <span style={{ color: '#6B6B6B', fontSize: 12 }}>Check</span>\r\n                                                                                                <span style={{ fontWeight: 600, fontSize: 12 }}>{d.address_verification_result}</span>\r\n                                                                                            </div>\r\n                                                                                        )}\r\n                                                                                        {idx < directors.length - 1 && (\r\n                                                                                            <div style={{ height: 1, background: '#eee', marginTop: 6 }} />\r\n                                                                                        )}\r\n                                                                                    </div>\r\n                                                                                );\r\n                                                                            })}\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                )}\r\n                                                            </>\r\n                                                        )}\r\n\r\n                                                        {/* Individuals flow: render list */}\r\n                                                        {!isCompanyType && individualItems.length > 0 && (\r\n                                                            <div style={{ display: 'grid', gap: 8 }}>\r\n                                                                {individualItems.map((i, idx) => {\r\n                                                                    // Find backing POID to surface additional details\r\n                                                                    const backing = clients.find(p => (formatPersonName(p) || (p.email || '')).toLowerCase() === i.name.toLowerCase());\r\n                                                                    const lines = backing ? getPersonAddressLines(backing) : [];\r\n                                                                    const check = backing && backing.address_verification_result ? backing.address_verification_result : undefined;\r\n                                                                    const phone = backing ? getBestPhone(backing) : undefined;\r\n                                                                    const dob = backing && backing.date_of_birth ? formatDob(backing.date_of_birth) : undefined;\r\n                                                                    return (\r\n                                                                        <div key={`ind-${idx}`} style={{ display: 'grid', gap: 4 }}>\r\n                                                                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                                <span style={{ color: '#6B6B6B', fontSize: 12 }}>Name</span>\r\n                                                                                <span style={{ fontWeight: 600, fontSize: 12 }}>{i.name}</span>\r\n                                                                            </div>\r\n                                                                            {lines.length > 0 && (\r\n                                                                                <>\r\n                                                                                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                                        <span style={{ color: '#6B6B6B', fontSize: 12 }}>Address</span>\r\n                                                                                        <span style={{ fontWeight: 600, fontSize: 12, textAlign: 'right', lineHeight: '1.3' }}>{lines[0]}</span>\r\n                                                                                    </div>\r\n                                                                                    {lines[1] && (\r\n                                                                                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                                            <span style={{ color: '#6B6B6B', fontSize: 12 }}></span>\r\n                                                                                            <span style={{ fontWeight: 600, fontSize: 12, textAlign: 'right', lineHeight: '1.3' }}>{lines[1]}</span>\r\n                                                                                        </div>\r\n                                                                                    )}\r\n                                                                                    {lines[2] && (\r\n                                                                                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                                            <span style={{ color: '#6B6B6B', fontSize: 12 }}></span>\r\n                                                                                            <span style={{ fontWeight: 600, fontSize: 12, textAlign: 'right', lineHeight: '1.3' }}>{lines[2]}</span>\r\n                                                                                        </div>\r\n                                                                                    )}\r\n                                                                                </>\r\n                                                                            )}\r\n                                                                            {i.email && (\r\n                                                                                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                                    <span style={{ color: '#6B6B6B', fontSize: 12 }}>Email</span>\r\n                                                                                    <span style={{ fontWeight: 600, fontSize: 12 }}>{i.email}</span>\r\n                                                                                </div>\r\n                                                                            )}\r\n                                                                            {phone && (\r\n                                                                                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                                    <span style={{ color: '#6B6B6B', fontSize: 12 }}>Phone</span>\r\n                                                                                    <span style={{ fontWeight: 600, fontSize: 12 }}>{phone}</span>\r\n                                                                                </div>\r\n                                                                            )}\r\n                                                                            {dob && (\r\n                                                                                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                                    <span style={{ color: '#6B6B6B', fontSize: 12 }}>DOB</span>\r\n                                                                                    <span style={{ fontWeight: 600, fontSize: 12 }}>{dob}</span>\r\n                                                                                </div>\r\n                                                                            )}\r\n                                                                            {backing && (backing as any).nationality && (\r\n                                                                                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                                    <span style={{ color: '#6B6B6B', fontSize: 12 }}>Nationality</span>\r\n                                                                                    <span style={{ fontWeight: 600, fontSize: 12 }}>{(backing as any).nationality}</span>\r\n                                                                                </div>\r\n                                                                            )}\r\n                                                                            {backing && (((backing as any).passport_number) || ((backing as any).drivers_license_number)) && (\r\n                                                                                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start' }}>\r\n                                                                                    <span style={{ color: '#6B6B6B', fontSize: 12 }}>ID Docs</span>\r\n                                                                                    <span style={{ fontWeight: 600, fontSize: 12, textAlign: 'right', lineHeight: '1.3' }}>\r\n                                                                                        {(backing as any).passport_number && <span>Passport: {(backing as any).passport_number}</span>}\r\n                                                                                        {((backing as any).passport_number && (backing as any).drivers_license_number) && <br />}\r\n                                                                                        {(backing as any).drivers_license_number && <span>DL: {(backing as any).drivers_license_number}</span>}\r\n                                                                                    </span>\r\n                                                                                </div>\r\n                                                                            )}\r\n                                                                            {check && (\r\n                                                                                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                                    <span style={{ color: '#6B6B6B', fontSize: 12 }}>Check</span>\r\n                                                                                    <span style={{ fontWeight: 600, fontSize: 12 }}>{check}</span>\r\n                                                                                </div>\r\n                                                                            )}\r\n                                                                            {idx < individualItems.length - 1 && (\r\n                                                                                <div style={{ height: 1, background: '#eee', marginTop: 6 }} />\r\n                                                                            )}\r\n                                                                        </div>\r\n                                                                    );\r\n                                                                })}\r\n                                                            </div>\r\n                                                        )}\r\n\r\n                                                        {/* Fallback when nothing selected */}\r\n                                                        {(!company && individualItems.length === 0) && (\r\n                                                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                <span style={{ color: '#6B6B6B', fontSize: 12 }}>Selected</span>\r\n                                                                <span style={{ fontWeight: 600, fontSize: 12 }}>-</span>\r\n                                                            </div>\r\n                                                        )}\r\n                                                    </div>\r\n                                                );\r\n                                            })()}\r\n                                        </div>\r\n\r\n                                        {/* Combined Matter Overview Card (locks subtly, no badge) */}\r\n                                        <div style={lockCardStyle({\r\n                                            border: '1px solid #e1e5ea',\r\n                                            borderRadius: 8,\r\n                                            background: 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n                                            padding: 14\r\n                                        })}>\r\n                                            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginBottom: 10 }}>\r\n                                                <div style={{ display: 'flex', alignItems: 'center', gap: 6 }}>\r\n                                                    <i className=\"ms-Icon ms-Icon--OpenFolderHorizontal\" style={{ fontSize: 12, color: '#6b7280' }} />\r\n                                                    <span style={{ fontSize: 13, fontWeight: 600, color: '#374151' }}>Matter Overview</span>\r\n                                                </div>\r\n                                                {currentStep === 2 && (\r\n                                                    <button\r\n                                                        onClick={() => setCurrentStep(1)}\r\n                                                        style={{\r\n                                                            background: 'none',\r\n                                                            border: '1px solid #e5e7eb',\r\n                                                            borderRadius: 4,\r\n                                                            padding: '4px 8px',\r\n                                                            fontSize: 11,\r\n                                                            fontWeight: 500,\r\n                                                            color: '#6b7280',\r\n                                                            cursor: 'pointer',\r\n                                                            display: 'flex',\r\n                                                            alignItems: 'center',\r\n                                                            gap: 4,\r\n                                                            transition: 'all 0.2s ease'\r\n                                                        }}\r\n                                                        onMouseEnter={(e) => {\r\n                                                            e.currentTarget.style.borderColor = '#3690CE';\r\n                                                            e.currentTarget.style.color = '#3690CE';\r\n                                                        }}\r\n                                                        onMouseLeave={(e) => {\r\n                                                            e.currentTarget.style.borderColor = '#e5e7eb';\r\n                                                            e.currentTarget.style.color = '#6b7280';\r\n                                                        }}\r\n                                                    >\r\n                                                        <svg width=\"10\" height=\"10\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n                                                            <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                                            <path d=\"m18.5 2.5 3 3L12 15l-4 1 1-4 9.5-9.5z\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                                        </svg>\r\n                                                        Edit\r\n                                                    </button>\r\n                                                )}\r\n                                            </div>\r\n                                            <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(180px, 1fr))', gap: 10 }}>\r\n                                                {/* Left cluster: Core Matter */}\r\n                                                <div style={{ display: 'grid', gap: 6 }}>\r\n                                                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                        <span style={{ color: '#6B6B6B', fontSize: 12 }}>Area of Work</span>\r\n                                                        <span style={{ fontWeight: 600, fontSize: 12, textAlign: 'right' }}>{areaOfWork || '-'}</span>\r\n                                                    </div>\r\n                                                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                        <span style={{ color: '#6B6B6B', fontSize: 12 }}>Practice Area</span>\r\n                                                        <span style={{ fontWeight: 600, fontSize: 12, textAlign: 'right' }}>{practiceArea || '-'}</span>\r\n                                                    </div>\r\n                                                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                        <span style={{ color: '#6B6B6B', fontSize: 12 }}>Dispute Value</span>\r\n                                                        <span style={{ fontWeight: 600, fontSize: 12 }}>{disputeValue || '-'}</span>\r\n                                                    </div>\r\n                                                    <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start' }}>\r\n                                                        <span style={{ color: '#6B6B6B', fontSize: 12 }}>Description</span>\r\n                                                        <span style={{ fontWeight: 600, fontSize: 12, maxWidth: 160, textAlign: 'right', lineHeight: '1.3' }}>\r\n                                                            {description ? (description.length > 60 ? `${description.substring(0, 60)}…` : description) : '-'}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                {/* Middle cluster: Team */}\r\n                                                <div style={{ display: 'grid', gap: 6 }}>\r\n                                                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                        <span style={{ color: '#6B6B6B', fontSize: 12 }}>Opening Date</span>\r\n                                                        <span style={{ fontWeight: 600, fontSize: 12 }}>{selectedDate ? selectedDate.toLocaleDateString('en-GB') : '-'}</span>\r\n                                                    </div>\r\n                                                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                        <span style={{ color: '#6B6B6B', fontSize: 12 }}>Solicitor</span>\r\n                                                        <span style={{ fontWeight: 600, fontSize: 12, textAlign: 'right' }}>{teamMember || '-'}</span>\r\n                                                    </div>\r\n                                                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                        <span style={{ color: '#6B6B6B', fontSize: 12 }}>Supervising Partner</span>\r\n                                                        <span style={{ fontWeight: 600, fontSize: 12, textAlign: 'right' }}>{supervisingPartner || '-'}</span>\r\n                                                    </div>\r\n                                                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                        <span style={{ color: '#6B6B6B', fontSize: 12 }}>Originating Solicitor</span>\r\n                                                        <span style={{ fontWeight: 600, fontSize: 12, textAlign: 'right' }}>{originatingSolicitor || '-'}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                {/* Right cluster: Additional */}\r\n                                                <div style={{ display: 'grid', gap: 6 }}>\r\n                                                    <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                                                        <span style={{ color: '#6B6B6B', fontSize: 12 }}>Source</span>\r\n                                                        <span style={{ fontWeight: 600, fontSize: 12, textAlign: 'right' }}>\r\n                                                            {source}{source === 'referral' && referrerName ? ` - ${referrerName}` : ''}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                    <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                                                        <span style={{ color: '#6B6B6B', fontSize: 12 }}>Folder Structure</span>\r\n                                                        <span style={{ fontWeight: 600, fontSize: 12, textAlign: 'right' }}>{folderStructure || '-'}</span>\r\n                                                    </div>\r\n                                                    {budgetRequired === 'Yes' && (\r\n                                                        <>\r\n                                                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                <span style={{ color: '#6B6B6B', fontSize: 12 }}>Budget Amount</span>\r\n                                                                <span style={{ fontWeight: 600, fontSize: 12 }}>{budgetAmount ? `£${budgetAmount}` : '-'}</span>\r\n                                                            </div>\r\n                                                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                <span style={{ color: '#6B6B6B', fontSize: 12 }}>Notify Threshold</span>\r\n                                                                <span style={{ fontWeight: 600, fontSize: 12 }}>{budgetThreshold ? `${budgetThreshold}%` : '-'}</span>\r\n                                                            </div>\r\n                                                        </>\r\n                                                    )}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        {/* Opponent Details Card */}\r\n                                        {(() => {\r\n                                            const realOpponentKeys = getRealOpponentFieldKeys();\r\n                                            const hasRealOpponentData = realOpponentKeys.length > 0;\r\n\r\n                                            if (!hasRealOpponentData) {\r\n                                                // Collapsed state - show placeholder confirmation\r\n                                                return (\r\n                                                    <div style={{\r\n                                                        border: '1px solid #e5e7eb',\r\n                                                        borderRadius: 8,\r\n                                                        background: '#f9fafb',\r\n                                                        padding: 12\r\n                                                    }}>\r\n                                                        <div style={{ display: 'flex', alignItems: 'center', gap: 6, marginBottom: 6 }}>\r\n                                                            <i className=\"ms-Icon ms-Icon--Contact\" style={{ fontSize: 12, color: '#9ca3af' }} />\r\n                                                            <span style={{ fontSize: 13, fontWeight: 500, color: '#6b7280' }}>Opponent Details</span>\r\n                                                        </div>\r\n                                                        <div style={{ \r\n                                                            fontSize: 11, \r\n                                                            color: '#9ca3af',\r\n                                                            fontStyle: 'italic',\r\n                                                            display: 'flex',\r\n                                                            alignItems: 'center',\r\n                                                            gap: 4\r\n                                                        }}>\r\n                                                            <i className=\"ms-Icon ms-Icon--InfoSolid\" style={{ fontSize: 10 }} />\r\n                                                            No opponent details provided\r\n                                                        </div>\r\n                                                    </div>\r\n                                                );\r\n                                            }\r\n\r\n                                            // Expanded state - show actual data\r\n                                            return (\r\n                                                <div style={lockCardStyle({\r\n                                                    border: '1px solid #e1e5ea',\r\n                                                    borderRadius: 8,\r\n                                                    background: 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n                                                    padding: 14\r\n                                                })}>\r\n                                                    {renderLockOverlay()}\r\n                                                    <div style={{ display: 'flex', alignItems: 'center', gap: 6, marginBottom: 10 }}>\r\n                                                        <i className=\"ms-Icon ms-Icon--Contact\" style={{ fontSize: 12, color: '#6b7280' }} />\r\n                                                        <span style={{ fontSize: 13, fontWeight: 600, color: '#374151' }}>Opponent Details</span>\r\n                                                    </div>\r\n                                                    <div style={{ display: 'grid', gridTemplateColumns: '1fr', gap: 6 }}>\r\n                                                        {realOpponentKeys.includes('opponentCompanyName') && opponentType === 'Company' && (\r\n                                                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                <span style={{ color: '#6B6B6B', fontSize: 12 }}>Company Name</span>\r\n                                                                <span style={getFieldStyle(opponentCompanyName, 'opponentCompanyName')}>{opponentCompanyName}</span>\r\n                                                            </div>\r\n                                                        )}\r\n                                                        {(realOpponentKeys.includes('opponentTitle') || realOpponentKeys.includes('opponentFirst') || realOpponentKeys.includes('opponentLast')) && (\r\n                                                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                <span style={{ color: '#6B6B6B', fontSize: 12 }}>Name</span>\r\n                                                                <span style={getFieldStyle(\r\n                                                                    `${opponentTitle ? opponentTitle + ' ' : ''}${opponentFirst || ''} ${opponentLast || ''}`.trim(),\r\n                                                                    `${originalValues.opponentTitle ? originalValues.opponentTitle + ' ' : ''}${originalValues.opponentFirst || ''} ${originalValues.opponentLast || ''}`.trim()\r\n                                                                )}>\r\n                                                                    {`${opponentTitle ? opponentTitle + ' ' : ''}${opponentFirst || ''} ${opponentLast || ''}`.trim()}\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        )}\r\n                                                        {realOpponentKeys.includes('opponentEmail') && (\r\n                                                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                <span style={{ color: '#6B6B6B', fontSize: 12 }}>Email</span>\r\n                                                                <span style={getFieldStyle(opponentEmail, 'opponentEmail')}>{opponentEmail}</span>\r\n                                                            </div>\r\n                                                        )}\r\n                                                        {realOpponentKeys.includes('opponentPhone') && (\r\n                                                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                <span style={{ color: '#6B6B6B', fontSize: 12 }}>Phone</span>\r\n                                                                <span style={getFieldStyle(opponentPhone, 'opponentPhone')}>{opponentPhone}</span>\r\n                                                            </div>\r\n                                                        )}\r\n                                                        {/* Address display (only if at least one real, non-placeholder part) */}\r\n                                                        {(() => {\r\n                                                            const addrKeys: OppFieldKey[] = ['opponentHouseNumber','opponentStreet','opponentCity','opponentCounty','opponentPostcode','opponentCountry'];\r\n                                                            const currentValues: Record<string,string> = {\r\n                                                                opponentHouseNumber: opponentHouseNumber || '',\r\n                                                                opponentStreet: opponentStreet || '',\r\n                                                                opponentCity: opponentCity || '',\r\n                                                                opponentCounty: opponentCounty || '',\r\n                                                                opponentPostcode: opponentPostcode || '',\r\n                                                                opponentCountry: opponentCountry || ''\r\n                                                            };\r\n                                                            const anyReal = addrKeys.some(k => {\r\n                                                                const v = currentValues[k].trim();\r\n                                                                if (!v) return false;\r\n                                                                if (v === (opponentPlaceholderTemplate as any)[k]) return false;\r\n                                                                if (isPlaceholderData(v)) return false;\r\n                                                                return true;\r\n                                                            });\r\n                                                            if (!anyReal) return null;\r\n                                                            const addressLine1 = [opponentHouseNumber, opponentStreet].filter(Boolean).join(' ');\r\n                                                            const addressLine2 = [opponentCity, opponentCounty].filter(Boolean).join(', ');\r\n                                                            const addressLine3 = [opponentPostcode, opponentCountry].filter(Boolean).join(' ');\r\n                                                            const originalAddressLine1 = [originalValues.opponentHouseNumber, originalValues.opponentStreet].filter(Boolean).join(' ');\r\n                                                            const originalAddressLine2 = [originalValues.opponentCity, originalValues.opponentCounty].filter(Boolean).join(', ');\r\n                                                            const originalAddressLine3 = [originalValues.opponentPostcode, originalValues.opponentCountry].filter(Boolean).join(' ');\r\n                                                            const addressStyle = (currentLine: string, originalLine: string) => {\r\n                                                                const isModified = hasUserModified(currentLine, originalLine);\r\n                                                                return {\r\n                                                                    fontWeight: isModified ? 600 : 400,\r\n                                                                    fontSize: 12,\r\n                                                                    textAlign: 'right' as const,\r\n                                                                    lineHeight: '1.3',\r\n                                                                    color: isModified ? '#111827' : '#9ca3af',\r\n                                                                    fontStyle: isModified ? 'normal' : 'italic'\r\n                                                                };\r\n                                                            };\r\n                                                            return (\r\n                                                                <>\r\n                                                                    {addressLine1 && !isPlaceholderData(addressLine1) && addressLine1 !== opponentPlaceholderTemplate.opponentHouseNumber + ' ' + opponentPlaceholderTemplate.opponentStreet && (\r\n                                                                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                            <span style={{ color: '#6B6B6B', fontSize: 12 }}>Address</span>\r\n                                                                            <span style={addressStyle(addressLine1, originalAddressLine1)}>{addressLine1}</span>\r\n                                                                        </div>\r\n                                                                    )}\r\n                                                                    {addressLine2 && !isPlaceholderData(addressLine2) && addressLine2 !== opponentPlaceholderTemplate.opponentCity + ', ' + opponentPlaceholderTemplate.opponentCounty && (\r\n                                                                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                            <span style={{ color: '#6B6B6B', fontSize: 12 }}></span>\r\n                                                                            <span style={addressStyle(addressLine2, originalAddressLine2)}>{addressLine2}</span>\r\n                                                                        </div>\r\n                                                                    )}\r\n                                                                    {addressLine3 && !isPlaceholderData(addressLine3) && addressLine3 !== opponentPlaceholderTemplate.opponentPostcode + ' ' + opponentPlaceholderTemplate.opponentCountry && (\r\n                                                                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                            <span style={{ color: '#6B6B6B', fontSize: 12 }}></span>\r\n                                                                            <span style={addressStyle(addressLine3, originalAddressLine3)}>{addressLine3}</span>\r\n                                                                        </div>\r\n                                                                    )}\r\n                                                                </>\r\n                                                            );\r\n                                                        })()}\r\n                                                    </div>\r\n                                                </div>\r\n                                            );\r\n                                        })()}\r\n\r\n                                        {/* Opponent Solicitor Details Card */}\r\n                                        {(() => {\r\n                                            // Collect solicitor field values\r\n                                            const solicitorFields = {\r\n                                                opponentSolicitorCompany, solicitorFirst, solicitorLast,\r\n                                                opponentSolicitorEmail, solicitorPhone, solicitorHouseNumber,\r\n                                                solicitorStreet, solicitorCity, solicitorCounty,\r\n                                                solicitorPostcode, solicitorCountry\r\n                                            } as const;\r\n\r\n                                            // Determine which fields are REAL (non-empty & not placeholder-like)\r\n                                            const realKeys = Object.entries(solicitorFields)\r\n                                                .filter(([_, val]) => {\r\n                                                    const v = (val || '').trim();\r\n                                                    if (!v) return false; // empty\r\n                                                    if (isPlaceholderData(v)) return false; // generic placeholder pattern\r\n                                                    const low = v.toLowerCase();\r\n                                                    // Explicit placeholder terms to ignore\r\n                                                    if (\r\n                                                        low === 'helix law ltd' ||\r\n                                                        low === 'helix law' ||\r\n                                                        low === 'invent solicitor name' ||\r\n                                                        low === 'invent name' ||\r\n                                                        low === 'brighton' ||\r\n                                                        low === 'bn1 4de' ||\r\n                                                        low === 'mr' || low === 'mrs' || low === 'ms' || low === 'dr' ||\r\n                                                        low === 'second floor' ||\r\n                                                        low.includes('station street') ||\r\n                                                        low.includes('britannia house') ||\r\n                                                        low === '0345 314 2044' || low.includes('0345 314 2044')\r\n                                                    ) return false;\r\n                                                    if (low.includes('opponentsolicitor@helix-law.com')) return false;\r\n                                                    return true;\r\n                                                })\r\n                                                .map(([k]) => k);\r\n\r\n                                            if (realKeys.length === 0) {\r\n                                                // Show collapsed placeholder card\r\n                                                return (\r\n                                                    <div style={{\r\n                                                        border: '1px solid #e5e7eb',\r\n                                                        borderRadius: 8,\r\n                                                        background: '#f9fafb',\r\n                                                        padding: 12\r\n                                                    }}>\r\n                                                        <div style={{ display: 'flex', alignItems: 'center', gap: 6, marginBottom: 6 }}>\r\n                                                            <i className=\"ms-Icon ms-Icon--ContactInfo\" style={{ fontSize: 12, color: '#9ca3af' }} />\r\n                                                            <span style={{ fontSize: 13, fontWeight: 500, color: '#6b7280' }}>Opponent Solicitor</span>\r\n                                                        </div>\r\n                                                        <div style={{ fontSize: 11, color: '#9ca3af', fontStyle: 'italic', display: 'flex', alignItems: 'center', gap: 4 }}>\r\n                                                            <i className=\"ms-Icon ms-Icon--InfoSolid\" style={{ fontSize: 10 }} />\r\n                                                            No solicitor details provided\r\n                                                        </div>\r\n                                                    </div>\r\n                                                );\r\n                                            }\r\n\r\n                                            // Build address lines only if any address fields are real\r\n                                            const addressLine1 = [solicitorHouseNumber, solicitorStreet].filter(Boolean).join(' ');\r\n                                            const addressLine2 = [solicitorCity, solicitorCounty].filter(Boolean).join(', ');\r\n                                            const addressLine3 = [solicitorPostcode, solicitorCountry].filter(Boolean).join(' ');\r\n                                            const realAddressLines = [addressLine1, addressLine2, addressLine3].filter(l => l && !isPlaceholderData(l));\r\n\r\n                                            return (\r\n                                                <div style={{\r\n                                                    border: '1px solid #e1e5ea',\r\n                                                    borderRadius: 8,\r\n                                                    background: 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n                                                    padding: 14\r\n                                                }}>\r\n                                                    <div style={{ display: 'flex', alignItems: 'center', gap: 6, marginBottom: 10 }}>\r\n                                                        <i className=\"ms-Icon ms-Icon--ContactInfo\" style={{ fontSize: 12, color: '#6b7280' }} />\r\n                                                        <span style={{ fontSize: 13, fontWeight: 600, color: '#374151' }}>Opponent Solicitor</span>\r\n                                                    </div>\r\n                                                    <div style={{ display: 'grid', gridTemplateColumns: '1fr', gap: 6 }}>\r\n                                                        {realKeys.includes('opponentSolicitorCompany') && (\r\n                                                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                <span style={{ color: '#6B6B6B', fontSize: 12 }}>Company Name</span>\r\n                                                                <span style={getFieldStyle(opponentSolicitorCompany || '', 'opponentSolicitorCompany')}>{opponentSolicitorCompany}</span>\r\n                                                            </div>\r\n                                                        )}\r\n                                                        {(realKeys.includes('solicitorFirst') || realKeys.includes('solicitorLast')) && (\r\n                                                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                <span style={{ color: '#6B6B6B', fontSize: 12 }}>Name</span>\r\n                                                                <span style={getFieldStyle(`${solicitorFirst || ''} ${solicitorLast || ''}`.trim(), `${originalValues.solicitorFirst || ''} ${originalValues.solicitorLast || ''}`.trim())}>{`${solicitorFirst || ''} ${solicitorLast || ''}`.trim()}</span>\r\n                                                            </div>\r\n                                                        )}\r\n                                                        {realKeys.includes('opponentSolicitorEmail') && (\r\n                                                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                <span style={{ color: '#6B6B6B', fontSize: 12 }}>Email</span>\r\n                                                                <span style={getFieldStyle(opponentSolicitorEmail || '', 'opponentSolicitorEmail')}>{opponentSolicitorEmail}</span>\r\n                                                            </div>\r\n                                                        )}\r\n                                                        {realKeys.includes('solicitorPhone') && (\r\n                                                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                <span style={{ color: '#6B6B6B', fontSize: 12 }}>Phone</span>\r\n                                                                <span style={getFieldStyle(solicitorPhone || '', 'solicitorPhone')}>{solicitorPhone}</span>\r\n                                                            </div>\r\n                                                        )}\r\n                                                        {realAddressLines.length > 0 && (\r\n                                                            <>\r\n                                                                {addressLine1 && !isPlaceholderData(addressLine1) && (\r\n                                                                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                        <span style={{ color: '#6B6B6B', fontSize: 12 }}>Address</span>\r\n                                                                        <span style={getFieldStyle(addressLine1, `${originalValues.solicitorHouseNumber || ''} ${originalValues.solicitorStreet || ''}`.trim())}>{addressLine1}</span>\r\n                                                                    </div>\r\n                                                                )}\r\n                                                                {addressLine2 && !isPlaceholderData(addressLine2) && (\r\n                                                                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                        <span style={{ color: '#6B6B6B', fontSize: 12 }}></span>\r\n                                                                        <span style={getFieldStyle(addressLine2, `${originalValues.solicitorCity || ''}, ${originalValues.solicitorCounty || ''}`.replace(/^,\\s*/, ''))}>{addressLine2}</span>\r\n                                                                    </div>\r\n                                                                )}\r\n                                                                {addressLine3 && !isPlaceholderData(addressLine3) && (\r\n                                                                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                                                        <span style={{ color: '#6B6B6B', fontSize: 12 }}></span>\r\n                                                                        <span style={getFieldStyle(addressLine3, `${originalValues.solicitorPostcode || ''} ${originalValues.solicitorCountry || ''}`.trim())}>{addressLine3}</span>\r\n                                                                    </div>\r\n                                                                )}\r\n                                                            </>\r\n                                                        )}\r\n                                                    </div>\r\n                                                </div>\r\n                                            );\r\n                                        })()}\r\n                                    </div>\r\n\r\n                                    {/* Integrated confirmation and conflicts check */}\r\n                                    {!summaryConfirmed && (\r\n                                        <div style={{\r\n                                            marginTop: 16,\r\n                                            padding: '16px 18px',\r\n                                            background: 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n                                            border: '1px solid #e2e8f0',\r\n                                            borderRadius: 8,\r\n                                            boxShadow: '0 2px 4px rgba(0,0,0,0.04)'\r\n                                        }}>\r\n                                            {/* Conflicts status row */}\r\n                                            <div style={{ \r\n                                                display: 'flex',\r\n                                                alignItems: 'center',\r\n                                                gap: 10,\r\n                                                marginBottom: 12,\r\n                                                paddingBottom: 12,\r\n                                                borderBottom: '1px solid #e2e8f0'\r\n                                            }}>\r\n                                                <i className={`ms-Icon ms-Icon--${noConflict ? 'CheckMark' : 'Warning'}`} \r\n                                                   style={{ fontSize: 14, color: noConflict ? '#059669' : '#dc2626' }} />\r\n                                                <span style={{ fontSize: 13, fontWeight: 500, color: noConflict ? '#047857' : '#b91c1c' }}>\r\n                                                    {noConflict ? 'No conflicts detected' : 'Conflict check required'}\r\n                                                </span>\r\n                                                {editsAfterConfirmation && (\r\n                                                    <span style={{\r\n                                                        marginLeft: 'auto',\r\n                                                        padding: '2px 8px',\r\n                                                        background: '#fef3c7',\r\n                                                        color: '#92400e',\r\n                                                        borderRadius: 4,\r\n                                                        fontSize: 11,\r\n                                                        fontWeight: 500,\r\n                                                        border: '1px solid #fde68a'\r\n                                                    }}>\r\n                                                        Changes detected\r\n                                                    </span>\r\n                                                )}\r\n                                            </div>\r\n                                            \r\n                                            {/* Confirmation row */}\r\n                                            <div style={{ display: 'flex', alignItems: 'center', gap: 16 }}>\r\n                                                <label style={{ display: 'flex', alignItems: 'center', gap: 10, cursor: 'pointer', flex: 1, margin: 0 }}>\r\n                                                    <input\r\n                                                        type=\"checkbox\"\r\n                                                        checked={confirmAcknowledge}\r\n                                                        onChange={(e) => setConfirmAcknowledge(e.currentTarget.checked)}\r\n                                                        style={{\r\n                                                            width: 16,\r\n                                                            height: 16,\r\n                                                            cursor: 'pointer',\r\n                                                            accentColor: '#D65541'\r\n                                                        }}\r\n                                                    />\r\n                                                    <span style={{ fontSize: 13, color: '#374151', lineHeight: 1.3 }}>\r\n                                                        {editsAfterConfirmation \r\n                                                            ? 'I have reviewed the changes and am ready to proceed' \r\n                                                            : 'I have reviewed all details and am ready to proceed'}\r\n                                                        {instructionRef && (\r\n                                                            <span style={{\r\n                                                                marginLeft: 8,\r\n                                                                padding: '2px 6px',\r\n                                                                background: '#f1f5f9',\r\n                                                                color: '#475569',\r\n                                                                borderRadius: 4,\r\n                                                                fontSize: 11,\r\n                                                                fontWeight: 500\r\n                                                            }}>\r\n                                                                {instructionRef}\r\n                                                            </span>\r\n                                                        )}\r\n                                                    </span>\r\n                                                </label>\r\n                                                <button\r\n                                                    type=\"button\"\r\n                                                    onClick={() => {\r\n                                                        if (!confirmAcknowledge || processingStarted) return;\r\n                                                        setSummaryConfirmed(true);\r\n                                                        setEditsAfterConfirmation(false);\r\n                                                        // Kick off processing immediately so status header & steps align\r\n                                                        if (!isProcessing) {\r\n                                                            setProcessingStarted(true);\r\n                                                            simulateProcessing().then(r => r && setGeneratedCclUrl(r.url));\r\n                                                        }\r\n                                                        // Smooth scroll to processing section after a brief delay\r\n                                                        setTimeout(() => {\r\n                                                            const processingSection = document.querySelector('[data-processing-section]');\r\n                                                            if (processingSection) {\r\n                                                                processingSection.scrollIntoView({ \r\n                                                                    behavior: 'smooth', \r\n                                                                    block: 'start' \r\n                                                                });\r\n                                                            }\r\n                                                        }, 200);\r\n                                                    }}\r\n                                                    disabled={!confirmAcknowledge}\r\n                                                    style={{\r\n                                                        background: confirmAcknowledge \r\n                                                            ? 'linear-gradient(135deg, #D65541 0%, #B83C2B 100%)' \r\n                                                            : '#f3f4f6',\r\n                                                        color: confirmAcknowledge ? '#fff' : '#9ca3af',\r\n                                                        border: confirmAcknowledge \r\n                                                            ? '1px solid #B83C2B' \r\n                                                            : '1px solid #d1d5db',\r\n                                                        borderRadius: 6,\r\n                                                        padding: '10px 18px',\r\n                                                        fontSize: 13,\r\n                                                        fontWeight: 600,\r\n                                                        cursor: confirmAcknowledge ? 'pointer' : 'not-allowed',\r\n                                                        transition: 'all 0.15s ease',\r\n                                                        minWidth: 110,\r\n                                                        boxShadow: confirmAcknowledge \r\n                                                            ? '0 2px 4px rgba(214,85,65,0.2)' \r\n                                                            : 'none'\r\n                                                    }}\r\n                                                    onMouseEnter={(e) => {\r\n                                                        if (confirmAcknowledge) {\r\n                                                            e.currentTarget.style.transform = 'translateY(-1px)';\r\n                                                        }\r\n                                                    }}\r\n                                                    onMouseLeave={(e) => {\r\n                                                        if (confirmAcknowledge) {\r\n                                                            e.currentTarget.style.transform = 'translateY(0)';\r\n                                                        }\r\n                                                    }}\r\n                                                >\r\n                                                    Open Matter\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    {/* Processing Panel - now shown directly without Developer Tools wrapper */}\r\n                                    {currentStep === 2 && summaryConfirmed && (\r\n                                            <div style={{ marginTop: 16 }}>\r\n                                                {(() => {\r\n                                                    const total = processingSteps.length || 0;\r\n                                                    const done = processingSteps.filter(s => s.status === 'success').length;\r\n                                                    const failed = processingSteps.filter(s => s.status === 'error').length;\r\n                                                    const pct = total > 0 ? Math.round((done / total) * 100) : 0;\r\n                                                    const statusText = failed > 0 ? 'Attention required' : (done === total && total > 0 ? 'Completed' : 'In progress');\r\n                                                    \r\n                                                    return (\r\n                                                        <div style={{\r\n                                                            border: '1px solid #e5e7eb',\r\n                                                            borderRadius: 12,\r\n                                                            background: 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n                                                            overflow: 'hidden',\r\n                                                            boxShadow: '0 4px 6px rgba(0, 0, 0, 0.07), 0 1px 3px rgba(0, 0, 0, 0.1)',\r\n                                                            position: 'relative'\r\n                                                        }}>\r\n                                                            <div style={{\r\n                                                                padding: '16px 20px',\r\n                                                                background: 'linear-gradient(135deg, #F8FAFC 0%, #F1F5F9 100%)',\r\n                                                                borderBottom: '1px solid #e5e7eb',\r\n                                                                display: 'flex',\r\n                                                                justifyContent: 'space-between',\r\n                                                                alignItems: 'center'\r\n                                                            }}>\r\n                                                                <div style={{ display: 'flex', alignItems: 'center', gap: 12 }}>\r\n                                                                    <div style={{\r\n                                                                        width: 20,\r\n                                                                        height: 20,\r\n                                                                        borderRadius: '50%',\r\n                                                                        background: '#20b26c',\r\n                                                                        display: 'flex',\r\n                                                                        alignItems: 'center',\r\n                                                                        justifyContent: 'center'\r\n                                                                    }}>\r\n                                                                        <svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n                                                                            <polyline \r\n                                                                                points=\"20,6 9,17 4,12\" \r\n                                                                                stroke=\"#fff\" \r\n                                                                                strokeWidth=\"2\" \r\n                                                                                strokeLinecap=\"round\" \r\n                                                                                strokeLinejoin=\"round\"\r\n                                                                            />\r\n                                                                        </svg>\r\n                                                                    </div>\r\n                                                                    <div>\r\n                                                                        <div style={{\r\n                                                                            fontSize: 14,\r\n                                                                            fontWeight: 600,\r\n                                                                            color: '#20b26c',\r\n                                                                            lineHeight: 1.2\r\n                                                                        }}>\r\n                                                                            Details Reviewed and Confirmed\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                \r\n                                                                <button\r\n                                                                    type=\"button\"\r\n                                                                    onClick={(e) => {\r\n                                                                        e.stopPropagation();\r\n                                                                        setDebugInspectorOpen(!debugInspectorOpen);\r\n                                                                        if (!debugInspectorOpen) {\r\n                                                                            setDebugActiveTab('json');\r\n                                                                            setDebugJsonInput('');\r\n                                                                            setDebugValidation(null);\r\n                                                                            setDebugManualPasteOpen(false);\r\n                                                                        }\r\n                                                                    }}\r\n                                                                    title=\"Open debug inspector with JSON and backend details\"\r\n                                                                    style={{\r\n                                                                        background: debugInspectorOpen ? 'linear-gradient(135deg, #D65541 0%, #B83C2B 100%)' : 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n                                                                        border: '1px solid #D65541',\r\n                                                                        borderRadius: 6,\r\n                                                                        padding: '6px 14px',\r\n                                                                        fontSize: 12,\r\n                                                                        fontWeight: 600,\r\n                                                                        color: debugInspectorOpen ? '#fff' : '#D65541',\r\n                                                                        cursor: 'pointer',\r\n                                                                        display: 'flex',\r\n                                                                        alignItems: 'center',\r\n                                                                        gap: 6,\r\n                                                                        transition: 'all 0.2s ease'\r\n                                                                    }}\r\n                                                                    onMouseEnter={(e) => {\r\n                                                                        if (!debugInspectorOpen) {\r\n                                                                            e.currentTarget.style.background = 'linear-gradient(135deg, #D65541 0%, #B83C2B 100%)';\r\n                                                                            e.currentTarget.style.color = '#fff';\r\n                                                                        }\r\n                                                                    }}\r\n                                                                    onMouseLeave={(e) => {\r\n                                                                        if (!debugInspectorOpen) {\r\n                                                                            e.currentTarget.style.background = 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)';\r\n                                                                            e.currentTarget.style.color = '#D65541';\r\n                                                                        }\r\n                                                                    }}\r\n                                                                >\r\n                                                                    <i className=\"ms-Icon ms-Icon--BugSolid\" style={{ fontSize: 11 }} />\r\n                                                                    Debug\r\n                                                                </button>\r\n                                                            </div>\r\n                                                            \r\n                                                            <div style={{ padding: '20px' }}>\r\n                                                                {/* Live Status Header */}\r\n                                                                <div style={{ \r\n                                                                    display: 'flex', \r\n                                                                    alignItems: 'center', \r\n                                                                    justifyContent: 'space-between', \r\n                                                                    marginBottom: 20,\r\n                                                                    padding: '12px 16px',\r\n                                                                    background: 'linear-gradient(135deg, #F0F7FF 0%, #E6F3FF 100%)',\r\n                                                                    border: '1px solid #3690CE',\r\n                                                                    borderRadius: 8\r\n                                                                }}>\r\n                                                                    <div style={{ display: 'flex', alignItems: 'center', gap: 12 }}>\r\n                                                                        <div style={{\r\n                                                                            width: 8,\r\n                                                                            height: 8,\r\n                                                                            borderRadius: '50%',\r\n                                                                            background: failed > 0 ? '#ef4444' : (done === total && total > 0 ? '#20b26c' : '#3690CE'),\r\n                                                                            boxShadow: `0 0 8px ${failed > 0 ? '#ef4444' : (done === total && total > 0 ? '#20b26c' : '#3690CE')}`,\r\n                                                                            animation: done !== total && total > 0 ? 'pulse 2s infinite' : 'none'\r\n                                                                        }} />\r\n                                                                        <span style={{ \r\n                                                                            fontSize: 14, \r\n                                                                            fontWeight: 600, \r\n                                                                            color: '#374151'\r\n                                                                        }}>\r\n                                                                            {failed > 0 ? 'Issue detected - review required' : \r\n                                                                             done === total && total > 0 ? 'Matter opened successfully' : \r\n                                                                             'Opening matter in progress...'}\r\n                                                                        </span>\r\n                                                                    </div>\r\n                                                                    <div style={{ \r\n                                                                        fontSize: 12, \r\n                                                                        fontWeight: 500, \r\n                                                                        color: '#6b7280',\r\n                                                                        display: 'flex',\r\n                                                                        alignItems: 'center',\r\n                                                                        gap: 6\r\n                                                                    }}>\r\n                                                                        <i className=\"ms-Icon ms-Icon--Clock\" style={{ fontSize: 10 }} />\r\n                                                                        Live processing\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                                {/* Current Action Display */}\r\n                                                                {total > 0 && done < total && (\r\n                                                                    <div style={{\r\n                                                                        marginBottom: 16,\r\n                                                                        padding: '10px 14px',\r\n                                                                        background: '#f8fafc',\r\n                                                                        border: '1px solid #e2e8f0',\r\n                                                                        borderRadius: 6,\r\n                                                                        fontSize: 13,\r\n                                                                        color: '#475569',\r\n                                                                        fontStyle: 'italic',\r\n                                                                        display: 'flex',\r\n                                                                        alignItems: 'center',\r\n                                                                        gap: 8\r\n                                                                    }}>\r\n                                                                        <div style={{\r\n                                                                            width: 4,\r\n                                                                            height: 4,\r\n                                                                            borderRadius: '50%',\r\n                                                                            background: '#3690CE',\r\n                                                                            animation: 'pulse 1.5s infinite'\r\n                                                                        }} />\r\n                                                                        {(() => {\r\n                                                                            const currentStep = processingSteps.find(s => s.status === 'pending');\r\n                                                                            return currentStep ? `Currently: ${currentStep.label}` : 'Preparing next step...';\r\n                                                                        })()}\r\n                                                                    </div>\r\n                                                                )}\r\n\r\n                                                                <style>{`\r\n                                                                    @keyframes pulse {\r\n                                                                        0%, 100% { opacity: 1; }\r\n                                                                        50% { opacity: 0.5; }\r\n                                                                    }\r\n                                                                `}</style>\r\n                                                                \r\n                                                                {total > 0 && (\r\n                                                                    <div>\r\n                                                                        <div style={{ \r\n                                                                            display: 'grid', \r\n                                                                            gridTemplateColumns: 'repeat(auto-fill, minmax(50px, 1fr))', \r\n                                                                            gap: 12 \r\n                                                                        }}>\r\n                                                                            {(() => {\r\n                                                                                // Group consecutive steps by app (using icon as app identifier)\r\n                                                                                const groupedSteps: Array<{\r\n                                                                                    icon?: string;\r\n                                                                                    label: string;\r\n                                                                                    status: 'pending' | 'success' | 'error';\r\n                                                                                    count: number;\r\n                                                                                    steps: typeof processingSteps;\r\n                                                                                }> = [];\r\n                                                                                \r\n                                                                                processingSteps.forEach((step, idx) => {\r\n                                                                                    const lastGroup = groupedSteps[groupedSteps.length - 1];\r\n                                                                                    \r\n                                                                                    // Group if same icon/app and consecutive\r\n                                                                                    if (lastGroup && lastGroup.icon === step.icon && step.icon) {\r\n                                                                                        lastGroup.count += 1;\r\n                                                                                        lastGroup.steps.push(step);\r\n                                                                                        lastGroup.label = step.icon ? \r\n                                                                                            `${lastGroup.steps[0].label.split(' ')[0]} (${lastGroup.count} steps)` : \r\n                                                                                            step.label;\r\n                                                                                    } else {\r\n                                                                                        // New group\r\n                                                                                        groupedSteps.push({\r\n                                                                                            icon: step.icon,\r\n                                                                                            label: step.label,\r\n                                                                                            status: 'pending',\r\n                                                                                            count: 1,\r\n                                                                                            steps: [step]\r\n                                                                                        });\r\n                                                                                    }\r\n                                                                                });\r\n\r\n                                                                                // Update group statuses based on all steps in each group\r\n                                                                                groupedSteps.forEach(group => {\r\n                                                                                    const hasError = group.steps.some(s => s.status === 'error');\r\n                                                                                    const hasPending = group.steps.some(s => s.status === 'pending');\r\n                                                                                    \r\n                                                                                    if (hasError) {\r\n                                                                                        group.status = 'error';\r\n                                                                                    } else if (hasPending) {\r\n                                                                                        group.status = 'pending';\r\n                                                                                    } else {\r\n                                                                                        // All steps are success\r\n                                                                                        group.status = 'success';\r\n                                                                                    }\r\n                                                                                });\r\n                                                                                \r\n                                                                                return groupedSteps.map((group, idx) => (\r\n                                                                                    <div key={`grouped-proc-${idx}`} \r\n                                                                                         title={group.count > 1 ? `${group.label} - Click for details` : group.label} \r\n                                                                                         style={{\r\n                                                                                        height: 48,\r\n                                                                                        display: 'flex',\r\n                                                                                        flexDirection: 'column',\r\n                                                                                        alignItems: 'center',\r\n                                                                                        justifyContent: 'center',\r\n                                                                                        borderRadius: 8,\r\n                                                                                        background: 'linear-gradient(135deg, #FFFFFF 0%, #F9FAFB 100%)',\r\n                                                                                        border: `1px solid ${group.status === 'error' ? '#EF4444' : '#D1D5DB'}`,\r\n                                                                                        position: 'relative',\r\n                                                                                        cursor: 'pointer',\r\n                                                                                        transition: 'all 0.2s ease',\r\n                                                                                        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\r\n                                                                                    }}>\r\n                                                                                        <div style={{\r\n                                                                                            display: 'flex',\r\n                                                                                            alignItems: 'center',\r\n                                                                                            justifyContent: 'center',\r\n                                                                                            width: 24,\r\n                                                                                            height: 24,\r\n                                                                                            marginBottom: 2\r\n                                                                                        }}>\r\n                                                                                            {group.icon ? (\r\n                                                                                                <img src={group.icon} alt=\"\" style={{ \r\n                                                                                                    width: 20, \r\n                                                                                                    height: 20, \r\n                                                                                                    opacity: group.status === 'pending' ? 0.7 : 1,\r\n                                                                                                    filter: group.status === 'success' \r\n                                                                                                        ? 'brightness(0) saturate(100%) invert(47%) sepia(58%) saturate(1945%) hue-rotate(119deg) brightness(97%) contrast(91%)' \r\n                                                                                                        : 'none'\r\n                                                                                                }} />\r\n                                                                                            ) : (\r\n                                                                                                <i className={`ms-Icon ${group.status === 'success' ? 'ms-Icon--CheckMark' : group.status === 'error' ? 'ms-Icon--ErrorBadge' : 'ms-Icon--Clock'}`} \r\n                                                                                                   style={{ \r\n                                                                                                    fontSize: 16, \r\n                                                                                                    color: group.status === 'success' ? '#20b26c' : group.status === 'error' ? '#DC2626' : '#6B7280'\r\n                                                                                                }} />\r\n                                                                                            )}\r\n                                                                                        </div>\r\n                                                                                        \r\n                                                                                        {group.count > 1 && (\r\n                                                                                            <div style={{\r\n                                                                                                position: 'absolute',\r\n                                                                                                top: -6,\r\n                                                                                                right: -6,\r\n                                                                                                background: 'linear-gradient(135deg, #6B7280 0%, #4B5563 100%)',\r\n                                                                                                color: '#fff',\r\n                                                                                                borderRadius: '50%',\r\n                                                                                                width: 18,\r\n                                                                                                height: 18,\r\n                                                                                                display: 'flex',\r\n                                                                                                alignItems: 'center',\r\n                                                                                                justifyContent: 'center',\r\n                                                                                                fontSize: 9,\r\n                                                                                                fontWeight: 700,\r\n                                                                                                border: '2px solid #fff',\r\n                                                                                                boxShadow: '0 1px 3px rgba(0, 0, 0, 0.15)'\r\n                                                                                            }}>\r\n                                                                                                {group.count}\r\n                                                                                            </div>\r\n                                                                                        )}\r\n                                                                                    </div>\r\n                                                                                ));\r\n                                                                            })()}\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                )}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    );\r\n                                                })()}\r\n                                            </div>\r\n                                        )}\r\n                            </div>\r\n                            \r\n                            {/* Workbench Section - appears below review when active */}\r\n                            {workbenchMode && (\r\n                                <div style={{ width: '100%', padding: '16px 0', boxSizing: 'border-box' }}>\r\n                                    <div\r\n                                        style={{\r\n                                            border: '2px solid #3690CE',\r\n                                            borderRadius: 10,\r\n                                            background: 'linear-gradient(135deg, #F0F7FF 0%, #E6F3FF 100%)',\r\n                                            padding: 24,\r\n                                            margin: '16px 0',\r\n                                            width: '100%',\r\n                                            boxSizing: 'border-box',\r\n                                            boxShadow: '0 8px 16px rgba(54, 144, 206, 0.15)',\r\n                                            minHeight: '600px'\r\n                                        }}\r\n                                    >\r\n                                        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: 24 }}>\r\n                                            <h4 style={{ \r\n                                                margin: 0, \r\n                                                fontWeight: 600, \r\n                                                fontSize: 18, \r\n                                                color: '#3690CE',\r\n                                                display: 'flex',\r\n                                                alignItems: 'center',\r\n                                                gap: 8\r\n                                            }}>\r\n                                                <i className=\"ms-Icon ms-Icon--WorkItem\" style={{ fontSize: 16, color: '#3690CE' }} />\r\n                                                Matter Opening Workbench\r\n                                            </h4>\r\n                                        </div>\r\n                                        \r\n                                        <div style={{ display: 'flex', flexDirection: 'column', gap: 16 }}>\r\n                                            {/* Processing Summary (professional, on-brand) */}\r\n                                            {(() => {\r\n                                                const total = processingSteps.length || 0;\r\n                                                const done = processingSteps.filter(s => s.status === 'success').length;\r\n                                                const failed = processingSteps.filter(s => s.status === 'error').length;\r\n                                                const pct = total > 0 ? Math.round((done / total) * 100) : 0;\r\n                                                const statusText = failed > 0 ? 'Attention required' : (done === total && total > 0 ? 'Completed' : 'In progress');\r\n                                                return (\r\n                                                    <div style={{\r\n                                                        border: '1px solid #e1e5ea',\r\n                                                        borderRadius: 10,\r\n                                                        background: 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n                                                        overflow: 'hidden',\r\n                                                        padding: 16,\r\n                                                        boxShadow: '0 4px 6px rgba(0,0,0,0.07)'\r\n                                                    }}>\r\n                                                        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: 10 }}>\r\n                                                            <div style={{ display: 'flex', alignItems: 'center', gap: 8 }}>\r\n                                                                <i className=\"ms-Icon ms-Icon--ProgressLoopOuter\" style={{ fontSize: 14, color: '#D65541' }} />\r\n                                                                <span style={{ fontSize: 13, fontWeight: 700, color: '#061733' }}>Processing</span>\r\n                                                            </div>\r\n                                                            <div style={{ display: 'flex', alignItems: 'center', gap: 8 }}>\r\n                                                                <span style={{ fontSize: 12, fontWeight: 700, color: failed ? '#D65541' : '#374151' }}>{statusText}</span>\r\n                                                                <button\r\n                                                                    onClick={() => setSupportPanelOpen(!supportPanelOpen)}\r\n                                                                    style={{\r\n                                                                        background: supportPanelOpen ? '#D65541' : 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n                                                                        color: supportPanelOpen ? '#fff' : '#D65541',\r\n                                                                        border: '1px solid #D65541',\r\n                                                                        borderRadius: 6,\r\n                                                                        padding: '6px 10px',\r\n                                                                        fontSize: 11,\r\n                                                                        fontWeight: 600,\r\n                                                                        cursor: 'pointer',\r\n                                                                        transition: 'all 0.2s ease'\r\n                                                                    }}\r\n                                                                    title=\"Support Request\"\r\n                                                                >\r\n                                                                    <i className=\"ms-Icon ms-Icon--Help\" style={{ fontSize: 12 }} />\r\n                                                                </button>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        {/* Processing stats in cleaner design */}\r\n                                                        <div style={{ display: 'flex', flexWrap: 'wrap', gap: 12, marginBottom: 12 }}>\r\n                                                            <div style={{ display: 'flex', alignItems: 'center', gap: 6 }}>\r\n                                                                <div style={{\r\n                                                                    width: 8,\r\n                                                                    height: 8,\r\n                                                                    borderRadius: '50%',\r\n                                                                    background: '#e5e7eb'\r\n                                                                }}></div>\r\n                                                                <span style={{ fontSize: 11, color: '#6b7280' }}>Total: {total}</span>\r\n                                                            </div>\r\n                                                            <div style={{ display: 'flex', alignItems: 'center', gap: 6 }}>\r\n                                                                <div style={{\r\n                                                                    width: 8,\r\n                                                                    height: 8,\r\n                                                                    borderRadius: '50%',\r\n                                                                    background: '#20b26c'\r\n                                                                }}></div>\r\n                                                                <span style={{ fontSize: 11, color: '#6b7280' }}>Done: {done}</span>\r\n                                                            </div>\r\n                                                            {failed > 0 && (\r\n                                                                <div style={{ display: 'flex', alignItems: 'center', gap: 6 }}>\r\n                                                                    <div style={{\r\n                                                                        width: 8,\r\n                                                                        height: 8,\r\n                                                                        borderRadius: '50%',\r\n                                                                        background: '#ef4444'\r\n                                                                    }}></div>\r\n                                                                    <span style={{ fontSize: 11, color: '#ef4444' }}>Failed: {failed}</span>\r\n                                                                </div>\r\n                                                            )}\r\n                                                        </div>\r\n\r\n                                                        {/* Progress bar */}\r\n                                                        <div style={{ \r\n                                                            height: 6, \r\n                                                            background: '#f3f4f6', \r\n                                                            borderRadius: 6, \r\n                                                            overflow: 'hidden',\r\n                                                            marginBottom: 14\r\n                                                        }}>\r\n                                                            <div \r\n                                                                style={{ \r\n                                                                    height: '100%', \r\n                                                                    background: failed > 0 ? '#ef4444' : 'linear-gradient(90deg, #20b26c 0%, #16a34a 100%)', \r\n                                                                    width: `${pct}%`,\r\n                                                                    transition: 'width 0.3s ease'\r\n                                                                }}\r\n                                                            />\r\n                                                        </div>\r\n\r\n                                                        {/* Processing Steps - professional grid */}\r\n                                                        <div style={{ \r\n                                                            display: 'grid', \r\n                                                            gridTemplateColumns: 'repeat(auto-fit, minmax(140px, 1fr))', \r\n                                                            gap: 8,\r\n                                                            marginBottom: supportPanelOpen ? 12 : 0\r\n                                                        }}>\r\n                                                            {processingSteps.map((step, index) => (\r\n                                                                <div \r\n                                                                    key={index} \r\n                                                                    style={{\r\n                                                                        display: 'flex',\r\n                                                                        alignItems: 'center',\r\n                                                                        gap: 8,\r\n                                                                        padding: '6px 8px',\r\n                                                                        background: step.status === 'error' ? '#fef2f2' : \r\n                                                                                   step.status === 'pending' ? '#eff6ff' : '#f9fafb',\r\n                                                                        border: step.status === 'success' ? '1px solid #e5e7eb' : \r\n                                                                               step.status === 'error' ? '1px solid #fecaca' : \r\n                                                                               step.status === 'pending' ? '1px solid #bfdbfe' : '1px solid #e5e7eb',\r\n                                                                        borderRadius: 6,\r\n                                                                        fontSize: 10,\r\n                                                                        transition: 'all 0.2s ease'\r\n                                                                    }}\r\n                                                                >\r\n                                                                    {step.status === 'pending' ? (\r\n                                                                        <div style={{\r\n                                                                            width: 10,\r\n                                                                            height: 10,\r\n                                                                            border: '1.5px solid #3b82f6',\r\n                                                                            borderTop: '1.5px solid transparent',\r\n                                                                            borderRadius: '50%',\r\n                                                                            animation: 'spin 1s linear infinite'\r\n                                                                        }} />\r\n                                                                    ) : (\r\n                                                                        <i \r\n                                                                            className={`ms-Icon ms-Icon--${\r\n                                                                                step.status === 'success' ? 'CheckMark' : \r\n                                                                                step.status === 'error' ? 'Error' : 'Clock'\r\n                                                                            }`} \r\n                                                                            style={{ \r\n                                                                                fontSize: 10,\r\n                                                                                color: step.status === 'success' ? '#16a34a' : \r\n                                                                                       step.status === 'error' ? '#dc2626' : '#9ca3af'\r\n                                                                            }} \r\n                                                                        />\r\n                                                                    )}\r\n                                                                    <span style={{\r\n                                                                        color: step.status === 'success' ? '#15803d' : \r\n                                                                               step.status === 'error' ? '#dc2626' : \r\n                                                                               step.status === 'pending' ? '#1d4ed8' : '#6b7280',\r\n                                                                        fontWeight: step.status === 'pending' ? 600 : 500,\r\n                                                                        fontSize: 10\r\n                                                                    }}>\r\n                                                                        {step.label}\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            ))}\r\n                                                        </div>\r\n\r\n                                                        {/* Support Panel (integrated, collapsible) */}\r\n                                                        {supportPanelOpen && (\r\n                                                            <div style={{\r\n                                                                marginTop: 12,\r\n                                                                padding: 12,\r\n                                                                background: 'linear-gradient(135deg, #FEF7F0 0%, #FDF2E9 100%)',\r\n                                                                border: '1px solid #F97316',\r\n                                                                borderRadius: 8\r\n                                                            }}>\r\n                                                                <div style={{\r\n                                                                    display: 'flex',\r\n                                                                    alignItems: 'center',\r\n                                                                    gap: 8,\r\n                                                                    marginBottom: 8\r\n                                                                }}>\r\n                                                                    <i className=\"ms-Icon ms-Icon--Help\" style={{ fontSize: 12, color: '#ea580c' }} />\r\n                                                                    <span style={{ fontSize: 12, fontWeight: 600, color: '#ea580c' }}>Request Support</span>\r\n                                                                </div>\r\n                                                                <div style={{ marginBottom: 8 }}>\r\n                                                                    <select\r\n                                                                        value={supportCategory}\r\n                                                                        onChange={(e) => setSupportCategory(e.target.value as 'technical' | 'process' | 'data')}\r\n                                                                        style={{\r\n                                                                            width: '100%',\r\n                                                                            padding: '6px 8px',\r\n                                                                            border: '1px solid #d1d5db',\r\n                                                                            borderRadius: 4,\r\n                                                                            fontSize: 11,\r\n                                                                            marginBottom: 8\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <option value=\"technical\">Technical Issue</option>\r\n                                                                        <option value=\"process\">Process Question</option>\r\n                                                                        <option value=\"data\">Data Problem</option>\r\n                                                                    </select>\r\n                                                                    <textarea\r\n                                                                        value={supportMessage}\r\n                                                                        onChange={(e) => setSupportMessage(e.target.value)}\r\n                                                                        placeholder=\"Describe the issue you're experiencing...\"\r\n                                                                        rows={3}\r\n                                                                        style={{\r\n                                                                            width: '100%',\r\n                                                                            padding: '6px 8px',\r\n                                                                            border: '1px solid #d1d5db',\r\n                                                                            borderRadius: 4,\r\n                                                                            fontSize: 12,\r\n                                                                            resize: 'vertical',\r\n                                                                            fontFamily: 'inherit'\r\n                                                                        }}\r\n                                                                    />\r\n                                                                </div>\r\n                                                                <button\r\n                                                                    onClick={sendSupportRequest}\r\n                                                                    disabled={!supportMessage.trim() || supportSending}\r\n                                                                    style={{\r\n                                                                        width: '100%',\r\n                                                                        padding: '8px 16px',\r\n                                                                        background: supportSending ? '#9ca3af' : 'linear-gradient(135deg, #D65541 0%, #B83C2B 100%)',\r\n                                                                        color: '#fff',\r\n                                                                        border: 'none',\r\n                                                                        borderRadius: 6,\r\n                                                                        fontSize: 12,\r\n                                                                        fontWeight: 600,\r\n                                                                        cursor: supportSending || !supportMessage.trim() ? 'not-allowed' : 'pointer',\r\n                                                                        opacity: supportSending || !supportMessage.trim() ? 0.6 : 1,\r\n                                                                        transition: 'all 0.2s ease'\r\n                                                                    }}\r\n                                                                >\r\n                                                                    {supportSending ? 'Sending...' : 'Send Support Request'}\r\n                                                                </button>\r\n                                                            </div>\r\n                                                        )}\r\n                                                    </div>\r\n                                                );\r\n                                            })()}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* CSS for smooth hover effects and navigation animations */}\r\n                    <style>{`\r\n                        .review-summary-hoverable {\r\n                            box-shadow: none;\r\n                        }\r\n                        .review-summary-hoverable:hover {\r\n                            border-color: #D65541 !important;\r\n                            box-shadow: 0 0 0 1px #D65541;\r\n                        }\r\n                        \r\n                        /* Spinner animation */\r\n                        @keyframes spin {\r\n                            0% { transform: translate(-50%, -50%) rotate(0deg); }\r\n                            100% { transform: translate(-50%, -50%) rotate(360deg); }\r\n                        }\r\n                        \r\n                        /* Navigation button animations */\r\n                        .nav-button-container:hover .nav-button.back-button {\r\n                            transform: scale(1.1);\r\n                            border-color: #0078d4;\r\n                            box-shadow: 0 4px 12px rgba(0, 120, 212, 0.2);\r\n                        }\r\n                        \r\n                        .nav-button-container:hover .nav-button.forward-button {\r\n                            transform: scale(1.1);\r\n                            box-shadow: 0 4px 12px rgba(0, 120, 212, 0.3);\r\n                        }\r\n                        \r\n                        .nav-button-container:hover .nav-label {\r\n                            opacity: 1 !important;\r\n                            visibility: visible !important;\r\n                            transform: translateY(-50%) translateX(0) !important;\r\n                        }\r\n                        \r\n                        .nav-button-container:hover .back-label {\r\n                            transform: translateY(-50%) translateX(-8px) !important;\r\n                        }\r\n                        \r\n                        .nav-button-container:hover .forward-label {\r\n                            transform: translateY(-50%) translateX(8px) !important;\r\n                        }\r\n                        \r\n                        .nav-button:active {\r\n                            transform: scale(0.95) !important;\r\n                        }\r\n                        \r\n                        .nav-button-container {\r\n                            animation: fadeInUp 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards;\r\n                        }\r\n                        \r\n                        @keyframes fadeInUp {\r\n                            from {\r\n                                opacity: 0;\r\n                                transform: translateY(20px);\r\n                            }\r\n                            to {\r\n                                opacity: 1;\r\n                                transform: translateY(0);\r\n                            }\r\n                        }\r\n                    `}</style>\r\n\r\n\r\n                    {/* Navigation Container - Removed as requested */}\r\n                </div>\r\n            </Stack>\r\n        </CompletionProvider>\r\n    );\r\n}\r\n\r\nexport default FlatMatterOpening;","import React, { useRef, useState } from 'react';\r\n// invisible change 2\r\nimport {\r\n    Stack,\r\n    PrimaryButton,\r\n    DefaultButton,\r\n    Dialog,\r\n    DialogType,\r\n    DialogFooter,\r\n    DatePicker,\r\n    IDatePickerStyles,\r\n    Checkbox,\r\n} from '@fluentui/react';\r\nimport { useTheme } from '../app/functionality/ThemeContext';\r\nimport { colours } from '../app/styles/colours';\r\nimport { sharedPrimaryButtonStyles, sharedDefaultButtonStyles } from '../app/styles/ButtonStyles';\r\nimport '../app/styles/MultiSelect.css';\r\nimport '../app/styles/InstructionCard.css';\r\n\r\ninterface Option {\r\n    key: string | number;\r\n    text: string;\r\n}\r\n\r\ninterface QuestionGroupProps {\r\n    label: string;\r\n    options: Option[];\r\n    selectedKey: string | number | undefined;\r\n    onChange: (key: string | number, text: string) => void;\r\n    showPrompt?: boolean; // Whether to show a prompt when \"No\" is selected\r\n}\r\n\r\nconst QuestionGroup: React.FC<QuestionGroupProps> = ({ label, options, selectedKey, onChange, showPrompt = false }) => {\r\n    const { isDarkMode } = useTheme();\r\n    \r\n    // For yes/no questions, use 2-column grid, otherwise 3-column grid\r\n    const isYesNoQuestion = options.length === 2 && \r\n        options.some(opt => opt.text.toLowerCase() === 'yes') && \r\n        options.some(opt => opt.text.toLowerCase() === 'no');\r\n    \r\n    const gridColumns = isYesNoQuestion ? 2 : 3;\r\n    \r\n    // Check if \"No\" is selected and we should show the prompt\r\n    const shouldShowPrompt = showPrompt && isYesNoQuestion && selectedKey === 'no';\r\n    \r\n    // Determine which document URL to show based on the question label\r\n    const getDocumentUrl = () => {\r\n        const labelLower = label.toLowerCase();\r\n        if (labelLower.includes('client risk')) {\r\n            return 'https://drive.google.com/file/d/1_7dX2qSlvuNmOiirQCxQb8NDs6iUSAhT/view?usp=sharing';\r\n        } else if (labelLower.includes('transaction risk')) {\r\n            return 'https://drive.google.com/file/d/1sTRII8MFU3JLpMiUcz-Y6KBQ1pP1nKgT/view?usp=sharing';\r\n        } else if (labelLower.includes('sanctions')) {\r\n            return 'https://drive.google.com/file/d/1Wx-dHdfXuN0-A2YmBYb-OO-Bz2wXevl9/view?usp=sharing';\r\n        } else if (labelLower.includes('aml policy')) {\r\n            return 'https://drive.google.com/file/d/1TcBlV0Pf0lYlNkmdOGRfpx--DcTEC7na/view?usp=sharing';\r\n        }\r\n        return '#';\r\n    };\r\n    \r\n    return (\r\n        <Stack tokens={{ childrenGap: 4 }} styles={{ root: { marginBottom: 8 } }}>\r\n            <div className=\"question-banner\" style={{ \r\n                width: '100%', \r\n                boxSizing: 'border-box', \r\n                fontSize: 11, \r\n                padding: '4px 8px', \r\n                fontWeight: 700, \r\n                color: isDarkMode ? colours.dark.text : '#374151',\r\n                textTransform: 'uppercase',\r\n                letterSpacing: '0.25px'\r\n            }}>\r\n                {label}\r\n            </div>\r\n            <div \r\n                style={{\r\n                    display: 'grid',\r\n                    gridTemplateColumns: `repeat(${gridColumns}, 1fr)`,\r\n                    gap: '4px',\r\n                    width: '100%'\r\n                }}\r\n            >\r\n                {options.map((option) => {\r\n                    const isSelected = option.key === selectedKey;\r\n                    return (\r\n                        <button\r\n                            key={option.key}\r\n                            type=\"button\"\r\n                            onClick={() => onChange(option.key, option.text)}\r\n                            className=\"client-details-contact-bigbtn\"\r\n                            style={{\r\n                                background: isSelected ? 'linear-gradient(135deg, #E7F1FF 0%, #F0F7FF 100%)' : '#fff',\r\n                                border: isSelected ? '1px solid #3690CE' : '1px solid #e1dfdd',\r\n                                color: isSelected ? '#1B5C85' : '#061733',\r\n                                padding: '6px 10px',\r\n                                fontSize: '12px',\r\n                                fontWeight: 500,\r\n                                borderRadius: 6,\r\n                                cursor: 'pointer',\r\n                                transition: 'background 0.18s, border 0.18s, color 0.18s',\r\n                                textAlign: 'left',\r\n                                justifyContent: 'flex-start',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                minHeight: 36,\r\n                                boxShadow: '0 1px 2px rgba(6,23,51,0.06)',\r\n                                whiteSpace: 'normal',\r\n                                wordWrap: 'break-word',\r\n                                hyphens: 'auto',\r\n                                lineHeight: 1.3\r\n                            }}\r\n                            onMouseEnter={(e) => {\r\n                                if (!isSelected) {\r\n                                    e.currentTarget.style.background = '#f4f9ff';\r\n                                    e.currentTarget.style.borderColor = '#3690CE';\r\n                                    e.currentTarget.style.color = '#1B5C85';\r\n                                }\r\n                            }}\r\n                            onMouseLeave={(e) => {\r\n                                if (!isSelected) {\r\n                                    e.currentTarget.style.background = '#fff';\r\n                                    e.currentTarget.style.borderColor = '#e1dfdd';\r\n                                    e.currentTarget.style.color = '#061733';\r\n                                }\r\n                            }}\r\n                        >\r\n                            {option.text}\r\n                        </button>\r\n                    );\r\n                })}\r\n            </div>\r\n            {shouldShowPrompt && (\r\n                <div style={{\r\n                    background: '#FFFDF5',\r\n                    borderLeft: '2px solid #FFB900',\r\n                    padding: '4px 8px',\r\n                    color: '#8A6D00',\r\n                    fontSize: 11,\r\n                    fontWeight: 500,\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    gap: 6,\r\n                    marginTop: 4,\r\n                    borderRadius: 4\r\n                }}>\r\n                    <span style={{ fontSize: 10 }}>Note:</span>\r\n                    The document can be found\r\n                    <a \r\n                        href={getDocumentUrl()} \r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        style={{ color: '#1B5C85', textDecoration: 'underline', cursor: 'pointer' }}\r\n                    >\r\n                        here\r\n                    </a>.\r\n                </div>\r\n            )}\r\n        </Stack>\r\n    );\r\n};\r\n\r\nexport interface RiskCore {\r\n    clientType: string;\r\n    clientTypeValue: number;\r\n    destinationOfFunds: string;\r\n    destinationOfFundsValue: number;\r\n    fundsType: string;\r\n    fundsTypeValue: number;\r\n    clientIntroduced: string;\r\n    clientIntroducedValue: number;\r\n    limitation: string;\r\n    limitationValue: number;\r\n    sourceOfFunds: string;\r\n    sourceOfFundsValue: number;\r\n    valueOfInstruction: string;\r\n    valueOfInstructionValue: number;\r\n}\r\n\r\nexport interface RiskAssessmentProps {\r\n    riskCore: RiskCore;\r\n    setRiskCore: React.Dispatch<React.SetStateAction<RiskCore>>;\r\n    consideredClientRisk: boolean | undefined;\r\n    setConsideredClientRisk: React.Dispatch<React.SetStateAction<boolean | undefined>>;\r\n    consideredTransactionRisk: boolean | undefined;\r\n    setConsideredTransactionRisk: React.Dispatch<React.SetStateAction<boolean | undefined>>;\r\n    transactionRiskLevel: string;\r\n    setTransactionRiskLevel: React.Dispatch<React.SetStateAction<string>>;\r\n    consideredFirmWideSanctions: boolean | undefined;\r\n    setConsideredFirmWideSanctions: React.Dispatch<React.SetStateAction<boolean | undefined>>;\r\n    consideredFirmWideAML: boolean | undefined;\r\n    setConsideredFirmWideAML: React.Dispatch<React.SetStateAction<boolean | undefined>>;\r\n    limitationDate: Date | undefined;\r\n    setLimitationDate: React.Dispatch<React.SetStateAction<Date | undefined>>;\r\n    limitationDateTbc: boolean;\r\n    setLimitationDateTbc: React.Dispatch<React.SetStateAction<boolean>>;\r\n    onContinue: () => void;\r\n    isComplete: () => boolean;\r\n    onHeaderButtonsChange?: (buttons: { clearAllButton: React.ReactNode | null; jsonButton: React.ReactNode }) => void;\r\n}\r\n\r\nconst clientTypeOptions = [\r\n    { key: 1, text: 'Individual or Company registered in England and Wales with Companies House' },\r\n    { key: 2, text: 'Group Company or Subsidiary, Trust' },\r\n    { key: 3, text: 'Non UK Company' },\r\n];\r\n\r\nconst destinationOfFundsOptions = [\r\n    { key: 1, text: 'Client within UK' },\r\n    { key: 2, text: 'Client in EU/3rd party in UK' },\r\n    { key: 3, text: 'Outwith UK or Client outwith EU' },\r\n];\r\n\r\nconst fundsTypeOptions = [\r\n    { key: 1, text: 'Personal Cheque, BACS' },\r\n    { key: 2, text: 'Cash payment if less than £1,000' },\r\n    { key: 3, text: 'Cash payment above £1,000' },\r\n];\r\n\r\nconst introducedOptions = [\r\n    { key: 1, text: 'Existing client introduction, personal introduction' },\r\n    { key: 2, text: 'Internet Enquiry' },\r\n    { key: 3, text: 'Other' },\r\n];\r\n\r\nconst limitationOptions = [\r\n    { key: 1, text: 'There is no applicable limitation period' },\r\n    { key: 2, text: 'There is greater than 6 months to the expiry of the limitation period' },\r\n    { key: 3, text: 'There is less than 6 months to limitation expiry' },\r\n];\r\n\r\nconst sourceOfFundsOptions = [\r\n    { key: 1, text: \"Clients named account\" },\r\n    { key: 2, text: \"3rd Party UK or Client's EU account\" },\r\n    { key: 3, text: \"Any other account\" },\r\n];\r\n\r\nconst valueOfInstructionOptions = [\r\n    { key: 1, text: 'Less than £10,000' },\r\n    { key: 2, text: '£10,000 to £500,000' },\r\n    { key: 3, text: 'Above £500,000' },\r\n];\r\n\r\nconst datePickerStyles: Partial<IDatePickerStyles> = {\r\n    root: { width: 200 },\r\n    textField: {\r\n        width: '100%',\r\n        borderRadius: '0',\r\n        selectors: {\r\n            '& .ms-TextField-fieldGroup': {\r\n                border: '1px solid #8a8886',\r\n                background: 'transparent',\r\n                borderRadius: '0',\r\n                height: '32px',\r\n            },\r\n            '& .ms-TextField-field': {\r\n                padding: '0 12px',\r\n                height: '100%',\r\n            },\r\n        },\r\n    },\r\n    icon: { right: 8 },\r\n};\r\n\r\nconst RiskAssessment: React.FC<RiskAssessmentProps> = ({\r\n    riskCore,\r\n    setRiskCore,\r\n    consideredClientRisk,\r\n    setConsideredClientRisk,\r\n    consideredTransactionRisk,\r\n    setConsideredTransactionRisk,\r\n    transactionRiskLevel,\r\n    setTransactionRiskLevel,\r\n    consideredFirmWideSanctions,\r\n    setConsideredFirmWideSanctions,\r\n    consideredFirmWideAML,\r\n    setConsideredFirmWideAML,\r\n    limitationDate,\r\n    setLimitationDate,\r\n    limitationDateTbc,\r\n    setLimitationDateTbc,\r\n    onContinue,\r\n    isComplete,\r\n    onHeaderButtonsChange,\r\n}) => {\r\n    const initialRiskCore = useRef<RiskCore>(riskCore);\r\n    const initialClientRisk = useRef<boolean | undefined>(consideredClientRisk);\r\n    const initialTransactionRisk = useRef<boolean | undefined>(consideredTransactionRisk);\r\n    const initialTransactionLevel = useRef<string>(transactionRiskLevel);\r\n    const initialFirmWideSanctions = useRef<boolean | undefined>(consideredFirmWideSanctions);\r\n    const initialFirmWideAML = useRef<boolean | undefined>(consideredFirmWideAML);\r\n\r\n    const [isClearDialogOpen, setIsClearDialogOpen] = useState(false);\r\n    const [jsonPreviewOpen, setJsonPreviewOpen] = useState(false);\r\n\r\n    const hasDataToClear = () => {\r\n        const coreChanged = Object.entries(riskCore).some(\r\n            ([k, v]) => (initialRiskCore.current as any)[k] !== v\r\n        );\r\n        return (\r\n            coreChanged ||\r\n            consideredClientRisk !== initialClientRisk.current ||\r\n            consideredTransactionRisk !== initialTransactionRisk.current ||\r\n            transactionRiskLevel !== initialTransactionLevel.current ||\r\n            consideredFirmWideSanctions !== initialFirmWideSanctions.current ||\r\n            consideredFirmWideAML !== initialFirmWideAML.current\r\n        );\r\n    };\r\n\r\n    const doClearAll = () => {\r\n        setIsClearDialogOpen(false);\r\n        setRiskCore({\r\n            clientType: '',\r\n            clientTypeValue: 0,\r\n            destinationOfFunds: '',\r\n            destinationOfFundsValue: 0,\r\n            fundsType: '',\r\n            fundsTypeValue: 0,\r\n            clientIntroduced: '',\r\n            clientIntroducedValue: 0,\r\n            limitation: '',\r\n            limitationValue: 0,\r\n            sourceOfFunds: '',\r\n            sourceOfFundsValue: 0,\r\n            valueOfInstruction: '',\r\n            valueOfInstructionValue: 0,\r\n        });\r\n        setConsideredClientRisk(false);\r\n        setConsideredTransactionRisk(false);\r\n        setTransactionRiskLevel('');\r\n        setConsideredFirmWideSanctions(false);\r\n        setConsideredFirmWideAML(false);\r\n        setJsonPreviewOpen(false);\r\n    };\r\n\r\n    const handleClearAll = () => {\r\n        if (hasDataToClear()) {\r\n            setIsClearDialogOpen(true);\r\n        } else {\r\n            doClearAll();\r\n        }\r\n    };\r\n\r\n    const generateJson = () => ({\r\n        ComplianceDate: new Date().toISOString().split('T')[0],\r\n        ClientType: riskCore.clientType,\r\n        ClientType_Value: riskCore.clientTypeValue,\r\n        DestinationOfFunds: riskCore.destinationOfFunds,\r\n        DestinationOfFunds_Value: riskCore.destinationOfFundsValue,\r\n        FundsType: riskCore.fundsType,\r\n        FundsType_Value: riskCore.fundsTypeValue,\r\n        HowWasClientIntroduced: riskCore.clientIntroduced,\r\n        HowWasClientIntroduced_Value: riskCore.clientIntroducedValue,\r\n        Limitation: riskCore.limitation,\r\n        Limitation_Value: riskCore.limitationValue,\r\n        SourceOfFunds: riskCore.sourceOfFunds,\r\n        SourceOfFunds_Value: riskCore.sourceOfFundsValue,\r\n        ValueOfInstruction: riskCore.valueOfInstruction,\r\n        ValueOfInstruction_Value: riskCore.valueOfInstructionValue,\r\n        TransactionRiskLevel: transactionRiskLevel || null,\r\n        ClientRiskFactorsConsidered: consideredClientRisk,\r\n        TransactionRiskFactorsConsidered: consideredTransactionRisk,\r\n        FirmWideSanctionsRiskConsidered: consideredFirmWideSanctions,\r\n        FirmWideAMLPolicyConsidered: consideredFirmWideAML,\r\n    });\r\n    const riskScore =\r\n        riskCore.clientTypeValue +\r\n        riskCore.destinationOfFundsValue +\r\n        riskCore.fundsTypeValue +\r\n        riskCore.clientIntroducedValue +\r\n        riskCore.limitationValue +\r\n        riskCore.sourceOfFundsValue +\r\n        riskCore.valueOfInstructionValue;\r\n\r\n    let riskResult = 'Low Risk';\r\n    if (riskCore.limitationValue === 3 || riskScore >= 16) {\r\n        riskResult = 'High Risk';\r\n    } else if (riskScore >= 11) {\r\n        riskResult = 'Medium Risk';\r\n    }\r\n\r\n    // Pass buttons to parent component\r\n    React.useEffect(() => {\r\n        if (onHeaderButtonsChange) {\r\n            onHeaderButtonsChange({\r\n                clearAllButton: hasDataToClear() ? (\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={() => setIsClearDialogOpen(true)}\r\n                        style={{\r\n                            background: '#fff',\r\n                            border: '1px solid #e1e5e9',\r\n                            borderRadius: 0,\r\n                            padding: '10px 16px',\r\n                            fontSize: 13,\r\n                            fontWeight: 500,\r\n                            color: '#D65541',\r\n                            cursor: 'pointer',\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            gap: 6,\r\n                            fontFamily: 'Raleway, sans-serif',\r\n                        }}\r\n                        onMouseEnter={(e) => {\r\n                            e.currentTarget.style.background = '#ffefed';\r\n                            e.currentTarget.style.borderColor = '#D65541';\r\n                            e.currentTarget.style.boxShadow = '0 2px 8px rgba(214,85,65,0.08)';\r\n                        }}\r\n                        onMouseLeave={(e) => {\r\n                            e.currentTarget.style.background = '#fff';\r\n                            e.currentTarget.style.borderColor = '#e1e5e9';\r\n                            e.currentTarget.style.boxShadow = '0 1px 2px rgba(6,23,51,0.04)';\r\n                        }}\r\n                    >\r\n                        <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n                            <path\r\n                                d=\"M3 6h18m-2 0v14c0 1-1 2-2 2H7c-10-2-1-2-2-2V6m3 0V4c0-1 1-2 2-2h4c0-1 1-2 2-2v2m-6 5v6m4-6v6\"\r\n                                stroke=\"currentColor\"\r\n                                strokeWidth=\"2\"\r\n                                strokeLinecap=\"round\"\r\n                                strokeLinejoin=\"round\"\r\n                            />\r\n                        </svg>\r\n                        Clear All\r\n                    </button>\r\n                ) : null,\r\n                jsonButton: (\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={() => setJsonPreviewOpen(!jsonPreviewOpen)}\r\n                        style={{\r\n                            background: '#f8f9fa',\r\n                            border: '1px solid #e1dfdd',\r\n                            borderRadius: 0,\r\n                            padding: '10px 12px',\r\n                            fontSize: 12,\r\n                            fontWeight: 500,\r\n                            color: '#3690CE',\r\n                            cursor: 'pointer',\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            transition: 'background 0.2s ease, border-color 0.2s ease',\r\n                        }}\r\n                        onMouseEnter={(e) => {\r\n                            e.currentTarget.style.background = '#e7f1ff';\r\n                            e.currentTarget.style.borderColor = '#3690CE';\r\n                        }}\r\n                        onMouseLeave={(e) => {\r\n                            e.currentTarget.style.background = '#f8f9fa';\r\n                            e.currentTarget.style.borderColor = '#e1dfdd';\r\n                        }}\r\n                    >\r\n                        <i className=\"ms-Icon ms-Icon--Code\" style={{ fontSize: 14 }} />\r\n                    </button>\r\n                )\r\n            });\r\n        }\r\n    }, [hasDataToClear(), jsonPreviewOpen, onHeaderButtonsChange]);\r\n\r\n\r\n    return (\r\n        <Stack tokens={{ childrenGap: 12 }} horizontalAlign=\"center\">\r\n\r\n            <Stack horizontal tokens={{ childrenGap: 16 }} styles={{ root: { width: '100%' } }}>\r\n                <Stack tokens={{ childrenGap: 8 }} styles={{ root: { flex: 3 } }}>\r\n                    {/* Section: Client & Instruction */}\r\n                    <div style={{ fontSize: 10, fontWeight: 700, color: '#6B7280', textTransform: 'uppercase', margin: '0 0 2px' }}>Client & Instruction</div>\r\n                    <QuestionGroup\r\n                        label=\"Client Type\"\r\n                        options={clientTypeOptions}\r\n                        selectedKey={riskCore.clientTypeValue}\r\n                        onChange={(k, t) =>\r\n                            setRiskCore({\r\n                                ...riskCore,\r\n                                clientType: t,\r\n                                clientTypeValue: Number(k) || 0,\r\n                            })\r\n                        }\r\n                    />\r\n                    <QuestionGroup\r\n                        label=\"Destination of Funds\"\r\n                        options={destinationOfFundsOptions}\r\n                        selectedKey={riskCore.destinationOfFundsValue}\r\n                        onChange={(k, t) =>\r\n                            setRiskCore({\r\n                                ...riskCore,\r\n                                destinationOfFunds: t,\r\n                                destinationOfFundsValue: Number(k) || 0,\r\n                            })\r\n                        }\r\n                    />\r\n                    <QuestionGroup\r\n                        label=\"Funds Type\"\r\n                        options={fundsTypeOptions}\r\n                        selectedKey={riskCore.fundsTypeValue}\r\n                        onChange={(k, t) =>\r\n                            setRiskCore({\r\n                                ...riskCore,\r\n                                fundsType: t,\r\n                                fundsTypeValue: Number(k) || 0,\r\n                            })\r\n                        }\r\n                    />\r\n                    <QuestionGroup\r\n                        label=\"How was Client Introduced?\"\r\n                        options={introducedOptions}\r\n                        selectedKey={riskCore.clientIntroducedValue}\r\n                        onChange={(k, t) =>\r\n                            setRiskCore({\r\n                                ...riskCore,\r\n                                clientIntroduced: t,\r\n                                clientIntroducedValue: Number(k) || 0,\r\n                            })\r\n                        }\r\n                    />\r\n                    {/* Section: Funds */}\r\n                    <div style={{ fontSize: 10, fontWeight: 700, color: '#6B7280', textTransform: 'uppercase', margin: '4px 0 2px' }}>Funds</div>\r\n                    <QuestionGroup\r\n                        label=\"Limitation\"\r\n                        options={limitationOptions}\r\n                        selectedKey={riskCore.limitationValue}\r\n                        onChange={(k, t) =>\r\n                            setRiskCore({\r\n                                ...riskCore,\r\n                                limitation: t,\r\n                                limitationValue: Number(k) || 0,\r\n                            })\r\n                        }\r\n                    />\r\n                    {[2, 3].includes(riskCore.limitationValue) && (\r\n                        <Stack tokens={{ childrenGap: 6 }}>\r\n                            <DatePicker\r\n                                value={limitationDate}\r\n                                onSelectDate={(d) => setLimitationDate(d || undefined)}\r\n                                styles={datePickerStyles}\r\n                                placeholder=\"Limitation Date\"\r\n                                formatDate={(d?: Date) => (d ? d.toLocaleDateString('en-GB') : '')}\r\n                                disabled={limitationDateTbc}\r\n                            />\r\n                            <Checkbox\r\n                                label=\"Limitation Date TBC\"\r\n                                checked={limitationDateTbc}\r\n                                onChange={(_, c) => {\r\n                                    setLimitationDateTbc(!!c);\r\n                                    if (c) setLimitationDate(undefined);\r\n                                }}\r\n                                styles={{ text: { fontSize: 12 } }}\r\n                            />\r\n                        </Stack>\r\n                    )}\r\n                    <QuestionGroup\r\n                        label=\"Source of Funds\"\r\n                        options={sourceOfFundsOptions}\r\n                        selectedKey={riskCore.sourceOfFundsValue}\r\n                        onChange={(k, t) =>\r\n                            setRiskCore({\r\n                                ...riskCore,\r\n                                sourceOfFunds: t,\r\n                                sourceOfFundsValue: Number(k) || 0,\r\n                            })\r\n                        }\r\n                    />\r\n                    <QuestionGroup\r\n                        label=\"Value of Instruction\"\r\n                        options={valueOfInstructionOptions}\r\n                        selectedKey={riskCore.valueOfInstructionValue}\r\n                        onChange={(k, t) =>\r\n                            setRiskCore({\r\n                                ...riskCore,\r\n                                valueOfInstruction: t,\r\n                                valueOfInstructionValue: Number(k) || 0,\r\n                            })\r\n                        }\r\n                    />\r\n                </Stack>\r\n\r\n                <Stack tokens={{ childrenGap: 8 }} styles={{ root: { flex: 2 } }}>\r\n                    {/* Summary */}\r\n                    <div style={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'space-between',\r\n                        gap: 6,\r\n                        padding: '6px 8px',\r\n                        border: '1px solid #e1e5e9',\r\n                        borderRadius: 6,\r\n                        background: 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n                        boxShadow: '0 2px 4px rgba(0,0,0,0.05)'\r\n                    }}>\r\n                        <div style={{ fontSize: 11, fontWeight: 600, color: '#061733' }}>Score: {riskScore}</div>\r\n                        <div style={{\r\n                            padding: '2px 6px',\r\n                            borderRadius: 999,\r\n                            fontSize: 10,\r\n                            fontWeight: 700,\r\n                            color: '#fff',\r\n                            background: riskResult === 'High Risk' ? '#D65541' : riskResult === 'Medium Risk' ? '#FFB900' : '#22A06B'\r\n                        }}>\r\n                            {riskResult}\r\n                        </div>\r\n                    </div>\r\n                    <QuestionGroup\r\n                        label=\"I have considered client risk factors\"\r\n                        options={[{ key: 'yes', text: 'Yes' }, { key: 'no', text: 'No' }]}\r\n                        selectedKey={\r\n                            consideredClientRisk === undefined\r\n                                ? undefined\r\n                                : consideredClientRisk\r\n                                ? 'yes'\r\n                                : 'no'\r\n                        }\r\n                        onChange={(k) => setConsideredClientRisk(k === 'yes')}\r\n                        showPrompt={true}\r\n                    />\r\n                    <QuestionGroup\r\n                        label=\"I have considered transaction risk factors\"\r\n                        options={[{ key: 'yes', text: 'Yes' }, { key: 'no', text: 'No' }]}\r\n                        selectedKey={\r\n                            consideredTransactionRisk === undefined\r\n                                ? undefined\r\n                                : consideredTransactionRisk\r\n                                ? 'yes'\r\n                                : 'no'\r\n                        }\r\n                        onChange={(k) => setConsideredTransactionRisk(k === 'yes')}\r\n                        showPrompt={true}\r\n                    />\r\n                    {consideredTransactionRisk && (\r\n                        <QuestionGroup\r\n                            label=\"Transaction Risk Level\"\r\n                            options={[\r\n                                { key: 'Low Risk', text: 'Low Risk' },\r\n                                { key: 'Medium Risk', text: 'Medium Risk' },\r\n                                { key: 'High Risk', text: 'High Risk' },\r\n                            ]}\r\n                            selectedKey={transactionRiskLevel}\r\n                            onChange={(k) => setTransactionRiskLevel(k as string)}\r\n                        />\r\n                    )}\r\n                    <QuestionGroup\r\n                        label=\"I have considered the Firm Wide Sanctions Risk Assessment\"\r\n                        options={[{ key: 'yes', text: 'Yes' }, { key: 'no', text: 'No' }]}\r\n                        selectedKey={\r\n                            consideredFirmWideSanctions === undefined\r\n                                ? undefined\r\n                                : consideredFirmWideSanctions\r\n                                ? 'yes'\r\n                                : 'no'\r\n                        }\r\n                        onChange={(k) => setConsideredFirmWideSanctions(k === 'yes')}\r\n                        showPrompt={true}\r\n                    />\r\n                    <QuestionGroup\r\n                        label=\"I have considered the Firm Wide AML policy\"\r\n                        options={[{ key: 'yes', text: 'Yes' }, { key: 'no', text: 'No' }]}\r\n                        selectedKey={\r\n                            consideredFirmWideAML === undefined\r\n                                ? undefined\r\n                                : consideredFirmWideAML\r\n                                ? 'yes'\r\n                                : 'no'\r\n                        }\r\n                        onChange={(k) => setConsideredFirmWideAML(k === 'yes')}\r\n                        showPrompt={true}\r\n                    />\r\n                </Stack>\r\n            </Stack>\r\n\r\n            <Stack horizontal tokens={{ childrenGap: 12 }} horizontalAlign=\"center\">\r\n                {hasDataToClear() && (\r\n                    <Dialog\r\n                        hidden={!isClearDialogOpen}\r\n                        onDismiss={() => setIsClearDialogOpen(false)}\r\n                        dialogContentProps={{\r\n                            type: DialogType.normal,\r\n                            title: 'Clear All Data',\r\n                            subText: 'Are you sure you want to clear all form data? This action cannot be undone.',\r\n                        }}\r\n                        modalProps={{ isBlocking: true }}\r\n                    >\r\n                        <DialogFooter>\r\n                            <PrimaryButton onClick={doClearAll} text=\"Yes, clear all\" />\r\n                            <DefaultButton onClick={() => setIsClearDialogOpen(false)} text=\"Cancel\" />\r\n                        </DialogFooter>\r\n                    </Dialog>\r\n                )}\r\n\r\n                <PrimaryButton\r\n                    text=\"Continue\"\r\n                    onClick={onContinue}\r\n                    disabled={!isComplete()}\r\n                    styles={sharedPrimaryButtonStyles}\r\n                />\r\n            </Stack>\r\n\r\n            {jsonPreviewOpen && (\r\n                <div\r\n                    style={{\r\n                        marginTop: 12,\r\n                        border: '1px solid #e1dfdd',\r\n                        borderRadius: 6,\r\n                        background: '#f8f9fa',\r\n                        overflow: 'hidden',\r\n                        width: '100%',\r\n                        maxWidth: 620,\r\n                    }}\r\n                >\r\n                    <div\r\n                        style={{\r\n                            padding: 16,\r\n                            maxHeight: 300,\r\n                            overflow: 'auto',\r\n                            fontSize: 10,\r\n                            fontFamily: 'Monaco, Consolas, \"Courier New\", monospace',\r\n                            lineHeight: 1.4,\r\n                            background: '#fff',\r\n                        }}\r\n                    >\r\n                        <pre style={{ margin: 0, whiteSpace: 'pre-wrap', wordBreak: 'break-word' }}>\r\n                            {JSON.stringify(generateJson(), null, 2)}\r\n                        </pre>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </Stack>\r\n    );\r\n};\r\n\r\nexport default RiskAssessment;\r\n","import React, { useState } from 'react';\r\n// invisible change 2.1\r\n//\r\nimport { Stack, Dialog, DialogType, DialogFooter, DefaultButton, PrimaryButton } from '@fluentui/react';\r\nimport OperationStatusToast from '../enquiries/pitch-builder/OperationStatusToast';\r\nimport RiskAssessment, { RiskCore } from '../../components/RiskAssessment';\r\nimport { dashboardTokens } from './componentTokens';\r\nimport '../../app/styles/NewMatters.css';\r\nimport '../../app/styles/MatterOpeningCard.css';\r\nimport '../../app/styles/RiskAssessmentPage.css';\r\nimport { sharedPrimaryButtonStyles, sharedDefaultButtonStyles } from '../../app/styles/ButtonStyles';\r\n\r\ninterface RiskAssessmentPageProps {\r\n    onBack: () => void;\r\n    instructionRef?: string;\r\n    riskAssessor?: string;\r\n    /** Existing risk assessment data to display when available */\r\n    existingRisk?: any | null;\r\n    /** Callback when risk assessment is successfully submitted */\r\n    onSave?: (risk: any) => void;\r\n}\r\n\r\nconst RiskAssessmentPage: React.FC<RiskAssessmentPageProps> = ({ onBack, instructionRef, riskAssessor, existingRisk, onSave }) => {\r\n    const [toast, setToast] = useState<{\r\n        visible: boolean;\r\n        message: string;\r\n        type: 'success' | 'error' | 'info' | 'warning';\r\n    }>({ visible: false, message: '', type: 'info' });\r\n    const [riskCore, setRiskCore] = useState<RiskCore>({\r\n        clientType: existingRisk?.ClientType ?? '',\r\n        clientTypeValue: existingRisk?.ClientType_Value ?? 0,\r\n        destinationOfFunds: existingRisk?.DestinationOfFunds ?? '',\r\n        destinationOfFundsValue: existingRisk?.DestinationOfFunds_Value ?? 0,\r\n        fundsType: existingRisk?.FundsType ?? '',\r\n        fundsTypeValue: existingRisk?.FundsType_Value ?? 0,\r\n        clientIntroduced: existingRisk?.HowWasClientIntroduced ?? '',\r\n        clientIntroducedValue: existingRisk?.HowWasClientIntroduced_Value ?? 0,\r\n        limitation: existingRisk?.Limitation ?? '',\r\n        limitationValue: existingRisk?.Limitation_Value ?? 0,\r\n        sourceOfFunds: existingRisk?.SourceOfFunds ?? '',\r\n        sourceOfFundsValue: existingRisk?.SourceOfFunds_Value ?? 0,\r\n        valueOfInstruction: existingRisk?.ValueOfInstruction ?? '',\r\n        valueOfInstructionValue: existingRisk?.ValueOfInstruction_Value ?? 0,\r\n    });\r\n    const [limitationDate, setLimitationDate] = useState<Date | undefined>();\r\n    const [limitationDateTbc, setLimitationDateTbc] = useState(false);\r\n    const [complianceDate, setComplianceDate] = useState<Date | undefined>(\r\n        existingRisk?.ComplianceDate ? new Date(existingRisk.ComplianceDate) : new Date(),\r\n    );\r\n    const [consideredClientRisk, setConsideredClientRisk] = useState<\r\n        boolean | undefined\r\n    >(existingRisk?.ClientRiskFactorsConsidered !== undefined\r\n        ? !!existingRisk?.ClientRiskFactorsConsidered\r\n        : false);\r\n    const [consideredTransactionRisk, setConsideredTransactionRisk] = useState<\r\n        boolean | undefined\r\n    >(existingRisk?.TransactionRiskFactorsConsidered !== undefined\r\n        ? !!existingRisk?.TransactionRiskFactorsConsidered\r\n        : false);\r\n    const [transactionRiskLevel, setTransactionRiskLevel] = useState(\r\n        existingRisk?.TransactionRiskLevel ?? '',\r\n    );\r\n    const [consideredFirmWideSanctions, setConsideredFirmWideSanctions] = useState<\r\n        boolean | undefined\r\n    >(existingRisk?.FirmWideSanctionsRiskConsidered !== undefined\r\n        ? !!existingRisk?.FirmWideSanctionsRiskConsidered\r\n        : false);\r\n    const [consideredFirmWideAML, setConsideredFirmWideAML] = useState<\r\n        boolean | undefined\r\n    >(existingRisk?.FirmWideAMLPolicyConsidered !== undefined\r\n        ? !!existingRisk?.FirmWideAMLPolicyConsidered\r\n        : false);\r\n\r\n    const [isClearDialogOpen, setIsClearDialogOpen] = useState(false);\r\n    const [headerButtons, setHeaderButtons] = useState<{ clearAllButton: React.ReactNode | null; jsonButton: React.ReactNode }>({\r\n        clearAllButton: null,\r\n        jsonButton: null\r\n    });\r\n\r\n    const handleHeaderButtonsChange = (buttons: { clearAllButton: React.ReactNode | null; jsonButton: React.ReactNode }) => {\r\n        setHeaderButtons(buttons);\r\n    };\r\n\r\n\r\n    // Helper function to check if there's any data to clear\r\n    const hasDataToClear = () => {\r\n        return Object.values(riskCore).some(v => v !== '' && v !== 0) ||\r\n               consideredClientRisk === true ||\r\n               consideredTransactionRisk === true ||\r\n               transactionRiskLevel !== '' ||\r\n               consideredFirmWideSanctions === true ||\r\n            consideredFirmWideAML === true ||\r\n            limitationDate !== undefined ||\r\n            limitationDateTbc;\r\n    };\r\n\r\n    // Clear all selections and inputs\r\n    const doClearAll = () => {\r\n        setIsClearDialogOpen(false);\r\n        \r\n        setRiskCore({\r\n            clientType: '',\r\n            clientTypeValue: 0,\r\n            destinationOfFunds: '',\r\n            destinationOfFundsValue: 0,\r\n            fundsType: '',\r\n            fundsTypeValue: 0,\r\n            clientIntroduced: '',\r\n            clientIntroducedValue: 0,\r\n            limitation: '',\r\n            limitationValue: 0,\r\n            sourceOfFunds: '',\r\n            sourceOfFundsValue: 0,\r\n            valueOfInstruction: '',\r\n            valueOfInstructionValue: 0,\r\n        });\r\n        setConsideredClientRisk(false);\r\n        setConsideredTransactionRisk(false);\r\n        setTransactionRiskLevel('');\r\n        setConsideredFirmWideSanctions(false);\r\n        setConsideredFirmWideAML(false);\r\n        setLimitationDate(undefined);\r\n        setLimitationDateTbc(false);\r\n    };\r\n\r\n    const isComplete = () =>\r\n        Object.values(riskCore).every((v) => v !== '' && v !== 0) &&\r\n        consideredClientRisk !== undefined &&\r\n        consideredTransactionRisk !== undefined &&\r\n        (consideredTransactionRisk ? transactionRiskLevel !== '' : true) &&\r\n        consideredFirmWideSanctions !== undefined &&\r\n        consideredFirmWideAML !== undefined &&\r\n        (riskCore.limitationValue === 1 || limitationDateTbc || !!limitationDate);\r\n\r\n    const handleContinue = async () => {\r\n        if (!isComplete()) return;\r\n        \r\n        try {\r\n            const riskScore =\r\n                riskCore.clientTypeValue +\r\n                riskCore.destinationOfFundsValue +\r\n                riskCore.fundsTypeValue +\r\n                riskCore.clientIntroducedValue +\r\n                riskCore.limitationValue +\r\n                riskCore.sourceOfFundsValue +\r\n                riskCore.valueOfInstructionValue;\r\n\r\n            let riskResult = 'Low Risk';\r\n            if (riskCore.limitationValue === 3 || riskScore >= 16) {\r\n                riskResult = 'High Risk';\r\n            } else if (riskScore >= 11) {\r\n                riskResult = 'Medium Risk';\r\n            }\r\n\r\n            // Calculate compliance expiry as 6 months from compliance date\r\n            const complianceExpiry = complianceDate ? new Date(complianceDate.getTime()) : null;\r\n            if (complianceExpiry) {\r\n                complianceExpiry.setMonth(complianceExpiry.getMonth() + 6);\r\n            }\r\n\r\n            let limitationText = riskCore.limitation;\r\n            if ([2, 3].includes(riskCore.limitationValue)) {\r\n                const datePart = limitationDateTbc\r\n                    ? 'TBC'\r\n                    : limitationDate\r\n                        ? limitationDate.toLocaleDateString('en-GB')\r\n                        : '';\r\n                if (datePart) limitationText += ` - ${datePart}`;\r\n            }\r\n\r\n            const payload = {\r\n                MatterId: instructionRef, // Using instruction ref as matter ID\r\n                InstructionRef: instructionRef,\r\n                RiskAssessor: riskAssessor,\r\n                ComplianceDate: complianceDate?.toISOString().split('T')[0],\r\n                ComplianceExpiry: complianceExpiry?.toISOString().split('T')[0],\r\n                ClientType: riskCore.clientType,\r\n                ClientType_Value: riskCore.clientTypeValue,\r\n                DestinationOfFunds: riskCore.destinationOfFunds,\r\n                DestinationOfFunds_Value: riskCore.destinationOfFundsValue,\r\n                FundsType: riskCore.fundsType,\r\n                FundsType_Value: riskCore.fundsTypeValue,\r\n                HowWasClientIntroduced: riskCore.clientIntroduced,\r\n                HowWasClientIntroduced_Value: riskCore.clientIntroducedValue,\r\n                Limitation: limitationText,\r\n                Limitation_Value: riskCore.limitationValue,\r\n                LimitationDate: limitationDate ? limitationDate.toISOString() : null,\r\n                LimitationDateTbc: limitationDateTbc,\r\n                SourceOfFunds: riskCore.sourceOfFunds,\r\n                SourceOfFunds_Value: riskCore.sourceOfFundsValue,\r\n                ValueOfInstruction: riskCore.valueOfInstruction,\r\n                ValueOfInstruction_Value: riskCore.valueOfInstructionValue,\r\n                TransactionRiskLevel: transactionRiskLevel,\r\n                ClientRiskFactorsConsidered: consideredClientRisk,\r\n                TransactionRiskFactorsConsidered: consideredTransactionRisk,\r\n                FirmWideSanctionsRiskConsidered: consideredFirmWideSanctions,\r\n                FirmWideAMLPolicyConsidered: consideredFirmWideAML,\r\n                RiskScore: riskScore,\r\n                RiskScoreIncrementBy: riskScore,\r\n                RiskAssessmentResult: riskResult,\r\n            };\r\n\r\n            console.log('📋 Submitting risk assessment:', payload);\r\n\r\n            const response = await fetch('/api/risk-assessments', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(payload)\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`API call failed: ${response.status}`);\r\n            }\r\n\r\n            const responseData = await response.text();\r\n            console.log('✅ Risk assessment submitted successfully:', responseData);\r\n\r\n            // Notify parent of new risk assessment so it can refresh UI\r\n            onSave?.(payload);\r\n\r\n            // Native in-app toast\r\n            setToast({ visible: true, message: 'Risk assessment saved', type: 'success' });\r\n            // Allow toast to be visible briefly before navigating back\r\n            setTimeout(() => {\r\n                setToast((t) => ({ ...t, visible: false }));\r\n                onBack();\r\n            }, 1200);\r\n            \r\n        } catch (err) {\r\n            console.error('❌ Risk assessment submit failed', err);\r\n            setToast({ visible: true, message: 'Failed to save risk assessment', type: 'error' });\r\n            // Auto-hide error after a short delay; stay on page for correction\r\n            setTimeout(() => setToast((t) => ({ ...t, visible: false })), 2000);\r\n        }\r\n        \r\n    };\r\n\r\n    return (\r\n        <Stack tokens={dashboardTokens} className=\"workflow-container\">\r\n            <div className=\"workflow-main matter-opening-card risk-full-width\">\r\n                {/* Header with breadcrumb-style progress - exactly like Matter Opening */}\r\n                <div style={{ \r\n                    display: 'flex', \r\n                    justifyContent: 'space-between', \r\n                    alignItems: 'center', \r\n                    padding: '16px 24px', \r\n                    borderBottom: '1px solid #e1dfdd',\r\n                    background: '#fff',\r\n                    margin: '-20px -20px 0 -20px'\r\n                }}>\r\n                    <div style={{ display: 'flex', alignItems: 'center', gap: 8, fontSize: 16, fontWeight: 600 }}>\r\n                        <i className=\"ms-Icon ms-Icon--DocumentSearch\" style={{ fontSize: 16 }} />\r\n                        Risk Assessment\r\n                    </div>\r\n\r\n                    {/* Right side controls */}\r\n                    <div style={{ \r\n                        display: 'flex', \r\n                        alignItems: 'center', \r\n                        gap: 8\r\n                    }}>\r\n                        {/* Buttons provided by child component */}\r\n                        {headerButtons.clearAllButton}\r\n                        {headerButtons.jsonButton}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Info box styled exactly like the provided element */}\r\n                <div style={{\r\n                    background: 'linear-gradient(135deg, rgb(248, 250, 251) 0%, rgb(241, 244, 246) 100%)',\r\n                    border: '1px solid rgb(225, 229, 233)',\r\n                    borderRadius: '0px',\r\n                    padding: '8px 12px',\r\n                    marginBottom: '6px',\r\n                    position: 'relative',\r\n                    overflow: 'hidden'\r\n                }}>\r\n                    <div style={{\r\n                        position: 'absolute',\r\n                        top: '0px',\r\n                        right: '0px',\r\n                        width: '120px',\r\n                        height: '100%',\r\n                        background: 'linear-gradient(90deg, transparent 0%, rgba(54, 144, 206, 0.03) 100%)',\r\n                        pointerEvents: 'none'\r\n                    }}></div>\r\n                    <div style={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'space-between',\r\n                        position: 'relative',\r\n                        zIndex: 1\r\n                    }}>\r\n                        <div style={{ display: 'flex', alignItems: 'center', gap: '10px' }}>\r\n                            <div>\r\n                                <div style={{\r\n                                    fontSize: '10px',\r\n                                    fontWeight: 600,\r\n                                    color: 'rgb(107, 114, 128)',\r\n                                    textTransform: 'uppercase',\r\n                                    letterSpacing: '0.5px',\r\n                                    marginBottom: '1px'\r\n                                }}>Assessment Date &amp; Time</div>\r\n                                <div style={{\r\n                                    fontSize: '13px',\r\n                                    fontWeight: 400,\r\n                                    color: 'rgb(31, 41, 55)',\r\n                                    fontFamily: 'Raleway, sans-serif'\r\n                                }}>{new Date().toLocaleDateString('en-GB')} {new Date().toLocaleTimeString('en-GB', { hour: '2-digit', minute: '2-digit' })}</div>\r\n                            </div>\r\n                            <div style={{\r\n                                width: '1px',\r\n                                height: '32px',\r\n                                background: 'rgb(225, 229, 233)',\r\n                                margin: '0 6px'\r\n                            }}></div>\r\n                            <div>\r\n                                <div style={{\r\n                                    fontSize: '10px',\r\n                                    fontWeight: 600,\r\n                                    color: 'rgb(107, 114, 128)',\r\n                                    textTransform: 'uppercase',\r\n                                    letterSpacing: '0.5px',\r\n                                    marginBottom: '1px'\r\n                                }}>Assessment Expiry</div>\r\n                                <div style={{\r\n                                    fontSize: '13px',\r\n                                    fontWeight: 400,\r\n                                    color: 'rgb(31, 41, 55)',\r\n                                    fontFamily: 'Raleway, sans-serif'\r\n                                }}>\r\n                                    {complianceDate ? (() => {\r\n                                        const expiryDate = new Date(complianceDate);\r\n                                        expiryDate.setMonth(expiryDate.getMonth() + 6);\r\n                                        return expiryDate.toLocaleDateString('en-GB');\r\n                                    })() : 'Not Set'}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ textAlign: 'right' }}>\r\n                            <div style={{\r\n                                fontSize: '10px',\r\n                                fontWeight: 600,\r\n                                color: 'rgb(107, 114, 128)',\r\n                                textTransform: 'uppercase',\r\n                                letterSpacing: '0.5px',\r\n                                marginBottom: '1px'\r\n                            }}>User Assessing Risk</div>\r\n                            <div style={{\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'flex-end',\r\n                                gap: '6px'\r\n                            }}>\r\n                                <div style={{\r\n                                    fontSize: '13px',\r\n                                    fontWeight: 400,\r\n                                    color: 'rgb(54, 144, 206)',\r\n                                    display: 'flex',\r\n                                    alignItems: 'center',\r\n                                    gap: '4px'\r\n                                }}>\r\n                                    <i className=\"ms-Icon ms-Icon--Contact\" style={{ fontSize: '12px' }}></i>\r\n                                    {riskAssessor ? `${riskAssessor} | 141740` : 'Current User | 141740'}\r\n                                </div>\r\n                                <div style={{\r\n                                    width: '6px',\r\n                                    height: '6px',\r\n                                    borderRadius: '50%',\r\n                                    background: 'rgb(16, 185, 129)',\r\n                                    animation: '2s ease 0s infinite normal none running pulse',\r\n                                    boxShadow: 'rgba(16, 185, 129, 0.7) 0px 0px 0px 0px'\r\n                                }}></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"step-content active\" style={{ maxHeight: 'none', opacity: 1, visibility: 'visible', padding: '0.5rem' }}>\r\n                    <RiskAssessment\r\n                        riskCore={riskCore}\r\n                        setRiskCore={setRiskCore}\r\n                        consideredClientRisk={consideredClientRisk}\r\n                        setConsideredClientRisk={setConsideredClientRisk}\r\n                        consideredTransactionRisk={consideredTransactionRisk}\r\n                        setConsideredTransactionRisk={setConsideredTransactionRisk}\r\n                        transactionRiskLevel={transactionRiskLevel}\r\n                        setTransactionRiskLevel={setTransactionRiskLevel}\r\n                        consideredFirmWideSanctions={consideredFirmWideSanctions}\r\n                        setConsideredFirmWideSanctions={setConsideredFirmWideSanctions}\r\n                        consideredFirmWideAML={consideredFirmWideAML}\r\n                        setConsideredFirmWideAML={setConsideredFirmWideAML}\r\n                        limitationDate={limitationDate}\r\n                        setLimitationDate={setLimitationDate}\r\n                        limitationDateTbc={limitationDateTbc}\r\n                        setLimitationDateTbc={setLimitationDateTbc}\r\n                        onContinue={handleContinue}\r\n                        isComplete={isComplete}\r\n                        onHeaderButtonsChange={handleHeaderButtonsChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {/* Clear All Confirmation Dialog */}\r\n            <Dialog\r\n                hidden={!isClearDialogOpen}\r\n                onDismiss={() => setIsClearDialogOpen(false)}\r\n                dialogContentProps={{\r\n                    type: DialogType.normal,\r\n                    title: 'Clear All Data',\r\n                    subText: 'Are you sure you want to clear all form data? This action cannot be undone.'\r\n                }}\r\n                modalProps={{\r\n                    isBlocking: true\r\n                }}\r\n            >\r\n                <DialogFooter>\r\n                    <PrimaryButton \r\n                        onClick={doClearAll} \r\n                        text=\"Yes, clear all\"\r\n                        styles={sharedPrimaryButtonStyles}\r\n                    />\r\n                    <DefaultButton \r\n                        onClick={() => setIsClearDialogOpen(false)} \r\n                        text=\"Cancel\"\r\n                        styles={sharedDefaultButtonStyles}\r\n                    />\r\n                </DialogFooter>\r\n            </Dialog>\r\n\r\n            {/* CSS animations for completion ticks and pulse animation */}\r\n            <style>{`\r\n                @keyframes tickPop {\r\n                    from {\r\n                        opacity: 0;\r\n                        transform: scale(0);\r\n                    }\r\n                    to {\r\n                        opacity: 1;\r\n                        transform: scale(1);\r\n                    }\r\n                }\r\n                \r\n                .completion-tick {\r\n                    animation: tickPop 0.3s ease;\r\n                }\r\n                \r\n                .completion-tick.visible {\r\n                    opacity: 1;\r\n                    transform: scale(1);\r\n                }\r\n\r\n                @keyframes pulse {\r\n                    0% {\r\n                        box-shadow: 0 0 0 0 rgba(16, 185, 129, 0.7);\r\n                    }\r\n                    70% {\r\n                        box-shadow: 0 0 0 4px rgba(16, 185, 129, 0);\r\n                    }\r\n                    100% {\r\n                        box-shadow: 0 0 0 0 rgba(16, 185, 129, 0);\r\n                    }\r\n                }\r\n            `}</style>\r\n            {/* Toast */}\r\n            <OperationStatusToast \r\n                visible={toast.visible}\r\n                message={toast.message}\r\n                type={toast.type}\r\n            />\r\n        </Stack>\r\n    );\r\n};\r\n\r\nexport default RiskAssessmentPage;","// src/tabs/matters/POIDPreview.tsx\r\n// invisible change 2.1\r\n//\r\nimport React from 'react';\r\nimport { Stack, Text, mergeStyles } from '@fluentui/react';\r\nimport { POID } from '../../app/functionality/types';\r\nimport { colours } from '../../app/styles/colours';\r\n\r\nconst fieldTagStyle = mergeStyles({\r\n    backgroundColor: '#f3f2f1',\r\n    border: '1px solid #e1dfdd',\r\n    borderRadius: '0px',\r\n    padding: '4px 8px',\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    marginRight: '6px',\r\n    marginBottom: '6px',\r\n});\r\nconst fieldLabelStyle = mergeStyles({ fontWeight: 600, marginRight: '4px' });\r\nconst fieldValueStyle = mergeStyles({\r\n    color: '#333',\r\n    wordBreak: 'break-word',\r\n    maxWidth: '100%',\r\n});\r\nconst linkStyle = mergeStyles({\r\n    color: colours.highlight,\r\n    textDecoration: 'underline',\r\n});\r\n\r\nconst formatDateTime = (dateStr: string): string => {\r\n    const date = new Date(dateStr);\r\n    if (isNaN(date.getTime())) return dateStr;\r\n    return date.toLocaleString();\r\n};\r\n\r\ninterface POIDPreviewProps {\r\n    poid: POID;\r\n}\r\n\r\nconst POIDPreview: React.FC<POIDPreviewProps> = ({ poid }) => {\r\n    const sections = [\r\n        {\r\n            title: 'Identity Info',\r\n            fields: [\r\n                { key: 'poid_id', label: 'POID ID' },\r\n                { key: 'type', label: 'Type' },\r\n                { key: 'terms_acceptance', label: 'Terms' },\r\n                { key: 'check_result', label: 'Result' },\r\n                { key: 'check_id', label: 'Check ID' },\r\n                { key: 'stage', label: 'Stage' },\r\n            ],\r\n        },\r\n        {\r\n            title: 'Personal Info',\r\n            fields: [\r\n                { key: 'prefix', label: 'Prefix' },\r\n                { key: 'first', label: 'First Name' },\r\n                { key: 'last', label: 'Last Name' },\r\n                { key: 'gender', label: 'Gender' },\r\n                { key: 'date_of_birth', label: 'DOB' },\r\n                { key: 'nationality', label: 'Nationality' },\r\n                { key: 'nationality_iso', label: 'ISO' },\r\n            ],\r\n        },\r\n        {\r\n            title: 'Contact Info',\r\n            fields: [\r\n                { key: 'best_number', label: 'Phone' },\r\n                { key: 'email', label: 'Email' },\r\n                { key: 'poc', label: 'POC' },\r\n            ],\r\n        },\r\n        {\r\n            title: 'Document Info',\r\n            fields: [\r\n                { key: 'submission_url', label: 'Submission URL' },\r\n                { key: 'submission_date', label: 'Submission Date' },\r\n                { key: 'id_docs_folder', label: 'Docs Folder' },\r\n                { key: 'additional_id_submission_id', label: 'Addl ID' },\r\n                { key: 'additional_id_submission_url', label: 'Addl URL' },\r\n                { key: 'additional_id_submission_date', label: 'Addl Date' },\r\n            ],\r\n        },\r\n        {\r\n            title: 'Address',\r\n            fields: [\r\n                { key: 'house_building_number', label: 'House/Building' },\r\n                { key: 'street', label: 'Street' },\r\n                { key: 'city', label: 'City' },\r\n                { key: 'county', label: 'County' },\r\n                { key: 'post_code', label: 'Post Code' },\r\n                { key: 'country', label: 'Country' },\r\n                { key: 'country_code', label: 'Country Code' },\r\n            ],\r\n        },\r\n        {\r\n            title: 'Company Info',\r\n            fields: [\r\n                { key: 'company_name', label: 'Company Name' },\r\n                { key: 'company_number', label: 'Company Number' },\r\n                { key: 'company_house_building_number', label: 'Building' },\r\n                { key: 'company_street', label: 'Street' },\r\n                { key: 'company_city', label: 'City' },\r\n                { key: 'company_county', label: 'County' },\r\n                { key: 'company_post_code', label: 'Post Code' },\r\n                { key: 'company_country', label: 'Country' },\r\n                { key: 'company_country_code', label: 'Code' },\r\n            ],\r\n        },\r\n        {\r\n            title: 'Other Info',\r\n            fields: [\r\n                { key: 'client_id', label: 'Client ID' },\r\n                { key: 'related_client_id', label: 'Related Client' },\r\n                { key: 'matter_id', label: 'Matter ID' },\r\n                { key: 'risk_assessor', label: 'Risk Assessor' },\r\n                { key: 'risk_assessment_date', label: 'Risk Date' },\r\n            ],\r\n        },\r\n    ];\r\n\r\n    // Keys for date fields.\r\n    const dateKeys = new Set([\r\n        'submission_date',\r\n        'additional_id_submission_date',\r\n        'date_of_birth',\r\n        'risk_assessment_date',\r\n    ]);\r\n\r\n    // Keys for URL fields.\r\n    const linkKeys = new Set([\r\n        'submission_url',\r\n        'id_docs_folder',\r\n        'additional_id_submission_url',\r\n    ]);\r\n\r\n    // Map each URL field to a static display label.\r\n    const linkLabels: { [key: string]: string } = {\r\n        submission_url: 'Open Submission',\r\n        id_docs_folder: 'Open Folder',\r\n        additional_id_submission_url: 'Open Additional',\r\n    };\r\n\r\n    return (\r\n        <Stack tokens={{ childrenGap: 16 }}>\r\n            <Text variant=\"xLarge\" styles={{ root: { marginBottom: 10 } }}>Preview</Text>\r\n            {sections.map((section) => (\r\n                <Stack key={section.title} tokens={{ childrenGap: 8 }}>\r\n                    <Text variant=\"mediumPlus\" styles={{ root: { fontWeight: 600, borderBottom: '1px solid #e1dfdd', paddingBottom: 4 } }}>\r\n                        {section.title}\r\n                    </Text>\r\n                    <Stack tokens={{ childrenGap: 4 }} horizontal wrap>\r\n                        {section.fields.map(({ key, label }) => {\r\n                            const rawValue = poid[key as keyof POID];\r\n                            if (!rawValue) return null;\r\n\r\n                            const displayValue = dateKeys.has(key)\r\n                                ? formatDateTime(String(rawValue))\r\n                                : String(rawValue);\r\n\r\n                            if (linkKeys.has(key)) {\r\n                                return (\r\n                                    <div key={key} className={fieldTagStyle}>\r\n                                        <span className={fieldLabelStyle}>{label}:</span>\r\n                                        <a\r\n                                            href={String(rawValue)}\r\n                                            target=\"_blank\"\r\n                                            rel=\"noopener noreferrer\"\r\n                                            className={linkStyle}\r\n                                        >\r\n                                            {linkLabels[key] || 'Open Link'}\r\n                                        </a>\r\n                                    </div>\r\n                                );\r\n                            }\r\n                            return (\r\n                                <div key={key} className={fieldTagStyle}>\r\n                                    <span className={fieldLabelStyle}>{label}:</span>\r\n                                    <span className={fieldValueStyle}>{displayValue}</span>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </Stack>\r\n                </Stack>\r\n            ))}\r\n        </Stack>\r\n    );\r\n};\r\n\r\nexport default POIDPreview;\r\n","import React, { useState } from 'react';\r\n// invisible change 2.1\r\n//\r\nimport {\r\n    Stack,\r\n    PrimaryButton,\r\n    TextField,\r\n    Text,\r\n    Checkbox,\r\n    Dropdown,\r\n    IDropdownOption,\r\n} from '@fluentui/react';\r\nimport { POID } from '../../app/functionality/types';\r\nimport { dashboardTokens, cardStyles } from './componentTokens';\r\nimport { sharedDecisionButtonStyles, sharedPrimaryButtonStyles } from '../../app/styles/ButtonStyles';\r\nimport PoidPreview from './PoidPreview';\r\nimport '../../app/styles/MatterOpeningCard.css';\r\n\r\ninterface EIDCheckPageProps {\r\n    poidData: POID[];\r\n    instruction?: any;\r\n    onBack: () => void;\r\n}\r\n\r\nconst EIDCheckPage: React.FC<EIDCheckPageProps> = ({ poidData, instruction, onBack }) => {\r\n    const [mode, setMode] = useState<'choice' | 'manual' | 'existing'>(instruction ? 'manual' : 'choice');\r\n\r\n    const [identifier, setIdentifier] = useState('');\r\n    const [email, setEmail] = useState(instruction?.Email ?? '');\r\n    const [prospect, setProspect] = useState<POID | null>(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [confirmed, setConfirmed] = useState(false);\r\n\r\n    const [selectedId, setSelectedId] = useState<string | undefined>();\r\n\r\n    const fetchProspect = async () => {\r\n        setLoading(true);\r\n        await new Promise((res) => setTimeout(res, 600));\r\n        const found = poidData.find(\r\n            (p) => p.poid_id === identifier || p.email?.toLowerCase() === email.toLowerCase()\r\n        );\r\n        setProspect(\r\n            found || {\r\n                poid_id: identifier,\r\n                first: 'Demo',\r\n                last: 'User',\r\n                email,\r\n            } as POID\r\n        );\r\n        setLoading(false);\r\n        setConfirmed(false);\r\n    };\r\n\r\n    const selectedPoid = poidData.find((p) => p.poid_id === selectedId);\r\n\r\n    const canFetch = identifier.trim() !== '' || email.trim() !== '';\r\n    const canStart = mode === 'manual' ? confirmed && prospect : mode === 'existing' ? !!selectedPoid : false;\r\n\r\n    return (\r\n        <Stack tokens={dashboardTokens} className=\"workflow-container\">\r\n            <div className=\"workflow-main matter-opening-card\">\r\n                <div className=\"step-header\">\r\n                    <h3 className=\"step-title\">Verify an ID</h3>\r\n                </div>\r\n                <div className=\"step-content\">\r\n                    <Stack tokens={{ childrenGap: 16 }}>\r\n\r\n                    {mode === 'choice' && (\r\n                        <Stack horizontal tokens={{ childrenGap: 16 }} horizontalAlign=\"center\">\r\n                            <PrimaryButton\r\n                                text=\"Use Existing\"\r\n                                onClick={() => setMode('existing')}\r\n                                styles={sharedDecisionButtonStyles}\r\n                            />\r\n                            <PrimaryButton\r\n                                text=\"Manual Entry\"\r\n                                onClick={() => setMode('manual')}\r\n                                styles={sharedDecisionButtonStyles}\r\n                            />\r\n                        </Stack>\r\n                    )}\r\n\r\n                    {mode === 'manual' && (\r\n                        <>\r\n                            <Stack tokens={{ childrenGap: 8 }} style={{ maxWidth: 300 }}>\r\n                                <TextField\r\n                                    label=\"Identifier\"\r\n                                    value={identifier}\r\n                                    onChange={(_, v) => setIdentifier(v || '')}\r\n                                />\r\n                                <TextField\r\n                                    label=\"Email Address\"\r\n                                    value={email}\r\n                                    onChange={(_, v) => setEmail(v || '')}\r\n                                />\r\n                                <PrimaryButton\r\n                                    text=\"Fetch Details\"\r\n                                    onClick={fetchProspect}\r\n                                    disabled={!canFetch || loading}\r\n                                    styles={sharedPrimaryButtonStyles}\r\n                                />\r\n                            </Stack>\r\n                            {prospect && (\r\n                                <Stack tokens={{ childrenGap: 8 }} styles={cardStyles}>\r\n                                    <Text variant=\"mediumPlus\" styles={{ root: { fontWeight: 600 } }}>\r\n                                        Prospect Details\r\n                                    </Text>\r\n                                    <ul className=\"detail-list\">\r\n                                        {prospect.poid_id && (\r\n                                            <li>\r\n                                                <strong>ID:</strong> {prospect.poid_id}\r\n                                            </li>\r\n                                        )}\r\n                                        {(prospect.first || prospect.last) && (\r\n                                            <li>\r\n                                                <strong>Name:</strong> {`${prospect.first ?? ''} ${prospect.last ?? ''}`.trim()}\r\n                                            </li>\r\n                                        )}\r\n                                        {prospect.email && (\r\n                                            <li>\r\n                                                <strong>Email:</strong> {prospect.email}\r\n                                            </li>\r\n                                        )}\r\n                                    </ul>\r\n                                    <Checkbox\r\n                                        label=\"This is the correct person\"\r\n                                        checked={confirmed}\r\n                                        onChange={(_, c) => setConfirmed(!!c)}\r\n                                    />\r\n                                </Stack>\r\n                            )}\r\n                        </>\r\n                    )}\r\n\r\n                    {mode === 'existing' && (\r\n                        <>\r\n                            <Dropdown\r\n                                placeholder=\"Select submission...\"\r\n                                options={poidData.map((p) => ({\r\n                                    key: p.poid_id,\r\n                                    text: `${p.first ?? ''} ${p.last ?? ''}`.trim() || p.poid_id,\r\n                                })) as IDropdownOption[]}\r\n                                selectedKey={selectedId}\r\n                                onChange={(_, o) => setSelectedId(o?.key as string)}\r\n                                styles={{ root: { maxWidth: 300 } }}\r\n                            />\r\n                            {selectedPoid && (\r\n                                <Stack tokens={{ childrenGap: 8 }} styles={cardStyles}>\r\n                                    <PoidPreview poid={selectedPoid} />\r\n                                    {(selectedPoid as any).check_id && (\r\n                                        <Text styles={{ root: { fontWeight: 600 } }}>\r\n                                            Existing ID verification found.\r\n                                        </Text>\r\n                                    )}\r\n                                </Stack>\r\n                            )}\r\n                        </>\r\n                    )}\r\n\r\n                    {mode !== 'choice' && (\r\n                        <PrimaryButton\r\n                            text=\"Start Check\"\r\n                            disabled={!canStart}\r\n                            styles={sharedPrimaryButtonStyles}\r\n                        />\r\n                    )}\r\n                </Stack>\r\n                </div>\r\n            </div>\r\n        </Stack>\r\n    );\r\n};\r\n\r\nexport default EIDCheckPage;\r\n","import { useEffect, useState } from 'react';\r\nimport { InstructionData } from '../../../app/functionality/types';\r\nimport teamData from '../../../localData/team-sql-data.json';\r\n\r\nconst INITIAL_FIELDS: Record<string, string> = {\r\n    insert_clients_name: '',\r\n    insert_heading_eg_matter_description: '',\r\n    matter: '',\r\n    name_of_person_handling_matter: '',\r\n    status: '',\r\n    email: '',\r\n    insert_current_position_and_scope_of_retainer: '',\r\n    next_steps: '',\r\n    realistic_timescale: '',\r\n    identify_the_other_party_eg_your_opponents: ''\r\n};\r\n\r\nexport function useTemplateFields(selectedInstruction?: InstructionData | null) {\r\n    const [templateFields, setTemplateFields] = useState<Record<string, string>>(INITIAL_FIELDS);\r\n    const [activeField, setActiveField] = useState<string | null>(null);\r\n    const [touchedFields, setTouchedFields] = useState<Record<string, boolean>>({});\r\n\r\n    useEffect(() => {\r\n        if (!selectedInstruction) return;\r\n\r\n        const updatedFields = { ...templateFields };\r\n        const first = (selectedInstruction as any).FirstName || '';\r\n        const last = (selectedInstruction as any).LastName || '';\r\n        const prefix = (selectedInstruction as any).Title ? `${(selectedInstruction as any).Title} ` : '';\r\n        const company = (selectedInstruction as any).CompanyName || '';\r\n        const name = (first || last) ? `${prefix}${first} ${last}`.trim() : company;\r\n        if (name) updatedFields.insert_clients_name = name;\r\n\r\n        if (selectedInstruction.title && !updatedFields.matter) {\r\n            updatedFields.matter = selectedInstruction.title;\r\n        }\r\n        if (selectedInstruction.title && !updatedFields.insert_heading_eg_matter_description) {\r\n            updatedFields.insert_heading_eg_matter_description = `RE: ${selectedInstruction.title}`;\r\n        }\r\n        if (selectedInstruction.description && !updatedFields.insert_current_position_and_scope_of_retainer) {\r\n            updatedFields.insert_current_position_and_scope_of_retainer = selectedInstruction.description;\r\n        }\r\n        if ((selectedInstruction as any).Email && !updatedFields.email) {\r\n            updatedFields.email = (selectedInstruction as any).Email;\r\n        }\r\n\r\n        const currentUser = (teamData as any[])[0] || {};\r\n        if (!updatedFields.name_of_person_handling_matter && currentUser['Full Name']) {\r\n            updatedFields.name_of_person_handling_matter = currentUser['Full Name'];\r\n        }\r\n        if (!updatedFields.status && currentUser.Role) {\r\n            updatedFields.status = currentUser.Role;\r\n        }\r\n\r\n        setTemplateFields(updatedFields);\r\n    }, [selectedInstruction]);\r\n\r\n    return { templateFields, setTemplateFields, activeField, setActiveField, touchedFields, setTouchedFields };\r\n}","import React from 'react';\r\nimport { Stack, Icon } from '@fluentui/react';\r\n\r\ninterface Step1Props {\r\n    currentStep: number;\r\n    isInstructionBasedMode: boolean;\r\n    questionBannerStyle: React.CSSProperties;\r\n    instructionSearchTerm: string;\r\n    setInstructionSearchTerm: (value: string) => void;\r\n    filteredInstructions: any[];\r\n    selectedInstruction: any | null;\r\n    userHasInteracted: boolean;\r\n    setSelectedInstruction: (inst: any | null) => void;\r\n    setHasSelectedInstruction: (val: boolean) => void;\r\n    setUserHasInteracted: (val: boolean) => void;\r\n    selectedTemplate: 'ccl' | 'custom' | null;\r\n    handleTemplateSelect: (tpl: 'ccl' | 'custom') => void;\r\n    templateCardStyle: React.CSSProperties;\r\n    colours: any;\r\n    navigationStyle: React.CSSProperties;\r\n    canProceedToStep2: boolean;\r\n    goToNextStep: () => void;\r\n}\r\n\r\nconst TemplateSelectionStep: React.FC<Step1Props> = (props) => {\r\n    const {\r\n        currentStep,\r\n        isInstructionBasedMode,\r\n        questionBannerStyle,\r\n        instructionSearchTerm,\r\n        setInstructionSearchTerm,\r\n        filteredInstructions,\r\n        selectedInstruction,\r\n        userHasInteracted,\r\n        setSelectedInstruction,\r\n        setHasSelectedInstruction,\r\n        setUserHasInteracted,\r\n        selectedTemplate,\r\n        handleTemplateSelect,\r\n        templateCardStyle,\r\n        colours,\r\n        navigationStyle,\r\n        canProceedToStep2,\r\n        goToNextStep\r\n    } = props;\r\n\r\n    if (currentStep !== 1) return null;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"matter-opening-card\">\r\n                <Stack tokens={{ childrenGap: 20 }}>\r\n                    <div>\r\n                        {/* Instruction Selection */}\r\n                        {!isInstructionBasedMode && (\r\n                            <div style={{ marginBottom: '24px' }}>\r\n                                <div style={questionBannerStyle}>\r\n                                    Select Instruction\r\n                                </div>\r\n\r\n                                {/* Search input */}\r\n                                <div style={{ marginTop: '12px', marginBottom: '16px' }}>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Search instructions...\"\r\n                                        value={instructionSearchTerm}\r\n                                        onChange={(e) => setInstructionSearchTerm(e.target.value)}\r\n                                        style={{\r\n                                            width: '100%',\r\n                                            padding: '8px 12px',\r\n                                            border: '1px solid #e1dfdd',\r\n                                            borderRadius: '4px',\r\n                                            fontSize: '14px',\r\n                                            outline: 'none',\r\n                                            transition: 'border-color 0.2s ease'\r\n                                        }}\r\n                                        onFocus={(e) => e.target.style.borderColor = '#3690CE'}\r\n                                        onBlur={(e) => e.target.style.borderColor = '#e1dfdd'}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    display: 'grid',\r\n                                    gridTemplateColumns: 'repeat(auto-fit, minmax(280px, 1fr))',\r\n                                    gap: '12px'\r\n                                }}>\r\n                                    {/* Instruction options */}\r\n                                    {filteredInstructions.length === 0 ? (\r\n                                        <div style={{\r\n                                            gridColumn: '1 / -1',\r\n                                            textAlign: 'center',\r\n                                            padding: '32px',\r\n                                            color: '#666',\r\n                                            fontSize: '14px'\r\n                                        }}>\r\n                                            {instructionSearchTerm.trim() ?\r\n                                                `No instructions found matching \"${instructionSearchTerm}\"` :\r\n                                                'No instructions available'\r\n                                            }\r\n                                        </div>\r\n                                    ) : (\r\n                                        filteredInstructions.map((inst) => {\r\n                                            const instId = inst.id || inst.prospectId;\r\n                                            const selectedId = selectedInstruction?.id || selectedInstruction?.prospectId;\r\n                                            const isSelected = userHasInteracted && selectedId === instId;\r\n\r\n                                            return (\r\n                                                <div\r\n                                                    key={instId}\r\n                                                    style={{\r\n                                                        padding: '16px',\r\n                                                        border: isSelected ? `1px solid ${colours.highlight}` : '1px solid #e0e0e0',\r\n                                                        borderRadius: '0',\r\n                                                        backgroundColor: isSelected ? `${colours.highlight}22` : '#fff',\r\n                                                        cursor: 'pointer',\r\n                                                        transition: 'all 0.2s ease',\r\n                                                        position: 'relative'\r\n                                                    }}\r\n                                                    onClick={() => {\r\n                                                        if (isSelected) {\r\n                                                            // Unselect if already selected - reset to initial state\r\n                                                            setSelectedInstruction(null);\r\n                                                            setHasSelectedInstruction(false);\r\n                                                            setUserHasInteracted(false);\r\n                                                        } else {\r\n                                                            // Select instruction\r\n                                                            setSelectedInstruction(inst);\r\n                                                            setHasSelectedInstruction(true);\r\n                                                            setUserHasInteracted(true);\r\n                                                        }\r\n                                                    }}\r\n                                                    onMouseEnter={(e) => {\r\n                                                        if (!isSelected) {\r\n                                                            e.currentTarget.style.borderColor = colours.highlight;\r\n                                                            e.currentTarget.style.backgroundColor = '#f7fafc';\r\n                                                        }\r\n                                                    }}\r\n                                                    onMouseLeave={(e) => {\r\n                                                        if (!isSelected) {\r\n                                                            e.currentTarget.style.borderColor = '#e0e0e0';\r\n                                                            e.currentTarget.style.backgroundColor = '#fff';\r\n                                                        }\r\n                                                    }}\r\n                                                >\r\n                                                    <div style={{\r\n                                                        fontSize: '16px',\r\n                                                        fontWeight: 600,\r\n                                                        color: '#061733',\r\n                                                        marginBottom: '4px'\r\n                                                    }}>\r\n                                                        {inst.title || (inst.prospectId ? `Instruction ${inst.prospectId}` : 'Untitled Instruction')}\r\n                                                    </div>\r\n                                                    {inst.deals?.[0]?.ServiceDescription && (\r\n                                                        <div style={{\r\n                                                            fontSize: '14px',\r\n                                                            color: '#3690CE',\r\n                                                            marginBottom: '4px'\r\n                                                        }}>\r\n                                                            {inst.deals[0].ServiceDescription}\r\n                                                        </div>\r\n                                                    )}\r\n                                                    {inst.description && (\r\n                                                        <div style={{\r\n                                                            fontSize: '13px',\r\n                                                            color: '#666'\r\n                                                        }}>\r\n                                                            {inst.description}\r\n                                                        </div>\r\n                                                    )}\r\n                                                    {isSelected && (\r\n                                                        <div style={{\r\n                                                            position: 'absolute',\r\n                                                            top: '12px',\r\n                                                            right: '12px',\r\n                                                            width: '20px',\r\n                                                            height: '20px',\r\n                                                            borderRadius: '50%',\r\n                                                            backgroundColor: '#3690CE',\r\n                                                            display: 'flex',\r\n                                                            alignItems: 'center',\r\n                                                            justifyContent: 'center'\r\n                                                        }}>\r\n                                                            <Icon iconName=\"Accept\" style={{ color: '#fff', fontSize: '12px' }} />\r\n                                                        </div>\r\n                                                    )}\r\n                                                </div>\r\n                                            );\r\n                                        })\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                        {/* Template Selection */}\r\n                        <div>\r\n                            <div style={questionBannerStyle}>\r\n                                Choose Your Template\r\n                            </div>\r\n                            <div style={{\r\n                                display: 'grid',\r\n                                gridTemplateColumns: 'repeat(2, 1fr)',\r\n                                gap: '8px',\r\n                                width: '100%',\r\n                                marginTop: '0'\r\n                            }}>\r\n                                <div\r\n                                    style={{\r\n                                        padding: '12px 16px',\r\n                                        textAlign: 'center',\r\n                                        cursor: 'pointer',\r\n                                        userSelect: 'none',\r\n                                        fontSize: '14px',\r\n                                        fontWeight: '500',\r\n                                        transition: 'all 0.2s ease',\r\n                                        border: `1px solid ${selectedTemplate === 'ccl' ? colours.highlight : '#e0e0e0'}`,\r\n                                        background: selectedTemplate === 'ccl' ? `${colours.highlight}22` : '#fff',\r\n                                        color: selectedTemplate === 'ccl' ? colours.highlight : '#4a5568',\r\n                                        display: 'flex',\r\n                                        flexDirection: 'column',\r\n                                        alignItems: 'center',\r\n                                        justifyContent: 'center',\r\n                                        minHeight: '80px',\r\n                                        position: 'relative',\r\n                                        borderRadius: '0',\r\n                                        boxShadow: selectedTemplate === 'ccl' ? `0 2px 8px ${colours.highlight}20` : 'none'\r\n                                    }}\r\n                                    onClick={() => handleTemplateSelect('ccl')}\r\n                                    onMouseEnter={(e) => {\r\n                                        if (selectedTemplate !== 'ccl') {\r\n                                            e.currentTarget.style.background = '#f7fafc';\r\n                                            e.currentTarget.style.borderColor = colours.highlight;\r\n                                        }\r\n                                    }}\r\n                                    onMouseLeave={(e) => {\r\n                                        if (selectedTemplate !== 'ccl') {\r\n                                            e.currentTarget.style.background = '#fff';\r\n                                            e.currentTarget.style.borderColor = '#e0e0e0';\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    <Icon iconName=\"FileText\" style={{ marginBottom: '8px', fontSize: '20px', color: selectedTemplate === 'ccl' ? colours.highlight : '#4a5568' }} />\r\n                                    <div style={{ fontSize: '14px', fontWeight: '600', marginBottom: '4px' }}>Client Care Letter</div>\r\n                                    <div style={{ fontSize: '12px', color: '#666', textAlign: 'center', lineHeight: '1.3' }}>\r\n                                        Standard engagement letter with placeholders\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div\r\n                                    style={{\r\n                                        padding: '12px 16px',\r\n                                        textAlign: 'center',\r\n                                        cursor: 'pointer',\r\n                                        userSelect: 'none',\r\n                                        fontSize: '14px',\r\n                                        fontWeight: '500',\r\n                                        transition: 'all 0.2s ease',\r\n                                        border: `1px solid ${selectedTemplate === 'custom' ? colours.highlight : '#e0e0e0'}`,\r\n                                        background: selectedTemplate === 'custom' ? `${colours.highlight}22` : '#fff',\r\n                                        color: selectedTemplate === 'custom' ? colours.highlight : '#4a5568',\r\n                                        display: 'flex',\r\n                                        flexDirection: 'column',\r\n                                        alignItems: 'center',\r\n                                        justifyContent: 'center',\r\n                                        minHeight: '80px',\r\n                                        position: 'relative',\r\n                                        borderRadius: '0',\r\n                                        boxShadow: selectedTemplate === 'custom' ? `0 2px 8px ${colours.highlight}20` : 'none'\r\n                                    }}\r\n                                    onClick={() => handleTemplateSelect('custom')}\r\n                                    onMouseEnter={(e) => {\r\n                                        if (selectedTemplate !== 'custom') {\r\n                                            e.currentTarget.style.background = '#f7fafc';\r\n                                            e.currentTarget.style.borderColor = colours.highlight;\r\n                                        }\r\n                                    }}\r\n                                    onMouseLeave={(e) => {\r\n                                        if (selectedTemplate !== 'custom') {\r\n                                            e.currentTarget.style.background = '#fff';\r\n                                            e.currentTarget.style.borderColor = '#e0e0e0';\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    <div style={{ fontSize: '14px', fontWeight: '600', marginBottom: '4px' }}>+ Custom Document</div>\r\n                                    <div style={{ fontSize: '12px', color: '#666', textAlign: 'center', lineHeight: '1.3' }}>\r\n                                        Start with a blank document\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Stack>\r\n\r\n                <div style={navigationStyle}>\r\n                    <div></div>\r\n                    <div\r\n                        className=\"nav-button forward-button\"\r\n                        onClick={canProceedToStep2 ? goToNextStep : undefined}\r\n                        aria-disabled={!canProceedToStep2}\r\n                        tabIndex={canProceedToStep2 ? 0 : -1}\r\n                        style={{\r\n                            background: '#f4f4f6',\r\n                            border: '2px solid #e1dfdd',\r\n                            borderRadius: '0px',\r\n                            width: '48px',\r\n                            height: '48px',\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            cursor: canProceedToStep2 ? 'pointer' : 'not-allowed',\r\n                            opacity: canProceedToStep2 ? 1 : 0.5,\r\n                            transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n                            boxShadow: '0 1px 2px rgba(6,23,51,0.04)',\r\n                            position: 'relative',\r\n                            overflow: 'hidden',\r\n                            pointerEvents: canProceedToStep2 ? 'auto' : 'none',\r\n                        }}\r\n                        onMouseEnter={canProceedToStep2 ? (e) => {\r\n                            e.currentTarget.style.background = '#ffefed';\r\n                            e.currentTarget.style.border = '2px solid #D65541';\r\n                            e.currentTarget.style.borderRadius = '0px';\r\n                            e.currentTarget.style.width = '180px';\r\n                            e.currentTarget.style.boxShadow = '0 2px 8px rgba(214,85,65,0.08)';\r\n                        } : undefined}\r\n                        onMouseLeave={canProceedToStep2 ? (e) => {\r\n                            e.currentTarget.style.background = '#f4f4f6';\r\n                            e.currentTarget.style.border = '2px solid #e1dfdd';\r\n                            e.currentTarget.style.borderRadius = '0px';\r\n                            e.currentTarget.style.width = '48px';\r\n                            e.currentTarget.style.boxShadow = '0 1px 2px rgba(6,23,51,0.04)';\r\n                        } : undefined}\r\n                    >\r\n                        {/* Arrow Icon */}\r\n                        <svg\r\n                            width=\"18\"\r\n                            height=\"18\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            fill=\"none\"\r\n                            style={{\r\n                                transition: 'color 0.3s, opacity 0.3s',\r\n                                color: canProceedToStep2 ? '#D65541' : '#999',\r\n                                position: 'absolute',\r\n                                left: '50%',\r\n                                top: '50%',\r\n                                transform: 'translate(-50%, -50%)',\r\n                            }}\r\n                        >\r\n                            <path\r\n                                d=\"M5 12h14M12 5l7 7-7 7\"\r\n                                stroke=\"currentColor\"\r\n                                strokeWidth=\"2\"\r\n                                strokeLinecap=\"round\"\r\n                                strokeLinejoin=\"round\"\r\n                            />\r\n                        </svg>\r\n\r\n                        {/* Expandable Text */}\r\n                        <span\r\n                            style={{\r\n                                position: 'absolute',\r\n                                left: '50%',\r\n                                top: '50%',\r\n                                transform: 'translate(-50%, -50%)',\r\n                                fontSize: '14px',\r\n                                fontWeight: 600,\r\n                                color: '#D65541',\r\n                                opacity: 0,\r\n                                transition: 'opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n                                whiteSpace: 'nowrap',\r\n                            }}\r\n                            className=\"nav-text\"\r\n                        >\r\n                            Continue to Editor\r\n                        </span>\r\n                    </div>\r\n                    <style>{`\r\n                            .nav-button:hover .nav-text {\r\n                                opacity: 1 !important;\r\n                            }\r\n                            .nav-button:hover svg {\r\n                                opacity: 0 !important;\r\n                            }\r\n                        `}</style>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TemplateSelectionStep;\r\n","import React, { useRef } from 'react';\r\nimport { Stack, IconButton } from '@fluentui/react';\r\n\r\ninterface Step2Props {\r\n    currentStep: number;\r\n    questionBannerStyle: React.CSSProperties;\r\n    renderFieldsOnlyView: () => JSX.Element;\r\n    renderEditableTemplateContent: (content: string) => JSX.Element | string;\r\n    documentContent: string;\r\n    isFieldsOnlyView: boolean;\r\n    setIsFieldsOnlyView: (val: boolean) => void;\r\n    navigationStyle: React.CSSProperties;\r\n    goToPreviousStep: () => void;\r\n    canProceedToStep3: boolean;\r\n    goToNextStep: () => void;\r\n}\r\n\r\n// invisible change: keep in editor history\r\n\r\nconst Step2: React.FC<Step2Props> = ({\r\n    currentStep,\r\n    questionBannerStyle,\r\n    renderFieldsOnlyView,\r\n    renderEditableTemplateContent,\r\n    documentContent,\r\n    isFieldsOnlyView,\r\n    setIsFieldsOnlyView,\r\n    navigationStyle,\r\n    goToPreviousStep,\r\n    canProceedToStep3,\r\n    goToNextStep\r\n}) => {\r\n    const editorRef = useRef<HTMLDivElement>(null);\r\n\r\n    const applyFormat = (command: string) => {\r\n        document.execCommand(command, false, undefined);\r\n        editorRef.current?.focus();\r\n    };\r\n\r\n    if (currentStep !== 2) return null;\r\n\r\n    return (\r\n        <div\r\n            className=\"matter-opening-card\"\r\n            style={{ opacity: 1, animation: 'fadeIn 0.3s ease-out' }}\r\n        >\r\n            <style>\r\n                {`\r\n          @keyframes fadeIn {\r\n            from { opacity: 0; transform: translateY(10px); }\r\n            to { opacity: 1; transform: translateY(0); }\r\n          }\r\n        `}\r\n            </style>\r\n            <Stack tokens={{ childrenGap: 20 }}>\r\n                <div style={{ display: 'flex', gap: '20px', flexDirection: 'row' }}>\r\n                    {/* Interactive Template Editor Section */}\r\n                    <div style={{ flex: '1', minWidth: '0' }}>\r\n                        <div\r\n                            style={{\r\n                                ...questionBannerStyle,\r\n                                display: 'flex',\r\n                                justifyContent: 'space-between',\r\n                                alignItems: 'center'\r\n                            }}\r\n                        >\r\n                            <span>Interactive Template Editor</span>\r\n                            <div style={{ display: 'flex', gap: 0 }}>\r\n                                <button\r\n                                    onClick={() => setIsFieldsOnlyView(false)}\r\n                                    style={{\r\n                                        padding: '8px 16px',\r\n                                        border: '1px solid #CCCCCC',\r\n                                        backgroundColor: !isFieldsOnlyView ? '#3690CE' : '#FFFFFF',\r\n                                        color: !isFieldsOnlyView ? '#FFFFFF' : '#061733',\r\n                                        fontSize: '14px',\r\n                                        fontWeight: 500,\r\n                                        cursor: 'pointer',\r\n                                        outline: 'none',\r\n                                        transition: 'all 0.2s ease',\r\n                                        borderRight: 'none',\r\n                                        minWidth: '80px'\r\n                                    }}\r\n                                >\r\n                                    Editor\r\n                                </button>\r\n                                <button\r\n                                    onClick={() => setIsFieldsOnlyView(true)}\r\n                                    style={{\r\n                                        padding: '8px 16px',\r\n                                        border: '1px solid #CCCCCC',\r\n                                        backgroundColor: isFieldsOnlyView ? '#3690CE' : '#FFFFFF',\r\n                                        color: isFieldsOnlyView ? '#FFFFFF' : '#061733',\r\n                                        fontSize: '14px',\r\n                                        fontWeight: 500,\r\n                                        cursor: 'pointer',\r\n                                        outline: 'none',\r\n                                        transition: 'all 0.2s ease',\r\n                                        minWidth: '80px'\r\n                                    }}\r\n                                >\r\n                                    Fields\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {isFieldsOnlyView ? (\r\n                            <div\r\n                                style={{\r\n                                    border: '1px solid #e1e5e9',\r\n                                    borderRadius: '4px',\r\n                                    padding: '16px',\r\n                                    minHeight: '300px',\r\n                                    fontFamily: 'Raleway, sans-serif',\r\n                                    fontSize: '14px',\r\n                                    backgroundColor: '#fff'\r\n                                }}\r\n                            >\r\n                                {renderFieldsOnlyView()}\r\n                            </div>\r\n                        ) : (\r\n                            <div\r\n                                style={{\r\n                                    border: '1px solid #e1e5e9',\r\n                                    borderRadius: '4px',\r\n                                    backgroundColor: '#fff'\r\n                                }}\r\n                            >\r\n                                <div\r\n                                    style={{\r\n                                        borderBottom: '1px solid #e1e5e9',\r\n                                        padding: '4px',\r\n                                        display: 'flex',\r\n                                        gap: '4px'\r\n                                    }}\r\n                                >\r\n                                    <IconButton\r\n                                        iconProps={{ iconName: 'Bold' }}\r\n                                        title=\"Bold\"\r\n                                        onClick={() => applyFormat('bold')}\r\n                                    />\r\n                                    <IconButton\r\n                                        iconProps={{ iconName: 'Italic' }}\r\n                                        title=\"Italic\"\r\n                                        onClick={() => applyFormat('italic')}\r\n                                    />\r\n                                    <IconButton\r\n                                        iconProps={{ iconName: 'Underline' }}\r\n                                        title=\"Underline\"\r\n                                        onClick={() => applyFormat('underline')}\r\n                                    />\r\n                                    <IconButton\r\n                                        iconProps={{ iconName: 'BulletedList' }}\r\n                                        title=\"Bullet List\"\r\n                                        onClick={() => applyFormat('insertUnorderedList')}\r\n                                    />\r\n                                    <IconButton\r\n                                        iconProps={{ iconName: 'NumberedList' }}\r\n                                        title=\"Numbered List\"\r\n                                        onClick={() => applyFormat('insertOrderedList')}\r\n                                    />\r\n                                </div>\r\n                                <div\r\n                                    ref={editorRef}\r\n                                    style={{\r\n                                        padding: '16px',\r\n                                        minHeight: '300px',\r\n                                        fontFamily: 'Raleway, sans-serif',\r\n                                        fontSize: '14px',\r\n                                        lineHeight: '1.3',\r\n                                        whiteSpace: 'pre-wrap',\r\n                                        cursor: 'text'\r\n                                    }}\r\n                                >\r\n                                    {renderEditableTemplateContent(documentContent)}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </Stack>\r\n\r\n            {/* Navigation Below Content */}\r\n            <div style={navigationStyle}>\r\n                <div\r\n                    className=\"nav-button back-button\"\r\n                    onClick={goToPreviousStep}\r\n                    tabIndex={0}\r\n                    style={{\r\n                        background: '#f4f4f6',\r\n                        border: '2px solid #e1dfdd',\r\n                        width: '48px',\r\n                        height: '48px',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        cursor: 'pointer',\r\n                        boxShadow: '0 1px 2px rgba(6,23,51,0.04)',\r\n                        position: 'relative',\r\n                        overflow: 'hidden',\r\n                        transition: 'all 0.3s cubic-bezier(0.4,0,0.2,1)'\r\n                    }}\r\n                    onMouseEnter={e => {\r\n                        Object.assign(e.currentTarget.style, {\r\n                            background: '#ffefed',\r\n                            border: '2px solid #D65541',\r\n                            width: '140px',\r\n                            boxShadow: '0 2px 8px rgba(214,85,65,0.08)'\r\n                        });\r\n                    }}\r\n                    onMouseLeave={e => {\r\n                        Object.assign(e.currentTarget.style, {\r\n                            background: '#f4f4f6',\r\n                            border: '2px solid #e1dfdd',\r\n                            width: '48px',\r\n                            boxShadow: '0 1px 2px rgba(6,23,51,0.04)'\r\n                        });\r\n                    }}\r\n                >\r\n                    <svg\r\n                        width=\"18\"\r\n                        height=\"18\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        fill=\"none\"\r\n                        style={{\r\n                            color: '#D65541',\r\n                            position: 'absolute',\r\n                            left: '50%',\r\n                            top: '50%',\r\n                            transform: 'translate(-50%,-50%) rotate(180deg)'\r\n                        }}\r\n                    >\r\n                        <path\r\n                            d=\"M5 12h14M12 5l7 7-7 7\"\r\n                            stroke=\"currentColor\"\r\n                            strokeWidth=\"2\"\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                        />\r\n                    </svg>\r\n                    <span\r\n                        className=\"nav-text\"\r\n                        style={{\r\n                            position: 'absolute',\r\n                            left: '50%',\r\n                            top: '50%',\r\n                            transform: 'translate(-50%,-50%)',\r\n                            fontSize: '14px',\r\n                            fontWeight: 600,\r\n                            color: '#D65541',\r\n                            opacity: 0,\r\n                            transition: 'opacity 0.3s'\r\n                        }}\r\n                    >\r\n                        Back to Selection\r\n                    </span>\r\n                </div>\r\n\r\n                <div\r\n                    className=\"nav-button forward-button\"\r\n                    onClick={canProceedToStep3 ? goToNextStep : undefined}\r\n                    aria-disabled={!canProceedToStep3}\r\n                    tabIndex={canProceedToStep3 ? 0 : -1}\r\n                    style={{\r\n                        background: '#f4f4f6',\r\n                        border: '2px solid #e1dfdd',\r\n                        width: '48px',\r\n                        height: '48px',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        cursor: canProceedToStep3 ? 'pointer' : 'not-allowed',\r\n                        opacity: canProceedToStep3 ? 1 : 0.5,\r\n                        boxShadow: '0 1px 2px rgba(6,23,51,0.04)',\r\n                        position: 'relative',\r\n                        overflow: 'hidden',\r\n                        transition: 'all 0.3s cubic-bezier(0.4,0,0.2,1)'\r\n                    }}\r\n                    onMouseEnter={e => {\r\n                        if (!canProceedToStep3) return;\r\n                        Object.assign(e.currentTarget.style, {\r\n                            background: '#ffefed',\r\n                            border: '2px solid #D65541',\r\n                            width: '160px',\r\n                            boxShadow: '0 2px 8px rgba(214,85,65,0.08)'\r\n                        });\r\n                    }}\r\n                    onMouseLeave={e => {\r\n                        if (!canProceedToStep3) return;\r\n                        Object.assign(e.currentTarget.style, {\r\n                            background: '#f4f4f6',\r\n                            border: '2px solid #e1dfdd',\r\n                            width: '48px',\r\n                            boxShadow: '0 1px 2px rgba(6,23,51,0.04)'\r\n                        });\r\n                    }}\r\n                >\r\n                    <svg\r\n                        width=\"18\"\r\n                        height=\"18\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        fill=\"none\"\r\n                        style={{\r\n                            color: canProceedToStep3 ? '#D65541' : '#999',\r\n                            position: 'absolute',\r\n                            left: '50%',\r\n                            top: '50%',\r\n                            transform: 'translate(-50%,-50%)'\r\n                        }}\r\n                    >\r\n                        <path\r\n                            d=\"M5 12h14M12 5l7 7-7 7\"\r\n                            stroke=\"currentColor\"\r\n                            strokeWidth=\"2\"\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                        />\r\n                    </svg>\r\n                    <span\r\n                        className=\"nav-text\"\r\n                        style={{\r\n                            position: 'absolute',\r\n                            left: '50%',\r\n                            top: '50%',\r\n                            transform: 'translate(-50%,-50%)',\r\n                            fontSize: '14px',\r\n                            fontWeight: 600,\r\n                            color: '#D65541',\r\n                            opacity: 0,\r\n                            transition: 'opacity 0.3s'\r\n                        }}\r\n                    >\r\n                        Continue to Preview\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Step2;\r\n","import React from 'react';\r\nimport { MessageBar, MessageBarType, Icon, Stack } from '@fluentui/react';\r\n\r\ninterface Step3Props {\r\n    currentStep: number;\r\n    questionBannerStyle: React.CSSProperties;\r\n    renderTemplateContentForPreview: () => JSX.Element | string;\r\n    documentContent: string;\r\n    windowWidth: number;\r\n    message: { type: MessageBarType; text: string } | null;\r\n    setMessage: (m: { type: MessageBarType; text: string } | null) => void;\r\n    generateContent: () => string;\r\n    templateFields: Record<string, string>;\r\n    selectedTemplate: 'ccl' | 'custom' | null;\r\n    navigationStyle: React.CSSProperties;\r\n    goToPreviousStep: () => void;\r\n    goToNextStep: () => void;\r\n}\r\n\r\nconst Step3: React.FC<Step3Props> = (props) => {\r\n    const {\r\n        currentStep,\r\n        questionBannerStyle,\r\n        renderTemplateContentForPreview,\r\n        documentContent,\r\n        windowWidth,\r\n        message,\r\n        setMessage,\r\n        generateContent,\r\n        templateFields,\r\n        selectedTemplate,\r\n        navigationStyle,\r\n        goToPreviousStep,\r\n        goToNextStep\r\n    } = props;\r\n\r\n    if (currentStep !== 3) return null;\r\n\r\n    return (\r\n        <div className=\"matter-opening-card\" style={{\r\n            opacity: 1,\r\n            animation: 'fadeIn 0.3s ease-out'\r\n        }}>\r\n            <style>\r\n                {`\r\n                    @keyframes fadeIn {\r\n                        from { opacity: 0; transform: translateY(10px); }\r\n                        to { opacity: 1; transform: translateY(0); }\r\n                    }\r\n                `}\r\n            </style>\r\n            <Stack tokens={{ childrenGap: 20 }}>\r\n                {/* Message Bar */}\r\n                {message && (\r\n                    <MessageBar\r\n                        messageBarType={message.type}\r\n                        onDismiss={() => setMessage(null)}\r\n                        styles={{ root: { marginBottom: '20px' } }}\r\n                    >\r\n                        {message.text}\r\n                    </MessageBar>\r\n                )}\r\n\r\n                <div>\r\n                    <h2 style={{ margin: '0 0 16px 0', fontSize: '24px', fontWeight: 600 }}>\r\n                        Step 3: Preview & Actions\r\n                    </h2>\r\n                    <p style={{ marginBottom: '24px', color: '#666' }}>\r\n                        Review your document and choose your delivery method.\r\n                    </p>\r\n\r\n                    <div style={{\r\n                        display: 'flex',\r\n                        gap: '20px',\r\n                        minHeight: '500px',\r\n                        flexDirection: windowWidth < 1200 ? 'column' : 'row'\r\n                    }}>\r\n                        {/* Document Preview */}\r\n                        <div style={{\r\n                            flex: '1',\r\n                            minWidth: '0'\r\n                        }}>\r\n                            <div style={questionBannerStyle}>\r\n                                Final Document Preview\r\n                            </div>\r\n                            <div style={{\r\n                                border: '1px solid #e1e5e9',\r\n                                borderRadius: '4px',\r\n                                padding: '20px',\r\n                                backgroundColor: '#f8f9fa',\r\n                                height: windowWidth < 1200 ? '300px' : '450px',\r\n                                overflow: 'auto',\r\n                                fontFamily: 'Raleway, sans-serif',\r\n                                fontSize: '14px',\r\n                                lineHeight: '1.6',\r\n                                whiteSpace: 'pre-wrap'\r\n                            }}>\r\n                                {renderTemplateContentForPreview()}\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Actions Panel */}\r\n                        <div style={{\r\n                            width: windowWidth < 1200 ? '100%' : '350px',\r\n                            flexShrink: windowWidth < 1200 ? 1 : 0,\r\n                            minWidth: windowWidth < 1200 ? '100%' : '300px'\r\n                        }}>\r\n                            <div style={questionBannerStyle}>\r\n                                Actions & Delivery\r\n                            </div>\r\n                            <div style={{\r\n                                border: '1px solid #e1e5e9',\r\n                                borderRadius: '4px',\r\n                                padding: '20px',\r\n                                backgroundColor: '#fff',\r\n                                height: windowWidth < 1200 ? '300px' : '450px'\r\n                            }}>\r\n                                <Stack tokens={{ childrenGap: 16 }}>\r\n                                    <div\r\n                                        className=\"action-button\"\r\n                                        onClick={() => setMessage({ type: MessageBarType.success, text: 'Email functionality coming soon!' })}\r\n                                        style={{\r\n                                            background: '#D65541',\r\n                                            color: 'white',\r\n                                            border: 'none',\r\n                                            borderRadius: '0px',\r\n                                            width: '100%',\r\n                                            padding: '12px 16px',\r\n                                            display: 'flex',\r\n                                            alignItems: 'center',\r\n                                            justifyContent: 'center',\r\n                                            gap: '8px',\r\n                                            cursor: 'pointer',\r\n                                            transition: 'all 0.2s ease',\r\n                                            fontSize: '14px',\r\n                                            fontWeight: 600,\r\n                                        }}\r\n                                        onMouseEnter={(e) => {\r\n                                            e.currentTarget.style.background = '#B54533';\r\n                                        }}\r\n                                        onMouseLeave={(e) => {\r\n                                            e.currentTarget.style.background = '#D65541';\r\n                                        }}\r\n                                    >\r\n                                        <Icon iconName=\"Mail\" />\r\n                                        Send via Email\r\n                                    </div>\r\n\r\n                                    <div\r\n                                        className=\"action-button\"\r\n                                        onClick={() => setMessage({ type: MessageBarType.info, text: 'PDF download coming soon!' })}\r\n                                        style={{\r\n                                            background: '#f4f4f6',\r\n                                            color: '#333',\r\n                                            border: '1px solid #e1dfdd',\r\n                                            borderRadius: '0px',\r\n                                            width: '100%',\r\n                                            padding: '12px 16px',\r\n                                            display: 'flex',\r\n                                            alignItems: 'center',\r\n                                            justifyContent: 'center',\r\n                                            gap: '8px',\r\n                                            cursor: 'pointer',\r\n                                            transition: 'all 0.2s ease',\r\n                                            fontSize: '14px',\r\n                                            fontWeight: 600,\r\n                                        }}\r\n                                        onMouseEnter={(e) => {\r\n                                            e.currentTarget.style.background = '#e6e6e8';\r\n                                        }}\r\n                                        onMouseLeave={(e) => {\r\n                                            e.currentTarget.style.background = '#f4f4f6';\r\n                                        }}\r\n                                    >\r\n                                        <Icon iconName=\"Download\" />\r\n                                        Download PDF\r\n                                    </div>\r\n\r\n                                    <div\r\n                                        className=\"action-button\"\r\n                                        onClick={() => setMessage({ type: MessageBarType.success, text: 'Draft saved successfully!' })}\r\n                                        style={{\r\n                                            background: '#f4f4f6',\r\n                                            color: '#333',\r\n                                            border: '1px solid #e1dfdd',\r\n                                            borderRadius: '0px',\r\n                                            width: '100%',\r\n                                            padding: '12px 16px',\r\n                                            display: 'flex',\r\n                                            alignItems: 'center',\r\n                                            justifyContent: 'center',\r\n                                            gap: '8px',\r\n                                            cursor: 'pointer',\r\n                                            transition: 'all 0.2s ease',\r\n                                            fontSize: '14px',\r\n                                            fontWeight: 600,\r\n                                        }}\r\n                                        onMouseEnter={(e) => {\r\n                                            e.currentTarget.style.background = '#e6e6e8';\r\n                                        }}\r\n                                        onMouseLeave={(e) => {\r\n                                            e.currentTarget.style.background = '#f4f4f6';\r\n                                        }}\r\n                                    >\r\n                                        <Icon iconName=\"Save\" />\r\n                                        Save as Draft\r\n                                    </div>\r\n\r\n                                    <div\r\n                                        className=\"action-button\"\r\n                                        onClick={() => {\r\n        navigator.clipboard.writeText(generateContent());\r\n                                            setMessage({ type: MessageBarType.success, text: 'Document copied to clipboard!' });\r\n                                        }}\r\n                                        style={{\r\n                                            background: '#f4f4f6',\r\n                                            color: '#333',\r\n                                            border: '1px solid #e1dfdd',\r\n                                            borderRadius: '0px',\r\n                                            width: '100%',\r\n                                            padding: '12px 16px',\r\n                                            display: 'flex',\r\n                                            alignItems: 'center',\r\n                                            justifyContent: 'center',\r\n                                            gap: '8px',\r\n                                            cursor: 'pointer',\r\n                                            transition: 'all 0.2s ease',\r\n                                            fontSize: '14px',\r\n                                            fontWeight: 600,\r\n                                        }}\r\n                                        onMouseEnter={(e) => {\r\n                                            e.currentTarget.style.background = '#e6e6e8';\r\n                                        }}\r\n                                        onMouseLeave={(e) => {\r\n                                            e.currentTarget.style.background = '#f4f4f6';\r\n                                        }}\r\n                                    >\r\n                                        <Icon iconName=\"Copy\" />\r\n                                        Copy to Clipboard\r\n                                    </div>\r\n\r\n                                    <div style={{ marginTop: '20px', padding: '16px', backgroundColor: '#f8f9fa', borderRadius: '4px' }}>\r\n                                        <h4 style={{ margin: '0 0 8px 0', fontSize: '14px' }}>Document Summary</h4>\r\n                                        <p style={{ margin: '0', fontSize: '12px', color: '#666' }}>\r\n                                            Template: {selectedTemplate === 'ccl' ? 'Client Care Letter' : 'Custom Document'}\r\n                                        </p>\r\n                                        <p style={{ margin: '4px 0 0 0', fontSize: '12px', color: '#666' }}>\r\n                                            Word count: {generateContent().split(/\\s+/).filter(word => word.length > 0).length}\r\n                                        </p>\r\n                                        <p style={{ margin: '4px 0 0 0', fontSize: '12px', color: '#666' }}>\r\n                                            Fields filled: {Object.values(templateFields).filter(v => v.trim() !== '').length}/{Object.keys(templateFields).length}\r\n                                        </p>\r\n                                    </div>\r\n                                </Stack>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={navigationStyle}>\r\n                    <div\r\n                        className=\"nav-button back-button\"\r\n                        onClick={goToPreviousStep}\r\n                        tabIndex={0}\r\n                        style={{\r\n                            background: '#f4f4f6',\r\n                            border: '2px solid #e1dfdd',\r\n                            borderRadius: '0px',\r\n                            width: '48px',\r\n                            height: '48px',\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            cursor: 'pointer',\r\n                            transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n                            boxShadow: '0 1px 2px rgba(6,23,51,0.04)',\r\n                            position: 'relative',\r\n                            overflow: 'hidden',\r\n                        }}\r\n                        onMouseEnter={(e) => {\r\n                            e.currentTarget.style.background = '#ffefed';\r\n                            e.currentTarget.style.border = '2px solid #D65541';\r\n                            e.currentTarget.style.borderRadius = '0px';\r\n                            e.currentTarget.style.width = '120px';\r\n                            e.currentTarget.style.boxShadow = '0 2px 8px rgba(214,85,65,0.08)';\r\n                        }}\r\n                        onMouseLeave={(e) => {\r\n                            e.currentTarget.style.background = '#f4f4f6';\r\n                            e.currentTarget.style.border = '2px solid #e1dfdd';\r\n                            e.currentTarget.style.borderRadius = '0px';\r\n                            e.currentTarget.style.width = '48px';\r\n                            e.currentTarget.style.boxShadow = '0 1px 2px rgba(6,23,51,0.04)';\r\n                        }}\r\n                    >\r\n                        {/* Arrow Icon */}\r\n                        <svg\r\n                            width=\"18\"\r\n                            height=\"18\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            fill=\"none\"\r\n                            style={{\r\n                                transition: 'color 0.3s, opacity 0.3s',\r\n                                color: '#D65541',\r\n                                position: 'absolute',\r\n                                left: '50%',\r\n                                top: '50%',\r\n                                transform: 'translate(-50%, -50%) rotate(180deg)',\r\n                            }}\r\n                        >\r\n                            <path\r\n                                d=\"M5 12h14M12 5l7 7-7 7\"\r\n                                stroke=\"currentColor\"\r\n                                strokeWidth=\"2\"\r\n                                strokeLinecap=\"round\"\r\n                                strokeLinejoin=\"round\"\r\n                            />\r\n                        </svg>\r\n\r\n                        {/* Expandable Text */}\r\n                        <span\r\n                            style={{\r\n                                position: 'absolute',\r\n                                left: '50%',\r\n                                top: '50%',\r\n                                transform: 'translate(-50%, -50%)',\r\n                                fontSize: '14px',\r\n                                fontWeight: 600,\r\n                                color: '#D65541',\r\n                                opacity: 0,\r\n                                transition: 'opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n                                whiteSpace: 'nowrap',\r\n                            }}\r\n                            className=\"nav-text\"\r\n                        >\r\n                            Back to Editor\r\n                        </span>\r\n                    </div>\r\n                    <div\r\n                        className=\"nav-button complete-button\"\r\n                        onClick={goToNextStep}\r\n                        tabIndex={0}\r\n                        style={{\r\n                            background: '#f4f4f6',\r\n                            border: '2px solid #e1dfdd',\r\n                            borderRadius: '0px',\r\n                            width: '48px',\r\n                            height: '48px',\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            cursor: 'pointer',\r\n                            transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n                            boxShadow: '0 1px 2px rgba(6,23,51,0.04)',\r\n                            position: 'relative',\r\n                            overflow: 'hidden',\r\n                        }}\r\n                        onMouseEnter={(e) => {\r\n                            e.currentTarget.style.background = '#ffefed';\r\n                            e.currentTarget.style.border = '2px solid #D65541';\r\n                            e.currentTarget.style.borderRadius = '0px';\r\n                            e.currentTarget.style.width = '160px';\r\n                            e.currentTarget.style.boxShadow = '0 2px 8px rgba(214,85,65,0.08)';\r\n                        }}\r\n                        onMouseLeave={(e) => {\r\n                            e.currentTarget.style.background = '#f4f4f6';\r\n                            e.currentTarget.style.border = '2px solid #e1dfdd';\r\n                            e.currentTarget.style.borderRadius = '0px';\r\n                            e.currentTarget.style.width = '48px';\r\n                            e.currentTarget.style.boxShadow = '0 1px 2px rgba(6,23,51,0.04)';\r\n                        }}\r\n                    >\r\n                        {/* Checkmark Icon */}\r\n                        <svg\r\n                            width=\"18\"\r\n                            height=\"18\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            fill=\"none\"\r\n                            style={{\r\n                                transition: 'color 0.3s, opacity 0.3s',\r\n                                color: '#D65541',\r\n                                position: 'absolute',\r\n                                left: '50%',\r\n                                top: '50%',\r\n                                transform: 'translate(-50%, -50%)',\r\n                            }}\r\n                        >\r\n                            <path\r\n                                d=\"M20 6L9 17l-5-5\"\r\n                                stroke=\"currentColor\"\r\n                                strokeWidth=\"2\"\r\n                                strokeLinecap=\"round\"\r\n                                strokeLinejoin=\"round\"\r\n                            />\r\n                        </svg>\r\n\r\n                        {/* Expandable Text */}\r\n                        <span\r\n                            style={{\r\n                                position: 'absolute',\r\n                                left: '50%',\r\n                                top: '50%',\r\n                                transform: 'translate(-50%, -50%)',\r\n                                fontSize: '14px',\r\n                                fontWeight: 600,\r\n                                color: '#D65541',\r\n                                opacity: 0,\r\n                                transition: 'opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n                                whiteSpace: 'nowrap',\r\n                            }}\r\n                            className=\"nav-text\"\r\n                        >\r\n                            Complete Document\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </Stack>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Step3;\r\n","import React from 'react';\r\nimport { colours } from '../../../app/styles/colours';\r\n\r\ninterface PresetPanelProps {\r\n    show: boolean;\r\n    field: string | null;\r\n    position: { x: number; y: number };\r\n    presets: Record<string, string[]>;\r\n    onSelect: (preset: string) => void;\r\n    onClose: () => void;\r\n}\r\n\r\nconst PresetPanel: React.FC<PresetPanelProps> = ({\r\n    show,\r\n    field,\r\n    position,\r\n    presets,\r\n    onSelect,\r\n    onClose\r\n}) => {\r\n    if (!show || !field) return null;\r\n\r\n    const options = presets[field] || [];\r\n    return (\r\n        <>\r\n            <div\r\n                style={{\r\n                    position: 'fixed',\r\n                    top: 0,\r\n                    left: 0,\r\n                    right: 0,\r\n                    bottom: 0,\r\n                    backgroundColor: 'rgba(0, 0, 0, 0.1)',\r\n                    zIndex: 1000\r\n                }}\r\n                onClick={onClose}\r\n            />\r\n            <div\r\n                style={{\r\n                    position: 'fixed',\r\n                    left: Math.min(position.x - 150, window.innerWidth - 320),\r\n                    top: Math.min(position.y, window.innerHeight - 300),\r\n                    width: '300px',\r\n                    maxHeight: '280px',\r\n                    backgroundColor: '#fff',\r\n                    border: '1px solid #e1e5e9',\r\n                    borderRadius: '8px',\r\n                    boxShadow: '0 8px 32px rgba(0, 0, 0, 0.12)',\r\n                    zIndex: 1001,\r\n                    overflow: 'hidden'\r\n                }}\r\n            >\r\n                <div\r\n                    style={{\r\n                        padding: '12px 16px',\r\n                        borderBottom: '1px solid #e1e5e9',\r\n                        backgroundColor: '#f8f9fa',\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        alignItems: 'center'\r\n                    }}\r\n                >\r\n                    <div style={{ fontSize: '14px', fontWeight: 600, color: '#333' }}>\r\n                        Choose Preset for {field.replace(/_/g, ' ')}\r\n                    </div>\r\n                    <button\r\n                        onClick={onClose}\r\n                        style={{\r\n                            background: 'none',\r\n                            border: 'none',\r\n                            fontSize: '16px',\r\n                            cursor: 'pointer',\r\n                            color: '#666',\r\n                            padding: '2px'\r\n                        }}\r\n                    >\r\n                        ×\r\n                    </button>\r\n                </div>\r\n                <div\r\n                    style={{\r\n                        maxHeight: '220px',\r\n                        overflowY: 'auto',\r\n                        padding: '8px'\r\n                    }}\r\n                >\r\n                    {options.map((preset, index) => (\r\n                        <div\r\n                            key={index}\r\n                            onClick={() => onSelect(preset)}\r\n                            style={{\r\n                                padding: '8px 12px',\r\n                                cursor: 'pointer',\r\n                                borderRadius: '4px',\r\n                                fontSize: '13px',\r\n                                color: '#333',\r\n                                backgroundColor: 'transparent',\r\n                                border: '1px solid #e1e5e9',\r\n                                margin: '4px 0',\r\n                                transition: 'all 0.2s ease',\r\n                                lineHeight: '1.3'\r\n                            }}\r\n                            onMouseEnter={e => {\r\n                                (e.currentTarget as HTMLElement).style.backgroundColor = '#f8f9fa';\r\n                                (e.currentTarget as HTMLElement).style.borderColor = colours.cta;\r\n                                (e.currentTarget as HTMLElement).style.color = colours.cta;\r\n                            }}\r\n                            onMouseLeave={e => {\r\n                                (e.currentTarget as HTMLElement).style.backgroundColor = 'transparent';\r\n                                (e.currentTarget as HTMLElement).style.borderColor = '#e1e5e9';\r\n                                (e.currentTarget as HTMLElement).style.color = '#333';\r\n                            }}\r\n                        >\r\n                            {preset}\r\n                        </div>\r\n                    ))}\r\n                    <div\r\n                        onClick={onClose}\r\n                        style={{\r\n                            padding: '10px 12px',\r\n                            cursor: 'pointer',\r\n                            borderRadius: '4px',\r\n                            fontSize: '13px',\r\n                            color: '#666',\r\n                            backgroundColor: 'transparent',\r\n                            border: '1px dashed #ccc',\r\n                            transition: 'all 0.2s ease',\r\n                            margin: '8px 0 2px 0',\r\n                            textAlign: 'center',\r\n                            fontStyle: 'italic'\r\n                        }}\r\n                        onMouseEnter={e => {\r\n                            (e.currentTarget as HTMLElement).style.backgroundColor = '#f8f9fa';\r\n                            (e.currentTarget as HTMLElement).style.borderColor = '#999';\r\n                        }}\r\n                        onMouseLeave={e => {\r\n                            (e.currentTarget as HTMLElement).style.backgroundColor = 'transparent';\r\n                            (e.currentTarget as HTMLElement).style.borderColor = '#ccc';\r\n                        }}\r\n                    >\r\n                        Type my own...\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PresetPanel;\r\n","import React from 'react';\r\n\r\ninterface HoverTooltipProps {\r\n    hoveredField: string | null;\r\n    position: { x: number; y: number };\r\n    displayNames: Record<string, string>;\r\n}\r\n\r\nconst HoverTooltip: React.FC<HoverTooltipProps> = ({ hoveredField, position, displayNames }) => {\r\n    if (!hoveredField) return null;\r\n    const tooltipStyle = {\r\n        position: 'fixed' as const,\r\n        top: position.y,\r\n        left: position.x,\r\n        transform: 'translateX(-50%)',\r\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n        color: 'white',\r\n        padding: '6px 12px',\r\n        borderRadius: '4px',\r\n        fontSize: '12px',\r\n        fontWeight: 500,\r\n        zIndex: 10000,\r\n        pointerEvents: 'none' as const,\r\n        whiteSpace: 'nowrap' as const\r\n    };\r\n    return (\r\n        <div style={tooltipStyle}>\r\n            {displayNames[hoveredField as keyof typeof displayNames] || hoveredField}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HoverTooltip;","export const placeholderStyles = `\r\n<style>\r\n.placeholder-segment {\r\n    border-top: 1px solid transparent !important;\r\n    border-bottom: 1px solid transparent !important;\r\n}\r\n\r\n.placeholder-segment:first-of-type {\r\n    border-top: 1px solid #20b26c !important;\r\n}\r\n\r\n.placeholder-segment:last-of-type {\r\n    border-bottom: 1px solid #20b26c !important;\r\n}\r\n\r\n.placeholder-segment-empty {\r\n    border-top: 1px solid transparent !important;\r\n    border-bottom: 1px solid transparent !important;\r\n}\r\n\r\n.placeholder-segment-empty:first-of-type {\r\n    border-top: 1px dashed #0078d4 !important;\r\n}\r\n\r\n.placeholder-segment-empty:last-of-type {\r\n    border-bottom: 1px dashed #0078d4 !important;\r\n}\r\n\r\n.placeholder-label {\r\n    margin-right: 4px;\r\n    font-style: italic;\r\n    color: #555;\r\n}\r\n\r\n.conditional-token {\r\n    background-color: #fff5f5;\r\n    border: 1px dashed #d65541;\r\n    color: #d65541;\r\n    padding: 2px 4px;\r\n    font-size: 12px;\r\n    margin: 0 2px;\r\n    display: inline-block;\r\n}\r\n</style>\r\n`;\r\n\r\nexport function injectPlaceholderStyles() {\r\n    if (typeof document !== 'undefined' && !document.getElementById('placeholder-molding-styles')) {\r\n        const styleElement = document.createElement('style');\r\n        styleElement.id = 'placeholder-molding-styles';\r\n        styleElement.innerHTML = placeholderStyles.replace('<style>', '').replace('</style>', '');\r\n        document.head.appendChild(styleElement);\r\n    }\r\n}","export const DEFAULT_CCL_TEMPLATE = `Dear {{insert_clients_name}}\r\n\r\n{{insert_heading_eg_matter_description}}\r\n\r\nThank you for your instructions to act on your behalf in connection with {{matter}}. This Engagement Letter and the attached Terms of Business explain the basis on which we will be acting for you—together they form the contract between us.\r\n\r\nPlease contact me if you have any difficulty understanding this Engagement Letter or other information we may provide, eg if anything in this letter is unclear or you require information to be provided in larger text, another format or a different language.\r\n\r\n1 Contact details and supervision\r\n\r\nThe person dealing with your matter is {{name_of_person_handling_matter}}, who is a {{status}}. Their contact details are:\r\n\r\nTelephone number: {{fee_earner_phone}}\r\nEmail address: {{fee_earner_email}}\r\nPostal address: {{fee_earner_postal_address}}\r\n\r\nThe best way to contact {{name_of_handler}} is {{email}}.\r\n\r\nIf {{handler}} is not available, the following members of staff may be able to deal with any queries you have:\r\n\r\n{{names_and_contact_details_of_other_members_of_staff_who_can_help_with_queries}}\r\n\r\nThe person with overall responsibility for supervising your matter is {{name}}, who is a Partner.\r\n\r\n2 Scope of services\r\n\r\n{{insert_current_position_and_scope_of_retainer}} (\"Initial Scope\")\r\n\r\nWe will provide legal advice and services to you with reasonable care and skill. However, the nature of many types of legal work means that it is not possible to guarantee a particular outcome.\r\n\r\nOur Terms of Business sets out general limitations on the scope of our services. Your matter may involve issues for which you need tax advice. We cannot and do not give advice on taxation and you should seek the advice of a suitably qualified tax expert. Where your case needs expert evidence then you will need to identify, with us, a suitably qualified expert to give an opinion. Any expert fees will be your responsibility.\r\n\r\n3 Next steps\r\n\r\nThe next steps in your matter are {{next_steps}}.\r\n\r\nWe expect this will take {{realistic_timescale}}. This is an estimate only. We will tell you if it is necessary to revise this timescale.\r\n\r\n4 Legal costs\r\n\r\nThere are three main elements to the legal costs of any matter:\r\n\r\n—our charges (see section 4.1 below);\r\n\r\n—expenses we must pay on your behalf—sometimes called disbursements (see section 4.2 below);\r\n\r\n—costs that you may have to pay another party (see section 4.3 below).\r\n\r\n4.1 Our charges\r\n\r\n{{charges_section_choice}}\r\n\r\n4.2 Disbursements (expenses)\r\n\r\nDisbursements are expenses we must pay on your behalf.\r\n\r\n{{disbursements_section_choice}}\r\n\r\n4.3 Costs you may have to pay another party\r\n\r\n{{costs_section_choice}}\r\n\r\n5 Funding and billing\r\n\r\nYou are responsible for the legal costs set out in this Engagement Letter.\r\n\r\nUnless agreed otherwise, our interim bills are detailed bills and are final in respect of the period to which they relate, save that disbursements may be billed separately and later than the interim bill for our charges in respect of the same period. We will send you a final bill at the end of your matter which will cover our charges from the date of the last interim bill and any unbilled disbursements. You have the right to challenge any interim bill or the final bill by applying to the court to assess the bill under the Solicitors Act 1974. The usual time limit for applying to the court for an assessment is one month from the date of delivery of the interim or final bill. Please be aware that the time limit runs from the date of each individual bill.\r\n\r\nInvoices are due forthwith with interest payable from 14 days after the date of the invoice.\r\n\r\n6 Payment on account of costs\r\n\r\nPlease provide us with £{{figure}} on account of costs. Our account is:\r\n\r\nHelix Law General Client Account, Barclays Bank, Eastbourne, 20-27-91 93472434\r\n\r\nPlease use the reference << Matter.Number >>\r\n\r\nWe work with money on account at all times, unless otherwise agreed in writing. This means that you should pay any invoice in full immediately, even if we hold money on account. If you fail pay an invoice when due, fail to maintain a reasonable sum on account of costs and/or disbursements we may, at our discretion, suspend work. We may terminate the retainer if the invoice is more than 14 days overdue. We may also terminate the retainer if you refuse, neglect or are unable to pay a reasonable sum on account of costs and/or disbursements within a reasonable time of it being requested. For urgent matters or necessary steps that require immediate action that reasonable time may be measured in hours.\r\n\r\n7 Costs updates\r\n\r\nWe have agreed to provide you with an update on the amount of costs when appropriate as the matter progresses{{and_or_intervals_eg_every_three_months}}.\r\n\r\n8 Risk analysis\r\n\r\nWe have discussed whether the potential outcome of your matter justifies the expense and risk involved. Our preliminary assessment is that it does.\r\n\r\n9 Limitation\r\n\r\nEach cause of action has a strict time limit after which you cannot bring a claim. Contract claims could be 6 years from the date the sums claimed/damages fell due/accrued.\r\n\r\nIf there is some fact that I have not been given or you disagree with my view on the limitation period then please let me know at once.\r\n\r\n10 Data protection\r\n\r\nWe take your privacy very seriously. Our Privacy policy contains important information on how and why we collect, process and store your personal data. It also explains your rights in relation to your personal data. The Privacy policy is available on our website at Helix Law Privacy Policy, but please contact us if you would like us to send a copy to you or if you would prefer us to explain our Privacy policy verbally.\r\n\r\nWe use outside counsel, experts, software providers and an external file auditors so your confidential information will be shared with them. Each will be bound to confidentiality by the particular contract with us and/or their professional obligations to you and to us.\r\n\r\n11 Marketing\r\n\r\nWe may use your personal data to send you updates (by email, text, telephone or post) about legal developments that might be of interest to you and/or information about our services, including exclusive offers, promotions or new services. You have the right to opt out of receiving promotional communications at any time, by:\r\n\r\n—contacting us at {{contact_details_for_marketing_opt_out}};\r\n\r\n—using the 'unsubscribe' link in emails or 'STOP' number in texts;\r\n\r\n—updating your marketing preferences on our {{link_to_preference_centre}}.\r\n\r\n12 Prevention of money laundering, terrorist financing and proliferation financing\r\n\r\nWe are required by law to obtain satisfactory evidence of the identity of our clients and also sometimes people related to them. This includes where monies are received from third parties on your behalf. This is because solicitors deal with money and property on behalf of clients and criminals can at times therefore attempt to use our services and accounts in an attempt to launder money. We therefore need to obtain and retain evidence of your identity. Most Solicitor firms request that their clients provide evidence of their identity themselves. However, we recognise that this can be time consuming and we therefore obtain confirmation of your identity using a search service, at our cost. Please note that if you do not wish us to verify your identity electronically you must bring this to our immediate attention. The electronic search process does leave an electronic 'footprint' each time a search is conducted. Footprints detail the date, time and reason for a search and certain types of search footprints are used in credit scoring systems and may have a detrimental impact on a consumer's ability to obtain credit.\r\n\r\nUnfortunately if the report is unsuccessful i.e. if you have only recently moved address, we may need to ask you to send in certain documents for our records, such as a recent utility bill confirming your address, and photographic identity documents such as a passport or driving licence. If this is necessary the identity documents should be provided by you, as our client or, where our client is a limited company, by a Director of the company. If you wish to provide us with authority to discuss your matter with any third party we must have your authority confirmed in writing. Please contact me if you have any queries regarding this.\r\n\r\n13 Duties to the court\r\n\r\nYour matter {{may_will}} involve court proceedings. All solicitors have a professional duty to uphold the rule of law and the proper administration of justice. We must comply with our duties to the court, even where this conflicts with our obligations to you. This means that we must not:\r\n\r\n—attempt to deceive or knowingly or recklessly mislead the court\r\n\r\n—be complicit in another person deceiving or misleading the court\r\n\r\n—place ourselves in contempt of court\r\n\r\n—make or offer payments to witnesses who depend on their evidence or the outcome of the case\r\n\r\nWe must also comply with court orders that put obligations on us and ensure that evidence relating to sensitive issues is not misused.\r\n\r\nThe court gives orders and there are strict times for complying with those orders. If the orders aren't followed in time then it may result in your case being struck out and an order for costs being made against you. It is your responsibility to reply quickly to any request for information, documents and instructions we may make of you. If you leave it to the last minute we cannot guarantee that you will be able to complete our work in time as we may have other matters and court proceedings that prevent us meeting your deadline.\r\n\r\nIn all litigation and disputes all parties have a duty to preserve evidence that is relevant to the dispute, including physical and electronic records and documents which either help your case and also includes those which are against you. This duty is important not least as if documents are deleted or destroyed that are relevant to the dispute our advice to you may be compromised. Further if documents are destroyed the court will be entitled to assume the absolute worst in terms of their content. This is likely to be extremely unhelpful to your case. Please contact me if you have any queries regarding this.\r\n\r\n14 Complaints\r\n\r\nWe want to give you the best possible service. However, if at any point you become unhappy or concerned about the service we have provided you should inform us immediately so we can do our best to resolve the problem.\r\n\r\nIn the first instance it may be helpful to contact the person who is working on your case to discuss your concerns and we will do our best to resolve any issues. If you would like to make a formal complaint, you can read our full complaints procedure here. Making a complaint will not affect how we handle your matter.\r\n\r\nYou may have a right to complain to the Legal Ombudsman. The time frame for doing so and full details of how to contact the Legal Ombudsman are in our Terms of Business.\r\n\r\n15 Limit on liability\r\n\r\nOur maximum liability to you (or any other party we have agreed may rely on our services) in relation to any single matter or any group of connected matters which may be aggregated by our insurers will be £3,000,000, including interest and costs. This limit overrides any limit stated in our Terms of Business.\r\n\r\nIf you wish to discuss a variation of this limit, please contact the person dealing with your matter. Agreeing a higher limit on our liability may result in us seeking an increase in our charges for handling your matter.\r\n\r\nPlease see our Terms of Business for an explanation of other limits on our liability to you.\r\n\r\n16 Referral and fee sharing arrangement\r\n\r\n{{explain_the_nature_of_your_arrangement_with_any_introducer_for_link_to_sample_wording_see_drafting_note_referral_and_fee_sharing_arrangement}}\r\n\r\n17 Right to cancel\r\n\r\nYou have the right to cancel this contract within 14 days without giving any reason. We will not start work during the cancellation period unless you expressly ask us to. The 'Instructions for Cancellation' notice at {{instructions_link}} explains:\r\n— how to cancel and the effect of cancellation;\r\n— what you will be liable for if you ask us to start work during the cancellation period.\r\n\r\n18 Action points\r\n\r\nThe action list below explains what you need to do next.\r\n\r\nAction required by you | Additional information\r\n☐ Sign and return one copy of the Terms of Business below | If you don't sign but continue to give us instructions you will be deemed to have accepted the terms in this letter and the Terms of Business\r\n☐ {{insert_next_step_you_would_like_client_to_take}} | {{state_why_this_step_is_important}}\r\n☐ Provide a payment on account of costs and disbursements of £{{state_amount}} | If we do not receive a payment on account of costs and disbursements, {{insert_consequence}}\r\n☐ If you would like us to start work during the 14-day cancellation period, sign and return the attached 'Request to start work during the cancellation period' form | This form is attached to this Engagement Letter\r\n☐ Alternatively, if you wish to cancel your contract with us, tell us within 14 days | You can simply inform us of your decision to cancel by letter, telephone or e-mail\r\n☐ Provide the following documents (and information) to allow me to take the next steps in your matter: | Without these documents there may be a delay in your matter\r\n\r\n{{describe_first_document_or_information_you_need_from_your_client}}\r\n{{describe_second_document_or_information_you_need_from_your_client}}\r\n{{describe_third_document_or_information_you_need_from_your_client}}\r\n\r\nPlease contact me if you have any queries or concerns about your matter, this Engagement Letter or the attached Terms of Business.`;\r\n","export const FIELD_DISPLAY_NAMES = {\r\n    insert_clients_name: \"Client Name\",\r\n    insert_heading_eg_matter_description: \"Matter Heading\",\r\n    matter: \"Matter Type\",\r\n    name_of_person_handling_matter: \"Handler Name\",\r\n    status: \"Handler Status\",\r\n    name_of_handler: \"Handler Short Name\",\r\n    handler: \"Handler Reference\",\r\n    email: \"Contact Method\",\r\n    insert_current_position_and_scope_of_retainer: \"Scope of Work\",\r\n    next_steps: \"Next Actions\",\r\n    realistic_timescale: \"Timeline\",\r\n    next_stage: \"Next Milestone\",\r\n    figure: \"Payment Amount\",\r\n    figure_or_range: \"Cost Estimate\",\r\n    we_cannot_give_an_estimate_of_our_overall_charges_in_this_matter_because_reason_why_estimate_is_not_possible: \"No Estimate Reason\",\r\n    estimate: \"Disbursement Estimate\",\r\n    in_total_including_vat_or_for_the_next_steps_in_your_matter: \"Estimate Scope\",\r\n    give_examples_of_what_your_estimate_includes_eg_accountants_report_and_court_fees: \"Estimate Includes\",\r\n    identify_the_other_party_eg_your_opponents: \"Opposing Party\",\r\n    may_will: \"Litigation Likelihood\",\r\n    and_or_intervals_eg_every_three_months: \"Cost Update Frequency\",\r\n    contact_details_for_marketing_opt_out: \"Marketing Contact\",\r\n    link_to_preference_centre: \"Preference Centre URL\",\r\n    explain_the_nature_of_your_arrangement_with_any_introducer_for_link_to_sample_wording_see_drafting_note_referral_and_fee_sharing_arrangement: \"Referral Arrangement\",\r\n    instructions_link: \"Cancellation Instructions URL\",\r\n    name: \"Supervisor Name\",\r\n    names_and_contact_details_of_other_members_of_staff_who_can_help_with_queries: \"Support Staff\",\r\n    name_of_firm: \"Firm Name\",\r\n    simple_disbursements_estimate: \"Simple Estimate Amount\",\r\n    detailed_disbursements_examples: \"Detailed Examples\",\r\n    detailed_disbursements_total: \"Detailed Total\",\r\n    disbursement_1_description: \"Disbursement 1 Description\",\r\n    disbursement_1_amount: \"Disbursement 1 Amount\",\r\n    disbursement_1_vat: \"Disbursement 1 VAT\",\r\n    disbursement_1_notes: \"Disbursement 1 Notes\",\r\n    disbursement_2_description: \"Disbursement 2 Description\",\r\n    disbursement_2_amount: \"Disbursement 2 Amount\",\r\n    disbursement_2_vat: \"Disbursement 2 VAT\",\r\n    disbursement_2_notes: \"Disbursement 2 Notes\",\r\n    disbursement_3_description: \"Disbursement 3 Description\",\r\n    disbursement_3_amount: \"Disbursement 3 Amount\",\r\n    disbursement_3_vat: \"Disbursement 3 VAT\",\r\n    disbursement_3_notes: \"Disbursement 3 Notes\",\r\n    insert_next_step_you_would_like_client_to_take: \"Next Step for Client\",\r\n    state_why_this_step_is_important: \"Step Importance\",\r\n    state_amount: \"Payment Amount\",\r\n    describe_first_document_or_information_you_need_from_your_client: \"First Document Required\",\r\n    describe_second_document_or_information_you_need_from_your_client: \"Second Document Required\",\r\n    describe_third_document_or_information_you_need_from_your_client: \"Third Document Required\",\r\n    matter_number: \"Matter Reference Number\"\r\n};\r\n\r\nexport const FIELD_PRESETS: Record<string, string[]> = {\r\n    insert_clients_name: [\r\n        \"Mr. John Smith\",\r\n        \"Mrs. Sarah Johnson\",\r\n        \"Ms. Emily Davis\",\r\n        \"Dr. Michael Brown\",\r\n        \"Mr. and Mrs. Williams\"\r\n    ],\r\n    matter: [\r\n        \"Commercial Property Purchase\",\r\n        \"Residential Property Sale\",\r\n        \"Business Acquisition\",\r\n        \"Employment Dispute\",\r\n        \"Contract Negotiation\"\r\n    ],\r\n    name_of_person_handling_matter: [\r\n        \"John Williams\",\r\n        \"Sarah Mitchell\",\r\n        \"Michael Thompson\",\r\n        \"Emily Roberts\",\r\n        \"David Anderson\"\r\n    ],\r\n    status: [\r\n        \"Senior Associate\",\r\n        \"Partner\",\r\n        \"Associate\",\r\n        \"Senior Partner\",\r\n        \"Consultant\"\r\n    ],\r\n    next_steps: [\r\n        \"Review and sign the attached documents\",\r\n        \"Provide requested documentation\",\r\n        \"Attend the scheduled meeting\",\r\n        \"Review the draft contract\",\r\n        \"Complete the client questionnaire\"\r\n    ],\r\n    next_stage: [\r\n        \"document review\",\r\n        \"contract negotiation\",\r\n        \"completion\",\r\n        \"exchange of contracts\",\r\n        \"due diligence\"\r\n    ],\r\n    figure: [\r\n        \"500\",\r\n        \"1,000\",\r\n        \"1,500\",\r\n        \"2,500\",\r\n        \"3,000\"\r\n    ],\r\n    figure_or_range: [\r\n        \"2,000-3,000\",\r\n        \"5,000-7,500\",\r\n        \"1,500-2,500\",\r\n        \"3,000-5,000\",\r\n        \"10,000-15,000\"\r\n    ],\r\n    we_cannot_give_an_estimate_of_our_overall_charges_in_this_matter_because_reason_why_estimate_is_not_possible: [\r\n        \"the scope of work is unclear at this stage\",\r\n        \"it depends on the complexity of negotiations\",\r\n        \"the matter involves multiple unknown variables\",\r\n        \"we need more information about your requirements\",\r\n        \"the timeline and scope may change significantly\"\r\n    ],\r\n    identify_the_other_party_eg_your_opponents: [\r\n        \"the seller\",\r\n        \"the buyer\",\r\n        \"the landlord\",\r\n        \"the tenant\",\r\n        \"the opposing party\",\r\n        \"the defendant\",\r\n        \"the claimant\",\r\n        \"the other party's\",\r\n        \"your opponent's\"\r\n    ],\r\n    estimate: [\r\n        \"500\",\r\n        \"1000\",\r\n        \"1500\",\r\n        \"2000\",\r\n        \"3000\"\r\n    ],\r\n    in_total_including_vat_or_for_the_next_steps_in_your_matter: [\r\n        \"in total including VAT\",\r\n        \"for the next steps in your matter\",\r\n        \"including VAT and expenses\",\r\n        \"total estimate including all costs\"\r\n    ],\r\n    give_examples_of_what_your_estimate_includes_eg_accountants_report_and_court_fees: [\r\n        \"court fees and search fees\",\r\n        \"accountants report and valuation\",\r\n        \"Land Registry fees and searches\",\r\n        \"expert witness fees and reports\",\r\n        \"administrative costs and postage\"\r\n    ],\r\n    insert_next_step_you_would_like_client_to_take: [\r\n        \"telephone me to discuss this letter and the next steps in your matter\",\r\n        \"review and sign the enclosed documentation\",\r\n        \"provide the requested information and documents\",\r\n        \"attend the scheduled meeting or consultation\",\r\n        \"confirm your instructions and preferred approach\"\r\n    ],\r\n    state_why_this_step_is_important: [\r\n        \"This will help us understand your priorities and proceed efficiently\",\r\n        \"This is required to move forward with your matter\",\r\n        \"Without this, there may be delays in progressing your case\",\r\n        \"This will ensure we are acting in accordance with your wishes\",\r\n        \"This step is necessary to comply with legal requirements\"\r\n    ],\r\n    state_amount: [\r\n        \"500\",\r\n        \"1,000\",\r\n        \"1,500\",\r\n        \"2,000\",\r\n        \"2,500\"\r\n    ],\r\n    describe_first_document_or_information_you_need_from_your_client: [\r\n        \"Copy of your passport or driving licence\",\r\n        \"Recent utility bill confirming your address\",\r\n        \"Contract or agreement relating to this matter\",\r\n        \"Correspondence from the other party\",\r\n        \"Financial statements or accounts\"\r\n    ],\r\n    describe_second_document_or_information_you_need_from_your_client: [\r\n        \"Bank statements for the last 3 months\",\r\n        \"Proof of income or employment\",\r\n        \"Insurance policy documents\",\r\n        \"Previous legal correspondence\",\r\n        \"Property deeds or title documents\"\r\n    ],\r\n    describe_third_document_or_information_you_need_from_your_client: [\r\n        \"Details of any previous legal proceedings\",\r\n        \"Contact details for relevant third parties\",\r\n        \"Company registration documents (if applicable)\",\r\n        \"Power of attorney (if acting for someone else)\",\r\n        \"Any other relevant documentation\"\r\n    ]\r\n};\r\n","import React from \"react\";\r\nimport { parseTemplate, Section, ParsedLine } from \"./utils/templateParser\";\r\n\r\n// invisible change: keep in editor history\r\n\r\nexport function renderSections(sections: Section[]) {\r\n    return (\r\n        <ol style={{ paddingLeft: \"1.2em\" }}>\r\n            {sections.map((sec) => (\r\n                <li key={sec.number} style={{ marginBottom: \"8px\" }}>\r\n                    <div style={{ fontWeight: \"bold\", marginBottom: \"4px\" }}>{sec.heading}</div>\r\n                    {sec.lines.map((line: ParsedLine, i: number) => {\r\n                        if (line.bullet) {\r\n                            return (\r\n                                <ul key={i} style={{ listStyleType: \"disc\", paddingLeft: \"1.2em\" }}>\r\n                                    <li>{line.bullet}</li>\r\n                                </ul>\r\n                            );\r\n                        }\r\n                        return line.text ? <p key={i}>{line.text}</p> : null;\r\n                    })}\r\n                </li>\r\n            ))}\r\n        </ol>\r\n    );\r\n}\r\n\r\nexport const DocumentRenderer = ({ template }: { template: string }) => {\r\n    const sections = parseTemplate(template);\r\n    return <div>{renderSections(sections)}</div>;\r\n};\r\n","export interface ParsedLine {\r\n    bullet?: string;\r\n    text?: string;\r\n}\r\n\r\nexport interface Section {\r\n    number: string;\r\n    heading: string;\r\n    lines: ParsedLine[];\r\n}\r\n\r\nexport function parseTemplate(template: string): Section[] {\r\n    const lines = template.split(/\\r?\\n/);\r\n    const sections: Section[] = [];\r\n    let current: Section | null = null;\r\n\r\n    lines.forEach(line => {\r\n        const match = line.match(/^(\\d+)\\s+(.*)/);\r\n        if (match) {\r\n            if (current) sections.push(current);\r\n            current = { number: match[1], heading: match[2], lines: [] };\r\n        } else if (current) {\r\n            if (line.trim().startsWith('—')) {\r\n                current.lines.push({ bullet: line.replace(/^—\\s*/, '') });\r\n            } else if (line.trim()) {\r\n                current.lines.push({ text: line });\r\n            }\r\n        }\r\n    });\r\n    if (current) sections.push(current);\r\n    return sections;\r\n}","export type CostsChoice = 'no_costs' | 'risk_costs' | null;\r\nexport type ChargesChoice = 'hourly_rate' | 'no_estimate' | null;\r\nexport type DisbursementsChoice = 'table' | 'estimate' | null;\r\n\r\nexport interface GenerationOptions {\r\n    costsChoice: CostsChoice;\r\n    chargesChoice: ChargesChoice;\r\n    disbursementsChoice: DisbursementsChoice;\r\n    showEstimateExamples: boolean;\r\n}\r\n\r\nexport function generateTemplateContent(\r\n    documentContent: string,\r\n    templateFields: Record<string, string>,\r\n    options: GenerationOptions\r\n): string {\r\n    if (!documentContent) return documentContent;\r\n    let content = documentContent;\r\n\r\n    const { costsChoice, chargesChoice, disbursementsChoice, showEstimateExamples } = options;\r\n\r\n    const costsText = costsChoice === 'no_costs'\r\n        ? \"We do not expect that you will have to pay another party's costs. This only tends to arise in litigation and is therefore not relevant to your matter.\"\r\n        : `There is a risk that you may have to pay ${templateFields.identify_the_other_party_eg_your_opponents || '{{identify_the_other_party_eg_your_opponents}}'} costs in this matter. This is explained in section 5, Funding and billing below.`;\r\n    content = content.replace(/\\{\\{costs_section_choice\\}\\}/g, costsText);\r\n\r\n    const chargesText = chargesChoice === 'hourly_rate'\r\n        ? `Our fees are calculated on the basis of an hourly rate. My rate is £395 per hour. Other Partners/senior solicitors are charged at £395, Associate solicitors at £325, Solicitors at £285 and trainees and paralegals are charged at £195. All hourly rates will be subject to the addition of VAT.\r\n\r\nShort incoming and outgoing letters, messages, emails and routine phone calls are charged at 1/10 of an hour. All other work is timed in six minute units and charged at the relevant hourly rate. Please note that lots of small emails or telephone calls may unnecessarily increase the costs to you.\r\n\r\nI estimate the cost of the Initial Scope with be £${templateFields.figure || '{{figure}}'} plus VAT.`\r\n        : `We cannot give an estimate of our overall charges in this matter because ${templateFields.we_cannot_give_an_estimate_of_our_overall_charges_in_this_matter_because_reason_why_estimate_is_not_possible || '{{we_cannot_give_an_estimate_of_our_overall_charges_in_this_matter_because_reason_why_estimate_is_not_possible}}'}. The next stage in your matter is ${templateFields.next_stage || '{{next_stage}}'} and we estimate that our charges up to the completion of that stage will be in the region of £${templateFields.figure_or_range || '{{figure_or_range}}'}.\r\n\r\nWe reserve the right to increase the hourly rates if the work done is particularly complex or urgent, or the nature of your instructions require us to work outside normal office hours. If this happens, we will notify you in advance and agree an appropriate rate.\r\n\r\nWe will review our hourly rates on a periodic basis. This is usually done annually each January. We will give you advance notice of any change to our hourly rates.`;\r\n    content = content.replace(/\\{\\{charges_section_choice\\}\\}/g, chargesText);\r\n\r\n    const disbursementsText = disbursementsChoice === 'table'\r\n        ? `Based on the information you have provided, we expect to incur the following disbursements:\r\n\r\nDisbursement | Amount | VAT chargeable\r\n[Describe disbursement] | £[Insert estimated amount] | [Yes OR No]\r\n[Describe disbursement] | £[Insert estimated amount] | [Yes OR No]`\r\n        : !showEstimateExamples\r\n            ? `We cannot give an exact figure for your disbursements, but this is likely to be in the region of £${templateFields.simple_disbursements_estimate || '{{estimate}}'} in total including VAT.`\r\n            : (() => {\r\n                const rawExamples = templateFields.give_examples_of_what_your_estimate_includes_eg_accountants_report_and_court_fees || '{{give_examples_of_what_your_estimate_includes_eg_accountants_report_and_court_fees}}';\r\n                let formattedExamples = rawExamples;\r\n                if (rawExamples && !rawExamples.startsWith('{{')) {\r\n                    const selected: string[] = [];\r\n                    if (rawExamples.includes('court fees')) selected.push('court fees');\r\n                    if (rawExamples.includes('accountants report')) selected.push('accountants report');\r\n                    if (selected.length === 0) {\r\n                        formattedExamples = rawExamples;\r\n                    } else if (selected.length === 1) {\r\n                        formattedExamples = selected[0];\r\n                    } else {\r\n                        formattedExamples = selected.slice(0, -1).join(', ') + ' and ' + selected[selected.length - 1];\r\n                    }\r\n                }\r\n                return `We cannot give an exact figure for your disbursements, but this is likely to be in the region of £${templateFields.simple_disbursements_estimate || '{{estimate}}'} for the next steps in your matter including ${formattedExamples}.`;\r\n            })();\r\n    content = content.replace(/\\{\\{disbursements_section_choice\\}\\}/g, disbursementsText);\r\n\r\n    Object.keys(templateFields).forEach(key => {\r\n        const value = templateFields[key];\r\n        if (value && value.trim()) {\r\n            const placeholder = `{{${key}}}`;\r\n            content = content.replace(new RegExp(placeholder, 'g'), value);\r\n        }\r\n    });\r\n\r\n    return content;\r\n}","import React from 'react';\r\nimport { DocumentRenderer } from './DocumentRenderer';\r\nimport { generateTemplateContent, GenerationOptions } from './utils/templateUtils';\r\n\r\ninterface Props extends GenerationOptions {\r\n    documentContent: string;\r\n    templateFields: Record<string, string>;\r\n}\r\n\r\nconst CCLPreview: React.FC<Props> = ({ documentContent, templateFields, ...options }) => {\r\n    const generated = generateTemplateContent(documentContent, templateFields, options);\r\n    return <DocumentRenderer template={generated} />;\r\n};\r\n\r\nexport default CCLPreview;","import React, { useState, useEffect } from 'react';\r\nimport { Stack, TextField, Toggle, Dropdown, MessageBar, MessageBarType } from '@fluentui/react';\r\nimport { Panel } from '@fluentui/react/lib/Panel';\r\nimport { InstructionData } from '../../app/functionality/types';\r\nimport { useTheme } from '../../app/functionality/ThemeContext';\r\nimport QuickActionsCard from '../home/QuickActionsCard';\r\nimport { colours } from '../../app/styles/colours';\r\nimport { Icon } from '@fluentui/react/lib/Icon';\r\nimport { useTemplateFields } from './hooks/useTemplateFields';\r\nimport TemplateSelectionStep from './ccl/TemplateSelectionStep';\r\nimport TemplateEditorStep from './ccl/TemplateEditorStep';\r\nimport PreviewActionsStep from './ccl/PreviewActionsStep';\r\nimport PresetPanel from './ccl/PresetPanel';\r\nimport HoverTooltip from './ccl/HoverTooltip';\r\nimport { injectPlaceholderStyles } from './ccl/placeholderStyles';\r\nimport { DEFAULT_CCL_TEMPLATE } from './templates/cclTemplate';\r\nimport { FIELD_DISPLAY_NAMES, FIELD_PRESETS } from './constants/fieldMetadata';\r\nimport CCLPreview from './ccl/CCLPreview';\r\nimport { generateTemplateContent } from './ccl/utils/templateUtils';\r\n\r\n// Inject styles into document head\r\ninjectPlaceholderStyles();\r\n\r\n// invisible change: keep in editor history\r\n\r\nconst INDENT_STYLE: React.CSSProperties = {\r\n    display: 'block',\r\n    marginLeft: '16px',\r\n    textIndent: '-16px',\r\n    lineHeight: '1.5'\r\n};\r\n\r\nconst HEADING_STYLE: React.CSSProperties = {\r\n    ...INDENT_STYLE,\r\n    fontWeight: 'bold'\r\n};\r\n\r\nconst MESSAGE_TEMPLATES = {\r\n    ccl: DEFAULT_CCL_TEMPLATE,\r\n    custom: ''\r\n};\r\n\r\ninterface DocumentsV3Props {\r\n    isInstructionBasedMode?: boolean;\r\n    selectedInstructionProp?: InstructionData;\r\n    initialTemplate?: 'ccl' | 'custom';\r\n    matterData?: any;\r\n    instructions?: InstructionData[];\r\n}\r\n\r\nconst DocumentsV3: React.FC<DocumentsV3Props> = ({ \r\n    isInstructionBasedMode = false, \r\n    selectedInstructionProp, \r\n    initialTemplate,\r\n    matterData, \r\n    instructions = [] \r\n}) => {\r\n    const { isDarkMode } = useTheme();\r\n    \r\n    // Step management - 3 distinct pages\r\n    // If both instruction and template are provided, skip to editor\r\n    const skipSelection = !!selectedInstructionProp && !!initialTemplate;\r\n    const [currentStep, setCurrentStep] = useState(skipSelection ? 2 : 1);\r\n\r\n    // Step 1: Instruction & Template Selection\r\n    const [selectedInstruction, setSelectedInstruction] = useState<InstructionData | null>(selectedInstructionProp || null);\r\n    const [hasSelectedInstruction, setHasSelectedInstruction] = useState<boolean>(!!selectedInstructionProp);\r\n    const [userHasInteracted, setUserHasInteracted] = useState<boolean>(!!selectedInstructionProp);\r\n    const [selectedTemplate, setSelectedTemplate] = useState<'ccl' | 'custom' | null>(initialTemplate ?? null);\r\n    const [instructionSearchTerm, setInstructionSearchTerm] = useState<string>('');\r\n\r\n    // Step 2: Editor & Template Fields\r\n    const [documentContent, setDocumentContent] = useState('');\r\n\r\n    // Apply initial template on mount\r\n    useEffect(() => {\r\n        if (initialTemplate) {\r\n            setSelectedTemplate(initialTemplate);\r\n            setDocumentContent(MESSAGE_TEMPLATES[initialTemplate]);\r\n        }\r\n    }, [initialTemplate]);\r\n\r\n    // Update document when template definition changes during dev hot reload\r\n    useEffect(() => {\r\n        if (selectedTemplate === 'ccl') {\r\n            setDocumentContent(DEFAULT_CCL_TEMPLATE);\r\n        }\r\n    }, [DEFAULT_CCL_TEMPLATE]);\r\n    const { templateFields, setTemplateFields, activeField, setActiveField, touchedFields, setTouchedFields } = useTemplateFields(selectedInstructionProp || null);\r\n    \r\n    // Choice for costs section (4.3)\r\n    const [costsChoice, setCostsChoice] = useState<'no_costs' | 'risk_costs' | null>(null);\r\n    \r\n    // Choice for disbursements section (4.2)\r\n    const [disbursementsChoice, setDisbursementsChoice] = useState<'table' | 'estimate' | null>(null);\r\n    // Show/hide estimate examples input (for estimate format)\r\n    const [showEstimateExamples, setShowEstimateExamples] = useState(false);\r\n    // Number of disbursement rows to display\r\n    const [disbursementRowCount, setDisbursementRowCount] = useState(1);\r\n    \r\n    // Choice for charges section (4.1)\r\n    const [chargesChoice, setChargesChoice] = useState<'hourly_rate' | 'no_estimate' | null>(null);\r\n    const [showChargesChoice, setShowChargesChoice] = useState(true);\r\n    const [showCostsChoice, setShowCostsChoice] = useState(true);\r\n    const [showDisbursementsChoice, setShowDisbursementsChoice] = useState(true);\r\n    \r\n    // Responsive design state\r\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n    \r\n    // Step 3: Preview & Actions\r\n    const [message, setMessage] = useState<{ type: MessageBarType; text: string } | null>(null);\r\n    const [tokensOpen, setTokensOpen] = useState(false);\r\n    const [showPresets, setShowPresets] = useState(false);\r\n    const [presetField, setPresetField] = useState<string | null>(null);\r\n    const [presetPosition, setPresetPosition] = useState({ x: 0, y: 0 });\r\n    \r\n    // Hover tooltip state\r\n    const [hoveredField, setHoveredField] = useState<string | null>(null);\r\n    const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 });\r\n    const [isFieldsOnlyView, setIsFieldsOnlyView] = useState(false);\r\n\r\n    // Handle click outside to close dropdowns\r\n    useEffect(() => {\r\n        const handleClickOutside = (event: MouseEvent) => {\r\n            const target = event.target as Element;\r\n            if (!target.closest('.examples-dropdown')) {\r\n                // Just close the dropdown without affecting React state\r\n                const dropdown = document.getElementById('examples-dropdown');\r\n                if (dropdown) {\r\n                    dropdown.style.display = 'none';\r\n                }\r\n            }\r\n        };\r\n\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, []); // Empty dependency array - this effect runs once and stays active\r\n\r\n    \r\n    // Responsive design effect\r\n    useEffect(() => {\r\n        let timeoutId: NodeJS.Timeout;\r\n        \r\n        const handleResize = () => {\r\n            clearTimeout(timeoutId);\r\n            timeoutId = setTimeout(() => {\r\n                setWindowWidth(window.innerWidth);\r\n            }, 100); // Debounce resize events\r\n        };\r\n        \r\n        window.addEventListener('resize', handleResize);\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n            clearTimeout(timeoutId);\r\n        };\r\n    }, []);\r\n    \r\n    // Auto-scroll to active field in side panel\r\n    useEffect(() => {\r\n        if (activeField) {\r\n            const fieldElement = document.querySelector(`[data-field=\"${activeField}\"]`);\r\n            if (fieldElement) {\r\n                fieldElement.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n            }\r\n        }\r\n    }, [activeField]);\r\n\r\n    // Filter instructions based on search term and validity\r\n    const filteredInstructions = instructions.filter(inst => {\r\n        // First filter out invalid instructions (those without proper titles or IDs)\r\n        if (!inst.title && !inst.prospectId) return false;\r\n        \r\n        if (!instructionSearchTerm.trim()) return true;\r\n        \r\n        const searchLower = instructionSearchTerm.toLowerCase();\r\n        const title = (inst.title || '').toLowerCase();\r\n        const description = (inst.description || '').toLowerCase();\r\n        const serviceDescription = (inst.deals?.[0]?.ServiceDescription || '').toLowerCase();\r\n        \r\n        return title.includes(searchLower) || \r\n               description.includes(searchLower) || \r\n               serviceDescription.includes(searchLower);\r\n    });\r\n    \r\n    // Navigation helpers - require explicit instruction selection\r\n    const canProceedToStep2 = selectedTemplate !== null && \r\n                              (isInstructionBasedMode || \r\n                               (selectedInstruction !== null));\r\n    const canProceedToStep3 = documentContent.trim() !== '' || Object.values(templateFields).some(val => val.trim() !== '');\r\n    \r\n    // Helper functions for step completion tracking\r\n    const getDocumentStepCompletion = (step: number): number => {\r\n        switch (step) {\r\n            case 1:\r\n                return selectedTemplate ? 100 : 0;\r\n            case 2:\r\n                return Object.values(templateFields).some(val => val.trim() !== '') ? 100 : 0;\r\n            case 3:\r\n                return documentContent.trim() !== '' ? 100 : 0;\r\n            default:\r\n                return 0;\r\n        }\r\n    };\r\n    \r\n    const getEditorStepCompletion = (step: number): number => {\r\n        switch (step) {\r\n            case 1:\r\n                return documentContent.trim() !== '' ? 100 : 0;\r\n            case 2:\r\n                return Object.values(templateFields).filter(val => val.trim() !== '').length >= 3 ? 100 : 0;\r\n            case 3:\r\n                return Object.values(templateFields).every(val => val.trim() !== '') ? 100 : 0;\r\n            default:\r\n                return 0;\r\n        }\r\n    };\r\n    \r\n    \r\n    // Handle template selection\r\n    const handleTemplateSelect = (template: 'ccl' | 'custom') => {\r\n        if (selectedTemplate === template) {\r\n            // Unselect if already selected\r\n            setSelectedTemplate(null);\r\n            setDocumentContent('');\r\n        } else {\r\n            // Select template\r\n            setSelectedTemplate(template);\r\n            setDocumentContent(MESSAGE_TEMPLATES[template]);\r\n        }\r\n    };\r\n\r\n    // Preset system functions\r\n    const handleFieldClick = (fieldName: string, event: React.MouseEvent) => {\r\n        if (!FIELD_PRESETS[fieldName] || FIELD_PRESETS[fieldName].length === 0) {\r\n            return;\r\n        }\r\n        const rect = (event.target as HTMLElement).getBoundingClientRect();\r\n        setPresetField(fieldName);\r\n        setPresetPosition({\r\n            x: rect.left + rect.width / 2,\r\n            y: rect.bottom + 8\r\n        });\r\n        setShowPresets(true);\r\n    };\r\n    \r\n    const handlePresetSelect = (preset: string) => {\r\n        if (presetField) {\r\n            const updatedFields = { ...templateFields, [presetField]: preset };\r\n            setTemplateFields(updatedFields);\r\n            setTouchedFields(prev => ({ ...prev, [presetField]: true }));\r\n        }\r\n        setShowPresets(false);\r\n        setPresetField(null);\r\n    };\r\n    \r\n    const closePresets = () => {\r\n        setShowPresets(false);\r\n        setPresetField(null);\r\n    };\r\n    \r\n    // Handle field hover for tooltips\r\n    const handleFieldHover = (fieldKey: string, event: React.MouseEvent) => {\r\n        const rect = event.currentTarget.getBoundingClientRect();\r\n        setTooltipPosition({\r\n            x: rect.left + rect.width / 2,\r\n            y: rect.top - 10\r\n        });\r\n        setHoveredField(fieldKey);\r\n    };\r\n    \r\n    // Handle field hover leave\r\n    const handleFieldHoverLeave = () => {\r\n        setHoveredField(null);\r\n    };\r\n    \r\n    // Generate template content with field substitutions\r\n    const generateContent = () =>\r\n        generateTemplateContent(documentContent, templateFields, {\r\n            costsChoice,\r\n            chargesChoice,\r\n            disbursementsChoice,\r\n            showEstimateExamples,\r\n        });\r\n    \r\n    // Function to render content with highlighted template variables\r\n    // Helper function to measure text width\r\n    const measureTextWidth = (text: string, fontSize: number = 14, fontFamily: string = 'Raleway, sans-serif'): number => {\r\n        const canvas = document.createElement('canvas');\r\n        const context = canvas.getContext('2d');\r\n        if (context) {\r\n            context.font = `${fontSize}px ${fontFamily}`;\r\n            return context.measureText(text).width;\r\n        }\r\n        return text.length * 8; // Fallback\r\n    };\r\n\r\n    const renderTemplateContentWithHighlights = (content: string) => {\r\n        if (!content) return 'No content to preview...';\r\n        \r\n        // Special handling for Action Points table\r\n        const actionMatch = content.match(/\\d+\\s+Action points/);\r\n        const startIndex = actionMatch ? actionMatch.index! : -1;\r\n        if (startIndex !== -1) {\r\n            const beforeActionPoints = content.substring(0, startIndex);\r\n            const rest = content.substring(startIndex);\r\n            const closingIndex = rest.indexOf('Please contact me');\r\n            const actionPointsSection = closingIndex !== -1 ? rest.substring(0, closingIndex) : rest;\r\n            const afterActionPoints = closingIndex !== -1 ? rest.substring(closingIndex) : '';\r\n            \r\n            // Process the action points section specially\r\n            const processedActionPoints = renderActionPointsTable(actionPointsSection);\r\n            \r\n            // Process the before and after sections normally\r\n            const beforeProcessed = renderRegularContent(beforeActionPoints);\r\n            const afterProcessed = renderRegularContent(afterActionPoints);\r\n            \r\n            return (\r\n                <>\r\n                    {beforeProcessed}\r\n                    {processedActionPoints}\r\n                    {afterProcessed}\r\n                </>\r\n            );\r\n        }\r\n        \r\n        // If no action points section found, process normally\r\n        return renderRegularContent(content);\r\n    };\r\n\r\n    const renderActionPointsTable = (actionPointsContent: string) => {\r\n        const lines = actionPointsContent.split('\\n');\r\n        const tableRows: JSX.Element[] = [];\r\n        let headerProcessed = false;\r\n        \r\n        // Find section header\r\n        const sectionHeaderIndex = lines.findIndex(line => /\\d+\\s+Action points/.test(line));\r\n        const tableHeaderIndex = lines.findIndex(line => line.includes('Action required by you | Additional information'));\r\n        \r\n        // Render section header\r\n        const headerElements = [];\r\n        for (let i = sectionHeaderIndex; i < tableHeaderIndex; i++) {\r\n            const line = lines[i];\r\n            if (line.trim() === '') {\r\n                headerElements.push(<br key={`header-br-${i}`} />);\r\n            } else if (/\\d+\\s+Action points/.test(line)) {\r\n                const match = line.match(/^(\\d+)\\s+(.+)$/);\r\n                if (match) {\r\n                    headerElements.push(\r\n                        <div key={`header-${i}`} style={HEADING_STYLE}>\r\n                            <span style={{ color: '#d65541', marginRight: '8px', fontWeight: 'bold' }}>{match[1]}</span>\r\n                            <span>{match[2]}</span>\r\n                        </div>\r\n                    );\r\n                }\r\n            } else {\r\n                headerElements.push(\r\n                    <div key={`header-${i}`} style={INDENT_STYLE}>\r\n                        {line}\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n        \r\n        // Process table rows\r\n        for (let i = tableHeaderIndex + 1; i < lines.length; i++) {\r\n            const line = lines[i];\r\n            \r\n            if (line.trim().startsWith('☐') && line.includes('|')) {\r\n                const [actionPart, infoPart] = line.split('|').map(part => part.trim());\r\n                \r\n                // Check if this is the documents row\r\n                const isDocumentsRow = actionPart.includes('Provide the following documents');\r\n                \r\n                if (isDocumentsRow) {\r\n                    // Collect document template variables from following lines\r\n                    const documentLines = [];\r\n                    let nextIndex = i + 1;\r\n                    while (nextIndex < lines.length && \r\n                           (lines[nextIndex].includes('{{describe_') || lines[nextIndex].trim() === '')) {\r\n                        if (lines[nextIndex].includes('{{describe_')) {\r\n                            documentLines.push(lines[nextIndex]);\r\n                        }\r\n                        nextIndex++;\r\n                    }\r\n                    \r\n                    tableRows.push(\r\n                        <tr key={`table-row-${i}`}>\r\n                            <td style={{ \r\n                                border: '1px solid #ccc',\r\n                                padding: '12px',\r\n                                verticalAlign: 'top',\r\n                                lineHeight: '1.4',\r\n                                wordWrap: 'break-word',\r\n                                overflow: 'hidden'\r\n                            }}>\r\n                                <div style={{ display: 'inline', wordWrap: 'break-word' }}>\r\n                                    {renderTemplateVariables(actionPart)}\r\n                                </div>\r\n                                {documentLines.length > 0 && (\r\n                                    <div style={{ marginTop: '8px', fontSize: '13px', color: '#666' }}>\r\n                                        {documentLines.map((docLine, idx) => (\r\n                                            <div key={idx} style={{ marginBottom: '4px', display: 'inline', wordWrap: 'break-word' }}>\r\n                                                • {renderTemplateVariables(docLine.trim())}\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                )}\r\n                            </td>\r\n                            <td style={{ \r\n                                border: '1px solid #ccc',\r\n                                padding: '12px',\r\n                                verticalAlign: 'top',\r\n                                lineHeight: '1.4',\r\n                                wordWrap: 'break-word',\r\n                                overflow: 'hidden'\r\n                            }}>\r\n                                <div style={{ display: 'inline', wordWrap: 'break-word' }}>\r\n                                    {renderTemplateVariables(infoPart)}\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    );\r\n                    \r\n                    // Skip the processed document lines\r\n                    i = nextIndex - 1;\r\n                } else {\r\n                    tableRows.push(\r\n                        <tr key={`table-row-${i}`}>\r\n                            <td style={{ \r\n                                border: '1px solid #ccc',\r\n                                padding: '12px',\r\n                                verticalAlign: 'top',\r\n                                lineHeight: '1.4',\r\n                                wordWrap: 'break-word',\r\n                                overflow: 'hidden'\r\n                            }}>\r\n                                <div style={{ display: 'inline', wordWrap: 'break-word' }}>\r\n                                    {renderTemplateVariables(actionPart)}\r\n                                </div>\r\n                            </td>\r\n                            <td style={{ \r\n                                border: '1px solid #ccc',\r\n                                padding: '12px',\r\n                                verticalAlign: 'top',\r\n                                lineHeight: '1.4',\r\n                                wordWrap: 'break-word',\r\n                                overflow: 'hidden'\r\n                            }}>\r\n                                <div style={{ display: 'inline', wordWrap: 'break-word' }}>\r\n                                    {renderTemplateVariables(infoPart)}\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    );\r\n                }\r\n            } else if (line.includes('Please contact me')) {\r\n                // End of action points section\r\n                break;\r\n            }\r\n        }\r\n        \r\n        return (\r\n            <div key=\"action-points\">\r\n                {headerElements}\r\n                \r\n                {tableRows.length > 0 && (\r\n                    <div style={{ \r\n                        display: 'block',\r\n                        marginTop: '16px',\r\n                        marginBottom: '16px',\r\n                        width: '100%'\r\n                    }}>\r\n                        <table style={{ \r\n                            width: '100%', \r\n                            borderCollapse: 'collapse',\r\n                            border: '1px solid #ccc',\r\n                            fontSize: '14px'\r\n                        }}>\r\n                            <thead>\r\n                                <tr style={{ backgroundColor: '#f8f9fa' }}>\r\n                                    <th style={{ \r\n                                        border: '1px solid #ccc',\r\n                                        padding: '12px',\r\n                                        textAlign: 'left',\r\n                                        fontWeight: 'bold',\r\n                                        width: '50%'\r\n                                    }}>\r\n                                        Action required by you\r\n                                    </th>\r\n                                    <th style={{ \r\n                                        border: '1px solid #ccc',\r\n                                        padding: '12px',\r\n                                        textAlign: 'left',\r\n                                        fontWeight: 'bold',\r\n                                        width: '50%'\r\n                                    }}>\r\n                                        Additional information\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {tableRows}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    // Function to render template variables within text\r\n    const renderTemplateVariables = (text: string): React.ReactNode[] => {\r\n        const regex = /\\{\\{([^}]+)\\}\\}/g;\r\n        const parts: React.ReactNode[] = [];\r\n        let lastIndex = 0;\r\n        let match: RegExpExecArray | null;\r\n\r\n        while ((match = regex.exec(text)) !== null) {\r\n            // Add text before the template variable\r\n            if (match.index > lastIndex) {\r\n                const textBefore = text.substring(lastIndex, match.index);\r\n                // Replace checkbox symbols with proper bullets\r\n                const processedText = textBefore.replace(/☐/g, '☐').replace(/\\-/g, '•');\r\n                parts.push(processedText);\r\n            }\r\n\r\n            const rawName = match[1].trim();\r\n            const [labelPart, keyPart] = rawName.split('::');\r\n            const variableKey = keyPart ? keyPart.trim() : rawName;\r\n            const label = keyPart ? labelPart.trim() : null;\r\n            const fieldValue = templateFields[variableKey];\r\n            const placeholderText = variableKey.replace(/_/g, ' ');\r\n\r\n            if (variableKey.startsWith('#if ')) {\r\n                const condition = variableKey.substring(4);\r\n                parts.push(\r\n                    <span key={`if-${condition}-${match.index}`} className=\"conditional-token\">IF {condition}</span>\r\n                );\r\n            } else if (variableKey.startsWith('/if')) {\r\n                parts.push(\r\n                    <span key={`endif-${match.index}`} className=\"conditional-token\">END IF</span>\r\n                );\r\n            } else if (fieldValue && fieldValue.trim()) {\r\n                // Rendered field with value\r\n                parts.push(\r\n                    <span key={`${variableKey}-${match.index}`} style={{\r\n                        display: 'inline',\r\n                        position: 'relative'\r\n                    }}>\r\n                        {label && <span className=\"placeholder-label\">{label}:</span>}\r\n                        <span\r\n                            contentEditable\r\n                            suppressContentEditableWarning={true}\r\n                            onMouseEnter={(e) => handleFieldHover(variableKey, e)}\r\n                            onMouseLeave={handleFieldHoverLeave}\r\n                            style={{\r\n                                backgroundColor: '#e8f5e8',\r\n                                color: '#20b26c',\r\n                                padding: '2px 4px',\r\n                                fontWeight: 500,\r\n                                outline: 'none',\r\n                                fontFamily: 'Raleway, sans-serif',\r\n                                fontSize: '14px',\r\n                                display: 'inline',\r\n                                cursor: 'text',\r\n                                transition: 'all 0.2s ease',\r\n                                wordWrap: 'break-word',\r\n                                wordBreak: 'break-word',\r\n                                whiteSpace: 'normal',\r\n                                boxSizing: 'border-box',\r\n                                borderLeft: '1px solid #20b26c',\r\n                                borderRight: '1px solid #20b26c',\r\n                                lineHeight: 'inherit',\r\n                                verticalAlign: 'baseline'\r\n                            }}\r\n                            className=\"placeholder-segment\"\r\n                            onFocus={(e) => {\r\n                                e.target.style.backgroundColor = '#d4edda';\r\n                            }}\r\n                            onBlur={(e) => {\r\n                                const newValue = e.target.textContent || '';\r\n                                setTemplateFields(prev => ({\r\n                                    ...prev,\r\n                                    [variableKey]: newValue\r\n                                }));\r\n                                e.target.style.backgroundColor = '#e8f5e8';\r\n                            }}\r\n                        >\r\n                            {fieldValue}\r\n                        </span>\r\n                        {FIELD_PRESETS[variableKey]?.length > 0 && (\r\n                            <Icon\r\n                                iconName=\"Add\"\r\n                                onClick={(e) => handleFieldClick(variableKey, e)}\r\n                                styles={{\r\n                                    root: {\r\n                                        display: 'inline',\r\n                                        marginLeft: 4,\r\n                                        cursor: 'pointer',\r\n                                        fontSize: 12,\r\n                                        color: colours.blue,\r\n                                        verticalAlign: 'baseline'\r\n                                    }\r\n                                }}\r\n                            />\r\n                        )}\r\n                    </span>\r\n                );\r\n            } else {\r\n                // Empty field placeholder\r\n                parts.push(\r\n                    <span key={`${variableKey}-${match.index}`} style={{\r\n                        display: 'inline',\r\n                        position: 'relative'\r\n                    }}>\r\n                        {label && <span className=\"placeholder-label\">{label}:</span>}\r\n                        <span\r\n                            contentEditable\r\n                            suppressContentEditableWarning={true}\r\n                            data-placeholder={placeholderText}\r\n                            onMouseEnter={(e) => handleFieldHover(variableKey, e)}\r\n                            onMouseLeave={handleFieldHoverLeave}\r\n                            style={{\r\n                                backgroundColor: '#f0f8ff',\r\n                                color: '#0078d4',\r\n                                padding: '2px 4px',\r\n                                fontWeight: 500,\r\n                                outline: 'none',\r\n                                fontFamily: 'Raleway, sans-serif',\r\n                                fontSize: '14px',\r\n                                display: 'inline',\r\n                                minWidth: '20px',\r\n                                cursor: 'text',\r\n                                transition: 'all 0.2s ease',\r\n                                wordWrap: 'break-word',\r\n                                wordBreak: 'break-word',\r\n                                whiteSpace: 'normal',\r\n                                boxSizing: 'border-box',\r\n                                borderLeft: '1px dashed #0078d4',\r\n                                borderRight: '1px dashed #0078d4',\r\n                                lineHeight: 'inherit',\r\n                                verticalAlign: 'baseline'\r\n                            }}\r\n                            className=\"placeholder-segment-empty\"\r\n                            onFocus={(e) => {\r\n                                e.target.style.backgroundColor = '#e6f3ff';\r\n                                e.target.style.borderStyle = 'solid';\r\n                            }}\r\n                            onBlur={(e) => {\r\n                                const newValue = e.target.textContent || '';\r\n                                setTemplateFields(prev => ({\r\n                                    ...prev,\r\n                                    [variableKey]: newValue\r\n                                }));\r\n                                e.target.style.backgroundColor = '#f0f8ff';\r\n                                e.target.style.borderStyle = 'dashed';\r\n                            }}\r\n                        >\r\n                            {placeholderText}\r\n                        </span>\r\n                        {FIELD_PRESETS[variableKey]?.length > 0 && (\r\n                            <Icon\r\n                                iconName=\"Add\"\r\n                                onClick={(e) => handleFieldClick(variableKey, e)}\r\n                                styles={{\r\n                                    root: {\r\n                                        display: 'inline',\r\n                                        marginLeft: 4,\r\n                                        cursor: 'pointer',\r\n                                        fontSize: 12,\r\n                                        color: colours.blue,\r\n                                        verticalAlign: 'baseline'\r\n                                    }\r\n                                }}\r\n                            />\r\n                        )}\r\n                    </span>\r\n                );\r\n            }\r\n\r\n            lastIndex = match.index + match[0].length;\r\n        }\r\n\r\n        // Add remaining text\r\n        if (lastIndex < text.length) {\r\n            const remainingText = text.substring(lastIndex);\r\n            // Replace checkbox symbols with proper bullets\r\n            const processedText = remainingText.replace(/☐/g, '☐').replace(/\\-/g, '•');\r\n            parts.push(processedText);\r\n        }\r\n\r\n        return parts;\r\n    };\r\n\r\n    const renderRegularContent = (content: string) => {\r\n        // Find all template variables in the content\r\n        const templateVariableRegex = /\\{\\{([^}]+)\\}\\}/g;\r\n        const parts = [];\r\n        let lastIndex = 0;\r\n        let match: RegExpExecArray | null;\r\n        let globalTableState = false; // Track table state across segments\r\n        let globalTableRows: JSX.Element[] = []; // Share table rows across segments\r\n        // Indentation was previously persisted across segments to align\r\n        // placeholders after numbered headings. This resulted in paragraphs\r\n        // remaining indented even when they should start flush with the left\r\n        // margin. The editor now behaves more like a Word document so\r\n        // indentation is handled on a per-line basis.\r\n        \r\n        const consumedPlaceholders = new Set<string>();\r\n        while ((match = templateVariableRegex.exec(content)) !== null) {\r\n            // Add editable text before the variable\r\n            if (match.index > lastIndex) {\r\n                const segmentStart = lastIndex;\r\n                const segmentEnd = match.index;\r\n                const textSegment = content.substring(segmentStart, segmentEnd);\r\n                \r\n                const formatTextSegment = (text: string, segmentIndex: number, isTableContext: boolean = false): { nodes: React.ReactNode[]; isTable: boolean; tableRows?: JSX.Element[] } => {\r\n                    const lines = text.split('\\n');\r\n\r\n                    // Check if this text contains table-like content (Action points section)\r\n                    const hasTableContent = lines.some(line =>\r\n                        line.includes('Action required by you | Additional information') ||\r\n                        (line.includes('☐') && line.includes('|'))\r\n                    );\r\n\r\n                    // Continue table mode from previous segments or start new table\r\n                    const shouldProcessAsTable = hasTableContent || isTableContext;\r\n\r\n                    if (shouldProcessAsTable) {\r\n                        // Handle table formatting for Action points section\r\n                        const tableElements: JSX.Element[] = [];\r\n                        let tableRows: JSX.Element[] = [];\r\n                        let isInTable = isTableContext;\r\n                        let tableStarted = false;\r\n                        \r\n                        lines.forEach((line, index) => {\r\n                            const lineKey = `${segmentStart}-line-${index}`;\r\n                            \r\n                            if (line.includes('Action required by you | Additional information')) {\r\n                                // Table header - start collecting rows\r\n                                isInTable = true;\r\n                                tableStarted = true;\r\n                                tableRows = [];\r\n                            } else if ((isInTable || isTableContext) && (line.includes('☐') || line.trim().startsWith('☐'))) {\r\n                                // Table row - any line with ☐ when we're in table mode or continuing from previous segment\r\n                                let actionPart = '';\r\n                                let infoPart = '';\r\n                                \r\n                                if (line.includes('|')) {\r\n                                    // Line has pipe separator\r\n                                    [actionPart, infoPart] = line.split('|').map(part => part.trim());\r\n                                } else {\r\n                                    // Line has no pipe separator, treat entire line as action part\r\n                                    actionPart = line.trim();\r\n                                    infoPart = '';\r\n                                }\r\n                                \r\n                                // Skip if this is just a checkbox with no meaningful content\r\n                                // This happens when template variables split the line and we get just \"☐ \"\r\n                                if (actionPart.trim() === '☐' || actionPart.trim().length <= 2) {\r\n                                    // Don't create a table row for empty checkbox segments\r\n                                    isInTable = true; // Keep table mode active\r\n                                    return;\r\n                                }\r\n                                \r\n                                // Make sure we're in table mode\r\n                                if (!isInTable) {\r\n                                    isInTable = true;\r\n                                    tableStarted = true;\r\n                                }\r\n                                \r\n                                // Check if this is the documents row that needs additional content\r\n                                const isDocumentsRow = actionPart.includes('Provide the following documents');\r\n                                \r\n                                if (isDocumentsRow) {\r\n                                    // Look ahead for template fields that should be part of this row\r\n                                    let additionalContent = '';\r\n                                    let nextIndex = index + 1;\r\n                                    \r\n                                    // Skip empty lines and collect template variables for document descriptions\r\n                                    while (nextIndex < lines.length) {\r\n                                        const nextLine = lines[nextIndex];\r\n                                        if (nextLine.trim() === '') {\r\n                                            nextIndex++;\r\n                                            continue;\r\n                                        }\r\n\r\n                                        if (nextLine.includes('{{describe_') && nextLine.includes('document')) {\r\n                                            if (additionalContent) additionalContent += '\\n\\n';\r\n                                            additionalContent += nextLine;\r\n\r\n                                            const placeholderMatch = nextLine.match(/\\{\\{([^}]+)\\}\\}/);\r\n                                            if (placeholderMatch) {\r\n                                                consumedPlaceholders.add(placeholderMatch[1]);\r\n                                            }\r\n\r\n                                            lines[nextIndex] = '';\r\n                                            nextIndex++;\r\n                                        } else {\r\n                                            break;\r\n                                        }\r\n                                    }\r\n                                    \r\n                                    tableRows.push(\r\n                                        <tr key={lineKey}>\r\n                                            <td style={{ \r\n                                                border: '1px solid #ccc',\r\n                                                padding: '12px',\r\n                                                verticalAlign: 'top',\r\n                                                lineHeight: '1.4'\r\n                                            }}>\r\n                                                <div>{actionPart}</div>\r\n                                                {additionalContent && (\r\n                                                    <div style={{ marginTop: '8px', fontSize: '13px', color: '#666' }}>\r\n                                                        {additionalContent.split('\\n\\n').map((item, idx) => (\r\n                                                            <div key={idx} style={{ marginBottom: '4px' }}>\r\n                                                                {item.trim()}\r\n                                                            </div>\r\n                                                        ))}\r\n                                                    </div>\r\n                                                )}\r\n                                            </td>\r\n                                            <td style={{ \r\n                                                border: '1px solid #ccc',\r\n                                                padding: '12px',\r\n                                                verticalAlign: 'top',\r\n                                                lineHeight: '1.4'\r\n                                            }}>\r\n                                                {infoPart}\r\n                                            </td>\r\n                                        </tr>\r\n                                    );\r\n                                } else {\r\n                                    tableRows.push(\r\n                                        <tr key={lineKey}>\r\n                                            <td style={{ \r\n                                                border: '1px solid #ccc',\r\n                                                padding: '12px',\r\n                                                verticalAlign: 'top',\r\n                                                lineHeight: '1.4'\r\n                                            }}>\r\n                                                {actionPart}\r\n                                            </td>\r\n                                            <td style={{ \r\n                                                border: '1px solid #ccc',\r\n                                                padding: '12px',\r\n                                                verticalAlign: 'top',\r\n                                                lineHeight: '1.4'\r\n                                            }}>\r\n                                                {infoPart}\r\n                                            </td>\r\n                                        </tr>\r\n                                    );\r\n                                }\r\n                            } else {\r\n                                // Check if this line indicates the end of the table\r\n                                // End table only when we hit a clear end marker\r\n                                const shouldEndTable = line.trim() !== '' && \r\n                                                     !line.includes('{{describe_') &&\r\n                                                     !line.includes('Action required by you') &&\r\n                                                     line.trim() !== 'Additional information' &&\r\n                                                     (line.includes('Please contact me') || \r\n                                                      line.includes('Yours sincerely') ||\r\n                                                      line.match(/^\\d+(?:\\.\\d+)*\\s+/)); // Numbered sections\r\n                                \r\n                                // End of table or regular line\r\n                                if (isInTable && shouldEndTable && tableRows.length > 0) {\r\n                                    // Add the completed table\r\n                                    tableElements.push(\r\n                                        <div key={`table-${index}`} style={{ \r\n                                            display: 'block',\r\n                                            marginTop: '16px',\r\n                                            marginBottom: '16px',\r\n                                            width: '100%'\r\n                                        }}>\r\n                                            <table style={{ \r\n                                                width: '100%', \r\n                                                borderCollapse: 'collapse',\r\n                                                border: '1px solid #ccc',\r\n                                                fontSize: '14px'\r\n                                            }}>\r\n                                                <thead>\r\n                                                    <tr style={{ backgroundColor: '#f8f9fa' }}>\r\n                                                        <th style={{ \r\n                                                            border: '1px solid #ccc',\r\n                                                            padding: '12px',\r\n                                                            textAlign: 'left',\r\n                                                            fontWeight: 'bold',\r\n                                                            width: '50%'\r\n                                                        }}>\r\n                                                            Action required by you\r\n                                                        </th>\r\n                                                        <th style={{ \r\n                                                            border: '1px solid #ccc',\r\n                                                            padding: '12px',\r\n                                                            textAlign: 'left',\r\n                                                            fontWeight: 'bold',\r\n                                                            width: '50%'\r\n                                                        }}>\r\n                                                            Additional information\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {tableRows}\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    );\r\n                                    isInTable = false;\r\n                                    tableRows = [];\r\n                                }\r\n                                \r\n                                // Skip lines that should not be processed as regular text when in table mode\r\n                                if (isInTable && (line.trim() === '' || \r\n                                                line.includes('{{describe_') ||\r\n                                                line.includes('Action required by you') ||\r\n                                                line.trim() === 'Additional information')) {\r\n                                    // Skip empty lines, template variables, and table headers that are part of table processing\r\n                                    return;\r\n                                }\r\n                                \r\n                                // Regular text formatting\r\n                                const numberedHeadingMatch = line.match(/^(\\d+(?:\\.\\d+)*)\\s+(.+)$/);\r\n                                const standaloneHeadingMatch = line.match(/^(Next steps|Electronic signatures|Yours sincerely)$/);\r\n                                const bulletPointMatch = line.match(/^—(.+)$/);\r\n\r\n                                if (numberedHeadingMatch) {\r\n                                    const number = numberedHeadingMatch[1];\r\n                                    const headingText = numberedHeadingMatch[2];\r\n                                    tableElements.push(\r\n                                        <span\r\n                                            key={lineKey}\r\n                                            style={HEADING_STYLE}\r\n                                        >\r\n                                            <span style={{ color: colours.cta, marginRight: '8px', fontWeight: 'bold' }}>{number}</span>\r\n                                            <span>{headingText}</span>\r\n                                            {index < lines.length - 1 ? '\\n' : ''}\r\n                                        </span>\r\n                                    );\r\n                                } else if (standaloneHeadingMatch) {\r\n                                    tableElements.push(\r\n                                        <span key={lineKey} style={HEADING_STYLE}>\r\n                                            {line}\r\n                                            {index < lines.length - 1 ? '\\n' : ''}\r\n                                        </span>\r\n                                    );\r\n                                } else if (bulletPointMatch) {\r\n                                    const bulletContent = bulletPointMatch[1];\r\n                                    const sectionRefMatch = bulletContent.match(/^(.+?)(\\(see section [^)]+\\))(.*)$/);\r\n\r\n                                    tableElements.push(\r\n                                        <span key={lineKey} style={INDENT_STYLE}>\r\n                                            <span style={{ color: '#dc3545', marginRight: '8px', fontWeight: 'bold' }}>•</span>\r\n                                            <span style={{ display: 'inline' }}>\r\n                                                {sectionRefMatch ? (\r\n                                                    <>\r\n                                                        <span>{sectionRefMatch[1]}</span>\r\n                                                        <span style={{ \r\n                                                            color: '#6c757d', \r\n                                                            fontSize: '13px', \r\n                                                            fontStyle: 'italic',\r\n                                                            opacity: 0.8 \r\n                                                        }}>\r\n                                                            {sectionRefMatch[2]}\r\n                                                        </span>\r\n                                                        <span>{sectionRefMatch[3]}</span>\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <span>{bulletContent}</span>\r\n                                                )}\r\n                                            </span>\r\n                                            {index < lines.length - 1 ? '\\n' : ''}\r\n                                        </span>\r\n                                    );\r\n                                } else if (line.trim() !== '') {\r\n                                    tableElements.push(\r\n                                        <span key={lineKey}>\r\n                                            {line}\r\n                                            {index < lines.length - 1 ? '\\n' : ''}\r\n                                        </span>\r\n                                    );\r\n                                } else {\r\n                                    tableElements.push(<br key={lineKey} />);\r\n                                }\r\n                            }\r\n                        });\r\n                        \r\n                        // Don't create table elements in individual segments\r\n                        // Just return the raw content and let the calling code handle table creation\r\n                        if (tableRows.length > 0) {\r\n                            // Return any text collected before the table header\r\n                            // alongside the gathered table rows\r\n                            return { nodes: tableElements, isTable: true, tableRows: tableRows };\r\n                        } else {\r\n                            return { nodes: tableElements, isTable: isInTable || tableStarted, tableRows: tableRows };\r\n                        }\r\n                    }\r\n\r\n                    // Regular text formatting (non-table content)\r\n                    let inSection = false;\r\n                    const formattedLines = lines.map((line, index) => {\r\n                        // Check if line starts with number followed by space and text (e.g., \"1 Contact details\")\r\n                        // OR if it's a standalone heading like \"Next steps\" or \"Electronic signatures\"\r\n                        const numberedHeadingMatch = line.match(/^(\\d+(?:\\.\\d+)*)\\s+(.+)$/);\r\n                        const standaloneHeadingMatch = line.match(/^(Next steps|Electronic signatures|Yours sincerely)$/);\r\n                        // Check if line starts with — (bullet point)\r\n                        const bulletPointMatch = line.match(/^—(.+)$/);\r\n                        const lineKey = `${segmentStart}-line-${index}`;\r\n                        \r\n                        if (numberedHeadingMatch) {\r\n                            const number = numberedHeadingMatch[1];\r\n                            const headingText = numberedHeadingMatch[2];\r\n                            inSection = false;\r\n                            return (\r\n                                <span\r\n                                    key={lineKey}\r\n                                    style={HEADING_STYLE}\r\n                                >\r\n                                    <span style={{ color: colours.cta, marginRight: '8px', fontWeight: 'bold' }}>{number}</span>\r\n                                    <span>{headingText}</span>\r\n                                    {index < lines.length - 1 ? '\\n' : ''}\r\n                                </span>\r\n                            );\r\n                        } else if (standaloneHeadingMatch) {\r\n                            inSection = false;\r\n                            return (\r\n                                <span key={lineKey} style={HEADING_STYLE}>\r\n                                    {line}\r\n                                    {index < lines.length - 1 ? '\\n' : ''}\r\n                                </span>\r\n                            );\r\n                        } else if (bulletPointMatch) {\r\n                            // Handle bullet points with red bullets and styled section references\r\n                            const bulletContent = bulletPointMatch[1];\r\n                            // Check for section references like \"(see section 4.1 below)\"\r\n                            const sectionRefMatch = bulletContent.match(/^(.+?)(\\(see section [^)]+\\))(.*)$/);\r\n                            \r\n                            return (\r\n                                <span key={lineKey} style={INDENT_STYLE}>\r\n                                    <span style={{ color: '#dc3545', marginRight: '8px', fontWeight: 'bold' }}>•</span>\r\n                                    <span style={{ display: 'inline' }}>\r\n                                        {sectionRefMatch ? (\r\n                                            <>\r\n                                                <span>{sectionRefMatch[1]}</span>\r\n                                                <span style={{ \r\n                                                    color: '#6c757d', \r\n                                                    fontSize: '13px', \r\n                                                    fontStyle: 'italic',\r\n                                                    opacity: 0.8 \r\n                                                }}>\r\n                                                    {sectionRefMatch[2]}\r\n                                                </span>\r\n                                                <span>{sectionRefMatch[3]}</span>\r\n                                            </>\r\n                                        ) : (\r\n                                            <span>{bulletContent}</span>\r\n                                        )}\r\n                                    </span>\r\n                                    {index < lines.length - 1 ? '\\n' : ''}\r\n                                </span>\r\n                            );\r\n                        }\r\n                        // Inline display avoids forcing placeholders onto a new\r\n                        // line when they appear immediately after a text\r\n                        // segment. Newlines are preserved by the surrounding\r\n                        // container's `white-space: pre-wrap` style, so a block\r\n                        // display is unnecessary and causes layout issues like\r\n                        // `Email address:` appearing on a separate line from its\r\n                        // placeholder.\r\n                        const style: React.CSSProperties | undefined = inSection\r\n                            ? { marginLeft: '16px', lineHeight: '1.5' }\r\n                            : undefined;\r\n                        // Keep inSection state until a new heading is encountered\r\n                        return (\r\n                            <span key={lineKey} style={style}>\r\n                                {line}\r\n                                {index < lines.length - 1 ? '\\n' : ''}\r\n                            </span>\r\n                        );\r\n                    });\r\n                    return { nodes: formattedLines, isTable: false };\r\n                };\r\n                \r\n                const { nodes, isTable, tableRows: segmentTableRows } = formatTextSegment(textSegment, parts.length, globalTableState);\r\n                \r\n                // Update global table state and collect table rows\r\n                if (isTable && !globalTableState) {\r\n                    // Starting a new table\r\n                    globalTableState = true;\r\n                    globalTableRows = [];\r\n                } \r\n                \r\n                if (isTable && segmentTableRows && segmentTableRows.length > 0) {\r\n                    // Add rows from this segment to global collection\r\n                    globalTableRows.push(...segmentTableRows);\r\n                } else if (globalTableState && !isTable) {\r\n                    // Table ended in this segment, create the complete table\r\n                    if (globalTableRows.length > 0) {\r\n                        parts.push(\r\n                            <div key={`complete-table-${parts.length}`} style={{ \r\n                                display: 'block',\r\n                                marginTop: '16px',\r\n                                marginBottom: '16px',\r\n                                width: '100%'\r\n                            }}>\r\n                                <table style={{ \r\n                                    width: '100%', \r\n                                    borderCollapse: 'collapse',\r\n                                    border: '1px solid #ccc',\r\n                                    fontSize: '14px'\r\n                                }}>\r\n                                    <thead>\r\n                                        <tr style={{ backgroundColor: '#f8f9fa' }}>\r\n                                            <th style={{ \r\n                                                border: '1px solid #ccc',\r\n                                                padding: '12px',\r\n                                                textAlign: 'left',\r\n                                                fontWeight: 'bold',\r\n                                                width: '50%'\r\n                                            }}>\r\n                                                Action required by you\r\n                                            </th>\r\n                                            <th style={{ \r\n                                                border: '1px solid #ccc',\r\n                                                padding: '12px',\r\n                                                textAlign: 'left',\r\n                                                fontWeight: 'bold',\r\n                                                width: '50%'\r\n                                            }}>\r\n                                                Additional information\r\n                                            </th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {globalTableRows}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        );\r\n                    }\r\n                    globalTableState = false;\r\n                    globalTableRows = [];\r\n                } else if (!globalTableState) {\r\n                    // Regular content, not part of table\r\n                }\r\n                parts.push(\r\n                    <div\r\n                        key={`text-${segmentStart}`}\r\n                        contentEditable={!isTable}\r\n                        suppressContentEditableWarning={true}\r\n                        onBlur={(e) => {\r\n                            if (isTable) return;\r\n                            let newText = e.target.textContent || '';\r\n\r\n                            // Preserve bullet formatting - ensure lines that had bullets still have em dashes\r\n                            const originalLines = content.substring(segmentStart, segmentEnd).split('\\n');\r\n                            const newLines = newText.split('\\n');\r\n\r\n                            // Restore em dashes for lines that should be bullets\r\n                            const restoredLines = newLines.map((newLine, index) => {\r\n                                const originalLine = originalLines[index];\r\n                                if (originalLine && originalLine.match(/^—/)) {\r\n                                    // This was originally a bullet line\r\n                                    if (!newLine.match(/^—/)) {\r\n                                        // If the em dash was lost, restore it\r\n                                        return '—' + (newLine.startsWith('•') ? newLine.substring(1) : newLine);\r\n                                    }\r\n                                }\r\n                                return newLine;\r\n                            });\r\n                            const spacingFixed = restoredLines.map(line =>\r\n                                line.replace(/^(\\d+(?:\\.\\d+)*)(\\S)/, '$1 $2')\r\n                            );\r\n\r\n                            newText = spacingFixed.join('\\n');\r\n                            const originalText = content.substring(segmentStart, segmentEnd);\r\n                            setDocumentContent(prev => {\r\n                                const start = prev.indexOf(originalText);\r\n                                if (start === -1) return prev;\r\n                                return (\r\n                                    prev.slice(0, start) +\r\n                                    newText +\r\n                                    prev.slice(start + originalText.length)\r\n                                );\r\n                            });\r\n                        }}\r\n                        style={{\r\n                            outline: 'none',\r\n                            minHeight: '1em',\r\n                            display: isTable ? 'block' : 'inline',\r\n                            whiteSpace: 'pre-wrap',\r\n                            cursor: isTable ? 'default' : 'text',\r\n                            padding: '2px',\r\n                            borderRadius: '2px',\r\n                            transition: 'background-color 0.2s ease'\r\n                        }}\r\n                    >\r\n                        {nodes}\r\n                    </div>\r\n                );\r\n            }\r\n            \r\n            // Add the interactive inline editor for placeholders\r\n            const rawBlockName = match[1].trim();\r\n            const [blockLabelPart, blockKeyPart] = rawBlockName.split('::');\r\n            const variableName = blockKeyPart ? blockKeyPart.trim() : rawBlockName;\r\n\r\n            if (consumedPlaceholders.has(variableName)) {\r\n                lastIndex = match.index + match[0].length;\r\n                continue;\r\n            }\r\n            \r\n            // Special handling for charges_section_choice\r\n            if (variableName === 'charges_section_choice') {\r\n                parts.push(\r\n                    <div\r\n                        key={match.index}\r\n                        style={{\r\n                            backgroundColor: showChargesChoice ? '#f3f9ff' : '#e8f5e8',\r\n                            border: showChargesChoice ? `1px solid ${colours.blue}` : '1px solid #20b26c',\r\n                            borderRadius: 0,\r\n                            padding: '8px',\r\n                            margin: '2px 0',\r\n                            display: 'block',\r\n                            width: '100%'\r\n                        }}\r\n                    >\r\n                        {showChargesChoice ? (\r\n                            <>\r\n                                <div style={{\r\n                                    fontSize: '13px',\r\n                                    fontWeight: 600,\r\n                                    color: colours.blue,\r\n                                    marginBottom: '6px',\r\n                                    letterSpacing: 0.1,\r\n                                    textTransform: 'none'\r\n                                }}>\r\n                                    Choose charges format:\r\n                                </div>\r\n                                {/* Option 1: Hourly rate format */}\r\n                                <div\r\n                                    onClick={() => {\r\n                                        setChargesChoice('hourly_rate');\r\n                                        setShowChargesChoice(false);\r\n                                    }}\r\n                                    style={{\r\n                                        padding: '8px',\r\n                                        marginBottom: '4px',\r\n                                        border: `1px solid ${chargesChoice === 'hourly_rate' ? '#0078d4' : '#d0d0d7'}`,\r\n                                        borderRadius: 0,\r\n                                        backgroundColor: chargesChoice === 'hourly_rate' ? '#f0f8ff' : '#fff',\r\n                                        cursor: 'pointer',\r\n                                        transition: 'all 0.2s ease'\r\n                                    }}\r\n                                >\r\n                                    <div style={{ fontSize: '14px', lineHeight: '1.4' }}>\r\n                                        <strong>Hourly rate structure</strong><br />\r\n                                        <div style={{ fontSize: '12px', color: '#666', marginBottom: '4px' }}>\r\n                                            Use when you can provide detailed hourly rates and initial estimate\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {/* Option 2: No estimate format */}\r\n                                <div\r\n                                    onClick={() => {\r\n                                        setChargesChoice('no_estimate');\r\n                                        setShowChargesChoice(false);\r\n                                    }}\r\n                                    style={{\r\n                                        padding: '8px',\r\n                                        border: `1px solid ${chargesChoice === 'no_estimate' ? '#0078d4' : '#d0d0d7'}`,\r\n                                        borderRadius: 0,\r\n                                        backgroundColor: chargesChoice === 'no_estimate' ? '#f0f8ff' : '#fff',\r\n                                        cursor: 'pointer',\r\n                                        transition: 'all 0.2s ease'\r\n                                    }}\r\n                                >\r\n                                    <div style={{ fontSize: '14px', lineHeight: '1.4' }}>\r\n                                        <strong>No overall estimate</strong><br />\r\n                                        <div style={{ fontSize: '12px', color: '#666', marginBottom: '4px' }}>\r\n                                            Use when overall scope is unclear but you can estimate next stage\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                {/* Only show the selected text, no label */}\r\n                                {chargesChoice === 'hourly_rate' ? (\r\n                                    <div style={{ fontSize: '14px', lineHeight: '1.4' }}>\r\n                                        Our fees are calculated on the basis of an hourly rate. My rate is £395 per hour. Other Partners/senior solicitors are charged at £395, Associate solicitors at £325, Solicitors at £285 and trainees and paralegals are charged at £195. All hourly rates will be subject to the addition of VAT.<br /><br />\r\n                                        Short incoming and outgoing letters, messages, emails and routine phone calls are charged at 1/10 of an hour. All other work is timed in six minute units and charged at the relevant hourly rate. Please note that lots of small emails or telephone calls may unnecessarily increase the costs to you.<br /><br />\r\n                                        I estimate the cost of the Initial Scope with be £\r\n                                        <input\r\n                                            value={templateFields.figure || ''}\r\n                                            onChange={(e) => {\r\n                                                setTemplateFields(prev => ({\r\n                                                    ...prev,\r\n                                                    figure: e.target.value || ''\r\n                                                }));\r\n                                            }}\r\n                                            placeholder=\"amount\"\r\n                                            style={{\r\n                                                fontSize: '14px',\r\n                                                padding: '1px 4px',\r\n                                                border: '1px solid #0078d4',\r\n                                                borderRadius: '2px',\r\n                                                backgroundColor: '#fff',\r\n                                                outline: 'none',\r\n                                                minWidth: '60px',\r\n                                                width: `${Math.max(60, (templateFields.figure || 'amount').length * 8 + 15)}px`,\r\n                                                transition: 'width 0.2s ease',\r\n                                                margin: '0 2px',\r\n                                                verticalAlign: 'baseline'\r\n                                            }}\r\n                                        /> plus VAT.\r\n                                    </div>\r\n                                ) : (\r\n                                    <div style={{ fontSize: '14px', lineHeight: '1.4' }}>\r\n                                        We cannot give an estimate of our overall charges in this matter because{' '}\r\n                                        <input\r\n                                            value={templateFields.we_cannot_give_an_estimate_of_our_overall_charges_in_this_matter_because_reason_why_estimate_is_not_possible || ''}\r\n                                            onChange={(e) => {\r\n                                                setTemplateFields(prev => ({\r\n                                                    ...prev,\r\n                                                    we_cannot_give_an_estimate_of_our_overall_charges_in_this_matter_because_reason_why_estimate_is_not_possible: e.target.value || ''\r\n                                                }));\r\n                                            }}\r\n                                            placeholder=\"reason why estimate is not possible\"\r\n                                            style={{\r\n                                                fontSize: '14px',\r\n                                                padding: '1px 4px',\r\n                                                border: '1px solid #0078d4',\r\n                                                borderRadius: '2px',\r\n                                                backgroundColor: '#fff',\r\n                                                outline: 'none',\r\n                                                minWidth: '200px',\r\n                                                width: `${Math.max(200, (templateFields.we_cannot_give_an_estimate_of_our_overall_charges_in_this_matter_because_reason_why_estimate_is_not_possible || 'reason why estimate is not possible').length * 8 + 15)}px`,\r\n                                                transition: 'width 0.2s ease',\r\n                                                margin: '0 2px',\r\n                                                verticalAlign: 'baseline'\r\n                                            }}\r\n                                        />. The next stage in your matter is{' '}\r\n                                        <input\r\n                                            value={templateFields.next_stage || ''}\r\n                                            onChange={(e) => {\r\n                                                setTemplateFields(prev => ({\r\n                                                    ...prev,\r\n                                                    next_stage: e.target.value || ''\r\n                                                }));\r\n                                            }}\r\n                                            placeholder=\"next stage\"\r\n                                            style={{\r\n                                                fontSize: '14px',\r\n                                                padding: '1px 4px',\r\n                                                border: '1px solid #0078d4',\r\n                                                borderRadius: '2px',\r\n                                                backgroundColor: '#fff',\r\n                                                outline: 'none',\r\n                                                minWidth: '100px',\r\n                                                width: `${Math.max(100, (templateFields.next_stage || 'next stage').length * 8 + 15)}px`,\r\n                                                transition: 'width 0.2s ease',\r\n                                                margin: '0 2px',\r\n                                                verticalAlign: 'baseline'\r\n                                            }}\r\n                                        />{' '}and we estimate that our charges up to the completion of that stage will be in the region of £\r\n                                        <input\r\n                                            value={templateFields.figure_or_range || ''}\r\n                                            onChange={(e) => {\r\n                                                setTemplateFields(prev => ({\r\n                                                    ...prev,\r\n                                                    figure_or_range: e.target.value || ''\r\n                                                }));\r\n                                            }}\r\n                                            placeholder=\"figure or range\"\r\n                                            style={{\r\n                                                fontSize: '14px',\r\n                                                padding: '1px 4px',\r\n                                                border: '1px solid #0078d4',\r\n                                                borderRadius: '2px',\r\n                                                backgroundColor: '#fff',\r\n                                                outline: 'none',\r\n                                                minWidth: '80px',\r\n                                                width: `${Math.max(80, (templateFields.figure_or_range || 'figure or range').length * 8 + 15)}px`,\r\n                                                transition: 'width 0.2s ease',\r\n                                                margin: '0 2px',\r\n                                                verticalAlign: 'baseline'\r\n                                            }}\r\n                                        />.<br /><br />\r\n                                        We reserve the right to increase the hourly rates if the work done is particularly complex or urgent, or the nature of your instructions require us to work outside normal office hours. If this happens, we will notify you in advance and agree an appropriate rate.<br /><br />\r\n                                        We will review our hourly rates on a periodic basis. This is usually done annually each January. We will give you advance notice of any change to our hourly rates.\r\n                                    </div>\r\n                                )}\r\n                                <div style={{ display: 'flex', justifyContent: 'flex-end', marginTop: 8 }}>\r\n                                    <button\r\n                                        onClick={() => setShowChargesChoice(true)}\r\n                                        style={{\r\n                                            background: 'none',\r\n                                            border: '1px solid #0078d4',\r\n                                            color: '#0078d4',\r\n                                            padding: '4px 8px',\r\n                                            fontSize: '12px',\r\n                                            cursor: 'pointer',\r\n                                            borderRadius: '0'\r\n                                        }}\r\n                                    >\r\n                                        Change\r\n                                    </button>\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                );\r\n            } else if (variableName === 'costs_section_choice') {\r\n                // Both 'no_costs' and 'risk_costs' are considered answered (green highlight when answered)\r\n                parts.push(\r\n                    <div\r\n                        key={match.index}\r\n                        style={{\r\n                            backgroundColor: showCostsChoice ? '#f3f9ff' : '#e8f5e8',\r\n                            border: showCostsChoice ? `1px solid ${colours.blue}` : '1px solid #20b26c',\r\n                            borderRadius: 0,\r\n                            padding: '8px',\r\n                            margin: '2px 0',\r\n                            display: 'block',\r\n                            width: '100%'\r\n                        }}\r\n                    >\r\n                        {showCostsChoice ? (\r\n                            <>\r\n                                <div style={{\r\n                                    fontSize: '13px',\r\n                                    fontWeight: 600,\r\n                                    color: colours.blue,\r\n                                    marginBottom: '6px',\r\n                                    letterSpacing: 0.1,\r\n                                    textTransform: 'none'\r\n                                }}>\r\n                                    Choose one option:\r\n                                </div>\r\n                                {/* Option 1: No costs expected */}\r\n                                <div\r\n                                    onClick={() => {\r\n                                        setCostsChoice('no_costs');\r\n                                        setShowCostsChoice(false);\r\n                                    }}\r\n                                    style={{\r\n                                        padding: '8px',\r\n                                        marginBottom: '4px',\r\n                                        border: `1px solid ${costsChoice === 'no_costs' ? '#0078d4' : '#d0d0d7'}`,\r\n                                        borderRadius: 0,\r\n                                        backgroundColor: costsChoice === 'no_costs' ? '#f0f8ff' : '#fff',\r\n                                        cursor: 'pointer',\r\n                                        transition: 'all 0.2s ease'\r\n                                    }}\r\n                                >\r\n                                    <div style={{ fontSize: '14px', lineHeight: '1.4' }}>\r\n                                        <strong>No costs expected</strong><br />\r\n                                        <div style={{ fontSize: '12px', color: '#666', marginBottom: '4px' }}>\r\n                                            Use when matter is non-litigious\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {/* Option 2: Risk of costs with inline field */}\r\n                                <div\r\n                                    onClick={() => {\r\n                                        setCostsChoice('risk_costs');\r\n                                        setShowCostsChoice(false);\r\n                                    }}\r\n                                    style={{\r\n                                        padding: '8px',\r\n                                        border: `1px solid ${costsChoice === 'risk_costs' ? '#0078d4' : '#d0d0d7'}`,\r\n                                        borderRadius: 0,\r\n                                        backgroundColor: costsChoice === 'risk_costs' ? '#f0f8ff' : '#fff',\r\n                                        cursor: 'pointer',\r\n                                        transition: 'all 0.2s ease'\r\n                                    }}\r\n                                >\r\n                                    <div style={{ fontSize: '14px', lineHeight: '1.4' }}>\r\n                                        <strong>Risk of costs</strong><br />\r\n                                        <div style={{ fontSize: '12px', color: '#666', marginBottom: '4px' }}>\r\n                                            Use when there's potential litigation or dispute\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                {/* Only show the selected text, no label */}\r\n                                {costsChoice === 'no_costs' ? (\r\n                                    <div style={{ fontSize: '14px', lineHeight: '1.4' }}>\r\n                                        We do not expect that you will have to pay another party's costs. This only tends to arise in litigation and is therefore not relevant to your matter.\r\n                                    </div>\r\n                                ) : (\r\n                                    <div style={{ fontSize: '14px', lineHeight: '1.4' }}>\r\n                                        There is a risk that you may have to pay{' '}\r\n                                        <input\r\n                                            value={templateFields.identify_the_other_party_eg_your_opponents || ''}\r\n                                            onChange={(e) => {\r\n                                                setTemplateFields(prev => ({\r\n                                                    ...prev,\r\n                                                    identify_the_other_party_eg_your_opponents: e.target.value || ''\r\n                                                }));\r\n                                            }}\r\n                                            placeholder=\"other party\"\r\n                                            style={{\r\n                                                fontSize: '14px',\r\n                                                padding: '1px 4px',\r\n                                                border: '1px solid #0078d4',\r\n                                                borderRadius: '2px',\r\n                                                backgroundColor: '#fff',\r\n                                                outline: 'none',\r\n                                                minWidth: '100px',\r\n                                                width: `${Math.max(100, (templateFields.identify_the_other_party_eg_your_opponents || 'other party').length * 8 + 15)}px`,\r\n                                                transition: 'width 0.2s ease',\r\n                                                margin: '0 2px',\r\n                                                verticalAlign: 'baseline'\r\n                                            }}\r\n                                        />{' '}\r\n                                        costs in this matter. This is explained in section 5, Funding and billing below.\r\n                                    </div>\r\n                                )}\r\n                                <div style={{ display: 'flex', justifyContent: 'flex-end', marginTop: 8 }}>\r\n                                    <button\r\n                                        onClick={() => setShowCostsChoice(true)}\r\n                                        style={{\r\n                                            background: 'none',\r\n                                            border: '1px solid #0078d4',\r\n                                            color: '#0078d4',\r\n                                            padding: '4px 8px',\r\n                                            fontSize: '12px',\r\n                                            cursor: 'pointer',\r\n                                            borderRadius: '0'\r\n                                        }}\r\n                                    >\r\n                                        Change\r\n                                    </button>\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                );\r\n            } else if (variableName === 'disbursements_section_choice') {\r\n                // Disbursements section with choice between table and estimate\r\n                parts.push(\r\n                    <div\r\n                        key={match.index}\r\n                        style={{\r\n                            backgroundColor: showDisbursementsChoice ? '#f3f9ff' : '#e8f5e8',\r\n                            border: `1px solid ${showDisbursementsChoice ? colours.blue : '#20b26c'}`,\r\n                            borderRadius: 0,\r\n                            padding: '8px',\r\n                            margin: '2px 0',\r\n                            display: 'block',\r\n                            width: '100%'\r\n                        }}\r\n                    >\r\n                        {showDisbursementsChoice ? (\r\n                            <>\r\n                                <div style={{\r\n                                    fontSize: '13px',\r\n                                    fontWeight: 600,\r\n                                    color: colours.blue,\r\n                                    marginBottom: '6px',\r\n                                    letterSpacing: 0.1,\r\n                                    textTransform: 'none'\r\n                                }}>\r\n                                    Choose disbursements format:\r\n                                </div>\r\n                                {/* Option 1: Table format */}\r\n                                <div\r\n                                    onClick={() => {\r\n                                        setDisbursementsChoice('table');\r\n                                        setShowDisbursementsChoice(false);\r\n                                    }}\r\n                                    style={{\r\n                                        padding: '8px',\r\n                                        marginBottom: '4px',\r\n                                        border: `1px solid ${disbursementsChoice === 'table' ? '#0078d4' : '#d0d0d7'}`,\r\n                                        borderRadius: 0,\r\n                                        backgroundColor: disbursementsChoice === 'table' ? '#f0f8ff' : '#fff',\r\n                                        cursor: 'pointer',\r\n                                        transition: 'all 0.2s ease'\r\n                                    }}\r\n                                >\r\n                                    <div style={{ fontSize: '14px', lineHeight: '1.4' }}>\r\n                                        <strong>Detailed table format</strong><br />\r\n                                        <div style={{ fontSize: '12px', color: '#666', marginBottom: '4px' }}>\r\n                                            Use when you can provide specific disbursement details\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {/* Option 2: Estimate format */}\r\n                                <div\r\n                                    onClick={() => {\r\n                                        setDisbursementsChoice('estimate');\r\n                                        setShowDisbursementsChoice(false);\r\n                                    }}\r\n                                    style={{\r\n                                        padding: '8px',\r\n                                        border: `1px solid ${disbursementsChoice === 'estimate' ? '#0078d4' : '#d0d0d7'}`,\r\n                                        borderRadius: 0,\r\n                                        backgroundColor: disbursementsChoice === 'estimate' ? '#f0f8ff' : '#fff',\r\n                                        cursor: 'pointer',\r\n                                        transition: 'all 0.2s ease'\r\n                                    }}\r\n                                >\r\n                                    <div style={{ fontSize: '14px', lineHeight: '1.4' }}>\r\n                                        <strong>Simple estimate</strong><br />\r\n                                        <div style={{ fontSize: '12px', color: '#666', marginBottom: '4px' }}>\r\n                                            Use when you only have an approximate estimate\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                {/* Show the selected content */}\r\n                                {disbursementsChoice === 'table' ? (\r\n                                    <div style={{ fontSize: '14px', lineHeight: '1.4' }}>\r\n                                        Based on the information you have provided, we expect to incur the following disbursements:\r\n                                        <br /><br />\r\n                                        <table style={{ width: '100%', borderCollapse: 'collapse', fontSize: '14px' }}>\r\n                                            <thead>\r\n                                                <tr style={{ backgroundColor: '#f8f9fa' }}>\r\n                                                    <th style={{ border: '1px solid #dee2e6', padding: '8px', textAlign: 'left', width: '50%' }}>Disbursement</th>\r\n                                                    <th style={{ border: '1px solid #dee2e6', padding: '8px', textAlign: 'left', width: '25%' }}>Amount (£)</th>\r\n                                                    <th style={{ border: '1px solid #dee2e6', padding: '8px', textAlign: 'left', width: '25%' }}>VAT</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {Array.from({ length: disbursementRowCount }, (_, index) => {\r\n                                                    const rowNumber = index + 1;\r\n                                                    return (\r\n                                                        <tr key={rowNumber}>\r\n                                                            <td style={{ border: '1px solid #dee2e6', padding: '8px', backgroundColor: 'white' }}>\r\n                                                                <select\r\n                                                                    value={templateFields[`disbursement_${rowNumber}_description`] || ''}\r\n                                                                    onChange={(e) => setTemplateFields(prev => ({ ...prev, [`disbursement_${rowNumber}_description`]: e.target.value }))}\r\n                                                                    style={{ border: 'none', outline: 'none', width: '100%', fontSize: '14px', backgroundColor: 'white' }}\r\n                                                                >\r\n                                                                    <option value=\"\">--</option>\r\n                                                                    <option value=\"General Disbursement\">General Disbursement</option>\r\n                                                                    <option value=\"Court Fee\">Court Fee</option>\r\n                                                                    <option value=\"Accountants Report\">Accountants Report</option>\r\n                                                                </select>\r\n                                                            </td>\r\n                                                            <td style={{ border: '1px solid #dee2e6', padding: '8px', backgroundColor: 'white' }}>\r\n                                                                <div style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\r\n                                                                    <input\r\n                                                                        value={templateFields[`disbursement_${rowNumber}_amount`] || ''}\r\n                                                                        onChange={(e) => {\r\n                                                                            const value = e.target.value.replace(/[£,]/g, '');\r\n                                                                            setTemplateFields(prev => ({ ...prev, [`disbursement_${rowNumber}_amount`]: value }));\r\n                                                                        }}\r\n                                                                        onBlur={(e) => {\r\n                                                                            const value = e.target.value.replace(/[£,]/g, '');\r\n                                                                            const numericValue = parseFloat(value);\r\n                                                                            if (!isNaN(numericValue) && numericValue > 0) {\r\n                                                                                const formatted = `£${numericValue.toLocaleString('en-GB', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`;\r\n                                                                                setTemplateFields(prev => ({ ...prev, [`disbursement_${rowNumber}_amount`]: formatted }));\r\n                                                                            }\r\n                                                                        }}\r\n                                                                        onFocus={(e) => {\r\n                                                                            const value = e.target.value.replace(/[£,]/g, '');\r\n                                                                            setTemplateFields(prev => ({ ...prev, [`disbursement_${rowNumber}_amount`]: value }));\r\n                                                                        }}\r\n                                                                        placeholder=\"--\"\r\n                                                                        style={{ border: 'none', outline: 'none', width: '100%', fontSize: '14px', backgroundColor: 'white' }}\r\n                                                                    />\r\n                                                                    <div style={{ display: 'flex', flexDirection: 'column', gap: '1px' }}>\r\n                                                                        <button\r\n                                                                            onClick={() => {\r\n                                                                                const currentValue = parseFloat((templateFields[`disbursement_${rowNumber}_amount`] || '0').replace(/[£,]/g, ''));\r\n                                                                                const newValue = (isNaN(currentValue) ? 0 : currentValue) + 50;\r\n                                                                                const formatted = `£${newValue.toLocaleString('en-GB', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`;\r\n                                                                                setTemplateFields(prev => ({ ...prev, [`disbursement_${rowNumber}_amount`]: formatted }));\r\n                                                                            }}\r\n                                                                            style={{\r\n                                                                                width: '18px',\r\n                                                                                height: '12px',\r\n                                                                                border: '1px solid #ccc',\r\n                                                                                backgroundColor: '#f8f9fa',\r\n                                                                                fontSize: '10px',\r\n                                                                                cursor: 'pointer',\r\n                                                                                display: 'flex',\r\n                                                                                alignItems: 'center',\r\n                                                                                justifyContent: 'center',\r\n                                                                                borderRadius: 0\r\n                                                                            }}\r\n                                                                        >\r\n                                                                            +\r\n                                                                        </button>\r\n                                                                        <button\r\n                                                                            onClick={() => {\r\n                                                                                const currentValue = parseFloat((templateFields[`disbursement_${rowNumber}_amount`] || '0').replace(/[£,]/g, ''));\r\n                                                                                const newValue = Math.max(0, (isNaN(currentValue) ? 0 : currentValue) - 50);\r\n                                                                                const formatted = newValue === 0 ? '' : `£${newValue.toLocaleString('en-GB', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`;\r\n                                                                                setTemplateFields(prev => ({ ...prev, [`disbursement_${rowNumber}_amount`]: formatted }));\r\n                                                                            }}\r\n                                                                            style={{\r\n                                                                                width: '18px',\r\n                                                                                height: '12px',\r\n                                                                                border: '1px solid #ccc',\r\n                                                                                backgroundColor: '#f8f9fa',\r\n                                                                                fontSize: '10px',\r\n                                                                                cursor: 'pointer',\r\n                                                                                display: 'flex',\r\n                                                                                alignItems: 'center',\r\n                                                                                justifyContent: 'center',\r\n                                                                                borderRadius: 0\r\n                                                                            }}\r\n                                                                        >\r\n                                                                            -\r\n                                                                        </button>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </td>\r\n                                                            <td style={{ border: '1px solid #dee2e6', padding: '8px', backgroundColor: 'white' }}>\r\n                                                                <input\r\n                                                                    value={(() => {\r\n                                                                        const amount = parseFloat((templateFields[`disbursement_${rowNumber}_amount`] || '').replace(/[£,]/g, ''));\r\n                                                                        return isNaN(amount) || amount === 0 ? '--' : `£${(amount * 0.2).toLocaleString('en-GB', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`;\r\n                                                                    })()}\r\n                                                                    readOnly\r\n                                                                    placeholder=\"--\"\r\n                                                                    style={{ border: 'none', outline: 'none', width: '100%', fontSize: '14px', backgroundColor: 'white', color: '#666' }}\r\n                                                                />\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    );\r\n                                                })}\r\n                                            </tbody>\r\n                                        </table>\r\n                                        <div style={{ marginTop: '12px', display: 'flex', gap: '8px' }}>\r\n                                            <button\r\n                                                onClick={() => setDisbursementRowCount(prev => prev + 1)}\r\n                                                style={{\r\n                                                    padding: '4px 8px',\r\n                                                    border: `1px solid ${colours.blue}`,\r\n                                                    borderRadius: 0,\r\n                                                    backgroundColor: 'white',\r\n                                                    color: colours.blue,\r\n                                                    fontSize: '12px',\r\n                                                    cursor: 'pointer',\r\n                                                    transition: 'all 0.2s ease'\r\n                                                }}\r\n                                                onMouseOver={(e) => {\r\n                                                    e.currentTarget.style.backgroundColor = colours.blue;\r\n                                                    e.currentTarget.style.color = 'white';\r\n                                                }}\r\n                                                onMouseOut={(e) => {\r\n                                                    e.currentTarget.style.backgroundColor = 'white';\r\n                                                    e.currentTarget.style.color = colours.blue;\r\n                                                }}\r\n                                            >\r\n                                                + Add Row\r\n                                            </button>\r\n                                            {disbursementRowCount > 1 && (\r\n                                                <button\r\n                                                    onClick={() => {\r\n                                                        // Remove the last row's data from templateFields\r\n                                                        setTemplateFields(prev => {\r\n                                                            const updated = { ...prev };\r\n                                                            delete updated[`disbursement_${disbursementRowCount}_description`];\r\n                                                            delete updated[`disbursement_${disbursementRowCount}_amount`];\r\n                                                            delete updated[`disbursement_${disbursementRowCount}_vat`];\r\n                                                            return updated;\r\n                                                        });\r\n                                                        // Decrease row count\r\n                                                        setDisbursementRowCount(prev => prev - 1);\r\n                                                    }}\r\n                                                    style={{\r\n                                                        padding: '4px 8px',\r\n                                                        border: `1px solid ${colours.blue}`,\r\n                                                        borderRadius: 0,\r\n                                                        backgroundColor: 'white',\r\n                                                        color: colours.blue,\r\n                                                        fontSize: '12px',\r\n                                                        cursor: 'pointer',\r\n                                                        transition: 'all 0.2s ease'\r\n                                                    }}\r\n                                                    onMouseOver={(e) => {\r\n                                                        e.currentTarget.style.backgroundColor = colours.blue;\r\n                                                        e.currentTarget.style.color = 'white';\r\n                                                    }}\r\n                                                    onMouseOut={(e) => {\r\n                                                        e.currentTarget.style.backgroundColor = 'white';\r\n                                                        e.currentTarget.style.color = colours.blue;\r\n                                                    }}\r\n                                                >\r\n                                                    - Remove Row\r\n                                                </button>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                ) : (\r\n                                    <div style={{ fontSize: '14px', lineHeight: '1.4' }}>\r\n                                        We cannot give an exact figure for your disbursements, but this is likely to be in the region of £\r\n                                        <input\r\n                                            value={templateFields.simple_disbursements_estimate || ''}\r\n                                            onChange={(e) => setTemplateFields(prev => ({ ...prev, simple_disbursements_estimate: e.target.value }))}\r\n                                            placeholder=\"estimate amount\"\r\n                                            style={{\r\n                                                fontSize: '14px',\r\n                                                padding: '1px 4px',\r\n                                                border: '1px solid #0078d4',\r\n                                                borderRadius: '2px',\r\n                                                backgroundColor: '#fff',\r\n                                                outline: 'none',\r\n                                                minWidth: '80px',\r\n                                                width: `${Math.max(80, (templateFields.simple_disbursements_estimate || 'estimate amount').length * 8 + 15)}px`,\r\n                                                transition: 'width 0.2s ease',\r\n                                                margin: '0 2px',\r\n                                                verticalAlign: 'baseline'\r\n                                            }}\r\n                                        />{' '}\r\n                                        {!showEstimateExamples ? (\r\n                                            <>\r\n                                                in total including VAT.\r\n                                                <button\r\n                                                    onClick={() => setShowEstimateExamples(!showEstimateExamples)}\r\n                                                    style={{\r\n                                                        background: 'none',\r\n                                                        border: 'none',\r\n                                                        color: '#0078d4',\r\n                                                        padding: '2px 4px',\r\n                                                        fontSize: '11px',\r\n                                                        cursor: 'pointer',\r\n                                                        textDecoration: 'none',\r\n                                                        transition: 'color 0.2s ease',\r\n                                                        display: 'inline-flex',\r\n                                                        alignItems: 'center',\r\n                                                        gap: '2px',\r\n                                                        marginLeft: '4px',\r\n                                                        verticalAlign: 'baseline'\r\n                                                    }}\r\n                                                    onMouseOver={(e) => {\r\n                                                        e.currentTarget.style.color = '#106ebe';\r\n                                                    }}\r\n                                                    onMouseOut={(e) => {\r\n                                                        e.currentTarget.style.color = '#0078d4';\r\n                                                    }}\r\n                                                >\r\n                                                    <span style={{ fontSize: '10px', lineHeight: 1 }}>+</span>\r\n                                                    Examples\r\n                                                </button>\r\n                                            </>\r\n                                        ) : (\r\n                                            <>\r\n                                                for the next steps in your matter including{' '}\r\n                                                <div style={{ display: 'inline-block', position: 'relative' }} className=\"examples-dropdown\">\r\n                                                    <input\r\n                                                        value={templateFields.give_examples_of_what_your_estimate_includes_eg_accountants_report_and_court_fees || ''}\r\n                                                        onChange={(e) => {\r\n                                                            setTemplateFields(prev => ({ \r\n                                                                ...prev, \r\n                                                                give_examples_of_what_your_estimate_includes_eg_accountants_report_and_court_fees: e.target.value \r\n                                                            }));\r\n                                                        }}\r\n                                                        placeholder=\"examples of what your estimate includes\"\r\n                                                        style={{\r\n                                                            fontSize: '14px',\r\n                                                            padding: '1px 24px 1px 4px',\r\n                                                            border: '1px solid #0078d4',\r\n                                                            borderRadius: '2px',\r\n                                                            backgroundColor: '#fff',\r\n                                                            outline: 'none',\r\n                                                            minWidth: '150px',\r\n                                                            width: `${Math.max(150, (templateFields.give_examples_of_what_your_estimate_includes_eg_accountants_report_and_court_fees || 'examples of what your estimate includes').length * 8 + 35)}px`,\r\n                                                            margin: '0 2px',\r\n                                                            verticalAlign: 'baseline',\r\n                                                            cursor: 'text',\r\n                                                            display: 'inline-block',\r\n                                                            transition: 'width 0.2s ease'\r\n                                                        }}\r\n                                                    />\r\n                                                    <span \r\n                                                        onClick={() => {\r\n                                                            const dropdown = document.getElementById('examples-dropdown');\r\n                                                            if (dropdown) {\r\n                                                                dropdown.style.display = dropdown.style.display === 'block' ? 'none' : 'block';\r\n                                                            }\r\n                                                        }}\r\n                                                        style={{ \r\n                                                            position: 'absolute',\r\n                                                            right: '6px',\r\n                                                            top: '50%',\r\n                                                            transform: 'translateY(-50%)',\r\n                                                            color: '#999',\r\n                                                            fontSize: '12px',\r\n                                                            cursor: 'pointer',\r\n                                                            userSelect: 'none',\r\n                                                            fontWeight: 'normal'\r\n                                                        }}\r\n                                                    >\r\n                                                        ▾\r\n                                                    </span>\r\n                                                    <div\r\n                                                        id=\"examples-dropdown\"\r\n                                                        style={{\r\n                                                            display: 'none',\r\n                                                            position: 'absolute',\r\n                                                            top: '100%',\r\n                                                            left: '0',\r\n                                                            backgroundColor: 'white',\r\n                                                            border: '1px solid #0078d4',\r\n                                                            borderRadius: '2px',\r\n                                                            zIndex: 1000,\r\n                                                            minWidth: '200px',\r\n                                                            boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\r\n                                                        }}\r\n                                                        onClick={(e) => e.stopPropagation()}\r\n                                                    >\r\n                                                        <div style={{ padding: '8px' }}>\r\n                                                            <label style={{ display: 'block', marginBottom: '4px', fontSize: '14px', cursor: 'pointer' }}>\r\n                                                                <input\r\n                                                                    type=\"checkbox\"\r\n                                                                    checked={(templateFields.give_examples_of_what_your_estimate_includes_eg_accountants_report_and_court_fees || '').includes('court fees')}\r\n                                                                    onChange={(e) => {\r\n                                                                        const currentValue = templateFields.give_examples_of_what_your_estimate_includes_eg_accountants_report_and_court_fees || '';\r\n                                                                        let newValue = currentValue;\r\n                                                                        \r\n                                                                        if (e.target.checked) {\r\n                                                                            // Add court fees\r\n                                                                            const parts = [];\r\n                                                                            if (currentValue.includes('accountants report')) parts.push('accountants report');\r\n                                                                            parts.push('court fees');\r\n                                                                            newValue = parts.join(' and ');\r\n                                                                        } else {\r\n                                                                            // Remove court fees\r\n                                                                            newValue = currentValue.replace(/court fees/g, '').replace(/ and /g, ' ').replace(/^ and | and $/g, '').trim();\r\n                                                                            if (newValue.includes('accountants report')) {\r\n                                                                                newValue = 'accountants report';\r\n                                                                            }\r\n                                                                        }\r\n                                                                        \r\n                                                                        setTemplateFields(prev => ({ ...prev, give_examples_of_what_your_estimate_includes_eg_accountants_report_and_court_fees: newValue }));\r\n                                                                    }}\r\n                                                                    style={{ marginRight: '8px' }}\r\n                                                                />\r\n                                                                Court fees\r\n                                                            </label>\r\n                                                            <label style={{ display: 'block', fontSize: '14px', cursor: 'pointer' }}>\r\n                                                                <input\r\n                                                                    type=\"checkbox\"\r\n                                                                    checked={(templateFields.give_examples_of_what_your_estimate_includes_eg_accountants_report_and_court_fees || '').includes('accountants report')}\r\n                                                                    onChange={(e) => {\r\n                                                                        const currentValue = templateFields.give_examples_of_what_your_estimate_includes_eg_accountants_report_and_court_fees || '';\r\n                                                                        let newValue = currentValue;\r\n                                                                        \r\n                                                                        if (e.target.checked) {\r\n                                                                            // Add accountants report\r\n                                                                            const parts = [];\r\n                                                                            parts.push('accountants report');\r\n                                                                            if (currentValue.includes('court fees')) parts.push('court fees');\r\n                                                                            newValue = parts.join(' and ');\r\n                                                                        } else {\r\n                                                                            // Remove accountants report\r\n                                                                            newValue = currentValue.replace(/accountants report/g, '').replace(/ and /g, ' ').replace(/^ and | and $/g, '').trim();\r\n                                                                            if (newValue.includes('court fees')) {\r\n                                                                                newValue = 'court fees';\r\n                                                                            }\r\n                                                                        }\r\n                                                                        \r\n                                                                        setTemplateFields(prev => ({ ...prev, give_examples_of_what_your_estimate_includes_eg_accountants_report_and_court_fees: newValue }));\r\n                                                                    }}\r\n                                                                    style={{ marginRight: '8px' }}\r\n                                                                />\r\n                                                                Accountants report\r\n                                                            </label>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>.\r\n                                                <button\r\n                                                    onClick={() => setShowEstimateExamples(!showEstimateExamples)}\r\n                                                    style={{\r\n                                                        background: 'none',\r\n                                                        border: 'none',\r\n                                                        color: '#dc3545',\r\n                                                        padding: '2px 4px',\r\n                                                        fontSize: '11px',\r\n                                                        cursor: 'pointer',\r\n                                                        textDecoration: 'none',\r\n                                                        transition: 'color 0.2s ease',\r\n                                                        display: 'inline-flex',\r\n                                                        alignItems: 'center',\r\n                                                        gap: '2px',\r\n                                                        marginLeft: '4px',\r\n                                                        verticalAlign: 'baseline'\r\n                                                    }}\r\n                                                    onMouseOver={(e) => {\r\n                                                        e.currentTarget.style.color = '#b02a37';\r\n                                                    }}\r\n                                                    onMouseOut={(e) => {\r\n                                                        e.currentTarget.style.color = '#dc3545';\r\n                                                    }}\r\n                                                >\r\n                                                    <span style={{ fontSize: '10px', lineHeight: 1 }}>✕</span>\r\n                                                    Remove\r\n                                                </button>\r\n                                            </>\r\n                                        )}\r\n                                    </div>\r\n                                )}\r\n                                <div style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center', gap: '8px', marginTop: 8 }}>\r\n                                    <button\r\n                                        onClick={() => setShowDisbursementsChoice(true)}\r\n                                        style={{\r\n                                            backgroundColor: '#f8f9fa',\r\n                                            border: '1px solid #dee2e6',\r\n                                            color: '#6c757d',\r\n                                            padding: '4px 8px',\r\n                                            fontSize: '12px',\r\n                                            cursor: 'pointer',\r\n                                            borderRadius: 0,\r\n                                            transition: 'all 0.2s ease'\r\n                                        }}\r\n                                        onMouseOver={(e) => {\r\n                                            e.currentTarget.style.backgroundColor = '#e9ecef';\r\n                                            e.currentTarget.style.borderColor = '#adb5bd';\r\n                                        }}\r\n                                        onMouseOut={(e) => {\r\n                                            e.currentTarget.style.backgroundColor = '#f8f9fa';\r\n                                            e.currentTarget.style.borderColor = '#dee2e6';\r\n                                        }}\r\n                                    >\r\n                                        Change\r\n                                    </button>\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                );\r\n            } else {\r\n                const fieldValue = templateFields[variableName];\r\n                \r\n                // Detect if this template variable is part of a bullet point\r\n                const beforeMatch = content.substring(0, match.index);\r\n                const afterMatch = content.substring(match.index + match[0].length);\r\n                const isInBullet = beforeMatch.includes('—') &&\r\n                                 !beforeMatch.split('—').pop()!.includes('\\n');\r\n                const isLineStart = match.index === 0 || content[match.index - 1] === '\\n';\r\n            \r\n            if (fieldValue && fieldValue.trim()) {\r\n                // Variable has a value - show as inline editable text\r\n                if (isInBullet) {\r\n                    // Special handling for filled placeholders within bullets - render with bullet alignment\r\n                    parts.push(\r\n                        <div\r\n                            key={match.index}\r\n                            style={{\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                marginLeft: '16px',\r\n                                textIndent: '-16px',\r\n                                lineHeight: '1.5'\r\n                            }}\r\n                        >\r\n                            <span\r\n                                contentEditable\r\n                                suppressContentEditableWarning={true}\r\n                                onMouseEnter={(e) => handleFieldHover(variableName, e)}\r\n                                onMouseLeave={handleFieldHoverLeave}\r\n                                style={{\r\n                                    backgroundColor: '#e8f5e8',\r\n                                    color: '#20b26c',\r\n                                    padding: '2px 4px',\r\n                                    fontWeight: 500,\r\n                                    outline: 'none',\r\n                                    fontFamily: 'Raleway, sans-serif',\r\n                                    fontSize: '14px',\r\n                                    display: 'inline',\r\n                                    cursor: 'text',\r\n                                    transition: 'all 0.2s ease',\r\n                                    wordBreak: 'break-word',\r\n                                    whiteSpace: 'pre-wrap',\r\n                                    boxSizing: 'border-box',\r\n                                    marginTop: '-1px',\r\n                                    marginBottom: '-1px',\r\n                                    borderLeft: '1px solid #20b26c',\r\n                                    borderRight: '1px solid #20b26c',\r\n                                    position: 'relative',\r\n                                    boxDecorationBreak: 'slice',\r\n                                    WebkitBoxDecorationBreak: 'slice',\r\n                                    marginLeft: '16px' // Align with bullet content\r\n                                }}\r\n                                className=\"placeholder-segment\"\r\n                                onFocus={(e) => {\r\n                                    e.target.style.backgroundColor = '#d4edda';\r\n                                }}\r\n                                onBlur={(e) => {\r\n                                    const newValue = e.target.textContent || '';\r\n                                    setTemplateFields(prev => ({\r\n                                        ...prev,\r\n                                        [variableName]: newValue\r\n                                    }));\r\n                                    e.target.style.backgroundColor = '#e8f5e8';\r\n                                }}\r\n                            >\r\n                                {fieldValue}\r\n                            </span>\r\n                            {FIELD_PRESETS[variableName]?.length > 0 && (\r\n                                <Icon\r\n                                    iconName=\"Add\"\r\n                                    onClick={(e) => handleFieldClick(variableName, e)}\r\n                                    styles={{ root: { marginLeft: 4, cursor: 'pointer', fontSize: 12, color: colours.blue } }}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    );\r\n                } else {\r\n                    const placeholderNode = (\r\n                        <span\r\n                            key={match.index}\r\n                            style={{ display: 'inline-flex', alignItems: 'center' }}\r\n                        >\r\n                            <span\r\n                                contentEditable\r\n                                suppressContentEditableWarning={true}\r\n                                onMouseEnter={(e) => handleFieldHover(variableName, e)}\r\n                                onMouseLeave={handleFieldHoverLeave}\r\n                                style={{\r\n                                    backgroundColor: '#e8f5e8',\r\n                                    color: '#20b26c',\r\n                                    padding: '2px 4px',\r\n                                    fontWeight: 500,\r\n                                    outline: 'none',\r\n                                    fontFamily: 'Raleway, sans-serif',\r\n                                    fontSize: '14px',\r\n                                    display: 'inline',\r\n                                    cursor: 'text',\r\n                                    transition: 'all 0.2s ease',\r\n                                    wordBreak: 'break-word',\r\n                                    whiteSpace: 'pre-wrap',\r\n                                    boxSizing: 'border-box',\r\n                                    // Use negative margins to overlap and create unified shape\r\n                                    marginTop: '-1px',\r\n                                    marginBottom: '-1px',\r\n                                    // Border only on left and right, let top/bottom merge\r\n                                    borderLeft: '1px solid #20b26c',\r\n                                    borderRight: '1px solid #20b26c',\r\n                                    // Add top/bottom borders via pseudo-elements for first/last lines\r\n                                    position: 'relative',\r\n                                    // Use slice mode for continuous background\r\n                                    boxDecorationBreak: 'slice',\r\n                                    WebkitBoxDecorationBreak: 'slice'\r\n                                }}\r\n                                className=\"placeholder-segment\"\r\n                                onFocus={(e) => {\r\n                                    e.target.style.backgroundColor = '#d4edda';\r\n                                }}\r\n                                onBlur={(e) => {\r\n                                    const newValue = e.target.textContent || '';\r\n                                    setTemplateFields(prev => ({\r\n                                        ...prev,\r\n                                        [variableName]: newValue\r\n                                    }));\r\n                                    e.target.style.backgroundColor = '#e8f5e8';\r\n                                }}\r\n                            >\r\n                                {fieldValue}\r\n                            </span>\r\n                            {FIELD_PRESETS[variableName]?.length > 0 && (\r\n                                <Icon\r\n                                    iconName=\"Add\"\r\n                                    onClick={(e) => handleFieldClick(variableName, e)}\r\n                                    styles={{ root: { marginLeft: 4, cursor: 'pointer', fontSize: 12, color: colours.blue } }}\r\n                                />\r\n                            )}\r\n                        </span>\r\n                    );\r\n                    parts.push(placeholderNode);\r\n                }\r\n            } else {\r\n                // Variable is empty - show as inline input placeholder\r\n                const placeholderText = variableName.replace(/_/g, ' ');\r\n                \r\n                if (isInBullet) {\r\n                    // Special handling for placeholders within bullets - render with bullet alignment\r\n                    parts.push(\r\n                        <div\r\n                            key={match.index}\r\n                            style={{\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                marginLeft: '16px',\r\n                                textIndent: '-16px',\r\n                                lineHeight: '1.5'\r\n                            }}\r\n                        >\r\n                            <span\r\n                                contentEditable\r\n                                suppressContentEditableWarning={true}\r\n                                data-placeholder={placeholderText}\r\n                                onMouseEnter={(e) => handleFieldHover(variableName, e)}\r\n                                onMouseLeave={handleFieldHoverLeave}\r\n                                style={{\r\n                                    backgroundColor: '#f0f8ff',\r\n                                    color: '#0078d4',\r\n                                    padding: '2px 4px',\r\n                                    fontWeight: 500,\r\n                                    outline: 'none',\r\n                                    fontFamily: 'Raleway, sans-serif',\r\n                                    fontSize: '14px',\r\n                                    display: 'inline',\r\n                                    minWidth: '20px',\r\n                                    cursor: 'text',\r\n                                    transition: 'all 0.2s ease',\r\n                                    wordBreak: 'break-word',\r\n                                    whiteSpace: 'pre-wrap',\r\n                                    boxSizing: 'border-box',\r\n                                    marginTop: '-1px',\r\n                                    marginBottom: '-1px',\r\n                                    borderLeft: '1px dashed #0078d4',\r\n                                    borderRight: '1px dashed #0078d4',\r\n                                    position: 'relative',\r\n                                    boxDecorationBreak: 'slice',\r\n                                    WebkitBoxDecorationBreak: 'slice',\r\n                                    marginLeft: '16px' // Align with bullet content\r\n                                }}\r\n                                className=\"placeholder-segment-empty\"\r\n                                onFocus={(e) => {\r\n                                    e.target.style.backgroundColor = '#e6f3ff';\r\n                                    e.target.style.borderStyle = 'solid';\r\n                                }}\r\n                                onBlur={(e) => {\r\n                                    const newValue = e.target.textContent || '';\r\n                                    setTemplateFields(prev => ({\r\n                                        ...prev,\r\n                                        [variableName]: newValue\r\n                                    }));\r\n                                    e.target.style.backgroundColor = '#f0f8ff';\r\n                                    e.target.style.borderStyle = 'dashed';\r\n                                }}\r\n                            >\r\n                                {placeholderText}\r\n                            </span>\r\n                            {FIELD_PRESETS[variableName]?.length > 0 && (\r\n                                <Icon\r\n                                    iconName=\"Add\"\r\n                                    onClick={(e) => handleFieldClick(variableName, e)}\r\n                                    styles={{ root: { marginLeft: 4, cursor: 'pointer', fontSize: 12, color: colours.blue } }}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    );\r\n                } else {\r\n                    const placeholderNode = (\r\n                        <span\r\n                            key={match.index}\r\n                            style={{ display: 'inline-flex', alignItems: 'center' }}\r\n                        >\r\n                            <span\r\n                                contentEditable\r\n                                suppressContentEditableWarning={true}\r\n                                data-placeholder={placeholderText}\r\n                                onMouseEnter={(e) => handleFieldHover(variableName, e)}\r\n                                onMouseLeave={handleFieldHoverLeave}\r\n                                style={{\r\n                                    backgroundColor: '#f0f8ff',\r\n                                    color: '#0078d4',\r\n                                    padding: '2px 4px',\r\n                                    fontWeight: 500,\r\n                                    outline: 'none',\r\n                                    fontFamily: 'Raleway, sans-serif',\r\n                                    fontSize: '14px',\r\n                                    display: 'inline',\r\n                                    minWidth: '20px',\r\n                                    cursor: 'text',\r\n                                    transition: 'all 0.2s ease',\r\n                                    wordBreak: 'break-word',\r\n                                    whiteSpace: 'pre-wrap',\r\n                                    boxSizing: 'border-box',\r\n                                    // Use negative margins to overlap and create unified shape\r\n                                    marginTop: '-1px',\r\n                                    marginBottom: '-1px',\r\n                                    // Border only on left and right, let top/bottom merge\r\n                                    borderLeft: '1px dashed #0078d4',\r\n                                    borderRight: '1px dashed #0078d4',\r\n                                    // Add top/bottom borders via pseudo-elements for first/last lines\r\n                                    position: 'relative',\r\n                                    // Use slice mode for continuous background\r\n                                    boxDecorationBreak: 'slice',\r\n                                    WebkitBoxDecorationBreak: 'slice'\r\n                                }}\r\n                                className=\"placeholder-segment-empty\"\r\n                                onFocus={(e) => {\r\n                                    e.target.style.backgroundColor = '#e6f3ff';\r\n                                    e.target.style.borderStyle = 'solid';\r\n                                }}\r\n                                onBlur={(e) => {\r\n                                    const newValue = e.target.textContent || '';\r\n                                    setTemplateFields(prev => ({\r\n                                        ...prev,\r\n                                        [variableName]: newValue\r\n                                    }));\r\n                                    e.target.style.backgroundColor = '#f0f8ff';\r\n                                    e.target.style.borderStyle = 'dashed';\r\n                                }}\r\n                            >\r\n                                {placeholderText}\r\n                            </span>\r\n                            {FIELD_PRESETS[variableName]?.length > 0 && (\r\n                                <Icon\r\n                                    iconName=\"Add\"\r\n                                    onClick={(e) => handleFieldClick(variableName, e)}\r\n                                    styles={{ root: { marginLeft: 4, cursor: 'pointer', fontSize: 12, color: colours.blue } }}\r\n                                />\r\n                            )}\r\n                        </span>\r\n                    );\r\n                    parts.push(placeholderNode);\r\n                }\r\n            }\r\n            }\r\n            \r\n            lastIndex = match.index + match[0].length;\r\n        }\r\n        \r\n        // Handle any remaining table at the end\r\n        if (globalTableState && globalTableRows.length > 0) {\r\n            parts.push(\r\n                <div key={`final-table`} style={{ \r\n                    display: 'block',\r\n                    marginTop: '16px',\r\n                    marginBottom: '16px',\r\n                    width: '100%'\r\n                }}>\r\n                    <table style={{ \r\n                        width: '100%', \r\n                        borderCollapse: 'collapse',\r\n                        border: '1px solid #ccc',\r\n                        fontSize: '14px'\r\n                    }}>\r\n                        <thead>\r\n                            <tr style={{ backgroundColor: '#f8f9fa' }}>\r\n                                <th style={{ \r\n                                    border: '1px solid #ccc',\r\n                                    padding: '12px',\r\n                                    textAlign: 'left',\r\n                                    fontWeight: 'bold',\r\n                                    width: '50%'\r\n                                }}>\r\n                                    Action required by you\r\n                                </th>\r\n                                <th style={{ \r\n                                    border: '1px solid #ccc',\r\n                                    padding: '12px',\r\n                                    textAlign: 'left',\r\n                                    fontWeight: 'bold',\r\n                                    width: '50%'\r\n                                }}>\r\n                                    Additional information\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {globalTableRows}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            );\r\n        }\r\n        \r\n        return parts.length > 0 ? parts : content;\r\n    };\r\n\r\n    // Function to render fields-only view with context sentences\r\n    const renderFieldsOnlyView = () => {\r\n        // All 44 placeholders from the actual CCL template\r\n        const actualFields = [\r\n            'insert_clients_name',\r\n            'insert_heading_eg_matter_description', \r\n            'matter',\r\n            'name_of_person_handling_matter',\r\n            'status',\r\n            'insert_telephone_number',\r\n            'insert_email_address',\r\n            'insert_postal_address',\r\n            'name_of_handler',\r\n            'email',\r\n            'handler',\r\n            'names_and_contact_details_of_other_members_of_staff_who_can_help_with_queries',\r\n            'name',\r\n            'insert_current_position_and_scope_of_retainer',\r\n            'next_steps',\r\n            'realistic_timescale',\r\n            'we_cannot_give_an_estimate_of_our_overall_charges_in_this_matter_because_reason_why_estimate_is_not_possible',\r\n            'next_stage',\r\n            'figure_or_range',\r\n            'describe_disbursement_1',\r\n            'insert_estimated_amount_of_disbursement_1',\r\n            'vat_chargeable_1',\r\n            'describe_disbursement_2',\r\n            'insert_estimated_amount_of_disbursement_2',\r\n            'vat_chargeable_2',\r\n            'describe_disbursement_3',\r\n            'insert_estimated_amount_of_disbursement_3',\r\n            'vat_chargeable_3',\r\n            'estimate',\r\n            'in_total_including_vat_or_for_the_next_steps_in_your_matter',\r\n            'give_examples_of_what_your_estimate_includes_eg_accountants_report_and_court_fees',\r\n            'identify_the_other_party_eg_your_opponents',\r\n            'figure',\r\n            'matter_number',\r\n            'and_or_intervals_eg_every_three_months',\r\n            'contact_details_for_marketing_opt_out',\r\n            'link_to_preference_centre',\r\n            'may_will',\r\n            'instructions_link',\r\n            'insert_next_step_you_would_like_client_to_take',\r\n            'state_why_this_step_is_important',\r\n            'state_amount',\r\n            'describe_first_document_or_information_you_need_from_your_client',\r\n            'describe_second_document_or_information_you_need_from_your_client',\r\n            'describe_third_document_or_information_you_need_from_your_client',\r\n            'explain_the_nature_of_your_arrangement_with_any_introducer_for_link_to_sample_wording_see_drafting_note_referral_and_fee_sharing_arrangement'\r\n        ];\r\n        \r\n        // Field contexts for better user understanding based on actual template\r\n        const fieldContexts: Record<string, { before: string; after: string }> = {\r\n            'insert_clients_name': {\r\n                before: 'Dear',\r\n                after: '[heading] Thank you for your instructions'\r\n            },\r\n            'insert_heading_eg_matter_description': {\r\n                before: 'Dear [Client Name]',\r\n                after: 'Thank you for your instructions to act'\r\n            },\r\n            'matter': {\r\n                before: 'Thank you for your instructions to act on your behalf in connection with',\r\n                after: '. This Engagement Letter and the attached Terms'\r\n            },\r\n            'name_of_person_handling_matter': {\r\n                before: 'The person dealing with your matter is',\r\n                after: ', who is a [status]'\r\n            },\r\n            'status': {\r\n                before: 'The person dealing with your matter is [name], who is a',\r\n                after: '. Their contact details are:'\r\n            },\r\n            'insert_telephone_number': {\r\n                before: 'Telephone number',\r\n                after: 'Email address'\r\n            },\r\n            'insert_email_address': {\r\n                before: '[Insert telephone number] Email address',\r\n                after: 'Postal address'\r\n            },\r\n            'insert_postal_address': {\r\n                before: '[Insert email address] Postal address',\r\n                after: 'The best way to contact'\r\n            },\r\n            'name_of_handler': {\r\n                before: 'The best way to contact',\r\n                after: 'is [email]'\r\n            },\r\n            'email': {\r\n                before: 'The best way to contact [handler] is',\r\n                after: '. If [handler] is not available'\r\n            },\r\n            'handler': {\r\n                before: 'If',\r\n                after: 'is not available, the following members'\r\n            },\r\n            'names_and_contact_details_of_other_members_of_staff_who_can_help_with_queries': {\r\n                before: 'If [handler] is not available, the following members of staff may be able to deal with any queries you have:',\r\n                after: 'The person with overall responsibility'\r\n            },\r\n            'name': {\r\n                before: 'The person with overall responsibility for supervising your matter is',\r\n                after: ', who is a Partner.'\r\n            },\r\n            'insert_current_position_and_scope_of_retainer': {\r\n                before: 'Scope of services',\r\n                after: '(\"Initial Scope\") We will provide legal advice'\r\n            },\r\n            'next_steps': {\r\n                before: 'The next steps in your matter are',\r\n                after: '. We expect this will take'\r\n            },\r\n            'realistic_timescale': {\r\n                before: 'We expect this will take',\r\n                after: '. This is an estimate only'\r\n            },\r\n            'we_cannot_give_an_estimate_of_our_overall_charges_in_this_matter_because_reason_why_estimate_is_not_possible': {\r\n                before: 'or',\r\n                after: '. The next stage in your matter is'\r\n            },\r\n            'next_stage': {\r\n                before: 'The next stage in your matter is',\r\n                after: 'and we estimate that our charges'\r\n            },\r\n            'figure_or_range': {\r\n                before: 'we estimate that our charges up to the completion of that stage will be in the region of £',\r\n                after: '. We reserve the right to increase'\r\n            },\r\n            'estimate': {\r\n                before: 'We cannot give an exact figure for your disbursements, but this is likely to be in the region of £',\r\n                after: '[total description] including'\r\n            },\r\n            'in_total_including_vat_or_for_the_next_steps_in_your_matter': {\r\n                before: 'but this is likely to be in the region of £[estimate]',\r\n                after: 'including [examples]'\r\n            },\r\n            'give_examples_of_what_your_estimate_includes_eg_accountants_report_and_court_fees': {\r\n                before: '[total description] including',\r\n                after: '. Costs you may have to pay'\r\n            },\r\n            'identify_the_other_party_eg_your_opponents': {\r\n                before: 'There is a risk that you may have to pay',\r\n                after: 'costs in this matter'\r\n            },\r\n            'figure': {\r\n                before: 'Please provide us with £',\r\n                after: 'on account of costs'\r\n            },\r\n            'matter_number': {\r\n                before: 'Please use the reference <<',\r\n                after: '>> We work with money'\r\n            },\r\n            'and_or_intervals_eg_every_three_months': {\r\n                before: 'We have agreed to provide you with an update on the amount of costs when appropriate as the matter progresses',\r\n                after: '. Risk analysis'\r\n            },\r\n            'contact_details_for_marketing_opt_out': {\r\n                before: '—contacting us at',\r\n                after: '; —using the \\'unsubscribe\\' link'\r\n            },\r\n            'link_to_preference_centre': {\r\n                before: '—updating your marketing preferences on our',\r\n                after: '. Prevention of money laundering'\r\n            },\r\n            'may_will': {\r\n                before: 'Your matter',\r\n                after: 'involve court proceedings'\r\n            },\r\n            'instructions_link': {\r\n                before: 'The \\'Instructions for Cancellation\\' notice at',\r\n                after:\r\n                    'explains:\\n— how to cancel and the effect of cancellation;\\n— what you will be liable for if you ask us to start work during the cancellation period.'\r\n            },\r\n            'insert_next_step_you_would_like_client_to_take': {\r\n                before: '☐',\r\n                after: '[State why this step is important]'\r\n            },\r\n            'state_why_this_step_is_important': {\r\n                before: '[Insert next step you would like client to take]',\r\n                after: '☐ Provide a payment on account'\r\n            },\r\n            'state_amount': {\r\n                before: '☐ Provide a payment on account of costs and disbursements of £',\r\n                after: 'If we do not receive a payment'\r\n            },\r\n            'describe_first_document_or_information_you_need_from_your_client': {\r\n                before: '☐ Provide the following documents [and information] to allow me to take the next steps in your matter:',\r\n                after: '[describe second document]'\r\n            },\r\n            'describe_second_document_or_information_you_need_from_your_client': {\r\n                before: '[describe first document or information you need from your client]',\r\n                after: '[describe third document]'\r\n            },\r\n            'describe_third_document_or_information_you_need_from_your_client': {\r\n                before: '[describe second document or information you need from your client]',\r\n                after: 'Without these documents there may be a delay'\r\n            },\r\n            'explain_the_nature_of_your_arrangement_with_any_introducer_for_link_to_sample_wording_see_drafting_note_referral_and_fee_sharing_arrangement': {\r\n                before: 'Referral and fee sharing arrangement',\r\n                after: 'Right to cancel'\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                {/* Special section for costs choice */}\r\n                <div style={{ \r\n                    marginBottom: '24px',\r\n                    padding: '16px',\r\n                    backgroundColor: '#FFF9E6',\r\n                    border: '1px solid #FFD700',\r\n                    borderLeft: '4px solid #FF8C00',\r\n                    borderRadius: '4px'\r\n                }}>\r\n                    <div style={{\r\n                        fontSize: '16px',\r\n                        fontWeight: '600',\r\n                        color: '#CC6600',\r\n                        marginBottom: '12px'\r\n                    }}>\r\n                        Section 4.3: Costs Choice\r\n                    </div>\r\n                    <div style={{\r\n                        fontSize: '13px',\r\n                        color: '#666',\r\n                        marginBottom: '12px',\r\n                        fontStyle: 'italic',\r\n                        lineHeight: '1.4'\r\n                    }}>\r\n                        Choose which statement applies to your matter regarding costs that may need to be paid to another party:\r\n                    </div>\r\n                    \r\n                    <Dropdown\r\n                        label=\"Costs to Another Party\"\r\n                        selectedKey={costsChoice}\r\n                        onChange={(_, option) => {\r\n                            if (option) {\r\n                                setCostsChoice(option.key as 'no_costs' | 'risk_costs');\r\n                            }\r\n                        }}\r\n                        options={[\r\n                            { \r\n                                key: 'no_costs', \r\n                                text: 'No costs expected - Not relevant to this matter' \r\n                            },\r\n                            { \r\n                                key: 'risk_costs', \r\n                                text: 'Risk of paying opposing party costs exists' \r\n                            }\r\n                        ]}\r\n                        styles={{\r\n                            root: { marginTop: '8px' }\r\n                        }}\r\n                    />\r\n                    \r\n                    {costsChoice === 'risk_costs' && (\r\n                        <div style={{ marginTop: '16px' }}>\r\n                            <TextField\r\n                                label=\"Identify the Other Party\"\r\n                                value={templateFields.identify_the_other_party_eg_your_opponents}\r\n                                onChange={(_, newValue) => {\r\n                                    setTemplateFields(prev => ({\r\n                                        ...prev,\r\n                                        identify_the_other_party_eg_your_opponents: newValue || ''\r\n                                    }));\r\n                                }}\r\n                                placeholder=\"e.g., your opponents, the other party, etc.\"\r\n                                styles={{ \r\n                                    root: { marginTop: 8 }\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                {/* Special section for disbursements choice */}\r\n                <div style={{ \r\n                    marginBottom: '24px',\r\n                    padding: '16px',\r\n                    backgroundColor: '#F0F8FF',\r\n                    border: '1px solid #87CEEB',\r\n                    borderLeft: '4px solid #0078d4',\r\n                    borderRadius: '4px'\r\n                }}>\r\n                    <div style={{\r\n                        fontSize: '16px',\r\n                        fontWeight: '600',\r\n                        color: '#0078d4',\r\n                        marginBottom: '12px'\r\n                    }}>\r\n                        Section 4.2: Disbursements Format\r\n                    </div>\r\n                    <div style={{\r\n                        fontSize: '13px',\r\n                        color: '#666',\r\n                        marginBottom: '12px',\r\n                        fontStyle: 'italic',\r\n                        lineHeight: '1.4'\r\n                    }}>\r\n                        Choose how to present the disbursements information:\r\n                    </div>\r\n                    \r\n                    <Dropdown\r\n                        label=\"Disbursements Format\"\r\n                        selectedKey={disbursementsChoice}\r\n                        onChange={(_, option) => {\r\n                            if (option) {\r\n                                setDisbursementsChoice(option.key as 'table' | 'estimate');\r\n                            }\r\n                        }}\r\n                        options={[\r\n                            { \r\n                                key: 'table', \r\n                                text: 'Table format (client provided info)' \r\n                            },\r\n                            { \r\n                                key: 'estimate', \r\n                                text: 'Estimate format (cannot provide exact figures)' \r\n                            }\r\n                        ]}\r\n                        styles={{\r\n                            root: { marginTop: '8px' }\r\n                        }}\r\n                    />\r\n                    \r\n                    {disbursementsChoice === 'estimate' && (\r\n                        <div style={{ marginTop: '16px' }}>\r\n                            <TextField\r\n                                label=\"Estimated Amount (£)\"\r\n                                value={templateFields.estimate}\r\n                                onChange={(_, newValue) => {\r\n                                    setTemplateFields(prev => ({\r\n                                        ...prev,\r\n                                        estimate: newValue || ''\r\n                                    }));\r\n                                }}\r\n                                placeholder=\"e.g., 500\"\r\n                                styles={{ \r\n                                    root: { marginBottom: 12 }\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                label=\"Description (total including VAT / for next steps)\"\r\n                                value={templateFields.in_total_including_vat_or_for_the_next_steps_in_your_matter}\r\n                                onChange={(_, newValue) => {\r\n                                    setTemplateFields(prev => ({\r\n                                        ...prev,\r\n                                        in_total_including_vat_or_for_the_next_steps_in_your_matter: newValue || ''\r\n                                    }));\r\n                                }}\r\n                                placeholder=\"e.g., in total including VAT\"\r\n                                styles={{ \r\n                                    root: { marginBottom: 12 }\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                label=\"Examples of what's included\"\r\n                                value={templateFields.give_examples_of_what_your_estimate_includes_eg_accountants_report_and_court_fees}\r\n                                onChange={(_, newValue) => {\r\n                                    setTemplateFields(prev => ({\r\n                                        ...prev,\r\n                                        give_examples_of_what_your_estimate_includes_eg_accountants_report_and_court_fees: newValue || ''\r\n                                    }));\r\n                                }}\r\n                                placeholder=\"e.g., court fees and search fees\"\r\n                                styles={{ \r\n                                    root: { marginBottom: 12 }\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                {actualFields.map(field => {\r\n                    const context = fieldContexts[field];\r\n                    // Try to get value from templateFields, fallback to empty string\r\n                    const fieldValue = templateFields[field] || templateFields[`{{${field}}}`] || templateFields[`[${field}]`] || '';\r\n                    \r\n                    // Format field label\r\n                    const formatFieldLabel = (key: string): string => {\r\n                        return key.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\r\n                    };\r\n                    \r\n                    return (\r\n                        <div key={field} style={{ \r\n                            marginBottom: '24px',\r\n                            padding: '16px',\r\n                            backgroundColor: '#F4F4F6',\r\n                            border: '1px solid #CCCCCC',\r\n                            borderLeft: '4px solid #3690CE'\r\n                        }}>\r\n                            {context && (\r\n                                <div style={{\r\n                                    fontSize: '13px',\r\n                                    color: '#666',\r\n                                    marginBottom: '8px',\r\n                                    fontStyle: 'italic',\r\n                                    lineHeight: '1.4'\r\n                                }}>\r\n                                    <span style={{ opacity: 0.7 }}>\r\n                                        \"{context.before} \"\r\n                                    </span>\r\n                                    <span style={{ \r\n                                        backgroundColor: '#d6e8ff', \r\n                                        padding: '2px 6px', \r\n                                        fontWeight: 600,\r\n                                        color: '#061733'\r\n                                    }}>\r\n                                        [{formatFieldLabel(field)}]\r\n                                    </span>\r\n                                    <span style={{ opacity: 0.7 }}>\r\n                                        \" {context.after}\"\r\n                                    </span>\r\n                                </div>\r\n                            )}\r\n                            \r\n                            <TextField\r\n                                label={formatFieldLabel(field)}\r\n                                value={fieldValue}\r\n                                onChange={(_, newValue) => {\r\n                                    setTemplateFields(prev => ({\r\n                                        ...prev,\r\n                                        [field]: newValue || ''\r\n                                    }));\r\n                                }}\r\n                                multiline={field.length > 30}\r\n                                placeholder={`Enter ${formatFieldLabel(field).toLowerCase()}...`}\r\n                                styles={{ \r\n                                    root: { marginTop: context ? 8 : 0 }\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    // Function to render template content with editable text and placeholders\r\n    const renderEditableTemplateContent = (content: string) => {\r\n        if (!content) return 'No content to preview...';\r\n        \r\n        // Always render in template mode with inline editing\r\n        return (\r\n            <div style={{ \r\n                width: '100%', \r\n                height: '100%',\r\n                overflow: 'auto',\r\n                fontFamily: 'Raleway, sans-serif',\r\n                fontSize: '14px',\r\n                lineHeight: '1.3',\r\n                whiteSpace: 'pre-wrap',\r\n                padding: '8px',\r\n                minHeight: '100%',\r\n                cursor: 'text',\r\n                userSelect: 'text'\r\n            }}>\r\n                {renderTemplateContentWithHighlights(documentContent)}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    // Function to render template content for read-only preview\r\n    const renderTemplateContentForPreview = () => (\r\n        <CCLPreview\r\n            documentContent={documentContent}\r\n            templateFields={templateFields}\r\n            costsChoice={costsChoice}\r\n            chargesChoice={chargesChoice}\r\n            disbursementsChoice={disbursementsChoice}\r\n            showEstimateExamples={showEstimateExamples}\r\n        />\r\n    );\r\n\r\n    \r\n    // Navigation functions\r\n    const goToNextStep = () => {\r\n        if (currentStep < 3) {\r\n            setCurrentStep(currentStep + 1);\r\n        }\r\n    };\r\n    \r\n    const goToPreviousStep = () => {\r\n        if (currentStep > 1) {\r\n            setCurrentStep(currentStep - 1);\r\n        }\r\n    };\r\n    \r\n    const goToStep = (step: number) => {\r\n        setCurrentStep(step);\r\n    };\r\n    \r\n    // Field styling functions - match DocumentsV2 exactly\r\n    const answeredFieldStyle = {\r\n        background: \"#3690CE22\",\r\n        color: \"#061733\",\r\n        border: \"none\",\r\n        borderRadius: 0,\r\n        boxShadow: \"none\",\r\n        transition: \"all 0.3s cubic-bezier(0.4, 0, 0.2, 1)\"\r\n    };\r\n\r\n    const unansweredFieldStyle = {\r\n        background: \"#fff\",\r\n        color: \"#061733\",\r\n        border: \"none\",\r\n        borderRadius: 0,\r\n        boxShadow: \"0 2px 8px rgba(0,0,0,0.08)\",\r\n        transition: \"all 0.3s cubic-bezier(0.4, 0, 0.2, 1)\"\r\n    };\r\n\r\n    const pressedFieldStyle = {\r\n        background: \"rgba(0, 0, 0, 0.05)\",\r\n        color: \"var(--helix-highlight, #3690CE)\",\r\n        border: \"0.25px solid rgba(54, 144, 206, 0.4)\",\r\n        borderRadius: 0,\r\n        boxShadow: \"none\",\r\n        outline: \"none\",\r\n        transition: \"all 0.3s cubic-bezier(0.4, 0, 0.2, 1)\"\r\n    };\r\n\r\n    // Helper to get field style - match DocumentsV2 exactly\r\n    const getFieldStyle = (fieldKey: string, value: string) => {\r\n        const isActive = activeField === fieldKey;\r\n        const isTouched = touchedFields[fieldKey];\r\n        if (isActive) return pressedFieldStyle;\r\n        if (isTouched && value) return answeredFieldStyle;\r\n        return unansweredFieldStyle;\r\n    };\r\n\r\n    // Remove blue border on focus\r\n    const noFocusOutline = {\r\n        outline: \"none\",\r\n        '&:focus': {\r\n            outline: \"none\"\r\n        }\r\n    };\r\n    \r\n    // Instruction dropdown options\r\n    const instructionOptions = [\r\n        { key: 'none', text: 'No instruction selected', data: null },\r\n        ...instructions.map(inst => ({\r\n            key: inst.id || `instruction-${inst.prospectId}`,\r\n            text: inst.title || (inst.prospectId ? `Instruction ${inst.prospectId}` : 'Untitled Instruction'),\r\n            data: inst\r\n        }))\r\n    ];\r\n    \r\n    // Common styles - match DocumentsV2 exactly\r\n    const questionBannerStyle: React.CSSProperties = {\r\n        background: `linear-gradient(to right, #ffffff, ${colours.light.grey})`,\r\n        borderLeft: `3px solid ${colours.cta}`,\r\n        padding: '4px 8px',\r\n        fontWeight: '600',\r\n        color: '#061733',\r\n        marginBottom: '8px',\r\n        fontSize: '14px',\r\n        borderRadius: '0',\r\n        fontFamily: 'Raleway, sans-serif'\r\n    };\r\n    \r\n    const cardStyle = {\r\n        backgroundColor: '#fff',\r\n        padding: '20px',\r\n        borderRadius: '4px',\r\n        boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\r\n        marginBottom: '20px'\r\n    };\r\n    \r\n    const templateCardStyle = {\r\n        padding: '24px',\r\n        borderRadius: '8px',\r\n        textAlign: 'center' as const,\r\n        cursor: 'pointer',\r\n        transition: 'all 0.3s ease',\r\n        minHeight: '200px',\r\n        display: 'flex',\r\n        flexDirection: 'column' as const,\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    };\r\n    \r\n    \r\n    const navigationStyle = {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        marginTop: 24\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <TemplateSelectionStep\r\n                currentStep={currentStep}\r\n                isInstructionBasedMode={isInstructionBasedMode}\r\n                questionBannerStyle={questionBannerStyle}\r\n                instructionSearchTerm={instructionSearchTerm}\r\n                setInstructionSearchTerm={setInstructionSearchTerm}\r\n                filteredInstructions={filteredInstructions}\r\n                selectedInstruction={selectedInstruction}\r\n                userHasInteracted={userHasInteracted}\r\n                setSelectedInstruction={setSelectedInstruction}\r\n                setHasSelectedInstruction={setHasSelectedInstruction}\r\n                setUserHasInteracted={setUserHasInteracted}\r\n                selectedTemplate={selectedTemplate}\r\n                handleTemplateSelect={handleTemplateSelect}\r\n                templateCardStyle={templateCardStyle}\r\n                colours={colours}\r\n                navigationStyle={navigationStyle}\r\n                canProceedToStep2={canProceedToStep2}\r\n                goToNextStep={goToNextStep}\r\n            />\r\n            <TemplateEditorStep\r\n                currentStep={currentStep}\r\n                questionBannerStyle={questionBannerStyle}\r\n                renderFieldsOnlyView={renderFieldsOnlyView}\r\n                renderEditableTemplateContent={renderEditableTemplateContent}\r\n                documentContent={documentContent}\r\n                isFieldsOnlyView={isFieldsOnlyView}\r\n                setIsFieldsOnlyView={setIsFieldsOnlyView}\r\n                navigationStyle={navigationStyle}\r\n                goToPreviousStep={goToPreviousStep}\r\n                canProceedToStep3={canProceedToStep3}\r\n                goToNextStep={goToNextStep}\r\n/>\r\n            <PreviewActionsStep\r\n                currentStep={currentStep}\r\n                questionBannerStyle={questionBannerStyle}\r\n                renderTemplateContentForPreview={renderTemplateContentForPreview}\r\n                documentContent={documentContent}\r\n                windowWidth={windowWidth}\r\n                message={message}\r\n                setMessage={setMessage}\r\n                generateContent={generateContent}\r\n                templateFields={templateFields}\r\n                selectedTemplate={selectedTemplate}\r\n                navigationStyle={navigationStyle}\r\n                goToPreviousStep={goToPreviousStep}\r\n                goToNextStep={goToNextStep}\r\n            />\r\n\r\n            {/* Render preset panel */}\r\n            <PresetPanel\r\n                show={showPresets && !!presetField}\r\n                field={presetField}\r\n                position={presetPosition}\r\n                presets={FIELD_PRESETS}\r\n                onSelect={handlePresetSelect}\r\n                onClose={closePresets}\r\n            />\r\n\r\n            {/* Hover tooltip */}\r\n            <HoverTooltip\r\n                hoveredField={hoveredField}\r\n                position={tooltipPosition}\r\n                displayNames={FIELD_DISPLAY_NAMES}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DocumentsV3;\r\n","import React, { useRef, useLayoutEffect, useState, useCallback } from 'react';\r\nimport { useTheme } from '../../app/functionality/ThemeContext';\r\nimport { colours } from '../../app/styles/colours';\r\nimport { SegmentedOption } from './SegmentedControl';\r\n\r\nexport interface TwoLayerFilterOption {\r\n  key: string;\r\n  label: string;\r\n  subOptions: SegmentedOption[];\r\n}\r\n\r\ninterface TwoLayerFilterProps {\r\n  primaryValue: string;\r\n  secondaryValue: string;\r\n  onPrimaryChange: (key: string) => void;\r\n  onSecondaryChange: (key: string) => void;\r\n  options: TwoLayerFilterOption[];\r\n  ariaLabel?: string;\r\n  id?: string;\r\n  style?: React.CSSProperties;\r\n  hideSecondaryInProduction?: boolean;\r\n}\r\n\r\n/**\r\n * Two-layer filter component with primary options on the left and secondary options on the right.\r\n * The secondary options change based on the selected primary option.\r\n */\r\nconst TwoLayerFilter: React.FC<TwoLayerFilterProps> = ({\r\n  primaryValue,\r\n  secondaryValue,\r\n  onPrimaryChange,\r\n  onSecondaryChange,\r\n  options,\r\n  ariaLabel,\r\n  id,\r\n  style,\r\n  hideSecondaryInProduction = false\r\n}) => {\r\n  const { isDarkMode } = useTheme();\r\n  const height = 28; // align with SegmentedControl sm height\r\n  const fontSize = 12;\r\n  const paddingX = 14;\r\n\r\n  // Production detection\r\n  const isProduction = typeof window !== 'undefined' && \r\n    window.location.hostname !== 'localhost' && \r\n    window.location.hostname !== '127.0.0.1';\r\n  \r\n  // Hide secondary filter in production if requested\r\n  const shouldHideSecondary = hideSecondaryInProduction && isProduction;\r\n\r\n  const primaryContainerRef = useRef<HTMLDivElement | null>(null);\r\n  const secondaryContainerRef = useRef<HTMLDivElement | null>(null);\r\n  const secondaryWrapperRef = useRef<HTMLDivElement | null>(null);\r\n  const primaryBtnRefs = useRef<(HTMLButtonElement | null)[]>([]);\r\n  const secondaryBtnRefs = useRef<(HTMLButtonElement | null)[]>([]);\r\n  const [isSecondaryExpanded, setIsSecondaryExpanded] = useState(false);\r\n  \r\n  const [primaryThumbRect, setPrimaryThumbRect] = useState<{ left: number; width: number }>({ left: 2, width: 0 });\r\n  const [secondaryThumbRect, setSecondaryThumbRect] = useState<{ left: number; width: number }>({ left: 2, width: 0 });\r\n\r\n  const primaryActiveIndex = options.findIndex(o => o.key === primaryValue);\r\n  const currentOption = options.find(o => o.key === primaryValue);\r\n  const secondaryActiveIndex = currentOption ? currentOption.subOptions.findIndex(o => o.key === secondaryValue) : -1;\r\n\r\n  const recalcPrimary = () => {\r\n    const container = primaryContainerRef.current;\r\n    const activeBtn = primaryBtnRefs.current[primaryActiveIndex];\r\n    if (container && activeBtn) {\r\n      const c = container.getBoundingClientRect();\r\n      const b = activeBtn.getBoundingClientRect();\r\n      // Snap to integers and keep 4px top/bottom margin like SegmentedControl\r\n      setPrimaryThumbRect({ left: Math.round(b.left - c.left), width: Math.round(b.width) });\r\n    }\r\n  };\r\n\r\n  const recalcSecondary = () => {\r\n    const container = secondaryContainerRef.current;\r\n    const activeBtn = secondaryBtnRefs.current[secondaryActiveIndex];\r\n    if (container && activeBtn) {\r\n      const c = container.getBoundingClientRect();\r\n      const b = activeBtn.getBoundingClientRect();\r\n      setSecondaryThumbRect({ left: Math.round(b.left - c.left), width: Math.round(b.width) });\r\n    }\r\n  };\r\n\r\n  useLayoutEffect(() => { recalcPrimary(); }, [primaryActiveIndex, options, primaryValue]);\r\n  useLayoutEffect(() => { recalcSecondary(); }, [secondaryActiveIndex, currentOption, secondaryValue]);\r\n  \r\n  useLayoutEffect(() => {\r\n    const handleResize = () => {\r\n      recalcPrimary();\r\n      recalcSecondary();\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  // Keep active secondary chip visible on state changes\r\n  useLayoutEffect(() => {\r\n    const activeBtn = secondaryBtnRefs.current[secondaryActiveIndex];\r\n    const wrapper = secondaryWrapperRef.current;\r\n    if (activeBtn && wrapper) {\r\n      // When expanding, ensure the active is scrolled into view nicely\r\n      activeBtn.scrollIntoView({ behavior: 'instant' as ScrollBehavior, inline: 'center', block: 'nearest' });\r\n    }\r\n  }, [isSecondaryExpanded, secondaryActiveIndex]);\r\n\r\n  const containerStyle = {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    gap: 16,\r\n    width: '100%',\r\n    ...style,\r\n  };\r\n\r\n  const segmentStyle = {\r\n    display: 'flex',\r\n    position: 'relative' as const,\r\n    background: isDarkMode ? 'rgba(255,255,255,0.06)' : 'rgba(0,0,0,0.04)',\r\n    borderRadius: height / 2,\r\n    padding: 4,\r\n    height, // visual height; thumb will be height-8\r\n    fontFamily: 'Raleway, sans-serif',\r\n    userSelect: 'none' as const,\r\n    overflow: 'hidden' as const,\r\n  };\r\n\r\n  // Keyboard navigation for accessibility\r\n  const onPrimaryKeyDown = useCallback((e: React.KeyboardEvent<HTMLDivElement>) => {\r\n    const idx = options.findIndex(o => o.key === primaryValue);\r\n    if (idx < 0) return;\r\n    if (e.key === 'ArrowRight') {\r\n      e.preventDefault();\r\n      const next = Math.min(options.length - 1, idx + 1);\r\n      if (next !== idx) onPrimaryChange(options[next].key);\r\n    } else if (e.key === 'ArrowLeft') {\r\n      e.preventDefault();\r\n      const prev = Math.max(0, idx - 1);\r\n      if (prev !== idx) onPrimaryChange(options[prev].key);\r\n    }\r\n  }, [options, primaryValue, onPrimaryChange]);\r\n\r\n  const onSecondaryKeyDown = useCallback((e: React.KeyboardEvent<HTMLDivElement>) => {\r\n    if (!currentOption) return;\r\n    const idx = currentOption.subOptions.findIndex(o => o.key === secondaryValue);\r\n    if (idx < 0) return;\r\n    if (e.key === 'ArrowRight') {\r\n      e.preventDefault();\r\n      for (let i = idx + 1; i < currentOption.subOptions.length; i++) {\r\n        if (!currentOption.subOptions[i].disabled) {\r\n          onSecondaryChange(currentOption.subOptions[i].key);\r\n          break;\r\n        }\r\n      }\r\n    } else if (e.key === 'ArrowLeft') {\r\n      e.preventDefault();\r\n      for (let i = idx - 1; i >= 0; i--) {\r\n        if (!currentOption.subOptions[i].disabled) {\r\n          onSecondaryChange(currentOption.subOptions[i].key);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }, [currentOption, secondaryValue, onSecondaryChange]);\r\n\r\n  return (\r\n    <div\r\n      id={id}\r\n      role=\"group\"\r\n      aria-label={ariaLabel}\r\n      style={containerStyle}\r\n    >\r\n      {/* Primary Filter */}\r\n      <div\r\n        role=\"tablist\"\r\n        aria-label=\"Primary filter\"\r\n        style={segmentStyle}\r\n        ref={primaryContainerRef}\r\n        tabIndex={0}\r\n        onKeyDown={onPrimaryKeyDown}\r\n      >\r\n        {primaryActiveIndex >= 0 && (\r\n          <span\r\n            aria-hidden=\"true\"\r\n            style={{\r\n              pointerEvents: 'none',\r\n              position: 'absolute',\r\n              top: 4,\r\n              height: Math.max(0, height - 8),\r\n              left: primaryThumbRect.left,\r\n              width: primaryThumbRect.width,\r\n              background: '#FFFFFF',\r\n              borderRadius: height / 2 - 4,\r\n              transition: 'left 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94), width 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94)',\r\n              boxShadow: isDarkMode\r\n                ? '0 1px 3px rgba(0,0,0,0.3), 0 1px 2px rgba(0,0,0,0.24)'\r\n                : '0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.08)',\r\n            }}\r\n          />\r\n        )}\r\n        {options.map((opt, idx) => {\r\n          const isActive = opt.key === primaryValue;\r\n          return (\r\n            <button\r\n              key={opt.key}\r\n              role=\"tab\"\r\n              aria-selected={isActive}\r\n              onClick={() => onPrimaryChange(opt.key)}\r\n              style={{\r\n                position: 'relative',\r\n                zIndex: 1,\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                background: 'transparent',\r\n                border: 'none',\r\n                cursor: 'pointer',\r\n                padding: `0 ${paddingX}px`,\r\n                fontSize,\r\n                fontWeight: 500,\r\n                color: isActive ? '#1f2937' : (isDarkMode ? 'rgba(255,255,255,0.70)' : 'rgba(0,0,0,0.55)'),\r\n                transition: 'color 200ms ease',\r\n                minWidth: 0,\r\n                whiteSpace: 'nowrap'\r\n              }}\r\n              ref={el => { primaryBtnRefs.current[idx] = el; }}\r\n            >\r\n              {opt.label}\r\n            </button>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* Secondary Filter - collapsed by default, expands on hover/focus */}\r\n      {!shouldHideSecondary && currentOption && currentOption.subOptions.length > 0 && (\r\n        <div\r\n          ref={secondaryWrapperRef}\r\n          onMouseEnter={() => setIsSecondaryExpanded(true)}\r\n          onMouseLeave={() => setIsSecondaryExpanded(false)}\r\n          onFocus={() => setIsSecondaryExpanded(true)}\r\n          onBlur={() => {\r\n            // Defer check to allow focus to move within children\r\n            setTimeout(() => {\r\n              const el = secondaryWrapperRef.current;\r\n              if (el && !el.contains(document.activeElement)) {\r\n                setIsSecondaryExpanded(false);\r\n              }\r\n            }, 0);\r\n          }}\r\n          aria-label=\"Secondary filter container\"\r\n          style={{\r\n            overflow: 'hidden',\r\n            width: isSecondaryExpanded ? 'auto' : 'fit-content',\r\n            transition: 'width 320ms cubic-bezier(.4,.2,.2,1)',\r\n          }}\r\n        >\r\n          <div\r\n            role=\"tablist\"\r\n            aria-label=\"Secondary filter\"\r\n            style={segmentStyle}\r\n            ref={secondaryContainerRef}\r\n            tabIndex={0}\r\n            onKeyDown={onSecondaryKeyDown}\r\n          >\r\n            {/* Show only active option when collapsed */}\r\n            {isSecondaryExpanded ? (\r\n              <>\r\n                {secondaryActiveIndex >= 0 && (\r\n                  <span\r\n                    aria-hidden=\"true\"\r\n                    style={{\r\n                      pointerEvents: 'none',\r\n                      position: 'absolute',\r\n                      top: 4,\r\n                      height: Math.max(0, height - 8),\r\n                      left: secondaryThumbRect.left,\r\n                      width: secondaryThumbRect.width,\r\n                      background: '#FFFFFF',\r\n                      borderRadius: height / 2 - 4,\r\n                      transition: 'left 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94), width 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94)',\r\n                      boxShadow: isDarkMode\r\n                        ? '0 1px 3px rgba(0,0,0,0.3), 0 1px 2px rgba(0,0,0,0.24)'\r\n                        : '0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.08)',\r\n                    }}\r\n                  />\r\n                )}\r\n                {currentOption.subOptions.map((subOpt, idx) => {\r\n                  const isActive = subOpt.key === secondaryValue;\r\n                  return (\r\n                    <button\r\n                      key={subOpt.key}\r\n                      role=\"tab\"\r\n                      aria-selected={isActive}\r\n                      disabled={subOpt.disabled}\r\n                      onClick={() => !subOpt.disabled && onSecondaryChange(subOpt.key)}\r\n                      style={{\r\n                        position: 'relative',\r\n                        zIndex: 1,\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        gap: 6,\r\n                        background: 'transparent',\r\n                        border: 'none',\r\n                        cursor: subOpt.disabled ? 'not-allowed' : 'pointer',\r\n                        padding: `0 ${paddingX}px`,\r\n                        fontSize,\r\n                        fontWeight: 500,\r\n                        color: isActive ? '#1f2937' : (isDarkMode ? 'rgba(255,255,255,0.70)' : 'rgba(0,0,0,0.55)'),\r\n                        transition: `color 160ms, opacity 240ms ease-out ${idx * 40}ms, transform 240ms ease-out ${idx * 40}ms`,\r\n                        minWidth: 0,\r\n                        whiteSpace: 'nowrap',\r\n                        flexShrink: 0,\r\n                        opacity: isSecondaryExpanded ? 1 : 0,\r\n                        transform: isSecondaryExpanded ? 'translateX(0) scale(1)' : 'translateX(-8px) scale(0.95)',\r\n                      }}\r\n                      ref={el => { secondaryBtnRefs.current[idx] = el; }}\r\n                    >\r\n                      <span>{subOpt.label}</span>\r\n                      {typeof subOpt.badge !== 'undefined' && (\r\n                        <span style={{\r\n                          background: isActive\r\n                            ? (isDarkMode ? 'rgba(0,0,0,0.15)' : 'rgba(0,0,0,0.08)')\r\n                            : (isDarkMode ? 'rgba(255,255,255,0.15)' : 'rgba(0,0,0,0.06)'),\r\n                          color: isActive\r\n                            ? (isDarkMode ? '#1f2937' : '#1f2937')\r\n                            : (isDarkMode ? 'rgba(255,255,255,0.8)' : 'rgba(0,0,0,0.65)'),\r\n                          borderRadius: 8,\r\n                          padding: '2px 6px',\r\n                          fontSize: fontSize - 2,\r\n                          fontWeight: 600,\r\n                          lineHeight: 1.2,\r\n                        }}>{subOpt.badge}</span>\r\n                      )}\r\n                    </button>\r\n                  );\r\n                })}\r\n              </>\r\n            ) : (\r\n              // Collapsed state - show only active option\r\n              <>\r\n                <span\r\n                  aria-hidden=\"true\"\r\n                  style={{\r\n                    pointerEvents: 'none',\r\n                    position: 'absolute',\r\n                    top: 4,\r\n                    height: Math.max(0, height - 8),\r\n                    left: 4,\r\n                    right: 4,\r\n                    background: '#FFFFFF',\r\n                    borderRadius: height / 2 - 4,\r\n                    boxShadow: isDarkMode\r\n                      ? '0 1px 3px rgba(0,0,0,0.3), 0 1px 2px rgba(0,0,0,0.24)'\r\n                      : '0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.08)',\r\n                  }}\r\n                />\r\n                {(() => {\r\n                  const activeSubOpt = currentOption.subOptions[secondaryActiveIndex];\r\n                  if (!activeSubOpt) return null;\r\n                  return (\r\n                    <button\r\n                      key={activeSubOpt.key}\r\n                      role=\"tab\"\r\n                      aria-selected={true}\r\n                      style={{\r\n                        position: 'relative',\r\n                        zIndex: 1,\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        gap: 6,\r\n                        background: 'transparent',\r\n                        border: 'none',\r\n                        cursor: 'pointer',\r\n                        padding: `0 ${paddingX}px`,\r\n                        fontSize,\r\n                        fontWeight: 500,\r\n                        color: '#1f2937',\r\n                        minWidth: 0,\r\n                        whiteSpace: 'nowrap',\r\n                      }}\r\n                    >\r\n                      <span>{activeSubOpt.label}</span>\r\n                      {typeof activeSubOpt.badge !== 'undefined' && (\r\n                        <span style={{\r\n                          background: isDarkMode ? 'rgba(0,0,0,0.15)' : 'rgba(0,0,0,0.08)',\r\n                          color: '#1f2937',\r\n                          borderRadius: 8,\r\n                          padding: '2px 6px',\r\n                          fontSize: fontSize - 2,\r\n                          fontWeight: 600,\r\n                          lineHeight: 1.2,\r\n                        }}>{activeSubOpt.badge}</span>\r\n                      )}\r\n                    </button>\r\n                  );\r\n                })()}\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TwoLayerFilter;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useTheme } from '../../app/functionality/ThemeContext';\r\nimport { colours } from '../../app/styles/colours';\r\nimport { \r\n  MdClose, \r\n  MdCheckBox, \r\n  MdInfo, \r\n  MdError,\r\n  MdMoreHoriz,\r\n  MdAccessTime,\r\n  MdPending,\r\n  MdEmail,\r\n  MdCheckCircle,\r\n  MdDrafts\r\n} from 'react-icons/md';\r\n\r\ninterface IDVerificationDetails {\r\n  instructionRef: string;\r\n  clientName: string;\r\n  clientEmail: string;\r\n  overallResult: string;\r\n  pepResult: string;\r\n  addressResult: string;\r\n  rawResponse: string | any; // Raw Tiller API response\r\n  checkedDate: string;\r\n  documentsRequested?: boolean;\r\n  documentsReceived?: boolean;\r\n}\r\n\r\ninterface IDVerificationReviewModalProps {\r\n  isVisible: boolean;\r\n  details: IDVerificationDetails | null;\r\n  onClose: () => void;\r\n  onApprove: (instructionRef: string) => Promise<void>;\r\n  onRequestDocuments?: (instructionRef: string) => Promise<void>; // New action\r\n  onOverride?: (instructionRef: string) => Promise<void>; // New action\r\n}\r\n\r\nconst IDVerificationReviewModal: React.FC<IDVerificationReviewModalProps> = ({\r\n  isVisible,\r\n  details,\r\n  onClose,\r\n  onApprove,\r\n  onRequestDocuments,\r\n  onOverride\r\n}) => {\r\n  const { isDarkMode } = useTheme();\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [emailSending, setEmailSending] = useState(false);\r\n  const [showDevControls, setShowDevControls] = useState(false);\r\n\r\n  // Close dropdown when clicking outside\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      if (showDevControls && !(event.target as Element)?.closest('[data-dev-controls]')) {\r\n        setShowDevControls(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, [showDevControls]);\r\n  \r\n  // Development testing function to switch states\r\n  const switchTestState = async (newState: string) => {\r\n    // Temporarily enabled in production for testing\r\n    // if (process.env.NODE_ENV !== 'development') return;\r\n    \r\n    try {\r\n      const response = await fetch(`/api/verify-id/${details?.instructionRef}/test-state`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ state: newState })\r\n      });\r\n      \r\n      if (response.ok) {\r\n        // Just close the modal - the parent will refresh the data when reopened\r\n        onClose();\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to switch test state:', error);\r\n    }\r\n  };\r\n\r\n  // Send email to request additional documents via server route\r\n  const sendDocumentRequestEmail = async () => {\r\n    if (!details?.instructionRef) {\r\n      alert('No instruction reference available');\r\n      return;\r\n    }\r\n\r\n    setEmailSending(true);\r\n    \r\n    try {\r\n      console.log(`Sending document request for ${details.instructionRef}`);\r\n      \r\n      const response = await fetch(`/api/verify-id/${details.instructionRef}/request-documents`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Failed to send email');\r\n      }\r\n\r\n      const result = await response.json();\r\n      console.log('Document request response:', result);\r\n\r\n      // Update documents requested status\r\n      if (onRequestDocuments) {\r\n        await onRequestDocuments(details.instructionRef);\r\n      }\r\n\r\n      alert(`Document request email sent successfully to ${result.recipient}!`);\r\n    } catch (error: any) {\r\n      console.error('Email send error:', error);\r\n      alert(`Failed to send email: ${error.message}`);\r\n    } finally {\r\n      setEmailSending(false);\r\n    }\r\n  };\r\n\r\n  // Draft email functionality - sends email to fee earner directly\r\n  const draftDocumentRequestEmail = async () => {\r\n    if (!details?.instructionRef) {\r\n      alert('No instruction reference available');\r\n      return;\r\n    }\r\n\r\n    setEmailSending(true);\r\n    \r\n    try {\r\n      console.log(`Drafting document request for fee earner for ${details.instructionRef}`);\r\n      console.log(`Draft API URL: /api/verify-id/${details.instructionRef}/draft-request`);\r\n      \r\n      const response = await fetch(`/api/verify-id/${details.instructionRef}/draft-request`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n\r\n      console.log('Draft API response status:', response.status);\r\n      console.log('Draft API response headers:', response.headers);\r\n\r\n      if (!response.ok) {\r\n        const responseText = await response.text();\r\n        console.log('Draft API error response text:', responseText);\r\n        try {\r\n          const errorData = JSON.parse(responseText);\r\n          throw new Error(errorData.error || 'Failed to send draft email');\r\n        } catch (parseError) {\r\n          throw new Error(`Server returned HTML instead of JSON. Status: ${response.status}`);\r\n        }\r\n      }\r\n\r\n      const result = await response.json();\r\n      console.log('Draft email response:', result);\r\n\r\n      alert(`Draft email sent to fee earner successfully!`);\r\n    } catch (error: any) {\r\n      console.error('Draft email send error:', error);\r\n      alert(`Failed to send draft email: ${error.message}`);\r\n    } finally {\r\n      setEmailSending(false);\r\n    }\r\n  };\r\n\r\n  if (!isVisible || !details) return null;\r\n\r\n  // Determine the current workflow state\r\n  const getWorkflowState = () => {\r\n    // If already verified, no workflow needed\r\n    if (details?.overallResult?.toLowerCase() === 'verified') return 'verified' as const;\r\n    \r\n    if (details?.documentsReceived === true) return 'documents-received' as const;\r\n    if (details?.overallResult?.toLowerCase() === 'documents requested' || details?.documentsRequested === true) return 'documents-pending' as const;\r\n    return 'fresh-failure' as const;\r\n  };\r\n\r\n  const workflowState = getWorkflowState();\r\n\r\n  // Check if documents have already been requested\r\n  const isDocumentsAlreadyRequested = details.overallResult?.toLowerCase() === 'documents requested' || details.documentsRequested;\r\n\r\n  const handleAction = async (action: 'approve' | 'request' | 'draft' | 'override') => {\r\n    setIsProcessing(true);\r\n    try {\r\n      switch (action) {\r\n        case 'approve':\r\n          await onApprove(details.instructionRef);\r\n          break;\r\n        case 'request':\r\n          await sendDocumentRequestEmail();\r\n          break;\r\n        case 'draft':\r\n          await draftDocumentRequestEmail();\r\n          return; // Don't close modal after drafting\r\n        case 'override':\r\n          await onApprove(details.instructionRef); // Override should approve the verification\r\n          break;\r\n      }\r\n      onClose();\r\n    } catch (error) {\r\n      console.error(`Failed to ${action} ID verification:`, error);\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  const getResultIcon = (result: string) => {\r\n    const iconStyle = { \r\n      color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n      fontSize: '16px'\r\n    };\r\n    \r\n    if (result?.toLowerCase() === 'passed') {\r\n      return <MdCheckBox style={iconStyle} />;\r\n    } else if (result?.toLowerCase() === 'review') {\r\n      return <MdInfo style={iconStyle} />;\r\n    }\r\n    return <MdError style={iconStyle} />;\r\n  };\r\n\r\n  const getResultColor = (result: string) => {\r\n    if (result?.toLowerCase() === 'passed' || result?.toLowerCase() === 'verified') return colours.green;\r\n    if (result?.toLowerCase() === 'review') return colours.orange;\r\n    return colours.red;\r\n  };\r\n\r\n  const getRecommendedAction = (details: IDVerificationDetails): string => {\r\n    const rawResponse = parseRawResponse(details.rawResponse);\r\n    \r\n    // Check specific failure types from Tiller checkStatuses\r\n    const hasPEPIssues = details.pepResult?.toLowerCase() === 'review' || details.pepResult?.toLowerCase() === 'fail';\r\n    const hasAddressIssues = details.addressResult?.toLowerCase() === 'review' || details.addressResult?.toLowerCase() === 'fail';\r\n    const hasOverallIssues = details.overallResult?.toLowerCase() === 'review' || details.overallResult?.toLowerCase() === 'fail';\r\n    \r\n    if (hasPEPIssues) {\r\n      return 'PEP/Sanctions match detected - requires immediate manual review. Do not proceed without thorough investigation of the match.';\r\n    }\r\n    \r\n    if (hasAddressIssues && hasOverallIssues) {\r\n      return 'Multiple verification issues detected. Consider requesting utility bill, bank statement, or council tax document to verify both identity and address.';\r\n    }\r\n    \r\n    if (hasAddressIssues) {\r\n      return 'Address verification failed. Request recent utility bill, council tax statement, or bank statement showing current address.';\r\n    }\r\n    \r\n    if (hasOverallIssues) {\r\n      return 'Identity verification inconclusive. Request additional photo ID (passport, driving licence) or recent official correspondence.';\r\n    }\r\n    \r\n    return 'Standard verification checks could not be completed. Consider requesting additional documentation or manual override if client is known to the firm.';\r\n  };\r\n\r\n  const parseRawResponse = (rawResponse: string | any) => {\r\n    if (typeof rawResponse === 'string') {\r\n      try {\r\n        return JSON.parse(rawResponse);\r\n      } catch {\r\n        return null;\r\n      }\r\n    }\r\n    return rawResponse;\r\n  };\r\n\r\n  const getCheckStatuses = (details: IDVerificationDetails) => {\r\n    const rawResponse = parseRawResponse(details.rawResponse);\r\n    return rawResponse?.checkStatuses || [];\r\n  };\r\n\r\n  const getCheckName = (checkTypeId: number): string => {\r\n    switch (checkTypeId) {\r\n      case 1: return 'Address Verification';\r\n      case 2: return 'PEP & Sanctions Check';\r\n      case 3: return 'Identity Verification';\r\n      case 4: return 'Document Verification';\r\n      default: return `Check Type ${checkTypeId}`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      backgroundColor: 'rgba(0, 0, 0, 0.6)',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      zIndex: 10000,\r\n      padding: '20px',\r\n      backdropFilter: 'blur(4px)'\r\n    }}>\r\n      <div style={{\r\n        background: isDarkMode \r\n          ? 'linear-gradient(135deg, #2e2e2e 0%, #3a3a3a 100%)'\r\n          : 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n        borderRadius: '12px',\r\n        padding: '32px',\r\n        maxWidth: '650px',\r\n        width: '100%',\r\n        maxHeight: '85vh',\r\n        overflowY: 'auto',\r\n        boxShadow: isDarkMode \r\n          ? '0 20px 40px rgba(0, 0, 0, 0.4), 0 4px 6px rgba(0, 0, 0, 0.3)' \r\n          : '0 20px 40px rgba(0, 0, 0, 0.15), 0 4px 6px rgba(0, 0, 0, 0.07)',\r\n        position: 'relative',\r\n        border: isDarkMode ? '1px solid rgba(255, 255, 255, 0.1)' : '1px solid rgba(0, 0, 0, 0.05)'\r\n      }}>\r\n        {/* Header */}\r\n        <div style={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'space-between',\r\n          marginBottom: '28px',\r\n          paddingBottom: '20px',\r\n          borderBottom: `2px solid ${isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.06)'}`\r\n        }}>\r\n          <div>\r\n            <h2 style={{\r\n              margin: 0,\r\n              color: isDarkMode ? colours.dark.text : colours.darkBlue,\r\n              fontSize: '22px',\r\n              fontWeight: '700',\r\n              letterSpacing: '-0.5px'\r\n            }}>\r\n              ID Verification Review\r\n            </h2>\r\n            <p style={{\r\n              margin: '6px 0 0',\r\n              color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n              fontSize: '15px',\r\n              fontWeight: '500'\r\n            }}>\r\n              {details.instructionRef} • {details.clientName}\r\n            </p>\r\n          </div>\r\n          <button\r\n            onClick={onClose}\r\n            style={{\r\n              background: isDarkMode\r\n                ? 'linear-gradient(135deg, #3a3a3a 0%, #2e2e2e 100%)'\r\n                : 'linear-gradient(135deg, #F8FAFC 0%, #E2E8F0 100%)',\r\n              border: `1px solid ${isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.08)'}`,\r\n              color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n              fontSize: '16px',\r\n              cursor: 'pointer',\r\n              padding: '10px',\r\n              borderRadius: '8px',\r\n              transition: 'all 0.2s ease',\r\n              boxShadow: isDarkMode \r\n                ? '0 2px 4px rgba(0, 0, 0, 0.3)' \r\n                : '0 2px 4px rgba(0, 0, 0, 0.07)'\r\n            }}\r\n            onMouseEnter={(e) => {\r\n              e.currentTarget.style.transform = 'translateY(-1px)';\r\n              e.currentTarget.style.boxShadow = isDarkMode \r\n                ? '0 4px 8px rgba(0, 0, 0, 0.4)' \r\n                : '0 4px 8px rgba(0, 0, 0, 0.12)';\r\n            }}\r\n            onMouseLeave={(e) => {\r\n              e.currentTarget.style.transform = 'translateY(0)';\r\n              e.currentTarget.style.boxShadow = isDarkMode \r\n                ? '0 2px 4px rgba(0, 0, 0, 0.3)' \r\n                : '0 2px 4px rgba(0, 0, 0, 0.07)';\r\n            }}\r\n          >\r\n            <MdClose />\r\n          </button>\r\n        </div>\r\n\r\n        {/* Date Info */}\r\n        <div style={{\r\n          fontSize: '13px',\r\n          color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n          textAlign: 'center',\r\n          fontWeight: '500',\r\n          marginBottom: '20px',\r\n          paddingBottom: '18px',\r\n          borderBottom: `1px solid ${isDarkMode ? 'rgba(255, 255, 255, 0.08)' : 'rgba(0, 0, 0, 0.08)'}`,\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          gap: '6px'\r\n        }}>\r\n          Verified on {new Date(details.checkedDate).toLocaleDateString('en-GB', { \r\n            day: '2-digit', \r\n            month: '2-digit', \r\n            year: 'numeric' \r\n          })} at {new Date(details.checkedDate).toLocaleTimeString('en-GB', {\r\n            hour: '2-digit',\r\n            minute: '2-digit',\r\n            hour12: false\r\n          })}\r\n        </div>\r\n\r\n        {/* Action Items - Moved to top for importance */}\r\n        {/* Verification Results with Integrated Actions */}\r\n        <div style={{ marginBottom: '28px' }}>\r\n          <h3 style={{\r\n            color: isDarkMode ? colours.dark.text : colours.light.text,\r\n            fontSize: '18px',\r\n            marginBottom: '18px',\r\n            fontWeight: '600',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            gap: '8px'\r\n          }}>\r\n            Verification Results\r\n          </h3>\r\n          \r\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '14px' }}>\r\n            {/* Overall Result */}\r\n            <div style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              padding: '16px 18px',\r\n              background: isDarkMode \r\n                ? 'linear-gradient(135deg, #3a3a3a 0%, #2e2e2e 100%)'\r\n                : 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n              borderRadius: '10px',\r\n              border: `1px solid ${isDarkMode ? 'rgba(255, 255, 255, 0.08)' : 'rgba(0, 0, 0, 0.06)'}`,\r\n              boxShadow: isDarkMode \r\n                ? '0 2px 4px rgba(0, 0, 0, 0.3)' \r\n                : '0 2px 4px rgba(0, 0, 0, 0.05)',\r\n              transition: 'all 0.2s ease',\r\n              position: 'relative'\r\n            }}>\r\n              <div style={{ \r\n                marginRight: '14px', \r\n                fontSize: '18px',\r\n                padding: '4px',\r\n                borderRadius: '6px',\r\n                backgroundColor: isDarkMode ? 'rgba(255, 255, 255, 0.05)' : 'rgba(0, 0, 0, 0.03)'\r\n              }}>\r\n                {getResultIcon(details.overallResult)}\r\n              </div>\r\n              <div style={{ flex: 1 }}>\r\n                <strong style={{\r\n                  color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                  fontSize: '15px',\r\n                  fontWeight: '600'\r\n                }}>\r\n                  Overall Result\r\n                </strong>\r\n              </div>\r\n              <div style={{\r\n                color: getResultColor(details.overallResult),\r\n                fontWeight: '700',\r\n                fontSize: '15px',\r\n                padding: '4px 12px',\r\n                borderRadius: '6px',\r\n                backgroundColor: `${getResultColor(details.overallResult)}15`\r\n              }}>\r\n                {details.overallResult?.toUpperCase()}\r\n              </div>\r\n              \r\n              {/* Development Controls - Subtle Dropdown */}\r\n              {/* Temporarily enabled in production for testing */}\r\n              {(process.env.NODE_ENV === 'development' || true) && (\r\n                <div style={{ position: 'relative', marginLeft: '8px' }} data-dev-controls>\r\n                  <button\r\n                    onClick={() => setShowDevControls(!showDevControls)}\r\n                    style={{\r\n                      width: '24px',\r\n                      height: '24px',\r\n                      borderRadius: '4px',\r\n                      border: 'none',\r\n                      background: isDarkMode \r\n                        ? 'rgba(107, 114, 128, 0.15)' \r\n                        : 'rgba(107, 114, 128, 0.08)',\r\n                      color: isDarkMode \r\n                        ? 'rgba(156, 163, 175, 0.7)' \r\n                        : 'rgba(75, 85, 99, 0.6)',\r\n                      cursor: 'pointer',\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center',\r\n                      fontSize: '12px',\r\n                      transition: 'all 0.2s ease',\r\n                      opacity: 0.6\r\n                    }}\r\n                    onMouseEnter={(e) => {\r\n                      e.currentTarget.style.opacity = '1';\r\n                      e.currentTarget.style.background = isDarkMode \r\n                        ? 'rgba(107, 114, 128, 0.25)' \r\n                        : 'rgba(107, 114, 128, 0.15)';\r\n                    }}\r\n                    onMouseLeave={(e) => {\r\n                      e.currentTarget.style.opacity = '0.6';\r\n                      e.currentTarget.style.background = isDarkMode \r\n                        ? 'rgba(107, 114, 128, 0.15)' \r\n                        : 'rgba(107, 114, 128, 0.08)';\r\n                    }}\r\n                    title=\"Development Controls\"\r\n                  >\r\n                    ⚙\r\n                  </button>\r\n                  \r\n                  {showDevControls && (\r\n                    <div style={{\r\n                      position: 'absolute',\r\n                      top: '100%',\r\n                      right: 0,\r\n                      marginTop: '4px',\r\n                      background: isDarkMode \r\n                        ? 'linear-gradient(135deg, #2e2e2e 0%, #3a3a3a 100%)'\r\n                        : 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n                      border: `1px solid ${isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.08)'}`,\r\n                      borderRadius: '6px',\r\n                      boxShadow: isDarkMode \r\n                        ? '0 8px 16px rgba(0, 0, 0, 0.4)' \r\n                        : '0 8px 16px rgba(0, 0, 0, 0.1)',\r\n                      padding: '8px',\r\n                      minWidth: '140px',\r\n                      zIndex: 1000\r\n                    }}>\r\n                      <div style={{\r\n                        fontSize: '9px',\r\n                        fontWeight: '600',\r\n                        color: isDarkMode ? 'rgba(156, 163, 175, 0.8)' : 'rgba(75, 85, 99, 0.7)',\r\n                        marginBottom: '6px',\r\n                        textTransform: 'uppercase',\r\n                        letterSpacing: '0.5px'\r\n                      }}>\r\n                        Test States\r\n                      </div>\r\n                      \r\n                      <div style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        gap: '3px'\r\n                      }}>\r\n                        <button\r\n                          onClick={() => { switchTestState('fresh-failure'); setShowDevControls(false); }}\r\n                          style={{\r\n                            padding: '4px 8px',\r\n                            fontSize: '10px',\r\n                            background: `${colours.red}20`,\r\n                            color: colours.red,\r\n                            border: `1px solid ${colours.red}30`,\r\n                            borderRadius: '3px',\r\n                            cursor: 'pointer',\r\n                            transition: 'all 0.2s ease',\r\n                            textAlign: 'left'\r\n                          }}\r\n                          onMouseEnter={(e) => {\r\n                            e.currentTarget.style.background = `${colours.red}30`;\r\n                          }}\r\n                          onMouseLeave={(e) => {\r\n                            e.currentTarget.style.background = `${colours.red}20`;\r\n                          }}\r\n                        >\r\n                          Fresh Failure\r\n                        </button>\r\n                        \r\n                        <button\r\n                          onClick={() => { switchTestState('documents-pending'); setShowDevControls(false); }}\r\n                          style={{\r\n                            padding: '4px 8px',\r\n                            fontSize: '10px',\r\n                            background: `${colours.orange}20`,\r\n                            color: colours.orange,\r\n                            border: `1px solid ${colours.orange}30`,\r\n                            borderRadius: '3px',\r\n                            cursor: 'pointer',\r\n                            transition: 'all 0.2s ease',\r\n                            textAlign: 'left'\r\n                          }}\r\n                          onMouseEnter={(e) => {\r\n                            e.currentTarget.style.background = `${colours.orange}30`;\r\n                          }}\r\n                          onMouseLeave={(e) => {\r\n                            e.currentTarget.style.background = `${colours.orange}20`;\r\n                          }}\r\n                        >\r\n                          Docs Pending\r\n                        </button>\r\n                        \r\n                        <button\r\n                          onClick={() => { switchTestState('documents-received'); setShowDevControls(false); }}\r\n                          style={{\r\n                            padding: '4px 8px',\r\n                            fontSize: '10px',\r\n                            background: `${colours.blue}20`,\r\n                            color: colours.blue,\r\n                            border: `1px solid ${colours.blue}30`,\r\n                            borderRadius: '3px',\r\n                            cursor: 'pointer',\r\n                            transition: 'all 0.2s ease',\r\n                            textAlign: 'left'\r\n                          }}\r\n                          onMouseEnter={(e) => {\r\n                            e.currentTarget.style.background = `${colours.blue}30`;\r\n                          }}\r\n                          onMouseLeave={(e) => {\r\n                            e.currentTarget.style.background = `${colours.blue}20`;\r\n                          }}\r\n                        >\r\n                          Docs Received\r\n                        </button>\r\n                        \r\n                        <button\r\n                          onClick={() => { switchTestState('verified'); setShowDevControls(false); }}\r\n                          style={{\r\n                            padding: '4px 8px',\r\n                            fontSize: '10px',\r\n                            background: `${colours.green}20`,\r\n                            color: colours.green,\r\n                            border: `1px solid ${colours.green}30`,\r\n                            borderRadius: '3px',\r\n                            cursor: 'pointer',\r\n                            transition: 'all 0.2s ease',\r\n                            textAlign: 'left'\r\n                          }}\r\n                          onMouseEnter={(e) => {\r\n                            e.currentTarget.style.background = `${colours.green}30`;\r\n                          }}\r\n                          onMouseLeave={(e) => {\r\n                            e.currentTarget.style.background = `${colours.green}20`;\r\n                          }}\r\n                        >\r\n                          Verified\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Action Required Section - Only for failed states */}\r\n            {(workflowState === 'fresh-failure' || workflowState === 'documents-received') && (\r\n              <div style={{\r\n                padding: '18px 20px',\r\n                background: isDarkMode \r\n                  ? 'linear-gradient(135deg, rgba(54, 144, 206, 0.12) 0%, rgba(54, 144, 206, 0.06) 100%)'\r\n                  : 'linear-gradient(135deg, rgba(54, 144, 206, 0.06) 0%, rgba(54, 144, 206, 0.03) 100%)',\r\n                border: `1px solid ${colours.blue}30`,\r\n                borderRadius: '10px',\r\n                marginBottom: '6px'\r\n              }}>\r\n                <div style={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  gap: '12px',\r\n                  marginBottom: '16px'\r\n                }}>\r\n                  <div style={{\r\n                    padding: '6px',\r\n                    borderRadius: '6px',\r\n                    backgroundColor: `${colours.blue}20`,\r\n                    color: colours.blue,\r\n                    display: 'flex',\r\n                    alignItems: 'center'\r\n                  }}>\r\n                    <MdPending size={18} />\r\n                  </div>\r\n                  <div>\r\n                    <div style={{\r\n                      color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                      fontWeight: '600',\r\n                      fontSize: '15px'\r\n                    }}>\r\n                      Action Required\r\n                    </div>\r\n                    <div style={{\r\n                      color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n                      fontSize: '13px'\r\n                    }}>\r\n                      {workflowState === 'fresh-failure' \r\n                        ? 'Verification checks need review - choose action below'\r\n                        : 'Additional documents received - review and approve'\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div style={{\r\n                  display: 'flex',\r\n                  gap: '12px',\r\n                  flexWrap: 'wrap'\r\n                }}>\r\n                  {workflowState === 'fresh-failure' && !isDocumentsAlreadyRequested && (\r\n                    <>\r\n                      <button\r\n                        onClick={() => handleAction('request')}\r\n                        disabled={true} // Always disabled now - greyed out\r\n                        style={{\r\n                          background: '#999', // Greyed out\r\n                          color: '#666',\r\n                          border: 'none',\r\n                          borderRadius: '8px',\r\n                          padding: '12px 18px',\r\n                          fontSize: '13px',\r\n                          fontWeight: '600',\r\n                          cursor: 'not-allowed',\r\n                          opacity: 0.5,\r\n                          transition: 'all 0.2s ease',\r\n                          display: 'flex',\r\n                          alignItems: 'center',\r\n                          gap: '8px'\r\n                        }}\r\n                      >\r\n                        <MdEmail size={16} />\r\n                        Request Additional Documents\r\n                      </button>\r\n                      \r\n                      <button\r\n                        onClick={() => handleAction('draft')}\r\n                        disabled={emailSending}\r\n                        style={{\r\n                          background: emailSending \r\n                            ? `${colours.blue}60` \r\n                            : `linear-gradient(135deg, ${colours.blue} 0%, ${colours.blue}CC 100%)`,\r\n                          color: '#FFFFFF',\r\n                          border: 'none',\r\n                          borderRadius: '8px',\r\n                          padding: '12px 18px',\r\n                          fontSize: '13px',\r\n                          fontWeight: '600',\r\n                          cursor: emailSending ? 'not-allowed' : 'pointer',\r\n                          transition: 'all 0.2s ease',\r\n                          boxShadow: isDarkMode \r\n                            ? '0 4px 8px rgba(54, 144, 206, 0.3)'\r\n                            : '0 4px 8px rgba(54, 144, 206, 0.2)',\r\n                          display: 'flex',\r\n                          alignItems: 'center',\r\n                          gap: '8px'\r\n                        }}\r\n                        onMouseEnter={(e) => {\r\n                          if (!emailSending) {\r\n                            e.currentTarget.style.transform = 'translateY(-1px)';\r\n                            e.currentTarget.style.boxShadow = isDarkMode \r\n                              ? '0 6px 12px rgba(54, 144, 206, 0.4)'\r\n                              : '0 6px 12px rgba(54, 144, 206, 0.3)';\r\n                          }\r\n                        }}\r\n                        onMouseLeave={(e) => {\r\n                          e.currentTarget.style.transform = 'translateY(0)';\r\n                          e.currentTarget.style.boxShadow = isDarkMode \r\n                            ? '0 4px 8px rgba(54, 144, 206, 0.3)'\r\n                            : '0 4px 8px rgba(54, 144, 206, 0.2)';\r\n                        }}\r\n                      >\r\n                        <MdDrafts size={16} />\r\n                        {emailSending ? 'Sending...' : 'Draft Request (to yourself) first'}\r\n                      </button>\r\n                    </>\r\n                  )}\r\n                  \r\n                  <button\r\n                    onClick={() => handleAction('override')}\r\n                    disabled={isProcessing}\r\n                    style={{\r\n                      background: isProcessing \r\n                        ? `${colours.green}60` \r\n                        : `linear-gradient(135deg, ${colours.green} 0%, ${colours.green}CC 100%)`,\r\n                      color: '#FFFFFF',\r\n                      border: 'none',\r\n                      borderRadius: '8px',\r\n                      padding: '12px 18px',\r\n                      fontSize: '13px',\r\n                      fontWeight: '600',\r\n                      cursor: isProcessing ? 'not-allowed' : 'pointer',\r\n                      transition: 'all 0.2s ease',\r\n                      boxShadow: isDarkMode \r\n                        ? '0 4px 8px rgba(32, 178, 108, 0.3)'\r\n                        : '0 4px 8px rgba(32, 178, 108, 0.2)',\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      gap: '8px'\r\n                    }}\r\n                    onMouseEnter={(e) => {\r\n                      if (!isProcessing) {\r\n                        e.currentTarget.style.transform = 'translateY(-1px)';\r\n                        e.currentTarget.style.boxShadow = isDarkMode \r\n                          ? '0 6px 12px rgba(32, 178, 108, 0.4)'\r\n                          : '0 6px 12px rgba(32, 178, 108, 0.3)';\r\n                      }\r\n                    }}\r\n                    onMouseLeave={(e) => {\r\n                      e.currentTarget.style.transform = 'translateY(0)';\r\n                      e.currentTarget.style.boxShadow = isDarkMode \r\n                        ? '0 4px 8px rgba(32, 178, 108, 0.3)'\r\n                        : '0 4px 8px rgba(32, 178, 108, 0.2)';\r\n                    }}\r\n                  >\r\n                    <MdCheckCircle size={16} />\r\n                    {isProcessing ? 'Processing...' : \r\n                      (workflowState === 'documents-received' ? 'Approve Verification' : 'Skip & Approve')\r\n                    }\r\n                  </button>\r\n                </div>\r\n                \r\n                {workflowState === 'fresh-failure' && isDocumentsAlreadyRequested && (\r\n                  <div style={{\r\n                    marginTop: '12px',\r\n                    padding: '10px 14px',\r\n                    background: isDarkMode \r\n                      ? 'rgba(107, 114, 128, 0.15)'\r\n                      : 'rgba(107, 114, 128, 0.08)',\r\n                    border: `1px solid ${isDarkMode ? 'rgba(107, 114, 128, 0.3)' : 'rgba(107, 114, 128, 0.2)'}`,\r\n                    borderRadius: '6px',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    gap: '8px'\r\n                  }}>\r\n                    <MdInfo size={16} style={{ color: '#6B7280' }} />\r\n                    <span style={{\r\n                      color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n                      fontSize: '12px',\r\n                      fontWeight: '500'\r\n                    }}>\r\n                      Additional documents already requested\r\n                    </span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            {/* Status Indicators for other states */}\r\n            {workflowState === 'documents-pending' && (\r\n              <div style={{\r\n                padding: '16px 18px',\r\n                background: isDarkMode \r\n                  ? 'linear-gradient(135deg, rgba(255, 140, 0, 0.12) 0%, rgba(255, 140, 0, 0.06) 100%)'\r\n                  : 'linear-gradient(135deg, rgba(255, 140, 0, 0.06) 0%, rgba(255, 140, 0, 0.03) 100%)',\r\n                border: `1px solid ${colours.orange}30`,\r\n                borderRadius: '10px',\r\n                marginBottom: '6px',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                gap: '12px'\r\n              }}>\r\n                <div style={{\r\n                  padding: '6px',\r\n                  borderRadius: '6px',\r\n                  backgroundColor: `${colours.orange}20`,\r\n                  color: colours.orange\r\n                }}>\r\n                  <MdAccessTime size={18} />\r\n                </div>\r\n                <div>\r\n                  <div style={{\r\n                    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                    fontWeight: '600',\r\n                    fontSize: '15px'\r\n                  }}>\r\n                    Awaiting Client Response\r\n                  </div>\r\n                  <div style={{\r\n                    color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n                    fontSize: '13px'\r\n                  }}>\r\n                    Waiting for additional documents from client\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {workflowState === 'verified' && (\r\n              <div style={{\r\n                padding: '16px 18px',\r\n                background: isDarkMode \r\n                  ? 'linear-gradient(135deg, rgba(32, 178, 108, 0.12) 0%, rgba(32, 178, 108, 0.06) 100%)'\r\n                  : 'linear-gradient(135deg, rgba(32, 178, 108, 0.06) 0%, rgba(32, 178, 108, 0.03) 100%)',\r\n                border: `1px solid ${colours.green}30`,\r\n                borderRadius: '10px',\r\n                marginBottom: '6px',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                gap: '12px'\r\n              }}>\r\n                <div style={{\r\n                  padding: '6px',\r\n                  borderRadius: '6px',\r\n                  backgroundColor: `${colours.green}20`,\r\n                  color: colours.green\r\n                }}>\r\n                  <MdCheckBox size={18} />\r\n                </div>\r\n                <div>\r\n                  <div style={{\r\n                    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                    fontWeight: '600',\r\n                    fontSize: '15px'\r\n                  }}>\r\n                    Verification Complete\r\n                  </div>\r\n                  <div style={{\r\n                    color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n                    fontSize: '13px'\r\n                  }}>\r\n                    ID verification has been approved and completed\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* PEP & Sanctions Check */}\r\n            <div style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              padding: '16px 18px',\r\n              background: isDarkMode \r\n                ? 'linear-gradient(135deg, #3a3a3a 0%, #2e2e2e 100%)'\r\n                : 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n              borderRadius: '10px',\r\n              border: `1px solid ${isDarkMode ? 'rgba(255, 255, 255, 0.08)' : 'rgba(0, 0, 0, 0.06)'}`,\r\n              boxShadow: isDarkMode \r\n                ? '0 2px 4px rgba(0, 0, 0, 0.3)' \r\n                : '0 2px 4px rgba(0, 0, 0, 0.05)',\r\n              transition: 'all 0.2s ease'\r\n            }}>\r\n              <div style={{ \r\n                marginRight: '14px', \r\n                fontSize: '18px',\r\n                padding: '4px',\r\n                borderRadius: '6px',\r\n                backgroundColor: isDarkMode ? 'rgba(255, 255, 255, 0.05)' : 'rgba(0, 0, 0, 0.03)'\r\n              }}>\r\n                {getResultIcon(details.pepResult)}\r\n              </div>\r\n              <div style={{ flex: 1 }}>\r\n                <strong style={{\r\n                  color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                  fontSize: '15px',\r\n                  fontWeight: '600'\r\n                }}>\r\n                  PEP & Sanctions Check\r\n                </strong>\r\n              </div>\r\n              <div style={{\r\n                color: getResultColor(details.pepResult),\r\n                fontWeight: '700',\r\n                fontSize: '15px',\r\n                padding: '4px 12px',\r\n                borderRadius: '6px',\r\n                backgroundColor: `${getResultColor(details.pepResult)}15`\r\n              }}>\r\n                {details.pepResult?.toUpperCase()}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Address Verification */}\r\n            <div style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              padding: '16px 18px',\r\n              background: isDarkMode \r\n                ? 'linear-gradient(135deg, #3a3a3a 0%, #2e2e2e 100%)'\r\n                : 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n              borderRadius: '10px',\r\n              border: `1px solid ${isDarkMode ? 'rgba(255, 255, 255, 0.08)' : 'rgba(0, 0, 0, 0.06)'}`,\r\n              boxShadow: isDarkMode \r\n                ? '0 2px 4px rgba(0, 0, 0, 0.3)' \r\n                : '0 2px 4px rgba(0, 0, 0, 0.05)',\r\n              transition: 'all 0.2s ease'\r\n            }}>\r\n              <div style={{ \r\n                marginRight: '14px', \r\n                fontSize: '18px',\r\n                padding: '4px',\r\n                borderRadius: '6px',\r\n                backgroundColor: isDarkMode ? 'rgba(255, 255, 255, 0.05)' : 'rgba(0, 0, 0, 0.03)'\r\n              }}>\r\n                {getResultIcon(details.addressResult)}\r\n              </div>\r\n              <div style={{ flex: 1 }}>\r\n                <strong style={{\r\n                  color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                  fontSize: '15px',\r\n                  fontWeight: '600'\r\n                }}>\r\n                  Address Verification\r\n                </strong>\r\n              </div>\r\n              <div style={{\r\n                color: getResultColor(details.addressResult),\r\n                fontWeight: '700',\r\n                fontSize: '15px',\r\n                padding: '4px 12px',\r\n                borderRadius: '6px',\r\n                backgroundColor: `${getResultColor(details.addressResult)}15`\r\n              }}>\r\n                {details.addressResult?.toUpperCase()}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Document Request Info Box */}\r\n        <div style={{\r\n          marginBottom: '28px'\r\n        }}>\r\n          {workflowState === 'verified' && (\r\n            <div style={{\r\n              padding: '18px 20px',\r\n              background: isDarkMode \r\n                ? 'linear-gradient(135deg, rgba(32, 178, 108, 0.15) 0%, rgba(32, 178, 108, 0.08) 100%)'\r\n                : 'linear-gradient(135deg, rgba(32, 178, 108, 0.08) 0%, rgba(32, 178, 108, 0.04) 100%)',\r\n              border: `2px solid ${colours.green}20`,\r\n              borderRadius: '10px',\r\n              position: 'relative',\r\n              overflow: 'hidden'\r\n            }}>\r\n              <div style={{\r\n                position: 'absolute',\r\n                top: 0,\r\n                left: 0,\r\n                width: '4px',\r\n                height: '100%',\r\n                background: colours.green\r\n              }} />\r\n              <div style={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                gap: '12px',\r\n                paddingLeft: '12px'\r\n              }}>\r\n                <div style={{\r\n                  fontSize: '20px',\r\n                  padding: '8px',\r\n                  borderRadius: '8px',\r\n                  backgroundColor: `${colours.green}20`,\r\n                  color: colours.green,\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center'\r\n                }}>\r\n                  <MdCheckBox size={20} />\r\n                </div>\r\n                <div>\r\n                  <div style={{\r\n                    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                    fontWeight: '700',\r\n                    fontSize: '15px',\r\n                    marginBottom: '4px'\r\n                  }}>\r\n                    ID Verification Complete\r\n                  </div>\r\n                  <div style={{\r\n                    color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n                    fontSize: '13px'\r\n                  }}>\r\n                    This verification has been approved and completed.\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Action Buttons */}\r\n        <div style={{\r\n          display: 'flex',\r\n          gap: '14px',\r\n          justifyContent: 'flex-end',\r\n          flexWrap: 'wrap'\r\n        }}>\r\n          {/* Conditional buttons based on workflow state */}\r\n          {workflowState === 'verified' && (\r\n            <button\r\n              onClick={onClose}\r\n              style={{\r\n                padding: '12px 24px',\r\n                border: 'none',\r\n                background: `linear-gradient(135deg, ${colours.green} 0%, #1a8c5a 100%)`,\r\n                color: 'white',\r\n                borderRadius: '8px',\r\n                fontSize: '14px',\r\n                fontWeight: '700',\r\n                cursor: 'pointer',\r\n                transition: 'all 0.2s ease',\r\n                boxShadow: '0 4px 6px rgba(32, 178, 108, 0.3)'\r\n              }}\r\n              onMouseEnter={(e) => {\r\n                e.currentTarget.style.transform = 'translateY(-1px)';\r\n                e.currentTarget.style.boxShadow = '0 6px 12px rgba(32, 178, 108, 0.4)';\r\n              }}\r\n              onMouseLeave={(e) => {\r\n                e.currentTarget.style.transform = 'translateY(0)';\r\n                e.currentTarget.style.boxShadow = '0 4px 6px rgba(32, 178, 108, 0.3)';\r\n              }}\r\n            >\r\n              Close\r\n            </button>\r\n          )}\r\n\r\n          {workflowState === 'fresh-failure' && (\r\n            <button\r\n              onClick={onClose}\r\n              style={{\r\n                padding: '12px 24px',\r\n                border: `2px solid ${isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(0, 0, 0, 0.1)'}`,\r\n                background: isDarkMode\r\n                  ? 'linear-gradient(135deg, #3a3a3a 0%, #2e2e2e 100%)'\r\n                  : 'linear-gradient(135deg, #F8FAFC 0%, #E2E8F0 100%)',\r\n                color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                borderRadius: '8px',\r\n                fontSize: '14px',\r\n                fontWeight: '600',\r\n                cursor: 'pointer',\r\n                transition: 'all 0.2s ease'\r\n              }}\r\n              onMouseEnter={(e) => {\r\n                e.currentTarget.style.transform = 'translateY(-1px)';\r\n                e.currentTarget.style.boxShadow = isDarkMode \r\n                  ? '0 6px 12px rgba(0, 0, 0, 0.3)'\r\n                  : '0 6px 12px rgba(0, 0, 0, 0.1)';\r\n              }}\r\n              onMouseLeave={(e) => {\r\n                e.currentTarget.style.transform = 'translateY(0)';\r\n                e.currentTarget.style.boxShadow = 'none';\r\n              }}\r\n            >\r\n              Close\r\n            </button>\r\n          )}\r\n\r\n          {workflowState === 'documents-pending' && (\r\n            <>\r\n              <button\r\n                onClick={onClose}\r\n                style={{\r\n                  padding: '12px 24px',\r\n                  border: `2px solid ${isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(0, 0, 0, 0.1)'}`,\r\n                  background: isDarkMode\r\n                    ? 'linear-gradient(135deg, #3a3a3a 0%, #2e2e2e 100%)'\r\n                    : 'linear-gradient(135deg, #F8FAFC 0%, #E2E8F0 100%)',\r\n                  color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                  borderRadius: '8px',\r\n                  fontSize: '14px',\r\n                  fontWeight: '600',\r\n                  cursor: 'pointer',\r\n                  transition: 'all 0.2s ease',\r\n                  boxShadow: isDarkMode \r\n                    ? '0 4px 6px rgba(0, 0, 0, 0.3)' \r\n                    : '0 4px 6px rgba(0, 0, 0, 0.07)'\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n              {onOverride && (\r\n                <button\r\n                  onClick={() => handleAction('override')}\r\n                  disabled={isProcessing}\r\n                  style={{\r\n                    padding: '12px 24px',\r\n                    border: `2px solid ${colours.red}`,\r\n                    background: `linear-gradient(135deg, ${colours.red} 0%, ${colours.red}dd 100%)`,\r\n                    color: 'white',\r\n                    borderRadius: '8px',\r\n                    fontSize: '14px',\r\n                    fontWeight: '600',\r\n                    cursor: isProcessing ? 'not-allowed' : 'pointer',\r\n                    opacity: isProcessing ? 0.7 : 1,\r\n                    transition: 'all 0.2s ease',\r\n                    boxShadow: isDarkMode \r\n                      ? '0 4px 6px rgba(0, 0, 0, 0.3)' \r\n                      : '0 4px 6px rgba(0, 0, 0, 0.07)',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    gap: '8px'\r\n                  }}\r\n                  onMouseEnter={(e) => {\r\n                    if (!isProcessing) {\r\n                      e.currentTarget.style.transform = 'translateY(-1px)';\r\n                      e.currentTarget.style.boxShadow = isDarkMode \r\n                        ? '0 6px 12px rgba(0, 0, 0, 0.4)' \r\n                        : '0 6px 12px rgba(0, 0, 0, 0.15)';\r\n                    }\r\n                  }}\r\n                  onMouseLeave={(e) => {\r\n                    if (!isProcessing) {\r\n                      e.currentTarget.style.transform = 'translateY(0)';\r\n                      e.currentTarget.style.boxShadow = isDarkMode \r\n                        ? '0 4px 6px rgba(0, 0, 0, 0.3)' \r\n                        : '0 4px 6px rgba(0, 0, 0, 0.07)';\r\n                    }\r\n                  }}\r\n                >\r\n                  {isProcessing && <MdMoreHoriz style={{ animation: 'pulse 1.5s infinite' }} />}\r\n                  Skip Additional ID Request\r\n                </button>\r\n              )}\r\n              <div style={{\r\n                padding: '12px 24px',\r\n                background: isDarkMode\r\n                  ? 'linear-gradient(135deg, #3a3a3a 0%, #2e2e2e 100%)'\r\n                  : 'linear-gradient(135deg, #F8FAFC 0%, #E2E8F0 100%)',\r\n                borderRadius: '8px',\r\n                fontSize: '14px',\r\n                fontWeight: '600',\r\n                color: colours.orange,\r\n                border: `2px solid ${colours.orange}40`\r\n              }}>\r\n                Documents Requested - Awaiting Client Response\r\n              </div>\r\n            </>\r\n          )}\r\n\r\n          {workflowState === 'documents-received' && (\r\n            <>\r\n              <button\r\n                onClick={onClose}\r\n                style={{\r\n                  padding: '12px 24px',\r\n                  border: `2px solid ${isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(0, 0, 0, 0.1)'}`,\r\n                  background: isDarkMode\r\n                    ? 'linear-gradient(135deg, #3a3a3a 0%, #2e2e2e 100%)'\r\n                    : 'linear-gradient(135deg, #F8FAFC 0%, #E2E8F0 100%)',\r\n                  color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                  borderRadius: '8px',\r\n                  fontSize: '14px',\r\n                  fontWeight: '600',\r\n                  cursor: 'pointer',\r\n                  transition: 'all 0.2s ease',\r\n                  boxShadow: isDarkMode \r\n                    ? '0 4px 6px rgba(0, 0, 0, 0.3)' \r\n                    : '0 4px 6px rgba(0, 0, 0, 0.07)'\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={() => handleAction(workflowState === 'documents-received' ? 'approve' : 'override')}\r\n                disabled={isProcessing}\r\n                style={{\r\n                  padding: '12px 24px',\r\n                  border: 'none',\r\n                  background: `linear-gradient(135deg, ${colours.green} 0%, #1a8c5a 100%)`,\r\n                  color: 'white',\r\n                  borderRadius: '8px',\r\n                  fontSize: '14px',\r\n                  fontWeight: '700',\r\n                  cursor: isProcessing ? 'not-allowed' : 'pointer',\r\n                  opacity: isProcessing ? 0.7 : 1,\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  gap: '10px',\r\n                  transition: 'all 0.2s ease',\r\n                  boxShadow: '0 4px 6px rgba(32, 178, 108, 0.3)'\r\n                }}\r\n                onMouseEnter={(e) => {\r\n                  if (!isProcessing) {\r\n                    e.currentTarget.style.transform = 'translateY(-1px)';\r\n                    e.currentTarget.style.boxShadow = '0 6px 12px rgba(32, 178, 108, 0.4)';\r\n                  }\r\n                }}\r\n                onMouseLeave={(e) => {\r\n                  e.currentTarget.style.transform = 'translateY(0)';\r\n                  e.currentTarget.style.boxShadow = '0 4px 6px rgba(32, 178, 108, 0.3)';\r\n                }}\r\n              >\r\n                {isProcessing && <MdMoreHoriz style={{ animation: 'pulse 1.5s infinite' }} />}\r\n                {isProcessing \r\n                  ? 'Processing...' \r\n                  : workflowState === 'documents-received' \r\n                    ? 'Approve Verification' \r\n                    : 'Override Review'\r\n                }\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        {/* Electronic ID Check Response - Subtle expandable section at bottom */}\r\n        {details.rawResponse && (\r\n          <>\r\n            <div style={{\r\n              width: '100%',\r\n              height: '1px',\r\n              background: isDarkMode \r\n                ? 'linear-gradient(90deg, transparent 0%, rgba(255,255,255,0.1) 50%, transparent 100%)'\r\n                : 'linear-gradient(90deg, transparent 0%, rgba(0,0,0,0.1) 50%, transparent 100%)',\r\n              margin: '24px 0 16px 0'\r\n            }} />\r\n\r\n            <details style={{\r\n              backgroundColor: 'transparent',\r\n              border: 'none',\r\n              padding: '0'\r\n            }}>\r\n              <summary style={{\r\n                cursor: 'pointer',\r\n                padding: '8px 0',\r\n                color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n                fontSize: '11px',\r\n                fontWeight: '500',\r\n                opacity: 0.6,\r\n                transition: 'all 0.2s ease',\r\n                userSelect: 'none',\r\n                listStyle: 'none'\r\n              }}>\r\n                <span style={{ textDecoration: 'underline', textDecorationStyle: 'dotted' }}>\r\n                  Technical Details\r\n                </span>\r\n                <span style={{ fontSize: '10px', marginLeft: '6px', opacity: 0.5 }}>\r\n                  (Electronic ID verification response data)\r\n                </span>\r\n              </summary>\r\n              \r\n              <div style={{\r\n                padding: '12px 16px',\r\n                background: isDarkMode \r\n                  ? 'rgba(255, 255, 255, 0.02)'\r\n                  : 'rgba(0, 0, 0, 0.02)',\r\n                border: `1px solid ${isDarkMode ? 'rgba(255, 255, 255, 0.05)' : 'rgba(0, 0, 0, 0.05)'}`,\r\n                borderRadius: '6px',\r\n                marginTop: '8px'\r\n              }}>\r\n                <div style={{\r\n                  color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n                  fontSize: '12px',\r\n                  marginBottom: '12px',\r\n                  opacity: 0.8\r\n                }}>\r\n                  <strong>Response Summary:</strong> {(() => {\r\n                    const parsed = parseRawResponse(details.rawResponse);\r\n                    const responseData = Array.isArray(parsed) ? parsed[0] : parsed;\r\n                    const checkCount = responseData?.checkStatuses?.length || 0;\r\n                    return `${checkCount} verification checks performed, correlation ID: ${responseData?.correlationId?.slice(0, 8) || 'N/A'}...`;\r\n                  })()}\r\n                </div>\r\n\r\n                <details style={{\r\n                  backgroundColor: isDarkMode ? 'rgba(255, 255, 255, 0.02)' : 'rgba(0, 0, 0, 0.02)',\r\n                  border: `1px solid ${isDarkMode ? 'rgba(255, 255, 255, 0.08)' : 'rgba(0, 0, 0, 0.08)'}`,\r\n                  borderRadius: '6px',\r\n                  padding: '0'\r\n                }}>\r\n                  <summary style={{\r\n                    cursor: 'pointer',\r\n                    padding: '12px 16px',\r\n                    color: colours.blue,\r\n                    fontSize: '13px',\r\n                    fontWeight: '600',\r\n                    borderRadius: '6px',\r\n                    transition: 'all 0.2s ease',\r\n                    userSelect: 'none',\r\n                    opacity: 0.8\r\n                  }}>\r\n                    View Technical Details & Database Records\r\n                    <span style={{\r\n                      fontSize: '11px',\r\n                      fontWeight: '400',\r\n                      marginLeft: '8px',\r\n                      opacity: 0.7\r\n                    }}>\r\n                      (Correlation ID, Check Results, Source Data)\r\n                    </span>\r\n                  </summary>\r\n                  \r\n                  <div style={{\r\n                    padding: '16px',\r\n                    paddingTop: '8px',\r\n                    borderTop: `1px solid ${isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'}`\r\n                  }}>\r\n                    <div style={{\r\n                      display: 'flex',\r\n                      gap: '12px',\r\n                      marginBottom: '16px',\r\n                      flexWrap: 'wrap'\r\n                    }}>\r\n                      <button\r\n                        onClick={() => document.getElementById('checkStatuses')?.scrollIntoView({ behavior: 'smooth' })}\r\n                        style={{\r\n                          padding: '6px 12px',\r\n                          border: `1px solid ${colours.blue}`,\r\n                          background: 'transparent',\r\n                          color: colours.blue,\r\n                          borderRadius: '4px',\r\n                          fontSize: '11px',\r\n                          cursor: 'pointer',\r\n                          fontWeight: '500',\r\n                          transition: 'all 0.2s ease'\r\n                        }}\r\n                        onMouseEnter={(e) => {\r\n                          e.currentTarget.style.background = `${colours.blue}10`;\r\n                        }}\r\n                        onMouseLeave={(e) => {\r\n                          e.currentTarget.style.background = 'transparent';\r\n                        }}\r\n                      >\r\n                        Jump to Check Statuses\r\n                      </button>\r\n                      <button\r\n                        onClick={() => document.getElementById('sourceResults')?.scrollIntoView({ behavior: 'smooth' })}\r\n                        style={{\r\n                          padding: '6px 12px',\r\n                          border: `1px solid ${colours.blue}`,\r\n                          background: 'transparent',\r\n                          color: colours.blue,\r\n                          borderRadius: '4px',\r\n                          fontSize: '11px',\r\n                          cursor: 'pointer',\r\n                          fontWeight: '500',\r\n                          transition: 'all 0.2s ease'\r\n                        }}\r\n                        onMouseEnter={(e) => {\r\n                          e.currentTarget.style.background = `${colours.blue}10`;\r\n                        }}\r\n                        onMouseLeave={(e) => {\r\n                          e.currentTarget.style.background = 'transparent';\r\n                        }}\r\n                      >\r\n                        Jump to Source Results\r\n                      </button>\r\n                      <button\r\n                        onClick={() => document.getElementById('rawJson')?.scrollIntoView({ behavior: 'smooth' })}\r\n                        style={{\r\n                          padding: '6px 12px',\r\n                          border: `1px solid ${colours.blue}`,\r\n                          background: 'transparent',\r\n                          color: colours.blue,\r\n                          borderRadius: '4px',\r\n                          fontSize: '11px',\r\n                          cursor: 'pointer',\r\n                          fontWeight: '500',\r\n                          transition: 'all 0.2s ease'\r\n                        }}\r\n                        onMouseEnter={(e) => {\r\n                          e.currentTarget.style.background = `${colours.blue}10`;\r\n                        }}\r\n                        onMouseLeave={(e) => {\r\n                          e.currentTarget.style.background = 'transparent';\r\n                        }}\r\n                      >\r\n                        Jump to Raw Data\r\n                      </button>\r\n                    </div>\r\n                    \r\n                    <div style={{\r\n                      color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n                      fontSize: '12px',\r\n                      lineHeight: '1.6'\r\n                    }}>\r\n                      {(() => {\r\n                        const parsed = parseRawResponse(details.rawResponse);\r\n                        const responseData = Array.isArray(parsed) ? parsed[0] : parsed;\r\n                        \r\n                        if (!responseData) return <div>No response data available</div>;\r\n                        \r\n                        const getResultColor = (result: string) => {\r\n                          const r = result?.toLowerCase();\r\n                          if (r === 'passed' || r === 'pass' || r === 'verified') return colours.green;\r\n                          if (r === 'review') return colours.orange;\r\n                          if (r === 'failed' || r === 'fail') return colours.red;\r\n                          return 'inherit';\r\n                        };\r\n                        \r\n                        return (\r\n                          <div>\r\n                            <div id=\"checkStatuses\" style={{ marginBottom: '20px' }}>\r\n                              <div style={{ \r\n                                fontWeight: '600', \r\n                                marginBottom: '12px', \r\n                                color: colours.blue,\r\n                                fontSize: '14px',\r\n                                borderBottom: `1px solid ${colours.blue}20`,\r\n                                paddingBottom: '6px'\r\n                              }}>\r\n                                Check Statuses & Database Records:\r\n                              </div>\r\n                              <div style={{ \r\n                                backgroundColor: isDarkMode ? 'rgba(54, 144, 206, 0.08)' : 'rgba(54, 144, 206, 0.04)',\r\n                                padding: '12px',\r\n                                borderRadius: '6px',\r\n                                border: `1px solid ${colours.blue}20`\r\n                              }}>\r\n                                <div>Overall Result: <strong style={{ color: getResultColor(responseData.overallResult?.result) }}>{responseData.overallResult?.result || 'N/A'}</strong></div>\r\n                                <div>Overall Status: <strong>{responseData.overallStatus?.status || 'N/A'}</strong></div>\r\n                                {responseData.correlationId && (\r\n                                  <div style={{ marginTop: '8px', paddingTop: '8px', borderTop: `1px solid ${colours.blue}20` }}>\r\n                                    <div style={{ fontSize: '11px', fontWeight: '600', marginBottom: '4px' }}>Database Reference:</div>\r\n                                    <div>Correlation ID: <code style={{ \r\n                                      fontSize: '10px', \r\n                                      background: isDarkMode ? 'rgba(0,0,0,0.3)' : 'rgba(255,255,255,0.8)',\r\n                                      padding: '2px 4px',\r\n                                      borderRadius: '3px'\r\n                                    }}>{responseData.correlationId}</code></div>\r\n                                    {responseData.externalReferenceId && <div>External Reference: <strong>{responseData.externalReferenceId}</strong></div>}\r\n                                    <div style={{ fontSize: '10px', opacity: 0.7, marginTop: '4px' }}>\r\n                                      Use these IDs to reference this check in our database or with Tiller support\r\n                                    </div>\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            \r\n                            <div id=\"sourceResults\" style={{ marginBottom: '20px' }}>\r\n                              <div style={{ \r\n                                fontWeight: '600', \r\n                                marginBottom: '12px', \r\n                                color: colours.blue,\r\n                                fontSize: '14px',\r\n                                borderBottom: `1px solid ${colours.blue}20`,\r\n                                paddingBottom: '6px'\r\n                              }}>\r\n                                Individual Check Results:\r\n                              </div>\r\n                              {responseData.checkStatuses && responseData.checkStatuses.length > 0 ? (\r\n                                responseData.checkStatuses.map((check: any, index: number) => (\r\n                                  <div key={index} style={{ marginBottom: '16px', paddingLeft: '12px', borderLeft: `3px solid ${getResultColor(check.result?.result)}`, backgroundColor: isDarkMode ? 'rgba(255, 255, 255, 0.02)' : 'rgba(0, 0, 0, 0.02)', padding: '12px', borderRadius: '6px' }}>\r\n                                    <div style={{ marginBottom: '8px' }}>\r\n                                      <strong>{check.sourceResults?.title || `Check ${index + 1}`}</strong>\r\n                                      <div style={{ fontSize: '11px', color: isDarkMode ? colours.dark.subText : colours.light.subText }}>\r\n                                        Type: {check.checkTypeId === 1 ? 'Address Verification' : check.checkTypeId === 2 ? 'PEP & Sanctions' : check.checkTypeId === 3 ? 'ID Verification' : `Type ${check.checkTypeId}`}\r\n                                        {check.id && ` • ID: ${check.id}`}\r\n                                      </div>\r\n                                    </div>\r\n                                    <div>Result: <strong style={{ color: getResultColor(check.result?.result) }}>{check.result?.result || 'N/A'}</strong></div>\r\n                                    <div>Status: <strong>{check.status?.status || 'N/A'}</strong></div>\r\n                                    {check.sourceResults?.date && <div>Date: {new Date(check.sourceResults.date).toLocaleString()}</div>}\r\n                                    \r\n                                    {check.resultCount && (\r\n                                      <div style={{ marginTop: '8px', fontSize: '11px', opacity: 0.8, backgroundColor: isDarkMode ? 'rgba(0,0,0,0.2)' : 'rgba(255,255,255,0.6)', padding: '6px', borderRadius: '4px' }}>\r\n                                        <strong>Source Summary:</strong> {check.resultCount.totalSourcesChecked || 0} checked, {check.resultCount.totalSourcesPassed || 0} passed, {check.resultCount.totalSourcesForReview || 0} for review\r\n                                      </div>\r\n                                    )}\r\n                                    \r\n                                    {check.sourceResults?.results && check.sourceResults.results.length > 0 && (\r\n                                      <details style={{ marginTop: '12px' }}>\r\n                                        <summary style={{ cursor: 'pointer', color: colours.blue, fontSize: '11px', fontWeight: '600' }}>View detailed breakdown ({check.sourceResults.results.length} results)</summary>\r\n                                        <div style={{ marginTop: '8px', paddingLeft: '12px' }}>\r\n                                          {check.sourceResults.results.map((result: any, resultIndex: number) => (\r\n                                            <div key={resultIndex} style={{ marginBottom: '8px', padding: '8px', backgroundColor: isDarkMode ? 'rgba(255, 255, 255, 0.03)' : 'rgba(0, 0, 0, 0.03)', borderRadius: '4px', border: `1px solid ${getResultColor(result.result)}30` }}>\r\n                                              <div><strong>{result.title}</strong> - <span style={{ color: getResultColor(result.result) }}>{result.result}</span></div>\r\n                                              <div style={{ fontSize: '11px', opacity: 0.8 }}>{result.description}</div>\r\n                                              {result.detail?.reasons && result.detail.reasons.length > 0 && (\r\n                                                <div style={{ marginTop: '6px' }}>\r\n                                                  {result.detail.reasons.map((reason: any, reasonIndex: number) => (\r\n                                                    <div key={reasonIndex} style={{ fontSize: '10px', marginLeft: '8px', marginTop: '2px' }}>\r\n                                                      • <strong>{reason.key || 'Detail'}:</strong> <span style={{ color: getResultColor(reason.result) }}>{reason.result}</span>\r\n                                                      {reason.reason && <div style={{ marginLeft: '12px', opacity: 0.7, fontStyle: 'italic' }}>{reason.reason} {reason.code && `(Code: ${reason.code})`}</div>}\r\n                                                    </div>\r\n                                                  ))}\r\n                                                </div>\r\n                                              )}\r\n                                            </div>\r\n                                          ))}\r\n                                        </div>\r\n                                      </details>\r\n                                    )}\r\n                                  </div>\r\n                                ))\r\n                              ) : (\r\n                                <div>No check details available</div>\r\n                              )}\r\n                            </div>\r\n                            \r\n                            <div id=\"rawJson\">\r\n                              <div style={{ \r\n                                fontWeight: '600', \r\n                                marginBottom: '12px', \r\n                                color: colours.blue,\r\n                                fontSize: '14px',\r\n                                borderBottom: `1px solid ${colours.blue}20`,\r\n                                paddingBottom: '6px'\r\n                              }}>\r\n                                Raw Response Data:\r\n                              </div>\r\n                              <div style={{\r\n                                fontSize: '11px',\r\n                                marginBottom: '8px',\r\n                                padding: '8px',\r\n                                backgroundColor: isDarkMode ? 'rgba(255, 140, 0, 0.1)' : 'rgba(255, 140, 0, 0.05)',\r\n                                border: `1px solid ${colours.orange}30`,\r\n                                borderRadius: '4px',\r\n                                color: isDarkMode ? colours.dark.subText : colours.light.subText\r\n                              }}>\r\n                                <strong>Note:</strong> This raw JSON data matches what's stored in our database. Since this ID verification system is new, this data helps with understanding how the checks work and troubleshooting any issues.\r\n                              </div>\r\n                              <pre style={{\r\n                                fontSize: '10px',\r\n                                lineHeight: '1.3',\r\n                                fontFamily: 'monospace',\r\n                                backgroundColor: isDarkMode ? 'rgba(0, 0, 0, 0.3)' : 'rgba(0, 0, 0, 0.05)',\r\n                                padding: '12px',\r\n                                borderRadius: '4px',\r\n                                overflow: 'auto',\r\n                                maxHeight: '300px',\r\n                                border: `1px solid ${isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'}`\r\n                              }}>\r\n                                {JSON.stringify(parsed, null, 2)}\r\n                              </pre>\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })()}\r\n                    </div>\r\n                  </div>\r\n                </details>\r\n              </div>\r\n            </details>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IDVerificationReviewModal;\r\n","// API functions for ID verification review workflow\r\n\r\ninterface VerificationFailure {\r\n  check: string;\r\n  reason: string;\r\n  code: string;\r\n}\r\n\r\n/**\r\n * Parses Tiller raw response to extract failure reasons\r\n */\r\nexport const parseVerificationFailures = (rawResponse: any): VerificationFailure[] => {\r\n  const failures: VerificationFailure[] = [];\r\n  \r\n  try {\r\n    const response = typeof rawResponse === 'string' ? JSON.parse(rawResponse) : rawResponse;\r\n    \r\n    // Handle Tiller API response structure\r\n    if (response && response.checkStatuses && Array.isArray(response.checkStatuses)) {\r\n      response.checkStatuses.forEach((checkStatus: any) => {\r\n        const sourceResults = checkStatus.sourceResults;\r\n        const checkResult = checkStatus.result?.result;\r\n        \r\n        if (checkResult && checkResult.toLowerCase() === 'review' && sourceResults) {\r\n          const checkName = sourceResults.rule || 'Verification Check';\r\n          \r\n          // Extract failure reasons from results array\r\n          if (sourceResults.results && Array.isArray(sourceResults.results)) {\r\n            sourceResults.results.forEach((result: any) => {\r\n              if (result.detail && result.detail.reasons) {\r\n                result.detail.reasons.forEach((reason: any) => {\r\n                  if (reason.result && reason.result.toLowerCase() === 'review') {\r\n                    failures.push({\r\n                      check: checkName,\r\n                      reason: reason.reason || 'Verification requires review',\r\n                      code: reason.code || 'N/A'\r\n                    });\r\n                  }\r\n                });\r\n              }\r\n            });\r\n          }\r\n          \r\n          // If no specific reasons found but check failed, add generic reason\r\n          if (failures.length === 0 || !failures.some(f => f.check === checkName)) {\r\n            failures.push({\r\n              check: checkName,\r\n              reason: 'Verification check requires manual review',\r\n              code: 'REVIEW'\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    // Fallback: Check legacy address verification format\r\n    if (failures.length === 0 && response.address_verification?.result !== 'passed') {\r\n      const addressChecks = response.address_verification?.checks || [];\r\n      addressChecks.forEach((check: any) => {\r\n        if (check.result !== 'passed') {\r\n          failures.push({\r\n            check: 'Address Verification',\r\n            reason: check.failure_reason || check.warning_reason || 'Verification failed',\r\n            code: check.result_code || 'N/A'\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    // Fallback: Check legacy identity verification format\r\n    if (failures.length === 0 && response.identity_verification?.result !== 'passed') {\r\n      const identityChecks = response.identity_verification?.checks || [];\r\n      identityChecks.forEach((check: any) => {\r\n        if (check.result !== 'passed') {\r\n          failures.push({\r\n            check: 'Identity Verification',\r\n            reason: check.failure_reason || check.warning_reason || 'Verification failed',\r\n            code: check.result_code || 'N/A'\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    // Fallback: Check legacy PEP & sanctions format\r\n    if (failures.length === 0 && response.peps_and_sanctions?.result !== 'passed') {\r\n      failures.push({\r\n        check: 'PEP & Sanctions Check',\r\n        reason: response.peps_and_sanctions?.failure_reason || 'Check failed or requires review',\r\n        code: response.peps_and_sanctions?.result || 'N/A'\r\n      });\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('Error parsing verification response:', error);\r\n    // Add a generic failure if parsing fails\r\n    failures.push({\r\n      check: 'Verification Parse Error',\r\n      reason: 'Unable to parse verification response',\r\n      code: 'PARSE_ERROR'\r\n    });\r\n  }\r\n\r\n  return failures;\r\n};\r\n\r\n/**\r\n * Fetches detailed verification data for review modal\r\n */\r\nexport const fetchVerificationDetails = async (instructionRef: string) => {\r\n  try {\r\n    const response = await fetch(`/api/verify-id/${instructionRef}/details`);\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch verification details');\r\n    }\r\n    \r\n    const data = await response.json();\r\n    \r\n    // Parse the raw response to extract failure reasons\r\n    const failures = parseVerificationFailures(data.rawResponse);\r\n    \r\n    return {\r\n      instructionRef: data.instructionRef,\r\n      clientName: `${data.firstName} ${data.surname}`.trim(),\r\n      clientEmail: data.email,\r\n      overallResult: data.overallResult,\r\n      pepResult: data.pepResult,\r\n      addressResult: data.addressResult,\r\n      failureReasons: failures,\r\n      checkedDate: data.checkedDate,\r\n      rawResponse: data.rawResponse\r\n    };\r\n    \r\n  } catch (error) {\r\n    console.error('Error fetching verification details:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Approves ID verification and sends email notification\r\n */\r\nexport const approveVerification = async (instructionRef: string) => {\r\n  try {\r\n    const response = await fetch(`/api/verify-id/${instructionRef}/approve`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Failed to approve verification');\r\n    }\r\n    \r\n    return await response.json();\r\n    \r\n  } catch (error) {\r\n    console.error('Error approving verification:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Sends verification failure email to client\r\n */\r\nexport const sendVerificationEmail = async (instructionRef: string, clientEmail: string, clientName: string) => {\r\n  try {\r\n    const response = await fetch('/api/send-verification-email', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        instructionRef,\r\n        clientEmail,\r\n        clientName\r\n      })\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Failed to send verification email');\r\n    }\r\n    \r\n    return await response.json();\r\n    \r\n  } catch (error) {\r\n    console.error('Error sending verification email:', error);\r\n    throw error;\r\n  }\r\n};\r\n","import React, { useEffect, useState, useMemo, useRef, useLayoutEffect, useCallback } from \"react\";\r\nimport { flushSync } from \"react-dom\";\r\n// Clean admin tools - legacy toggles removed - cache cleared\r\nimport {\r\n  Stack,\r\n  mergeStyles,\r\n  Pivot,\r\n  PivotItem,\r\n  Text,\r\n  PrimaryButton,\r\n  Dialog,\r\n  DialogType,\r\n  DialogFooter,\r\n  DefaultButton,\r\n  IconButton,\r\n} from \"@fluentui/react\";\r\nimport DocumentPreviewModal from \"../../components/DocumentPreviewModal\";\r\nimport {\r\n  FaIdBadge,\r\n  FaRegIdBadge,\r\n  FaFileAlt,\r\n  FaRegFileAlt,\r\n  FaFolder,\r\n  FaRegFolder,\r\n  FaCheckCircle,\r\n  FaExclamationTriangle,\r\n  FaUser,\r\n  FaBuilding,\r\n} from 'react-icons/fa';\r\nimport { MdOutlineArticle, MdArticle, MdOutlineWarning, MdWarning, MdAssessment, MdOutlineAssessment, MdSync, MdExpandMore, MdChevronRight } from 'react-icons/md';\r\nimport { FaShieldAlt, FaIdCard, FaCreditCard, FaCogs } from 'react-icons/fa';\r\nimport QuickActionsCard from \"../home/QuickActionsCard\"; // legacy, to be removed after full migration\r\nimport { useTheme } from \"../../app/functionality/ThemeContext\";\r\nimport { useNavigatorActions } from \"../../app/functionality/NavigatorContext\";\r\nimport { colours } from \"../../app/styles/colours\";\r\nimport { dashboardTokens } from \"./componentTokens\";\r\nimport InstructionCard from \"./InstructionCard\";\r\nimport OverridePills from \"./OverridePills\";\r\nimport RiskComplianceCard from \"./RiskComplianceCard\";\r\nimport MatterOperations from \"./MatterOperations\";\r\nimport JointClientCard, { ClientInfo } from \"./JointClientCard\";\r\nimport DealCard from \"./DealCard\";\r\nimport type { DealSummary } from \"./JointClientCard\";\r\nimport { InstructionData, POID, TeamData, UserData, Matter } from \"../../app/functionality/types\";\r\nimport { hasActiveMatterOpening, clearMatterOpeningDraft } from \"../../app/functionality/matterOpeningUtils\";\r\nimport { isAdminUser } from \"../../app/admin\";\r\nimport FlatMatterOpening from \"./MatterOpening/FlatMatterOpening\";\r\nimport RiskAssessmentPage from \"./RiskAssessmentPage\";\r\nimport EIDCheckPage from \"./EIDCheckPage\";\r\nimport InstructionEditor from \"./components/InstructionEditor\";\r\nimport \"../../app/styles/InstructionsBanner.css\";\r\n// invisible change 2.2\r\nimport DocumentEditorPage from \"./DocumentEditorPage\";\r\nimport DocumentsV3 from \"./DocumentsV3\";\r\nimport teamData from \"../../localData/team-sql-data.json\";\r\nimport SegmentedControl from '../../components/filter/SegmentedControl';\r\nimport TwoLayerFilter, { TwoLayerFilterOption } from '../../components/filter/TwoLayerFilter';\r\nimport FilterBanner from '../../components/filter/FilterBanner';\r\n// ToggleSwitch removed in favor of premium SegmentedControl for scope/layout\r\nimport IDVerificationReviewModal from '../../components/modals/IDVerificationReviewModal';\r\nimport { fetchVerificationDetails, approveVerification } from '../../services/verificationAPI';\r\nimport { debugLog, debugWarn } from '../../utils/debug';\r\n\r\ninterface InstructionsProps {\r\n  userInitials: string;\r\n  instructionData: InstructionData[];\r\n  setInstructionData: React.Dispatch<React.SetStateAction<InstructionData[]>>;\r\n  allInstructionData?: InstructionData[]; // Admin: all users' instructions\r\n  poidData: POID[];\r\n  setPoidData: React.Dispatch<React.SetStateAction<POID[]>>;\r\n  teamData?: TeamData[] | null;\r\n  userData?: UserData[] | null;\r\n  matters?: Matter[];\r\n  hasActiveMatter?: boolean;\r\n  setIsInMatterOpeningWorkflow?: (inWorkflow: boolean) => void;\r\n  enquiries?: any[] | null;\r\n}\r\nconst Instructions: React.FC<InstructionsProps> = ({\r\n  userInitials,\r\n  instructionData,\r\n  setInstructionData,\r\n  allInstructionData = [],\r\n  poidData,\r\n  setPoidData,\r\n  teamData,\r\n  userData,\r\n  matters = [],\r\n  hasActiveMatter = false,\r\n  setIsInMatterOpeningWorkflow,\r\n  enquiries = [],\r\n}) => {\r\n  const { isDarkMode } = useTheme();\r\n  const { setContent } = useNavigatorActions();\r\n  const [showNewMatterPage, setShowNewMatterPage] = useState<boolean>(false);\r\n  const [showRiskPage, setShowRiskPage] = useState<boolean>(false);\r\n  const [showEIDPage, setShowEIDPage] = useState<boolean>(false);\r\n  const [selectedRisk, setSelectedRisk] = useState<any | null>(null);\r\n  const [selectedInstruction, setSelectedInstruction] = useState<any | null>(\r\n    null,\r\n  );\r\n  const [pendingInstructionRef, setPendingInstructionRef] = useState<string>('');\r\n  const [isResumeDialogOpen, setIsResumeDialogOpen] = useState(false);\r\n  const [idVerificationLoading, setIdVerificationLoading] = useState<Set<string>>(new Set());\r\n  const [windowWidth, setWindowWidth] = useState<number>(typeof window !== 'undefined' ? window.innerWidth : 1200);\r\n  const [showReviewModal, setShowReviewModal] = useState<boolean>(false);\r\n  const [reviewModalDetails, setReviewModalDetails] = useState<any>(null);\r\n  const overviewGridRef = useRef<HTMLDivElement | null>(null);\r\n  const [pendingInstruction, setPendingInstruction] = useState<any | null>(null);\r\n  const [forceNewMatter, setForceNewMatter] = useState(false);\r\n  const [showCclDraftPage, setShowCclDraftPage] = useState(false);\r\n  \r\n  // Document Preview Modal State\r\n  const [previewModalOpen, setPreviewModalOpen] = useState(false);\r\n  const [previewDocument, setPreviewDocument] = useState<any>(null);\r\n  const [isWorkbenchVisible, setIsWorkbenchVisible] = useState(false);\r\n  const [workbenchHeight, setWorkbenchHeight] = useState(500); // Default height in pixels\r\n  const [isResizing, setIsResizing] = useState(false);\r\n  // On-brand toast feedback\r\n  const [toast, setToast] = useState<{ message: string; type: 'success' | 'error' } | null>(null);\r\n  const showToast = useCallback((message: string, type: 'success' | 'error' = 'success') => {\r\n    setToast({ message, type });\r\n    window.setTimeout(() => setToast(null), 3500);\r\n  }, []);\r\n\r\n  // Flat tab navigation: default to Clients\r\n  const [activeTab, setActiveTab] = useState<'pitches' | 'clients' | 'risk'>('clients');\r\n  \r\n  // Comprehensive workbench tab management\r\n  const [activeWorkbenchTab, setActiveWorkbenchTab] = useState('identity');\r\n  \r\n  // Workbench expansion state management\r\n  const [expandedSections, setExpandedSections] = useState<{[key: string]: boolean}>({});\r\n  \r\n  const toggleSection = (sectionKey: string) => {\r\n    setExpandedSections(prev => ({\r\n      ...prev,\r\n      [sectionKey]: !prev[sectionKey]\r\n    }));\r\n  };\r\n  \r\n  // Modal states for workbench operations\r\n  const [showRiskDetails, setShowRiskDetails] = useState(false);\r\n  const [showPaymentDetails, setShowPaymentDetails] = useState(false);\r\n  const [showMatterDetails, setShowMatterDetails] = useState(false);\r\n  \r\n  // Workbench resize handlers\r\n  const handleMouseDown = useCallback(() => {\r\n    setIsResizing(true);\r\n    document.body.classList.add('workbench-resizing');\r\n  }, []);\r\n\r\n  const handleMouseMove = useCallback((e: MouseEvent) => {\r\n    if (!isResizing) return;\r\n    const newHeight = window.innerHeight - e.clientY;\r\n    // Constrain between 200px and 80% of viewport height\r\n    const constrainedHeight = Math.min(Math.max(newHeight, 200), window.innerHeight * 0.8);\r\n    setWorkbenchHeight(constrainedHeight);\r\n  }, [isResizing]);\r\n\r\n  const handleMouseUp = useCallback(() => {\r\n    setIsResizing(false);\r\n    document.body.classList.remove('workbench-resizing');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isResizing) {\r\n      document.addEventListener('mousemove', handleMouseMove);\r\n      document.addEventListener('mouseup', handleMouseUp);\r\n      return () => {\r\n        document.removeEventListener('mousemove', handleMouseMove);\r\n        document.removeEventListener('mouseup', handleMouseUp);\r\n      };\r\n    }\r\n  }, [isResizing, handleMouseMove, handleMouseUp]);\r\n  \r\n  // Utility function for file size formatting\r\n  const formatBytes = (bytes: number, decimals = 2) => {\r\n    if (bytes === 0) return '0 Bytes';\r\n    const k = 1024;\r\n    const dm = decimals < 0 ? 0 : decimals;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n  };\r\n  \r\n  // Unified enquiries data for name mapping (separate from main enquiries)\r\n  const [unifiedEnquiries, setUnifiedEnquiries] = useState<any[]>([]);\r\n  const [hoveredButton, setHoveredButton] = useState<string | null>(null);\r\n  \r\n  // Manual instruction selection for actions when no card is selected\r\n  const [showInstructionSelector, setShowInstructionSelector] = useState(false);\r\n  const [selectorAction, setSelectorAction] = useState<'verify' | 'risk' | 'matter' | 'ccl' | null>(null);\r\n  const [selectorProcessing, setSelectorProcessing] = useState<string | null>(null); // instruction ref being processed\r\n  const [selectorResult, setSelectorResult] = useState<any>(null); // verification result\r\n  \r\n  // Client name cache for performance optimization\r\n  // Enhanced caching for client name resolution\r\n  const clientNameCache = useMemo(() => {\r\n    // Load any previously cached names to avoid \"unresolving\" on remount/tab switch\r\n    try {\r\n      const saved = localStorage.getItem('clientNameCache');\r\n      if (saved) {\r\n        const entries = JSON.parse(saved) as Array<[string, { firstName: string; lastName: string }]>;\r\n        if (Array.isArray(entries)) {\r\n          return new Map<string, { firstName: string; lastName: string }>(entries);\r\n        }\r\n      }\r\n    } catch {\r\n      // ignore parse errors and start fresh\r\n    }\r\n    return new Map<string, { firstName: string; lastName: string }>();\r\n  }, []);\r\n\r\n  // Save cache to localStorage whenever it changes\r\n  const saveClientNameCache = useCallback((cache: Map<string, { firstName: string; lastName: string }>) => {\r\n    try {\r\n      localStorage.setItem('clientNameCache', JSON.stringify(Array.from(cache.entries())));\r\n    } catch (error) {\r\n      debugWarn('Failed to save client name cache to localStorage');\r\n    }\r\n  }, []);\r\n\r\n  /**\r\n   * Fetch unified enquiries data for name mapping\r\n   * This combines enquiries from both database sources directly\r\n   */\r\n  const fetchUnifiedEnquiries = async () => {\r\n    try {\r\n      debugLog('🔗 Fetching unified enquiries for name mapping...');\r\n      \r\n      // Check if we already have cached data in sessionStorage\r\n      const cached = sessionStorage.getItem('unifiedEnquiries');\r\n      const cacheTime = sessionStorage.getItem('unifiedEnquiriesTime');\r\n      const oneHour = 60 * 60 * 1000; // Extended to 1 hour for better performance\r\n      \r\n      if (cached && cacheTime && (Date.now() - parseInt(cacheTime) < oneHour)) {\r\n        debugLog('📦 Using cached unified enquiries data');\r\n        const cachedData = JSON.parse(cached);\r\n        setUnifiedEnquiries(cachedData);\r\n        return;\r\n      }\r\n      \r\n      // Try the server route directly\r\n      try {\r\n        const response = await fetch('/api/enquiries-unified');\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          debugLog(`✅ Fetched ${data.count} unified enquiries from both databases`);\r\n          debugLog('🔍 Sample unified enquiries data:', data.enquiries?.slice(0, 3));\r\n          debugLog('🔍 Looking for prospect 27671:', data.enquiries?.find((e: any) => \r\n            e.ID === '27671' || e.id === '27671' || e.acid === '27671' || e.card_id === '27671'\r\n          ));\r\n          const enquiries = data.enquiries || [];\r\n          setUnifiedEnquiries(enquiries);\r\n          \r\n          // Cache the results - wrap in try/catch to handle QuotaExceededError\r\n          try {\r\n            sessionStorage.setItem('unifiedEnquiries', JSON.stringify(enquiries));\r\n            sessionStorage.setItem('unifiedEnquiriesTime', Date.now().toString());\r\n          } catch (cacheError: any) {\r\n            if (cacheError.name === 'QuotaExceededError') {\r\n              debugWarn('⚠️ SessionStorage quota exceeded, skipping unified enquiries cache');\r\n              // Try to clear old cache and retry with reduced data\r\n              try {\r\n                sessionStorage.removeItem('unifiedEnquiries');\r\n                sessionStorage.removeItem('unifiedEnquiriesTime');\r\n                // Store only essential fields for name lookup\r\n                const reducedEnquiries = enquiries.map((e: any) => ({\r\n                  ID: e.ID || e.id,\r\n                  First_Name: e.First_Name || e.first,\r\n                  Last_Name: e.Last_Name || e.last\r\n                }));\r\n                sessionStorage.setItem('unifiedEnquiries', JSON.stringify(reducedEnquiries));\r\n                sessionStorage.setItem('unifiedEnquiriesTime', Date.now().toString());\r\n                debugLog('✅ Cached reduced enquiries dataset');\r\n              } catch (retryError) {\r\n                debugWarn('⚠️ Could not cache even reduced dataset, proceeding without cache');\r\n              }\r\n            } else {\r\n              debugWarn('⚠️ Unexpected caching error:', cacheError);\r\n            }\r\n          }\r\n          return;\r\n        } else {\r\n          debugLog(`❌ Unified route failed with status: ${response.status} ${response.statusText}`);\r\n          const errorText = await response.text();\r\n          debugLog(`❌ Error details:`, errorText);\r\n        }\r\n      } catch (err) {\r\n        debugLog('📝 Unified route not available yet, falling back to direct queries...', err);\r\n      }\r\n\r\n      // Fallback: Fetch from both sources directly\r\n      const [mainEnquiries, instructionsData] = await Promise.all([\r\n        // Main enquiries (helix-core-data via SQL)\r\n        fetch('/api/enquiries').then(res => res.ok ? res.json() : { enquiries: [] }),\r\n        // Instructions data (already has ProspectId info)\r\n        fetch('/api/instructions').then(res => res.ok ? res.json() : { instructions: [] })\r\n      ]);\r\n\r\n      debugLog(`📊 Fallback data: ${mainEnquiries.enquiries?.length || 0} main enquiries, ${instructionsData.instructions?.length || 0} instructions`);\r\n\r\n      // Combine data sources for name mapping\r\n      const combinedEnquiries = [\r\n        ...(mainEnquiries.enquiries || []),\r\n        // Extract prospect info from instructions - check both deal and instruction level\r\n        ...(instructionsData.instructions || []).map((inst: any) => {\r\n          // Try to get ProspectId from deal first, then instruction level\r\n          const prospectId = inst.deal?.ProspectId || inst.ProspectId;\r\n          const firstName = inst.FirstName || inst.deal?.FirstName || '';\r\n          const lastName = inst.LastName || inst.deal?.LastName || '';\r\n          const email = inst.Email || inst.deal?.LeadClientEmail || '';\r\n          \r\n          return {\r\n            acid: prospectId,\r\n            first: firstName,\r\n            last: lastName,\r\n            email: email,\r\n            db_source: 'instructions'\r\n          };\r\n        }).filter((item: any) => item.acid && (item.first || item.last))\r\n      ];\r\n\r\n      debugLog(`✅ Combined ${combinedEnquiries.length} enquiries for name mapping (${mainEnquiries.enquiries?.length || 0} from main + ${instructionsData.instructions?.filter((i: any) => i.deal?.ProspectId || i.ProspectId).length || 0} from instructions)`);\r\n      \r\n      setUnifiedEnquiries(combinedEnquiries);\r\n      \r\n      // Cache the fallback results too - wrap in try/catch to handle QuotaExceededError\r\n      try {\r\n        sessionStorage.setItem('unifiedEnquiries', JSON.stringify(combinedEnquiries));\r\n        sessionStorage.setItem('unifiedEnquiriesTime', Date.now().toString());\r\n      } catch (cacheError: any) {\r\n        if (cacheError.name === 'QuotaExceededError') {\r\n          debugWarn('⚠️ SessionStorage quota exceeded, skipping fallback cache');\r\n        } else {\r\n          debugWarn('⚠️ Unexpected fallback caching error:', cacheError);\r\n        }\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('❌ Error fetching unified enquiries:', error);\r\n      setUnifiedEnquiries([]);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Lookup client name by ProspectId (which matches ACID in enquiries data)\r\n   * @param prospectId The ProspectId value to search for\r\n   * @returns Object with firstName and lastName, or empty strings if not found\r\n   */\r\n  // Create indexed lookup for O(1) performance\r\n  const enquiryLookupMap = useMemo(() => {\r\n    if (!unifiedEnquiries || unifiedEnquiries.length === 0) return new Map();\r\n    \r\n    const map = new Map<string, { firstName: string; lastName: string }>();\r\n    unifiedEnquiries.forEach((enq: any) => {\r\n      const enqId = String(enq.ID || enq.id || enq.acid || enq.ACID || enq.Acid);\r\n      if (enqId && enqId !== 'undefined') {\r\n        map.set(enqId, {\r\n          firstName: enq.First_Name || enq.first || enq.First || enq.firstName || enq.FirstName || '',\r\n          lastName: enq.Last_Name || enq.last || enq.Last || enq.lastName || enq.LastName || ''\r\n        });\r\n      }\r\n    });\r\n    \r\n    debugLog(`📇 Built enquiry lookup index with ${map.size} entries`);\r\n    return map;\r\n  }, [unifiedEnquiries]);\r\n\r\n  const getClientNameByProspectId = useCallback((prospectId: string | number | undefined): { firstName: string; lastName: string } => {\r\n    if (!prospectId) {\r\n      return { firstName: '', lastName: '' };\r\n    }\r\n\r\n    // Convert prospectId to string for consistent caching\r\n    const prospectIdStr = String(prospectId);\r\n\r\n    // Fast path: Check cache first for immediate response - prioritize this over everything\r\n    const cached = clientNameCache.get(prospectIdStr);\r\n    if (cached && (cached.firstName?.trim() || cached.lastName?.trim())) {\r\n      return cached;\r\n    }\r\n\r\n    // If unified enquiries not loaded yet, try to find name in current instruction data\r\n    if (!unifiedEnquiries || unifiedEnquiries.length === 0) {\r\n      // Look for the name in the current instruction being displayed\r\n      const currentInstructionData = instructionData.length > 0 ? instructionData : allInstructionData;\r\n      const matchingInstruction = currentInstructionData.find((inst: any) => {\r\n        const instrProspectId = inst.deal?.ProspectId || inst.ProspectId;\r\n        return instrProspectId?.toString() === prospectIdStr;\r\n      });\r\n      \r\n      if (matchingInstruction) {\r\n        // Cast to any since instruction data can have various dynamic properties\r\n        const inst = matchingInstruction as any;\r\n        const firstName = inst.FirstName || inst.Name?.split(' ')[0] || '';\r\n        const lastName = inst.LastName || inst.Name?.split(' ')[1] || '';\r\n        if (firstName?.trim() || lastName?.trim()) {\r\n          const result = { firstName: firstName?.trim() || '', lastName: lastName?.trim() || '' };\r\n          // Cache this result in memory and localStorage\r\n          clientNameCache.set(prospectIdStr, result);\r\n          saveClientNameCache(clientNameCache);\r\n          return result;\r\n        }\r\n      }\r\n      \r\n      // If we have cached data but unified enquiries not loaded, return cached even if empty\r\n      // This prevents \"unresolving\" when tab switching\r\n      if (cached) {\r\n        return cached;\r\n      }\r\n      \r\n      return { firstName: '', lastName: '' };\r\n    }\r\n\r\n    // O(1) lookup instead of O(n) search\r\n    const enquiryResult = enquiryLookupMap.get(prospectIdStr);\r\n    \r\n    if (prospectIdStr === '27671') {\r\n      debugLog('🔍 Fast lookup for 27671 in index:', enquiryLookupMap.has(prospectIdStr));\r\n      debugLog('🔍 Found enquiry for 27671:', enquiryResult);\r\n    }\r\n\r\n    let result = enquiryResult || (cached || { firstName: '', lastName: '' }); // Fallback to cached if available\r\n    \r\n    // If still no name found, derive from instruction email as a last resort (common in \"initialised\" stage)\r\n    if (!(result.firstName?.trim() || result.lastName?.trim())) {\r\n      // Search in current instruction data for matching prospect\r\n      const source = instructionData.length > 0 ? instructionData : allInstructionData;\r\n      const prospect = source.find((p: any) => {\r\n        if (String(p.prospectId || '') === prospectIdStr) return true;\r\n        if (Array.isArray(p.deals) && p.deals.some((d: any) => String(d.ProspectId || d.prospectId || '') === prospectIdStr)) return true;\r\n        if (Array.isArray(p.instructions) && p.instructions.some((i: any) => String(i.ProspectId || i.deal?.ProspectId || '') === prospectIdStr)) return true;\r\n        return false;\r\n      });\r\n      let email = '';\r\n      if (prospect) {\r\n        const inst = (prospect.instructions || []).find((i: any) => String(i.ProspectId || i.deal?.ProspectId || '') === prospectIdStr);\r\n        const deal = (prospect.deals || []).find((d: any) => String(d.ProspectId || d.prospectId || '') === prospectIdStr);\r\n        email = (inst?.Email || deal?.LeadClientEmail || '').toString();\r\n      }\r\n      if (email.includes('@')) {\r\n        const local = email.split('@')[0];\r\n        // Split on common separators and remove digits/empties\r\n        const tokens = local\r\n          .split(/[._-]+/)\r\n          .map((t: string) => t.replace(/\\d+/g, ''))\r\n          .filter((t: string) => t);\r\n        if (tokens.length > 0) {\r\n          const cap = (s: string) => s.charAt(0).toUpperCase() + s.slice(1).toLowerCase();\r\n          const first = cap(tokens[0]);\r\n          const last = tokens.length > 1 ? cap(tokens[1]) : '';\r\n          result = { firstName: first, lastName: last };\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Only cache non-empty results to avoid overwriting good cached data with empty data\r\n    if (result.firstName?.trim() || result.lastName?.trim() || !cached) {\r\n      clientNameCache.set(prospectIdStr, result);\r\n      saveClientNameCache(clientNameCache);\r\n    }\r\n    \r\n    return result;\r\n  }, [enquiryLookupMap, clientNameCache, saveClientNameCache, instructionData, allInstructionData]);\r\n\r\n  const handleRiskAssessmentSave = (risk: any) => {\r\n    setInstructionData(prev =>\r\n      prev.map(prospect => {\r\n        // Only update the prospect that contains this instruction\r\n        const hasInstruction = (prospect.instructions || []).some(\r\n          (inst: any) => inst.InstructionRef === risk.InstructionRef,\r\n        );\r\n        const hasDealForInstruction = (prospect.deals || []).some(\r\n          (d: any) => d.InstructionRef === risk.InstructionRef,\r\n        );\r\n\r\n        if (!hasInstruction && !hasDealForInstruction) {\r\n          return prospect; // untouched\r\n        }\r\n\r\n        const updatedProspect = { ...prospect } as any;\r\n        const riskKey = updatedProspect.riskAssessments\r\n          ? 'riskAssessments'\r\n          : updatedProspect.compliance\r\n          ? 'compliance'\r\n          : 'riskAssessments';\r\n\r\n        const currentProspectRisks = Array.isArray(updatedProspect[riskKey])\r\n          ? updatedProspect[riskKey]\r\n          : [];\r\n        updatedProspect[riskKey] = [\r\n          ...currentProspectRisks.filter((r: any) => r.InstructionRef !== risk.InstructionRef),\r\n          risk,\r\n        ];\r\n\r\n        updatedProspect.instructions = (updatedProspect.instructions || []).map((inst: any) => {\r\n          if (inst.InstructionRef === risk.InstructionRef) {\r\n            const instRiskKey = inst.riskAssessments\r\n              ? 'riskAssessments'\r\n              : inst.compliance\r\n              ? 'compliance'\r\n              : 'riskAssessments';\r\n            const currentInstRisks = Array.isArray(inst[instRiskKey]) ? inst[instRiskKey] : [];\r\n            return {\r\n              ...inst,\r\n              [instRiskKey]: [\r\n                ...currentInstRisks.filter((r: any) => r.InstructionRef !== risk.InstructionRef),\r\n                risk,\r\n              ],\r\n            };\r\n          }\r\n          return inst;\r\n        });\r\n\r\n        return updatedProspect;\r\n      }),\r\n    );\r\n\r\n    setSelectedInstruction((prev: any) => {\r\n      if (!prev || prev.InstructionRef !== risk.InstructionRef) return prev;\r\n      const instRiskKey = prev.riskAssessments\r\n        ? 'riskAssessments'\r\n        : prev.compliance\r\n        ? 'compliance'\r\n        : 'riskAssessments';\r\n      const arr = Array.isArray(prev[instRiskKey])\r\n        ? prev[instRiskKey].filter((r: any) => r.InstructionRef !== risk.InstructionRef)\r\n        : [];\r\n      arr.push(risk);\r\n      return { ...prev, [instRiskKey]: arr } as any;\r\n    });\r\n\r\n    setSelectedRisk(risk);\r\n    \r\n    // Close the risk assessment modal\r\n    setShowRiskPage(false);\r\n  };\r\n\r\n  const handleRiskAssessmentDelete = async (instructionRef: string) => {\r\n    try {\r\n      const res = await fetch(`/api/risk-assessments/${encodeURIComponent(instructionRef)}`, { method: 'DELETE' });\r\n      if (!res.ok) {\r\n        const text = await res.text();\r\n        throw new Error(`Delete failed ${res.status}: ${text}`);\r\n      }\r\n\r\n      // Update local state: remove risk from matching prospect/instruction\r\n      setInstructionData(prev => prev.map(prospect => {\r\n        const contains = (prospect.instructions || []).some((i: any) => i.InstructionRef === instructionRef);\r\n        if (!contains) return prospect;\r\n        const updated = { ...prospect } as any;\r\n        const key = updated.riskAssessments ? 'riskAssessments' : (updated.compliance ? 'compliance' : 'riskAssessments');\r\n        if (Array.isArray(updated[key])) {\r\n          updated[key] = updated[key].filter((r: any) => r.InstructionRef !== instructionRef);\r\n        }\r\n        updated.instructions = (updated.instructions || []).map((inst: any) => {\r\n          if (inst.InstructionRef !== instructionRef) return inst;\r\n          const instKey = inst.riskAssessments ? 'riskAssessments' : (inst.compliance ? 'compliance' : 'riskAssessments');\r\n          const arr = Array.isArray(inst[instKey]) ? inst[instKey].filter((r: any) => r.InstructionRef !== instructionRef) : [];\r\n          return { ...inst, [instKey]: arr };\r\n        });\r\n        return updated;\r\n      }));\r\n\r\n      // If the currently selected instruction matches, clear selectedRisk\r\n      if (selectedInstruction?.InstructionRef === instructionRef) {\r\n        setSelectedRisk(null);\r\n      }\r\n\r\n    } catch (err) {\r\n      console.error('Failed to delete risk assessment', err);\r\n      alert('Failed to delete risk assessment.');\r\n    }\r\n  };\r\n\r\n  // Handle deal editing\r\n  const handleDealEdit = useCallback(async (dealId: number, updates: { ServiceDescription?: string; Amount?: number }) => {\r\n    try {\r\n      debugLog('Updating deal:', dealId, updates);\r\n      \r\n      // Call the API endpoint to update the deal\r\n      const response = await fetch('/api/update-deal', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ dealId, ...updates })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const error = await response.json();\r\n        throw new Error(error.error || 'Failed to update deal');\r\n      }\r\n      \r\n      const result = await response.json();\r\n      debugLog('Deal updated successfully:', result);\r\n      \r\n      // Update local state with the updated deal\r\n      setInstructionData(prev => \r\n        prev.map(prospect => ({\r\n          ...prospect,\r\n          deals: (prospect.deals || []).map((deal: any) => \r\n            deal.DealId === dealId ? { ...deal, ...updates } : deal\r\n          ),\r\n          instructions: (prospect.instructions || []).map((inst: any) => ({\r\n            ...inst,\r\n            deals: (inst.deals || []).map((deal: any) => \r\n              deal.DealId === dealId ? { ...deal, ...updates } : deal\r\n            )\r\n          }))\r\n        }))\r\n      );\r\n      \r\n      return result;\r\n    } catch (error) {\r\n      console.error('Error updating deal:', error);\r\n      throw error;\r\n    }\r\n  }, []);\r\n\r\n  // Handle status updates from matter operations\r\n  const handleStatusUpdate = () => {\r\n    console.log('Status update triggered - refreshing instruction data');\r\n    // Force a refresh of instruction data if needed\r\n    setInstructionData(prev => [...prev]); // Trigger re-render\r\n  };\r\n\r\n  // Notify parent when matter opening workflow state changes\r\n  useEffect(() => {\r\n    if (setIsInMatterOpeningWorkflow) {\r\n      setIsInMatterOpeningWorkflow(showNewMatterPage);\r\n    }\r\n  }, [showNewMatterPage, setIsInMatterOpeningWorkflow]);\r\n\r\n  // Check for navigation trigger from Home component\r\n  useEffect(() => {\r\n    const shouldOpenMatterOpening = localStorage.getItem('openMatterOpening');\r\n    if (shouldOpenMatterOpening === 'true') {\r\n      // Clear the flag\r\n      localStorage.removeItem('openMatterOpening');\r\n      // Open matter opening if not already open\r\n      if (!showNewMatterPage) {\r\n        setShowNewMatterPage(true);\r\n        // Scroll to top when opening matter page from navigation\r\n        setTimeout(() => {\r\n          window.scrollTo({ top: 0, behavior: 'smooth' });\r\n        }, 100);\r\n      }\r\n    }\r\n  }, []); // Only run on mount\r\n\r\n  // Resolve the selected deal for the active instruction (used by Workbench)\r\n  const selectedDeal = useMemo(() => {\r\n    if (!selectedInstruction) return null;\r\n    const instRef = String((selectedInstruction as any).InstructionRef ?? \"\");\r\n    if (!instRef) return null;\r\n\r\n    const dealsFromInst = (selectedInstruction as any).deals as unknown;\r\n    if (Array.isArray(dealsFromInst)) {\r\n      const match = dealsFromInst.find((d: unknown) =>\r\n        d && typeof d === \"object\" && String((d as any).InstructionRef ?? \"\") === instRef\r\n      );\r\n      if (match) return match as { DealId: number; ServiceDescription?: string; Amount?: number };\r\n    }\r\n\r\n    // Fallback: scan current instructionData then allInstructionData for matching deal\r\n    const scan = (arr: Array<{ deals?: any[] }> | undefined) => {\r\n      if (!arr) return null;\r\n      for (const p of arr) {\r\n        const d = (p.deals || []).find((x: any) => String(x?.InstructionRef ?? \"\") === instRef);\r\n        if (d) return d as { DealId: number; ServiceDescription?: string; Amount?: number };\r\n      }\r\n      return null;\r\n    };\r\n    return scan(instructionData) || scan(allInstructionData);\r\n  }, [selectedInstruction, instructionData, allInstructionData]);\r\n\r\n  \r\n\r\n  // Filter states\r\n  const [clientsActionFilter, setClientsActionFilter] = useState<'All' | 'Verify ID' | 'Assess Risk' | 'Open Matter' | 'Draft CCL' | 'Complete'>('All');\r\n  const [pitchesStatusFilter, setPitchesStatusFilter] = useState<'All' | 'Open' | 'Closed'>('All');\r\n  const [riskStatusFilter, setRiskStatusFilter] = useState<'All' | 'Outstanding' | 'Completed'>('All');\r\n  \r\n  // Unified secondary filter state - tracks the secondary filter value for each tab\r\n  const [secondaryFilter, setSecondaryFilter] = useState<string>(() => {\r\n    switch (activeTab) {\r\n      case 'clients': return '';\r\n      case 'pitches': return pitchesStatusFilter;\r\n      case 'risk': return riskStatusFilter;\r\n      default: return '';\r\n    }\r\n  });\r\n  \r\n  const [riskFilterRef, setRiskFilterRef] = useState<string | null>(null);\r\n  const [showAllInstructions, setShowAllInstructions] = useState<boolean>(false); // User toggle for mine vs all instructions - defaults to false (show user's own data first)\r\n  // Layout: 1 or 2 columns for overview grid\r\n  const [twoColumn, setTwoColumn] = useState<boolean>(false);\r\n  \r\n  const currentUser: UserData | undefined = userData?.[0] || (teamData as UserData[])[0];\r\n  // Admin detection using proper utility\r\n  const isAdmin = isAdminUser(userData?.[0] || null);\r\n  const isLocalhost = (typeof window !== 'undefined') && (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1');\r\n  \r\n  // State for showing only user's own pitches/deals (defaults to true for non-admin users)\r\n  const [showOnlyMyDeals, setShowOnlyMyDeals] = useState<boolean>(!isAdmin);\r\n\r\n  // Update showOnlyMyDeals when user changes (for user switching)\r\n  useEffect(() => {\r\n    // For non-admin users, always show only their deals\r\n    // For admin users, keep current state or default to false (show everyone's)\r\n    if (!isAdmin) {\r\n      setShowOnlyMyDeals(true);\r\n    }\r\n  }, [isAdmin, currentUser?.Email]);\r\n\r\n  // Reset admin toggle when user changes to ensure proper initial state\r\n  useEffect(() => {\r\n    // Reset to show user's own data when switching users\r\n    setShowAllInstructions(false);\r\n  }, [currentUser?.Email]);\r\n\r\n  // Fetch unified enquiries data for name mapping on component load\r\n  useEffect(() => {\r\n    fetchUnifiedEnquiries();\r\n  }, []);\r\n  \r\n  // Window resize effect for responsive filters\r\n  useEffect(() => {\r\n    const handleResize = () => setWindowWidth(window.innerWidth);\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  // Redirect from risk tab in production\r\n  useEffect(() => {\r\n    if (!isLocalhost && activeTab === 'risk') {\r\n      setActiveTab('pitches');\r\n    }\r\n  }, [isLocalhost, activeTab]);\r\n  \r\n  // Show workbench when instruction is selected\r\n  // Removed automatic workbench hiding logic - workbench now stays visible\r\n  \r\n  const filterInstructionsForUser = useCallback((sourceData: InstructionData[]) => {\r\n    if (!currentUser || (!currentUser.Email && !currentUser.Initials) || sourceData.length === 0) {\r\n      return sourceData;\r\n    }\r\n\r\n    const userEmail = currentUser.Email?.toLowerCase() ?? '';\r\n    const userInitials = currentUser.Initials?.toUpperCase() ?? '';\r\n\r\n    const filtered = sourceData.filter((instruction: any, index) => {\r\n      if (index < 3) {\r\n        debugLog('🔍 Sample instruction structure:', {\r\n          prospectId: instruction.prospectId,\r\n          Email: instruction.Email,\r\n          Lead: instruction.Lead,\r\n          assignedTo: instruction.assignedTo,\r\n          poc: instruction.poc,\r\n          POC: instruction.POC,\r\n          deals: instruction.deals?.map((d: any) => ({\r\n            DealId: d.DealId,\r\n            PitchedBy: d.PitchedBy,\r\n            Status: d.Status,\r\n            Email: d.Email,\r\n            Lead: d.Lead,\r\n            assignedTo: d.assignedTo,\r\n            poc: d.poc\r\n          })),\r\n          instructions: instruction.instructions?.map((i: any) => ({\r\n            InstructionRef: i.InstructionRef,\r\n            HelixContact: i.HelixContact\r\n          }))\r\n        });\r\n      }\r\n\r\n      const belongsToUser = (\r\n        instruction.deals?.some((deal: any) => deal.PitchedBy?.toUpperCase() === userInitials) ||\r\n        instruction.instructions?.some((inst: any) => inst.HelixContact?.toUpperCase() === userInitials) ||\r\n        instruction.Email?.toLowerCase() === userEmail ||\r\n        instruction.Lead?.toLowerCase() === userEmail ||\r\n        instruction.assignedTo?.toLowerCase() === userEmail ||\r\n        instruction.poc?.toLowerCase() === userEmail ||\r\n        instruction.POC?.toUpperCase() === userInitials ||\r\n        instruction.deal?.Email?.toLowerCase() === userEmail ||\r\n        instruction.deal?.Lead?.toLowerCase() === userEmail ||\r\n        instruction.deal?.assignedTo?.toLowerCase() === userEmail ||\r\n        instruction.deal?.poc?.toLowerCase() === userEmail ||\r\n        instruction.deal?.PitchedBy?.toUpperCase() === userInitials ||\r\n        instruction.deals?.some((deal: any) =>\r\n          deal.Email?.toLowerCase() === userEmail ||\r\n          deal.Lead?.toLowerCase() === userEmail ||\r\n          deal.assignedTo?.toLowerCase() === userEmail ||\r\n          deal.poc?.toLowerCase() === userEmail\r\n        )\r\n      );\r\n\r\n      const isOtherUnsure = (\r\n        instruction.instructions?.some((inst: any) => {\r\n          const area = inst.AreaOfWork || inst.Area_of_Work || inst.areaOfWork || '';\r\n          return area.toLowerCase().includes('other') && area.toLowerCase().includes('unsure');\r\n        }) ||\r\n        instruction.deals?.some((deal: any) => {\r\n          const area = deal.AreaOfWork || deal.Area_of_Work || deal.areaOfWork || '';\r\n          return area.toLowerCase().includes('other') && area.toLowerCase().includes('unsure');\r\n        }) ||\r\n        (() => {\r\n          const area = instruction.AreaOfWork || instruction.Area_of_Work || instruction.areaOfWork || '';\r\n          return area.toLowerCase().includes('other') && area.toLowerCase().includes('unsure');\r\n        })()\r\n      );\r\n\r\n  // Only include items that belong to the current user in 'Mine' view.\r\n  // Previously we also included items with Area of Work containing 'other' & 'unsure' for everyone,\r\n  // which caused unrelated 'Other' instructions to appear. That logic is removed here.\r\n  const shouldInclude = belongsToUser;\r\n\r\n      if (shouldInclude) {\r\n        debugLog('✅ Instruction included:', {\r\n          prospectId: instruction.prospectId,\r\n          userEmail,\r\n          userInitials,\r\n          belongsToUser,\r\n          isOtherUnsure,\r\n          areaOfWork: instruction.instructions?.[0]?.AreaOfWork || instruction.deals?.[0]?.AreaOfWork || instruction.AreaOfWork,\r\n          matchedFields: {\r\n            instruction_Email: instruction.Email?.toLowerCase() === userEmail,\r\n            instruction_poc: instruction.poc?.toLowerCase() === userEmail,\r\n            deal_Email: instruction.deal?.Email?.toLowerCase() === userEmail,\r\n            deal_poc: instruction.deal?.poc?.toLowerCase() === userEmail,\r\n            deals_any: instruction.deals?.some((d: any) => d.poc?.toLowerCase() === userEmail)\r\n          }\r\n        });\r\n      }\r\n\r\n      return shouldInclude;\r\n    });\r\n\r\n    debugLog('🔄 Filtered to user instructions:', {\r\n      sourceLength: sourceData.length,\r\n      filteredLength: filtered.length\r\n    });\r\n\r\n    return filtered;\r\n  }, [currentUser]);\r\n\r\n  // Get effective instruction data based on admin mode and user filtering\r\n  const { effectiveInstructionData, userInstructionData } = useMemo(() => {\r\n    debugLog('🔄 effectiveInstructionData calculation:', {\r\n      isAdmin,\r\n      showAllInstructions,\r\n      instructionDataLength: instructionData.length,\r\n      allInstructionDataLength: allInstructionData.length,\r\n      currentUserEmail: currentUser?.Email,\r\n      currentUserInitials: currentUser?.Initials\r\n    });\r\n\r\n    const sourceData = instructionData.length > 0 ? instructionData : allInstructionData;\r\n    const filteredForUser = filterInstructionsForUser(sourceData);\r\n\r\n    let result = filteredForUser;\r\n\r\n    if (showAllInstructions && allInstructionData.length > 0) {\r\n      result = allInstructionData;\r\n      debugLog('🔄 User viewing ALL instructions (including Other/Unsure)');\r\n    } else {\r\n      debugLog('🔄 User viewing OWN instructions (filtered)');\r\n    }\r\n\r\n    debugLog('🔄 effectiveInstructionData updated:', {\r\n      isAdmin,\r\n      showAllInstructions,\r\n      currentUserEmail: currentUser?.Email,\r\n      currentUserInitials: currentUser?.Initials,\r\n      allInstructionDataLength: allInstructionData.length,\r\n      instructionDataLength: instructionData.length,\r\n      resultLength: result.length,\r\n      userResultLength: filteredForUser.length,\r\n      usingAllData: showAllInstructions && allInstructionData.length > 0,\r\n      filteringByUser: !showAllInstructions,\r\n      sampleFilteredItems: result.slice(0, 2).map(r => ({\r\n        prospectId: r.prospectId,\r\n        hasInstructions: r.instructions?.length || 0,\r\n        hasDeals: r.deals?.length || 0,\r\n        deals: r.deals?.map((d: any) => ({\r\n          DealId: d.DealId,\r\n          InstructionRef: d.InstructionRef,\r\n          Email: d.Email,\r\n          Lead: d.Lead,\r\n          assignedTo: d.assignedTo,\r\n          Status: d.Status\r\n        })),\r\n        instructions: r.instructions?.map((i: any) => ({\r\n          InstructionRef: i.InstructionRef\r\n        }))\r\n      }))\r\n    });\r\n\r\n    return {\r\n      effectiveInstructionData: result,\r\n      userInstructionData: filteredForUser\r\n    };\r\n  }, [\r\n    isAdmin,\r\n    showAllInstructions,\r\n    allInstructionData,\r\n    instructionData,\r\n    currentUser,\r\n    filterInstructionsForUser\r\n  ]);\r\n\r\n  // Calculate toggle counts based on active tab and current data\r\n  const toggleCounts = useMemo(() => {\r\n    if (activeTab === 'pitches') {\r\n      // For Pitches tab: count deals that don't have instructions yet\r\n      const myPitchesCount = userInstructionData.reduce((count, prospect) => {\r\n        const pitchedDeals = prospect.deals?.filter((deal: any) => \r\n          !prospect.instructions?.some((inst: any) => inst.InstructionRef === deal.InstructionRef)\r\n        ) || [];\r\n        return count + pitchedDeals.length;\r\n      }, 0);\r\n      \r\n      const allPitchesCount = allInstructionData.reduce((count, prospect) => {\r\n        const pitchedDeals = prospect.deals?.filter((deal: any) => \r\n          !prospect.instructions?.some((inst: any) => inst.InstructionRef === deal.InstructionRef)\r\n        ) || [];\r\n        return count + pitchedDeals.length;\r\n      }, 0);\r\n      \r\n      return {\r\n        mine: myPitchesCount,\r\n        all: allPitchesCount,\r\n        label: 'pitches'\r\n      };\r\n    } else {\r\n      // For Instructions tab: count actual instructions\r\n      const myInstructionsCount = userInstructionData.reduce((count, prospect) => {\r\n        return count + (prospect.instructions?.length || 0);\r\n      }, 0);\r\n      \r\n      const allInstructionsCount = allInstructionData.reduce((count, prospect) => {\r\n        return count + (prospect.instructions?.length || 0);\r\n      }, 0);\r\n      \r\n      return {\r\n        mine: myInstructionsCount,\r\n        all: allInstructionsCount,\r\n        label: 'instructions'\r\n      };\r\n    }\r\n  }, [activeTab, userInstructionData, allInstructionData]);\r\n  \r\n  const showDraftPivot = true; // Allow all users to see Document editor\r\n\r\n  // Unified filter configuration\r\n  const allFilterOptions: TwoLayerFilterOption[] = [\r\n    {\r\n      key: 'pitches',\r\n      label: 'Pitches',\r\n      subOptions: [\r\n        { key: 'All', label: 'All' },\r\n        { key: 'Open', label: 'Open' },\r\n        { key: 'Closed', label: 'Closed' }\r\n      ]\r\n    },\r\n    {\r\n      key: 'clients',\r\n      label: 'Clients',\r\n      subOptions: [] // Remove status filter for Instructions\r\n    },\r\n    {\r\n      key: 'risk',\r\n      label: 'Risk',\r\n      subOptions: [\r\n        { key: 'All', label: 'All' },\r\n        { key: 'Outstanding', label: 'Outstanding' },\r\n        { key: 'Completed', label: 'Completed' }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  // Filter options based on environment - hide risk from production\r\n  const filterOptions: TwoLayerFilterOption[] = isLocalhost \r\n    ? allFilterOptions \r\n    : allFilterOptions.filter(option => option.key !== 'risk');\r\n\r\n  // Unified filter handlers\r\n  const handlePrimaryFilterChange = (key: string) => {\r\n    setActiveTab(key as 'pitches' | 'clients' | 'risk');\r\n    // Reset secondary filter to the default for the new tab\r\n    switch (key) {\r\n      case 'clients':\r\n        setSecondaryFilter('');\r\n        break;\r\n      case 'pitches':\r\n        setSecondaryFilter(pitchesStatusFilter);\r\n        break;\r\n      case 'risk':\r\n        setSecondaryFilter(riskStatusFilter);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSecondaryFilterChange = (key: string) => {\r\n    setSecondaryFilter(key);\r\n    // Update the appropriate individual filter state\r\n    switch (activeTab) {\r\n      case 'clients':\r\n        // Status filter removed for clients\r\n        break;\r\n      case 'pitches':\r\n        setPitchesStatusFilter(key as any);\r\n        break;\r\n      case 'risk':\r\n        setRiskStatusFilter(key as any);\r\n        break;\r\n    }\r\n  };\r\n\r\n  // Sync secondary filter when tab changes\r\n  React.useEffect(() => {\r\n    switch (activeTab) {\r\n      case 'clients':\r\n        setSecondaryFilter('');\r\n        break;\r\n      case 'pitches':\r\n        setSecondaryFilter(pitchesStatusFilter);\r\n        break;\r\n      case 'risk':\r\n        setSecondaryFilter(riskStatusFilter);\r\n        break;\r\n    }\r\n  }, [activeTab, pitchesStatusFilter, riskStatusFilter, isAdmin]);\r\n\r\n  // Clear selection when leaving overview tab\r\n  // Clear selection when leaving clients tab\r\n  useEffect(() => {\r\n    if (activeTab !== \"clients\") {\r\n      setSelectedInstruction(null);\r\n    }\r\n  }, [activeTab]);\r\n\r\n  useEffect(() => {\r\n    if (activeTab !== \"risk\") {\r\n      setRiskFilterRef(null);\r\n    }\r\n  }, [activeTab]);\r\n\r\n  // CustomTabs is 48px tall and sticky at top: 0, so account for it\r\n  const CUSTOM_TABS_HEIGHT = 48;\r\n  const ACTION_BAR_HEIGHT = 48;\r\n\r\n  const quickLinksStyle = (dark: boolean) =>\r\n    mergeStyles({\r\n      backgroundColor: dark\r\n        ? colours.dark.sectionBackground\r\n        : colours.light.sectionBackground,\r\n      boxShadow: dark\r\n        ? \"0 2px 6px rgba(0,0,0,0.5)\"\r\n        : \"0 2px 6px rgba(0,0,0,0.12)\",\r\n      padding: \"10px 24px 12px 24px\", // Taller bar like Enquiries\r\n      transition: \"background-color 0.3s\",\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      gap: \"8px\",\r\n      overflowX: \"auto\",\r\n      msOverflowStyle: \"none\",\r\n      scrollbarWidth: \"none\",\r\n      alignItems: \"center\",\r\n      position: \"sticky\",\r\n      top: CUSTOM_TABS_HEIGHT + ACTION_BAR_HEIGHT,\r\n      zIndex: 999,\r\n      borderTopLeftRadius: 0,\r\n      borderTopRightRadius: 0,\r\n      selectors: {\r\n        '::-webkit-scrollbar': {\r\n          display: 'none',\r\n        },\r\n        '@media (max-width: 768px)': {\r\n          flexWrap: 'wrap',\r\n          padding: '10px 16px 12px 16px',\r\n        }\r\n      },\r\n    });\r\n\r\n  const detailNavStyle = (dark: boolean) =>\r\n    mergeStyles({\r\n      backgroundColor: dark\r\n        ? colours.dark.sectionBackground\r\n        : colours.light.sectionBackground,\r\n      boxShadow: dark\r\n        ? \"0 2px 6px rgba(0,0,0,0.5)\"\r\n        : \"0 2px 6px rgba(0,0,0,0.12)\",\r\n      borderTop: dark\r\n        ? \"1px solid rgba(255,255,255,0.1)\"\r\n        : \"1px solid rgba(0,0,0,0.05)\",\r\n      padding: \"10px 24px 12px 24px\", // Match taller style\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      gap: \"8px\",\r\n      alignItems: \"center\",\r\n      position: \"sticky\",\r\n      top: CUSTOM_TABS_HEIGHT + ACTION_BAR_HEIGHT,\r\n      zIndex: 999,\r\n    });\r\n\r\n  const pivotBarStyle = (dark: boolean) =>\r\n    mergeStyles({\r\n      backgroundColor: dark\r\n        ? colours.dark.sectionBackground\r\n        : colours.light.sectionBackground,\r\n      boxShadow: dark\r\n        ? \"0 2px 4px rgba(0,0,0,0.4)\"\r\n        : \"0 2px 4px rgba(0,0,0,0.1)\",\r\n      borderTop: dark\r\n        ? \"1px solid rgba(255,255,255,0.1)\"\r\n        : \"1px solid rgba(0,0,0,0.05)\",\r\n      padding: \"0 24px\",\r\n      transition: \"background-color 0.3s\",\r\n      position: \"sticky\",\r\n      top: CUSTOM_TABS_HEIGHT + ACTION_BAR_HEIGHT * 2,\r\n      zIndex: 998,\r\n      // Responsive padding\r\n      '@media (max-width: 768px)': {\r\n        padding: \"0 16px\",\r\n      },\r\n      '@media (max-width: 480px)': {\r\n        padding: \"0 12px\",\r\n      },\r\n    });\r\n\r\n  const useLocalData =\r\n    (typeof process !== 'undefined' && process.env && process.env.REACT_APP_USE_LOCAL_DATA === \"true\") ||\r\n    window.location.hostname === \"localhost\";\r\n\r\nconst workbenchPanelBackground = (isDarkMode: boolean): string => (\r\n  isDarkMode\r\n    ? 'linear-gradient(135deg, rgba(17, 24, 39, 0.94) 0%, rgba(15, 23, 42, 0.98) 100%)'\r\n    : 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)'\r\n);\r\n\r\nconst workbenchHeaderBackground = (isDarkMode: boolean): string => (\r\n  isDarkMode \r\n    ? 'linear-gradient(135deg, rgba(6, 23, 51, 0.95) 0%, rgba(13, 47, 96, 0.98) 100%)'\r\n    : `linear-gradient(135deg, ${colours.darkBlue} 0%, ${colours.missedBlue} 100%)`\r\n);\r\n\r\nconst workbenchCardBackground = (isDarkMode: boolean): string => (\r\n  isDarkMode\r\n    ? 'linear-gradient(135deg, rgba(30, 41, 59, 0.92) 0%, rgba(15, 23, 42, 0.96) 100%)'\r\n    : '#FFFFFF'\r\n);\r\n\r\nconst workbenchBorderColour = (isDarkMode: boolean): string => (\r\n  isDarkMode ? 'rgba(148, 163, 184, 0.32)' : '#e2e8f0'\r\n);\r\n\r\nconst workbenchMutedText = (isDarkMode: boolean): string => (\r\n  isDarkMode ? 'rgba(226, 232, 240, 0.72)' : '#64748b'\r\n);\r\n\r\nconst workbenchButtonHover = (isDarkMode: boolean): string => (\r\n  isDarkMode ? 'rgba(59, 130, 246, 0.2)' : '#f0f9ff'\r\n);\r\n\r\n  const isProduction = (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === \"production\") && !useLocalData;\r\n  // Subtle Helix watermark generator – three rounded ribbons rotated slightly\r\n  const helixWatermarkSvg = (dark: boolean) => {\r\n    const fill = dark ? '%23FFFFFF' : '%23061733';\r\n    const opacity = dark ? '0.06' : '0.035';\r\n    const svg = `<svg xmlns='http://www.w3.org/2000/svg' width='900' height='900' viewBox='0 0 900 900'>\r\n      <g transform='rotate(-12 450 450)'>\r\n        <path d='M160 242 C160 226 176 210 200 210 L560 210 Q640 235 560 274 L200 274 C176 274 160 258 160 242 Z' fill='${fill}' fill-opacity='${opacity}'/>\r\n        <path d='M160 362 C160 346 176 330 200 330 L560 330 Q640 355 560 394 L200 394 C176 394 160 378 160 362 Z' fill='${fill}' fill-opacity='${opacity}'/>\r\n        <path d='M160 482 C160 466 176 450 200 450 L560 450 Q640 475 560 514 L200 514 C176 514 160 498 160 482 Z' fill='${fill}' fill-opacity='${opacity}'/>\r\n      </g>\r\n    </svg>`;\r\n    return `url(\"data:image/svg+xml,${svg}\")`;\r\n  };\r\n\r\n  const handleBack = () => {\r\n    if (showNewMatterPage) {\r\n      setShowNewMatterPage(false);\r\n      setSelectedInstruction(null);\r\n      setPendingInstructionRef('');\r\n      setForceNewMatter(false);\r\n    } else if (showRiskPage) {\r\n      setShowRiskPage(false);\r\n      setSelectedRisk(null);\r\n    } else if (showEIDPage) {\r\n      setShowEIDPage(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setContent(\r\n      <>\r\n        {showNewMatterPage || showRiskPage || showEIDPage ? (\r\n          <div className={detailNavStyle(isDarkMode)}>\r\n            <div \r\n              className=\"nav-back-button\"\r\n              onClick={handleBack}\r\n              style={{\r\n                background: isDarkMode ? colours.dark.sectionBackground : \"#f3f3f3\",\r\n                border: '1px solid #e1dfdd',\r\n                borderRadius: '0',\r\n                width: '32px',\r\n                height: '32px',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                cursor: 'pointer',\r\n                transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n                boxShadow: '0 1px 2px rgba(0,0,0,0.1)',\r\n                position: 'relative',\r\n                overflow: 'hidden',\r\n                marginRight: 8,\r\n              }}\r\n              onMouseEnter={(e) => {\r\n                e.currentTarget.style.background = '#e7f1ff';\r\n                e.currentTarget.style.border = '1px solid #3690CE';\r\n                e.currentTarget.style.width = '120px';\r\n                e.currentTarget.style.boxShadow = '0 2px 8px rgba(54,144,206,0.08)';\r\n              }}\r\n              onMouseLeave={(e) => {\r\n                e.currentTarget.style.background = isDarkMode ? colours.dark.sectionBackground : \"#f3f3f3\";\r\n                e.currentTarget.style.border = '1px solid #e1dfdd';\r\n                e.currentTarget.style.width = '32px';\r\n                e.currentTarget.style.boxShadow = '0 1px 2px rgba(0,0,0,0.1)';\r\n              }}\r\n              title=\"Back\"\r\n              role=\"button\"\r\n              tabIndex={0}\r\n              onKeyDown={(e) => {\r\n                if (e.key === 'Enter' || e.key === ' ') {\r\n                  handleBack();\r\n                }\r\n              }}\r\n            >\r\n              {/* ChevronLeft Icon */}\r\n              <svg \r\n                width=\"16\" \r\n                height=\"16\" \r\n                viewBox=\"0 0 16 16\" \r\n                fill=\"none\"\r\n                style={{\r\n                  transition: 'color 0.3s, opacity 0.3s',\r\n                  color: isDarkMode ? '#ffffff' : '#666666',\r\n                  position: 'absolute',\r\n                  left: '50%',\r\n                  top: '50%',\r\n                  transform: 'translate(-50%, -50%)',\r\n                }}\r\n              >\r\n                <path \r\n                  d=\"M10 12L6 8L10 4\" \r\n                  stroke=\"currentColor\" \r\n                  strokeWidth=\"1.5\" \r\n                  strokeLinecap=\"round\" \r\n                  strokeLinejoin=\"round\"\r\n                />\r\n              </svg>\r\n              \r\n              {/* Expandable Text */}\r\n              <span \r\n                style={{\r\n                  position: 'absolute',\r\n                  left: '50%',\r\n                  top: '50%',\r\n                  transform: 'translate(-50%, -50%)',\r\n                  fontSize: '14px',\r\n                  fontWeight: 600,\r\n                  color: '#3690CE',\r\n                  opacity: 0,\r\n                  transition: 'opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n                  whiteSpace: 'nowrap',\r\n                }}\r\n                className=\"back-text\"\r\n              >\r\n                Back\r\n              </span>\r\n            </div>\r\n            \r\n            <style>{`\r\n              .nav-back-button:hover .back-text {\r\n                opacity: 1 !important;\r\n              }\r\n              .nav-back-button:hover svg {\r\n                opacity: 0 !important;\r\n              }\r\n            `}</style>\r\n          </div>\r\n        ) : riskFilterRef ? (\r\n          <div className={detailNavStyle(isDarkMode)}>\r\n            <div \r\n              className=\"nav-back-button\"\r\n              onClick={() => setRiskFilterRef(null)}\r\n              style={{\r\n                background: isDarkMode ? colours.dark.sectionBackground : \"#f3f3f3\",\r\n                border: '1px solid #e1dfdd',\r\n                borderRadius: '0',\r\n                width: '32px',\r\n                height: '32px',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                cursor: 'pointer',\r\n                transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n                boxShadow: '0 1px 2px rgba(0,0,0,0.1)',\r\n                position: 'relative',\r\n                overflow: 'hidden',\r\n                marginRight: 8,\r\n              }}\r\n              onMouseEnter={(e) => {\r\n                e.currentTarget.style.background = '#e7f1ff';\r\n                e.currentTarget.style.border = '1px solid #3690CE';\r\n                e.currentTarget.style.width = '150px';\r\n                e.currentTarget.style.boxShadow = '0 2px 8px rgba(54,144,206,0.08)';\r\n              }}\r\n              onMouseLeave={(e) => {\r\n                e.currentTarget.style.background = isDarkMode ? colours.dark.sectionBackground : \"#f3f3f3\";\r\n                e.currentTarget.style.border = '1px solid #e1dfdd';\r\n                e.currentTarget.style.width = '32px';\r\n                e.currentTarget.style.boxShadow = '0 1px 2px rgba(0,0,0,0.1)';\r\n              }}\r\n              title=\"Back to Risk & Compliance\"\r\n              role=\"button\"\r\n              tabIndex={0}\r\n              onKeyDown={(e) => {\r\n                if (e.key === 'Enter' || e.key === ' ') {\r\n                  setRiskFilterRef(null);\r\n                }\r\n              }}\r\n            >\r\n              {/* ChevronLeft Icon */}\r\n              <svg \r\n                width=\"16\" \r\n                height=\"16\" \r\n                viewBox=\"0 0 16 16\" \r\n                fill=\"none\"\r\n                style={{\r\n                  transition: 'color 0.3s, opacity 0.3s',\r\n                  color: isDarkMode ? '#ffffff' : '#666666',\r\n                  position: 'absolute',\r\n                  left: '50%',\r\n                  top: '50%',\r\n                  transform: 'translate(-50%, -50%)',\r\n                }}\r\n              >\r\n                <path \r\n                  d=\"M10 12L6 8L10 4\" \r\n                  stroke=\"currentColor\" \r\n                  strokeWidth=\"1.5\" \r\n                  strokeLinecap=\"round\" \r\n                  strokeLinejoin=\"round\"\r\n                />\r\n              </svg>\r\n              \r\n              {/* Expandable Text */}\r\n              <span \r\n                style={{\r\n                  position: 'absolute',\r\n                  left: '50%',\r\n                  top: '50%',\r\n                  transform: 'translate(-50%, -50%)',\r\n                  fontSize: '14px',\r\n                  fontWeight: 600,\r\n                  color: '#3690CE',\r\n                  opacity: 0,\r\n                  transition: 'opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n                  whiteSpace: 'nowrap',\r\n                }}\r\n                className=\"back-text\"\r\n              >\r\n                Back to Risk & Compliance\r\n              </span>\r\n            </div>\r\n            \r\n            <span style={{ \r\n              fontSize: '14px', \r\n              fontWeight: 600, \r\n              color: isDarkMode ? colours.dark.text : colours.light.text,\r\n              marginLeft: '8px'\r\n            }}>\r\n              Risk & Compliance: {riskFilterRef}\r\n            </span>\r\n            \r\n            <style>{`\r\n              .nav-back-button:hover .back-text {\r\n                opacity: 1 !important;\r\n              }\r\n              .nav-back-button:hover svg {\r\n                opacity: 0 !important;\r\n              }\r\n            `}</style>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <FilterBanner\r\n              seamless\r\n              dense\r\n              primaryFilter={\r\n                <TwoLayerFilter\r\n                  id=\"instructions-unified-filter\"\r\n                  ariaLabel=\"Instructions navigation and filtering\"\r\n                  primaryValue={activeTab}\r\n                  secondaryValue={secondaryFilter}\r\n                  onPrimaryChange={handlePrimaryFilterChange}\r\n                  onSecondaryChange={handleSecondaryFilterChange}\r\n                  options={filterOptions}\r\n                  hideSecondaryInProduction={true}\r\n                  style={{\r\n                    fontSize: windowWidth < 768 ? '10px' : '11px',\r\n                    transform: windowWidth < 768 ? 'scale(0.9)' : 'none',\r\n                    transformOrigin: 'left center'\r\n                  }}\r\n                />\r\n              }\r\n              secondaryFilter={\r\n                <div style={{ display: 'flex', gap: 6, alignItems: 'center', transform: 'scale(0.96)', transformOrigin: 'left center' }}>\r\n                  <SegmentedControl\r\n                    id=\"instructions-scope-seg\"\r\n                    ariaLabel={`Scope: toggle between my ${toggleCounts.label} and all ${toggleCounts.label}`}\r\n                    value={showAllInstructions ? 'all' : 'mine'}\r\n                    onChange={(v) => setShowAllInstructions(v === 'all')}\r\n                    options={[\r\n                      { key: 'mine', label: 'Mine', badge: toggleCounts.mine },\r\n                      { key: 'all', label: 'All', badge: toggleCounts.all, disabled: !isAdmin && !isLocalhost }\r\n                    ]}\r\n                  />\r\n                  <SegmentedControl\r\n                    id=\"instructions-layout-seg\"\r\n                    ariaLabel=\"Layout: choose 1 or 2 columns\"\r\n                    value={twoColumn ? 'two' : 'one'}\r\n                    onChange={(v) => setTwoColumn(v === 'two')}\r\n                    options={[\r\n                      { key: 'one', label: '1' },\r\n                      { key: 'two', label: '2' }\r\n                    ]}\r\n                  />\r\n                </div>\r\n              }\r\n            />\r\n          </>\r\n        )}\r\n      </>,\r\n    );\r\n    return () => setContent(null);\r\n  }, [\r\n    setContent,\r\n    isDarkMode,\r\n    effectiveInstructionData,\r\n    activeTab,\r\n    showNewMatterPage,\r\n    showRiskPage,\r\n    showEIDPage,\r\n    selectedInstruction,\r\n    hasActiveMatter,\r\n    riskFilterRef,\r\n    clientsActionFilter,\r\n    riskStatusFilter,\r\n    secondaryFilter,\r\n  ]);\r\n\r\n  const containerStyle = mergeStyles({\r\n    background: isDarkMode ? colours.darkBlue : '#ffffff',\r\n    minHeight: \"100vh\",\r\n    boxSizing: \"border-box\",\r\n    color: isDarkMode ? colours.light.text : colours.dark.text,\r\n    position: 'relative',\r\n    '&::before': {\r\n      content: '\"\"',\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      background: 'none',\r\n      backgroundImage: helixWatermarkSvg(isDarkMode),\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundPosition: isDarkMode ? 'right -120px top -80px' : 'right -140px top -100px',\r\n      backgroundSize: 'min(52vmin, 520px)',\r\n      pointerEvents: 'none',\r\n      zIndex: 0\r\n    }\r\n  });\r\n\r\n  const newMatterContainerStyle = mergeStyles(containerStyle, {\r\n    padding: \"12px\",\r\n    position: \"relative\",\r\n    zIndex: 1,\r\n  });\r\n\r\n  const sectionContainerStyle = (dark: boolean) =>\r\n    mergeStyles({\r\n      backgroundColor: 'transparent', // Remove section background - let cards sit on main page background\r\n      padding: \"0px\",\r\n      paddingBottom: activeTab === \"clients\" && !selectedInstruction ? \"104px\" : \"0px\", // No extra padding when workbench replaces global actions\r\n      borderRadius: 0,\r\n      boxShadow: \"none\",\r\n      width: \"100%\",\r\n      // Responsive padding\r\n      '@media (max-width: 768px)': {\r\n        padding: \"0px\",\r\n        paddingBottom: activeTab === \"clients\" && !selectedInstruction ? \"76px\" : \"0px\",\r\n      },\r\n      '@media (max-width: 480px)': {\r\n        padding: \"0px\",\r\n        paddingBottom: activeTab === \"clients\" && !selectedInstruction ? \"72px\" : \"0px\",\r\n      },\r\n    });\r\n\r\n  const overviewItems = useMemo(() => {\r\n    const items = effectiveInstructionData.flatMap((prospect) => {\r\n      const instructionItems = (prospect.instructions ?? []).map((inst) => {\r\n        const dealsForInst = (prospect.deals ?? []).filter(\r\n          (d) => d.InstructionRef === inst.InstructionRef,\r\n        );\r\n        const clientsForInst: ClientInfo[] = [];\r\n        const prospectClients = [\r\n          ...(prospect.jointClients ?? prospect.joinedClients ?? []),\r\n          ...dealsForInst.flatMap((d) => d.jointClients ?? []),\r\n        ];\r\n        prospectClients.forEach((jc) => {\r\n          if (dealsForInst.some((d) => d.DealId === jc.DealId)) {\r\n            clientsForInst.push({\r\n              ClientEmail: jc.ClientEmail,\r\n              HasSubmitted: jc.HasSubmitted,\r\n              Lead: false,\r\n              deals: [\r\n                {\r\n                  DealId: jc.DealId,\r\n                  InstructionRef: inst.InstructionRef,\r\n                  ServiceDescription: dealsForInst.find(\r\n                    (d) => d.DealId === jc.DealId,\r\n                  )?.ServiceDescription,\r\n                  Status: dealsForInst.find((d) => d.DealId === jc.DealId)?.Status,\r\n                },\r\n              ],\r\n            });\r\n          }\r\n        });\r\n        dealsForInst.forEach((d) => {\r\n          if (d.LeadClientEmail) {\r\n            clientsForInst.push({\r\n              ClientEmail: d.LeadClientEmail,\r\n              Lead: true,\r\n              deals: [\r\n                {\r\n                  DealId: d.DealId,\r\n                  InstructionRef: d.InstructionRef,\r\n                  ServiceDescription: d.ServiceDescription,\r\n                  Status: d.Status,\r\n                },\r\n              ],\r\n            });\r\n          }\r\n        });\r\n        const deal = dealsForInst[0];\r\n\r\n        const riskSource = [\r\n          ...(prospect.riskAssessments ?? prospect.compliance ?? []),\r\n          ...((inst as any).riskAssessments ?? (inst as any).compliance ?? []),\r\n        ];\r\n        dealsForInst.forEach((d) => {\r\n          if (d.instruction) {\r\n            riskSource.push(...(d.instruction.riskAssessments ?? []));\r\n            riskSource.push(...(d.instruction.compliance ?? []));\r\n          }\r\n        });\r\n        const eidSource = [\r\n          ...(prospect.electronicIDChecks ?? []),\r\n          ...(prospect.idVerifications ?? []),\r\n          ...((inst as any).electronicIDChecks ?? []),\r\n          ...((inst as any).idVerifications ?? []),\r\n          ...dealsForInst.flatMap((d) => [\r\n            ...(d.instruction?.electronicIDChecks ?? []),\r\n            ...(d.instruction?.idVerifications ?? []),\r\n          ]),\r\n        ];\r\n        const risk = riskSource.find((r) => r.MatterId === inst.InstructionRef);\r\n        const eids = eidSource.filter(\r\n          (e) => (e.MatterId ?? e.InstructionRef) === inst.InstructionRef,\r\n        );\r\n        const eid = eids[0];\r\n        const rawDocs = [\r\n          ...(prospect.documents ?? []),\r\n          ...((inst as any).documents ?? []),\r\n          ...dealsForInst.flatMap((d) => [\r\n            ...(d.documents ?? []),\r\n            ...(d.instruction?.documents ?? []),\r\n          ]),\r\n        ];\r\n        const docsMap: Record<string, any> = {};\r\n        rawDocs.forEach((doc) => {\r\n          const key =\r\n            doc.DocumentId !== undefined\r\n              ? String(doc.DocumentId)\r\n              : `${doc.FileName ?? ''}-${doc.UploadedAt ?? ''}`;\r\n          if (!docsMap[key]) {\r\n            docsMap[key] = doc;\r\n          }\r\n        });\r\n        const docs = Object.values(docsMap);\r\n        return {\r\n          instruction: inst,\r\n          deal,\r\n          deals: dealsForInst,\r\n          clients: clientsForInst,\r\n          risk,\r\n          eid,\r\n          eids,\r\n          documents: docs,\r\n          prospectId: deal?.ProspectId || inst?.ProspectId || prospect.prospectId,\r\n          documentCount: docs ? docs.length : 0,\r\n        };\r\n      });\r\n\r\n      // Also process standalone deals that don't have instructions yet (Pitched stage)\r\n      const standaloneDeals = (prospect.deals ?? []).filter(\r\n        (deal) => !deal.InstructionRef || \r\n        !(prospect.instructions ?? []).some(inst => inst.InstructionRef === deal.InstructionRef)\r\n      ).map((deal) => {\r\n        const clientsForDeal: ClientInfo[] = [];\r\n        const dealClients = [\r\n          ...(prospect.jointClients ?? prospect.joinedClients ?? []),\r\n          ...(deal.jointClients ?? []),\r\n        ];\r\n        \r\n        dealClients.forEach((jc) => {\r\n          if (jc.DealId === deal.DealId) {\r\n            clientsForDeal.push({\r\n              ClientEmail: jc.ClientEmail,\r\n              HasSubmitted: jc.HasSubmitted,\r\n              Lead: false,\r\n              deals: [{\r\n                DealId: deal.DealId,\r\n                InstructionRef: deal.InstructionRef,\r\n                ServiceDescription: deal.ServiceDescription,\r\n                Status: deal.Status,\r\n              }],\r\n            });\r\n          }\r\n        });\r\n        \r\n        if (deal.LeadClientEmail) {\r\n          clientsForDeal.push({\r\n            ClientEmail: deal.LeadClientEmail,\r\n            Lead: true,\r\n            deals: [{\r\n              DealId: deal.DealId,\r\n              InstructionRef: deal.InstructionRef,\r\n              ServiceDescription: deal.ServiceDescription,\r\n              Status: deal.Status,\r\n            }],\r\n          });\r\n        }\r\n\r\n        return {\r\n          instruction: null, // No instruction yet for pitched deals\r\n          deal,\r\n          deals: [deal],\r\n          clients: clientsForDeal,\r\n          risk: null,\r\n          eid: null,\r\n          eids: [],\r\n          documents: deal.documents ?? [],\r\n          prospectId: deal.ProspectId || prospect.prospectId,\r\n          documentCount: deal.documents?.length ?? 0,\r\n        };\r\n      });\r\n\r\n      return [...instructionItems, ...standaloneDeals];\r\n    });\r\n\r\n    const unique: Record<string, typeof items[number]> = {};\r\n    items.forEach((item) => {\r\n      const ref = item.instruction?.InstructionRef as string | undefined;\r\n      const dealId = item.deal?.DealId as string | undefined;\r\n      \r\n      // Use InstructionRef if available, otherwise use DealId for standalone deals\r\n      const key = ref || (dealId ? `deal-${dealId}` : null);\r\n      \r\n      if (key && !unique[key]) {\r\n        unique[key] = item;\r\n      }\r\n    });\r\n    return Object.values(unique);\r\n  }, [effectiveInstructionData, enquiries]);\r\n\r\n  // Debug logging for input data\r\n  React.useEffect(() => {\r\n    debugLog('Debug - effectiveInstructionData:', effectiveInstructionData.length, 'prospects');\r\n    const allDeals = effectiveInstructionData.flatMap(p => p.deals ?? []);\r\n    debugLog('Debug - Total deals in data:', allDeals.length);\r\n    debugLog('Debug - Sample deals:', allDeals.slice(0, 3).map(d => ({\r\n      dealId: d.DealId,\r\n      instructionRef: d.InstructionRef,\r\n      status: d.Status,\r\n      acid: d.ACID || d.acid || d.Acid\r\n    })));\r\n  }, [effectiveInstructionData]);\r\n\r\n  // Debug logging for pitches\r\n  React.useEffect(() => {\r\n    const pitchedItems = overviewItems.filter(item => !item.instruction && item.deal);\r\n    debugLog('Debug - Total overview items:', overviewItems.length);\r\n    debugLog('Debug - Pitched deals (no instruction):', pitchedItems.length);\r\n    debugLog('Debug - Pitched deals details:', pitchedItems.map(item => ({\r\n      dealId: item.deal?.DealId,\r\n      status: item.deal?.Status,\r\n      acid: item.deal?.ACID || item.deal?.acid || item.deal?.Acid,\r\n      firstName: item.deal?.firstName,\r\n      lastName: item.deal?.lastName,\r\n      prospectId: item.prospectId\r\n    })));\r\n  }, [overviewItems]);\r\n\r\n  const selectedOverviewItem = useMemo(\r\n    () =>\r\n      selectedInstruction\r\n        ? overviewItems.find(\r\n            (item) =>\r\n              item.instruction?.InstructionRef ===\r\n              selectedInstruction.InstructionRef,\r\n          ) || null\r\n        : null,\r\n    [selectedInstruction, overviewItems],\r\n  );\r\n\r\n  // Derive a normalized Area of Work label and color for the selected instruction\r\n  const areaOfWorkInfo = useMemo(() => {\r\n    if (!selectedInstruction) return { label: '', color: colours.blue };\r\n\r\n    const normalize = (raw?: unknown): { label: string; color: string } => {\r\n      const val = typeof raw === 'string' ? raw.trim() : '';\r\n      if (!val) return { label: '', color: colours.blue };\r\n      const l = val.toLowerCase();\r\n      if (l.includes('commercial')) return { label: 'Commercial', color: colours.blue }; // Use consistent blue\r\n      if (l.includes('construction')) return { label: 'Construction', color: '#f59e0b' }; // Amber\r\n      if (l.includes('property')) return { label: 'Property', color: '#10b981' }; // Emerald\r\n      if (l.includes('employment')) return { label: 'Employment', color: '#8b5cf6' }; // Violet\r\n      return { label: val, color: colours.blue }; // fallback: show as-is with default color\r\n    };\r\n\r\n    // Try instruction-level first\r\n    const inst: any = selectedInstruction as any;\r\n    const fields = [\r\n      inst?.AreaOfWork,\r\n      inst?.Area_of_Work,\r\n      inst?.areaOfWork,\r\n      inst?.PracticeArea,\r\n      inst?.practiceArea,\r\n      inst?.Department,\r\n      inst?.WorkType\r\n    ];\r\n    \r\n    for (const field of fields) {\r\n      const result = normalize(field);\r\n      if (result.label) return result;\r\n    }\r\n\r\n    // Then deal-level via selectedDeal or overview item\r\n    const deal: any = (selectedDeal as any) || (selectedOverviewItem as any)?.deal;\r\n    const dealFields = [\r\n      deal?.AreaOfWork,\r\n      deal?.Area_of_Work,\r\n      deal?.areaOfWork,\r\n      deal?.PracticeArea,\r\n      deal?.practiceArea,\r\n      deal?.Department,\r\n      deal?.WorkType\r\n    ];\r\n    \r\n    for (const field of dealFields) {\r\n      const result = normalize(field);\r\n      if (result.label) return result;\r\n    }\r\n\r\n    return { label: '', color: colours.blue };\r\n  }, [selectedInstruction, selectedDeal, selectedOverviewItem]);\r\n\r\n  const poidResult =\r\n    selectedOverviewItem?.eid?.EIDOverallResult?.toLowerCase() ?? \"\";\r\n  const eidStatus = selectedOverviewItem?.eid?.EIDStatus?.toLowerCase() ?? \"\";\r\n  const poidPassed = poidResult === \"passed\" || poidResult === \"approved\" || poidResult === \"verified\";\r\n  const verificationFound = !!selectedOverviewItem?.eid;\r\n  \r\n  // Match InstructionCard logic for verification status\r\n  let verifyIdStatus: 'pending' | 'received' | 'review' | 'complete';\r\n  const proofOfIdComplete = Boolean(\r\n    selectedInstruction?.PassportNumber || selectedInstruction?.DriversLicenseNumber\r\n  );\r\n  \r\n  if (!selectedOverviewItem?.eid || eidStatus === 'pending') {\r\n    verifyIdStatus = proofOfIdComplete ? 'received' : 'pending';\r\n  } else if (poidPassed) {\r\n    verifyIdStatus = 'complete';\r\n  } else {\r\n    verifyIdStatus = 'review';\r\n  }\r\n  \r\n  const verifyButtonReview = verifyIdStatus === 'review';\r\n  const verifyButtonDisabled = verifyIdStatus === 'complete';\r\n  const verifyButtonLabel = verifyIdStatus === 'complete'\r\n    ? \"ID Verified\"\r\n    : verifyIdStatus === 'review'\r\n    ? \"Review ID\"\r\n    : \"Verify ID\";\r\n\r\n  const verifyButtonBorder = verifyButtonDisabled\r\n    ? (isDarkMode ? 'rgba(34, 197, 94, 0.6)' : colours.green)\r\n    : verifyButtonReview\r\n      ? (isDarkMode ? 'rgba(250, 204, 21, 0.7)' : colours.yellow)\r\n      : (isDarkMode ? 'rgba(96, 165, 250, 0.7)' : colours.blue);\r\n  const verifyButtonBackground = verifyButtonDisabled\r\n    ? (isDarkMode ? 'rgba(34, 197, 94, 0.12)' : '#f0f9ff')\r\n    : (isDarkMode ? 'rgba(15, 23, 42, 0.6)' : 'transparent');\r\n  const verifyButtonColor = verifyButtonDisabled\r\n    ? (isDarkMode ? '#bbf7d0' : colours.green)\r\n    : verifyButtonReview\r\n      ? (isDarkMode ? '#facc15' : colours.yellow)\r\n      : (isDarkMode ? '#93c5fd' : colours.blue);\r\n\r\n  const riskResultRaw = selectedOverviewItem?.risk?.RiskAssessmentResult?.toString().toLowerCase() ?? \"\";\r\n  const riskStatus = riskResultRaw\r\n    ? ['low', 'low risk', 'pass', 'approved'].includes(riskResultRaw)\r\n        ? 'complete'\r\n        : 'flagged'\r\n    : 'pending';\r\n  const riskButtonDisabled = riskStatus === 'complete';\r\n  const riskButtonBorder = riskButtonDisabled\r\n    ? (isDarkMode ? 'rgba(34, 197, 94, 0.6)' : colours.green)\r\n    : (isDarkMode ? 'rgba(96, 165, 250, 0.7)' : colours.blue);\r\n  const riskButtonBackground = riskButtonDisabled\r\n    ? (isDarkMode ? 'rgba(34, 197, 94, 0.12)' : '#f0f9ff')\r\n    : (isDarkMode ? 'rgba(15, 23, 42, 0.6)' : 'transparent');\r\n  const riskButtonColor = riskButtonDisabled\r\n    ? (isDarkMode ? '#bbf7d0' : colours.green)\r\n    : (isDarkMode ? '#bfdbfe' : colours.blue);\r\n  \r\n  // Payment status logic\r\n  const paymentResult = selectedOverviewItem?.instruction?.PaymentResult?.toLowerCase();\r\n  const paymentCompleted = paymentResult === \"successful\";\r\n\r\n  const matterLinked = useMemo(() => {\r\n    if (!selectedInstruction) return false;\r\n    \r\n    // Find the prospect that contains this instruction\r\n    const prospect = effectiveInstructionData.find(p => \r\n      p.instructions?.some((inst: any) => inst.InstructionRef === selectedInstruction.InstructionRef)\r\n    );\r\n    \r\n    if (!prospect) return false;\r\n    \r\n    // Check if this prospect has any matters that correspond to this instruction\r\n    // This could be based on InstructionRef or MatterId\r\n    const hasMatter = prospect.matters?.some((matter: any) => \r\n      matter.InstructionRef === selectedInstruction.InstructionRef ||\r\n      (selectedInstruction.MatterId && matter.MatterID === selectedInstruction.MatterId)\r\n    );\r\n    \r\n    return !!hasMatter;\r\n  }, [selectedInstruction, effectiveInstructionData]);\r\n  \r\n  // Check if CCL has been submitted for this instruction\r\n  const cclCompleted = useMemo(() => {\r\n    if (!selectedInstruction) return false;\r\n    return !!selectedInstruction.CCLSubmitted;\r\n  }, [selectedInstruction]);\r\n  \r\n  // Open Matter button should be enabled when:\r\n  // 1. Both ID is verified AND payment is complete (normal flow), OR\r\n  // 2. There's a matter opening in progress (so user can continue)\r\n  const canOpenMatter = (poidPassed && paymentCompleted) || hasActiveMatterOpening();\r\n  const matterButtonBorder = matterLinked\r\n    ? (isDarkMode ? 'rgba(34, 197, 94, 0.6)' : colours.green)\r\n    : (isDarkMode ? 'rgba(96, 165, 250, 0.7)' : colours.blue);\r\n  const matterButtonBackground = matterLinked\r\n    ? (isDarkMode ? 'rgba(34, 197, 94, 0.12)' : '#f0f9ff')\r\n    : (isDarkMode ? 'rgba(15, 23, 42, 0.6)' : 'transparent');\r\n  const matterButtonColor = matterLinked\r\n    ? (isDarkMode ? '#bbf7d0' : colours.green)\r\n    : (isDarkMode ? '#bfdbfe' : colours.blue);\r\n\r\n  const syncButtonActive = Boolean(selectedOverviewItem?.instruction?.MatterRef);\r\n  const syncButtonBorder = isDarkMode ? 'rgba(34, 197, 94, 0.6)' : colours.green;\r\n  const syncButtonBackground = syncButtonActive\r\n    ? (isDarkMode ? 'rgba(34, 197, 94, 0.16)' : '#f0f9ff')\r\n    : (isDarkMode ? 'rgba(30, 41, 59, 0.55)' : '#f5f5f5');\r\n  const syncButtonColor = syncButtonActive\r\n    ? (isDarkMode ? '#bbf7d0' : colours.green)\r\n    : (isDarkMode ? 'rgba(226, 232, 240, 0.5)' : colours.greyText);\r\n\r\n  const cclButtonBorder = cclCompleted\r\n    ? (isDarkMode ? 'rgba(34, 197, 94, 0.6)' : colours.green)\r\n    : (isDarkMode ? 'rgba(96, 165, 250, 0.7)' : colours.blue);\r\n  const cclButtonBackground = cclCompleted\r\n    ? (isDarkMode ? 'rgba(34, 197, 94, 0.12)' : '#f0f9ff')\r\n    : (isDarkMode ? 'rgba(15, 23, 42, 0.6)' : 'transparent');\r\n  const cclButtonColor = cclCompleted\r\n    ? (isDarkMode ? '#bbf7d0' : colours.green)\r\n    : (isDarkMode ? '#bfdbfe' : colours.blue);\r\n\r\n  // Derive current matter display number for the selected instruction (fallback across common field names)\r\n  const currentMatterDisplayNumber = useMemo(() => {\r\n    const mid = selectedInstruction?.MatterId;\r\n    const iref = selectedInstruction?.InstructionRef;\r\n\r\n    const getDisplay = (m: unknown): string | '' => {\r\n      if (!m || typeof m !== 'object') return '';\r\n      const mm = m as Record<string, unknown>;\r\n      const dn = (mm.DisplayNumber || mm['Display Number'] || mm.displayNumber || mm.display_number);\r\n      return typeof dn === 'string' ? dn : '';\r\n    };\r\n\r\n    // 1) Check top-level matters prop if provided\r\n    const fromMatters = (matters || []).find((m: any) =>\r\n      (m?.MatterID && mid && m.MatterID === mid) || (m?.InstructionRef && iref && m.InstructionRef === iref)\r\n    );\r\n    const dnFromMatters = getDisplay(fromMatters);\r\n    if (dnFromMatters) return dnFromMatters;\r\n\r\n    // 2) Check prospect-scoped matters within effectiveInstructionData\r\n    const prospect = effectiveInstructionData.find(p => p.instructions?.some((inst: any) => inst.InstructionRef === iref));\r\n    const fromProspect = prospect?.matters?.find((m: any) =>\r\n      (m?.MatterID && mid && m.MatterID === mid) || (m?.InstructionRef && iref && m.InstructionRef === iref)\r\n    );\r\n    const dnFromProspect = getDisplay(fromProspect);\r\n    if (dnFromProspect) return dnFromProspect;\r\n\r\n    return '';\r\n  }, [selectedInstruction, matters, effectiveInstructionData]);\r\n  \r\n  // Helper function to get area of work color\r\n  const getAreaColor = (area?: string): string => {\r\n    if (!area) return colours.blue;\r\n    const normalizedArea = area.toLowerCase();\r\n    switch (normalizedArea) {\r\n      case 'commercial': return colours.blue;\r\n      case 'property': return colours.green;\r\n      case 'construction': return colours.orange;\r\n      case 'employment': return colours.yellow;\r\n      default: return colours.blue;\r\n    }\r\n  };\r\n\r\n  // Determine which button should pulse to indicate next ready action\r\n  const getNextReadyAction = (): 'verify' | 'risk' | 'matter' | 'ccl' | null => {\r\n    if (!selectedInstruction) return null;\r\n    \r\n    // Check if the selected instruction has an associated matter\r\n    const hasAssociatedMatter = selectedInstruction && (\r\n      selectedInstruction.MatterId || \r\n      (selectedInstruction as any).matters?.length > 0\r\n    );\r\n    \r\n    // If instruction has a matter but CCL not submitted, prioritize CCL button\r\n    if (hasAssociatedMatter && !cclCompleted) {\r\n      return 'ccl';\r\n    }\r\n    \r\n    // Priority 1: If ID needs verification or review, verify button should pulse\r\n    if (!verifyButtonDisabled) {\r\n      return 'verify';\r\n    }\r\n    \r\n    // Priority 2: If risk needs assessment (pending), risk button should pulse\r\n    if (riskStatus === 'pending') {\r\n      return 'risk';\r\n    }\r\n    \r\n    // Priority 3: If matter can be opened, matter button should pulse\r\n    if (canOpenMatter && !matterLinked) {\r\n      return 'matter';\r\n    }\r\n    \r\n    return null;\r\n  };\r\n  \r\n  const nextReadyAction = getNextReadyAction();\r\n  \r\n  const disableOtherActions = false; // Enable all actions regardless of selection\r\n\r\n  const unlinkedDeals = useMemo(\r\n    () =>\r\n      effectiveInstructionData.flatMap((p) =>\r\n        (p.deals ?? []).filter((d) => !d.InstructionRef),\r\n      ),\r\n    [effectiveInstructionData],\r\n  );\r\n\r\n  const instructionRefs = useRef<Record<string, HTMLDivElement | null>>({});\r\n\r\n  const deals = useMemo(\r\n    () =>\r\n      effectiveInstructionData.flatMap((p) =>\r\n        (p.deals ?? []).map((d) => {\r\n          // Attempt to derive lead client name from available data\r\n          let firstName = '';\r\n          let lastName = '';\r\n\r\n          // First priority: Look up by ProspectId in enquiries data\r\n          if (d.ProspectId || d.prospectId) {\r\n            const prospectIdLookup = getClientNameByProspectId(d.ProspectId || d.prospectId);\r\n            if (prospectIdLookup.firstName || prospectIdLookup.lastName) {\r\n              firstName = prospectIdLookup.firstName;\r\n              lastName = prospectIdLookup.lastName;\r\n            }\r\n          }\r\n\r\n          // Second priority: Use existing email-based lookup if no name found from ACID\r\n          if ((!firstName && !lastName) && d.LeadClientEmail) {\r\n            const emailLc = d.LeadClientEmail.toLowerCase();\r\n\r\n            // Look in instruction-level data for a matching client\r\n            const matchingInstruction = (p.instructions ?? []).find((inst: any) =>\r\n              inst.Email?.toLowerCase() === emailLc\r\n            );\r\n\r\n            if (matchingInstruction) {\r\n              firstName = matchingInstruction.FirstName || '';\r\n              lastName = matchingInstruction.LastName || '';\r\n            } else {\r\n              // Fall back to joint client records\r\n              const jointSources = [\r\n                ...(p.jointClients ?? p.joinedClients ?? []),\r\n                ...(d.jointClients ?? []),\r\n              ];\r\n              const jointClient = jointSources.find((jc: any) =>\r\n                jc.ClientEmail?.toLowerCase() === emailLc\r\n              );\r\n\r\n              if (jointClient) {\r\n                firstName = jointClient.FirstName || jointClient.Name?.split(' ')[0] || '';\r\n                lastName =\r\n                  jointClient.LastName || jointClient.Name?.split(' ').slice(1).join(' ') || '';\r\n              }\r\n            }\r\n          }\r\n\r\n          return {\r\n            ...d,\r\n            firstName,\r\n            lastName,\r\n            jointClients: [\r\n              // Only include prospect-level joint clients that match this deal's DealId\r\n              ...(p.jointClients ?? p.joinedClients ?? []).filter((jc) => jc.DealId === d.DealId),\r\n              // Include deal-level joint clients\r\n              ...(d.jointClients ?? []),\r\n            ],\r\n            documents: [\r\n              // Include prospect-level documents that match this deal's DealId\r\n              ...(p.documents ?? []).filter((doc) => doc.DealId === d.DealId),\r\n              // Include deal-level documents\r\n              ...(d.documents ?? []),\r\n              // Include instruction-level documents if deal has an instruction\r\n              ...(d.instruction?.documents ?? []),\r\n            ],\r\n          };\r\n        })\r\n      ),\r\n    [effectiveInstructionData, enquiries],\r\n  );\r\n  const clients: ClientInfo[] = useMemo(() => {\r\n    const map: Record<string, ClientInfo> = {};\r\n    effectiveInstructionData.forEach((p) => {\r\n      const deals = p.deals ?? [];\r\n      deals.forEach((d) => {\r\n        if (d.LeadClientEmail) {\r\n          const key = d.LeadClientEmail;\r\n          const entry = map[key] || {\r\n            ClientEmail: key,\r\n            Lead: true,\r\n            deals: [] as DealSummary[],\r\n          };\r\n          entry.Lead = true;\r\n          (entry.deals as DealSummary[]).push({\r\n            DealId: d.DealId,\r\n            InstructionRef: d.InstructionRef,\r\n            ServiceDescription: d.ServiceDescription,\r\n            Status: d.Status,\r\n          });\r\n          map[key] = entry;\r\n        }\r\n      });\r\n      // Process joint clients - combine prospect-level and deal-level, but filter prospect-level by DealId\r\n      const allJointClients = [\r\n        // Prospect-level joint clients (filter by DealId)\r\n        ...(p.jointClients ?? p.joinedClients ?? []),\r\n        // Deal-level joint clients  \r\n        ...deals.flatMap((d) => d.jointClients ?? [])\r\n      ];\r\n      \r\n      allJointClients.forEach((jc) => {\r\n        const key = jc.ClientEmail;\r\n        const entry = map[key] || {\r\n          ClientEmail: jc.ClientEmail,\r\n          HasSubmitted: jc.HasSubmitted,\r\n          Lead: false,\r\n          deals: [] as DealSummary[],\r\n          // Only include specific fields we want to display\r\n          DealJointClientId: jc.DealJointClientId,\r\n          DealId: jc.DealId,\r\n          SubmissionDateTime: jc.SubmissionDateTime,\r\n        };\r\n        // Update only the fields we want\r\n        entry.HasSubmitted = jc.HasSubmitted;\r\n        entry.DealJointClientId = jc.DealJointClientId;\r\n        entry.DealId = jc.DealId;\r\n        entry.SubmissionDateTime = jc.SubmissionDateTime;\r\n        const deal = deals.find((dd) => dd.DealId === jc.DealId);\r\n        if (deal) {\r\n          (entry.deals as DealSummary[]).push({\r\n            DealId: deal.DealId,\r\n            InstructionRef: deal.InstructionRef,\r\n            ServiceDescription: deal.ServiceDescription,\r\n            Status: deal.Status,\r\n          });\r\n        }\r\n        map[key] = entry;\r\n      });\r\n    });\r\n    return Object.values(map);\r\n  }, [effectiveInstructionData]);\r\n\r\n  const riskComplianceData = useMemo(\r\n    () =>\r\n      effectiveInstructionData.flatMap((p) => {\r\n        const instructions = p.instructions ?? [];\r\n        const deals = p.deals ?? [];\r\n        const riskSource: any[] = [\r\n          ...(p.riskAssessments ?? []),\r\n          ...(p.compliance ?? []),\r\n        ];\r\n        const prospectEids: any[] = [\r\n          ...(p.electronicIDChecks ?? []),\r\n          ...(p.idVerifications ?? []),\r\n        ];\r\n        const eidSource: any[] = [...prospectEids];\r\n        prospectEids.forEach((eid: any) => {\r\n          riskSource.push({\r\n            MatterId: eid.InstructionRef ?? eid.MatterId,\r\n            ComplianceDate: eid.EIDCheckedDate,\r\n            CheckId: eid.EIDCheckId,\r\n            CheckResult: eid.EIDOverallResult,\r\n            PEPandSanctionsCheckResult: eid.PEPAndSanctionsCheckResult,\r\n            AddressVerificationCheckResult: eid.AddressVerificationResult,\r\n            EIDStatus: eid.EIDStatus,\r\n          });\r\n        });\r\n        instructions.forEach((inst: any) => {\r\n          riskSource.push(...(inst.riskAssessments ?? []));\r\n          riskSource.push(...(inst.compliance ?? []));\r\n          const instEids: any[] = [\r\n            ...(inst.electronicIDChecks ?? []),\r\n            ...(inst.idVerifications ?? []),\r\n          ];\r\n          eidSource.push(...instEids);\r\n          instEids.forEach((eid: any) => {\r\n            riskSource.push({\r\n              MatterId: eid.InstructionRef ?? inst.InstructionRef,\r\n              ComplianceDate: eid.EIDCheckedDate,\r\n              CheckId: eid.EIDCheckId,\r\n              CheckResult: eid.EIDOverallResult,\r\n              PEPandSanctionsCheckResult: eid.PEPAndSanctionsCheckResult,\r\n              AddressVerificationCheckResult: eid.AddressVerificationResult,\r\n              EIDStatus: eid.EIDStatus,\r\n            });\r\n          });\r\n        });\r\n        deals.forEach((d: any) => {\r\n          if (d.instruction) {\r\n            riskSource.push(...(d.instruction.riskAssessments ?? []));\r\n            riskSource.push(...(d.instruction.compliance ?? []));\r\n            const instEids: any[] = [\r\n              ...(d.instruction.electronicIDChecks ?? []),\r\n              ...(d.instruction.idVerifications ?? []),\r\n            ];\r\n            eidSource.push(...instEids);\r\n            instEids.forEach((eid: any) => {\r\n              riskSource.push({\r\n                MatterId: eid.InstructionRef ?? d.InstructionRef,\r\n                ComplianceDate: eid.EIDCheckedDate,\r\n                CheckId: eid.EIDCheckId,\r\n                CheckResult: eid.EIDOverallResult,\r\n                PEPandSanctionsCheckResult: eid.PEPAndSanctionsCheckResult,\r\n                AddressVerificationCheckResult: eid.AddressVerificationResult,\r\n                EIDStatus: eid.EIDStatus,\r\n              });\r\n            });\r\n          }\r\n        });\r\n        return riskSource.map((r: any) => {\r\n          const eid = eidSource.find((e: any) => e.MatterId === r.MatterId);\r\n          const instruction = instructions.find(\r\n            (i: any) => i.InstructionRef === r.MatterId,\r\n          );\r\n          const deal = deals.find((d: any) => d.InstructionRef === r.MatterId);\r\n\r\n          const dealsForInst = deals.filter(\r\n            (d: any) => d.InstructionRef === r.MatterId,\r\n          );\r\n          const clientsForInst: ClientInfo[] = [];\r\n          const prospectClients = [\r\n            ...(p.jointClients ?? p.joinedClients ?? []),\r\n            ...dealsForInst.flatMap((d) => d.jointClients ?? []),\r\n          ];\r\n          \r\n          // Helper function to find client details from instruction data\r\n          const findClientDetails = (email: string) => {\r\n            // Look in instructions for matching email\r\n            const matchingInstruction = instructions.find((inst: any) => \r\n              inst.Email?.toLowerCase() === email?.toLowerCase()\r\n            );\r\n            if (matchingInstruction) {\r\n              return {\r\n                FirstName: matchingInstruction.FirstName,\r\n                LastName: matchingInstruction.LastName,\r\n                CompanyName: matchingInstruction.CompanyName,\r\n                Phone: matchingInstruction.Phone,\r\n              };\r\n            }\r\n            \r\n            // Look in joint clients data for additional details\r\n            const jointClient = prospectClients.find((jc: any) => \r\n              jc.ClientEmail?.toLowerCase() === email?.toLowerCase()\r\n            );\r\n            if (jointClient) {\r\n              return {\r\n                FirstName: jointClient.FirstName || jointClient.Name?.split(' ')[0],\r\n                LastName: jointClient.LastName || jointClient.Name?.split(' ').slice(1).join(' '),\r\n                CompanyName: jointClient.CompanyName,\r\n                Phone: jointClient.Phone,\r\n              };\r\n            }\r\n            \r\n            return {};\r\n          };\r\n          \r\n          prospectClients.forEach((jc) => {\r\n            if (dealsForInst.some((d) => d.DealId === jc.DealId)) {\r\n              const clientDetails = findClientDetails(jc.ClientEmail);\r\n              clientsForInst.push({\r\n                ClientEmail: jc.ClientEmail,\r\n                HasSubmitted: jc.HasSubmitted,\r\n                Lead: false,\r\n                ...clientDetails,\r\n                deals: [\r\n                  {\r\n                    DealId: jc.DealId,\r\n                    InstructionRef: r.MatterId,\r\n                    ServiceDescription: dealsForInst.find(\r\n                      (d) => d.DealId === jc.DealId,\r\n                    )?.ServiceDescription,\r\n                    Status: dealsForInst.find((d) => d.DealId === jc.DealId)?.Status,\r\n                  },\r\n                ],\r\n              });\r\n            }\r\n          });\r\n          dealsForInst.forEach((d) => {\r\n            if (d.LeadClientEmail) {\r\n              const clientDetails = findClientDetails(d.LeadClientEmail);\r\n              clientsForInst.push({\r\n                ClientEmail: d.LeadClientEmail,\r\n                Lead: true,\r\n                ...clientDetails,\r\n                deals: [\r\n                  {\r\n                    DealId: d.DealId,\r\n                    InstructionRef: d.InstructionRef,\r\n                    ServiceDescription: d.ServiceDescription,\r\n                    Status: d.Status,\r\n                  },\r\n                ],\r\n              });\r\n            }\r\n          });\r\n\r\n          return {\r\n            ...r,\r\n            EIDStatus: eid?.EIDStatus,\r\n            instruction,\r\n            deal,\r\n            ServiceDescription: deal?.ServiceDescription,\r\n            Stage: instruction?.Stage,\r\n            clients: clientsForInst,\r\n          };\r\n        });\r\n      }),\r\n    [effectiveInstructionData],\r\n  );\r\n\r\n  const filteredRiskComplianceData = useMemo(() => {\r\n    let base = riskComplianceData.filter(r => riskFilterRef ? r.MatterId === riskFilterRef : true);\r\n    if (riskStatusFilter === 'All') return base;\r\n    const isCompleted = (item: any) => {\r\n      const passed = (val: any) => typeof val === 'string' && ['passed','approved','low','low risk'].includes(val.toLowerCase());\r\n      const eidOk = passed(item.EIDStatus) || passed(item.CheckResult) || passed(item.EIDOverallResult);\r\n      const riskOk = passed(item.RiskAssessmentResult) || passed(item.CheckResult);\r\n      return eidOk && riskOk;\r\n    };\r\n    if (riskStatusFilter === 'Completed') return base.filter(isCompleted);\r\n    return base.filter(i => !isCompleted(i));\r\n  }, [riskComplianceData, riskFilterRef, riskStatusFilter]);\r\n\r\n  // Derive next action for clients (overview items reused later)\r\n  const overviewItemsWithNextAction = useMemo(()=>{\r\n    return overviewItems.map(item => {\r\n      const inst = item.instruction as any;\r\n      const eid = item.eid;\r\n      const riskResultRaw = item.risk?.RiskAssessmentResult?.toString().toLowerCase();\r\n      const poidResult = eid?.EIDOverallResult?.toLowerCase();\r\n      const poidPassed = poidResult === 'passed' || poidResult === 'approved' || poidResult === 'verified';\r\n      const eidStatus = eid?.EIDStatus?.toLowerCase() ?? '';\r\n      const proofOfIdComplete = Boolean(inst?.PassportNumber || inst?.DriversLicenseNumber);\r\n      let verifyIdStatus: 'pending' | 'received' | 'review' | 'complete';\r\n      if (!eid || eidStatus === 'pending') verifyIdStatus = proofOfIdComplete ? 'received' : 'pending';\r\n      else if (poidPassed) verifyIdStatus = 'complete'; else verifyIdStatus = 'review';\r\n      const riskStatus = riskResultRaw ? (['low','low risk','pass','approved'].includes(riskResultRaw)? 'complete':'flagged') : 'pending';\r\n      const paymentCompleted = (inst?.PaymentResult||'').toLowerCase() === 'successful';\r\n      const hasMatter = inst?.MatterId;\r\n      const cclSubmitted = inst?.CCLSubmitted;\r\n      let nextAction: string = 'Complete';\r\n      if (verifyIdStatus !== 'complete') nextAction = 'Verify ID';\r\n      else if (riskStatus === 'pending') nextAction = 'Assess Risk';\r\n      else if (!hasMatter && poidPassed && paymentCompleted) nextAction = 'Open Matter';\r\n      else if (hasMatter && !cclSubmitted) nextAction = 'Draft CCL';\r\n      return { ...item, nextAction };\r\n    });\r\n  }, [overviewItems]);\r\n\r\n  const filteredOverviewItems = useMemo(()=>{\r\n    if (clientsActionFilter === 'All') return overviewItemsWithNextAction;\r\n    return overviewItemsWithNextAction.filter(i => i.nextAction === clientsActionFilter || (clientsActionFilter==='Complete' && i.nextAction==='Complete'));\r\n  }, [overviewItemsWithNextAction, clientsActionFilter]);\r\n\r\n  // Local dev helper: detect instructions whose next required action is Matter Opening\r\n  const isLocalhostEnv = typeof window !== 'undefined' && (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1');\r\n  const openMatterCandidates = useMemo(() => {\r\n    return filteredOverviewItems.filter((i: any) => i.nextAction === 'Open Matter');\r\n  }, [filteredOverviewItems]);\r\n\r\n  // Create POID data for client address information\r\n  const idVerificationOptions = useMemo(() => {\r\n    const seen = new Set<string>();\r\n    return effectiveInstructionData.flatMap((p) => {\r\n      const instructions = p.instructions ?? [];\r\n      const all: any[] = [\r\n        ...(p.electronicIDChecks ?? []),\r\n        ...(p.idVerifications ?? []),\r\n      ];\r\n      instructions.forEach((inst: any) => {\r\n        all.push(...(inst.electronicIDChecks ?? []));\r\n        all.push(...(inst.idVerifications ?? []));\r\n        if (inst.PassportNumber || inst.DriversLicenseNumber) {\r\n          all.push({ ...inst, fromInstruction: true });\r\n        }\r\n      });\r\n      return all.flatMap((v) => {\r\n        if (!v) return [];\r\n        const key = String(v.InternalId ?? v.MatterId ?? v.InstructionRef ?? \"\");\r\n        if (seen.has(key)) return [];\r\n        seen.add(key);\r\n        const instRef = v.InstructionRef ?? v.MatterId;\r\n        const inst = instructions.find((i: any) => i.InstructionRef === instRef) ?? (v.fromInstruction ? v : null);\r\n        const merged: any = { ...inst, ...v };\r\n        delete merged.EIDRawResponse;\r\n        \r\n        // Add verification results and status information\r\n        const eidOverallResult = v.EIDOverallResult || merged.EIDOverallResult;\r\n        const eidStatus = v.EIDStatus || merged.EIDStatus;\r\n        \r\n        return [\r\n          {\r\n            poid_id: String(merged.InternalId ?? key),\r\n            prefix: merged.Title,\r\n            first: merged.FirstName,\r\n            last: merged.LastName,\r\n            company_name: merged.CompanyName,\r\n            nationality: merged.Nationality,\r\n            nationality_iso: merged.NationalityAlpha2,\r\n            date_of_birth: merged.DOB,\r\n            best_number: merged.Phone,\r\n            email: merged.Email,\r\n            passport_number: merged.PassportNumber,\r\n            drivers_license_number: merged.DriversLicenseNumber,\r\n            house_building_number: merged.HouseNumber,\r\n            street: merged.Street,\r\n            city: merged.City,\r\n            county: merged.County,\r\n            post_code: merged.Postcode,\r\n            country: merged.Country,\r\n            country_code: merged.CountryCode,\r\n            company_number: merged.CompanyNumber,\r\n            company_house_building_number: merged.CompanyHouseNumber,\r\n            company_street: merged.CompanyStreet,\r\n            company_city: merged.CompanyCity,\r\n            company_county: merged.CompanyCounty,\r\n            company_post_code: merged.CompanyPostcode,\r\n            company_country: merged.CompanyCountry,\r\n            company_country_code: merged.CompanyCountryCode,\r\n            stage: merged.Stage,\r\n            // Add verification status and results\r\n            EIDOverallResult: eidOverallResult,\r\n            EIDStatus: eidStatus,\r\n            CheckResult: v.CheckResult,\r\n            DocumentType: v.DocumentType,\r\n            DocumentNumber: v.DocumentNumber,\r\n            IssuedDate: v.IssuedDate,\r\n            ExpiryDate: v.ExpiryDate,\r\n            IssuingCountry: v.IssuingCountry,\r\n            CheckDate: v.CheckDate,\r\n            FraudScore: v.FraudScore,\r\n            AuthenticityScore: v.AuthenticityScore,\r\n            QualityScore: v.QualityScore,\r\n            BiometricScore: v.BiometricScore,\r\n            Notes: v.Notes,\r\n            // Add individual verification results for address and PEP checks\r\n            AddressVerificationResult: eidOverallResult === 'Passed' ? 'Passed' : eidOverallResult === 'Failed' ? 'Review' : eidOverallResult === 'Review' ? 'Review' : null,\r\n            PEPAndSanctionsCheckResult: eidOverallResult === 'Passed' ? 'Passed' : eidOverallResult === 'Failed' ? 'Review' : eidOverallResult === 'Review' ? 'Review' : null,\r\n            ...merged,\r\n          },\r\n        ];\r\n      });\r\n    });\r\n  }, [effectiveInstructionData]);\r\n\r\n  // Group risk compliance data by instruction reference\r\n  const groupedRiskComplianceData = useMemo(() => {\r\n    const grouped = new Map<string, {\r\n      instructionRef: string;\r\n      riskAssessments: any[];\r\n      idVerifications: any[];\r\n      clients: any[];\r\n      serviceDescription?: string;\r\n      stage?: string;\r\n      allData: any[];\r\n    }>();\r\n\r\n    filteredRiskComplianceData.forEach(item => {\r\n      const instructionRef = item.InstructionRef || item.MatterId || 'Unknown';\r\n      \r\n      if (!grouped.has(instructionRef)) {\r\n        grouped.set(instructionRef, {\r\n          instructionRef,\r\n          riskAssessments: [],\r\n          idVerifications: [],\r\n          clients: item.clients || [],\r\n          serviceDescription: item.ServiceDescription,\r\n          stage: item.Stage,\r\n          allData: []\r\n        });\r\n      }\r\n\r\n      const group = grouped.get(instructionRef)!;\r\n      group.allData.push(item);\r\n\r\n      // Categorize the item based on its properties\r\n      if (item.CheckId || item.EIDStatus || item.EIDCheckedDate || \r\n          item.CheckResult || item.PEPandSanctionsCheckResult || \r\n          item.AddressVerificationCheckResult) {\r\n        // This is an ID verification item\r\n        group.idVerifications.push(item);\r\n      } else {\r\n        // This is a risk assessment item\r\n        group.riskAssessments.push(item);\r\n      }\r\n\r\n      // Update shared properties (take from latest item)\r\n      if (item.ServiceDescription) group.serviceDescription = item.ServiceDescription;\r\n      if (item.Stage) group.stage = item.Stage;\r\n      if (item.clients && item.clients.length > 0) group.clients = item.clients;\r\n    });\r\n\r\n    // Now enhance each group with proper ID verification data from instructionData\r\n    Array.from(grouped.values()).forEach(group => {\r\n      // Find the corresponding instruction data for this instruction ref\r\n      const instructionItem = effectiveInstructionData.find(p => \r\n        p.instructions?.some((inst: any) => inst.InstructionRef === group.instructionRef)\r\n      );\r\n      \r\n      if (instructionItem) {\r\n        const instruction = instructionItem.instructions?.find((inst: any) => \r\n          inst.InstructionRef === group.instructionRef\r\n        );\r\n        \r\n        // Get all ID verifications for this instruction\r\n        const allIdVerifications = [\r\n          ...(instructionItem.idVerifications || []),\r\n          ...(instruction?.idVerifications || [])\r\n        ].filter(idv => idv.InstructionRef === group.instructionRef);\r\n        \r\n        // Add these to the group's ID verifications\r\n        group.idVerifications.push(...allIdVerifications);\r\n        \r\n        // Add instruction data to allData for personal info lookup\r\n        if (instruction) {\r\n          group.allData.push(instruction);\r\n        }\r\n        \r\n        // Update stage and service description from instruction if available\r\n        if (instruction && !group.stage) {\r\n          group.stage = instruction.Stage;\r\n        }\r\n        \r\n        // Find the deal for this instruction to get service description\r\n        const deal = instructionItem.deals?.find((d: any) => d.InstructionRef === group.instructionRef);\r\n        if (deal && !group.serviceDescription) {\r\n          group.serviceDescription = deal.ServiceDescription;\r\n        }\r\n        \r\n        // Enhanced client data with proper names and ID verification status\r\n        const enhancedClients: any[] = [];\r\n        \r\n        // Get deals for this instruction (needed for both lead and joint client processing)\r\n        const deals = instructionItem.deals?.filter((d: any) => d.InstructionRef === group.instructionRef) || [];\r\n        \r\n        // Add lead client from instruction data with basic fallback\r\n        if (instruction) {\r\n          const leadIdVerification = allIdVerifications.find(idv => \r\n            idv.ClientEmail?.toLowerCase() === instruction.Email?.toLowerCase()\r\n          );\r\n          \r\n          // Find POID data for this client to get address information\r\n          const leadPoidData = idVerificationOptions?.find(poid => \r\n            poid.email?.toLowerCase() === instruction.Email?.toLowerCase()\r\n          );\r\n          \r\n          enhancedClients.push({\r\n            ClientEmail: instruction.Email,\r\n            FirstName: instruction.FirstName || instruction.Name?.split(' ')[0] || 'Client',\r\n            LastName: instruction.LastName || instruction.Name?.split(' ').slice(1).join(' ') || '',\r\n            CompanyName: instruction.CompanyName,\r\n            Lead: true,\r\n            HasSubmitted: true, // If instruction exists, they've submitted\r\n            idVerification: leadIdVerification,\r\n            // Add address information from POID data\r\n            house_building_number: leadPoidData?.house_building_number,\r\n            street: leadPoidData?.street,\r\n            city: leadPoidData?.city,\r\n            county: leadPoidData?.county,\r\n            post_code: leadPoidData?.post_code,\r\n            country: leadPoidData?.country\r\n          });\r\n        }\r\n        \r\n        // Add joint clients from deal data AND prospect data\r\n        \r\n        // Get all joint clients from both prospect level and deal level\r\n        const allJointClients = [\r\n          // Prospect-level joint clients (filter by DealId matching this instruction's deals)\r\n          ...(instructionItem.jointClients || instructionItem.joinedClients || []).filter(jc => \r\n            deals.some(d => d.DealId === jc.DealId)\r\n          ),\r\n          // Deal-level joint clients\r\n          ...deals.flatMap(d => d.jointClients || [])\r\n        ];\r\n        \r\n        // Process all joint clients\r\n        allJointClients.forEach((jc: any) => {\r\n          const jointIdVerification = allIdVerifications.find(idv => \r\n            idv.ClientEmail?.toLowerCase() === jc.ClientEmail?.toLowerCase()\r\n          );\r\n          \r\n          // Try to find instruction data for this joint client\r\n          const jointInstruction = instructionData\r\n            .flatMap(p => p.instructions || [])\r\n            .find((inst: any) => inst.Email?.toLowerCase() === jc.ClientEmail?.toLowerCase());\r\n          \r\n          // Find POID data for this joint client to get address information\r\n          const jointPoidData = idVerificationOptions?.find(poid => \r\n            poid.email?.toLowerCase() === jc.ClientEmail?.toLowerCase()\r\n          );\r\n          \r\n          enhancedClients.push({\r\n            ClientEmail: jc.ClientEmail,\r\n            FirstName: jointInstruction?.FirstName || jc.FirstName || jc.Name?.split(' ')[0],\r\n            LastName: jointInstruction?.LastName || jc.LastName || jc.Name?.split(' ').slice(1).join(' '),\r\n            CompanyName: jointInstruction?.CompanyName || jc.CompanyName,\r\n            Lead: false,\r\n            HasSubmitted: jc.HasSubmitted || Boolean(jointInstruction),\r\n            idVerification: jointIdVerification,\r\n            // Add address information from POID data\r\n            house_building_number: jointPoidData?.house_building_number,\r\n            street: jointPoidData?.street,\r\n            city: jointPoidData?.city,\r\n            county: jointPoidData?.county,\r\n            post_code: jointPoidData?.post_code,\r\n            country: jointPoidData?.country\r\n          });\r\n        });\r\n        \r\n        // Replace the clients array with enhanced data\r\n        if (enhancedClients.length > 0) {\r\n          group.clients = enhancedClients;\r\n        }\r\n      }\r\n    });\r\n\r\n    return Array.from(grouped.values());\r\n  }, [filteredRiskComplianceData, effectiveInstructionData, idVerificationOptions]);\r\n\r\n  const handleOpenMatter = (inst: any) => {\r\n    if (hasActiveMatterOpening()) {\r\n      setPendingInstruction(inst);\r\n      setIsResumeDialogOpen(true);\r\n    } else {\r\n      setSelectedInstruction(inst);\r\n      setPendingInstructionRef('');\r\n      setForceNewMatter(false);\r\n      setShowNewMatterPage(true);\r\n      // Scroll to top when opening matter for selected instruction\r\n      setTimeout(() => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n      }, 100);\r\n    }\r\n  };\r\n\r\n  const handleRiskAssessment = (item: any) => {\r\n    if (item) {\r\n      setSelectedInstruction(item.instruction ?? item);\r\n      setSelectedRisk(item.risk ?? item.riskAssessments?.[0] ?? null);\r\n      // Risk assessment logic without auto-opening workbench\r\n    }\r\n    setPendingInstructionRef('');\r\n    setShowRiskPage(true);\r\n  };\r\n\r\n  const handleEIDCheck = async (inst: any) => {\r\n    if (!inst?.InstructionRef) {\r\n      console.error('No instruction reference provided for ID verification');\r\n      return;\r\n    }\r\n\r\n    const instructionRef = inst.InstructionRef;\r\n    \r\n    // Determine current verification status using enhanced logic for Tiller API responses\r\n    const eid = inst.eidData || inst.EIDData;\r\n    const eids = inst.eidS;\r\n    const eidStatus = inst.EIDStatus;\r\n    const eidResult = inst.EIDOverallResult?.toLowerCase();\r\n    \r\n    // Try alternative field names for ID verification data\r\n    const altEidResult = (inst.eidOverallResult || inst.eid_overall_result || inst.overallResult)?.toLowerCase();\r\n    const altAddressResult = (inst.addressVerificationResult || inst.AddressVerificationResult || inst.address_verification_result)?.toLowerCase();\r\n    const altPepResult = (inst.pepAndSanctionsCheckResult || inst.PEPAndSanctionsCheckResult || inst.pep_and_sanctions_check_result)?.toLowerCase();\r\n    \r\n    const poidPassed = inst.EIDOverallResult?.toLowerCase() === 'passed' || inst.EIDOverallResult?.toLowerCase() === 'complete' || inst.EIDOverallResult?.toLowerCase() === 'verified';\r\n    console.log('Status check for', inst.InstructionRef, ':', {\r\n      EIDOverallResult: inst.EIDOverallResult,\r\n      stage: inst.stage,\r\n      poidPassed,\r\n      stageComplete: inst.stage === 'proof-of-id-complete'\r\n    });\r\n    const stageComplete = inst.stage === 'proof-of-id-complete';\r\n    const proofOfIdComplete = inst.ProofOfIdComplete || inst.proof_of_id_complete;\r\n    \r\n    // Check if we have Tiller API response data\r\n    let tillerOverallResult = null;\r\n    if (eid && typeof eid === 'object' && eid.overallResult) {\r\n      tillerOverallResult = eid.overallResult.result?.toLowerCase();\r\n    }\r\n    \r\n    // Get the latest ID verification data from the idVerifications array\r\n    const idVerification = inst.idVerifications && inst.idVerifications.length > 0 \r\n      ? inst.idVerifications[0] // Most recent (ordered by InternalId DESC)\r\n      : null;\r\n    \r\n    debugLog(`🔍 Enhanced EID Check for ${instructionRef}:`, {\r\n      stage: inst.stage,\r\n      hasIdVerifications: !!(inst.idVerifications && inst.idVerifications.length > 0),\r\n      idVerificationCount: inst.idVerifications ? inst.idVerifications.length : 0,\r\n      latestIdVerification: idVerification ? {\r\n        EIDOverallResult: idVerification.EIDOverallResult,\r\n        EIDStatus: idVerification.EIDStatus,\r\n        AddressVerificationResult: idVerification.AddressVerificationResult,\r\n        PEPAndSanctionsCheckResult: idVerification.PEPAndSanctionsCheckResult,\r\n        EIDCheckId: idVerification.EIDCheckId,\r\n        EIDCheckedDate: idVerification.EIDCheckedDate\r\n      } : null,\r\n      \r\n      // Legacy fields for backward compatibility\r\n      legacyFields: {\r\n        eidResult,\r\n        eidStatus,\r\n        tillerOverallResult,\r\n        hasEidData: !!eid,\r\n        poidPassed,\r\n        stageComplete,\r\n        proofOfIdComplete\r\n      }\r\n    });\r\n    \r\n    let verifyIdStatus: 'pending' | 'received' | 'review' | 'complete';\r\n    \r\n    // Priority 1: Check latest ID verification record from database\r\n    if (idVerification && idVerification.EIDOverallResult) {\r\n      const dbResult = idVerification.EIDOverallResult.toLowerCase();\r\n      if (dbResult === 'review') {\r\n        verifyIdStatus = 'review';\r\n        debugLog(`✅ Status determined from DB IDVerifications.EIDOverallResult: review`);\r\n      } else if (dbResult === 'passed' || dbResult === 'complete' || dbResult === 'verified') {\r\n        verifyIdStatus = 'complete';\r\n        debugLog(`✅ Status determined from DB IDVerifications.EIDOverallResult: complete (${dbResult})`);\r\n      } else if (dbResult === 'failed' || dbResult === 'rejected' || dbResult === 'fail') {\r\n        verifyIdStatus = 'review'; // Failed results should open review modal\r\n        debugLog(`✅ Status determined from DB IDVerifications.EIDOverallResult: review (failed status: ${dbResult})`);\r\n      } else {\r\n        verifyIdStatus = 'review'; // Default for unknown results\r\n        debugLog(`✅ Status determined from DB IDVerifications.EIDOverallResult: review (fallback for ${dbResult})`);\r\n      }\r\n    }\r\n    // Priority 2: Check Tiller API overall result if available\r\n    else if (tillerOverallResult === 'review') {\r\n      verifyIdStatus = 'review';\r\n      console.log(`✅ Status determined from Tiller API: review`);\r\n    } else if (tillerOverallResult === 'passed') {\r\n      verifyIdStatus = 'complete';\r\n      console.log(`✅ Status determined from Tiller API: complete`);\r\n    } else if (tillerOverallResult === 'failed' || tillerOverallResult === 'rejected' || tillerOverallResult === 'fail') {\r\n      verifyIdStatus = 'review'; // Failed results should open review modal\r\n      console.log(`✅ Status determined from Tiller API: review (failed status: ${tillerOverallResult})`);\r\n    } \r\n    // Priority 3: Check legacy database EID result fields\r\n    else if (eidResult === 'review' || altEidResult === 'review') {\r\n      verifyIdStatus = 'review';\r\n      debugLog(`✅ Status determined from legacy DB EIDResult: review (${eidResult || altEidResult})`);\r\n    } else if (eidResult === 'failed' || eidResult === 'rejected' || eidResult === 'fail' || altEidResult === 'failed' || altEidResult === 'rejected' || altEidResult === 'fail') {\r\n      verifyIdStatus = 'review'; // Failed results should open review modal  \r\n      debugLog(`✅ Status determined from legacy DB EIDResult: review (failed status: ${eidResult || altEidResult})`);\r\n    } else if (poidPassed || eidResult === 'passed' || altEidResult === 'passed') {\r\n      verifyIdStatus = 'complete';\r\n      debugLog(`✅ Status determined from legacy DB EIDResult: complete (${eidResult || altEidResult})`);\r\n    }\r\n    // Priority 4: Check stage and other indicators\r\n    else if (stageComplete) {\r\n      // If stage shows proof-of-id-complete but no clear result, check for pending status\r\n      if (eidStatus === 'pending' || eidResult === 'pending') {\r\n        verifyIdStatus = 'review'; // Pending results usually need review\r\n        console.log(`✅ Status determined from pending state: review`);\r\n      } else {\r\n        verifyIdStatus = 'review'; // Stage complete but unclear result\r\n        debugLog(`✅ Status determined from stage complete fallback: review`);\r\n      }\r\n    } else if ((!eid && !eids?.length) || eidStatus === 'pending') {\r\n      verifyIdStatus = proofOfIdComplete ? 'received' : 'pending';\r\n      debugLog(`✅ Status determined from no data: ${verifyIdStatus}`);\r\n    } else if (poidPassed) {\r\n      verifyIdStatus = 'complete';\r\n      debugLog(`✅ Status determined from poidPassed: complete`);\r\n    } else {\r\n      verifyIdStatus = 'review';\r\n      debugLog(`✅ Status determined from fallback: review`);\r\n    }\r\n\r\n    debugLog(`ID verification status for ${instructionRef}: ${verifyIdStatus}`);\r\n\r\n    // IMPORTANT: Handle review and complete statuses immediately - NO API CALLS\r\n    if (verifyIdStatus === 'review') {\r\n      // Red ID - already requires review, open modal directly\r\n      debugLog('🔴 RED ID detected - Opening review modal directly (NO API CALL)');\r\n      try {\r\n        const details = await fetchVerificationDetails(instructionRef);\r\n        setReviewModalDetails(details);\r\n        setShowReviewModal(true);\r\n      } catch (error) {\r\n        console.error('Failed to fetch verification details:', error);\r\n        alert('Failed to load verification details. Please try again.');\r\n      }\r\n      return; // STOP HERE - no API call needed\r\n    } \r\n    \r\n    if (verifyIdStatus === 'complete') {\r\n      // Green ID - already completed, open review modal to show details\r\n      debugLog('🟢 GREEN ID detected - Opening review modal to show completion details');\r\n      try {\r\n        const details = await fetchVerificationDetails(instructionRef);\r\n        setReviewModalDetails(details);\r\n        setShowReviewModal(true);\r\n      } catch (error) {\r\n        console.error('Failed to fetch verification details:', error);\r\n        alert('Failed to load verification details. Please try again.');\r\n      }\r\n      return; // STOP HERE - no API call needed\r\n    }\r\n\r\n    // Only reach here if status is 'pending' or 'received' - these need API calls\r\n    debugLog(`🟡 PENDING/RECEIVED ID detected - Making API call for ${instructionRef}`);\r\n\r\n    // Set loading state\r\n    setIdVerificationLoading(prev => new Set(prev).add(instructionRef));\r\n\r\n    try {\r\n      const response = await fetch('/api/verify-id', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ instructionRef }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || `HTTP ${response.status}`);\r\n      }\r\n\r\n      const result = await response.json();\r\n      \r\n      if (result.success) {\r\n        if (result.status === 'already_verified') {\r\n          // ID is already verified, show success message\r\n          alert('ID verification already completed for this instruction.');\r\n        } else {\r\n          // Verification submitted successfully\r\n          debugLog('ID verification submitted successfully');\r\n          debugLog('Admin Log - Response:', result.response);\r\n          debugLog('Admin Log - Parse Results:', result.parseResults);\r\n          \r\n          // Show appropriate feedback based on results\r\n          const overallResult = result.overall || 'pending';\r\n          if (overallResult === 'review') {\r\n            // Results require review - open modal for manual approval\r\n            debugLog('Opening review modal for verification results');\r\n            try {\r\n              const details = await fetchVerificationDetails(instructionRef);\r\n              setReviewModalDetails(details);\r\n              setShowReviewModal(true);\r\n            } catch (error) {\r\n              console.error('Failed to fetch verification details for review:', error);\r\n              alert('Verification requires manual review. Please check the verification details.');\r\n            }\r\n          } else if (overallResult === 'passed') {\r\n            alert('ID verification completed successfully!');\r\n          } else {\r\n            alert(`ID verification submitted. Status: ${overallResult}`);\r\n          }\r\n          \r\n          // Note: Card will update status on next data refresh\r\n        }\r\n      } else {\r\n        throw new Error(result.message || 'Unknown error occurred');\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('ID verification failed:', error);\r\n      const errorMessage = error instanceof Error ? error.message : String(error);\r\n      alert(`ID verification failed: ${errorMessage}`);\r\n      \r\n      // Stay on current page - don't redirect to EID page on error\r\n    } finally {\r\n      // Clear loading state\r\n      setIdVerificationLoading(prev => {\r\n        const newSet = new Set(prev);\r\n        newSet.delete(instructionRef);\r\n        return newSet;\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle verification approval from review modal\r\n   */\r\n  const handleVerificationApproval = async (instructionRef: string) => {\r\n    try {\r\n      await approveVerification(instructionRef);\r\n      \r\n      // Update local data to reflect the approval - update both instruction AND EID records\r\n      setInstructionData(prevData => \r\n        prevData.map(prospect => ({\r\n          ...prospect,\r\n          instructions: prospect.instructions.map((instruction: any) => {\r\n            if (instruction.InstructionRef === instructionRef) {\r\n              debugLog('Updating instruction:', instructionRef, 'from', instruction.EIDOverallResult, 'to Verified');\r\n              return { ...instruction, EIDOverallResult: 'Verified', stage: 'proof-of-id-complete' };\r\n            }\r\n            return instruction;\r\n          }),\r\n          // Also update the electronicIDChecks/idVerifications arrays\r\n          electronicIDChecks: (prospect.electronicIDChecks || []).map((eid: any) => {\r\n            if ((eid.MatterId || eid.InstructionRef) === instructionRef) {\r\n              return { ...eid, EIDOverallResult: 'Verified', EIDStatus: 'complete' };\r\n            }\r\n            return eid;\r\n          }),\r\n          idVerifications: (prospect.idVerifications || []).map((eid: any) => {\r\n            if ((eid.MatterId || eid.InstructionRef) === instructionRef) {\r\n              return { ...eid, EIDOverallResult: 'Verified', EIDStatus: 'complete' };\r\n            }\r\n            return eid;\r\n          })\r\n        }))\r\n      );\r\n      \r\n      // Also update poidData for consistency\r\n      setPoidData(prevPoidData =>\r\n        prevPoidData.map(eid => {\r\n          if ((eid.matter_id || (eid as any).InstructionRef) === instructionRef) {\r\n            return { ...eid, EIDOverallResult: 'Verified' as any, EIDStatus: 'complete' as any };\r\n          }\r\n          return eid;\r\n        })\r\n      );\r\n\r\n      // Update the modal details to show the new status\r\n      if (reviewModalDetails) {\r\n        setReviewModalDetails({\r\n          ...reviewModalDetails,\r\n          overallResult: 'Verified'\r\n        });\r\n      }\r\n\r\n      // Show success message\r\n      alert('ID verification approved successfully.');\r\n      \r\n      // Force a data refresh to ensure the UI updates properly\r\n      setTimeout(() => {\r\n        fetchUnifiedEnquiries();\r\n      }, 1000);\r\n      \r\n    } catch (error) {\r\n      console.error('Failed to approve verification:', error);\r\n      alert('Failed to approve verification. Please try again.');\r\n      throw error;\r\n    }\r\n  };\r\n\r\n\r\n  const handleOpenRiskCompliance = (ref: string) => {\r\n    setRiskFilterRef(ref);\r\n    setActiveTab('risk');\r\n  };\r\n\r\n  const handleDraftCclNow = () => {\r\n    setShowNewMatterPage(false);\r\n    setShowCclDraftPage(true);\r\n    setTimeout(() => {\r\n      window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    }, 100);\r\n  };\r\n\r\n  // Document Preview Handler\r\n  const handleDocumentPreview = (doc: any, instructionRef: string) => {\r\n    setPreviewDocument({ ...doc, InstructionRef: instructionRef });\r\n    setPreviewModalOpen(true);\r\n  };\r\n\r\n  const handleCloseDocumentPreview = () => {\r\n    setPreviewModalOpen(false);\r\n    setPreviewDocument(null);\r\n  };\r\n\r\n  // Inline EID review: auto-load details for the selected instruction when available\r\n  useEffect(() => {\r\n    const load = async () => {\r\n      try {\r\n        if (selectedInstruction?.InstructionRef) {\r\n          const details = await fetchVerificationDetails(selectedInstruction.InstructionRef);\r\n          setReviewModalDetails(details);\r\n        }\r\n      } catch (e) {\r\n        console.error('Failed to load EID details inline:', e);\r\n      }\r\n    };\r\n    load();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selectedInstruction?.InstructionRef]);\r\n\r\n  // Inline EID review: request additional documents via server route (same as modal)\r\n  const requestEidDocumentsInline = async (instructionRef: string) => {\r\n    try {\r\n      const response = await fetch(`/api/verify-id/${instructionRef}/request-documents`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Failed to send email');\r\n      }\r\n      const result = await response.json();\r\n      showToast(`Document request email sent to ${result.recipient}`, 'success');\r\n    } catch (error: unknown) {\r\n      const msg = error instanceof Error ? error.message : String(error);\r\n      showToast(`Failed to send document request: ${msg}`, 'error');\r\n    }\r\n  };\r\n\r\n\r\n  // Always open CCL template for global Draft CCL action\r\n  const handleOpenDraftCcl = (ref: string) => {\r\n    setSelectedInstruction({ InstructionRef: ref } as any);\r\n    // Set a global variable or state to force initialTemplate to 'ccl'\r\n    // If DocumentsV3 is rendered here, pass initialTemplate='ccl' directly\r\n    // If not, ensure the prop is always 'ccl' for this action\r\n    setShowCclDraftPage(true);\r\n    // Optionally, if you use a state for initialTemplate, set it here:\r\n    // setInitialTemplate('ccl');\r\n  };\r\n\r\n  const gridContainerStyle = mergeStyles({\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fit, minmax(350px, 1fr))\",\r\n    gap: \"16px\",\r\n    maxWidth: \"1440px\",\r\n    width: \"100%\",\r\n    margin: \"0 auto\",\r\n    boxSizing: \"border-box\",\r\n  });\r\n\r\n  const overviewGridStyle = React.useMemo(() => mergeStyles({\r\n    display: 'grid',\r\n    gridTemplateColumns: (windowWidth < 768) ? '1fr' : (twoColumn ? '1fr 1fr' : '1fr'),\r\n    gap: '8px',\r\n    width: '100%',\r\n    margin: '0 auto',\r\n    padding: '16px',\r\n    boxSizing: 'border-box',\r\n    transition: 'grid-template-columns .25s ease',\r\n    background: 'transparent', // Let parent handle background\r\n    // Responsive adjustments\r\n    '@media (max-width: 768px)': {\r\n      gridTemplateColumns: '1fr',\r\n      gap: '12px',\r\n      padding: '12px',\r\n    },\r\n    '@media (max-width: 480px)': {\r\n      gap: '8px',\r\n      padding: '8px',\r\n    },\r\n  }), [twoColumn, windowWidth]);\r\n\r\n  const overviewItemStyle = mergeStyles({\r\n    minWidth: '280px',\r\n    width: '100%',\r\n    '@media (max-width: 768px)': {\r\n      minWidth: 'unset',\r\n    },\r\n    '@media (max-width: 480px)': {\r\n      minWidth: 'unset',\r\n    },\r\n  });\r\n\r\n  const repositionMasonry = React.useCallback(() => {\r\n    const grid = overviewGridRef.current;\r\n    if (!grid) return;\r\n    const rowGap = parseInt(\r\n      window.getComputedStyle(grid).getPropertyValue('grid-row-gap'),\r\n    );\r\n    const rowHeight = parseInt(\r\n      window.getComputedStyle(grid).getPropertyValue('grid-auto-rows'),\r\n    );\r\n    Array.from(grid.children).forEach((child) => {\r\n      const el = child as HTMLElement;\r\n      const span = Math.ceil(\r\n        (el.getBoundingClientRect().height + rowGap) / (rowHeight + rowGap),\r\n      );\r\n      el.style.gridRowEnd = `span ${span}`;\r\n    });\r\n  }, []);\r\n\r\n  const handleCardToggle = React.useCallback(() => {\r\n    const start = performance.now();\r\n    const animate = () => {\r\n      repositionMasonry();\r\n      if (performance.now() - start < 350) {\r\n        requestAnimationFrame(animate);\r\n      }\r\n    };\r\n    requestAnimationFrame(animate);\r\n  }, [repositionMasonry]);\r\n\r\n  useLayoutEffect(() => {\r\n    if (\r\n      activeTab === \"clients\" &&\r\n      !showRiskPage &&\r\n      !showNewMatterPage &&\r\n      !showEIDPage\r\n    ) {\r\n      repositionMasonry();\r\n    }\r\n  }, [\r\n    overviewItems,\r\n    selectedInstruction,\r\n    repositionMasonry,\r\n    activeTab,\r\n    showRiskPage,\r\n    showNewMatterPage,\r\n    showEIDPage,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', repositionMasonry);\r\n    return () => window.removeEventListener('resize', repositionMasonry);\r\n  }, [repositionMasonry]);\r\n\r\n\r\n  // Global action handlers that work with the selected instruction or first available instruction\r\n  const handleGlobalOpenMatter = () => {\r\n    const targetInstruction = selectedInstruction || overviewItems.find(item => item.instruction)?.instruction;\r\n    if (targetInstruction) {\r\n      handleOpenMatter(targetInstruction);\r\n    }\r\n  };\r\n\r\n  const handleGlobalRiskAssessment = () => {\r\n    const targetItem = selectedInstruction \r\n      ? overviewItems.find(item => item.instruction.InstructionRef === selectedInstruction.InstructionRef)\r\n      : overviewItems.find(item => item.instruction);\r\n    if (targetItem) {\r\n      handleRiskAssessment(targetItem);\r\n    }\r\n  };\r\n\r\n  const handleSelectorEIDCheck = async (instruction: any) => {\r\n    setSelectorProcessing(instruction.InstructionRef);\r\n    setSelectorResult(null);\r\n    \r\n    try {\r\n      // Call the existing EID check logic\r\n      await handleEIDCheck(instruction);\r\n      // The result will be handled by the existing modal system\r\n      // We'll show a success message in the selector\r\n      setSelectorResult({ \r\n        success: true, \r\n        message: 'Verification initiated successfully',\r\n        instructionRef: instruction.InstructionRef\r\n      });\r\n    } catch (error) {\r\n      setSelectorResult({ \r\n        error: 'Verification failed. Please try again.',\r\n        instructionRef: instruction.InstructionRef\r\n      });\r\n    } finally {\r\n      setSelectorProcessing(null);\r\n    }\r\n  };\r\n\r\n  const handleGlobalEIDCheck = () => {\r\n    if (selectedInstruction) {\r\n      handleEIDCheck(selectedInstruction);\r\n    } else {\r\n      // Show instruction selector for manual selection\r\n      setSelectorAction('verify');\r\n      setShowInstructionSelector(true);\r\n    }\r\n  };\r\n\r\n\r\n  const handleStartNewMatter = () => {\r\n    if (!pendingInstruction) return;\r\n    clearMatterOpeningDraft();\r\n    setSelectedInstruction(pendingInstruction);\r\n    setPendingInstruction(null);\r\n    setForceNewMatter(true);\r\n    setShowNewMatterPage(true);\r\n    setIsResumeDialogOpen(false);\r\n    // Scroll to top when starting new matter\r\n    setTimeout(() => {\r\n      window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    }, 100);\r\n    // Force a small delay to ensure localStorage is cleared before component mounts\r\n    setTimeout(() => {\r\n      setForceNewMatter(false);\r\n    }, 100);\r\n  };\r\n\r\n\r\n  if (showNewMatterPage) {\r\n    // Preselect POIDs by matching InstructionRef\r\n    let preselectedPoidIds: string[] = [];\r\n    if (selectedInstruction && selectedInstruction.InstructionRef) {\r\n      const unique = new Map<string, string>();\r\n      (idVerificationOptions || []).forEach((poid: any) => {\r\n        if (!poid || poid.InstructionRef !== selectedInstruction.InstructionRef) return;\r\n        const key = (poid.email || '').toLowerCase();\r\n        if (!unique.has(key)) {\r\n          unique.set(key, String(poid.poid_id));\r\n        }\r\n      });\r\n      preselectedPoidIds = Array.from(unique.values());\r\n    }\r\n    // Build instruction-sourced records for Select Client cards (new space only)\r\n    const instructionRecords = (() => {\r\n      if (selectedInstruction) {\r\n        // Instruction entry: focus on the selected instruction only\r\n        return [selectedInstruction];\r\n      }\r\n      // Generic entry: flatten all instructions from effectiveInstructionData\r\n      const all: any[] = [];\r\n      effectiveInstructionData.forEach((prospect) => {\r\n        (prospect.instructions || []).forEach((inst: any) => all.push(inst));\r\n      });\r\n      return all;\r\n    })();\r\n    return (\r\n      <Stack tokens={dashboardTokens} className={newMatterContainerStyle}>\r\n        <FlatMatterOpening\r\n          key={forceNewMatter ? `new-${Date.now()}` : `matter-${selectedInstruction?.InstructionRef || 'default'}`}\r\n          poidData={idVerificationOptions}\r\n          instructionRecords={instructionRecords}\r\n          setPoidData={setPoidData}\r\n          teamData={teamData}\r\n          userInitials={userInitials}\r\n          userData={userData}\r\n          instructionRef={selectedInstruction?.InstructionRef}\r\n          stage={selectedInstruction?.Stage}\r\n          clientId={selectedInstruction?.prospectId?.toString()}\r\n          hideClientSections={!!selectedInstruction}\r\n          initialClientType={selectedInstruction?.ClientType}\r\n          preselectedPoidIds={preselectedPoidIds}\r\n          instructionPhone={selectedInstruction?.Phone}\r\n          onDraftCclNow={handleDraftCclNow}\r\n        />\r\n      </Stack>\r\n    );\r\n  }\r\n\r\n  if (showEIDPage) {\r\n    return (\r\n      <Stack tokens={dashboardTokens} className={containerStyle}>\r\n        <EIDCheckPage\r\n          poidData={idVerificationOptions}\r\n          instruction={selectedInstruction}\r\n          onBack={handleBack}\r\n        />\r\n      </Stack>\r\n    );\r\n  }\r\n\r\n\r\n\r\n  function handleOpenInstruction(ref: string): void {\r\n    // For instructions, set the selected instruction to show details\r\n    setSelectedInstruction(ref);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* On-brand toast */}\r\n      {toast && (\r\n        <div\r\n          className={\"toast-enter-active\"}\r\n          style={{\r\n            position: 'fixed',\r\n            top: 16,\r\n            right: 16,\r\n            zIndex: 2000,\r\n            minWidth: 280,\r\n            maxWidth: 420,\r\n            padding: '10px 14px',\r\n            borderRadius: 8,\r\n            background: isDarkMode ? '#0B1222' : 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n            color: isDarkMode ? colours.dark.text : '#061733',\r\n            border: `1px solid ${toast.type === 'success' ? '#34D399' : '#F87171'}`,\r\n            boxShadow: isDarkMode ? '0 4px 6px rgba(0,0,0,0.3)' : '0 4px 6px rgba(0,0,0,0.07)',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            gap: 10\r\n          }}\r\n        >\r\n          <div style={{\r\n            width: 8,\r\n            height: 8,\r\n            borderRadius: '50%',\r\n            background: toast.type === 'success' ? '#10B981' : '#EF4444'\r\n          }} />\r\n          <div style={{ fontSize: 12, fontWeight: 600 }}>{toast.message}</div>\r\n        </div>\r\n      )}\r\n      <Stack tokens={dashboardTokens} className={containerStyle}>\r\n        <div className={sectionContainerStyle(isDarkMode)}>\r\n        {/* Local development immediate Matter Opening CTA */}\r\n        {isLocalhostEnv && activeTab === 'clients' && !showNewMatterPage && openMatterCandidates.length > 0 && !isWorkbenchVisible && (\r\n          <div style={{\r\n            position: 'fixed',\r\n            bottom: '96px',\r\n            right: '32px',\r\n            zIndex: 1200,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            gap: '8px'\r\n          }}>\r\n            {openMatterCandidates.slice(0,3).map((c:any) => (\r\n              <button\r\n                key={`matter-cta-${c.instruction.InstructionRef}`}\r\n                onClick={() => {\r\n                  setSelectedInstruction(c.instruction);\r\n                  // Instruction selected - header will show expand option\r\n                  setTimeout(()=> handleGlobalOpenMatter(), 50);\r\n                }}\r\n                style={{\r\n                  background: 'linear-gradient(135deg,#2563EB 0%,#1D4ED8 100%)',\r\n                  color: 'white',\r\n                  border: 'none',\r\n                  borderRadius: '10px',\r\n                  padding: '12px 16px',\r\n                  boxShadow: '0 4px 12px rgba(0,0,0,0.25)',\r\n                  cursor: 'pointer',\r\n                  fontSize: '0.8rem',\r\n                  fontWeight: 600,\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  gap: '8px',\r\n                  minWidth: '220px'\r\n                }}\r\n                title=\"Quick open matter (local only)\"\r\n              >\r\n                <FaFolder /> Open Matter: {c.instruction.InstructionRef}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        )}\r\n      {activeTab === \"pitches\" && (\r\n              <div className={overviewGridStyle} ref={overviewGridRef}>\r\n        {(() => {\r\n          // Get deals that haven't been converted to instructions yet (pure pitches)\r\n          const pitchedItems = overviewItems.filter(item => \r\n            // Show only deals that don't have instructions yet (not converted)\r\n            !item.instruction && !!item.deal\r\n          );\r\n          \r\n          if (pitchedItems.length === 0) {\r\n            return (\r\n              <div style={{ \r\n                padding: '40px', \r\n                textAlign: 'center', \r\n                color: isDarkMode ? '#fff' : '#666',\r\n                fontSize: '14px',\r\n                fontFamily: 'Raleway, sans-serif'\r\n              }}>\r\n                <div style={{ marginBottom: '16px', fontSize: '16px', fontWeight: 600 }}>\r\n                  No pitches found\r\n                </div>\r\n                <div style={{ opacity: 0.8, lineHeight: 1.5 }}>\r\n                  No unconverted deals are available. Pitches show deals that haven't been converted to instructions yet.\r\n                </div>\r\n              </div>\r\n            );\r\n          }\r\n          \r\n          return pitchedItems.filter(item => {\r\n            // Apply pitches status filter\r\n            if (pitchesStatusFilter === 'All') return true;\r\n            if (pitchesStatusFilter === 'Open') return String(item.deal?.Status).toLowerCase() !== 'closed';\r\n            if (pitchesStatusFilter === 'Closed') return String(item.deal?.Status).toLowerCase() === 'closed';\r\n            return true;\r\n          }).map((item, idx) => {\r\n                    const row = Math.floor(idx / 4);\r\n                    const col = idx % 4;\r\n                    const animationDelay = row * 0.2 + col * 0.1;\r\n                    const dealKey = `pitch-${item.deal?.DealId}` || idx;\r\n                    return (\r\n                      <div key={`pitch-${dealKey}`} className={overviewItemStyle}>\r\n                        <InstructionCard\r\n                          index={idx}\r\n                          instruction={null} // No instruction - this is a pure pitch/deal\r\n                          deal={item.deal}\r\n                          deals={item.deals}\r\n                          clients={item.clients}\r\n                          risk={(item as any).risk}\r\n                          eid={(item as any).eid}\r\n                          eids={(item as any).eids}\r\n                          compliance={undefined}\r\n                          documents={item.documents}\r\n                          payments={(item as any).payments}\r\n                          prospectId={item.prospectId}\r\n                          documentCount={item.documentCount ?? 0}\r\n                          animationDelay={animationDelay}\r\n                          expanded={false} // Don't expand pitches by default\r\n                          selected={false} // Simple selection for pitches\r\n                          getClientNameByProspectId={getClientNameByProspectId}\r\n                          onDealEdit={handleDealEdit}\r\n                          teamData={teamData}\r\n                          onRiskClick={() => handleRiskAssessment(item)}\r\n                          onSelect={() => {\r\n                            // TODO: Implement pitch selection logic\r\n                            debugLog('Pitch selected:', item.deal?.DealId);\r\n                          }}\r\n                          onToggle={() => {\r\n                            // TODO: Implement pitch toggle logic\r\n                            debugLog('Pitch toggled:', item.deal?.DealId);\r\n                          }}\r\n                          onProofOfIdClick={() => {\r\n                            // Not applicable for pitches\r\n                          }}\r\n                          onRefreshData={async () => {\r\n                            // Refresh deal data after actions complete\r\n                            try {\r\n                              const dealId = item.deal?.DealId;\r\n                              if (!dealId) return;\r\n                              \r\n                              debugLog('Refreshing deal data for:', dealId);\r\n                              // TODO: Add deal refresh API call when needed\r\n                            } catch (error) {\r\n                              console.error('Failed to refresh deal data:', error);\r\n                            }\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    );\r\n                  });\r\n                })()}\r\n            </div>\r\n          )}\r\n      {activeTab === \"clients\" && (\r\n              <div className={overviewGridStyle} ref={overviewGridRef}>\r\n        {filteredOverviewItems.filter(item => \r\n          // Show only items with instructions (exclude pitched deals)\r\n          item.instruction\r\n        ).map((item, idx) => {\r\n                  const row = Math.floor(idx / 4);\r\n                  const col = idx % 4;\r\n                  const animationDelay = row * 0.2 + col * 0.1;\r\n                  const itemKey = item.instruction?.InstructionRef || idx;\r\n                  return (\r\n                    <div key={`instruction-${itemKey}-${selectedInstruction?.InstructionRef === item.instruction?.InstructionRef ? 'selected' : 'unselected'}`} className={overviewItemStyle}>\r\n                      <InstructionCard\r\n                        index={idx}\r\n                        key={`card-${itemKey}-${selectedInstruction?.InstructionRef === item.instruction?.InstructionRef}`}\r\n                        instruction={item.instruction as any}\r\n                        deal={(item as any).deal}\r\n                        deals={item.deals}\r\n                        clients={item.clients}\r\n                        risk={(item as any).risk}\r\n                        eid={(item as any).eid}\r\n                        eids={(item as any).eids}\r\n                        compliance={undefined}\r\n                        documents={item.instruction?.documents}\r\n                        payments={(item as any).payments}\r\n                        prospectId={item.prospectId}\r\n                        documentCount={item.documentCount ?? 0}\r\n                        animationDelay={animationDelay}\r\n                        expanded={overviewItems.length === 1 || selectedInstruction?.InstructionRef === item.instruction?.InstructionRef}\r\n                        selected={selectedInstruction?.InstructionRef === item.instruction?.InstructionRef}\r\n                        getClientNameByProspectId={getClientNameByProspectId}\r\n                        onDealEdit={handleDealEdit}\r\n                        teamData={teamData}\r\n                        onRiskClick={() => handleRiskAssessment(item)}\r\n                          onEditRisk={(ref) => {\r\n                            const found = overviewItems.find(o => o.instruction?.InstructionRef === ref);\r\n                            if (found) handleRiskAssessment(found);\r\n                          }}\r\n                          onDeleteRisk={handleRiskAssessmentDelete}\r\n                        onOpenMatter={handleOpenMatter}\r\n                        onOpenWorkbench={(tab) => {\r\n                          // Select the instruction first\r\n                          setSelectedInstruction(item.instruction);\r\n                          // Open workbench with specific tab\r\n                          setIsWorkbenchVisible(true);\r\n                          setActiveWorkbenchTab(tab);\r\n                        }}\r\n                        onSelect={() => {\r\n                          // Toggle selection: if already selected, unselect; otherwise select\r\n                          flushSync(() => {\r\n                            if (selectedInstruction?.InstructionRef === item.instruction?.InstructionRef) {\r\n                              setSelectedInstruction(null);\r\n                            } else {\r\n                              setSelectedInstruction(item.instruction);\r\n                              // New instruction selected - header will show expand option\r\n                            }\r\n                          });\r\n                        }}\r\n                        onToggle={handleCardToggle}\r\n                        onProofOfIdClick={() =>\r\n                          handleOpenRiskCompliance(item.instruction?.InstructionRef)\r\n                        }\r\n                        onEIDClick={() => handleEIDCheck(item.instruction)}\r\n                        idVerificationLoading={idVerificationLoading.has(item.instruction?.InstructionRef || '')}\r\n                        onRefreshData={async () => {\r\n                          // Refresh instruction data after actions complete\r\n                          try {\r\n                            const instructionRef = item.instruction?.InstructionRef;\r\n                            if (!instructionRef) return;\r\n                            \r\n                            // Fetch updated instruction data\r\n                            const response = await fetch(`/api/instructions/${instructionRef}`);\r\n                            if (response.ok) {\r\n                              const updatedData = await response.json();\r\n                              \r\n                              // Update the instruction within the prospect's instructions array\r\n                              setInstructionData(prev => \r\n                                prev.map(prospectData => {\r\n                                  // Check if any instruction in this prospect matches\r\n                                  const hasMatchingInstruction = prospectData.instructions?.some(\r\n                                    (inst: any) => inst.InstructionRef === instructionRef\r\n                                  );\r\n                                  \r\n                                  if (hasMatchingInstruction) {\r\n                                    return {\r\n                                      ...prospectData,\r\n                                      instructions: prospectData.instructions.map((inst: any) =>\r\n                                        inst.InstructionRef === instructionRef ? { ...inst, ...updatedData } : inst\r\n                                      )\r\n                                    };\r\n                                  }\r\n                                  return prospectData;\r\n                                })\r\n                              );\r\n                              \r\n                              // Also update selectedInstruction if it matches\r\n                              if (selectedInstruction?.InstructionRef === instructionRef) {\r\n                                setSelectedInstruction((prev: any) => ({ ...prev, ...updatedData }));\r\n                              }\r\n                            }\r\n                          } catch (error) {\r\n                            console.error('Failed to refresh instruction data:', error);\r\n                          }\r\n                        }}\r\n                      />\r\n                    </div>\r\n\r\n                  );\r\n                })}\r\n            </div>\r\n          )}\r\n          {activeTab === \"risk\" && (\r\n            <>\r\n              <div className={gridContainerStyle}>\r\n                {groupedRiskComplianceData.length === 0 && (\r\n                  <Text>No risk data available.</Text>\r\n                )}\r\n                {groupedRiskComplianceData.map((groupedItem, idx) => {\r\n                  const row = Math.floor(idx / 4);\r\n                  const col = idx % 4;\r\n                  const animationDelay = row * 0.2 + col * 0.1;\r\n                  const isExpanded = groupedRiskComplianceData.length === 1 && !!riskFilterRef;\r\n                  return (\r\n                    <RiskComplianceCard\r\n                      key={`${groupedItem.instructionRef}-${idx}`}\r\n                      data={groupedItem}\r\n                      animationDelay={animationDelay}\r\n                      expanded={isExpanded}\r\n                      onOpenInstruction={() =>\r\n                        handleOpenInstruction(groupedItem.instructionRef)\r\n                      }\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n            </>\r\n          )}\r\n          {showCclDraftPage && (\r\n            <DocumentsV3\r\n              selectedInstructionProp={selectedInstruction}\r\n              initialTemplate={selectedInstruction ? 'ccl' : undefined}\r\n              instructions={instructionData}\r\n            />\r\n          )}\r\n        </div>\r\n        \r\n        {/* Smart Contextual Action Panel - Unified Interface */}\r\n        {activeTab === \"clients\" && (\r\n          <>\r\n            <style>{`\r\n              @keyframes pulse {\r\n                0% { box-shadow: 0 0 0 0 rgba(54, 144, 206, 0.4); }\r\n                70% { box-shadow: 0 0 0 3px rgba(54, 144, 206, 0); }\r\n                100% { box-shadow: 0 0 0 0 rgba(54, 144, 206, 0); }\r\n              }\r\n              \r\n              @keyframes slideUp {\r\n                from { transform: translateY(100%); opacity: 0; }\r\n                to { transform: translateY(0); opacity: 1; }\r\n              }\r\n              \r\n              @keyframes workbenchSlideIn {\r\n                from { \r\n                  max-height: 0;\r\n                  opacity: 0; \r\n                  overflow: hidden;\r\n                }\r\n                to { \r\n                  max-height: 400px;\r\n                  opacity: 1; \r\n                  overflow: visible;\r\n                }\r\n              }\r\n              \r\n              @keyframes workbenchSlideOut {\r\n                from { \r\n                  transform: translateY(0); \r\n                  opacity: 1; \r\n                  scale: 1;\r\n                }\r\n                to { \r\n                  transform: translateY(-10px); \r\n                  opacity: 0; \r\n                  scale: 0.98;\r\n                }\r\n              }\r\n              \r\n              @keyframes slideDown {\r\n                from { \r\n                  transform: translateY(-10px); \r\n                  opacity: 0; \r\n                  scale: 0.98;\r\n                }\r\n                to { \r\n                  transform: translateY(0); \r\n                  opacity: 1; \r\n                  scale: 1;\r\n                }\r\n              }\r\n              \r\n              .advanced-tools {\r\n                animation: slideUp 0.3s ease-out;\r\n              }\r\n              \r\n              .comprehensive-workbench {\r\n                transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\r\n              }\r\n              \r\n              body.workbench-resizing {\r\n                cursor: ns-resize !important;\r\n                user-select: none !important;\r\n              }\r\n              \r\n              body.workbench-resizing * {\r\n                cursor: ns-resize !important;\r\n                user-select: none !important;\r\n              }\r\n              \r\n              .workbench-tab-button {\r\n                transition: all 0.2s ease;\r\n              }\r\n              \r\n              .workbench-tab-button:hover {\r\n                background-color: rgba(54, 144, 206, 0.1) !important;\r\n                transform: translateY(-1px);\r\n              }\r\n              \r\n              .expandable-section {\r\n                transition: all 0.3s ease;\r\n                overflow: hidden;\r\n              }\r\n              \r\n              .expandable-content {\r\n                transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\r\n                transform-origin: top;\r\n              }\r\n              \r\n              .expand-button {\r\n                transition: all 0.2s ease;\r\n              }\r\n              \r\n              .expand-button:hover {\r\n                background-color: rgba(54, 144, 206, 0.08) !important;\r\n              }\r\n              \r\n              .expand-arrow {\r\n                transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);\r\n              }\r\n              /* Animated swap between Global Actions and Workbench header */\r\n              .swap-section {\r\n                transition: opacity 0.4s cubic-bezier(0.4, 0, 0.2, 1), transform 0.4s cubic-bezier(0.4, 0, 0.2, 1), max-height 0.4s cubic-bezier(0.4, 0, 0.2, 1), margin 0.3s ease, padding 0.3s ease;\r\n                will-change: opacity, transform, max-height, margin, padding;\r\n                overflow: hidden;\r\n                transform-origin: center;\r\n              }\r\n              .swap-hidden {\r\n                opacity: 0;\r\n                transform: translateY(-12px) scale(0.95);\r\n                max-height: 0 !important;\r\n                height: 0 !important;\r\n                min-height: 0 !important;\r\n                margin-top: 0 !important;\r\n                margin-bottom: 0 !important;\r\n                padding: 0 !important;\r\n                pointer-events: none;\r\n                overflow: hidden;\r\n              }\r\n            `}</style>\r\n            <div\r\n              style={{\r\n                position: 'fixed',\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0,\r\n                height: isWorkbenchVisible && selectedInstruction ? workbenchHeight : 'auto',\r\n                maxHeight: isWorkbenchVisible && selectedInstruction ? workbenchHeight : 'auto',\r\n                background: workbenchPanelBackground(isDarkMode),\r\n                borderTop: `1px solid ${workbenchBorderColour(isDarkMode)}`,\r\n                boxShadow: isDarkMode ? '0 -10px 24px rgba(2, 6, 23, 0.55)' : '0 -4px 12px rgba(15, 23, 42, 0.08)',\r\n                zIndex: 1000,\r\n                transition: isResizing ? 'none' : 'all 0.3s ease',\r\n                backdropFilter: 'blur(8px)',\r\n                display: 'flex',\r\n                flexDirection: 'column'\r\n              }}\r\n            >\r\n              {/* Resize Handle */}\r\n              {isWorkbenchVisible && selectedInstruction && (\r\n                <div\r\n                  onMouseDown={handleMouseDown}\r\n                  style={{\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    left: 0,\r\n                    right: 0,\r\n                    height: '6px',\r\n                    cursor: 'ns-resize',\r\n                    background: 'transparent',\r\n                    zIndex: 1001,\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    transition: 'background 0.2s ease'\r\n                  }}\r\n                  onMouseEnter={(e) => {\r\n                    e.currentTarget.style.background = isDarkMode ? 'rgba(54, 144, 206, 0.2)' : 'rgba(54, 144, 206, 0.15)';\r\n                  }}\r\n                  onMouseLeave={(e) => {\r\n                    e.currentTarget.style.background = 'transparent';\r\n                  }}\r\n                >\r\n                  <div style={{\r\n                    width: '40px',\r\n                    height: '3px',\r\n                    background: isDarkMode ? 'rgba(148, 163, 184, 0.4)' : 'rgba(100, 116, 139, 0.3)',\r\n                    borderRadius: '2px'\r\n                  }} />\r\n                </div>\r\n              )}\r\n              {/* Unified bottom panel with animated swap */}\r\n          <div style={{ padding: '0', flex: isWorkbenchVisible && selectedInstruction ? '1 1 auto' : '0 0 auto', display: 'flex', flexDirection: 'column', overflow: 'hidden' }}>\r\n                {/* Unified Header that changes content based on state */}\r\n                <div\r\n                  onClick={selectedInstruction ? () => setIsWorkbenchVisible(!isWorkbenchVisible) : undefined}\r\n                  style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'center',\r\n                    padding: '12px 26px',\r\n                    background: selectedInstruction ? workbenchHeaderBackground(isDarkMode) : 'transparent',\r\n                    border: 'none',\r\n                    borderRadius: '0',\r\n                    cursor: selectedInstruction ? 'pointer' : 'default',\r\n                    transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n                    height: '48px',\r\n                    boxSizing: 'border-box',\r\n                    position: 'relative',\r\n                    overflow: 'hidden',\r\n                    // Prevent visual shrink by offsetting the absolute 6px resize handle above\r\n                    marginTop: (isWorkbenchVisible && selectedInstruction) ? 6 : 0\r\n                  }}\r\n                  onMouseEnter={(e) => {\r\n                    if (selectedInstruction) {\r\n                      e.currentTarget.style.background = isDarkMode \r\n                        ? 'linear-gradient(135deg, rgba(13, 47, 96, 1) 0%, rgba(6, 23, 51, 1) 100%)'\r\n                        : `linear-gradient(135deg, ${colours.missedBlue} 0%, ${colours.websiteBlue} 100%)`;\r\n                      e.currentTarget.style.boxShadow = isDarkMode \r\n                        ? '0 4px 20px rgba(13, 47, 96, 0.6), inset 0 1px 0 rgba(255,255,255,0.15)'\r\n                        : `0 4px 20px rgba(6, 23, 51, 0.4), inset 0 1px 0 rgba(255,255,255,0.2)`;\r\n                    }\r\n                  }}\r\n                  onMouseLeave={(e) => {\r\n                    if (selectedInstruction) {\r\n                      e.currentTarget.style.background = workbenchHeaderBackground(isDarkMode);\r\n                      e.currentTarget.style.boxShadow = 'none';\r\n                    }\r\n                  }}\r\n                >\r\n                  {/* Left side - Dynamic content based on state */}\r\n                  <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>\r\n                    {/* Pulsing dot + Instruction ref */}\r\n                    <div style={{ display: 'flex', alignItems: 'center', gap: '6px' }}>\r\n                      <div style={{ \r\n                        width: 3, \r\n                        height: 3, \r\n                        borderRadius: '50%', \r\n                        background: selectedInstruction ? getAreaColor(selectedInstruction.AreaOfWork || selectedInstruction.Area_of_Work || selectedInstruction.areaOfWork) : colours.blue,\r\n                        animation: 'pulse 2s infinite'\r\n                      }} />\r\n                      <span style={{ \r\n                        fontSize: '11px', \r\n                        fontWeight: 600, \r\n                        color: selectedInstruction ? '#ffffff' : (isDarkMode ? colours.dark.text : '#1f2937'),\r\n                        letterSpacing: '0.02em',\r\n                        fontFamily: selectedInstruction ? 'monospace' : 'Raleway, sans-serif',\r\n                        textShadow: selectedInstruction ? '0 1px 2px rgba(0,0,0,0.3)' : 'none'\r\n                      }}>\r\n                        {selectedInstruction ? selectedInstruction.InstructionRef : 'One Off Actions'}\r\n                      </span>\r\n                    </div>\r\n\r\n                    {/* Area of Work Tag (separated) */}\r\n                    {selectedInstruction && (areaOfWorkInfo.label || 'Commercial') && (\r\n                      <span style={{\r\n                        fontSize: '8px',\r\n                        fontWeight: 700,\r\n                        color: '#ffffff',\r\n                        letterSpacing: '0.03em',\r\n                        textTransform: 'uppercase',\r\n                        background: `${getAreaColor(selectedInstruction.AreaOfWork || selectedInstruction.Area_of_Work || selectedInstruction.areaOfWork)}40`,\r\n                        padding: '3px 8px',\r\n                        borderRadius: '4px',\r\n                        border: `1px solid ${getAreaColor(selectedInstruction.AreaOfWork || selectedInstruction.Area_of_Work || selectedInstruction.areaOfWork)}60`,\r\n                        backdropFilter: 'blur(4px)',\r\n                        boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\r\n                      }}>\r\n                        {areaOfWorkInfo.label || 'Commercial'}\r\n                      </span>\r\n                    )}\r\n\r\n                    {/* Client Information */}\r\n                    {selectedInstruction && (\r\n                      <div style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\r\n                        {/* Client Type Icon */}\r\n                        {selectedInstruction.ClientType === 'Company' ? (\r\n                          <FaBuilding style={{ \r\n                            color: '#ffffff', \r\n                            fontSize: '10px',\r\n                            opacity: 0.9,\r\n                            filter: 'drop-shadow(0 1px 1px rgba(0,0,0,0.2))'\r\n                          }} />\r\n                        ) : (\r\n                          <FaUser style={{ \r\n                            color: '#ffffff', \r\n                            fontSize: '10px',\r\n                            opacity: 0.9,\r\n                            filter: 'drop-shadow(0 1px 1px rgba(0,0,0,0.2))'\r\n                          }} />\r\n                        )}\r\n                        \r\n                        {/* Client Name */}\r\n                        <span style={{\r\n                          fontSize: '10px',\r\n                          fontWeight: 500,\r\n                          color: '#ffffff',\r\n                          opacity: 0.95,\r\n                          maxWidth: '200px',\r\n                          overflow: 'hidden',\r\n                          textOverflow: 'ellipsis',\r\n                          whiteSpace: 'nowrap',\r\n                          textShadow: '0 1px 2px rgba(0,0,0,0.2)'\r\n                        }}>\r\n                          {selectedInstruction.ClientType === 'Company' \r\n                            ? (selectedInstruction.CompanyName || `${selectedInstruction.FirstName || ''} ${selectedInstruction.LastName || ''}`.trim() || 'Company Client')\r\n                            : (`${selectedInstruction.FirstName || ''} ${selectedInstruction.LastName || ''}`.trim() || selectedInstruction.CompanyName || 'Individual Client')\r\n                          }\r\n                        </span>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  \r\n                  {/* Right side - Dynamic content based on state */}\r\n                  {selectedInstruction ? (\r\n                    /* Workbench collapse/expand indicator */\r\n                    <div style={{ display: 'flex', alignItems: 'center', gap: '6px' }}>\r\n                      <span style={{\r\n                        fontSize: '9px',\r\n                        color: '#ffffff',\r\n                        textTransform: 'uppercase',\r\n                        letterSpacing: '0.05em',\r\n                        opacity: 0.9,\r\n                        textShadow: '0 1px 2px rgba(0,0,0,0.2)'\r\n                      }}>\r\n                        {isWorkbenchVisible ? 'Collapse' : 'Expand'}\r\n                      </span>\r\n                      <div style={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        color: '#ffffff',\r\n                        transform: isWorkbenchVisible ? 'rotate(180deg)' : 'rotate(0deg)',\r\n                        transition: 'transform 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n                        padding: '1px',\r\n                        filter: 'drop-shadow(0 1px 1px rgba(0,0,0,0.2))'\r\n                      }}>\r\n                        <MdExpandMore size={14} />\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    /* Global action buttons */\r\n                    <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\r\n                    <button\r\n                      onClick={handleGlobalEIDCheck}\r\n                      disabled={verifyButtonDisabled}\r\n                      onMouseEnter={(e) => {\r\n                        if (!verifyButtonDisabled) {\r\n                          e.currentTarget.style.transform = 'translateY(-1px)';\r\n                          e.currentTarget.style.background = workbenchButtonHover(isDarkMode);\r\n                          setHoveredButton('verify');\r\n                        }\r\n                      }}\r\n                      onMouseLeave={(e) => {\r\n                        e.currentTarget.style.transform = 'translateY(0)';\r\n                        e.currentTarget.style.background = verifyButtonBackground;\r\n                        setHoveredButton(null);\r\n                      }}\r\n                      style={{\r\n                        padding: '8px 12px',\r\n                        borderRadius: '6px',\r\n                        border: `1px solid ${verifyButtonBorder}`,\r\n                        background: verifyButtonBackground,\r\n                        color: verifyButtonColor,\r\n                        cursor: verifyButtonDisabled ? 'default' : 'pointer',\r\n                        fontSize: '11px',\r\n                        fontWeight: '600',\r\n                        opacity: verifyButtonDisabled ? 0.8 : 1,\r\n                        animation: nextReadyAction === 'verify' ? 'pulse 2s infinite' : 'none',\r\n                        transition: 'all 0.2s ease',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        minWidth: '80px',\r\n                        position: 'relative',\r\n                      }}\r\n                    >\r\n                      <span style={{ \r\n                        transition: 'opacity 160ms ease',\r\n                        opacity: hoveredButton === 'verify' ? 0 : 1\r\n                      }}>\r\n                        <FaIdCard size={14} />\r\n                      </span>\r\n                      <span style={{ \r\n                        transition: 'opacity 160ms ease',\r\n                        opacity: hoveredButton === 'verify' ? 1 : 0,\r\n                        position: 'absolute',\r\n                        top: '50%',\r\n                        left: '50%',\r\n                        transform: 'translate(-50%, -50%)',\r\n                        whiteSpace: 'nowrap'\r\n                      }}>\r\n                        {verifyButtonLabel}\r\n                      </span>\r\n                    </button>\r\n\r\n                    <button\r\n                      onClick={handleGlobalRiskAssessment}\r\n                      disabled={riskButtonDisabled}\r\n                      onMouseEnter={(e) => {\r\n                        if (!riskButtonDisabled) {\r\n                          e.currentTarget.style.transform = 'translateY(-1px)';\r\n                          e.currentTarget.style.background = workbenchButtonHover(isDarkMode);\r\n                          setHoveredButton('risk');\r\n                        }\r\n                      }}\r\n                      onMouseLeave={(e) => {\r\n                        e.currentTarget.style.transform = 'translateY(0)';\r\n                        e.currentTarget.style.background = riskButtonBackground;\r\n                        setHoveredButton(null);\r\n                      }}\r\n                      style={{\r\n                        padding: '8px 12px',\r\n                        borderRadius: '6px',\r\n                        border: `1px solid ${riskButtonBorder}`,\r\n                        background: riskButtonBackground,\r\n                        color: riskButtonColor,\r\n                        cursor: riskButtonDisabled ? 'default' : 'pointer',\r\n                        fontSize: '11px',\r\n                        fontWeight: '600',\r\n                        opacity: riskButtonDisabled ? 0.8 : 1,\r\n                        animation: nextReadyAction === 'risk' ? 'pulse 2s infinite' : 'none',\r\n                        transition: 'all 0.2s ease',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        minWidth: '80px',\r\n                        position: 'relative',\r\n                      }}\r\n                    >\r\n                      <span style={{ \r\n                        transition: 'opacity 160ms ease',\r\n                        opacity: hoveredButton === 'risk' ? 0 : 1\r\n                      }}>\r\n                        <FaShieldAlt size={14} />\r\n                      </span>\r\n                      <span style={{ \r\n                        transition: 'opacity 160ms ease',\r\n                        opacity: hoveredButton === 'risk' ? 1 : 0,\r\n                        position: 'absolute',\r\n                        top: '50%',\r\n                        left: '50%',\r\n                        transform: 'translate(-50%, -50%)',\r\n                        whiteSpace: 'nowrap'\r\n                      }}>\r\n                        Assess Risk\r\n                      </span>\r\n                    </button>\r\n\r\n                    <button\r\n                      onClick={handleGlobalOpenMatter}\r\n                      onMouseEnter={(e) => {\r\n                        if (!matterLinked) {\r\n                          e.currentTarget.style.transform = 'translateY(-1px)';\r\n                          e.currentTarget.style.background = workbenchButtonHover(isDarkMode);\r\n                          setHoveredButton('matter');\r\n                        }\r\n                      }}\r\n                      onMouseLeave={(e) => {\r\n                        e.currentTarget.style.transform = 'translateY(0)';\r\n                        e.currentTarget.style.background = matterButtonBackground;\r\n                        setHoveredButton(null);\r\n                      }}\r\n                      style={{\r\n                        padding: '8px 12px',\r\n                        borderRadius: '6px',\r\n                        border: `1px solid ${matterButtonBorder}`,\r\n                        background: matterButtonBackground,\r\n                        color: matterButtonColor,\r\n                        cursor: matterLinked ? 'default' : 'pointer',\r\n                        fontSize: '11px',\r\n                        fontWeight: '600',\r\n                        animation: nextReadyAction === 'matter' ? 'pulse 2s infinite' : 'none',\r\n                        transition: 'all 0.2s ease',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        minWidth: '80px',\r\n                        position: 'relative',\r\n                      }}\r\n                    >\r\n                      <span style={{ \r\n                        transition: 'opacity 160ms ease',\r\n                        opacity: hoveredButton === 'matter' ? 0 : 1\r\n                      }}>\r\n                        <FaFolder size={14} />\r\n                      </span>\r\n                      <span style={{ \r\n                        transition: 'opacity 160ms ease',\r\n                        opacity: hoveredButton === 'matter' ? 1 : 0,\r\n                        position: 'absolute',\r\n                        top: '50%',\r\n                        left: '50%',\r\n                        transform: 'translate(-50%, -50%)',\r\n                        whiteSpace: 'nowrap'\r\n                      }}>\r\n                        Open Matter\r\n                      </span>\r\n                    </button>\r\n\r\n                    <button\r\n                      onClick={() => console.log('Document sync')}\r\n                      onMouseEnter={(e) => {\r\n                        if (selectedOverviewItem?.instruction?.MatterRef) {\r\n                          e.currentTarget.style.transform = 'translateY(-1px)';\r\n                          e.currentTarget.style.background = workbenchButtonHover(isDarkMode);\r\n                          setHoveredButton('sync');\r\n                        }\r\n                      }}\r\n                      onMouseLeave={(e) => {\r\n                        e.currentTarget.style.transform = 'translateY(0)';\r\n                        e.currentTarget.style.background = syncButtonBackground;\r\n                        setHoveredButton(null);\r\n                      }}\r\n                      style={{\r\n                        padding: '8px 12px',\r\n                        borderRadius: '6px',\r\n                        border: `1px solid ${syncButtonBorder}`,\r\n                        background: syncButtonBackground,\r\n                        color: syncButtonColor,\r\n                        cursor: selectedOverviewItem?.instruction?.MatterRef ? 'pointer' : 'default',\r\n                        fontSize: '11px',\r\n                        fontWeight: '600',\r\n                        transition: 'all 0.2s ease',\r\n                        opacity: selectedOverviewItem?.instruction?.MatterRef ? 1 : 0.5,\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        minWidth: '80px',\r\n                        position: 'relative',\r\n                      }}\r\n                      title={selectedOverviewItem?.instruction?.MatterRef ? 'Sync documents to matter' : 'Matter must be opened first'}\r\n                    >\r\n                      <span style={{ \r\n                        transition: 'opacity 160ms ease',\r\n                        opacity: hoveredButton === 'sync' ? 0 : 1\r\n                      }}>\r\n                        <MdSync size={14} />\r\n                      </span>\r\n                      <span style={{ \r\n                        transition: 'opacity 160ms ease',\r\n                        opacity: hoveredButton === 'sync' ? 1 : 0,\r\n                        position: 'absolute',\r\n                        top: '50%',\r\n                        left: '50%',\r\n                        transform: 'translate(-50%, -50%)',\r\n                        whiteSpace: 'nowrap'\r\n                      }}>\r\n                        Sync Docs\r\n                      </span>\r\n                    </button>\r\n\r\n                    <button\r\n                      onClick={() => setShowCclDraftPage(true)}\r\n                      onMouseEnter={(e) => {\r\n                        if (!cclCompleted) {\r\n                          e.currentTarget.style.transform = 'translateY(-1px)';\r\n                          e.currentTarget.style.background = workbenchButtonHover(isDarkMode);\r\n                          setHoveredButton('ccl');\r\n                        }\r\n                      }}\r\n                      onMouseLeave={(e) => {\r\n                        e.currentTarget.style.transform = 'translateY(0)';\r\n                        e.currentTarget.style.background = cclButtonBackground;\r\n                        setHoveredButton(null);\r\n                      }}\r\n                      style={{\r\n                        padding: '8px 12px',\r\n                        borderRadius: '6px',\r\n                        border: `1px solid ${cclButtonBorder}`,\r\n                        background: cclButtonBackground,\r\n                        color: cclButtonColor,\r\n                        cursor: cclCompleted ? 'default' : 'pointer',\r\n                        fontSize: '11px',\r\n                        fontWeight: '600',\r\n                        animation: nextReadyAction === 'ccl' ? 'pulse 2s infinite' : 'none',\r\n                        transition: 'all 0.2s ease',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        minWidth: '80px',\r\n                        position: 'relative',\r\n                      }}\r\n                    >\r\n                      <span style={{ \r\n                        transition: 'opacity 160ms ease',\r\n                        opacity: hoveredButton === 'ccl' ? 0 : 1\r\n                      }}>\r\n                        <FaFileAlt size={14} />\r\n                      </span>\r\n                      <span style={{ \r\n                        transition: 'opacity 160ms ease',\r\n                        opacity: hoveredButton === 'ccl' ? 1 : 0,\r\n                        position: 'absolute',\r\n                        top: '50%',\r\n                        left: '50%',\r\n                        transform: 'translate(-50%, -50%)',\r\n                        whiteSpace: 'nowrap'\r\n                      }}>\r\n                        Draft CCL\r\n                      </span>\r\n                    </button>\r\n                  </div>\r\n                  )}\r\n                </div>\r\n                \r\n                {/* Workbench Content */}\r\n                {selectedInstruction && isWorkbenchVisible && (\r\n                    <div \r\n                      className=\"comprehensive-workbench\"\r\n                      style={{\r\n                        background: workbenchCardBackground(isDarkMode),\r\n                        border: `1px solid ${workbenchBorderColour(isDarkMode)}`,\r\n                        borderTopLeftRadius: 20,\r\n                        borderTopRightRadius: 20,\r\n                        overflow: 'hidden',\r\n                        boxShadow: isDarkMode ? '0 -16px 32px rgba(2, 6, 23, 0.45)' : '0 -10px 24px rgba(15, 23, 42, 0.08)',\r\n                        animation: 'workbenchSlideIn 0.4s cubic-bezier(0.4, 0, 0.2, 1)',\r\n                        transform: 'translateY(0)',\r\n                        opacity: 1,\r\n                        transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n                        flex: '1 1 auto',\r\n                        minHeight: 0,\r\n                        display: 'flex',\r\n                        flexDirection: 'column'\r\n                      }}\r\n                    >\r\n                  {/* Tab Navigation */}\r\n                  <div style={{\r\n                    display: 'flex',\r\n                    width: '100%',\r\n                    background: 'transparent',\r\n                    borderBottom: `1px solid ${workbenchBorderColour(isDarkMode)}`,\r\n                    padding: '0 16px'\r\n                  }}>\r\n                    {[\r\n                      { \r\n                        key: 'identity', \r\n                        label: 'Identity', \r\n                        status: verifyIdStatus,\r\n                        icon: <FaIdCard size={12} />,\r\n                        isComplete: !!(selectedInstruction?.PassportNumber || selectedInstruction?.DriversLicenseNumber)\r\n                      },\r\n                      { \r\n                        key: 'risk', \r\n                        label: 'Risk', \r\n                        status: riskStatus,\r\n                        icon: <FaShieldAlt size={12} />,\r\n                        isComplete: riskStatus === 'complete'\r\n                      },\r\n                      { \r\n                        key: 'payment', \r\n                        label: 'Payment', \r\n                        status: paymentCompleted ? 'complete' : 'pending',\r\n                        icon: <FaCreditCard size={12} />,\r\n                        isComplete: paymentCompleted\r\n                      },\r\n                      { \r\n                        key: 'documents', \r\n                        label: 'Documents', \r\n                        status: selectedOverviewItem?.instruction?.documents?.length > 0 ? 'complete' : 'pending',\r\n                        icon: <FaFileAlt size={12} />,\r\n                        isComplete: selectedOverviewItem?.instruction?.documents?.length > 0\r\n                      },\r\n                      { \r\n                        key: 'matter', \r\n                        label: 'Matter', \r\n                        status: matterLinked ? 'complete' : 'pending',\r\n                        icon: <FaFolder size={12} />,\r\n                        isComplete: !!selectedInstruction?.MatterId\r\n                      },\r\n                      { \r\n                        key: 'override', \r\n                        label: 'Override', \r\n                        status: 'available',\r\n                        icon: <FaCogs size={12} />,\r\n                        isComplete: false\r\n                      }\r\n                    ].map(tab => (\r\n                      <button\r\n                        key={tab.key}\r\n                        className=\"workbench-tab-button\"\r\n                        onClick={() => setActiveWorkbenchTab(tab.key)}\r\n                        style={{\r\n                          flex: 1,\r\n                          padding: '12px 16px',\r\n                          border: 'none',\r\n                          background: activeWorkbenchTab === tab.key \r\n                            ? (isDarkMode\r\n                              ? 'linear-gradient(135deg, rgba(59, 130, 246, 0.24) 0%, rgba(37, 99, 235, 0.18) 100%)'\r\n                              : 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)')\r\n                            : 'transparent',\r\n                          borderBottom: activeWorkbenchTab === tab.key \r\n                            ? `2px solid ${tab.isComplete ? colours.green : colours.blue}` \r\n                            : '2px solid transparent',\r\n                          color: tab.isComplete\r\n                            ? (activeWorkbenchTab === tab.key\r\n                              ? (isDarkMode ? '#4ade80' : colours.green)\r\n                              : (isDarkMode ? '#22c55e' : '#90c695'))\r\n                            : (activeWorkbenchTab === tab.key\r\n                              ? (isDarkMode ? colours.dark.text : colours.light.text)\r\n                              : workbenchMutedText(isDarkMode)),\r\n                          cursor: 'pointer',\r\n                          fontSize: '11px',\r\n                          fontWeight: activeWorkbenchTab === tab.key ? 600 : 500,\r\n                          letterSpacing: '0.5px',\r\n                          display: 'flex',\r\n                          alignItems: 'center',\r\n                          justifyContent: 'center',\r\n                          gap: '6px',\r\n                          transition: 'all 0.2s ease',\r\n                          position: 'relative'\r\n                        }}\r\n                      >\r\n                        <span style={{ color: 'inherit', display: 'flex', alignItems: 'center' }}>\r\n                          {tab.icon}\r\n                        </span>\r\n                        <span style={{ color: 'inherit' }}>\r\n                          {tab.label}\r\n                        </span>\r\n                      </button>\r\n                    ))}\r\n                  </div>\r\n\r\n                  {/* Tab Content Area */}\r\n                  <div style={{\r\n                    padding: '12px',\r\n                    flex: '1 1 auto',\r\n                    overflowY: 'auto',\r\n                    background: workbenchCardBackground(isDarkMode),\r\n                    borderTop: `1px solid ${workbenchBorderColour(isDarkMode)}`,\r\n                    borderTopLeftRadius: '12px',\r\n                    borderTopRightRadius: '12px'\r\n                  }}>\r\n                    {activeWorkbenchTab === 'identity' && (\r\n                      <div>\r\n                        {/* Identity & Instruction Details Section */}\r\n                        <div style={{ marginBottom: '24px' }}>\r\n                          <div style={{\r\n                            fontSize: '14px',\r\n                            fontWeight: 600,\r\n                            color: isDarkMode ? colours.dark.text : '#1f2937',\r\n                            marginBottom: '16px',\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            gap: '8px'\r\n                          }}>\r\n                            <FaUser style={{ fontSize: '12px', color: colours.blue }} />\r\n                            Identity & Instruction Details\r\n                          </div>\r\n                          \r\n                          {/* Identity Data Grid */}\r\n                          <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: 16 }}>\r\n                            {/* Personal Information */}\r\n                            <div style={{\r\n                              background: workbenchCardBackground(isDarkMode),\r\n                              borderRadius: '12px',\r\n                              padding: '16px',\r\n                              border: `1px solid ${workbenchBorderColour(isDarkMode)}`,\r\n                              boxShadow: isDarkMode ? '0 6px 16px rgba(2, 6, 23, 0.35)' : '0 6px 16px rgba(15, 23, 42, 0.08)'\r\n                            }}>\r\n                              <div style={{\r\n                                fontSize: '12px',\r\n                                fontWeight: 600,\r\n                                color: isDarkMode ? colours.dark.text : '#374151',\r\n                                marginBottom: '12px',\r\n                                textTransform: 'uppercase',\r\n                                letterSpacing: '0.025em',\r\n                                borderBottom: `1px solid ${isDarkMode ? colours.dark.border : '#e2e8f0'}`,\r\n                                paddingBottom: '8px'\r\n                              }}>\r\n                                Personal Information\r\n                              </div>\r\n                              <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\r\n                                {[\r\n                                  { label: 'Name', value: `${selectedInstruction.Title || ''} ${selectedInstruction.ClientName || selectedInstruction.FirstName || ''} ${selectedInstruction.LastName || ''}`.trim() },\r\n                                  { label: 'Email', value: selectedInstruction.ClientEmail || selectedInstruction.Email },\r\n                                  { label: 'Phone', value: selectedInstruction.Phone },\r\n                                  { label: 'DOB', value: selectedInstruction.DOB },\r\n                                  { label: 'Gender', value: selectedInstruction.Gender },\r\n                                  { label: 'Nationality', value: selectedInstruction.Nationality || selectedInstruction.Country },\r\n                                  { label: 'Client Type', value: selectedInstruction.ClientType || selectedInstruction.EntityType || 'Individual' }\r\n                                ].map((field) => (\r\n                                  <div key={field.label} style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                                    <span style={{\r\n                                      fontSize: '10px',\r\n                                      color: workbenchMutedText(isDarkMode),\r\n                                      fontWeight: 500,\r\n                                      textTransform: 'uppercase',\r\n                                      letterSpacing: '0.025em',\r\n                                      minWidth: '80px'\r\n                                    }}>\r\n                                      {field.label}:\r\n                                    </span>\r\n                                    <span style={{\r\n                                      fontSize: '11px',\r\n                                      color: field.value ? (isDarkMode ? colours.dark.text : '#111827') : workbenchMutedText(isDarkMode),\r\n                                      fontWeight: field.value ? 500 : 400,\r\n                                      textAlign: 'right',\r\n                                      fontStyle: field.value ? 'normal' : 'italic'\r\n                                    }}>\r\n                                      {field.value || 'Not provided'}\r\n                                    </span>\r\n                                  </div>\r\n                                ))}\r\n                              </div>\r\n                            </div>\r\n\r\n                            {/* Identification */}\r\n                            <div style={{\r\n                              background: workbenchCardBackground(isDarkMode),\r\n                              borderRadius: '10px',\r\n                              padding: '16px',\r\n                              border: `1px solid ${workbenchBorderColour(isDarkMode)}`,\r\n                              boxShadow: isDarkMode ? '0 6px 16px rgba(2, 6, 23, 0.35)' : '0 6px 16px rgba(15, 23, 42, 0.08)'\r\n                            }}>\r\n                              <div style={{\r\n                                fontSize: '12px',\r\n                                fontWeight: 600,\r\n                                color: isDarkMode ? colours.dark.text : '#374151',\r\n                                marginBottom: '12px',\r\n                                textTransform: 'uppercase',\r\n                                letterSpacing: '0.025em',\r\n                                borderBottom: `1px solid ${isDarkMode ? colours.dark.border : '#e2e8f0'}`,\r\n                                paddingBottom: '8px'\r\n                              }}>\r\n                                Identification\r\n                              </div>\r\n                              <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\r\n                                {[\r\n                                  { label: 'ID Type', value: selectedInstruction.PassportNumber ? 'passport' : selectedInstruction.DriversLicenseNumber ? 'driving license' : selectedInstruction.NationalIdNumber ? 'national id' : 'Not specified' },\r\n                                  { label: 'Passport', value: selectedInstruction.PassportNumber },\r\n                                  { label: 'Driving License', value: selectedInstruction.DriversLicenseNumber }\r\n                                ].map((field) => (\r\n                                  <div key={field.label} style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                                    <span style={{\r\n                                      fontSize: '10px',\r\n                                      color: workbenchMutedText(isDarkMode),\r\n                                      fontWeight: 500,\r\n                                      textTransform: 'uppercase',\r\n                                      letterSpacing: '0.025em',\r\n                                      minWidth: '100px'\r\n                                    }}>\r\n                                      {field.label}:\r\n                                    </span>\r\n                                    <span style={{\r\n                                      fontSize: '11px',\r\n                                      color: field.value ? (isDarkMode ? colours.dark.text : '#111827') : workbenchMutedText(isDarkMode),\r\n                                      fontWeight: field.value ? 500 : 400,\r\n                                      textAlign: 'right',\r\n                                      fontStyle: field.value ? 'normal' : 'italic'\r\n                                    }}>\r\n                                      {field.value || 'Not provided'}\r\n                                    </span>\r\n                                  </div>\r\n                                ))}\r\n                              </div>\r\n                            </div>\r\n\r\n                            {/* Residential Address */}\r\n                            <div style={{\r\n                              background: workbenchCardBackground(isDarkMode),\r\n                              borderRadius: '10px',\r\n                              padding: '16px',\r\n                              border: `1px solid ${workbenchBorderColour(isDarkMode)}`,\r\n                              boxShadow: isDarkMode ? '0 6px 16px rgba(2, 6, 23, 0.35)' : '0 6px 16px rgba(15, 23, 42, 0.08)'\r\n                            }}>\r\n                              <div style={{\r\n                                fontSize: '12px',\r\n                                fontWeight: 600,\r\n                                color: isDarkMode ? colours.dark.text : '#374151',\r\n                                marginBottom: '12px',\r\n                                textTransform: 'uppercase',\r\n                                letterSpacing: '0.025em',\r\n                                borderBottom: `1px solid ${isDarkMode ? colours.dark.border : '#e2e8f0'}`,\r\n                                paddingBottom: '8px'\r\n                              }}>\r\n                                Residential Address\r\n                              </div>\r\n                              <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\r\n                                {[\r\n                                  { label: 'Address', value: `${selectedInstruction.HouseNumber || ''} ${selectedInstruction.Street || ''}`.trim() },\r\n                                  { label: 'City', value: selectedInstruction.City },\r\n                                  { label: 'County', value: selectedInstruction.County || selectedInstruction.State },\r\n                                  { label: 'Postcode', value: selectedInstruction.Postcode || selectedInstruction.PostalCode },\r\n                                  { label: 'Country', value: selectedInstruction.Country }\r\n                                ].map((field) => (\r\n                                  <div key={field.label} style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                                    <span style={{\r\n                                      fontSize: '10px',\r\n                                      color: workbenchMutedText(isDarkMode),\r\n                                      fontWeight: 500,\r\n                                      textTransform: 'uppercase',\r\n                                      letterSpacing: '0.025em',\r\n                                      minWidth: '80px'\r\n                                    }}>\r\n                                      {field.label}:\r\n                                    </span>\r\n                                    <span style={{\r\n                                      fontSize: '11px',\r\n                                      color: field.value ? (isDarkMode ? colours.dark.text : '#111827') : workbenchMutedText(isDarkMode),\r\n                                      fontWeight: field.value ? 500 : 400,\r\n                                      textAlign: 'right',\r\n                                      fontStyle: field.value ? 'normal' : 'italic'\r\n                                    }}>\r\n                                      {field.value || 'Not provided'}\r\n                                    </span>\r\n                                  </div>\r\n                                ))}\r\n                              </div>\r\n                            </div>\r\n\r\n                            {/* Company Information */}\r\n                            <div style={{\r\n                              background: workbenchCardBackground(isDarkMode),\r\n                              borderRadius: '10px',\r\n                              padding: '16px',\r\n                              border: `1px solid ${workbenchBorderColour(isDarkMode)}`,\r\n                              boxShadow: isDarkMode ? '0 6px 16px rgba(2, 6, 23, 0.35)' : '0 6px 16px rgba(15, 23, 42, 0.08)'\r\n                            }}>\r\n                              <div style={{\r\n                                fontSize: '12px',\r\n                                fontWeight: 600,\r\n                                color: isDarkMode ? colours.dark.text : '#374151',\r\n                                marginBottom: '12px',\r\n                                textTransform: 'uppercase',\r\n                                letterSpacing: '0.025em',\r\n                                borderBottom: `1px solid ${isDarkMode ? colours.dark.border : '#e2e8f0'}`,\r\n                                paddingBottom: '8px'\r\n                              }}>\r\n                                Company Information\r\n                              </div>\r\n                              <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\r\n                                {[\r\n                                  { label: 'Company', value: selectedInstruction.CompanyName || (selectedInstruction.ClientType === 'Individual' ? 'Not applicable' : 'Not provided') },\r\n                                  { label: 'Company Number', value: selectedInstruction.CompanyNumber || (selectedInstruction.ClientType === 'Individual' ? 'Not applicable' : 'Not provided') },\r\n                                  { label: 'House Number', value: selectedInstruction.CompanyHouseNumber || (selectedInstruction.ClientType === 'Individual' ? 'Not applicable' : 'Not provided') },\r\n                                  { label: 'Address', value: selectedInstruction.CompanyStreet || (selectedInstruction.ClientType === 'Individual' ? 'Not applicable' : 'Not provided') },\r\n                                  { label: 'Postcode', value: selectedInstruction.CompanyPostcode || (selectedInstruction.ClientType === 'Individual' ? 'Not applicable' : 'Not provided') },\r\n                                  { label: 'Country', value: selectedInstruction.CompanyCountry || (selectedInstruction.ClientType === 'Individual' ? selectedInstruction.Country : 'Not provided') }\r\n                                ].map((field) => (\r\n                                  <div key={field.label} style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                                    <span style={{\r\n                                      fontSize: '10px',\r\n                                      color: workbenchMutedText(isDarkMode),\r\n                                      fontWeight: 500,\r\n                                      textTransform: 'uppercase',\r\n                                      letterSpacing: '0.025em',\r\n                                      minWidth: '100px'\r\n                                    }}>\r\n                                      {field.label}:\r\n                                    </span>\r\n                                    <span style={{\r\n                                      fontSize: '11px',\r\n                                      color: field.value && field.value !== 'Not applicable' && field.value !== 'Not provided'\r\n                                        ? (isDarkMode ? colours.dark.text : '#111827')\r\n                                        : workbenchMutedText(isDarkMode),\r\n                                      fontWeight: field.value && field.value !== 'Not applicable' && field.value !== 'Not provided' ? 500 : 400,\r\n                                      textAlign: 'right',\r\n                                      fontStyle: field.value && field.value !== 'Not applicable' && field.value !== 'Not provided' ? 'normal' : 'italic'\r\n                                    }}>\r\n                                      {field.value}\r\n                                    </span>\r\n                                  </div>\r\n                                ))}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Electronic ID Verification Section */}\r\n                        <div style={{ marginBottom: '24px' }}>\r\n                          <div style={{\r\n                            fontSize: '14px',\r\n                            fontWeight: 600,\r\n                            color: isDarkMode ? colours.dark.text : '#1f2937',\r\n                            marginBottom: '16px',\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            gap: '8px'\r\n                          }}>\r\n                            <FaShieldAlt style={{ fontSize: '12px', color: colours.green }} />\r\n                            Electronic ID Verification\r\n                          </div>\r\n\r\n                          <div style={{\r\n                            background: workbenchCardBackground(isDarkMode),\r\n                            borderRadius: '12px',\r\n                            padding: '16px',\r\n                            border: `1px solid ${workbenchBorderColour(isDarkMode)}`,\r\n                            boxShadow: isDarkMode ? '0 6px 16px rgba(2, 6, 23, 0.35)' : '0 6px 16px rgba(15, 23, 42, 0.08)'\r\n                          }}>\r\n                            <div style={{ display: 'grid', gridTemplateColumns: '1fr', gap: '16px', alignItems: 'stretch' }}>\r\n                              <div style={{ display: 'flex', flexDirection: 'column', gap: '4px' }}>\r\n                                {[\r\n                                  { label: 'EID Status', value: selectedOverviewItem?.eid?.EIDStatus || 'Not started' },\r\n                                  { label: 'POID Result', value: selectedOverviewItem?.eid?.EIDOverallResult || 'Pending' },\r\n                                  { label: 'Consent Given', value: selectedInstruction.ConsentGiven ? 'Yes' : 'No' }\r\n                                ].map((field) => (\r\n                                  <div key={field.label} style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                                    <span style={{\r\n                                      fontSize: '10px',\r\n                                      color: workbenchMutedText(isDarkMode),\r\n                                      fontWeight: 500,\r\n                                      textTransform: 'uppercase',\r\n                                      letterSpacing: '0.025em'\r\n                                    }}>\r\n                                      {field.label}:\r\n                                    </span>\r\n                                    <span style={{\r\n                                      fontSize: '11px',\r\n                                      color: (() => {\r\n                                        if (field.label === 'POID Result' && field.value === 'review') return colours.red;\r\n                                        if (field.label === 'EID Status' && field.value === 'completed') return colours.green;\r\n                                        return isDarkMode ? colours.dark.text : '#111827';\r\n                                      })(),\r\n                                      fontWeight: 500,\r\n                                      textAlign: 'right'\r\n                                    }}>\r\n                                      {field.value}\r\n                                    </span>\r\n                                  </div>\r\n                                ))}\r\n                              </div>\r\n                              \r\n                              <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                {selectedOverviewItem?.eid?.EIDOverallResult === 'review' ? (\r\n                                  <div\r\n                                    style={{\r\n                                      width: '100%',\r\n                                      border: `1px solid ${workbenchBorderColour(isDarkMode)}`,\r\n                                      borderRadius: 10,\r\n                                      background: workbenchCardBackground(isDarkMode),\r\n                                      padding: 12,\r\n                                      boxShadow: isDarkMode ? '0 4px 12px rgba(2, 6, 23, 0.4)' : '0 4px 12px rgba(15, 23, 42, 0.08)'\r\n                                    }}\r\n                                  >\r\n                                    <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginBottom: 8 }}>\r\n                                      <div style={{ fontSize: 12, fontWeight: 600, color: isDarkMode ? colours.dark.text : '#374151' }}>\r\n                                        Verification details\r\n                                      </div>\r\n                                      {selectedInstruction?.InstructionRef && (\r\n                                        <div style={{ fontSize: 10, color: isDarkMode ? colours.dark.subText : '#6B7280' }}>\r\n                                          {selectedInstruction.InstructionRef}\r\n                                        </div>\r\n                                      )}\r\n                                    </div>\r\n\r\n                                    {reviewModalDetails ? (\r\n                                      <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: 8 }}>\r\n                                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                          <span style={{ fontSize: 10, color: colours.greyText, fontWeight: 500 }}>Overall Result:</span>\r\n                                          <span style={{ fontSize: 11, fontWeight: 600, color: (reviewModalDetails.overallResult || '').toLowerCase() === 'verified' || (reviewModalDetails.overallResult || '').toLowerCase() === 'passed' ? colours.green : (reviewModalDetails.overallResult || '').toLowerCase() === 'review' ? '#ef4444' : (isDarkMode ? colours.dark.text : '#374151') }}>\r\n                                            {reviewModalDetails.overallResult ?? 'Unknown'}\r\n                                          </span>\r\n                                        </div>\r\n                                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                          <span style={{ fontSize: 10, color: colours.greyText, fontWeight: 500 }}>Checked Date:</span>\r\n                                          <span style={{ fontSize: 11, color: isDarkMode ? colours.dark.text : '#374151' }}>\r\n                                            {reviewModalDetails.checkedDate || reviewModalDetails.EIDCheckedDate || '—'}\r\n                                          </span>\r\n                                        </div>\r\n                                        <div style={{ gridColumn: '1 / -1', fontSize: 10, color: colours.greyText }}>\r\n                                          {reviewModalDetails.summary || 'Electronic ID verification summary'}\r\n                                        </div>\r\n\r\n                                        <div style={{ gridColumn: '1 / -1', display: 'flex', gap: 8, marginTop: 4 }}>\r\n                                          {selectedInstruction?.InstructionRef && (\r\n                                            <button\r\n                                              onClick={() => handleVerificationApproval(selectedInstruction.InstructionRef)}\r\n                                              style={{\r\n                                                fontSize: 10,\r\n                                                padding: '6px 10px',\r\n                                                borderRadius: 4,\r\n                                                border: `1px solid ${colours.green}`,\r\n                                                background: isDarkMode ? 'transparent' : 'rgba(34,197,94,0.08)',\r\n                                                color: colours.green,\r\n                                                cursor: 'pointer'\r\n                                              }}\r\n                                            >\r\n                                              Approve verification\r\n                                            </button>\r\n                                          )}\r\n                                          {selectedInstruction?.InstructionRef && (\r\n                                            <button\r\n                                              onClick={() => requestEidDocumentsInline(selectedInstruction.InstructionRef!)}\r\n                                              style={{\r\n                                                fontSize: 10,\r\n                                                padding: '6px 10px',\r\n                                                borderRadius: 4,\r\n                                                border: `1px solid ${colours.blue}`,\r\n                                                background: 'transparent',\r\n                                                color: colours.blue,\r\n                                                cursor: 'pointer'\r\n                                              }}\r\n                                            >\r\n                                              Request documents\r\n                                            </button>\r\n                                          )}\r\n                                        </div>\r\n                                      </div>\r\n                                    ) : (\r\n                                      <div style={{ fontSize: 11, color: colours.greyText }}>\r\n                                        Loading verification details…\r\n                                      </div>\r\n                                    )}\r\n                                  </div>\r\n                                ) : null}\r\n                              </div>\r\n                              \r\n                              {/* Removed footer text to free space for additional status items */}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Technical Details - Expandable */}\r\n                        <div style={{\r\n                          background: workbenchCardBackground(isDarkMode),\r\n                          borderRadius: '12px',\r\n                          padding: '12px',\r\n                          border: `1px solid ${workbenchBorderColour(isDarkMode)}`,\r\n                          boxShadow: isDarkMode ? '0 6px 16px rgba(2, 6, 23, 0.35)' : '0 6px 16px rgba(15, 23, 42, 0.08)',\r\n                          marginTop: '16px'\r\n                        }}>\r\n                          <button\r\n                            className=\"expand-button\"\r\n                            onClick={() => toggleSection('identity-raw')}\r\n                            style={{\r\n                              width: '100%',\r\n                              background: 'none',\r\n                              border: 'none',\r\n                              color: colours.greyText,\r\n                              fontSize: '11px',\r\n                              cursor: 'pointer',\r\n                              display: 'flex',\r\n                              alignItems: 'center',\r\n                              justifyContent: 'space-between',\r\n                              padding: '4px 0'\r\n                            }}\r\n                          >\r\n                            <span>Technical Details & Raw Database Record</span>\r\n                            <div className=\"expand-arrow\" style={{ \r\n                              transform: expandedSections['identity-raw'] ? 'rotate(180deg)' : 'rotate(0deg)',\r\n                              transition: 'transform 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n                              display: 'flex',\r\n                              alignItems: 'center'\r\n                            }}>\r\n                              ⌄\r\n                            </div>\r\n                          </button>\r\n                          \r\n                          {expandedSections['identity-raw'] && (\r\n                            <div className=\"expandable-content\" style={{ \r\n                              marginTop: '12px',\r\n                              background: isDarkMode ? '#1a1a1a' : '#ffffff', \r\n                              border: `1px solid ${isDarkMode ? colours.dark.border : '#e2e8f0'}`, \r\n                              borderRadius: '6px', \r\n                              padding: '12px', \r\n                              fontSize: '10px', \r\n                              fontFamily: 'Monaco, Consolas, monospace',\r\n                              maxHeight: '250px',\r\n                              overflowY: 'auto',\r\n                              color: isDarkMode ? '#e5e5e5' : '#374151',\r\n                              animation: 'slideDown 0.3s cubic-bezier(0.4, 0, 0.2, 1)'\r\n                            }}>\r\n                              {selectedInstruction ? (\r\n                                <pre style={{ margin: 0, whiteSpace: 'pre-wrap', wordBreak: 'break-word' }}>\r\n                                  {JSON.stringify(selectedInstruction, null, 2)}\r\n                                </pre>\r\n                              ) : (\r\n                                <div style={{ color: colours.greyText, fontStyle: 'italic' }}>\r\n                                  No instruction data available\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n\r\n                    {activeWorkbenchTab === 'risk' && (\r\n                      <div>\r\n                        \r\n                        {/* Comprehensive Risk Assessment Data */}\r\n                        <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '16px', marginBottom: '20px' }}>\r\n                          {/* Risk Summary */}\r\n                          <div style={{\r\n                            background: workbenchCardBackground(isDarkMode),\r\n                            borderRadius: '12px',\r\n                            padding: '16px',\r\n                            border: `1px solid ${workbenchBorderColour(isDarkMode)}`,\r\n                            boxShadow: isDarkMode ? '0 6px 16px rgba(2, 6, 23, 0.35)' : '0 6px 16px rgba(15, 23, 42, 0.08)'\r\n                          }}>\r\n                            <div style={{\r\n                              fontSize: '12px',\r\n                              fontWeight: 600,\r\n                              color: isDarkMode ? colours.dark.text : '#374151',\r\n                              marginBottom: '12px',\r\n                              textTransform: 'uppercase',\r\n                              letterSpacing: '0.025em',\r\n                              borderBottom: `1px solid ${isDarkMode ? colours.dark.border : '#e2e8f0'}`,\r\n                              paddingBottom: '8px'\r\n                            }}>\r\n                              Risk Assessment Summary\r\n                            </div>\r\n                            <div style={{ fontSize: '11px', color: isDarkMode ? colours.dark.text : colours.light.text, lineHeight: '1.5', display: 'grid', gap: '4px' }}>\r\n                              <div><strong>Result:</strong> <span style={{ color: isDarkMode ? colours.dark.text : '#111827', fontWeight: 600 }}>{selectedOverviewItem?.risk?.RiskAssessmentResult || 'Pending Assessment'}</span></div>\r\n                              <div><strong>Risk Score:</strong> <span style={{ color: isDarkMode ? colours.dark.text : '#111827', fontWeight: 600 }}>{selectedOverviewItem?.risk?.RiskScore ?? 'Not scored'}</span></div>\r\n                              <div><strong>Transaction Level:</strong> <span style={{ color: isDarkMode ? colours.dark.text : '#111827', fontWeight: 600 }}>{selectedOverviewItem?.risk?.TransactionRiskLevel || 'Not assessed'}</span></div>\r\n                              <div><strong>Assessor:</strong> {selectedOverviewItem?.risk?.RiskAssessor || 'Not assigned'}</div>\r\n                              <div><strong>Compliance Date:</strong> {selectedOverviewItem?.risk?.ComplianceDate ? new Date(selectedOverviewItem.risk.ComplianceDate).toLocaleDateString() : 'Not completed'}</div>\r\n                              <div><strong>Expiry Date:</strong> {selectedOverviewItem?.risk?.ComplianceExpiry ? new Date(selectedOverviewItem.risk.ComplianceExpiry).toLocaleDateString() : 'Not set'}</div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          {/* Client Risk Factors */}\r\n                          <div style={{\r\n                            background: workbenchCardBackground(isDarkMode),\r\n                            borderRadius: '12px',\r\n                            padding: '16px',\r\n                            border: `1px solid ${workbenchBorderColour(isDarkMode)}`,\r\n                            boxShadow: isDarkMode ? '0 6px 16px rgba(2, 6, 23, 0.35)' : '0 6px 16px rgba(15, 23, 42, 0.08)'\r\n                          }}>\r\n                            <div style={{\r\n                              fontSize: '12px',\r\n                              fontWeight: 600,\r\n                              color: isDarkMode ? colours.dark.text : '#374151',\r\n                              marginBottom: '12px',\r\n                              textTransform: 'uppercase',\r\n                              letterSpacing: '0.025em',\r\n                              borderBottom: `1px solid ${isDarkMode ? colours.dark.border : '#e2e8f0'}`,\r\n                              paddingBottom: '8px'\r\n                            }}>\r\n                              Client Risk Analysis\r\n                            </div>\r\n                            <div style={{ fontSize: '11px', color: isDarkMode ? colours.dark.text : colours.light.text, lineHeight: '1.5', display: 'grid', gap: '4px' }}>\r\n                              <div><strong>Client Type:</strong> {selectedOverviewItem?.risk?.ClientType || 'Not specified'}</div>\r\n                              <div><strong>Client Type Value:</strong> <span style={{ color: isDarkMode ? colours.dark.text : '#111827', fontWeight: 600 }}>{selectedOverviewItem?.risk?.ClientType_Value ?? 'Not rated'}</span></div>\r\n                              <div><strong>How Introduced:</strong> {selectedOverviewItem?.risk?.HowWasClientIntroduced || 'Not recorded'}</div>\r\n                              <div><strong>Introduction Value:</strong> <span style={{ color: isDarkMode ? colours.dark.text : '#111827', fontWeight: 600 }}>{selectedOverviewItem?.risk?.HowWasClientIntroduced_Value ?? 'Not rated'}</span></div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          {/* Funds Analysis */}\r\n                          <div style={{\r\n                            background: workbenchCardBackground(isDarkMode),\r\n                            borderRadius: '12px',\r\n                            padding: '16px',\r\n                            border: `1px solid ${workbenchBorderColour(isDarkMode)}`,\r\n                            boxShadow: isDarkMode ? '0 6px 16px rgba(2, 6, 23, 0.35)' : '0 6px 16px rgba(15, 23, 42, 0.08)'\r\n                          }}>\r\n                            <div style={{\r\n                              fontSize: '12px',\r\n                              fontWeight: 600,\r\n                              color: isDarkMode ? colours.dark.text : '#374151',\r\n                              marginBottom: '12px',\r\n                              textTransform: 'uppercase',\r\n                              letterSpacing: '0.025em',\r\n                              borderBottom: `1px solid ${isDarkMode ? colours.dark.border : '#e2e8f0'}`,\r\n                              paddingBottom: '8px'\r\n                            }}>\r\n                              Funds Analysis\r\n                            </div>\r\n                            <div style={{ fontSize: '11px', color: isDarkMode ? colours.dark.text : colours.light.text, lineHeight: '1.5', display: 'grid', gap: '4px' }}>\r\n                              <div><strong>Source of Funds:</strong> {selectedOverviewItem?.risk?.SourceOfFunds || 'Not specified'}</div>\r\n                              <div><strong>Source Value:</strong> <span style={{ color: isDarkMode ? colours.dark.text : '#111827', fontWeight: 600 }}>{selectedOverviewItem?.risk?.SourceOfFunds_Value ?? 'Not rated'}</span></div>\r\n                              <div><strong>Destination:</strong> {selectedOverviewItem?.risk?.DestinationOfFunds || 'Not specified'}</div>\r\n                              <div><strong>Funds Type:</strong> {selectedOverviewItem?.risk?.FundsType || 'Not specified'}</div>\r\n                              <div><strong>Value of Instruction:</strong> <span style={{ color: isDarkMode ? colours.dark.text : '#111827', fontWeight: 600 }}>{selectedOverviewItem?.risk?.ValueOfInstruction || 'Not specified'}</span></div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          {/* Compliance Checks */}\r\n                          <div style={{\r\n                            background: workbenchCardBackground(isDarkMode),\r\n                            borderRadius: '12px',\r\n                            padding: '16px',\r\n                            border: `1px solid ${workbenchBorderColour(isDarkMode)}`,\r\n                            boxShadow: isDarkMode ? '0 6px 16px rgba(2, 6, 23, 0.35)' : '0 6px 16px rgba(15, 23, 42, 0.08)'\r\n                          }}>\r\n                            <div style={{\r\n                              fontSize: '12px',\r\n                              fontWeight: 600,\r\n                              color: isDarkMode ? colours.dark.text : '#374151',\r\n                              marginBottom: '12px',\r\n                              textTransform: 'uppercase',\r\n                              letterSpacing: '0.025em',\r\n                              borderBottom: `1px solid ${isDarkMode ? colours.dark.border : '#e2e8f0'}`,\r\n                              paddingBottom: '8px'\r\n                            }}>\r\n                              Compliance Factors\r\n                            </div>\r\n                            <div style={{ fontSize: '11px', color: isDarkMode ? colours.dark.text : colours.light.text, lineHeight: '1.5', display: 'grid', gap: '4px' }}>\r\n                              <div><strong>Client Risk Factors:</strong> <span style={{ color: isDarkMode ? colours.dark.text : '#111827' }}>{selectedOverviewItem?.risk?.ClientRiskFactorsConsidered ? 'Considered' : 'Not considered'}</span></div>\r\n                              <div><strong>Transaction Risk Factors:</strong> <span style={{ color: isDarkMode ? colours.dark.text : '#111827' }}>{selectedOverviewItem?.risk?.TransactionRiskFactorsConsidered ? 'Considered' : 'Not considered'}</span></div>\r\n                              <div><strong>AML Policy:</strong> <span style={{ color: isDarkMode ? colours.dark.text : '#111827' }}>{selectedOverviewItem?.risk?.FirmWideAMLPolicyConsidered ? 'Considered' : 'Not considered'}</span></div>\r\n                              <div><strong>Sanctions Risk:</strong> <span style={{ color: isDarkMode ? colours.dark.text : '#111827' }}>{selectedOverviewItem?.risk?.FirmWideSanctionsRiskConsidered ? 'Considered' : 'Not considered'}</span></div>\r\n                              <div><strong>Limitation:</strong> {selectedOverviewItem?.risk?.Limitation || 'Not specified'}</div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Risk Actions Panel */}\r\n                        <div style={{\r\n                          background: workbenchCardBackground(isDarkMode),\r\n                          borderRadius: '12px',\r\n                          padding: '16px',\r\n                          border: `1px solid ${workbenchBorderColour(isDarkMode)}`,\r\n                          boxShadow: isDarkMode ? '0 6px 16px rgba(2, 6, 23, 0.35)' : '0 6px 16px rgba(15, 23, 42, 0.08)',\r\n                          marginBottom: '20px'\r\n                        }}>\r\n                          <div style={{\r\n                            fontSize: '12px',\r\n                            fontWeight: 600,\r\n                            color: isDarkMode ? colours.dark.text : '#374151',\r\n                            marginBottom: '12px',\r\n                            textTransform: 'uppercase',\r\n                            letterSpacing: '0.025em',\r\n                            borderBottom: `1px solid ${isDarkMode ? colours.dark.border : '#e2e8f0'}`,\r\n                            paddingBottom: '8px'\r\n                          }}>\r\n                            Risk Assessment Actions\r\n                          </div>\r\n                          <div style={{ display: 'grid', gridTemplateColumns: '2fr 1fr', gap: '16px' }}>\r\n                            <div style={{ fontSize: '11px', color: isDarkMode ? colours.dark.text : colours.light.text, lineHeight: '1.5' }}>\r\n                              <div>Assessment Status: <strong style={{ color: selectedOverviewItem?.risk ? colours.green : colours.orange }}>{selectedOverviewItem?.risk ? 'Completed' : 'Pending'}</strong></div>\r\n                              <div>Risk Score Increment: <strong>{selectedOverviewItem?.risk?.RiskScoreIncrementBy || 'Not calculated'}</strong></div>\r\n                              <div>Reference: <strong>{selectedOverviewItem?.risk?.InstructionRef || selectedInstruction?.InstructionRef}</strong></div>\r\n                            </div>\r\n                            <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\r\n                              {!selectedOverviewItem?.risk && (\r\n                                <button\r\n                                  onClick={() => {\r\n                                    const targetItem = overviewItems.find((item: any) => \r\n                                      item.instruction?.InstructionRef === selectedInstruction?.InstructionRef\r\n                                    );\r\n                                    if (targetItem) handleRiskAssessment(targetItem);\r\n                                  }}\r\n                                  style={{\r\n                                    padding: '8px 12px',\r\n                                    fontSize: '11px',\r\n                                    border: `1px solid ${colours.blue}`,\r\n                                    borderRadius: '4px',\r\n                                    background: 'transparent',\r\n                                    color: colours.blue,\r\n                                    cursor: 'pointer'\r\n                                  }}\r\n                                >\r\n                                  Create Assessment\r\n                                </button>\r\n                              )}\r\n                              {selectedOverviewItem?.risk && (\r\n                                <button\r\n                                  onClick={() => setShowRiskDetails(true)}\r\n                                  style={{\r\n                                    padding: '8px 12px',\r\n                                    fontSize: '11px',\r\n                                    border: `1px solid ${colours.green}`,\r\n                                    borderRadius: '4px',\r\n                                    background: 'transparent',\r\n                                    color: colours.green,\r\n                                    cursor: 'pointer'\r\n                                  }}\r\n                                >\r\n                                  View Details\r\n                                </button>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Technical Details - Expandable */}\r\n                        <div style={{\r\n                          background: workbenchCardBackground(isDarkMode),\r\n                          borderRadius: '12px',\r\n                          padding: '12px',\r\n                          border: `1px solid ${workbenchBorderColour(isDarkMode)}`,\r\n                          boxShadow: isDarkMode ? '0 6px 16px rgba(2, 6, 23, 0.35)' : '0 6px 16px rgba(15, 23, 42, 0.08)'\r\n                        }}>\r\n                          <button\r\n                            onClick={() => toggleSection('risk-raw')}\r\n                            style={{\r\n                              width: '100%',\r\n                              background: 'none',\r\n                              border: 'none',\r\n                              color: colours.greyText,\r\n                              fontSize: '11px',\r\n                              cursor: 'pointer',\r\n                              display: 'flex',\r\n                              alignItems: 'center',\r\n                              justifyContent: 'space-between',\r\n                              padding: '4px 0'\r\n                            }}\r\n                          >\r\n                            <span>Technical Details & Raw Risk Assessment Record</span>\r\n                            <div style={{ \r\n                              transform: expandedSections['risk-raw'] ? 'rotate(180deg)' : 'rotate(0deg)', \r\n                              transition: 'transform 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n                              display: 'flex',\r\n                              alignItems: 'center'\r\n                            }}>\r\n                              <MdExpandMore size={14} />\r\n                            </div>\r\n                          </button>\r\n                          \r\n                          {expandedSections['risk-raw'] && (\r\n                            <div style={{ \r\n                              marginTop: '12px',\r\n                              background: isDarkMode ? '#1a1a1a' : '#ffffff', \r\n                              border: `1px solid ${isDarkMode ? colours.dark.border : '#e2e8f0'}`, \r\n                              borderRadius: '6px', \r\n                              padding: '12px', \r\n                              fontSize: '10px', \r\n                              fontFamily: 'Monaco, Consolas, monospace',\r\n                              maxHeight: '250px',\r\n                              overflowY: 'auto',\r\n                              color: isDarkMode ? '#e5e5e5' : '#374151'\r\n                            }}>\r\n                              {selectedOverviewItem?.risk ? (\r\n                                <pre style={{ margin: 0, whiteSpace: 'pre-wrap', wordBreak: 'break-word' }}>\r\n                                  {JSON.stringify(selectedOverviewItem.risk, null, 2)}\r\n                                </pre>\r\n                              ) : (\r\n                                <div style={{ color: colours.greyText, fontStyle: 'italic' }}>No risk assessment data available</div>\r\n                              )}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n\r\n                    {activeWorkbenchTab === 'payment' && (\r\n                      <div>\r\n                        \r\n                        {/* Payment Transaction Details */}\r\n                        <div style={{ marginBottom: '20px' }}>\r\n                          {selectedOverviewItem?.instruction?.payments?.length > 0 ? (\r\n                            <div style={{ display: 'grid', gridTemplateColumns: '1fr', gap: '12px' }}>\r\n                              {selectedOverviewItem?.instruction?.payments?.map((payment: any, index: number) => (\r\n                                <div key={payment.id || index} style={{\r\n                                  padding: '16px',\r\n                                  border: `1px solid ${isDarkMode ? colours.dark.border : '#e2e8f0'}`,\r\n                                  borderRadius: '8px',\r\n                                  background: isDarkMode ? 'rgba(255,255,255,0.02)' : '#f8fafc'\r\n                                }}>\r\n                                  <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr 1fr', gap: '16px' }}>\r\n                                    {/* Payment Core Details */}\r\n                                    <div>\r\n                                      <h4 style={{ margin: '0 0 8px 0', fontSize: '12px', fontWeight: 600, color: colours.blue }}>Payment #{index + 1}</h4>\r\n                                      <div style={{ fontSize: '11px', color: isDarkMode ? colours.dark.text : colours.light.text, lineHeight: '1.5', display: 'grid', gap: '3px' }}>\r\n                                        <div><strong>Payment ID:</strong> {payment.id}</div>\r\n                                        <div><strong>Stripe Intent:</strong> {payment.payment_intent_id}</div>\r\n                                        <div><strong>Amount:</strong> <span style={{ color: colours.green, fontWeight: 600 }}>£{payment.amount} {payment.currency}</span></div>\r\n                                        <div><strong>Amount Minor:</strong> {payment.amount_minor} pence</div>\r\n                                        <div><strong>Status:</strong> <span style={{ color: payment.payment_status === 'succeeded' ? colours.green : payment.payment_status === 'processing' ? colours.orange : colours.red }}>{payment.payment_status}</span></div>\r\n                                        <div><strong>Internal Status:</strong> <span style={{ color: payment.internal_status === 'completed' ? colours.green : colours.orange }}>{payment.internal_status}</span></div>\r\n                                      </div>\r\n                                    </div>\r\n\r\n                                    {/* Service Details */}\r\n                                    <div>\r\n                                      <h4 style={{ margin: '0 0 8px 0', fontSize: '12px', fontWeight: 600, color: colours.orange }}>Service Information</h4>\r\n                                      <div style={{ fontSize: '11px', color: isDarkMode ? colours.dark.text : colours.light.text, lineHeight: '1.5', display: 'grid', gap: '3px' }}>\r\n                                        <div><strong>Instruction Ref:</strong> {payment.instruction_ref}</div>\r\n                                        <div><strong>Service Desc:</strong> {payment.service_description || 'Not specified'}</div>\r\n                                        <div><strong>Area of Work:</strong> {payment.area_of_work || 'Not specified'}</div>\r\n                                        <div><strong>Receipt URL:</strong> {payment.receipt_url ? \r\n                                          <a href={payment.receipt_url} target=\"_blank\" rel=\"noopener noreferrer\" style={{ color: colours.blue, textDecoration: 'none', fontSize: '10px' }}>\r\n                                            View Receipt ↗\r\n                                          </a> : 'Not available'\r\n                                        }</div>\r\n                                      </div>\r\n                                    </div>\r\n\r\n                                    {/* Timestamps & Security */}\r\n                                    <div>\r\n                                      <h4 style={{ margin: '0 0 8px 0', fontSize: '12px', fontWeight: 600, color: colours.green }}>Timestamps & Security</h4>\r\n                                      <div style={{ fontSize: '11px', color: isDarkMode ? colours.dark.text : colours.light.text, lineHeight: '1.5', display: 'grid', gap: '3px' }}>\r\n                                        <div><strong>Created:</strong> {new Date(payment.created_at).toLocaleString()}</div>\r\n                                        <div><strong>Updated:</strong> {new Date(payment.updated_at).toLocaleString()}</div>\r\n                                        <div><strong>Client Secret:</strong> <span style={{ fontFamily: 'monospace', fontSize: '9px', color: colours.greyText }}>\r\n                                          {payment.client_secret ? `${payment.client_secret.substring(0, 20)}...` : 'Not available'}\r\n                                        </span></div>\r\n                                        <div><strong>Webhook Events:</strong> {payment.webhook_events || 'None recorded'}</div>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n\r\n                                  {/* Metadata Section - Expandable */}\r\n                                  {payment.metadata && (\r\n                                    <div style={{ marginTop: '12px', paddingTop: '12px', borderTop: `1px solid ${isDarkMode ? colours.dark.border : '#e2e8f0'}` }}>\r\n                                      <button\r\n                                        onClick={() => toggleSection(`payment-metadata-${index}`)}\r\n                                        style={{\r\n                                          background: 'none',\r\n                                          border: 'none',\r\n                                          color: colours.greyText,\r\n                                          fontSize: '11px',\r\n                                          cursor: 'pointer',\r\n                                          display: 'flex',\r\n                                          alignItems: 'center',\r\n                                          gap: '6px',\r\n                                          padding: '2px 0'\r\n                                        }}\r\n                                      >\r\n                                        <span style={{ transform: expandedSections[`payment-metadata-${index}`] ? 'rotate(90deg)' : 'rotate(0deg)', transition: 'transform 0.2s' }}>▶</span>\r\n                                        <span>Transaction Metadata</span>\r\n                                      </button>\r\n                                      \r\n                                      {expandedSections[`payment-metadata-${index}`] && (\r\n                                        <div style={{ \r\n                                          marginTop: '6px',\r\n                                          background: isDarkMode ? '#1a1a1a' : '#ffffff', \r\n                                          border: `1px solid ${isDarkMode ? colours.dark.border : '#e2e8f0'}`, \r\n                                          borderRadius: '4px', \r\n                                          padding: '8px', \r\n                                          fontSize: '9px', \r\n                                          fontFamily: 'Monaco, Consolas, monospace',\r\n                                          color: isDarkMode ? '#e5e5e5' : '#374151',\r\n                                          maxHeight: '100px',\r\n                                          overflowY: 'auto'\r\n                                        }}>\r\n                                          <pre style={{ margin: 0, whiteSpace: 'pre-wrap' }}>\r\n                                            {typeof payment.metadata === 'string' ? payment.metadata : JSON.stringify(payment.metadata, null, 2)}\r\n                                          </pre>\r\n                                        </div>\r\n                                      )}\r\n                                    </div>\r\n                                  )}\r\n                                </div>\r\n                              ))}\r\n                            </div>\r\n                          ) : (\r\n                            <div style={{\r\n                              padding: '40px',\r\n                              textAlign: 'center',\r\n                              background: workbenchCardBackground(isDarkMode),\r\n                              borderRadius: '12px',\r\n                              border: `1px solid ${workbenchBorderColour(isDarkMode)}`,\r\n                              boxShadow: isDarkMode ? '0 6px 16px rgba(2, 6, 23, 0.35)' : '0 6px 16px rgba(15, 23, 42, 0.08)',\r\n                              color: colours.greyText\r\n                            }}>\r\n                              <FaCreditCard size={32} style={{ marginBottom: '16px', opacity: 0.5 }} />\r\n                              <h4 style={{ margin: '0 0 8px 0', fontWeight: 500 }}>No Payment Transactions</h4>\r\n                              <p style={{ margin: 0, fontSize: '12px' }}>This instruction has no recorded payment transactions.</p>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n\r\n                        {/* Payment Summary */}\r\n                        <div style={{\r\n                          background: workbenchCardBackground(isDarkMode),\r\n                          borderRadius: '12px',\r\n                          padding: '16px',\r\n                          border: `1px solid ${workbenchBorderColour(isDarkMode)}`,\r\n                          boxShadow: isDarkMode ? '0 6px 16px rgba(2, 6, 23, 0.35)' : '0 6px 16px rgba(15, 23, 42, 0.08)',\r\n                          marginBottom: '20px'\r\n                        }}>\r\n                          <div style={{\r\n                            fontSize: '12px',\r\n                            fontWeight: 600,\r\n                            color: isDarkMode ? colours.dark.text : '#374151',\r\n                            marginBottom: '12px',\r\n                            textTransform: 'uppercase',\r\n                            letterSpacing: '0.025em',\r\n                            borderBottom: `1px solid ${isDarkMode ? colours.dark.border : '#e2e8f0'}`,\r\n                            paddingBottom: '8px'\r\n                          }}>\r\n                            Payment Summary & Actions\r\n                          </div>\r\n                          <div style={{ display: 'grid', gridTemplateColumns: '2fr 1fr', gap: '16px' }}>\r\n                            <div style={{ fontSize: '11px', color: isDarkMode ? colours.dark.text : colours.light.text, lineHeight: '1.5' }}>\r\n                              <div>Total Transactions: <strong>{selectedOverviewItem?.instruction?.payments?.length || 0}</strong></div>\r\n                              <div>Total Amount: <strong style={{ color: colours.green }}>\r\n                                £{selectedOverviewItem?.instruction?.payments?.reduce((sum: number, p: any) => sum + parseFloat(p.amount || 0), 0).toFixed(2) || '0.00'}\r\n                              </strong></div>\r\n                              <div>Successful Payments: <strong style={{ color: colours.green }}>\r\n                                {selectedOverviewItem?.instruction?.payments?.filter((p: any) => p.payment_status === 'succeeded').length || 0}\r\n                              </strong></div>\r\n                              <div>Deal Value: <strong>{selectedOverviewItem?.deal?.Amount ? `£${selectedOverviewItem.deal.Amount}` : 'Not specified'}</strong></div>\r\n                            </div>\r\n                            <button\r\n                              onClick={() => setShowPaymentDetails(true)}\r\n                              style={{\r\n                                padding: '8px 12px',\r\n                                fontSize: '11px',\r\n                                border: `1px solid ${colours.blue}`,\r\n                                borderRadius: '4px',\r\n                                background: 'transparent',\r\n                                color: colours.blue,\r\n                                cursor: 'pointer'\r\n                              }}\r\n                            >\r\n                              View Details\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Technical Details - Expandable */}\r\n                        {selectedOverviewItem?.instruction?.payments?.length > 0 && (\r\n                          <div style={{\r\n                            background: workbenchCardBackground(isDarkMode),\r\n                            borderRadius: '12px',\r\n                            padding: '12px',\r\n                            border: `1px solid ${workbenchBorderColour(isDarkMode)}`,\r\n                            boxShadow: isDarkMode ? '0 6px 16px rgba(2, 6, 23, 0.35)' : '0 6px 16px rgba(15, 23, 42, 0.08)'\r\n                          }}>\r\n                            <button\r\n                              onClick={() => toggleSection('payment-raw')}\r\n                              style={{\r\n                                width: '100%',\r\n                                background: 'none',\r\n                                border: 'none',\r\n                                color: colours.greyText,\r\n                                fontSize: '11px',\r\n                                cursor: 'pointer',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'space-between',\r\n                                padding: '4px 0'\r\n                              }}\r\n                            >\r\n                              <span>Technical Details & Raw Payment Records ({selectedOverviewItem?.instruction?.payments?.length || 0} Transactions)</span>\r\n                              <div style={{ \r\n                                transform: expandedSections['payment-raw'] ? 'rotate(180deg)' : 'rotate(0deg)', \r\n                                transition: 'transform 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n                                display: 'flex',\r\n                                alignItems: 'center'\r\n                              }}>\r\n                                <MdExpandMore size={14} />\r\n                              </div>\r\n                            </button>\r\n                            \r\n                            {expandedSections['payment-raw'] && (\r\n                              <div style={{ \r\n                                marginTop: '12px',\r\n                                background: isDarkMode ? '#1a1a1a' : '#ffffff', \r\n                                border: `1px solid ${isDarkMode ? colours.dark.border : '#e2e8f0'}`, \r\n                                borderRadius: '6px', \r\n                                padding: '12px', \r\n                                fontSize: '10px', \r\n                                fontFamily: 'Monaco, Consolas, monospace',\r\n                                maxHeight: '300px',\r\n                                overflowY: 'auto',\r\n                                color: isDarkMode ? '#e5e5e5' : '#374151'\r\n                              }}>\r\n                                <pre style={{ margin: 0, whiteSpace: 'pre-wrap', wordBreak: 'break-word' }}>\r\n                                  {JSON.stringify(selectedOverviewItem?.instruction?.payments || [], null, 2)}\r\n                                </pre>\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n\r\n                    {activeWorkbenchTab === 'documents' && (\r\n                      <div>\r\n                        \r\n                        <div>\r\n                          <h4 style={{ margin: '0 0 12px 0', fontSize: '12px', fontWeight: 600, color: isDarkMode ? colours.dark.text : colours.light.text }}>Document Library</h4>\r\n                          {selectedOverviewItem?.instruction?.documents && selectedOverviewItem.instruction.documents.length > 0 ? (\r\n                            <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', gap: '12px' }}>\r\n                              {selectedOverviewItem.instruction.documents.map((doc: any, index: number) => (\r\n                                <div\r\n                                  key={index}\r\n                                  style={{\r\n                                    padding: '12px',\r\n                                    border: `1px solid ${isDarkMode ? colours.dark.border : '#e2e8f0'}`,\r\n                                    borderRadius: '6px',\r\n                                    background: isDarkMode ? 'rgba(255,255,255,0.02)' : '#f8fafc',\r\n                                    cursor: 'pointer'\r\n                                  }}\r\n                                  onClick={() => {\r\n                                    // Open document preview modal\r\n                                    handleDocumentPreview(doc, selectedInstruction?.InstructionRef || '');\r\n                                  }}\r\n                                >\r\n                                  <div style={{ fontSize: '11px', fontWeight: 600, marginBottom: '4px', color: isDarkMode ? colours.dark.text : colours.light.text }}>\r\n                                    {doc.FileName || doc.filename || doc.DocumentName || `Document ${index + 1}`}\r\n                                  </div>\r\n                                  <div style={{ fontSize: '10px', color: isDarkMode ? colours.dark.subText : '#64748b' }}>\r\n                                    Size: {doc.FileSizeBytes ? formatBytes(doc.FileSizeBytes) : (doc.filesize ? formatBytes(doc.filesize) : 'Unknown')}\r\n                                  </div>\r\n                                </div>\r\n                              ))}\r\n                            </div>\r\n                          ) : (\r\n                            <div style={{\r\n                              padding: '20px',\r\n                              textAlign: 'center',\r\n                              color: isDarkMode ? colours.dark.subText : '#64748b',\r\n                              fontSize: '12px',\r\n                              fontStyle: 'italic'\r\n                            }}>\r\n                              No documents uploaded yet\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n\r\n                    {activeWorkbenchTab === 'matter' && (\r\n                      <MatterOperations\r\n                        selectedInstruction={selectedInstruction}\r\n                        selectedOverviewItem={selectedOverviewItem}\r\n                        isDarkMode={isDarkMode}\r\n                        onStatusUpdate={handleStatusUpdate}\r\n                      />\r\n                    )}\r\n\r\n                    {activeWorkbenchTab === 'override' && (\r\n                      <div>\r\n                        \r\n                        <OverridePills \r\n                          instruction={selectedInstruction}\r\n                          isDarkMode={isDarkMode}\r\n                          onStatusUpdate={() => {\r\n                            // Force a refresh of the instruction data\r\n                            // This will trigger a re-render and update the workflow states\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                    </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </Stack>\r\n\r\n    {/* Dialogs and Modals */}\r\n    <Dialog\r\n        hidden={!isResumeDialogOpen}\r\n        onDismiss={() => setIsResumeDialogOpen(false)}\r\n        dialogContentProps={{\r\n          type: 'normal' as any,\r\n          title: 'Resume Matter Opening?',\r\n          subText: 'An unfinished matter opening was detected. Would you like to resume it or start a new one?'\r\n        }}\r\n        modalProps={{ isBlocking: true }}\r\n      >\r\n        {/* Dialog content for resume matter opening */}\r\n        <div style={{ display: 'flex', gap: 16, marginTop: 8, flexWrap: 'wrap' }}>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              setIsResumeDialogOpen(false);\r\n              setSelectedInstruction(pendingInstruction);\r\n              setForceNewMatter(false);\r\n              setShowNewMatterPage(true);\r\n              setTimeout(() => {\r\n                window.scrollTo({ top: 0, behavior: 'smooth' });\r\n              }, 100);\r\n            }}\r\n            style={{\r\n              flex: '1 1 200px',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              gap: 12,\r\n              padding: '16px 20px',\r\n              border: '2px solid #3690CE',\r\n              borderRadius: 8,\r\n              background: 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n              color: '#061733',\r\n              cursor: 'pointer',\r\n              fontSize: 14,\r\n              fontWeight: 600,\r\n              transition: 'all 0.2s ease',\r\n            }}\r\n            onMouseEnter={e => {\r\n              e.currentTarget.style.transform = 'translateY(-1px)';\r\n              e.currentTarget.style.boxShadow = '0 8px 16px rgba(54, 144, 206, 0.15)';\r\n            }}\r\n            onMouseLeave={e => {\r\n              e.currentTarget.style.transform = 'translateY(0)';\r\n              e.currentTarget.style.boxShadow = 'none';\r\n            }}\r\n          >\r\n            <div style={{ fontSize: 18, color: '#3690CE' }}>↻</div>\r\n            <div>\r\n              <div style={{ fontWeight: 700, marginBottom: 2 }}>Resume</div>\r\n              <div style={{ fontSize: 12, color: '#6B7280' }}>Continue where you left off</div>\r\n            </div>\r\n          </button>\r\n\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleStartNewMatter}\r\n            style={{\r\n              flex: '1 1 200px',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              gap: 12,\r\n              padding: '16px 20px',\r\n              border: '2px solid #E5E7EB',\r\n              borderRadius: 8,\r\n              background: 'linear-gradient(135deg, #FFFFFF 0%, #F9FAFB 100%)',\r\n              color: '#374151',\r\n              cursor: 'pointer',\r\n              fontSize: 14,\r\n              fontWeight: 600,\r\n              transition: 'all 0.2s ease',\r\n            }}\r\n            onMouseEnter={e => {\r\n              e.currentTarget.style.transform = 'translateY(-1px)';\r\n              e.currentTarget.style.borderColor = '#9CA3AF';\r\n              e.currentTarget.style.boxShadow = '0 8px 16px rgba(0, 0, 0, 0.1)';\r\n            }}\r\n            onMouseLeave={e => {\r\n              e.currentTarget.style.transform = 'translateY(0)';\r\n              e.currentTarget.style.borderColor = '#E5E7EB';\r\n              e.currentTarget.style.boxShadow = 'none';\r\n            }}\r\n          >\r\n            <div style={{ fontSize: 18, color: '#6B7280' }}>+</div>\r\n            <div>\r\n              <div style={{ fontWeight: 700, marginBottom: 2 }}>Start New</div>\r\n              <div style={{ fontSize: 12, color: '#6B7280' }}>Begin a fresh matter opening</div>\r\n            </div>\r\n          </button>\r\n        </div>\r\n      </Dialog>\r\n\r\n    <IDVerificationReviewModal\r\n        isVisible={showReviewModal}\r\n        details={reviewModalDetails}\r\n        onClose={() => {\r\n          setShowReviewModal(false);\r\n          setReviewModalDetails(null);\r\n        }}\r\n        onApprove={handleVerificationApproval}\r\n        onRequestDocuments={async (instructionRef: string) => {\r\n          console.log('Documents requested for:', instructionRef);\r\n          // The email sending is handled within the modal\r\n        }}\r\n        onOverride={async (instructionRef: string) => {\r\n          debugLog('Override verification for:', instructionRef);\r\n          \r\n          // Update local data immediately to reflect the override/skip\r\n          setInstructionData(prevData => \r\n            prevData.map(prospect => ({\r\n              ...prospect,\r\n              instructions: prospect.instructions.map((instruction: any) => {\r\n                if (instruction.InstructionRef === instructionRef) {\r\n                  debugLog('Override/skip ID verification for:', instructionRef);\r\n                  // Mark as completed but skipped\r\n                  return { ...instruction, EIDOverallResult: 'Skipped', stage: 'proof-of-id-complete' };\r\n                }\r\n                return instruction;\r\n              }),\r\n              // Also update the electronicIDChecks/idVerifications arrays\r\n              electronicIDChecks: (prospect.electronicIDChecks || []).map((eid: any) => {\r\n                if ((eid.MatterId || eid.InstructionRef) === instructionRef) {\r\n                  return { ...eid, EIDOverallResult: 'Skipped', EIDStatus: 'skipped' };\r\n                }\r\n                return eid;\r\n              }),\r\n              idVerifications: (prospect.idVerifications || []).map((eid: any) => {\r\n                if ((eid.MatterId || eid.InstructionRef) === instructionRef) {\r\n                  return { ...eid, EIDOverallResult: 'Skipped', EIDStatus: 'skipped' };\r\n                }\r\n                return eid;\r\n              })\r\n            }))\r\n          );\r\n          \r\n          // Also update poidData\r\n          setPoidData(prevPoidData =>\r\n            prevPoidData.map(eid => {\r\n              if ((eid.matter_id || (eid as any).InstructionRef) === instructionRef) {\r\n                return { ...eid, EIDOverallResult: 'Skipped' as any, EIDStatus: 'skipped' as any };\r\n              }\r\n              return eid;\r\n            })\r\n          );\r\n          \r\n          // Close modal and trigger background refresh\r\n          setShowReviewModal(false);\r\n          setReviewModalDetails(null);\r\n          \r\n          // Trigger background data refresh\r\n          setTimeout(() => {\r\n            fetchUnifiedEnquiries();\r\n          }, 1000);\r\n        }}\r\n      />\r\n\r\n      {/* Instruction Selector Modal */}\r\n      {showInstructionSelector && (\r\n        <div style={{\r\n          position: 'fixed',\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n          background: 'rgba(0, 0, 0, 0.5)',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          zIndex: 1000\r\n        }}>\r\n          <div style={{\r\n            background: isDarkMode ? colours.dark.cardBackground : 'white',\r\n            borderRadius: '12px',\r\n            padding: '24px',\r\n            maxWidth: '600px',\r\n            width: '90%',\r\n            maxHeight: '80vh',\r\n            overflow: 'auto',\r\n            boxShadow: '0 20px 60px rgba(0, 0, 0, 0.3)'\r\n          }}>\r\n            <div style={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              alignItems: 'center',\r\n              marginBottom: '20px'\r\n            }}>\r\n              <h3 style={{\r\n                margin: 0,\r\n                color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                fontSize: '18px',\r\n                fontWeight: '600'\r\n              }}>\r\n                Select Instruction for {selectorAction === 'verify' ? 'ID Verification' : \r\n                                      selectorAction === 'risk' ? 'Risk Assessment' :\r\n                                      selectorAction === 'matter' ? 'Matter Opening' : 'CCL Draft'}\r\n              </h3>\r\n              <button\r\n                onClick={() => {\r\n                  setShowInstructionSelector(false);\r\n                  setSelectorAction(null);\r\n                }}\r\n                style={{\r\n                  background: 'none',\r\n                  border: 'none',\r\n                  fontSize: '24px',\r\n                  cursor: 'pointer',\r\n                  color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                  padding: '4px'\r\n                }}\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n\r\n            <div style={{ marginBottom: '16px' }}>\r\n              <Text style={{\r\n                color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n                fontSize: '14px'\r\n              }}>\r\n                Choose an instruction to perform this action on:\r\n              </Text>\r\n            </div>\r\n\r\n            <div style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              gap: '8px',\r\n              maxHeight: '400px',\r\n              overflowY: 'auto'\r\n            }}>\r\n              {filteredOverviewItems.map((item: any) => {\r\n                const instruction = item.instruction;\r\n                if (!instruction) return null;\r\n\r\n                return (\r\n                  <button\r\n                    key={instruction.InstructionRef}\r\n                    onClick={async () => {\r\n                      if (selectorAction === 'verify') {\r\n                        await handleSelectorEIDCheck(instruction);\r\n                      }\r\n                      // Add other actions here as needed\r\n                      // Don't close the modal - let user see the result\r\n                    }}\r\n                    style={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                      alignItems: 'center',\r\n                      padding: '12px 16px',\r\n                      border: `1px solid ${isDarkMode ? colours.dark.border : '#e2e8f0'}`,\r\n                      borderRadius: '8px',\r\n                      background: isDarkMode ? colours.dark.background : 'white',\r\n                      cursor: 'pointer',\r\n                      transition: 'all 0.2s ease',\r\n                      textAlign: 'left'\r\n                    }}\r\n                    onMouseEnter={(e) => {\r\n                      e.currentTarget.style.background = isDarkMode ? colours.dark.cardHover : '#f8fafc';\r\n                      e.currentTarget.style.borderColor = colours.blue;\r\n                    }}\r\n                    onMouseLeave={(e) => {\r\n                      e.currentTarget.style.background = isDarkMode ? colours.dark.background : 'white';\r\n                      e.currentTarget.style.borderColor = isDarkMode ? colours.dark.border : '#e2e8f0';\r\n                    }}\r\n                  >\r\n                    <div style={{ flex: 1 }}>\r\n                      <div style={{\r\n                        fontSize: '16px',\r\n                        fontWeight: '700',\r\n                        color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                        marginBottom: '4px',\r\n                        letterSpacing: '-0.01em'\r\n                      }}>\r\n                        {instruction.Forename} {instruction.Surname}\r\n                      </div>\r\n                      {instruction.CompanyName && (\r\n                        <div style={{\r\n                          fontSize: '14px',\r\n                          fontWeight: '600',\r\n                          color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                          marginBottom: '4px',\r\n                          opacity: 0.9\r\n                        }}>\r\n                          {instruction.CompanyName}\r\n                        </div>\r\n                      )}\r\n                      <div style={{\r\n                        fontSize: '13px',\r\n                        color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n                        fontFamily: 'monospace',\r\n                        fontWeight: '500'\r\n                      }}>\r\n                        {instruction.InstructionRef}\r\n                      </div>\r\n                      {instruction.Email && (\r\n                        <div style={{\r\n                          fontSize: '12px',\r\n                          color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n                          marginTop: '2px',\r\n                          opacity: 0.8\r\n                        }}>\r\n                          {instruction.Email}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <div style={{\r\n                      fontSize: '13px',\r\n                      color: colours.blue,\r\n                      fontWeight: '600',\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      gap: '4px'\r\n                    }}>\r\n                      Select\r\n                      <span style={{ fontSize: '16px' }}>→</span>\r\n                    </div>\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n\r\n            {/* Processing indicator */}\r\n            {selectorProcessing && (\r\n              <div style={{\r\n                marginTop: '16px',\r\n                padding: '12px',\r\n                borderRadius: '8px',\r\n                backgroundColor: isDarkMode ? colours.dark.cardBackground : '#f8fafc',\r\n                border: `1px solid ${colours.blue}`,\r\n                fontSize: '14px',\r\n                color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                textAlign: 'center'\r\n              }}>\r\n                <div style={{ fontWeight: 'bold', marginBottom: '4px' }}>\r\n                  Processing...\r\n                </div>\r\n                <div>Please wait while we verify the ID</div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Result display */}\r\n            {selectorResult && (\r\n              <div style={{\r\n                marginTop: '16px',\r\n                padding: '12px',\r\n                borderRadius: '8px',\r\n                backgroundColor: selectorResult.success ? '#e8f5e8' : '#f5e8e8',\r\n                border: `1px solid ${selectorResult.success ? '#4CAF50' : '#f44336'}`,\r\n                fontSize: '14px'\r\n              }}>\r\n                <div style={{ fontWeight: 'bold', marginBottom: '4px' }}>\r\n                  {selectorResult.success ? '✓ Success' : '✗ Error'}\r\n                </div>\r\n                <div>{selectorResult.message}</div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Action buttons */}\r\n            <div style={{ \r\n              display: 'flex', \r\n              justifyContent: 'flex-end', \r\n              gap: '8px', \r\n              marginTop: '16px' \r\n            }}>\r\n              <button\r\n                style={{\r\n                  padding: '8px 16px',\r\n                  borderRadius: '6px',\r\n                  border: '1px solid #ccc',\r\n                  backgroundColor: isDarkMode ? colours.dark.background : 'white',\r\n                  color: isDarkMode ? colours.dark.text : '#333',\r\n                  cursor: 'pointer',\r\n                  transition: 'all 0.2s ease'\r\n                }}\r\n                onClick={() => {\r\n                  setShowInstructionSelector(false);\r\n                  setSelectorAction(null);\r\n                  setSelectorProcessing(null);\r\n                  setSelectorResult(null);\r\n                }}\r\n                onMouseEnter={(e) => {\r\n                  e.currentTarget.style.backgroundColor = isDarkMode ? colours.dark.cardHover : '#f5f5f5';\r\n                }}\r\n                onMouseLeave={(e) => {\r\n                  e.currentTarget.style.backgroundColor = isDarkMode ? colours.dark.background : 'white';\r\n                }}\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Risk Assessment Modal */}\r\n      {showRiskPage && selectedInstruction && (\r\n        <div style={{\r\n          position: 'fixed',\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n          zIndex: 2000,\r\n          background: isDarkMode ? 'rgba(0,0,0,0.8)' : 'rgba(0,0,0,0.4)',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          padding: '20px'\r\n        }}>\r\n          <div style={{\r\n            background: isDarkMode ? colours.dark.background : '#ffffff',\r\n            borderRadius: '12px',\r\n            maxWidth: '900px',\r\n            width: '100%',\r\n            maxHeight: '90vh',\r\n            overflow: 'auto',\r\n            boxShadow: isDarkMode ? '0 20px 60px rgba(0,0,0,0.8)' : '0 20px 60px rgba(0,0,0,0.3)'\r\n          }}>\r\n            <RiskAssessmentPage\r\n              onBack={() => setShowRiskPage(false)}\r\n              instructionRef={selectedInstruction.InstructionRef}\r\n              riskAssessor={(teamData?.[0] as any)?.FullName || (teamData?.[0] as any)?.[\"Full Name\"] || 'Unknown'}\r\n              existingRisk={selectedRisk}\r\n              onSave={handleRiskAssessmentSave}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Document Preview Modal */}\r\n      <DocumentPreviewModal\r\n        isOpen={previewModalOpen}\r\n        onDismiss={handleCloseDocumentPreview}\r\n        document={previewDocument}\r\n        instructionRef={selectedInstruction?.InstructionRef || ''}\r\n        isDarkMode={isDarkMode}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Instructions;"],"names":["dashboardTokens","childrenGap","cardTokens","cardStyles","root","padding","borderRadius","boxShadow","backgroundColor","colours","light","sectionBackground","orange","green","yellow","greyText","isDebugLogs","process","REACT_APP_DEBUG_LOGS","debugLog","console","log","arguments","debugWarn","warn","_ref","_fileName$split$pop2","isOpen","onDismiss","document","instructionRef","isDarkMode","loading","setLoading","useState","error","setError","previewUrl","setPreviewUrl","useEffect","_fileName$split$pop","url","encodeURIComponent","DocumentId","fileExt","FileName","split","pop","toLowerCase","includes","timer","setTimeout","clearTimeout","fileName","isImage","isPdf","isOfficeDoc","isPreviewable","formatFileSize","bytes","units","size","unitIndex","length","toFixed","handleDownload","downloadUrl","link","window","createElement","href","download","body","appendChild","click","removeChild","modalStyles","main","width","height","maxWidth","maxHeight","dark","background","overflow","headerStyle","display","justifyContent","alignItems","borderBottom","border","cardBackground","previewAreaStyle","flex","position","_jsx","Modal","isBlocking","styles","children","_jsxs","style","flexDirection","Text","variant","fontWeight","color","text","marginBottom","subText","FileSizeBytes","toUpperCase","gap","IconButton","iconProps","iconName","title","onClick","textAlign","Spinner","marginTop","MessageBar","messageBarType","MessageBarType","_Fragment","src","alt","objectFit","onLoad","onError","fontSize","PrimaryButton","borderColor","blue","cursor","margin","FaDownload","formatBytes","isNaN","i","v","getFileColour","ext","coloursRef","red","_ref2","_toLowerCase","_ref3","_eids$","_toLowerCase2","_ref4","_eids$2","_risk$RiskAssessmentR","_risk$RiskAssessmentR2","_matters","_solicitorContact$toL","_risk$RiskAssessmentR3","_risk$RiskAssessmentR4","_risk$RiskAssessmentR5","instruction","index","selected","onSelect","onToggle","expanded","innerRef","isResizing","onDocumentClick","documentCount","deal","prospectId","eid","eids","compliance","deals","clients","risk","documents","payments","onEIDClick","onRiskClick","onEditRisk","onDeleteRisk","onOpenMatter","onOpenWorkbench","idVerificationLoading","animationDelay","getClientNameByProspectId","onDealEdit","teamData","onRefreshData","isHovered","setIsHovered","showDetails","setShowDetails","clickedForActions","setClickedForActions","isEditingDeal","setIsEditingDeal","editDealData","setEditDealData","ServiceDescription","Amount","showStatusOverride","setShowStatusOverride","isUpdatingStatus","setIsUpdatingStatus","toast","setToast","show","type","message","isSavingDeal","setIsSavingDeal","activeStep","setActiveStep","showRiskDetails","setShowRiskDetails","showPaymentDetails","setShowPaymentDetails","loadingPaymentDetails","setLoadingPaymentDetails","paymentData","setPaymentData","showInstructionDetails","setShowInstructionDetails","loadingInstructionDetails","setLoadingInstructionDetails","instructionData","setInstructionData","showDocumentDetails","setShowDocumentDetails","selectedDocumentIndex","setSelectedDocumentIndex","fetchedDocuments","setFetchedDocuments","isLoadingDocuments","setIsLoadingDocuments","documentsToUse","useTheme","InstructionRef","fetch","then","response","json","data","catch","finally","instructions","React","getElementById","styleTag","id","innerHTML","head","reference","ok","Error","status","eidResult","EIDOverallResult","eidStatus","EIDStatus","poidPassed","proofOfIdComplete","Boolean","PassportNumber","DriversLicenseNumber","stageComplete","Stage","stage","trim","verifyIdStatus","paymentStatus","getPaymentStatus","InternalStatus","internalStatus","latestPayment","payment_status","internal_status","documentStatus","some","p","String","riskResultRaw","RiskAssessmentResult","toString","riskStatus","hasRiskAssessment","RiskScore","ComplianceDate","RiskAssessor","matterStatus","MatterId","matters","cclStatus","CCLSubmitted","hasDeal","instructionCaptureStatus","pitchWhen","combineLocal","dateStr","timeStr","d","Date","t","h","getHours","m","getMinutes","s","getSeconds","setHours","getTime","onlyT","dt","SubmissionDate","SubmissionTime","PitchedDate","PitchedTime","now","sameDay","getFullYear","getMonth","getDate","format","areaOfWork","AreaOfWork","Area_of_Work","area_of_work","ServiceType","serviceType","Type","isPitchedDeal","areaColor","area","getAreaColor","areaIcon","getAreaIcon","solicitorContact","useMemo","found","HelixContact","Solicitor","AssignedTo","Handler","PointOfContact","PitchedBy","find","value","normalizedSolicitor","GENERIC_CONTACT_IDENTIFIERS","Set","isGenericContact","has","isInitialised","nextActionStep","getPitchStage","stageLower","isManualOverride","OverrideReason","key","label","icon","FaUserEdit","FaIdBadge","colour","FaSpinner","FaPlayCircle","FaEnvelope","step","FaPhone","FaCalendarAlt","FaInfoCircle","FaFileAlt","FaIdCard","FaPoundSign","FaFileUpload","FaShieldAlt","FaFolder","FaClipboardCheck","selectedBg","selectedBorder","selectedShadow","cardClass","mergeStyles","opacity","borderLeft","fontFamily","transition","transform","selectors","outline","outlineOffset","style_","handleCardClick","e","stopPropagation","className","onKeyDown","preventDefault","role","tabIndex","ref","onMouseEnter","onMouseLeave","top","left","zIndex","Icon","bottom","pointerEvents","paddingLeft","ClientType","FaBuilding","FaUser","darkBlue","lineHeight","textShadow","getEnquiryPersonName","_clientName$firstName","_clientName$lastName","clientName","firstName","lastName","getDealPersonName","dealFirstName","dealLastName","Forename","FirstName","forename","Surname","LastName","surname","fullName","FullName","Name","name","company","Company","CompanyName","companyName","personName","subtleColour","navigator","clipboard","writeText","fallbackName","marginLeft","textTransform","letterSpacing","whiteSpace","currentTarget","normalized","getAreaDisplayText","slice","Created_Date","date","diffDays","Math","floor","flexWrap","email","Email","LeadClientEmail","phone","Phone","PhoneNumber","ContactNumber","instructionRefVal","Ref","prospectVal","contactValue","chipBase","onHover","el","onLeave","viewBox","fill","_teamMember2","teamMember","member","_member$FullName2","_member$Initials2","Initials","_member$FullName3","contact","TextField","onChange","_","newValue","prev","placeholder","multiline","rows","disabled","fieldGroup","field","DefaultButton","minWidth","async","DealId","updates","newAmount","parseFloat","Object","keys","handleSaveDeal","WebkitLineClamp","WebkitBoxOrient","fontStyle","toLocaleString","keySteps","push","clickable","map","statusText","minHeight","statusEl","querySelector","animation","paddingBottom","cta","confirm","gridTemplateColumns","toLocaleDateString","ValueOfInstruction","TransactionRiskLevel","DateOfBirth","CompanyType","EmailAddress","gridColumn","AddressLine1","AddressLine2","City","County","PostCode","filter","join","SubmittedDate","Status","NotesToClient","payment","idx","metadata","JSON","parse","amount","currency","created_at","updated_at","payment_intent_id","substring","service_description","serviceDescription","source","product","receipt_url","paddingTop","borderTop","target","rel","textDecoration","doc","isActive","textOverflow","filename","UploadedAt","uploaded_at","activeDoc","BlobUrl","download_url","preview_url","file_size","uploadedBy","UploadedBy","uploaded_by","user","User","uploadedAtRaw","CreatedAt","imageExts","audioExts","videoExts","textExts","pdfExts","canPreviewDirect","canPreviewOffice","officeViewerUrl","undefined","controls","OperationStatusToast","visible","panelBackground","borderColour","mutedText","accentBlue","selectedOverviewItem","onStatusUpdate","isUpdating","setIsUpdating","overrideReason","setOverrideReason","showOverrideInput","setShowOverrideInput","workflowSteps","getWorkflowSteps","_selectedOverviewItem","_selectedOverviewItem2","_selectedOverviewItem3","_selectedOverviewItem4","_selectedOverviewItem5","_selectedOverviewItem6","_selectedOverviewItem7","poidResult","idStatus","RiskAssessment","canOverride","FaCreditCard","overridden","stepKey","IDOverridden","RiskOverridden","MatterOverridden","CCLOverridden","isOverridden","pillColor","getPillColor","isCurrentlyUpdating","showInput","right","FaCheckCircle","stepLabel","updatePayload","userInitials","method","headers","stringify","result","success","handleOverrideToComplete","iconMap","pdf","FaFilePdf","FaFileWord","docx","xls","FaFileExcel","xlsx","ppt","FaFilePowerpoint","pptx","txt","zip","FaFileArchive","rar","jpg","FaFileImage","jpeg","png","mp3","FaFileAudio","mp4","FaFileVideo","getFileIcon","_filename$split$pop$t","_filename$split$pop","calculateAge","dateOfBirth","today","birthDate","age","monthDiff","formatDocumentNumber","docNumber","docType","masked","repeat","getRiskColor","riskLevel","level","_data$clients","_data$clients2","_data$clients3","_leadClient$ClientEma","_data$clients4","onOpenInstruction","primaryRisk","riskAssessments","leadClient","c","Lead","jointClients","isMultiClient","riskResult","getClientVerificationStatus","client","idVerification","_client$idVerificatio","_client$idVerificatio2","HasSubmitted","instructionTitle","ClientEmail","FaUsers","ClientType_Value","ValueOfInstruction_Value","SourceOfFunds","SourceOfFunds_Value","DestinationOfFunds","DestinationOfFunds_Value","FundsType","FundsType_Value","HowWasClientIntroduced","HowWasClientIntroduced_Value","Limitation","Limitation_Value","ClientRiskFactorsConsidered","TransactionRiskFactorsConsidered","FirmWideAMLPolicyConsidered","FirmWideSanctionsRiskConsidered","ComplianceExpiry","_leadClient$ClientEma4","personalInfo","allData","item","_item$email","_leadClient$ClientEma2","_item$Email","_leadClient$ClientEma3","prefix","Title","_item$email2","_leadClient$ClientEma5","_item$Email2","_leadClient$ClientEma6","dob","date_of_birth","DOB","nationality","Nationality","countryCode","nationality_iso","NationalityAlpha2","PEPAndSanctionsCheckResult","AddressVerificationResult","FaUserShield","FaMapMarkerAlt","EIDCheckedDate","EIDCheckedTime","FaClock","marginRight","CheckExpiry","EIDProvider","_item$email3","_leadClient$ClientEma7","_item$Email3","_leadClient$ClientEma8","best_number","passport","passport_number","license","drivers_license_number","address","house_building_number","street","city","county","post_code","country","flexShrink","_item$email4","_leadClient$ClientEma9","_item$Email4","_leadClient$ClientEma0","companyNumber","company_number","CompanyNumber","house_number","EIDCheckId","onMouseOver","onMouseOut","clientVerificationStatus","_client$ClientEmail3","_item$email5","_client$ClientEmail","_item$Email5","_client$ClientEmail2","_item$email6","_client$ClientEmail4","_item$Email6","_client$ClientEmail5","_item$email7","_client$ClientEmail6","_item$Email7","_client$ClientEmail7","_item$email8","_client$ClientEmail8","_item$Email8","_client$ClientEmail9","flatMap","docIndex","round","DocumentUrl","err","textArea","select","execCommand","handleCopyUrl","FaLink","_filename$split$pop$t2","_filename$split$pop2","open","handleDocumentClick","_filename$split$pop$t3","_filename$split$pop3","onClientSelected","searchEmail","setSearchEmail","searchResults","setSearchResults","isSearching","setIsSearching","hasSearched","setHasSearched","searchPrimary","setSearchPrimary","searchHome","setSearchHome","searchOther","setSearchOther","timeoutId","performSearch","emailTypes","errorData","renderClientItem","_client$firstName","_client$lastName","w","handleClientSelect","hoverBackground","Stack","horizontal","verticalAlign","tokens","Persona","secondaryText","PersonaSize","size40","presence","PersonaPresence","none","initialsColor","highlight","grow","FontIcon","containerClassName","horizontalAlign","SearchBox","Checkbox","checked","checkbox","relatedClientIds","mainClientId","originDeal","onRelatedClientsUpdate","relatedClients","setRelatedClients","mainClient","setMainClient","isLoading","setIsLoading","isLoadingCustomFields","setIsLoadingCustomFields","showLookupModal","setShowLookupModal","loadRelatedClients","loadMainClient","fetchClientCustomFields","clientId","custom_field_values","customFields","clientWithCustomFields","clientPromises","clientIds","validClients","Promise","all","renderClientCard","isMainClient","displayEmail","primary_email_address","displayPhone","primary_phone_number","customFieldsToShow","clioIcon","TooltipHost","content","relatedClientId","handleRemoveClient","wordBreak","SpinnerSize","small","field_name","connectorLine","originDealCard","amountValue","Intl","NumberFormat","maximumFractionDigits","createdOn","createdDate","pitchedAt","day","month","year","hour","minute","hour12","service","owner","ClientLookupModal","existingClient","parseDateValue","asString","timestamp","Number","getMatterOpenedAt","matter","candidates","open_date","OpenDate","openDate","opened_at","OpenedAt","candidate","getMatterDisplayNumber","_matter$display_numbe","display_number","DisplayNumber","displayNumber","getMatterIdString","_matter$id","MatterID","matter_id","getMatterNumericId","_ref5","_ref6","_matter$id2","numeric","compareMatters","a","b","openedA","openedB","displayA","displayB","comparison","localeCompare","sensitivity","idA","idB","elevatedShadow","_ref7","_clientData$matters","_selectedInstruction$2","selectedInstruction","matterData","setMatterData","clientLinked","clientData","setClientData","setRelatedClientIds","fetchedDisplayNumbers","useRef","displayNumberLabel","matterId","_ref8","_ref9","_dealSource$Amount","_dealSource$Created","dealSource","rawAmount","Estimate","QuoteAmount","Service","MatterDescription","ProspectId","Id","dealId","StageName","Currency","CreatedDate","CreatedOn","CreatedTime","Created","Owner","OwnerName","ResponsibleSolicitor","loadMatterData","ClientId","loadClientData","ClientID","description","Description","practiceArea","PracticeArea","responsibleSolicitor","currentDisplay","trimmedDisplay","looksLikeNumeric","test","current","add","resp","delete","payload","refreshedDisplay","ensureDisplayNumber","RelatedClientId","_selectedInstruction$","initials","_data$client","_data$client$id","_data$client2","_data$client3","_data$client4","_data$client5","Array","isArray","deduped","Map","forEach","keySource","existing","get","set","existingDisplay","candidateDisplay","from","values","sort","dedupeClientMatters","neutral","buttonStyle","colors","bg","hover","backdropFilter","cardStyle","clientMatters","RelatedClientsSection","newClientIds","handleOpenMatterDashboard","clioUrl","overflowY","displayValue","focused","onRequestClose","onRequestOpen","underlined","disableAnimation","onBlur","onFocus","practiceAreasByArea","Commercial","Construction","Property","Employment","partnerOptions","getGroupColor","group","options","selectedValue","onSelectionChange","containerStyle","getOptionStyle","option","isSelected","isDisabled","baseStyle","userSelect","borderRight","questionBannerStyle","grey","selectedDate","setSelectedDate","setTeamMember","teamMemberOptions","supervisingPartner","setSupervisingPartner","originatingSolicitor","setOriginatingSolicitor","isDateCalloutOpen","setIsDateCalloutOpen","dateButtonRef","solicitorOptions","requestingUser","requestingUserClioId","onContinue","liveTime","setLiveTime","toLocaleTimeString","interval","setInterval","clearInterval","appearance","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ModernMultiSelect","sharedPrimaryButtonStyles","getExpiryCountdown","expiryDateString","expiryDate","expiryMidnight","setDate","diff","msPerHour","msPerDay","months","days","hours","parts","getVerificationColor","baseCardStyle","boxSizing","darkCardStyle","selectedCardStyle","selectedDarkCardStyle","bottomContainerStyle","badgeStyle","contentStyle","transformOrigin","cardWithLinksHover","contactBlockStyle","_poid$stage","poid","instructionRefOverride","matterRefOverride","backgroundIconName","company_name","_member$Email","_poid$poc","poc","badgeInitials","first","last","nationalityAlpha2","country_code","HouseNumber","Street","Postcode","Country","idType","id_type","IdType","driversLicense","instruction_ref","paymentResult","prospect_id","payment_result","PaymentResult","paymentAmount","payment_amount","PaymentAmount","paymentProduct","payment_product","PaymentProduct","dealAmount","checkResult","check_result","pepSanctionsResult","pep_sanctions_result","addressVerificationResult","address_verification_result","checkExpiry","check_expiry","checkId","check_id","eid_status","eidCheckedDate","eid_checked_date","verificationColors","pepColors","addressColors","wrap","PoidSelectionTransition","setVisible","render","setRender","timeout","poidData","filteredPoidData","visiblePoidCount","selectedPoidIds","preselectedPoidIds","poidSearchTerm","setPoidSearchTerm","poidGridRef","handlePoidClick","onConfirm","pendingClientType","setPendingClientType","onClientTypeChange","clientAsOnFile","setClientAsOnFile","hideClientSections","matterRef","baseSelectedPoids","poid_id","instructionMatchedPoids","matches","selectedPoids","companyPoid","individualPoids","inferredType","formatName","formatPeopleList","people","max","names","remaining","bannerTitle","bannerSubtitle","meta","norm","startsWith","selectedVerifs","pep","addr","agg","every","aggId","aggPep","aggAddr","chipStyle","state","passed","brd","review","failed","pending","isClientSectionOpen","setIsClientSectionOpen","renderSelectionSummary","selectedPoid","helixLogo","gender","company_house_building_number","company_street","company_city","company_post_code","company_county","company_country","onlyShowPreselected","displayPoidData","allowsUnlimitedSelections","o","hasSelection","filteredData","isCompany","cardsToShow","singlePreselected","PoidCard","areaColors","setAreaOfWork","setPracticeArea","filteredOptions","pa","setDescription","matterRefPreview","panel","subtle","focus","shadow","folderStructure","setFolderStructure","folderOptions","disputeValueOptions","disputeValue","setDisputeValue","setSource","referrerName","setReferrerName","newVal","countries","code","PLACEHOLDER_INDICATORS","createOpponentDataSheet","fields","markFieldAsRealData","sheet","fieldName","isPlaceholder","lastUpdated","saveDataSheetToStorage","localStorage","setItem","serializeDataSheet","loadDataSheetFromStorage","stored","getItem","deserializeDataSheet","useDraftedState","initialValue","storageKey","setState","titleOptions","answeredFieldStyle","placeholderFieldStyle","unansweredFieldStyle","emailRegex","phoneAllowed","companyNumberRegex","pressedFieldStyle","dummyData","opponentTitle","opponentFirst","opponentLast","opponentEmail","opponentPhone","opponentHouseNumber","opponentStreet","opponentCity","opponentCounty","opponentPostcode","opponentCountry","opponentHasCompany","opponentCompanyName","opponentCompanyNumber","opponentSolicitorCompany","solicitorCompanyNumber","solicitorTitle","solicitorFirst","solicitorLast","opponentSolicitorEmail","solicitorPhone","solicitorHouseNumber","solicitorStreet","solicitorCity","solicitorCounty","solicitorPostcode","solicitorCountry","opponentName","setOpponentName","setOpponentEmail","opponentSolicitorName","setOpponentSolicitorName","setOpponentSolicitorCompany","setOpponentSolicitorEmail","noConflict","setNoConflict","setOpponentTitle","setOpponentFirst","setOpponentLast","setOpponentPhone","setOpponentHouseNumber","setOpponentStreet","setOpponentCity","setOpponentCounty","setOpponentPostcode","setOpponentCountry","setOpponentHasCompany","setOpponentCompanyName","setOpponentCompanyNumber","setSolicitorTitle","setSolicitorFirst","setSolicitorLast","setSolicitorPhone","setSolicitorHouseNumber","setSolicitorStreet","setSolicitorCity","setSolicitorCounty","setSolicitorPostcode","setSolicitorCountry","setSolicitorCompanyNumber","opponentChoiceMade","setOpponentChoiceMade","localOpponentTitle","setLocalOpponentTitle","localOpponentFirst","setLocalOpponentFirst","localOpponentLast","setLocalOpponentLast","localOpponentPhone","setLocalOpponentPhone","localOpponentAddress","setLocalOpponentAddress","localOpponentHasCompany","setLocalOpponentHasCompany","localOpponentCompanyName","setLocalOpponentCompanyName","localOpponentCompanyNumber","setLocalOpponentCompanyNumber","localOpponentCompanyHouseNumber","setLocalOpponentCompanyHouseNumber","localOpponentCompanyStreet","setLocalOpponentCompanyStreet","localOpponentCompanyCity","setLocalOpponentCompanyCity","localOpponentCompanyCounty","setLocalOpponentCompanyCounty","localOpponentCompanyPostcode","setLocalOpponentCompanyPostcode","localOpponentCompanyCountry","setLocalOpponentCompanyCountry","localSolicitorTitle","setLocalSolicitorTitle","localSolicitorFirst","setLocalSolicitorFirst","localSolicitorLast","setLocalSolicitorLast","localSolicitorPhone","setLocalSolicitorPhone","localSolicitorCompanyNumber","setLocalSolicitorCompanyNumber","localOpponentEmail","setLocalOpponentEmail","localOpponentSolicitorEmail","setLocalOpponentSolicitorEmail","localOpponentHouseNumber","setLocalOpponentHouseNumber","localOpponentStreet","setLocalOpponentStreet","localOpponentCity","setLocalOpponentCity","localOpponentCounty","setLocalOpponentCounty","localOpponentPostcode","setLocalOpponentPostcode","localOpponentCountry","setLocalOpponentCountry","localSolicitorHouseNumber","setLocalSolicitorHouseNumber","localSolicitorStreet","setLocalSolicitorStreet","localSolicitorCity","setLocalSolicitorCity","localSolicitorCounty","setLocalSolicitorCounty","localSolicitorPostcode","setLocalSolicitorPostcode","localSolicitorCountry","setLocalSolicitorCountry","_opponentTitle","_setOpponentTitle","_opponentFirst","_setOpponentFirst","_opponentLast","_setOpponentLast","_opponentEmail","_setOpponentEmail","_opponentPhone","_setOpponentPhone","_opponentHouseNumber","_setOpponentHouseNumber","_opponentStreet","_setOpponentStreet","_opponentCity","_setOpponentCity","_opponentCounty","_setOpponentCounty","_opponentPostcode","_setOpponentPostcode","_opponentCountry","_setOpponentCountry","_setOpponentHasCompany","_opponentCompanyName","_setOpponentCompanyName","_opponentCompanyNumber","_setOpponentCompanyNumber","_opponentCompanyHouseNumber","_setOpponentCompanyHouseNumber","_opponentCompanyStreet","_setOpponentCompanyStreet","_opponentCompanyCity","_setOpponentCompanyCity","_opponentCompanyCounty","_setOpponentCompanyCounty","_opponentCompanyPostcode","_setOpponentCompanyPostcode","_opponentCompanyCountry","_setOpponentCompanyCountry","_solicitorTitle","_setSolicitorTitle","_solicitorFirst","_setSolicitorFirst","_solicitorLast","_setSolicitorLast","_solicitorPhone","_setSolicitorPhone","_solicitorHouseNumber","_setSolicitorHouseNumber","_solicitorStreet","_setSolicitorStreet","_solicitorCity","_setSolicitorCity","_solicitorCounty","_setSolicitorCounty","_solicitorPostcode","_setSolicitorPostcode","_solicitorCountry","_setSolicitorCountry","_solicitorCompanyNumber","_setSolicitorCompanyNumber","_opponentSolicitorEmail","_setOpponentSolicitorEmail","checkboxChipStyles","accent","textColor","checkmark","chipContainer","visibleSections","setVisibleSections","opponent","solicitor","toggleSection","party","section","newFlags","changed","_sheet$fields","val","dummyMatch","isPh","nextSheet","markFieldAsPlaceholder","setPlaceholderFilledFields","showSummary","setShowSummary","enterOpponentNow","setEnterOpponentNow","opponentType","setOpponentType","activeField","setActiveField","touchedFields","setTouchedFields","placeholderFilledFields","getFieldStyle","fieldKey","isTouched","isPlaceholderFilled","handleFieldFocus","handleFieldBlur","noFocusOutline","UK","opponentCompanyCountry","fromEntries","k","entries","willEnter","opponentCompanyHouseNumber","opponentCompanyStreet","opponentCompanyCity","opponentCompanyCounty","opponentCompanyPostcode","boxSide","onGetErrorMessage","getCompanyNumberErrorMessage","Dropdown","selectedKey","alignSelf","dropdown","calloutProps","calloutMain","getEmailErrorMessage","touched","digits","match","replace","getPhoneErrorMessage","copyCompanyAddressToPersonal","budgetRequired","setBudgetRequired","budgetAmount","setBudgetAmount","threshold","setThreshold","notifyUsers","setNotifyUsers","isDark","darkMode","documentElement","classList","contains","useColourMode","location","hostname","fieldStyle","labelStyle","suffix","CompletionContext","createContext","CompletionProvider","summaryComplete","setSummaryCompleteState","Provider","setSummaryComplete","done","acToken","clioClientId","clioClientSecret","clioRefreshToken","asanaClientId","asanaSecret","asanaRefreshToken","opponentId","solicitorId","clioContactIds","clioCompanyId","clientIdCallback","matterIdCallback","registerClientIdCallback","cb","registerMatterIdCallback","operationObserver","registerOperationObserver","currentActionIndex","setCurrentActionIndex","instrumentedFetch","payloadForSummary","payloadSummary","summarize","phase","respText","clone","responseSummary","truncate","obj","_k","processingActions","activeIcon","run","res","_form","asanaIcon","_i","userData","_userData$","_userData$2","ASANAClientID","ASANAClient_ID","_userData$3","_userData$4","secret","ASANASecret","ASANA_Secret","_userData$5","_userData$6","token","ASANARefreshToken","ASANARefresh_Token","clientSecret","refreshToken","formData","_formData$opponent_de","_formData$opponent_de2","opponent_details","createdBy","_formData$matter_deta","_formData$matter_deta2","_formData$matter_deta3","_formData$matter_deta4","_formData$matter_deta5","_formData$matter_deta6","_formData$matter_deta7","_formData$matter_deta8","_formData$matter_deta9","_formData$team_assign","_formData$team_assign2","_formData$team_assign3","_formData$source_deta","_formData$source_deta2","matter_details","clientType","client_type","practice_area","dispute_value","budget_required","budget_amount","budgetNotifyThreshold","budget_notify_threshold","budgetNotifyUsers","budget_notify_users","team_assignments","fee_earner","originating_solicitor","supervising_partner","source_details","referrer","referrer_name","helixBlueMark","_person$data","emptyTotal","results","r","_r$data","_r$data2","_r$data3","attrs","attributes","emptyFieldCount","first_name","last_name","person","_r$data4","newId","netdocsIcon","_data$matter","contactIds","companyId","_formData$matter_deta0","errorText","initialSteps","action","parsed","toISOString","setPoidData","initialClientId","feeEarner","initialClientType","instructionPhone","instructionRecords","onDraftCclNow","setClientId","matterIdState","setMatterIdState","openMeta","setOpenMeta","setOpenedMatterId","showPoidSelection","defaultPoidData","basePoids","idVerifications","InternalId","CountryCode","CompanyHouseNumber","CompanyStreet","CompanyCity","CompanyCounty","CompanyPostcode","CompanyCountry","company_country_code","CompanyCountryCode","client_id","byEmail","byInstRef","emailKey","inst","arr","merged","instRef","byKey","concat","richness","x","uniqueMap","_p$first","_p$last","existingInst","effectivePoidData","preselected","hasPerson","hasCompany","localTeamData","localTeamDataJson","debugInspectorOpen","setDebugInspectorOpen","debugActiveTab","setDebugActiveTab","debugAdvancedOpen","setDebugAdvancedOpen","debugManualJson","setDebugManualJson","setClientType","setSelectedPoidIds","budgetThreshold","setBudgetThreshold","setBudgetNotifyUsers","defaultPartnerOptions","defaultPartners","getFullName","rec","full","First","Last","getFirstName","activeTeam","dataset","_t$status","partnerOptionsList","partnersFirst","Role","n","defaultTeamMember","debugManualPasteOpen","setDebugManualPasteOpen","workbenchMode","setWorkbenchMode","supportPanelOpen","setSupportPanelOpen","supportMessage","setSupportMessage","supportCategory","setSupportCategory","supportSending","setSupportSending","debugJsonInput","setDebugJsonInput","debugValidation","setDebugValidation","setActivePoid","summaryConfirmed","setSummaryConfirmed","confirmAcknowledge","setConfirmAcknowledge","editsAfterConfirmation","setEditsAfterConfirmation","originalValues","hasUserModified","currentValue","originalValue","isPlaceholderData","trimmed","lower","original","isModified","opponentPlaceholderTemplate","lockCardStyle","base","backgroundImage","resetConfirmationOnEdit","setAreaOfWorkWithReset","isProcessing","setIsProcessing","processingStarted","setProcessingStarted","processingOpen","setProcessingOpen","processingSteps","setProcessingSteps","processingLogs","setProcessingLogs","generatedCclUrl","setGeneratedCclUrl","operationEvents","setOperationEvents","openedMatterId","setVisiblePoidCount","searchBoxFocused","setSearchBoxFocused","activePoid","term","observer","IntersectionObserver","isIntersecting","min","rootMargin","observe","disconnect","getInitialsFromName","part","requestingUserNickname","u","Nickname","getTeamNickname","getClioId","currentStep","setCurrentStep","me","roleText","calculateMatterStepCompletion","filledFields","completion","originatingSolicitorValue","sourceValue","calculateReviewStepCompletion","getDotColor","getProgressiveDotStates","hasClientType","hasPoidSelection","clientDots","matterDots","reviewDots","getBuildMatterDotStates","dot1","dot2","dot3","hasTeamMember","hasOriginatingSolicitor","hasSupervisingPartner","hasDescription","hasFolderStructure","hasAreaOfWork","hasPracticeArea","hasDisputeValue","hasActiveSource","clientsStepComplete","hasDirectEntry","handleBackToClients","scrollTo","behavior","generateSampleJson","selectedClients","phone_number","phoneNumber","company_details","number","verification","matter_ref","date_created","client_as_on_file","folder_structure","requesting_user","fee_earner_initials","originating_solicitor_initials","client_information","is_company","conflict_check_completed","id_verification_required","pep_sanctions_check_required","created_by","form_version","processing_status","hasDataToClear","getFieldCount","count","failureSummary","setFailureSummary","sendSupportRequest","userEmailCandidate","userEmailAddress","WorkEmail","Mail","debugInfo","systemData","emailBody","email_contents","user_email","subject","from_email","bcc_emails","alert","isClearDialogOpen","setIsClearDialogOpen","entryMode","setEntryMode","doClearAll","clearMatterOpeningDraft","draftChoice","setDraftChoice","cclGenerating","setCclGenerating","alignContent","points","handleBackToForm","MinimalSearchBox","handleClearAll","Dialog","hidden","dialogContentProps","DialogType","normal","modalProps","DialogFooter","clear","paddingRight","hoverActive","active","dateLabel","PoidSelectionStep","hasCompanySelected","newSelections","next","handleClientTypeChange","newType","shouldLimitToSingle","OpponentDetailsStep","handleContinueToForm","ClientInfoStep","DescriptionStep","instFromRecords","typeGuess","random","padEnd","buildFromBase","raw","_poid","_poid2","FolderStructureStep","setFolderStructureWithReset","AreaOfWorkStep","PracticeAreaStep","ValueAndSourceStep","BudgetStep","handleGoToReview","cx","cy","x1","y1","x2","y2","reportDetails","issue","userAgent","to","html","errorMessage","_lastOp$phase","lastOp","isError","resize","validateManualJson","isValid","suggestions","warnings","predictions","isCompanyType","isMultiple","directors","formatPersonName","formatPersonAddress","getPersonAddressLines","formatDob","getBestPhone","individualItems","otherIndividuals","directEntryName","seen","allNationalities","uniqueNationalities","nationalitySummary","lines","backing","check","realOpponentKeys","getRealOpponentFieldKeys","currentValues","currentVal","addressLine1","addressLine2","addressLine3","originalAddressLine1","originalAddressLine2","originalAddressLine3","addressStyle","currentLine","originalLine","solicitorFields","realKeys","low","realAddressLines","l","accentColor","completeMatterOpening","_processingActions$fa","msg","failingIndex","findIndex","ps","failingLabel","simulateProcessing","processingSection","scrollIntoView","block","total","groupedSteps","lastGroup","steps","hasError","hasPending","pct","QuestionGroup","showPrompt","isYesNoQuestion","opt","gridColumns","shouldShowPrompt","wordWrap","hyphens","getDocumentUrl","labelLower","clientTypeOptions","destinationOfFundsOptions","fundsTypeOptions","introducedOptions","limitationOptions","sourceOfFundsOptions","valueOfInstructionOptions","datePickerStyles","textField","riskCore","setRiskCore","consideredClientRisk","setConsideredClientRisk","consideredTransactionRisk","setConsideredTransactionRisk","transactionRiskLevel","setTransactionRiskLevel","consideredFirmWideSanctions","setConsideredFirmWideSanctions","consideredFirmWideAML","setConsideredFirmWideAML","limitationDate","setLimitationDate","limitationDateTbc","setLimitationDateTbc","isComplete","onHeaderButtonsChange","initialRiskCore","initialClientRisk","initialTransactionRisk","initialTransactionLevel","initialFirmWideSanctions","initialFirmWideAML","jsonPreviewOpen","setJsonPreviewOpen","clientTypeValue","destinationOfFunds","destinationOfFundsValue","fundsType","fundsTypeValue","clientIntroduced","clientIntroducedValue","limitation","limitationValue","sourceOfFunds","sourceOfFundsValue","valueOfInstruction","valueOfInstructionValue","riskScore","clearAllButton","jsonButton","DatePicker","onSelectDate","formatDate","_existingRisk$ClientT","_existingRisk$ClientT2","_existingRisk$Destina","_existingRisk$Destina2","_existingRisk$FundsTy","_existingRisk$FundsTy2","_existingRisk$HowWasC","_existingRisk$HowWasC2","_existingRisk$Limitat","_existingRisk$Limitat2","_existingRisk$SourceO","_existingRisk$SourceO2","_existingRisk$ValueOf","_existingRisk$ValueOf2","_existingRisk$Transac","onBack","riskAssessor","existingRisk","onSave","complianceDate","setComplianceDate","headerButtons","setHeaderButtons","setMonth","visibility","complianceExpiry","limitationText","datePart","LimitationDate","LimitationDateTbc","RiskScoreIncrementBy","responseData","buttons","sharedDefaultButtonStyles","fieldTagStyle","fieldLabelStyle","fieldValueStyle","linkStyle","dateKeys","linkKeys","linkLabels","submission_url","id_docs_folder","additional_id_submission_url","rawValue","formatDateTime","_instruction$Email","_prospect$first","_prospect$last","mode","setMode","identifier","setIdentifier","setEmail","prospect","setProspect","confirmed","setConfirmed","selectedId","setSelectedId","canFetch","canStart","sharedDecisionButtonStyles","_p$email","PoidPreview","INITIAL_FIELDS","insert_clients_name","insert_heading_eg_matter_description","name_of_person_handling_matter","insert_current_position_and_scope_of_retainer","next_steps","realistic_timescale","identify_the_other_party_eg_your_opponents","props","isInstructionBasedMode","instructionSearchTerm","setInstructionSearchTerm","filteredInstructions","userHasInteracted","setSelectedInstruction","setHasSelectedInstruction","setUserHasInteracted","selectedTemplate","handleTemplateSelect","templateCardStyle","navigationStyle","canProceedToStep2","goToNextStep","_inst$deals","_inst$deals$","instId","renderFieldsOnlyView","renderEditableTemplateContent","documentContent","isFieldsOnlyView","setIsFieldsOnlyView","goToPreviousStep","canProceedToStep3","editorRef","applyFormat","command","_editorRef$current","assign","renderTemplateContentForPreview","windowWidth","setMessage","generateContent","templateFields","info","word","presets","onClose","innerWidth","y","innerHeight","preset","hoveredField","displayNames","tooltipStyle","placeholderStyles","DEFAULT_CCL_TEMPLATE","FIELD_DISPLAY_NAMES","name_of_handler","handler","next_stage","figure","figure_or_range","we_cannot_give_an_estimate_of_our_overall_charges_in_this_matter_because_reason_why_estimate_is_not_possible","estimate","in_total_including_vat_or_for_the_next_steps_in_your_matter","give_examples_of_what_your_estimate_includes_eg_accountants_report_and_court_fees","may_will","and_or_intervals_eg_every_three_months","contact_details_for_marketing_opt_out","link_to_preference_centre","explain_the_nature_of_your_arrangement_with_any_introducer_for_link_to_sample_wording_see_drafting_note_referral_and_fee_sharing_arrangement","instructions_link","names_and_contact_details_of_other_members_of_staff_who_can_help_with_queries","name_of_firm","simple_disbursements_estimate","detailed_disbursements_examples","detailed_disbursements_total","disbursement_1_description","disbursement_1_amount","disbursement_1_vat","disbursement_1_notes","disbursement_2_description","disbursement_2_amount","disbursement_2_vat","disbursement_2_notes","disbursement_3_description","disbursement_3_amount","disbursement_3_vat","disbursement_3_notes","insert_next_step_you_would_like_client_to_take","state_why_this_step_is_important","state_amount","describe_first_document_or_information_you_need_from_your_client","describe_second_document_or_information_you_need_from_your_client","describe_third_document_or_information_you_need_from_your_client","matter_number","FIELD_PRESETS","renderSections","sections","sec","heading","line","bullet","listStyleType","DocumentRenderer","template","parseTemplate","generateTemplateContent","costsChoice","chargesChoice","disbursementsChoice","showEstimateExamples","costsText","chargesText","disbursementsText","rawExamples","formattedExamples","RegExp","generated","styleElement","injectPlaceholderStyles","INDENT_STYLE","textIndent","HEADING_STYLE","MESSAGE_TEMPLATES","ccl","custom","selectedInstructionProp","initialTemplate","skipSelection","hasSelectedInstruction","setSelectedTemplate","setDocumentContent","setTemplateFields","updatedFields","currentUser","useTemplateFields","setCostsChoice","setDisbursementsChoice","setShowEstimateExamples","disbursementRowCount","setDisbursementRowCount","setChargesChoice","showChargesChoice","setShowChargesChoice","showCostsChoice","setShowCostsChoice","showDisbursementsChoice","setShowDisbursementsChoice","setWindowWidth","tokensOpen","setTokensOpen","showPresets","setShowPresets","presetField","setPresetField","presetPosition","setPresetPosition","setHoveredField","tooltipPosition","setTooltipPosition","handleClickOutside","event","closest","addEventListener","removeEventListener","handleResize","fieldElement","searchLower","handleFieldClick","rect","getBoundingClientRect","handleFieldHover","handleFieldHoverLeave","renderTemplateContentWithHighlights","actionMatch","startIndex","beforeActionPoints","rest","closingIndex","indexOf","actionPointsSection","afterActionPoints","processedActionPoints","renderActionPointsTable","beforeProcessed","renderRegularContent","afterProcessed","actionPointsContent","tableRows","sectionHeaderIndex","tableHeaderIndex","headerElements","actionPart","infoPart","documentLines","nextIndex","renderTemplateVariables","docLine","borderCollapse","regex","lastIndex","exec","processedText","rawName","labelPart","keyPart","variableKey","fieldValue","placeholderText","condition","_FIELD_PRESETS$variab","contentEditable","suppressContentEditableWarning","textContent","_FIELD_PRESETS$variab2","borderStyle","templateVariableRegex","globalTableState","globalTableRows","consumedPlaceholders","segmentStart","segmentEnd","textSegment","formatTextSegment","segmentIndex","isTableContext","tableElements","isInTable","tableStarted","lineKey","additionalContent","nextLine","placeholderMatch","shouldEndTable","numberedHeadingMatch","standaloneHeadingMatch","bulletPointMatch","headingText","bulletContent","sectionRefMatch","nodes","isTable","inSection","segmentTableRows","newText","originalLines","spacingFixed","newLine","originalText","start","rawBlockName","blockLabelPart","blockKeyPart","variableName","rowNumber","numericValue","formatted","minimumFractionDigits","readOnly","updated","beforeMatch","isInBullet","_FIELD_PRESETS$variab3","boxDecorationBreak","WebkitBoxDecorationBreak","_FIELD_PRESETS$variab4","placeholderNode","_FIELD_PRESETS$variab5","_FIELD_PRESETS$variab6","TemplateSelectionStep","TemplateEditorStep","fieldContexts","before","after","context","formatFieldLabel","PreviewActionsStep","CCLPreview","PresetPanel","closePresets","HoverTooltip","primaryValue","secondaryValue","onPrimaryChange","onSecondaryChange","ariaLabel","hideSecondaryInProduction","isProduction","shouldHideSecondary","primaryContainerRef","secondaryContainerRef","secondaryWrapperRef","primaryBtnRefs","secondaryBtnRefs","isSecondaryExpanded","setIsSecondaryExpanded","primaryThumbRect","setPrimaryThumbRect","secondaryThumbRect","setSecondaryThumbRect","primaryActiveIndex","currentOption","secondaryActiveIndex","subOptions","recalcPrimary","container","activeBtn","recalcSecondary","useLayoutEffect","wrapper","inline","segmentStyle","onPrimaryKeyDown","useCallback","onSecondaryKeyDown","activeElement","subOpt","badge","activeSubOpt","_details$overallResul3","_details$overallResul6","_details$pepResult3","_details$addressResul3","isVisible","details","onApprove","onRequestDocuments","onOverride","emailSending","setEmailSending","showDevControls","setShowDevControls","_event$target","switchTestState","newState","workflowState","getWorkflowState","_details$overallResul","_details$overallResul2","overallResult","documentsReceived","documentsRequested","isDocumentsAlreadyRequested","handleAction","recipient","sendDocumentRequestEmail","responseText","parseError","draftDocumentRequestEmail","getResultIcon","iconStyle","MdCheckBox","MdInfo","MdError","getResultColor","parseRawResponse","rawResponse","MdClose","checkedDate","MdPending","MdEmail","MdDrafts","MdCheckCircle","MdAccessTime","pepResult","addressResult","MdMoreHoriz","listStyle","textDecorationStyle","_responseData$checkSt","_responseData$correla","checkStatuses","correlationId","_document$getElementB","_document$getElementB2","_document$getElementB3","_responseData$overall","_responseData$overall2","_responseData$overall3","overallStatus","externalReferenceId","_check$result","_check$sourceResults","_check$result2","_check$result3","_check$status","_check$sourceResults2","_check$sourceResults3","sourceResults","checkTypeId","resultCount","totalSourcesChecked","totalSourcesPassed","totalSourcesForReview","resultIndex","_result$detail","detail","reasons","reason","reasonIndex","fetchVerificationDetails","failures","_response$address_ver","_response$identity_ve","_response$peps_and_sa","_response$address_ver2","_response$identity_ve2","_response$peps_and_sa2","_response$peps_and_sa3","checkStatus","_checkStatus$result","checkName","rule","f","address_verification","checks","failure_reason","warning_reason","result_code","identity_verification","peps_and_sanctions","parseVerificationFailures","clientEmail","failureReasons","_selectedOverviewItem8","_selectedOverviewItem9","_selectedOverviewItem0","_selectedOverviewItem1","_selectedOverviewItem10","_selectedOverviewItem12","_selectedOverviewItem13","_selectedOverviewItem14","_selectedOverviewItem15","_selectedOverviewItem16","_selectedOverviewItem17","_selectedOverviewItem18","_selectedOverviewItem19","_selectedOverviewItem20","_selectedOverviewItem21","_reviewModalDetails$o","_selectedOverviewItem22","_selectedOverviewItem23","_selectedOverviewItem24","_selectedOverviewItem25","_selectedOverviewItem26","_selectedOverviewItem27","_selectedOverviewItem28","_selectedOverviewItem29","_selectedOverviewItem30","_selectedOverviewItem31","_selectedOverviewItem32","_selectedOverviewItem33","_selectedOverviewItem34","_selectedOverviewItem35","_selectedOverviewItem36","_selectedOverviewItem37","_selectedOverviewItem38","_selectedOverviewItem39","_selectedOverviewItem40","_selectedOverviewItem41","_selectedOverviewItem42","_selectedOverviewItem43","_selectedOverviewItem44","_selectedOverviewItem45","_selectedOverviewItem46","_selectedOverviewItem47","_selectedOverviewItem48","_selectedOverviewItem49","_selectedOverviewItem50","_selectedOverviewItem51","_selectedOverviewItem52","_selectedOverviewItem53","_selectedOverviewItem54","_selectedOverviewItem55","_selectedOverviewItem56","_selectedOverviewItem57","_selectedOverviewItem58","_selectedOverviewItem59","_selectedOverviewItem60","_selectedOverviewItem61","_selectedOverviewItem62","_selectedOverviewItem63","_selectedOverviewItem64","_teamData$","_teamData$2","allInstructionData","hasActiveMatter","setIsInMatterOpeningWorkflow","enquiries","setContent","useNavigatorActions","showNewMatterPage","setShowNewMatterPage","showRiskPage","setShowRiskPage","showEIDPage","setShowEIDPage","selectedRisk","setSelectedRisk","pendingInstructionRef","setPendingInstructionRef","isResumeDialogOpen","setIsResumeDialogOpen","setIdVerificationLoading","showReviewModal","setShowReviewModal","reviewModalDetails","setReviewModalDetails","overviewGridRef","pendingInstruction","setPendingInstruction","forceNewMatter","setForceNewMatter","showCclDraftPage","setShowCclDraftPage","previewModalOpen","setPreviewModalOpen","previewDocument","setPreviewDocument","isWorkbenchVisible","setIsWorkbenchVisible","workbenchHeight","setWorkbenchHeight","setIsResizing","showToast","activeTab","setActiveTab","activeWorkbenchTab","setActiveWorkbenchTab","expandedSections","setExpandedSections","sectionKey","showMatterDetails","setShowMatterDetails","handleMouseDown","handleMouseMove","newHeight","clientY","constrainedHeight","handleMouseUp","remove","decimals","dm","pow","unifiedEnquiries","setUnifiedEnquiries","hoveredButton","setHoveredButton","showInstructionSelector","setShowInstructionSelector","selectorAction","setSelectorAction","selectorProcessing","setSelectorProcessing","selectorResult","setSelectorResult","clientNameCache","saved","saveClientNameCache","cache","fetchUnifiedEnquiries","_mainEnquiries$enquir","_instructionsData$ins","_mainEnquiries$enquir2","_instructionsData$ins2","cached","sessionStorage","cacheTime","oneHour","parseInt","cachedData","_data$enquiries","_data$enquiries2","ID","acid","card_id","cacheError","removeItem","reducedEnquiries","First_Name","Last_Name","retryError","mainEnquiries","instructionsData","combinedEnquiries","_inst$deal","_inst$deal2","_inst$deal3","_inst$deal4","db_source","_i$deal","enquiryLookupMap","enq","enqId","ACID","Acid","_cached$firstName","_cached$lastName","_result$firstName","_result$lastName","_result$firstName2","_result$lastName2","prospectIdStr","matchingInstruction","_inst$deal5","instrProspectId","_inst$Name","_inst$Name2","enquiryResult","_i$deal2","_i$deal3","cap","charAt","handleRiskAssessmentDelete","instKey","handleDealEdit","selectedDeal","_InstructionRef","dealsFromInst","_InstructionRef2","scan","_x$InstructionRef","clientsActionFilter","setClientsActionFilter","pitchesStatusFilter","setPitchesStatusFilter","riskStatusFilter","setRiskStatusFilter","secondaryFilter","setSecondaryFilter","riskFilterRef","setRiskFilterRef","showAllInstructions","setShowAllInstructions","twoColumn","setTwoColumn","isAdmin","isAdminUser","isLocalhost","showOnlyMyDeals","setShowOnlyMyDeals","filterInstructionsForUser","sourceData","_currentUser$Email$to","_currentUser$Email","_currentUser$Initials","_currentUser$Initials2","userEmail","filtered","_instruction$deals2","_instruction$instruct2","_instruction$Lead","_instruction$assigned","_instruction$poc","_instruction$POC","_instruction$deal","_instruction$deal$Ema","_instruction$deal2","_instruction$deal2$Le","_instruction$deal3","_instruction$deal3$as","_instruction$deal4","_instruction$deal4$po","_instruction$deal5","_instruction$deal5$Pi","_instruction$deals3","_instruction$instruct3","_instruction$deals4","_instruction$deals","_instruction$instruct","assignedTo","POC","belongsToUser","_deal$PitchedBy","_inst$HelixContact","_deal$Email","_deal$Lead","_deal$assignedTo","_deal$poc","isOtherUnsure","shouldInclude","_instruction$instruct4","_instruction$instruct5","_instruction$deals5","_instruction$deals5$","_instruction$Email2","_instruction$poc2","_instruction$deal6","_instruction$deal6$Em","_instruction$deal7","_instruction$deal7$po","_instruction$deals6","matchedFields","instruction_Email","instruction_poc","deal_Email","deal_poc","deals_any","_d$poc","sourceLength","filteredLength","effectiveInstructionData","userInstructionData","instructionDataLength","allInstructionDataLength","currentUserEmail","currentUserInitials","filteredForUser","resultLength","userResultLength","usingAllData","filteringByUser","sampleFilteredItems","_r$instructions","_r$deals","_r$deals2","_r$instructions2","hasInstructions","hasDeals","toggleCounts","mine","reduce","_prospect$deals","_prospect$instruction","_prospect$deals2","_prospect$instruction2","_prospect$instruction3","_prospect$instruction4","allFilterOptions","filterOptions","handlePrimaryFilterChange","handleSecondaryFilterChange","detailNavStyle","CUSTOM_TABS_HEIGHT","useLocalData","workbenchHeaderBackground","missedBlue","workbenchCardBackground","workbenchBorderColour","workbenchMutedText","workbenchButtonHover","handleBack","FilterBanner","seamless","dense","primaryFilter","TwoLayerFilter","SegmentedControl","helixWatermarkSvg","backgroundRepeat","backgroundPosition","backgroundSize","newMatterContainerStyle","overviewItems","items","_prospect$instruction5","_prospect$deals4","_prospect$deals3","_prospect$jointClient","_prospect$riskAssessm","_riskAssessments","_prospect$electronicI","_prospect$idVerificat","_electronicIDChecks","_idVerifications","_prospect$documents","_documents","dealsForInst","clientsForInst","joinedClients","_d$jointClients","jc","_dealsForInst$find","_dealsForInst$find2","riskSource","_d$instruction$riskAs","_d$instruction$compli","eidSource","electronicIDChecks","_d$instruction$electr","_d$instruction","_d$instruction$idVeri","_d$instruction2","_e$MatterId","rawDocs","_d$documents","_d$instruction$docume","_d$instruction3","docsMap","_doc$FileName","_doc$UploadedAt","docs","_prospect$instruction6","_prospect$jointClient2","_deal$jointClients","_deal$documents","_deal$documents$lengt","_deal$documents2","clientsForDeal","unique","_item$instruction","_item$deal","allDeals","_p$deals","pitchedItems","_item$deal2","_item$deal3","_item$deal4","_item$deal5","_item$deal6","_item$deal7","_item$deal8","_item$instruction2","areaOfWorkInfo","normalize","Department","WorkType","dealFields","verifyButtonReview","verifyButtonDisabled","verifyButtonLabel","verifyButtonBorder","verifyButtonBackground","verifyButtonColor","riskButtonDisabled","riskButtonBorder","riskButtonBackground","riskButtonColor","paymentCompleted","matterLinked","_prospect$matters","_p$instructions","cclCompleted","canOpenMatter","hasActiveMatterOpening","matterButtonBorder","matterButtonBackground","matterButtonColor","syncButtonActive","MatterRef","syncButtonBorder","syncButtonBackground","syncButtonColor","cclButtonBorder","cclButtonBackground","cclButtonColor","_prospect$matters2","mid","iref","getDisplay","mm","dn","dnFromMatters","_p$instructions2","dnFromProspect","nextReadyAction","getNextReadyAction","riskComplianceData","_p$deals2","_p$deals3","_p$jointClients2","_d$jointClients3","_p$documents","_d$documents2","_d$instruction$docume2","_d$instruction4","prospectIdLookup","_p$instructions3","emailLc","_inst$Email","_p$jointClients","_d$jointClients2","jointClient","_jc$ClientEmail","_jointClient$Name","_jointClient$Name2","_p$deals4","_p$jointClients3","entry","_d$jointClients4","DealJointClientId","SubmissionDateTime","dd","_p$instructions4","_p$deals5","_p$riskAssessments","_p$compliance","_p$electronicIDChecks","_p$idVerifications","prospectEids","_eid$InstructionRef","CheckId","CheckResult","PEPandSanctionsCheckResult","AddressVerificationCheckResult","_inst$riskAssessments","_inst$compliance","_inst$electronicIDChe","_inst$idVerifications","instEids","_eid$InstructionRef2","_d$instruction$riskAs2","_d$instruction$compli2","_d$instruction$electr2","_d$instruction$idVeri2","_eid$InstructionRef3","_p$jointClients4","prospectClients","_d$jointClients5","findClientDetails","_inst$Email2","_jc$ClientEmail2","_jointClient$Name3","_jointClient$Name4","_dealsForInst$find3","_dealsForInst$find4","clientDetails","filteredRiskComplianceData","isCompleted","eidOk","riskOk","overviewItemsWithNextAction","_item$risk","_item$risk$RiskAssess","_eid$EIDOverallResult","_eid$EIDStatus$toLowe","_eid$EIDStatus","hasMatter","cclSubmitted","nextAction","filteredOverviewItems","isLocalhostEnv","openMatterCandidates","idVerificationOptions","_p$instructions5","_p$electronicIDChecks2","_p$idVerifications2","_inst$electronicIDChe2","_inst$idVerifications2","fromInstruction","_ref0","_ref1","_v$InternalId","_v$InstructionRef","_instructions$find","_merged$InternalId","EIDRawResponse","eidOverallResult","DocumentType","DocumentNumber","IssuedDate","ExpiryDate","IssuingCountry","CheckDate","FraudScore","AuthenticityScore","QualityScore","BiometricScore","Notes","groupedRiskComplianceData","grouped","instructionItem","_p$instructions6","_instructionItem$inst","_instructionItem$deal","_instructionItem$deal2","allIdVerifications","idv","enhancedClients","_instruction$Name","_instruction$Name2","leadIdVerification","_idv$ClientEmail","_instruction$Email3","leadPoidData","_poid$email","_instruction$Email4","_jc$Name","_jc$Name2","jointIdVerification","_idv$ClientEmail2","_jc$ClientEmail3","jointInstruction","_inst$Email3","_jc$ClientEmail4","jointPoidData","_poid$email2","_jc$ClientEmail5","handleOpenMatter","handleRiskAssessment","_item$instruction3","_ref10","_item$risk2","_item$riskAssessments","handleEIDCheck","_inst$EIDOverallResul","_ref11","_ref12","_ref13","_inst$EIDOverallResul2","_inst$EIDOverallResul3","_inst$EIDOverallResul4","eidData","EIDData","eidS","altEidResult","eid_overall_result","pepAndSanctionsCheckResult","pep_and_sanctions_check_result","ProofOfIdComplete","proof_of_id_complete","tillerOverallResult","_eid$overallResult$re","hasIdVerifications","idVerificationCount","latestIdVerification","legacyFields","hasEidData","dbResult","parseResults","overall","newSet","handleVerificationApproval","approveVerification","prevData","prevPoidData","handleDraftCclNow","load","gridContainerStyle","overviewGridStyle","overviewItemStyle","repositionMasonry","grid","rowGap","getComputedStyle","getPropertyValue","rowHeight","child","span","ceil","gridRowEnd","handleCardToggle","performance","animate","requestAnimationFrame","handleGlobalOpenMatter","_overviewItems$find","targetInstruction","FlatMatterOpening","EIDCheckPage","_item$deal9","_item$deal0","_item$deal1","_item$documentCount","dealKey","InstructionCard","_item$deal10","_item$deal11","onProofOfIdClick","_item$deal12","_item$instruction4","_item$instruction5","_item$instruction6","_item$instruction7","_item$documentCount2","_item$instruction8","_item$instruction9","_item$instruction10","itemKey","_o$instruction","tab","flushSync","_item$instruction0","_item$instruction1","_item$instruction11","updatedData","prospectData","_prospectData$instruc","groupedItem","isExpanded","RiskComplianceCard","handleOpenInstruction","DocumentsV3","workbenchPanelBackground","onMouseDown","websiteBlue","MdExpandMore","handleGlobalEIDCheck","handleGlobalRiskAssessment","targetItem","_selectedOverviewItem11","MdSync","borderTopLeftRadius","borderTopRightRadius","FaCogs","ClientName","Gender","EntityType","NationalIdNumber","State","PostalCode","ConsentGiven","summary","requestEidDocumentsInline","_item$instruction12","amount_minor","client_secret","webhook_events","sum","handleDocumentPreview","DocumentName","filesize","MatterOperations","handleStatusUpdate","OverridePills","handleStartNewMatter","IDVerificationReviewModal","handleSelectorEIDCheck","cardHover","RiskAssessmentPage","hasInstruction","hasDealForInstruction","updatedProspect","riskKey","currentProspectRisks","instRiskKey","currentInstRisks","DocumentPreviewModal","handleCloseDocumentPreview"],"sourceRoot":""}