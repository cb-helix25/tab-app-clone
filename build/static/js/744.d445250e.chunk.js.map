{"version":3,"file":"static/js/744.d445250e.chunk.js","mappings":"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","sources":["CustomForms/AnnualLeaveForm.tsx"],"sourcesContent":["// src/CustomForms/AnnualLeaveForm.tsx\r\n// invisible change\r\nimport React, { useState, useEffect, useMemo } from 'react';\r\nimport { Stack, Text, DefaultButton, TextField, Icon, TooltipHost, ChoiceGroup, DetailsList, IColumn, SelectionMode, DetailsListLayoutMode } from '@fluentui/react';\r\nimport { useTheme } from '../app/functionality/ThemeContext';\r\nimport { colours } from '../app/styles/colours';\r\nimport BespokeForm, { FormField } from './BespokeForms';\r\nimport { DateRangePicker, Range, RangeKeyDict } from 'react-date-range';\r\nimport { addDays, eachDayOfInterval, format } from 'date-fns';\r\nimport 'react-date-range/dist/styles.css';\r\nimport 'react-date-range/dist/theme/default.css';\r\nimport { sharedPrimaryButtonStyles, sharedDefaultButtonStyles, sharedDecisionButtonStyles } from '../app/styles/ButtonStyles';\r\nimport HelixAvatar from '../assets/helix avatar.png';\r\nimport GreyHelixMark from '../assets/grey helix mark.png'; // Not currently used\r\nimport '../app/styles/personas.css';\r\nimport { TeamData, AnnualLeaveRecord } from '../app/functionality/types';\r\n// Note: Use relative Express API path for attendance endpoints to avoid double `/api` in production\r\n\r\ninterface AnnualLeaveFormProps {\r\n  futureLeave: AnnualLeaveRecord[];\r\n  team: TeamData[];\r\n  userData: any;\r\n  totals: { standard: number; unpaid: number; sale: number }; // Updated to match Azure Function\r\n  bankHolidays?: Set<string>;\r\n  allLeaveRecords: AnnualLeaveRecord[];\r\n}\r\n\r\ninterface DateRangeSelection {\r\n  startDate: Date;\r\n  endDate: Date;\r\n  halfDayStart?: boolean;\r\n  halfDayEnd?: boolean;\r\n}\r\n\r\nconst initialFormFields: FormField[] = [];\r\n\r\nconst buttonStylesFixedWidth = {\r\n  root: { ...(sharedPrimaryButtonStyles.root as object), width: '150px' },\r\n  rootHovered: { ...(sharedPrimaryButtonStyles.rootHovered as object) },\r\n  rootPressed: { ...(sharedPrimaryButtonStyles.rootPressed as object) },\r\n};\r\n\r\nconst buttonStylesFixedWidthSecondary = {\r\n  root: { ...(sharedDefaultButtonStyles.root as object), width: '150px' },\r\n  rootHovered: { ...(sharedDefaultButtonStyles.rootHovered as object) },\r\n  rootPressed: { ...(sharedDefaultButtonStyles.rootPressed as object) },\r\n};\r\n\r\nconst infoBoxStyle = (isDarkMode: boolean): React.CSSProperties => ({\r\n  backgroundColor: isDarkMode ? colours.dark.cardBackground : colours.light.grey,\r\n  boxShadow: isDarkMode ? '0 2px 6px rgba(0, 0, 0, 0.3)' : '0 2px 6px rgba(0, 0, 0, 0.1)',\r\n  padding: '20px',\r\n  borderRadius: '4px',\r\n  animation: 'dropIn 0.3s ease forwards',\r\n  marginBottom: '20px',\r\n  border: `1px solid ${isDarkMode ? colours.dark.border : 'transparent'}`,\r\n});\r\n\r\nconst labelStyle: React.CSSProperties = {\r\n  fontSize: '14px',\r\n  fontWeight: 600,\r\n  marginBottom: '5px',\r\n  color: colours.highlight,\r\n};\r\n\r\nconst valueStyle: React.CSSProperties = {\r\n  fontSize: '18px',\r\n  fontWeight: 400,\r\n  // Note: color is applied contextually based on theme\r\n};\r\n\r\n// Columns for the historical leave list\r\nconst historyColumns: IColumn[] = [\r\n  {\r\n    key: 'start_date',\r\n    name: 'Start Date',\r\n    fieldName: 'start_date',\r\n    minWidth: 100,\r\n    maxWidth: 120,\r\n    isResizable: true,\r\n    onRender: (item: AnnualLeaveRecord) => format(new Date(item.start_date), 'd MMM yyyy'),\r\n  },\r\n  {\r\n    key: 'end_date',\r\n    name: 'End Date',\r\n    fieldName: 'end_date',\r\n    minWidth: 100,\r\n    maxWidth: 120,\r\n    isResizable: true,\r\n    onRender: (item: AnnualLeaveRecord) => format(new Date(item.end_date), 'd MMM yyyy'),\r\n  },\r\n  {\r\n    key: 'reason',\r\n    name: 'Reason',\r\n    fieldName: 'reason',\r\n    minWidth: 150,\r\n    isResizable: true,\r\n  },\r\n  {\r\n    key: 'status',\r\n    name: 'Status',\r\n    fieldName: 'status',\r\n    minWidth: 80,\r\n    maxWidth: 100,\r\n    isResizable: true,\r\n  },\r\n  {\r\n    key: 'days_taken',\r\n    name: 'Days Taken',\r\n    fieldName: 'days_taken',\r\n    minWidth: 80,\r\n    maxWidth: 100,\r\n    isResizable: true,\r\n    onRender: (item: AnnualLeaveRecord) => item.days_taken ?? 'N/A',\r\n  },\r\n  {\r\n    key: 'leave_type',\r\n    name: 'Leave Type',\r\n    fieldName: 'leave_type',\r\n    minWidth: 100,\r\n    maxWidth: 120,\r\n    isResizable: true,\r\n    onRender: (item: AnnualLeaveRecord) => item.leave_type || 'N/A',\r\n  },\r\n];\r\n\r\nfunction calculateWorkingDays(range: DateRangeSelection, bankHolidays?: Set<string>): number {\r\n  const allDays = eachDayOfInterval({ start: range.startDate, end: range.endDate });\r\n  let workingDays = 0;\r\n\r\n  allDays.forEach((day) => {\r\n    const dayOfWeek = day.getDay();\r\n    const dayStr = format(day, 'yyyy-MM-dd');\r\n    if (dayOfWeek !== 0 && dayOfWeek !== 6 && !bankHolidays?.has(dayStr)) {\r\n      workingDays += 1;\r\n    }\r\n  });\r\n\r\n  if (range.halfDayStart) {\r\n    const dayOfWeek = range.startDate.getDay();\r\n    const startStr = format(range.startDate, 'yyyy-MM-dd');\r\n    if (dayOfWeek !== 0 && dayOfWeek !== 6 && !bankHolidays?.has(startStr)) {\r\n      workingDays -= 0.5;\r\n    }\r\n  }\r\n\r\n  if (range.halfDayEnd) {\r\n    const dayOfWeek = range.endDate.getDay();\r\n    const endStr = format(range.endDate, 'yyyy-MM-dd');\r\n    if (dayOfWeek !== 0 && dayOfWeek !== 6 && !bankHolidays?.has(endStr)) {\r\n      workingDays -= 0.5;\r\n    }\r\n  }\r\n\r\n  return workingDays;\r\n}\r\n\r\nfunction getOverlapDates(leave: AnnualLeaveRecord, range: DateRangeSelection): string[] {\r\n  const selStart = range.startDate;\r\n  const selEnd = range.endDate;\r\n  const leaveStart = new Date(leave.start_date);\r\n  const leaveEnd = new Date(leave.end_date);\r\n  const overlapStart = leaveStart < selStart ? selStart : leaveStart;\r\n  const overlapEnd = leaveEnd > selEnd ? selEnd : leaveEnd;\r\n  if (overlapStart > overlapEnd) return [];\r\n  return eachDayOfInterval({ start: overlapStart, end: overlapEnd }).map((d) =>\r\n    format(d, 'yyyy-MM-dd')\r\n  );\r\n}\r\n\r\nfunction AnnualLeaveForm({\r\n  futureLeave,\r\n  team,\r\n  userData,\r\n  totals,\r\n  bankHolidays,\r\n  allLeaveRecords,\r\n}: AnnualLeaveFormProps) {\r\n  const safeTotals = totals ?? { standard: 0, unpaid: 0, sale: 0 };\r\n  const { isDarkMode } = useTheme();\r\n  const [dateRanges, setDateRanges] = useState<DateRangeSelection[]>([]);\r\n  const [totalDays, setTotalDays] = useState<number>(0);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [notes, setNotes] = useState<string>('');\r\n  const [confirmationMessage, setConfirmationMessage] = useState<string>('');\r\n  const [errorMessage, setErrorMessage] = useState<string>('');\r\n  const [selectedLeaveType, setSelectedLeaveType] = useState<string>('standard');\r\n  const [hearingConfirmation, setHearingConfirmation] = useState<string | null>(null);\r\n  const [hearingDetails, setHearingDetails] = useState<string>('');\r\n\r\n  const leaveTypeOptions: { key: string; text: string }[] = [\r\n    { key: 'standard', text: 'Standard' },\r\n    { key: 'purchase', text: 'Purchase' }, // Maps to \"unpaid\" in totals\r\n    { key: 'sale', text: 'Sell' },         // Maps to \"sale\" in totals\r\n  ];\r\n\r\n  useEffect(() => {\r\n    let total = 0;\r\n    dateRanges.forEach((range) => {\r\n      total += calculateWorkingDays(range, bankHolidays);\r\n    });\r\n    setTotalDays(total);\r\n  }, [dateRanges, bankHolidays]);\r\n\r\n  const handleAddDateRange = () => {\r\n    setDateRanges((prev) => [\r\n      ...prev,\r\n      { startDate: new Date(), endDate: addDays(new Date(), 1) },\r\n    ]);\r\n  };\r\n\r\n  const handleRemoveDateRange = (index: number) => {\r\n    setDateRanges((prev) => {\r\n      const newRanges = [...prev];\r\n      newRanges.splice(index, 1);\r\n      return newRanges;\r\n    });\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setDateRanges([]);\r\n    setNotes('');\r\n    setHearingConfirmation(null);\r\n    setHearingDetails('');\r\n    setErrorMessage(''); // Clear any error messages\r\n  };\r\n\r\n  const holidayEntitlement = Number(userData?.[0]?.holiday_entitlement ?? 0);\r\n  let effectiveRemaining = 0;\r\n  if (selectedLeaveType === 'standard') {\r\n    effectiveRemaining = holidayEntitlement - safeTotals.standard - totalDays;\r\n  } else if (selectedLeaveType === 'purchase') {\r\n    effectiveRemaining = 5 - safeTotals.unpaid - totalDays; // \"Purchase\" maps to \"unpaid\"\r\n  } else if (selectedLeaveType === 'sale') {\r\n    effectiveRemaining = 5 - safeTotals.sale - totalDays;   // \"Sell\" maps to \"sale\"\r\n  }\r\n\r\n  const groupedLeave = useMemo(() => {\r\n    const groups: Record<\r\n      string,\r\n      { nickname: string; dateRanges: { start_date: string; end_date: string }[]; status: string }\r\n    > = {};\r\n    futureLeave.forEach((leave) => {\r\n      dateRanges.forEach((range) => {\r\n        const overlaps = getOverlapDates(leave, range);\r\n        if (overlaps.length > 0) {\r\n          const teamMember = team.find((m) => m.Initials?.toLowerCase() === leave.person.toLowerCase());\r\n          const nickname = teamMember ? (teamMember.Nickname || teamMember.First || leave.person) : leave.person;\r\n          const leaveStatus = leave.status.toLowerCase();\r\n          const newRange = { start_date: overlaps[0], end_date: overlaps[overlaps.length - 1] };\r\n          if (!groups[leave.person]) {\r\n            groups[leave.person] = { nickname, dateRanges: [newRange], status: leaveStatus };\r\n          } else {\r\n            const alreadyExists = groups[leave.person].dateRanges.some(\r\n              (dr) => dr.start_date === newRange.start_date && dr.end_date === newRange.end_date\r\n            );\r\n            if (!alreadyExists) groups[leave.person].dateRanges.push(newRange);\r\n            if (groups[leave.person].status !== leaveStatus) groups[leave.person].status = 'requested';\r\n          }\r\n        }\r\n      });\r\n    });\r\n    return Object.values(groups);\r\n  }, [futureLeave, dateRanges, team]);\r\n\r\n  const handleSubmit = async () => {\r\n    // Clear previous messages\r\n    setErrorMessage('');\r\n    setConfirmationMessage('');\r\n    \r\n    if (dateRanges.length === 0) {\r\n      setErrorMessage('Please add at least one date range for your leave.');\r\n      return;\r\n    }\r\n    if (!notes.trim()) setNotes('No additional reason provided.');\r\n    setIsSubmitting(true);\r\n    try {\r\n      const feeEarner = userData?.[0]?.Initials || 'XX';\r\n      const formattedDateRanges = dateRanges.map((range) => ({\r\n        start_date: format(range.startDate, 'yyyy-MM-dd'),\r\n        end_date: format(range.endDate, 'yyyy-MM-dd'),\r\n      }));\r\n      const payload = {\r\n        fe: feeEarner,\r\n        dateRanges: formattedDateRanges,\r\n        reason: notes || 'No additional reason provided.',\r\n        days_taken: totalDays,\r\n        leave_type: selectedLeaveType, // Will be \"standard\", \"purchase\", or \"sale\"\r\n        overlapDetails: groupedLeave,\r\n        hearing_confirmation: hearingConfirmation,\r\n        hearing_details: hearingConfirmation === 'no' ? hearingDetails : '',\r\n      };\r\n  console.log('Annual Leave Form Payload:', payload);\r\n  // Use server route (fully migrated from Azure Functions)\r\n  // Always call the Express server directly; CRA proxy handles dev, same-origin handles prod\r\n  const url = `/api/attendance/annual-leave`;\r\n  const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload),\r\n      });\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(`Request failed with status ${response.status}: ${errorText}`);\r\n      }\r\n      const result = await response.json();\r\n      console.log('Insert Annual Leave Successful:', result);\r\n      setConfirmationMessage('✅ Your annual leave request has been submitted successfully and is pending approval.');\r\n      handleClear();\r\n    } catch (error) {\r\n      console.error('Error submitting Annual Leave Form:', error);\r\n      setErrorMessage(`❌ Failed to submit your request: ${error instanceof Error ? error.message : String(error)}`);\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const userLeaveHistory = useMemo(() => {\r\n    const userInitials = userData?.[0]?.Initials?.toLowerCase() || '';\r\n    return allLeaveRecords\r\n      .filter((record) => record.person.toLowerCase() === userInitials)\r\n      .sort((a, b) => new Date(b.start_date).getTime() - new Date(a.start_date).getTime());\r\n  }, [allLeaveRecords, userData]);\r\n\r\n  function renderSidePanel() {\r\n    if (selectedLeaveType === 'standard') {\r\n      return (\r\n        <Stack\r\n          tokens={{ childrenGap: 10 }}\r\n          style={{\r\n            minWidth: '300px',\r\n            border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n            padding: '10px',\r\n            borderRadius: '4px',\r\n            backgroundColor: 'transparent',\r\n          }}\r\n        >\r\n          <Text style={{ fontSize: '14px', fontWeight: 600, color: isDarkMode ? colours.dark.text : colours.light.text }}>\r\n            Total Days Requested\r\n          </Text>\r\n          <Text style={{ fontSize: '18px', fontWeight: 400, color: isDarkMode ? colours.dark.text : colours.light.text }}>\r\n            {totalDays} {totalDays !== 1 ? 'days' : 'day'}\r\n          </Text>\r\n          <div style={{ borderTop: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`, margin: '20px 0' }} />\r\n          <Stack tokens={{ childrenGap: 5 }}>\r\n            <Text style={labelStyle}>Annual Holiday Entitlement</Text>\r\n            {userData?.[0]?.holiday_entitlement != null ? (\r\n              <Text style={{ ...valueStyle, color: isDarkMode ? colours.dark.text : colours.light.text }}>\r\n                {userData[0].holiday_entitlement} {userData[0].holiday_entitlement !== 1 ? 'days' : 'day'}\r\n              </Text>\r\n            ) : (\r\n              <Text style={{ ...valueStyle, color: isDarkMode ? colours.dark.text : colours.light.text }}>\r\n                N/A\r\n              </Text>\r\n            )}\r\n            <Text style={labelStyle}>Days taken so far this year</Text>\r\n            <Text style={{ ...valueStyle, color: isDarkMode ? colours.dark.text : colours.light.text }}>\r\n              {safeTotals.standard} {safeTotals.standard !== 1 ? 'days' : 'day'}\r\n            </Text>\r\n            <Text style={labelStyle}>Days Remaining</Text>\r\n            <Text style={{ ...valueStyle, color: effectiveRemaining < 0 ? colours.cta : isDarkMode ? colours.dark.text : colours.light.text }}>\r\n              {effectiveRemaining} {effectiveRemaining !== 1 ? 'days' : 'day'}\r\n            </Text>\r\n          </Stack>\r\n        </Stack>\r\n      );\r\n    } else if (selectedLeaveType === 'purchase') {\r\n      const purchaseRemaining = 5 - safeTotals.unpaid - totalDays; // \"Purchase\" uses \"unpaid\"\r\n      return (\r\n        <Stack\r\n          tokens={{ childrenGap: 10 }}\r\n          style={{\r\n            minWidth: '300px',\r\n            border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n            padding: '10px',\r\n            borderRadius: '4px',\r\n            backgroundColor: 'transparent',\r\n          }}\r\n        >\r\n          <Text style={{ fontSize: '14px', fontWeight: 600, color: isDarkMode ? colours.dark.text : colours.light.text }}>\r\n            Total Purchase Days Requested\r\n          </Text>\r\n          <Text style={{ fontSize: '18px', fontWeight: 400, color: isDarkMode ? colours.dark.text : colours.light.text }}>\r\n            {totalDays} {totalDays !== 1 ? 'days' : 'day'}\r\n          </Text>\r\n          <div style={{ borderTop: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`, margin: '20px 0' }} />\r\n          <Stack tokens={{ childrenGap: 5 }}>\r\n            <Text style={labelStyle}>Purchase Leave Entitlement</Text>\r\n            <Text style={{ ...valueStyle, color: isDarkMode ? colours.dark.text : colours.light.text }}>\r\n              5 days\r\n            </Text>\r\n            <Text style={labelStyle}>Purchase Days Taken so far</Text>\r\n            <Text style={{ ...valueStyle, color: isDarkMode ? colours.dark.text : colours.light.text }}>\r\n              {safeTotals.unpaid} {safeTotals.unpaid !== 1 ? 'days' : 'day'}\r\n            </Text>\r\n            <Text style={labelStyle}>Purchase Days Remaining</Text>\r\n            <Text style={{ ...valueStyle, color: purchaseRemaining < 0 ? colours.cta : isDarkMode ? colours.dark.text : colours.light.text }}>\r\n              {purchaseRemaining} {purchaseRemaining !== 1 ? 'days' : 'day'}\r\n            </Text>\r\n          </Stack>\r\n        </Stack>\r\n      );\r\n    } else if (selectedLeaveType === 'sale') {\r\n      const saleRemaining = 5 - safeTotals.sale - totalDays; // \"Sell\" uses \"sale\"\r\n      return (\r\n        <Stack\r\n          tokens={{ childrenGap: 10 }}\r\n          style={{\r\n            minWidth: '300px',\r\n            border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n            padding: '10px',\r\n            borderRadius: '4px',\r\n            backgroundColor: 'transparent',\r\n          }}\r\n        >\r\n          <Text style={{ fontSize: '14px', fontWeight: 600, color: isDarkMode ? colours.dark.text : colours.light.text }}>\r\n            Total Sell Days Requested\r\n          </Text>\r\n          <Text style={{ fontSize: '18px', fontWeight: 400, color: isDarkMode ? colours.dark.text : colours.light.text }}>\r\n            {totalDays} {totalDays !== 1 ? 'days' : 'day'}\r\n          </Text>\r\n          <div style={{ borderTop: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`, margin: '20px 0' }} />\r\n          <Stack tokens={{ childrenGap: 5 }}>\r\n            <Text style={labelStyle}>Sell Leave Entitlement</Text>\r\n            <Text style={{ ...valueStyle, color: isDarkMode ? colours.dark.text : colours.light.text }}>\r\n              5 days\r\n            </Text>\r\n            <Text style={labelStyle}>Sell Days Taken so far</Text>\r\n            <Text style={{ ...valueStyle, color: isDarkMode ? colours.dark.text : colours.light.text }}>\r\n              {safeTotals.sale} {safeTotals.sale !== 1 ? 'days' : 'day'}\r\n            </Text>\r\n            <Text style={labelStyle}>Sell Days Remaining</Text>\r\n            <Text style={{ ...valueStyle, color: saleRemaining < 0 ? colours.cta : isDarkMode ? colours.dark.text : colours.light.text }}>\r\n              {saleRemaining} {saleRemaining !== 1 ? 'days' : 'day'}\r\n            </Text>\r\n          </Stack>\r\n        </Stack>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n\r\n  function renderTeamLeaveConflicts() {\r\n    if (!groupedLeave.length) return null;\r\n    return (\r\n      <Stack tokens={{ childrenGap: 10 }} style={{ marginTop: 20 }}>\r\n        <div style={{ display: 'grid', gridTemplateColumns: 'repeat(4, 1fr)', gap: '10px' }}>\r\n          {groupedLeave.map((item, idx) => {\r\n            const formattedRanges = item.dateRanges\r\n              .map((dr) => {\r\n                const start = new Date(dr.start_date);\r\n                const end = new Date(dr.end_date);\r\n                const sameDay = dr.start_date === dr.end_date;\r\n                return sameDay ? format(start, 'd MMM') : `${format(start, 'd MMM')} - ${format(end, 'd MMM')}`;\r\n              })\r\n              .join(' | ');\r\n            let borderColor = colours.cta;\r\n            if (item.status === 'approved') borderColor = colours.orange;\r\n            else if (item.status === 'booked') borderColor = colours.green;\r\n            return (\r\n              <div\r\n                key={idx}\r\n                className=\"persona-bubble\"\r\n                style={{\r\n                  animationDelay: `${idx * 0.1}s`,\r\n                  border: `1px solid ${borderColor}`,\r\n                  backgroundColor: isDarkMode ? colours.dark.cardBackground : colours.light.sectionBackground,\r\n                  padding: '5px',\r\n                  borderRadius: '4px',\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  alignItems: 'center',\r\n                  minWidth: '150px',\r\n                }}\r\n              >\r\n                <div className=\"persona-icon-container\" style={{ backgroundColor: 'transparent' }}>\r\n                  <img src={HelixAvatar} alt={item.nickname} style={{ width: '100%', height: '100%', borderRadius: '50%' }} />\r\n                </div>\r\n                <div style={{ marginTop: '5px', textAlign: 'center', width: '100%' }}>\r\n                  <div className=\"persona-name-text\" style={{ fontWeight: 600, fontSize: '16px', color: isDarkMode ? colours.dark.text : colours.light.text }}>\r\n                    {item.nickname}\r\n                  </div>\r\n                  <div className=\"persona-range-text\" style={{ fontSize: '14px', fontWeight: 400, color: isDarkMode ? colours.dark.text : colours.light.text }}>\r\n                    {formattedRanges}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <Text style={{ fontStyle: 'italic', marginTop: '10px', color: isDarkMode ? colours.dark.text : colours.light.text }}>\r\n          Please note: There are other team members scheduled for leave during the dates you've chosen...\r\n        </Text>\r\n      </Stack>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <style key={isDarkMode ? 'dark' : 'light'}>\r\n        {`\r\n          @keyframes fadeIn {\r\n            from { opacity: 0; transform: translateY(-10px); }\r\n            to { opacity: 1; transform: translateY(0); }\r\n          }\r\n          @keyframes dropIn {\r\n            from { opacity: 0; transform: translateY(-20px); }\r\n            to { opacity: 1; transform: translateY(0); }\r\n          }\r\n          .bespokeFormContainer button.ms-Button.ms-Button--primary {\r\n            display: none !important;\r\n          }\r\n          .custom-submit-button {\r\n            display: inline-block !important;\r\n            visibility: visible !important;\r\n            opacity: 1 !important;\r\n          }\r\n        `}\r\n        {isDarkMode && `\r\n          /* Dark mode styles for react-date-range */\r\n          .rdrCalendarWrapper {\r\n            background: linear-gradient(135deg, rgba(15, 23, 42, 0.95) 0%, rgba(30, 41, 59, 0.9) 100%) !important;\r\n            color: ${colours.dark.text} !important;\r\n            border-radius: 12px !important;\r\n            border: 1px solid rgba(125, 211, 252, 0.24) !important;\r\n            box-shadow: 0 10px 24px rgba(0, 0, 0, 0.4) !important;\r\n          }\r\n          .rdrMonth {\r\n            background-color: transparent !important;\r\n          }\r\n          .rdrMonthAndYearWrapper {\r\n            background-color: transparent !important;\r\n            color: ${colours.dark.text} !important;\r\n          }\r\n          .rdrMonthAndYearPickers select {\r\n            background-color: rgba(15, 23, 42, 0.8) !important;\r\n            color: ${colours.dark.text} !important;\r\n            border: 1px solid rgba(125, 211, 252, 0.24) !important;\r\n            border-radius: 6px !important;\r\n            padding: 4px 8px !important;\r\n          }\r\n          .rdrMonthPicker select,\r\n          .rdrYearPicker select {\r\n            background-color: ${colours.dark.inputBackground} !important;\r\n            color: ${colours.dark.text} !important;\r\n          }\r\n          .rdrWeekDay {\r\n            color: ${colours.dark.text} !important;\r\n          }\r\n          .rdrDay {\r\n            color: ${colours.dark.text} !important;\r\n          }\r\n          .rdrDayNumber span {\r\n            color: ${colours.dark.text} !important;\r\n          }\r\n          .rdrDayPassive .rdrDayNumber span {\r\n            color: ${colours.dark.text} !important;\r\n            opacity: 0.4 !important;\r\n          }\r\n          .rdrDayToday .rdrDayNumber span:after {\r\n            background: ${colours.highlight} !important;\r\n          }\r\n          .rdrDayDisabled {\r\n            background-color: ${colours.dark.sectionBackground} !important;\r\n          }\r\n          .rdrDayDisabled .rdrDayNumber span {\r\n            color: ${colours.dark.border} !important;\r\n          }\r\n          .rdrDateDisplayWrapper {\r\n            background-color: transparent !important;\r\n          }\r\n          .rdrDateDisplay {\r\n            background-color: transparent !important;\r\n          }\r\n          .rdrDateDisplayItem {\r\n            background: rgba(15, 23, 42, 0.8) !important;\r\n            border: 1px solid rgba(125, 211, 252, 0.24) !important;\r\n            border-radius: 8px !important;\r\n            color: ${colours.dark.text} !important;\r\n            box-shadow: none !important;\r\n          }\r\n          .rdrDateDisplayItem input {\r\n            color: ${colours.dark.text} !important;\r\n            background: transparent !important;\r\n          }\r\n          .rdrDateInput {\r\n            background-color: transparent !important;\r\n          }\r\n          .rdrDateInput input {\r\n            color: ${colours.dark.text} !important;\r\n            background-color: transparent !important;\r\n          }\r\n          .rdrMonthName {\r\n            color: ${colours.dark.text} !important;\r\n          }\r\n          .rdrNextPrevButton {\r\n            background-color: ${colours.dark.inputBackground} !important;\r\n          }\r\n          .rdrNextPrevButton:hover {\r\n            background-color: ${colours.dark.border} !important;\r\n          }\r\n          .rdrPprevButton i,\r\n          .rdrNextButton i {\r\n            border-color: transparent ${colours.dark.text} transparent transparent !important;\r\n          }\r\n          .rdrPprevButton i {\r\n            border-color: transparent transparent transparent ${colours.dark.text} !important;\r\n          }\r\n          \r\n          /* ChoiceGroup (radio buttons) dark mode */\r\n          .ms-ChoiceField-labelWrapper {\r\n            color: ${colours.dark.text} !important;\r\n          }\r\n          .ms-ChoiceFieldLabel {\r\n            color: ${colours.dark.text} !important;\r\n          }\r\n          .ms-ChoiceField-field:before {\r\n            border-color: ${colours.dark.border} !important;\r\n          }\r\n          .ms-ChoiceField-field:after {\r\n            border-color: ${colours.highlight} !important;\r\n          }\r\n          .ms-ChoiceField:hover .ms-ChoiceField-field:before {\r\n            border-color: ${colours.highlight} !important;\r\n          }\r\n        `}\r\n      </style>\r\n      <Stack tokens={{ childrenGap: 20 }}>\r\n        <div className=\"bespokeFormContainer\">\r\n          <BespokeForm\r\n            fields={initialFormFields}\r\n            onSubmit={handleSubmit}\r\n            onCancel={() => {}}\r\n            isSubmitting={isSubmitting}\r\n            matters={[]}\r\n          >\r\n            <div style={{ display: 'flex', alignItems: 'flex-start', gap: '20px' }}>\r\n              <Stack style={{ flex: 1 }} tokens={{ childrenGap: 10 }}>\r\n                <Stack horizontal tokens={{ childrenGap: 10 }} styles={{ root: { width: '100%' } }}>\r\n                  {leaveTypeOptions.map((option) => {\r\n                    const isSelected = selectedLeaveType === option.key;\r\n                    return (\r\n                      <DefaultButton\r\n                        key={option.key}\r\n                        text={option.text}\r\n                        onClick={() => setSelectedLeaveType(option.key)}\r\n                        styles={isSelected ? sharedDecisionButtonStyles : sharedDefaultButtonStyles}\r\n                      />\r\n                    );\r\n                  })}\r\n                </Stack>\r\n                {dateRanges.map((range, index) => (\r\n                  <Stack\r\n                    key={index}\r\n                    tokens={{ childrenGap: 5 }}\r\n                    style={{\r\n                      animation: 'fadeIn 0.5s ease forwards',\r\n                      border: `1px solid ${isDarkMode ? 'rgba(125, 211, 252, 0.24)' : colours.light.border}`,\r\n                      padding: '12px',\r\n                      borderRadius: '12px',\r\n                      background: isDarkMode ? 'rgba(15, 23, 42, 0.5)' : 'transparent',\r\n                    }}\r\n                  >\r\n                    <DateRangePicker\r\n                      ranges={[\r\n                        {\r\n                          startDate: range.startDate,\r\n                          endDate: range.endDate,\r\n                          key: `selection_${index}`,\r\n                        },\r\n                      ]}\r\n                      onChange={(item: RangeKeyDict) => {\r\n                        const selection = item[`selection_${index}`] as Range;\r\n                        if (selection) {\r\n                          const newRange: DateRangeSelection = {\r\n                            startDate: selection.startDate || new Date(),\r\n                            endDate: selection.endDate || new Date(),\r\n                            halfDayStart: range.halfDayStart,\r\n                            halfDayEnd: range.halfDayEnd,\r\n                          };\r\n                          const updatedRanges = [...dateRanges];\r\n                          updatedRanges[index] = newRange;\r\n                          setDateRanges(updatedRanges);\r\n                        }\r\n                      }}\r\n                      editableDateInputs\r\n                      moveRangeOnFirstSelection={false}\r\n                      months={1}\r\n                      direction=\"horizontal\"\r\n                      rangeColors={[colours.highlight]}\r\n                    />\r\n                    <DefaultButton\r\n                      text=\"Remove Range\"\r\n                      onClick={() => handleRemoveDateRange(index)}\r\n                      /* use a registered icon name - 'Cancel' is available in the Fluent icons set */\r\n                      iconProps={{ iconName: 'Cancel' }}\r\n                      styles={buttonStylesFixedWidthSecondary}\r\n                    />\r\n                  </Stack>\r\n                ))}\r\n                <div\r\n                  style={{\r\n                    border: `2px dashed ${isDarkMode ? 'rgba(125, 211, 252, 0.24)' : colours.light.border}`,\r\n                    borderRadius: '12px',\r\n                    width: '100%',\r\n                    height: '60px',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    cursor: 'pointer',\r\n                    backgroundColor: isDarkMode ? 'rgba(15, 23, 42, 0.5)' : colours.light.sectionBackground,\r\n                    transition: 'all 0.2s ease',\r\n                  }}\r\n                  onClick={handleAddDateRange}\r\n                  onMouseEnter={(e) => {\r\n                    e.currentTarget.style.backgroundColor = isDarkMode ? 'rgba(30, 41, 59, 0.6)' : '#f8fafc';\r\n                    e.currentTarget.style.borderColor = colours.blue;\r\n                  }}\r\n                  onMouseLeave={(e) => {\r\n                    e.currentTarget.style.backgroundColor = isDarkMode ? 'rgba(15, 23, 42, 0.5)' : colours.light.sectionBackground;\r\n                    e.currentTarget.style.borderColor = isDarkMode ? 'rgba(125, 211, 252, 0.24)' : colours.light.border;\r\n                  }}\r\n                >\r\n                  <Icon iconName=\"Add\" style={{ \r\n                    fontSize: 20, \r\n                    color: colours.blue, \r\n                    marginRight: 8,\r\n                  }} />\r\n                  <Text style={{ \r\n                    color: isDarkMode ? colours.dark.text : colours.light.text, \r\n                    fontSize: '14px',\r\n                    fontWeight: 500,\r\n                  }}>\r\n                    {dateRanges.length === 0 ? 'Add Holiday' : 'Add Another Holiday'}\r\n                  </Text>\r\n                </div>\r\n                <TextField\r\n                  label=\"Notes (Optional)\"\r\n                  placeholder=\"Enter any additional notes\"\r\n                  value={notes}\r\n                  onChange={(e, newVal) => setNotes(newVal || '')}\r\n                  styles={{\r\n                    root: {\r\n                      '.ms-Label': {\r\n                        color: `${isDarkMode ? colours.dark.text : colours.light.text} !important`,\r\n                      },\r\n                    },\r\n                    fieldGroup: {\r\n                      borderRadius: '4px',\r\n                      border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n                      backgroundColor: isDarkMode ? colours.dark.inputBackground : colours.light.inputBackground,\r\n                      selectors: {\r\n                        ':hover': { borderColor: isDarkMode ? colours.dark.cta : colours.light.cta },\r\n                        ':focus': { borderColor: isDarkMode ? colours.dark.cta : colours.light.cta },\r\n                      },\r\n                    },\r\n                    field: {\r\n                      color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                    },\r\n                    subComponentStyles: {\r\n                      label: {\r\n                        root: {\r\n                          color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                        },\r\n                      },\r\n                    },\r\n                  }}\r\n                  multiline\r\n                  rows={3}\r\n                />\r\n                <Stack tokens={{ childrenGap: 10 }}>\r\n                  <Stack horizontal tokens={{ childrenGap: 5 }} verticalAlign=\"center\">\r\n                    <Text style={{ fontWeight: 600, color: isDarkMode ? colours.dark.text : colours.light.text }}>\r\n                      I confirm there are no hearings during my planned absence...\r\n                    </Text>\r\n                    <TooltipHost content=\"Usually leave will not be approved...\">\r\n                      <Icon iconName=\"Info\" styles={{ root: { fontSize: 16, cursor: 'pointer' } }} />\r\n                    </TooltipHost>\r\n                  </Stack>\r\n                  <ChoiceGroup\r\n                    selectedKey={hearingConfirmation || undefined}\r\n                    options={[\r\n                      { key: 'yes', text: 'Yes' },\r\n                      { key: 'no', text: 'No' },\r\n                    ]}\r\n                    onChange={(ev, option) => setHearingConfirmation(option?.key || null)}\r\n                    label=\"Please select an option\"\r\n                    styles={{\r\n                      flexContainer: {\r\n                        display: 'flex',\r\n                        gap: '10px',\r\n                      },\r\n                      label: {\r\n                        color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                      },\r\n                    }}\r\n                  />\r\n                  {hearingConfirmation === 'no' && (\r\n                    <TextField\r\n                      label=\"There are the following hearings taking place...\"\r\n                      value={hearingDetails}\r\n                      onChange={(e, newVal) => setHearingDetails(newVal || '')}\r\n                      styles={{\r\n                        root: {\r\n                          '.ms-Label': {\r\n                            color: `${isDarkMode ? colours.dark.text : colours.light.text} !important`,\r\n                          },\r\n                        },\r\n                        fieldGroup: {\r\n                          borderRadius: '4px',\r\n                          border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n                          backgroundColor: isDarkMode ? colours.dark.inputBackground : colours.light.inputBackground,\r\n                          selectors: {\r\n                            ':hover': { borderColor: isDarkMode ? colours.dark.cta : colours.light.cta },\r\n                            ':focus': { borderColor: isDarkMode ? colours.dark.cta : colours.light.cta },\r\n                          },\r\n                        },\r\n                        field: {\r\n                          color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                        },\r\n                        subComponentStyles: {\r\n                          label: {\r\n                            root: {\r\n                              color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                            },\r\n                          },\r\n                        },\r\n                      }}\r\n                      multiline\r\n                      rows={3}\r\n                    />\r\n                  )}\r\n                </Stack>\r\n                <Stack horizontal tokens={{ childrenGap: 10 }}>\r\n                  <DefaultButton\r\n                    text=\"Clear\"\r\n                    onClick={handleClear}\r\n                    styles={buttonStylesFixedWidthSecondary}\r\n                  />\r\n                  <DefaultButton\r\n                    text=\"Submit\"\r\n                    className=\"custom-submit-button\"\r\n                    styles={buttonStylesFixedWidth}\r\n                    onClick={handleSubmit}\r\n                    disabled={isSubmitting || totalDays === 0}\r\n                  />\r\n                </Stack>\r\n                {confirmationMessage && (\r\n                  <Text style={{ \r\n                    marginTop: 10, \r\n                    fontWeight: 'bold', \r\n                    color: colours.green,\r\n                    padding: '8px 12px',\r\n                    backgroundColor: isDarkMode ? 'rgba(32, 178, 108, 0.1)' : 'rgba(32, 178, 108, 0.05)',\r\n                    borderRadius: '4px',\r\n                    border: `1px solid ${colours.green}`\r\n                  }}>\r\n                    {confirmationMessage}\r\n                  </Text>\r\n                )}\r\n                {errorMessage && (\r\n                  <Text style={{ \r\n                    marginTop: 10, \r\n                    fontWeight: 'bold', \r\n                    color: colours.red,\r\n                    padding: '8px 12px',\r\n                    backgroundColor: isDarkMode ? 'rgba(214, 85, 65, 0.1)' : 'rgba(214, 85, 65, 0.05)',\r\n                    borderRadius: '4px',\r\n                    border: `1px solid ${colours.red}`\r\n                  }}>\r\n                    {errorMessage}\r\n                  </Text>\r\n                )}\r\n              </Stack>\r\n              {renderSidePanel()}\r\n            </div>\r\n          </BespokeForm>\r\n        </div>\r\n        {groupedLeave.length > 0 && (\r\n          <div style={{ position: 'relative', marginBottom: '20px' }}>\r\n            <div style={infoBoxStyle(isDarkMode)}>\r\n              <Icon\r\n                iconName=\"Info\"\r\n                style={{ position: 'absolute', right: 10, top: 10, fontSize: 40, opacity: 0.1, color: isDarkMode ? colours.dark.text : colours.light.text }}\r\n              />\r\n              <Stack tokens={{ childrenGap: 10 }}>\r\n                <Text style={labelStyle}>Team Leave Conflicts</Text>\r\n              </Stack>\r\n              {renderTeamLeaveConflicts()}\r\n            </div>\r\n          </div>\r\n        )}\r\n        <Stack tokens={{ childrenGap: 10 }}>\r\n          <Text\r\n            style={{\r\n              fontSize: '18px',\r\n              fontWeight: 600,\r\n              color: isDarkMode ? colours.dark.text : colours.light.text,\r\n            }}\r\n          >\r\n            Your Leave History\r\n          </Text>\r\n          <DetailsList\r\n            items={userLeaveHistory}\r\n            columns={historyColumns}\r\n            setKey=\"set\"\r\n            layoutMode={DetailsListLayoutMode.justified}\r\n            selectionMode={SelectionMode.none}\r\n            styles={{\r\n              root: {\r\n                backgroundColor: isDarkMode ? colours.dark.sectionBackground : colours.light.sectionBackground,\r\n                borderRadius: '4px',\r\n                boxShadow: '0 2px 6px rgba(0, 0, 0, 0.1)',\r\n              },\r\n              headerWrapper: {\r\n                backgroundColor: isDarkMode ? colours.dark.grey : colours.light.grey,\r\n              },\r\n            }}\r\n          />\r\n          {userLeaveHistory.length === 0 && (\r\n            <Text style={{ color: isDarkMode ? colours.dark.text : colours.light.text, fontStyle: 'italic' }}>\r\n              No leave history available.\r\n            </Text>\r\n          )}\r\n        </Stack>\r\n      </Stack>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AnnualLeaveForm;"],"names":["initialFormFields","buttonStylesFixedWidth","root","sharedPrimaryButtonStyles","width","rootHovered","rootPressed","buttonStylesFixedWidthSecondary","sharedDefaultButtonStyles","infoBoxStyle","isDarkMode","backgroundColor","colours","dark","cardBackground","light","grey","boxShadow","padding","borderRadius","animation","marginBottom","border","labelStyle","fontSize","fontWeight","color","highlight","valueStyle","historyColumns","key","name","fieldName","minWidth","maxWidth","isResizable","onRender","item","format","Date","start_date","end_date","_item$days_taken","days_taken","leave_type","_ref","_userData$0$holiday_e","_userData$","futureLeave","team","userData","totals","bankHolidays","allLeaveRecords","safeTotals","standard","unpaid","sale","useTheme","dateRanges","setDateRanges","useState","totalDays","setTotalDays","isSubmitting","setIsSubmitting","notes","setNotes","confirmationMessage","setConfirmationMessage","errorMessage","setErrorMessage","selectedLeaveType","setSelectedLeaveType","hearingConfirmation","setHearingConfirmation","hearingDetails","setHearingDetails","useEffect","total","forEach","range","allDays","eachDayOfInterval","start","startDate","end","endDate","workingDays","day","dayOfWeek","getDay","dayStr","has","halfDayStart","startStr","halfDayEnd","endStr","calculateWorkingDays","handleClear","holidayEntitlement","Number","holiday_entitlement","effectiveRemaining","groupedLeave","useMemo","groups","leave","overlaps","selStart","selEnd","leaveStart","leaveEnd","overlapStart","overlapEnd","map","d","getOverlapDates","length","teamMember","find","m","_m$Initials","Initials","toLowerCase","person","nickname","Nickname","First","leaveStatus","status","newRange","some","dr","push","Object","values","handleSubmit","async","trim","_userData$2","feeEarner","payload","fe","reason","overlapDetails","hearing_confirmation","hearing_details","console","log","url","response","fetch","method","headers","body","JSON","stringify","ok","errorText","text","Error","result","json","error","message","String","userLeaveHistory","_userData$3","_userData$3$Initials","userInitials","filter","record","sort","a","b","getTime","_jsxs","_Fragment","children","inputBackground","sectionBackground","Stack","tokens","childrenGap","_jsx","className","BespokeForm","fields","onSubmit","onCancel","matters","style","display","alignItems","gap","flex","horizontal","styles","option","isSelected","DefaultButton","onClick","sharedDecisionButtonStyles","index","background","DateRangePicker","ranges","onChange","selection","updatedRanges","editableDateInputs","moveRangeOnFirstSelection","months","direction","rangeColors","prev","newRanges","splice","handleRemoveDateRange","iconProps","iconName","height","justifyContent","cursor","transition","handleAddDateRange","addDays","onMouseEnter","e","currentTarget","borderColor","blue","onMouseLeave","Icon","marginRight","Text","TextField","label","placeholder","value","newVal","fieldGroup","selectors","cta","field","subComponentStyles","multiline","rows","verticalAlign","TooltipHost","content","ChoiceGroup","selectedKey","undefined","options","ev","flexContainer","disabled","marginTop","green","red","_userData$4","borderTop","margin","purchaseRemaining","saleRemaining","renderSidePanel","position","right","top","opacity","gridTemplateColumns","idx","formattedRanges","join","orange","animationDelay","flexDirection","src","HelixAvatar","alt","textAlign","fontStyle","DetailsList","items","columns","setKey","layoutMode","DetailsListLayoutMode","justified","selectionMode","SelectionMode","none","headerWrapper"],"sourceRoot":""}