{"version":3,"file":"static/js/581.be1f2ea1.chunk.js","mappings":"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","sources":["tabs/enquiries/pitch-builder/OperationStatusToast.tsx","app/styles/FilterStyles.ts","components/filter/SegmentedControl.tsx","components/filter/FilterBanner.tsx"],"sourcesContent":["import React from 'react';\r\nimport { MessageBar, MessageBarType, Spinner, SpinnerSize, Icon } from '@fluentui/react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport '../../../app/styles/toast.css';\r\n\r\ninterface OperationStatusToastProps {\r\n  visible: boolean;\r\n  message: string;\r\n  type: 'success' | 'error' | 'info' | 'warning';\r\n  loading?: boolean;\r\n  details?: string;\r\n  progress?: number; // 0-100 for progress bar\r\n  icon?: string;\r\n}\r\n\r\nconst OperationStatusToast: React.FC<OperationStatusToastProps> = ({ \r\n  visible, \r\n  message, \r\n  type, \r\n  loading, \r\n  details,\r\n  progress,\r\n  icon \r\n}) => {\r\n  const messageBarType = type === 'success' \r\n    ? MessageBarType.success \r\n    : type === 'error' \r\n    ? MessageBarType.error \r\n    : type === 'warning'\r\n    ? MessageBarType.warning\r\n    : MessageBarType.info;\r\n\r\n  const getTypeIcon = () => {\r\n    if (icon) return icon;\r\n    switch (type) {\r\n      case 'success': return 'CheckMark';\r\n      case 'error': return 'ErrorBadge';\r\n      case 'warning': return 'Warning';\r\n      case 'info': return 'Info';\r\n      default: return 'Info';\r\n    }\r\n  };\r\n\r\n  const getTypeColor = () => {\r\n    switch (type) {\r\n      case 'success': return '#10B981';\r\n      case 'error': return '#EF4444';\r\n      case 'warning': return '#F59E0B';\r\n      case 'info': return '#3690CE';\r\n      default: return '#3690CE';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CSSTransition in={visible} timeout={300} classNames=\"toast\" unmountOnExit>\r\n      <div\r\n        style={{\r\n          position: 'fixed',\r\n          bottom: 20,\r\n          right: 20,\r\n          maxWidth: 400,\r\n          minWidth: 320,\r\n          zIndex: 2000,\r\n          background: '#FFFFFF',\r\n          borderRadius: '12px',\r\n          boxShadow: '0 10px 25px rgba(0, 0, 0, 0.15), 0 4px 6px rgba(0, 0, 0, 0.1)',\r\n          border: `1px solid ${getTypeColor()}`,\r\n          overflow: 'hidden',\r\n          fontFamily: 'Raleway, -apple-system, BlinkMacSystemFont, \"Segoe UI\", sans-serif',\r\n        }}\r\n      >\r\n        {/* Progress bar */}\r\n        {(loading || typeof progress === 'number') && (\r\n          <div\r\n            style={{\r\n              height: '3px',\r\n              background: 'rgba(54, 144, 206, 0.1)',\r\n              position: 'relative',\r\n              overflow: 'hidden'\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                height: '100%',\r\n                background: `linear-gradient(90deg, ${getTypeColor()}, ${getTypeColor()}dd)`,\r\n                width: typeof progress === 'number' ? `${progress}%` : '100%',\r\n                transition: 'width 0.3s ease',\r\n                animation: loading && typeof progress !== 'number' ? 'toast-loading 2s ease-in-out infinite' : 'none'\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n        \r\n        <div style={{ padding: '16px 20px' }}>\r\n          <div style={{ display: 'flex', alignItems: 'flex-start', gap: '12px' }}>\r\n            {/* Icon or Spinner */}\r\n            <div style={{ \r\n              display: 'flex', \r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              width: '24px',\r\n              height: '24px',\r\n              flexShrink: 0,\r\n              marginTop: '2px'\r\n            }}>\r\n              {loading ? (\r\n                <Spinner size={SpinnerSize.small} \r\n                  styles={{ \r\n                    root: { \r\n                      width: '20px', \r\n                      height: '20px'\r\n                    },\r\n                    circle: {\r\n                      borderColor: `${getTypeColor()} transparent transparent transparent`\r\n                    }\r\n                  }} \r\n                />\r\n              ) : (\r\n                <Icon \r\n                  iconName={getTypeIcon()} \r\n                  styles={{ \r\n                    root: { \r\n                      fontSize: '18px', \r\n                      color: getTypeColor(),\r\n                      fontWeight: 600\r\n                    } \r\n                  }} \r\n                />\r\n              )}\r\n            </div>\r\n            \r\n            {/* Message Content */}\r\n            <div style={{ flex: 1, minWidth: 0 }}>\r\n              <div style={{\r\n                fontSize: '14px',\r\n                fontWeight: 600,\r\n                color: '#1E293B',\r\n                lineHeight: '1.4',\r\n                marginBottom: details ? '4px' : 0\r\n              }}>\r\n                {message}\r\n              </div>\r\n              \r\n              {details && (\r\n                <div style={{\r\n                  fontSize: '13px',\r\n                  color: '#64748B',\r\n                  lineHeight: '1.4',\r\n                  fontWeight: 400\r\n                }}>\r\n                  {details}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Enhanced CSS for animations */}\r\n        <style>{`\r\n          @keyframes toast-loading {\r\n            0% { transform: translateX(-100%); }\r\n            50% { transform: translateX(100%); }\r\n            100% { transform: translateX(-100%); }\r\n          }\r\n          \r\n          .toast-enter {\r\n            opacity: 0;\r\n            transform: translateX(100%) scale(0.9);\r\n          }\r\n          \r\n          .toast-enter-active {\r\n            opacity: 1;\r\n            transform: translateX(0) scale(1);\r\n            transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);\r\n          }\r\n          \r\n          .toast-exit {\r\n            opacity: 1;\r\n            transform: translateX(0) scale(1);\r\n          }\r\n          \r\n          .toast-exit-active {\r\n            opacity: 0;\r\n            transform: translateX(100%) scale(0.9);\r\n            transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);\r\n          }\r\n        `}</style>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default OperationStatusToast;","// invisible change 3\r\n// src/app/styles/FilterStyles.ts\r\n\r\nimport { mergeStyles, IDropdownStyles } from '@fluentui/react';\r\nimport { colours } from './colours';\r\n\r\nexport const sharedSearchBoxContainerStyle = (isDarkMode: boolean) =>\r\n  mergeStyles({\r\n    position: 'relative',\r\n    width: '100%',\r\n    maxWidth: '300px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  });\r\n\r\nexport const sharedControlsContainerStyle = mergeStyles({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  gap: '10px',\r\n  flex: 1,\r\n  flexWrap: 'nowrap',\r\n});\r\n\r\nexport const sharedSearchBoxStyle = (isDarkMode: boolean) => ({\r\n  root: {\r\n    position: 'relative' as const,\r\n    backgroundColor: isDarkMode ? colours.dark.inputBackground : '#ffffff',\r\n    border: `1px solid ${isDarkMode ? 'rgba(255,255,255,0.12)' : 'rgba(0,0,0,0.12)'}`,\r\n    boxShadow: 'none',\r\n    borderRadius: '16px',\r\n    padding: '0',\r\n    width: '100%',\r\n    maxWidth: '300px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  height: '32px',\r\n    outline: 'none',\r\n    transition: 'border-color 0.15s ease',\r\n    selectors: {\r\n      ':focus': {\r\n        outline: 'none',\r\n        borderColor: isDarkMode ? 'rgba(255,255,255,0.24)' : 'rgba(0,0,0,0.24)',\r\n        boxShadow: 'none',\r\n      },\r\n      ':focus-within': {\r\n        outline: 'none',\r\n        borderColor: isDarkMode ? 'rgba(255,255,255,0.24)' : 'rgba(0,0,0,0.24)',\r\n        boxShadow: 'none',\r\n      },\r\n      ':hover': {\r\n        borderColor: isDarkMode ? 'rgba(255,255,255,0.18)' : 'rgba(0,0,0,0.18)',\r\n      },\r\n    },\r\n  },\r\n  field: {\r\n    backgroundColor: 'transparent',\r\n    border: 'none',\r\n    boxShadow: 'none !important',\r\n    borderRadius: '8px 8px 0 0',\r\n    padding: '0 12px',\r\n  height: '100%',\r\n  lineHeight: '32px',\r\n    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n    fontSize: '14px',\r\n    outline: 'none',\r\n    '::placeholder': {\r\n      color: isDarkMode ? '#aaaaaa' : '#888888',\r\n      opacity: 1,\r\n    },\r\n  },\r\n  icon: {\r\n    color: isDarkMode ? colours.dark.iconColor : colours.light.iconColor,\r\n    fontSize: '16px',\r\n    marginLeft: '8px',\r\n  },\r\n});\r\n\r\nexport const sharedToggleStyle = (isDarkMode: boolean) => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginBottom: 0,\r\n  },\r\n  label: {\r\n    marginRight: '10px',\r\n    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n  },\r\n});\r\n\r\nexport const sharedDropdownContainerStyle = (isDarkMode: boolean) =>\r\n  mergeStyles({\r\n    position: 'relative',\r\n    width: '100%',\r\n    maxWidth: '300px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  });\r\n\r\nexport const sharedDropdownStyles = (isDarkMode: boolean): Partial<IDropdownStyles> => ({\r\n  root: {\r\n    position: 'relative' as const,\r\n    width: '100%',\r\n    maxWidth: '300px',\r\n    height: '32px',\r\n    outline: 'none',\r\n    selectors: {\r\n      '&::after': {\r\n        content: '\"\"',\r\n        position: 'absolute' as const,\r\n        left: '50%',\r\n        bottom: '0',\r\n        height: '1px',\r\n        width: '100%',\r\n        backgroundColor: isDarkMode ? colours.dark.highlight : colours.highlight,\r\n        transform: 'translateX(-50%) scaleX(0)',\r\n        transformOrigin: 'center',\r\n        transition: 'transform 0.15s ease-out',\r\n      },\r\n      '&:hover::after': {\r\n        transform: 'translateX(-50%) scaleX(1)',\r\n      },\r\n      '&:focus-within::after': {\r\n        transform: 'translateX(-50%) scaleX(1)',\r\n      },\r\n    },\r\n  },\r\n  dropdown: {\r\n    backgroundColor: isDarkMode ? colours.dark.inputBackground : '#ffffff',\r\n    border: 'none',\r\n    boxShadow: 'none',\r\n    borderRadius: '8px 8px 0 0',\r\n    padding: '0',\r\n    height: '32px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  title: {\r\n    backgroundColor: 'transparent',\r\n    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n    fontSize: '13px',\r\n    height: '32px',\r\n    paddingLeft: '12px',\r\n    paddingRight: '36px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    border: 'none',\r\n    flexGrow: 1,\r\n    justifyContent: 'space-between',\r\n  },\r\n  caretDown: {\r\n    color: isDarkMode ? colours.dark.iconColor : colours.light.iconColor,\r\n    fontSize: '16px',\r\n    position: 'absolute',\r\n    right: '12px',\r\n    top: '50%',\r\n    transform: 'translateY(-50%)',\r\n    pointerEvents: 'none',\r\n  },\r\n});\r\n\r\nexport const sharedToggleButtonStyle = (isDarkMode: boolean) => ({\r\n  root: {\r\n    padding: '6px 12px',\r\n    borderRadius: '8px 8px 0 0',\r\n    backgroundColor: '#ffffff',\r\n    border: 'none',\r\n    color: isDarkMode ? colours.dark.text : '#000000',\r\n    transition: 'background 0.3s ease, box-shadow 0.3s ease',\r\n    transform: 'none !important',\r\n    outline: 'none !important',\r\n    height: '32px',\r\n    ':focus': {\r\n      outline: 'none !important',\r\n      border: 'none !important',\r\n      transform: 'none !important',\r\n    },\r\n    selectors: {\r\n      ':hover': {\r\n        background: `radial-gradient(circle at center, rgba(0,0,0,0) 0%, rgba(0,0,0,0.1) 100%), #ffffff !important`,\r\n        boxShadow: '0 0 8px rgba(0,0,0,0.1) !important',\r\n        transform: 'none !important',\r\n        outline: 'none !important',\r\n        border: 'none !important',\r\n      },\r\n      ':active': {\r\n        background: `radial-gradient(circle at center, rgba(0,0,0,0) 0%, rgba(0,0,0,0.15) 100%), #ffffff !important`,\r\n        boxShadow: '0 0 8px rgba(0,0,0,0.2) !important',\r\n        transform: 'none !important',\r\n        outline: 'none !important',\r\n        border: 'none !important',\r\n      },\r\n    },\r\n  },\r\n  label: {\r\n    color: isDarkMode ? colours.dark.text : '#000000 !important',\r\n    fontWeight: 'normal'\r\n  },\r\n});\r\n\r\n// New Style Added\r\nexport const sharedEditorStyle = (isDarkMode: boolean) =>\r\n  mergeStyles({\r\n    minHeight: '150px',\r\n    padding: '20px 20px 110px 20px',\r\n    borderRadius: '0',\r\n    border: `1px solid ${isDarkMode ? colours.dark.cardHover : colours.light.cardHover}`,\r\n    backgroundColor: isDarkMode ? colours.dark.sectionBackground : '#ffffff',\r\n    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n    fontSize: '14px',\r\n    overflowY: 'auto',\r\n    whiteSpace: 'pre-wrap',\r\n    outline: 'none',\r\n    position: 'relative',\r\n    selectors: {\r\n      ':focus-visible': {\r\n        borderColor: isDarkMode\r\n          ? colours.dark.cardHover\r\n          : colours.light.cardHover,\r\n        boxShadow: `inset 0 0 0 2px ${colours.cta}, inset 0 0 6px 3px ${colours.grey}`,\r\n      },\r\n      ':after': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        bottom: '20px',\r\n        left: '20px',\r\n        backgroundImage: 'url(\"https://helix-law.co.uk/wp-content/uploads/2024/03/HLRblue72.png\")',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'left bottom',\r\n        backgroundSize: '25%',\r\n        opacity: 0.2,\r\n        pointerEvents: 'none',\r\n        width: 'calc(100% - 20px)',\r\n        height: 'calc(100% - 20px)',\r\n        zIndex: 0,\r\n      },\r\n    },\r\n  });\r\n\r\n// New Style for Template Block Dropdowns\r\nexport const sharedOptionsDropdownStyles = (isDarkMode: boolean): Partial<IDropdownStyles> => ({\r\n  root: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: '32px',\r\n    outline: 'none',\r\n    selectors: {\r\n      '&::after': {\r\n        content: '\"\"',\r\n        position: 'absolute' as const,\r\n        left: '50%',\r\n        bottom: '0',\r\n        height: '1px',\r\n        width: '100%',\r\n        backgroundColor: isDarkMode ? colours.dark.highlight : colours.highlight,\r\n        transform: 'translateX(-50%) scaleX(0)',\r\n        transformOrigin: 'center',\r\n        transition: 'transform 0.15s ease-out',\r\n      },\r\n      '&:hover::after': {\r\n        transform: 'translateX(-50%) scaleX(1)',\r\n      },\r\n      '&:focus-within::after': {\r\n        transform: 'translateX(-50%) scaleX(1)',\r\n      },\r\n    },\r\n  },\r\n  dropdown: {\r\n    backgroundColor: isDarkMode ? colours.dark.grey : colours.grey,\r\n    border: 'none',\r\n    boxShadow: 'none',\r\n    borderRadius: '8px 8px 0 0',\r\n    padding: '0',\r\n    height: '32px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  title: {\r\n    backgroundColor: 'transparent',\r\n    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n    fontSize: '13px',\r\n    height: '32px',\r\n    paddingLeft: '12px',\r\n    paddingRight: '36px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    border: 'none',\r\n    justifyContent: 'space-between',\r\n  },\r\n  caretDown: {\r\n    color: isDarkMode ? colours.dark.iconColor : colours.light.iconColor,\r\n    fontSize: '16px',\r\n    position: 'absolute',\r\n    right: '12px',\r\n    top: '50%',\r\n    transform: 'translateY(-50%)',\r\n    pointerEvents: 'none',\r\n  },\r\n});\r\n","import React, { useRef, useLayoutEffect, useState, useCallback } from 'react';\r\nimport { useTheme } from '../../app/functionality/ThemeContext';\r\nimport { colours } from '../../app/styles/colours';\r\n\r\nexport interface SegmentedOption {\r\n  key: string;\r\n  label: string;\r\n  badge?: number | string; // optional count / indicator\r\n  disabled?: boolean;\r\n}\r\n\r\ninterface SegmentedControlProps {\r\n  value: string;\r\n  onChange: (key: string) => void;\r\n  options: SegmentedOption[];\r\n  size?: 'sm' | 'md';\r\n  ariaLabel?: string;\r\n  fullWidth?: boolean;\r\n  pill?: boolean;\r\n  id?: string;\r\n  style?: React.CSSProperties;\r\n}\r\n\r\n/**\r\n * Apple-style segmented control with clean aesthetics and proper spacing\r\n */\r\nconst SegmentedControl: React.FC<SegmentedControlProps> = ({\r\n  value,\r\n  onChange,\r\n  options,\r\n  size = 'sm',\r\n  ariaLabel,\r\n  fullWidth = false,\r\n  pill = true,\r\n  id,\r\n  style,\r\n}) => {\r\n  const { isDarkMode } = useTheme();\r\n  const height = size === 'sm' ? 28 : 34;\r\n  const fontSize = size === 'sm' ? 12 : 13;\r\n  const paddingX = 14;\r\n\r\n  const containerRef = useRef<HTMLDivElement | null>(null);\r\n  const btnRefs = useRef<(HTMLButtonElement | null)[]>([]);\r\n  const [thumbRect, setThumbRect] = useState<{ left: number; width: number }>({ left: 4, width: 0 });\r\n\r\n  const activeIndex = options.findIndex((o) => o.key === value);\r\n\r\n  const recalc = useCallback(() => {\r\n    const container = containerRef.current;\r\n    const activeBtn = btnRefs.current[activeIndex];\r\n    if (container && activeBtn) {\r\n      const c = container.getBoundingClientRect();\r\n      const b = activeBtn.getBoundingClientRect();\r\n  // Align left to container padding (4px) without double-adding; maintain 4px inset on both sides\r\n  const left = Math.round(b.left - c.left);\r\n  const width = Math.max(0, Math.round(b.width));\r\n  setThumbRect({ left, width });\r\n    }\r\n  }, [activeIndex]);\r\n\r\n  useLayoutEffect(() => {\r\n    recalc();\r\n  }, [recalc, activeIndex, options, value, size]);\r\n\r\n  useLayoutEffect(() => {\r\n    window.addEventListener('resize', recalc);\r\n    return () => window.removeEventListener('resize', recalc);\r\n  }, [recalc]);\r\n\r\n  const onKeyDown = useCallback(\r\n    (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n      const idx = options.findIndex((o) => o.key === value);\r\n      if (idx < 0) return;\r\n      if (e.key === 'ArrowRight') {\r\n        e.preventDefault();\r\n        for (let i = idx + 1; i < options.length; i++) {\r\n          if (!options[i].disabled) {\r\n            onChange(options[i].key);\r\n            break;\r\n          }\r\n        }\r\n      } else if (e.key === 'ArrowLeft') {\r\n        e.preventDefault();\r\n        for (let i = idx - 1; i >= 0; i--) {\r\n          if (!options[i].disabled) {\r\n            onChange(options[i].key);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [options, onChange, value]\r\n  );\r\n\r\n  return (\r\n    <div\r\n      id={id}\r\n      role=\"tablist\"\r\n      aria-label={ariaLabel}\r\n      ref={containerRef}\r\n      tabIndex={0}\r\n      onKeyDown={onKeyDown}\r\n      style={{\r\n        display: 'flex',\r\n        position: 'relative',\r\n        background: isDarkMode\r\n          ? 'rgba(255,255,255,0.06)'\r\n          : 'rgba(0,0,0,0.04)',\r\n        borderRadius: pill ? height / 2 : 10,\r\n        padding: 4,\r\n        height,\r\n        fontFamily: 'Raleway, sans-serif',\r\n        userSelect: 'none',\r\n        overflow: 'hidden',\r\n        width: fullWidth ? '100%' : 'auto',\r\n        boxShadow: 'none',\r\n        ...style,\r\n      }}\r\n    >\r\n      {/* Apple-style thumb with matching inner radius (outer radius - padding) */}\r\n      {activeIndex >= 0 && (\r\n        <span\r\n          aria-hidden=\"true\"\r\n          style={{\r\n            pointerEvents: 'none',\r\n            position: 'absolute',\r\n            top: 4,\r\n            height: Math.max(0, height - 8),\r\n            left: thumbRect.left,\r\n            width: thumbRect.width,\r\n            background: '#FFFFFF',\r\n            borderRadius: pill ? (height - 8) / 2 : 8,\r\n            transition:\r\n              'left 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94), width 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94)',\r\n            boxShadow: isDarkMode\r\n              ? '0 1px 3px rgba(0,0,0,0.3), 0 1px 2px rgba(0,0,0,0.24)'\r\n              : '0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.08)',\r\n          }}\r\n        />\r\n      )}\r\n      {/* Options */}\r\n      {options.map((opt, idx) => {\r\n        const isActive = opt.key === value;\r\n        return (\r\n          <button\r\n            key={opt.key}\r\n            role=\"tab\"\r\n            aria-selected={isActive}\r\n            disabled={opt.disabled}\r\n            onClick={() => !opt.disabled && onChange(opt.key)}\r\n            style={{\r\n              position: 'relative',\r\n              zIndex: 1,\r\n              flex: fullWidth ? 1 : undefined,\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              gap: 6,\r\n              background: 'transparent',\r\n              border: 'none',\r\n              cursor: opt.disabled ? 'not-allowed' : 'pointer',\r\n              padding: `0 ${paddingX}px`,\r\n              fontSize,\r\n              fontWeight: 500,\r\n              color: isActive\r\n                ? (isDarkMode ? '#1f2937' : '#1f2937')\r\n                : isDarkMode\r\n                ? 'rgba(255,255,255,0.70)'\r\n                : 'rgba(0,0,0,0.55)',\r\n              transition: 'color 200ms ease',\r\n              minWidth: 0,\r\n              whiteSpace: 'nowrap',\r\n              outline: 'none',\r\n            }}\r\n            ref={el => { btnRefs.current[idx] = el; }}\r\n            onFocus={(e) => {\r\n              const parent = containerRef.current;\r\n              if (parent) parent.style.boxShadow = isDarkMode\r\n                ? '0 0 0 2px rgba(54,144,206,.35)'\r\n                : '0 0 0 2px rgba(54,144,206,.25)';\r\n            }}\r\n            onBlur={(e) => {\r\n              const parent = containerRef.current;\r\n              if (parent && !parent.contains(e.relatedTarget as Node)) {\r\n                parent.style.boxShadow = 'none';\r\n              }\r\n            }}\r\n          >\r\n            <span>{opt.label}</span>\r\n            {typeof opt.badge !== 'undefined' && (\r\n              <span style={{\r\n                background: isActive\r\n                  ? (isDarkMode ? 'rgba(0,0,0,0.15)' : 'rgba(0,0,0,0.08)')\r\n                  : (isDarkMode\r\n                    ? 'rgba(255,255,255,0.15)'\r\n                    : 'rgba(0,0,0,0.06)'),\r\n                color: isActive\r\n                  ? (isDarkMode ? '#1f2937' : '#1f2937')\r\n                  : (isDarkMode ? 'rgba(255,255,255,0.8)' : 'rgba(0,0,0,0.65)'),\r\n                borderRadius: 8,\r\n                padding: '2px 6px',\r\n                fontSize: fontSize - 2,\r\n                fontWeight: 600,\r\n                lineHeight: 1.2,\r\n              }}>{opt.badge}</span>\r\n            )}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SegmentedControl;\r\n","import React from 'react';\r\nimport { SearchBox, Icon } from '@fluentui/react';\r\nimport { mergeStyles } from '@fluentui/react/lib/Styling';\r\nimport { useTheme } from '../../app/functionality/ThemeContext';\r\nimport { colours } from '../../app/styles/colours';\r\nimport SegmentedControl from './SegmentedControl';\r\nimport { sharedSearchBoxStyle } from '../../app/styles/FilterStyles';\r\n\r\n// Add spin animation CSS\r\nconst spinAnimation = `\r\n  @keyframes spin {\r\n    from { transform: rotate(0deg); }\r\n    to { transform: rotate(360deg); }\r\n  }\r\n`;\r\n\r\n// Inject CSS into head if not already present\r\nif (typeof document !== 'undefined' && !document.querySelector('#refresh-spin-animation')) {\r\n  const style = document.createElement('style');\r\n  style.id = 'refresh-spin-animation';\r\n  style.textContent = spinAnimation;\r\n  document.head.appendChild(style);\r\n}\r\n\r\nexport interface FilterOption {\r\n  key: string;\r\n  label: string;\r\n}\r\n\r\nexport interface FilterBannerProps {\r\n  // Primary filter (status/type) - can be React node or SegmentedControl props\r\n  primaryFilter?: React.ReactNode | {\r\n    value: string;\r\n    onChange: (value: string) => void;\r\n    options: FilterOption[];\r\n    ariaLabel: string;\r\n  };\r\n  \r\n  // Secondary filter (area/category) - can be React node or SegmentedControl props  \r\n  secondaryFilter?: React.ReactNode | {\r\n    value: string;\r\n    onChange: (value: string) => void;\r\n    options: FilterOption[];\r\n    ariaLabel: string;\r\n  };\r\n  \r\n  // Search functionality\r\n  search?: {\r\n    value: string;\r\n    onChange: (value: string) => void;\r\n    placeholder: string;\r\n  };\r\n  \r\n  // Refresh functionality\r\n  refresh?: {\r\n    onRefresh: () => void;\r\n    isLoading?: boolean;\r\n    nextUpdateTime?: string;\r\n    collapsible?: boolean;\r\n  };\r\n  \r\n  // Additional actions/controls\r\n  children?: React.ReactNode;\r\n  \r\n  // Styling options\r\n  className?: string;\r\n  sticky?: boolean;\r\n  topOffset?: number;\r\n  // Remove chrome (background/border/shadow) for embedding inside another banner\r\n  seamless?: boolean;\r\n  // Denser spacing for compact navigators\r\n  dense?: boolean;\r\n  // When true, show a collapsed search icon that expands on click/focus\r\n  collapsibleSearch?: boolean;\r\n}\r\n\r\n/**\r\n * Shared filter banner component for consistent styling across all tabs\r\n */\r\nconst FilterBanner: React.FC<FilterBannerProps> = React.memo(({\r\n  primaryFilter,\r\n  secondaryFilter,\r\n  search,\r\n  refresh,\r\n  children,\r\n  className,\r\n  sticky = true,\r\n  topOffset = 0,\r\n  seamless = false,\r\n  dense = false,\r\n  collapsibleSearch = false\r\n}) => {\r\n  const { isDarkMode } = useTheme();\r\n  const [searchOpen, setSearchOpen] = React.useState<boolean>(!collapsibleSearch || !!search?.value);\r\n  const [refreshOpen, setRefreshOpen] = React.useState<boolean>(!refresh?.collapsible);\r\n\r\n  const containerStyle = mergeStyles({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    gap: dense ? 6 : 12,\r\n    rowGap: dense ? 6 : 8,\r\n    padding: seamless\r\n      ? (dense ? '0' : '8px 12px')\r\n      : (dense ? '0' : '12px 20px'),\r\n    background: seamless ? 'transparent' : (isDarkMode \r\n      ? 'linear-gradient(135deg, rgba(31, 39, 50, 0.95) 0%, rgba(25, 32, 41, 0.98) 100%)'\r\n      : 'linear-gradient(135deg, rgba(255, 255, 255, 0.95) 0%, rgba(248, 250, 252, 0.98) 100%)'),\r\n    backdropFilter: seamless ? 'none' : 'blur(12px)',\r\n    WebkitBackdropFilter: seamless ? 'none' : 'blur(12px)',\r\n    borderBottom: seamless ? 'none' : (isDarkMode \r\n      ? '1px solid rgba(255, 255, 255, 0.08)' \r\n      : '1px solid rgba(0, 0, 0, 0.06)'),\r\n    boxShadow: seamless ? 'none' : (isDarkMode\r\n      ? '0 2px 8px rgba(0, 0, 0, 0.3), inset 0 1px 0 rgba(255, 255, 255, 0.05)'\r\n      : '0 2px 8px rgba(0, 0, 0, 0.08), inset 0 1px 0 rgba(255, 255, 255, 0.8)'),\r\n    fontFamily: 'Raleway, sans-serif',\r\n    flexWrap: 'wrap',\r\n  minHeight: dense ? 44 : 56,\r\n  // Center wrapped rows vertically within the banner for better balance\r\n  alignContent: 'center',\r\n    ...(sticky && {\r\n      position: 'sticky',\r\n      top: topOffset,\r\n      zIndex: 1000,\r\n    }),\r\n    selectors: {\r\n      '@media (max-width: 600px)': {\r\n        padding: '10px 16px',\r\n        gap: 8,\r\n        rowGap: 8,\r\n        flexDirection: 'column',\r\n        alignItems: 'stretch',\r\n      }\r\n    }\r\n  }, className);\r\n\r\n  const filtersContainerStyle = mergeStyles({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexWrap: 'wrap',\r\n    gap: 6,\r\n    rowGap: 6,\r\n    flex: '0 0 auto',\r\n  // Keep items centered within their row; when wrapping, center the row group\r\n  alignContent: 'center',\r\n    selectors: {\r\n      '@media (max-width: 600px)': {\r\n        width: '100%',\r\n        justifyContent: 'space-between',\r\n      }\r\n    }\r\n  });\r\n\r\n  const searchContainerStyle = mergeStyles({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginLeft: 'auto',\r\n    flex: '0 0 auto',\r\n    minWidth: collapsibleSearch && !searchOpen ? 0 : 240,\r\n    selectors: {\r\n      '@media (max-width: 900px)': {\r\n        marginLeft: 0,\r\n        flex: '1 0 auto',\r\n        minWidth: 'auto',\r\n      },\r\n      '@media (max-width: 600px)': {\r\n        width: '100%',\r\n        flex: '1 1 100%',\r\n      }\r\n    }\r\n  });\r\n\r\n  const actionsContainerStyle = mergeStyles({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexWrap: 'wrap',\r\n    gap: 6,\r\n    rowGap: 6,\r\n    flex: '0 0 auto',\r\n  alignContent: 'center',\r\n    selectors: {\r\n      '@media (max-width: 600px)': {\r\n        width: '100%',\r\n        justifyContent: 'center',\r\n      }\r\n    }\r\n  });\r\n\r\n  // Right-side cluster to keep search and refresh together on wrap\r\n  const rightClusterStyle = mergeStyles({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    gap: 8,\r\n    marginLeft: 'auto',\r\n    flex: '0 1 auto',\r\n    flexWrap: 'nowrap',\r\n    selectors: {\r\n      '@media (max-width: 900px)': {\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        justifyContent: 'space-between',\r\n        flexWrap: 'wrap',\r\n        gap: 8,\r\n      },\r\n      '@media (max-width: 600px)': {\r\n        gap: 8,\r\n      }\r\n    }\r\n  });\r\n\r\n  const refreshContainerStyle = mergeStyles({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flex: '0 0 auto',\r\n    selectors: {\r\n      '@media (max-width: 900px)': {\r\n        marginLeft: 0,\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className={containerStyle}>\r\n      {/* Primary and Secondary Filters */}\r\n      {(primaryFilter || secondaryFilter) && (\r\n        <div className={filtersContainerStyle}>\r\n          {primaryFilter && (\r\n            React.isValidElement(primaryFilter) ? primaryFilter : (\r\n              <SegmentedControl\r\n                id={`${(primaryFilter as any).ariaLabel.toLowerCase().replace(/\\s+/g, '-')}-filter`}\r\n                ariaLabel={(primaryFilter as any).ariaLabel}\r\n                value={(primaryFilter as any).value}\r\n                onChange={(primaryFilter as any).onChange}\r\n                options={(primaryFilter as any).options}\r\n              />\r\n            )\r\n          )}\r\n          {secondaryFilter && (\r\n            React.isValidElement(secondaryFilter) ? secondaryFilter : (\r\n              <SegmentedControl\r\n                id={`${(secondaryFilter as any).ariaLabel.toLowerCase().replace(/\\s+/g, '-')}-filter`}\r\n                ariaLabel={(secondaryFilter as any).ariaLabel}\r\n                value={(secondaryFilter as any).value}\r\n                onChange={(secondaryFilter as any).onChange}\r\n                options={(secondaryFilter as any).options}\r\n              />\r\n            )\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Additional Actions */}\r\n      {children && (\r\n        <div className={actionsContainerStyle}>\r\n          {children}\r\n        </div>\r\n      )}\r\n\r\n      {/* Right-side: Search + Refresh grouped to wrap together */}\r\n      {(search || refresh) && (\r\n        <div className={rightClusterStyle}>\r\n          {search && (\r\n            <div className={searchContainerStyle}>\r\n              {collapsibleSearch && !searchOpen && !search.value ? (\r\n                <button\r\n                  type=\"button\"\r\n                  aria-label=\"Open search\"\r\n                  onClick={() => setSearchOpen(true)}\r\n                  style={{\r\n                    display: 'inline-flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    width: 28,\r\n                    height: 28,\r\n                    borderRadius: 6,\r\n                    border: isDarkMode ? '1px solid rgba(255,255,255,0.12)' : '1px solid rgba(0,0,0,0.12)',\r\n                    background: 'transparent',\r\n                    cursor: 'pointer',\r\n                    color: isDarkMode ? '#E5E7EB' : '#0F172A'\r\n                  }}\r\n                >\r\n                  <span className=\"ms-Icon root\" aria-hidden=\"true\" style={{ fontFamily: 'FabricMDL2Icons', fontSize: 14 }}>\r\n                    \r\n                  </span>\r\n                </button>\r\n              ) : (\r\n                <SearchBox\r\n                  placeholder={search.placeholder}\r\n                  value={search.value}\r\n                  onChange={(_, newValue) => search.onChange(newValue || '')}\r\n                  onFocus={() => setSearchOpen(true)}\r\n                  onBlur={() => {\r\n                    if (collapsibleSearch && !search.value) setSearchOpen(false);\r\n                  }}\r\n                  styles={sharedSearchBoxStyle(isDarkMode)}\r\n                  iconProps={{ iconName: 'Search' }}\r\n                />\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {refresh && (\r\n            <div className={refreshContainerStyle}>\r\n              {refresh.collapsible && !refreshOpen ? (\r\n                <button\r\n                  type=\"button\"\r\n                  aria-label=\"Show refresh options\"\r\n                  onClick={() => setRefreshOpen(true)}\r\n                  disabled={refresh.isLoading}\r\n                  style={{\r\n                    display: 'inline-flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    width: 28,\r\n                    height: 28,\r\n                    borderRadius: 6,\r\n                    border: isDarkMode ? '1px solid rgba(255,255,255,0.12)' : '1px solid rgba(0,0,0,0.12)',\r\n                    background: 'transparent',\r\n                    cursor: refresh.isLoading ? 'not-allowed' : 'pointer',\r\n                    color: isDarkMode ? '#E5E7EB' : '#0F172A',\r\n                    opacity: refresh.isLoading ? 0.6 : 1\r\n                  }}\r\n                >\r\n                  <Icon\r\n                    iconName={refresh.isLoading ? \"Sync\" : \"Refresh\"}\r\n                    style={{ \r\n                      fontSize: 14,\r\n                      animation: refresh.isLoading ? 'spin 1s linear infinite' : 'none'\r\n                    }}\r\n                  />\r\n                </button>\r\n              ) : (\r\n                <div\r\n                  style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    gap: 8,\r\n                    padding: '4px 12px',\r\n                    height: 32,\r\n                    lineHeight: '24px',\r\n                    borderRadius: 16,\r\n                    backgroundColor: isDarkMode ? 'rgba(255,255,255,0.06)' : 'rgba(0,0,0,0.03)',\r\n                    border: isDarkMode ? '1px solid rgba(255,255,255,0.12)' : '1px solid rgba(0,0,0,0.08)',\r\n                    fontSize: 12,\r\n                    color: isDarkMode ? colours.dark.highlight : colours.light.highlight,\r\n                  }}\r\n                  onBlur={() => {\r\n                    if (refresh.collapsible) setRefreshOpen(false);\r\n                  }}\r\n                >\r\n                  <Icon\r\n                    iconName={refresh.isLoading ? \"Sync\" : \"Clock\"}\r\n                    style={{ \r\n                      fontSize: 14, \r\n                      color: isDarkMode ? colours.dark.highlight : colours.light.highlight,\r\n                      animation: refresh.isLoading ? 'spin 1s linear infinite' : 'none'\r\n                    }}\r\n                  />\r\n                  {refresh.nextUpdateTime && (\r\n                    <span style={{ fontSize: 11, fontWeight: 500 }}>\r\n                      Next: {refresh.nextUpdateTime}\r\n                    </span>\r\n                  )}\r\n                  <button\r\n                    onClick={refresh.onRefresh}\r\n                    disabled={refresh.isLoading}\r\n                    title=\"Refresh now\"\r\n                    style={{\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      gap: 4,\r\n                      padding: '4px 8px',\r\n                      border: isDarkMode ? '1px solid rgba(255,255,255,0.15)' : '1px solid rgba(0,0,0,0.1)',\r\n                      borderRadius: 4,\r\n                      backgroundColor: isDarkMode ? 'rgba(255,255,255,0.08)' : 'rgba(0,0,0,0.05)',\r\n                      color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                      fontSize: 11,\r\n                      fontWeight: 500,\r\n                      fontFamily: 'Raleway, sans-serif',\r\n                      cursor: refresh.isLoading ? 'not-allowed' : 'pointer',\r\n                      transition: '0.15s',\r\n                      opacity: refresh.isLoading ? 0.6 : 0.8,\r\n                    }}\r\n                  >\r\n                    <Icon\r\n                      iconName={refresh.isLoading ? \"Sync\" : \"Refresh\"}\r\n                      style={{ \r\n                        fontSize: 12,\r\n                        animation: refresh.isLoading ? 'spin 1s linear infinite' : 'none'\r\n                      }}\r\n                    />\r\n                    <span>Update Now</span>\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default FilterBanner;"],"names":["_ref","visible","message","type","loading","details","progress","icon","MessageBarType","success","error","warning","info","getTypeColor","_jsx","CSSTransition","in","timeout","classNames","unmountOnExit","children","_jsxs","style","position","bottom","right","maxWidth","minWidth","zIndex","background","borderRadius","boxShadow","border","overflow","fontFamily","height","width","transition","animation","padding","display","alignItems","gap","justifyContent","flexShrink","marginTop","Spinner","size","SpinnerSize","small","styles","root","circle","borderColor","Icon","iconName","getTypeIcon","fontSize","color","fontWeight","flex","lineHeight","marginBottom","sharedSearchBoxContainerStyle","isDarkMode","mergeStyles","sharedSearchBoxStyle","flexWrap","backgroundColor","colours","dark","inputBackground","outline","selectors","field","text","light","opacity","iconColor","marginLeft","value","onChange","options","ariaLabel","fullWidth","pill","id","useTheme","containerRef","useRef","btnRefs","thumbRect","setThumbRect","useState","left","activeIndex","findIndex","o","key","recalc","useCallback","container","current","activeBtn","c","getBoundingClientRect","b","Math","round","max","useLayoutEffect","window","addEventListener","removeEventListener","onKeyDown","e","idx","preventDefault","i","length","disabled","role","ref","tabIndex","userSelect","pointerEvents","top","map","opt","isActive","onClick","undefined","cursor","whiteSpace","el","onFocus","parent","onBlur","contains","relatedTarget","label","badge","document","querySelector","createElement","textContent","head","appendChild","React","primaryFilter","secondaryFilter","search","refresh","className","sticky","topOffset","seamless","dense","collapsibleSearch","searchOpen","setSearchOpen","refreshOpen","setRefreshOpen","collapsible","containerStyle","rowGap","backdropFilter","WebkitBackdropFilter","borderBottom","minHeight","alignContent","flexDirection","filtersContainerStyle","searchContainerStyle","actionsContainerStyle","rightClusterStyle","refreshContainerStyle","SegmentedControl","toLowerCase","replace","SearchBox","placeholder","_","newValue","iconProps","isLoading","highlight","nextUpdateTime","onRefresh","title"],"sourceRoot":""}