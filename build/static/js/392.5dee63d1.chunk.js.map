{"version":3,"file":"static/js/392.5dee63d1.chunk.js","mappings":"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","sources":["app/styles/FilterStyles.ts","tabs/matters/MatterLineItem.tsx","tabs/matters/MatterOverview.tsx","tabs/matters/Matters.tsx","components/filter/SegmentedControl.tsx","components/filter/FilterBanner.tsx","components/ToggleSwitch.tsx"],"sourcesContent":["// invisible change 3\r\n// src/app/styles/FilterStyles.ts\r\n\r\nimport { mergeStyles, IDropdownStyles } from '@fluentui/react';\r\nimport { colours } from './colours';\r\n\r\nexport const sharedSearchBoxContainerStyle = (isDarkMode: boolean) =>\r\n  mergeStyles({\r\n    position: 'relative',\r\n    width: '100%',\r\n    maxWidth: '300px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  });\r\n\r\nexport const sharedControlsContainerStyle = mergeStyles({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  gap: '10px',\r\n  flex: 1,\r\n  flexWrap: 'nowrap',\r\n});\r\n\r\nexport const sharedSearchBoxStyle = (isDarkMode: boolean) => ({\r\n  root: {\r\n    position: 'relative' as const,\r\n    backgroundColor: isDarkMode ? colours.dark.inputBackground : '#ffffff',\r\n    border: `1px solid ${isDarkMode ? 'rgba(255,255,255,0.12)' : 'rgba(0,0,0,0.12)'}`,\r\n    boxShadow: 'none',\r\n    borderRadius: '16px',\r\n    padding: '0',\r\n    width: '100%',\r\n    maxWidth: '300px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  height: '32px',\r\n    outline: 'none',\r\n    transition: 'border-color 0.15s ease',\r\n    selectors: {\r\n      ':focus': {\r\n        outline: 'none',\r\n        borderColor: isDarkMode ? 'rgba(255,255,255,0.24)' : 'rgba(0,0,0,0.24)',\r\n        boxShadow: 'none',\r\n      },\r\n      ':focus-within': {\r\n        outline: 'none',\r\n        borderColor: isDarkMode ? 'rgba(255,255,255,0.24)' : 'rgba(0,0,0,0.24)',\r\n        boxShadow: 'none',\r\n      },\r\n      ':hover': {\r\n        borderColor: isDarkMode ? 'rgba(255,255,255,0.18)' : 'rgba(0,0,0,0.18)',\r\n      },\r\n    },\r\n  },\r\n  field: {\r\n    backgroundColor: 'transparent',\r\n    border: 'none',\r\n    boxShadow: 'none !important',\r\n    borderRadius: '8px 8px 0 0',\r\n    padding: '0 12px',\r\n  height: '100%',\r\n  lineHeight: '32px',\r\n    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n    fontSize: '14px',\r\n    outline: 'none',\r\n    '::placeholder': {\r\n      color: isDarkMode ? '#aaaaaa' : '#888888',\r\n      opacity: 1,\r\n    },\r\n  },\r\n  icon: {\r\n    color: isDarkMode ? colours.dark.iconColor : colours.light.iconColor,\r\n    fontSize: '16px',\r\n    marginLeft: '8px',\r\n  },\r\n});\r\n\r\nexport const sharedToggleStyle = (isDarkMode: boolean) => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginBottom: 0,\r\n  },\r\n  label: {\r\n    marginRight: '10px',\r\n    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n  },\r\n});\r\n\r\nexport const sharedDropdownContainerStyle = (isDarkMode: boolean) =>\r\n  mergeStyles({\r\n    position: 'relative',\r\n    width: '100%',\r\n    maxWidth: '300px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  });\r\n\r\nexport const sharedDropdownStyles = (isDarkMode: boolean): Partial<IDropdownStyles> => ({\r\n  root: {\r\n    position: 'relative' as const,\r\n    width: '100%',\r\n    maxWidth: '300px',\r\n    height: '32px',\r\n    outline: 'none',\r\n    selectors: {\r\n      '&::after': {\r\n        content: '\"\"',\r\n        position: 'absolute' as const,\r\n        left: '50%',\r\n        bottom: '0',\r\n        height: '1px',\r\n        width: '100%',\r\n        backgroundColor: isDarkMode ? colours.dark.highlight : colours.highlight,\r\n        transform: 'translateX(-50%) scaleX(0)',\r\n        transformOrigin: 'center',\r\n        transition: 'transform 0.15s ease-out',\r\n      },\r\n      '&:hover::after': {\r\n        transform: 'translateX(-50%) scaleX(1)',\r\n      },\r\n      '&:focus-within::after': {\r\n        transform: 'translateX(-50%) scaleX(1)',\r\n      },\r\n    },\r\n  },\r\n  dropdown: {\r\n    backgroundColor: isDarkMode ? colours.dark.inputBackground : '#ffffff',\r\n    border: 'none',\r\n    boxShadow: 'none',\r\n    borderRadius: '8px 8px 0 0',\r\n    padding: '0',\r\n    height: '32px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  title: {\r\n    backgroundColor: 'transparent',\r\n    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n    fontSize: '13px',\r\n    height: '32px',\r\n    paddingLeft: '12px',\r\n    paddingRight: '36px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    border: 'none',\r\n    flexGrow: 1,\r\n    justifyContent: 'space-between',\r\n  },\r\n  caretDown: {\r\n    color: isDarkMode ? colours.dark.iconColor : colours.light.iconColor,\r\n    fontSize: '16px',\r\n    position: 'absolute',\r\n    right: '12px',\r\n    top: '50%',\r\n    transform: 'translateY(-50%)',\r\n    pointerEvents: 'none',\r\n  },\r\n});\r\n\r\nexport const sharedToggleButtonStyle = (isDarkMode: boolean) => ({\r\n  root: {\r\n    padding: '6px 12px',\r\n    borderRadius: '8px 8px 0 0',\r\n    backgroundColor: '#ffffff',\r\n    border: 'none',\r\n    color: isDarkMode ? colours.dark.text : '#000000',\r\n    transition: 'background 0.3s ease, box-shadow 0.3s ease',\r\n    transform: 'none !important',\r\n    outline: 'none !important',\r\n    height: '32px',\r\n    ':focus': {\r\n      outline: 'none !important',\r\n      border: 'none !important',\r\n      transform: 'none !important',\r\n    },\r\n    selectors: {\r\n      ':hover': {\r\n        background: `radial-gradient(circle at center, rgba(0,0,0,0) 0%, rgba(0,0,0,0.1) 100%), #ffffff !important`,\r\n        boxShadow: '0 0 8px rgba(0,0,0,0.1) !important',\r\n        transform: 'none !important',\r\n        outline: 'none !important',\r\n        border: 'none !important',\r\n      },\r\n      ':active': {\r\n        background: `radial-gradient(circle at center, rgba(0,0,0,0) 0%, rgba(0,0,0,0.15) 100%), #ffffff !important`,\r\n        boxShadow: '0 0 8px rgba(0,0,0,0.2) !important',\r\n        transform: 'none !important',\r\n        outline: 'none !important',\r\n        border: 'none !important',\r\n      },\r\n    },\r\n  },\r\n  label: {\r\n    color: isDarkMode ? colours.dark.text : '#000000 !important',\r\n    fontWeight: 'normal'\r\n  },\r\n});\r\n\r\n// New Style Added\r\nexport const sharedEditorStyle = (isDarkMode: boolean) =>\r\n  mergeStyles({\r\n    minHeight: '150px',\r\n    padding: '20px 20px 110px 20px',\r\n    borderRadius: '0',\r\n    border: `1px solid ${isDarkMode ? colours.dark.cardHover : colours.light.cardHover}`,\r\n    backgroundColor: isDarkMode ? colours.dark.sectionBackground : '#ffffff',\r\n    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n    fontSize: '14px',\r\n    overflowY: 'auto',\r\n    whiteSpace: 'pre-wrap',\r\n    outline: 'none',\r\n    position: 'relative',\r\n    selectors: {\r\n      ':focus-visible': {\r\n        borderColor: isDarkMode\r\n          ? colours.dark.cardHover\r\n          : colours.light.cardHover,\r\n        boxShadow: `inset 0 0 0 2px ${colours.cta}, inset 0 0 6px 3px ${colours.grey}`,\r\n      },\r\n      ':after': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        bottom: '20px',\r\n        left: '20px',\r\n        backgroundImage: 'url(\"https://helix-law.co.uk/wp-content/uploads/2024/03/HLRblue72.png\")',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'left bottom',\r\n        backgroundSize: '25%',\r\n        opacity: 0.2,\r\n        pointerEvents: 'none',\r\n        width: 'calc(100% - 20px)',\r\n        height: 'calc(100% - 20px)',\r\n        zIndex: 0,\r\n      },\r\n    },\r\n  });\r\n\r\n// New Style for Template Block Dropdowns\r\nexport const sharedOptionsDropdownStyles = (isDarkMode: boolean): Partial<IDropdownStyles> => ({\r\n  root: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: '32px',\r\n    outline: 'none',\r\n    selectors: {\r\n      '&::after': {\r\n        content: '\"\"',\r\n        position: 'absolute' as const,\r\n        left: '50%',\r\n        bottom: '0',\r\n        height: '1px',\r\n        width: '100%',\r\n        backgroundColor: isDarkMode ? colours.dark.highlight : colours.highlight,\r\n        transform: 'translateX(-50%) scaleX(0)',\r\n        transformOrigin: 'center',\r\n        transition: 'transform 0.15s ease-out',\r\n      },\r\n      '&:hover::after': {\r\n        transform: 'translateX(-50%) scaleX(1)',\r\n      },\r\n      '&:focus-within::after': {\r\n        transform: 'translateX(-50%) scaleX(1)',\r\n      },\r\n    },\r\n  },\r\n  dropdown: {\r\n    backgroundColor: isDarkMode ? colours.dark.grey : colours.grey,\r\n    border: 'none',\r\n    boxShadow: 'none',\r\n    borderRadius: '8px 8px 0 0',\r\n    padding: '0',\r\n    height: '32px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  title: {\r\n    backgroundColor: 'transparent',\r\n    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n    fontSize: '13px',\r\n    height: '32px',\r\n    paddingLeft: '12px',\r\n    paddingRight: '36px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    border: 'none',\r\n    justifyContent: 'space-between',\r\n  },\r\n  caretDown: {\r\n    color: isDarkMode ? colours.dark.iconColor : colours.light.iconColor,\r\n    fontSize: '16px',\r\n    position: 'absolute',\r\n    right: '12px',\r\n    top: '50%',\r\n    transform: 'translateY(-50%)',\r\n    pointerEvents: 'none',\r\n  },\r\n});\r\n","import { Text, Icon } from '@fluentui/react';\r\nimport { mergeStyles } from '@fluentui/react/lib/Styling';\r\nimport { NormalizedMatter } from '../../app/functionality/types';\r\nimport { useTheme } from '../../app/functionality/ThemeContext';\r\nimport { colours } from '../../app/styles/colours';\r\nimport React, { useState } from 'react';\r\n\r\n// Utility for copying text and showing feedback\r\nfunction useCopyToClipboard(timeout = 1200): [boolean, (text: string) => void] {\r\n    const [copied, setCopied] = useState(false);\r\n    const copy = (text: string) => {\r\n        if (navigator && navigator.clipboard) {\r\n            navigator.clipboard.writeText(text).then(() => {\r\n                setCopied(true);\r\n                setTimeout(() => setCopied(false), timeout);\r\n            });\r\n        }\r\n    };\r\n    return [copied, copy];\r\n}\r\n\r\ninterface CopyableTextProps {\r\n    value: string;\r\n    className?: string;\r\n    label?: string;\r\n}\r\n\r\nconst CopyableText: React.FC<CopyableTextProps> = ({ value, className, label }) => {\r\n    const [copied, copy] = useCopyToClipboard();\r\n    return (\r\n        <span\r\n            className={className}\r\n            title={copied ? `${label || 'Value'} copied!` : `Click to copy ${label || 'value'}`}\r\n            onClick={e => {\r\n                e.stopPropagation();\r\n                copy(value);\r\n            }}\r\n            style={{ display: 'inline-block', position: 'relative' }}\r\n        >\r\n            {value}\r\n            {copied && (\r\n                <span style={{\r\n                    position: 'absolute',\r\n                    left: '100%',\r\n                    top: 0,\r\n                    marginLeft: 8,\r\n                    fontSize: 12,\r\n                    color: '#43a047',\r\n                    background: '#fff',\r\n                    borderRadius: 3,\r\n                    padding: '2px 6px',\r\n                    boxShadow: '0 1px 4px rgba(0,0,0,0.08)',\r\n                    zIndex: 10,\r\n                }}>\r\n                    Copied!\r\n                </span>\r\n            )}\r\n        </span>\r\n    );\r\n};\r\n\r\ninterface MatterLineItemProps {\r\n    matter: NormalizedMatter;\r\n    onSelect: (matter: NormalizedMatter) => void;\r\n    isLast?: boolean;\r\n}\r\n\r\nconst formatDate = (dateStr: string): string => {\r\n    try {\r\n        return new Date(dateStr).toLocaleDateString('en-GB', {\r\n            day: '2-digit',\r\n            month: 'short',\r\n            year: 'numeric',\r\n        });\r\n    } catch {\r\n        return dateStr;\r\n    }\r\n};\r\n\r\nconst getAreaColor = (area: string): string => {\r\n    switch (area?.toLowerCase()) {\r\n        case 'commercial':\r\n            return colours.blue;\r\n        case 'construction':\r\n            return colours.orange;\r\n        case 'property':\r\n            return colours.green;\r\n        case 'employment':\r\n            return colours.yellow;\r\n        default:\r\n            return colours.cta;\r\n    }\r\n};\r\n\r\nconst MatterLineItem: React.FC<MatterLineItemProps> = ({ matter, onSelect, isLast }) => {\r\n    const { isDarkMode } = useTheme();\r\n\r\n    const handleClick = () => {\r\n        onSelect(matter);\r\n    };\r\n\r\n    const lineItemStyle = mergeStyles({\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: '8px 20px',\r\n        borderBottom: !isLast ? `1px solid ${isDarkMode ? 'rgba(255,255,255,0.06)' : 'rgba(0,0,0,0.04)'}` : 'none',\r\n        cursor: 'pointer',\r\n        transition: 'all 0.15s ease',\r\n        fontFamily: 'Raleway, sans-serif',\r\n        minHeight: '44px',\r\n        position: 'relative',\r\n        backgroundColor: 'transparent',\r\n        selectors: {\r\n            ':hover': {\r\n                backgroundColor: 'transparent',\r\n                transform: 'translateX(2px)',\r\n            },\r\n            ':active': {\r\n                transform: 'translateX(1px)',\r\n            },\r\n            '::before': {\r\n                content: '\"\"',\r\n                position: 'absolute',\r\n                left: 0,\r\n                top: 0,\r\n                bottom: 0,\r\n                width: 2,\r\n                background: getAreaColor(matter.practiceArea),\r\n                zIndex: 2,\r\n                height: '100%',\r\n                opacity: 0.6,\r\n                transition: 'all 0.15s ease',\r\n            },\r\n            ':hover::before': {\r\n                width: 3,\r\n                opacity: 1,\r\n            },\r\n        },\r\n    });\r\n\r\n    const mainContentStyle = mergeStyles({\r\n        flex: 1,\r\n        display: 'grid',\r\n        gridTemplateColumns: '2.5fr 1.2fr 1.2fr 1fr 120px',\r\n        alignItems: 'center',\r\n        gap: '16px',\r\n        width: '100%',\r\n    });\r\n\r\n    const clientNameStyle = mergeStyles({\r\n        fontWeight: '500',\r\n        fontSize: '14px',\r\n        color: isDarkMode ? colours.dark.text : colours.light.text,\r\n        marginBottom: '2px',\r\n        userSelect: 'text',\r\n        cursor: 'copy',\r\n        transition: 'color 0.2s',\r\n        ':hover': {\r\n            color: colours.highlight,\r\n        },\r\n    });\r\n\r\n    const matterNumberStyle = mergeStyles({\r\n        fontSize: '12px',\r\n        color: isDarkMode ? 'rgba(255,255,255,0.7)' : 'rgba(0,0,0,0.7)',\r\n        marginBottom: '1px',\r\n        fontWeight: '500',\r\n    });\r\n\r\n    const descriptionStyle = mergeStyles({\r\n        fontSize: '11px',\r\n        color: isDarkMode ? 'rgba(255,255,255,0.6)' : 'rgba(0,0,0,0.6)',\r\n        userSelect: 'text',\r\n        cursor: 'copy',\r\n        transition: 'color 0.2s',\r\n        fontWeight: '500',\r\n        ':hover': {\r\n            color: colours.highlight,\r\n        },\r\n    });\r\n\r\n    const metaStyle = mergeStyles({\r\n        fontSize: '13px',\r\n        color: isDarkMode ? colours.dark.text : colours.light.text,\r\n        fontWeight: '500',\r\n    });\r\n\r\n    const statusStyle = mergeStyles({\r\n        fontSize: '12px',\r\n        color: isDarkMode ? 'rgba(255,255,255,0.7)' : 'rgba(0,0,0,0.7)',\r\n        fontWeight: '500',\r\n    });\r\n\r\n    const dateStyle = mergeStyles({\r\n        fontSize: '12px',\r\n        color: isDarkMode ? colours.dark.text : colours.light.text,\r\n        fontWeight: '500',\r\n    });\r\n\r\n    const actionBadgeStyle = mergeStyles({\r\n        backgroundColor: isDarkMode ? 'rgba(255,255,255,0.08)' : 'rgba(0,0,0,0.06)',\r\n        color: isDarkMode ? 'rgba(255,255,255,0.6)' : 'rgba(0,0,0,0.6)',\r\n        border: 'none',\r\n        borderRadius: '16px',\r\n        padding: '4px 10px',\r\n        fontSize: '10px',\r\n        fontWeight: '600',\r\n        fontFamily: 'Raleway, sans-serif',\r\n        cursor: 'pointer',\r\n        transition: 'all 0.15s ease',\r\n        boxShadow: 'none',\r\n        height: '24px',\r\n        minWidth: '35px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        gap: '4px',\r\n        selectors: {\r\n            ':hover': {\r\n                backgroundColor: 'rgba(102, 170, 232, 0.15)',\r\n                color: colours.highlight,\r\n                transform: 'translateY(-0.5px)',\r\n            },\r\n            ':active': {\r\n                transform: 'translateY(0)',\r\n            },\r\n        },\r\n    });\r\n\r\n    const viewButtonStyle = mergeStyles({\r\n        backgroundColor: colours.highlight,\r\n        color: 'white',\r\n        border: 'none',\r\n        borderRadius: '16px',\r\n        padding: '4px 12px',\r\n        fontSize: '10px',\r\n        fontWeight: '600',\r\n        fontFamily: 'Raleway, sans-serif',\r\n        cursor: 'pointer',\r\n        transition: 'all 0.15s ease',\r\n        boxShadow: 'none',\r\n        height: '24px',\r\n        minWidth: '45px',\r\n        selectors: {\r\n            ':hover': {\r\n                backgroundColor: colours.blue,\r\n                transform: 'translateY(-0.5px)',\r\n            },\r\n            ':active': {\r\n                transform: 'translateY(0)',\r\n            },\r\n        },\r\n    });\r\n\r\n    return (\r\n        <div className={lineItemStyle} onClick={handleClick}>\r\n            {/* Main content grid */}\r\n            <div className={mainContentStyle}>\r\n                {/* Client & Matter Info */}\r\n                <div>\r\n                    <div>\r\n                        <CopyableText value={matter.clientName || 'Unknown Client'} className={clientNameStyle} label=\"Client Name\" />\r\n                    </div>\r\n                    <div className={matterNumberStyle}>{matter.displayNumber}</div>\r\n                    {matter.description && (\r\n                        <div>\r\n                            <CopyableText value={matter.description} className={descriptionStyle} label=\"Description\" />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                {/* Practice Area & Status */}\r\n                <div>\r\n                    <div className={metaStyle}>{matter.practiceArea || 'No Area'}</div>\r\n                    <div className={statusStyle} style={{ marginTop: '2px' }}>\r\n                        {matter.status || 'Unknown Status'}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Solicitor Info */}\r\n                <div>\r\n                    <div className={metaStyle}>\r\n                        {matter.responsibleSolicitor || 'Unassigned'}\r\n                    </div>\r\n                    {matter.originatingSolicitor && matter.originatingSolicitor !== matter.responsibleSolicitor && (\r\n                        <Text variant=\"small\" styles={{\r\n                            root: {\r\n                                color: isDarkMode ? 'rgba(255,255,255,0.6)' : 'rgba(0,0,0,0.6)',\r\n                                fontSize: '11px',\r\n                                fontWeight: '500',\r\n                                marginTop: '1px',\r\n                            }\r\n                        }}>\r\n                            Orig: {matter.originatingSolicitor}\r\n                        </Text>\r\n                    )}\r\n                </div>\r\n\r\n                {/* Date & Matter ID */}\r\n                <div>\r\n                    <div className={dateStyle}>\r\n                        {formatDate(matter.openDate)}\r\n                    </div>\r\n                    <Text variant=\"small\" styles={{\r\n                        root: {\r\n                            color: isDarkMode ? 'rgba(255,255,255,0.5)' : 'rgba(0,0,0,0.5)',\r\n                            fontSize: '10px',\r\n                            fontWeight: '500',\r\n                            marginTop: '1px',\r\n                        }\r\n                    }}>\r\n                        ID: {matter.matterId}\r\n                    </Text>\r\n                </div>\r\n\r\n                {/* Actions - All CTA Badges */}\r\n                <div style={{ display: 'flex', alignItems: 'center', gap: '6px', flexShrink: 0, marginRight: '16px' }}>\r\n                    <button className={viewButtonStyle}>\r\n                        View\r\n                    </button>\r\n                    \r\n                    {matter.clientPhone && (\r\n                        <button\r\n                            className={actionBadgeStyle}\r\n                            onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                window.location.href = `tel:${matter.clientPhone}`;\r\n                            }}\r\n                            title=\"Call client\"\r\n                        >\r\n                            <Icon iconName=\"Phone\" style={{ fontSize: '10px' }} />\r\n                        </button>\r\n                    )}\r\n\r\n                    {matter.clientEmail && (\r\n                        <button\r\n                            className={actionBadgeStyle}\r\n                            onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                window.location.href = `mailto:${matter.clientEmail}`;\r\n                            }}\r\n                            title=\"Email client\"\r\n                        >\r\n                            <Icon iconName=\"Mail\" style={{ fontSize: '10px' }} />\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MatterLineItem;\r\n","import React from 'react';\r\nimport { Stack, Text, Icon, Link, TooltipHost, Separator } from '@fluentui/react';\r\nimport type { NormalizedMatter, Transaction } from '../../app/functionality/types';\r\nimport { colours } from '../../app/styles/colours';\r\n\r\ninterface MatterOverviewProps {\r\n  matter: NormalizedMatter;\r\n  overviewData?: any;\r\n  outstandingData?: any;\r\n  complianceData?: any;\r\n  matterSpecificActivitiesData?: any;\r\n  onEdit?: () => void;\r\n  transactions?: Transaction[];\r\n}\r\n\r\nconst MatterOverview: React.FC<MatterOverviewProps> = ({ matter, overviewData, outstandingData }) => {\r\n  // Helpers\r\n  const fmt = (v?: string | null): string => (v && String(v).trim().length > 0 ? String(v) : '—');\r\n  const fmtDate = (v?: string | null): string => {\r\n    if (!v) return '—';\r\n    const d = new Date(v);\r\n    return isNaN(d.getTime()) ? '—' : d.toLocaleDateString();\r\n  };\r\n  const fmtCurrency = (n?: number | null): string => {\r\n    try {\r\n      const val = typeof n === 'number' && isFinite(n) ? n : 0;\r\n      return new Intl.NumberFormat('en-GB', { style: 'currency', currency: 'GBP', maximumFractionDigits: 2 }).format(val);\r\n    } catch {\r\n      return '£0.00';\r\n    }\r\n  };\r\n  const safeNumber = (v: unknown, fallback = 0): number => (typeof v === 'number' && isFinite(v) ? v : fallback);\r\n  const get = (obj: unknown, key: string): unknown => (obj && typeof obj === 'object' ? (obj as Record<string, unknown>)[key] : undefined);\r\n  const getInitials = (full?: string): string => {\r\n    const s = (full || '').trim();\r\n    if (!s) return '—';\r\n    const parts = s.split(/\\s+/).filter(Boolean);\r\n    if (parts.length === 1) return parts[0].slice(0, 2).toUpperCase();\r\n    return (parts[0][0] + parts[parts.length - 1][0]).toUpperCase();\r\n  };\r\n\r\n  // Derived metrics (fallbacks if not provided)\r\n  const billableAmount = safeNumber(get(overviewData, 'billableAmount'));\r\n  const billableHours = safeNumber(get(overviewData, 'billableHours'));\r\n  const nonBillableAmount = safeNumber(get(overviewData, 'nonBillableAmount'));\r\n  const nonBillableHours = safeNumber(get(overviewData, 'nonBillableHours'));\r\n  const outstandingBalance = safeNumber(\r\n    get(outstandingData, 'total_outstanding_balance') ?? get(outstandingData, 'due') ?? get(outstandingData, 'balance')\r\n  );\r\n  const clientFunds = safeNumber(get(overviewData, 'clientFunds'));\r\n  const totalAmount = billableAmount + nonBillableAmount;\r\n  const billablePct = totalAmount > 0 ? Math.round((billableAmount / totalAmount) * 100) : 0;\r\n\r\n  const clioUrl = (() => {\r\n    const dn = fmt(matter.displayNumber);\r\n    return dn && dn !== '—' ? `https://eu.app.clio.com/nc/#/matters/${encodeURIComponent(dn)}` : undefined;\r\n  })();\r\n\r\n  return (\r\n    <div style={{ padding: 20 }}>\r\n      {/* Header: Folder icon + Clio link with Display Number */}\r\n      <div style={{ display: 'flex', alignItems: 'center', gap: 8, marginBottom: 16 }}>\r\n        <Icon iconName=\"OpenFolderHorizontal\" styles={{ root: { fontSize: 20, color: colours.highlight } }} />\r\n        {clioUrl ? (\r\n          <Link href={clioUrl} target=\"_blank\">{fmt(matter.displayNumber)}</Link>\r\n        ) : (\r\n          <Text>{fmt(matter.displayNumber)}</Text>\r\n        )}\r\n      </div>\r\n\r\n      {/* Main two-column layout */}\r\n      <div style={{ display: 'grid', gridTemplateColumns: '2fr 1fr', gap: 16 }}>\r\n        {/* Left column */}\r\n        <div>\r\n          {/* Metrics row: WIP, Outstanding Balance, Client Funds */}\r\n          <div style={{ display: 'flex', gap: 12, flexWrap: 'wrap' }}>\r\n            <div style={{ background: 'white', borderRadius: 10, border: `1px solid ${colours.light.border}`, padding: 12, minWidth: 260, flex: 1 }}>\r\n              <span style={{ color: colours.light.subText, fontSize: 12, display: 'block', marginBottom: 8 }}>Work in Progress</span>\r\n              <div style={{ display: 'grid', gap: 6 }}>\r\n                <div style={{ display: 'flex', gap: 10, alignItems: 'baseline', flexWrap: 'wrap' }}>\r\n                  <span style={{ color: colours.light.subText }}>Billable</span>\r\n                  <span style={{ fontWeight: 600 }}>{fmtCurrency(billableAmount)}</span>\r\n                  <span style={{ color: colours.light.subText }}>Hours: {billableHours.toFixed(2)}h</span>\r\n                </div>\r\n                <div style={{ display: 'flex', gap: 10, alignItems: 'baseline', flexWrap: 'wrap' }}>\r\n                  <span style={{ color: colours.light.subText }}>Non-Billable</span>\r\n                  <span style={{ fontWeight: 600 }}>{fmtCurrency(nonBillableAmount)}</span>\r\n                  <span style={{ color: colours.light.subText }}>Hours: {nonBillableHours.toFixed(2)}h</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div style={{ background: 'white', borderRadius: 10, border: `1px solid ${colours.light.border}`, padding: 12, minWidth: 220, flex: 1 }}>\r\n              <span style={{ color: colours.light.subText, fontSize: 12, display: 'block', marginBottom: 8 }}>Outstanding Balance</span>\r\n              <div style={{ display: 'flex', gap: 8, alignItems: 'baseline' }}>\r\n                <span style={{ color: colours.light.subText, minWidth: 80 }}>Balance</span>\r\n                <span style={{ fontWeight: 600 }}>{fmtCurrency(outstandingBalance)}</span>\r\n              </div>\r\n            </div>\r\n            <div style={{ background: 'white', borderRadius: 10, border: `1px solid ${colours.light.border}`, padding: 12, minWidth: 220, flex: 1 }}>\r\n              <span style={{ color: colours.light.subText, fontSize: 12, display: 'block', marginBottom: 8 }}>Client Funds (Matter)</span>\r\n              <div style={{ display: 'flex', gap: 8, alignItems: 'baseline' }}>\r\n                <span style={{ color: colours.light.subText, minWidth: 80 }}>Funds</span>\r\n                <span style={{ fontWeight: 600 }}>{fmtCurrency(clientFunds)}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Time section */}\r\n          <div style={{ marginTop: 16, background: 'white', borderRadius: 10, border: `1px solid ${colours.light.border}`, padding: 12 }}>\r\n            <span style={{ color: colours.light.subText, fontSize: 12, display: 'block', marginBottom: 6 }}>Time</span>\r\n            <Stack tokens={{ childrenGap: 6 }}>\r\n              <span style={{ color: colours.light.subText }}>Billable: {fmtCurrency(billableAmount)} ({billableHours.toFixed(2)}h)</span>\r\n              <span style={{ color: colours.light.subText }}>Non-Billable: {fmtCurrency(nonBillableAmount)} ({nonBillableHours.toFixed(2)}h)</span>\r\n              <div style={{ position: 'relative', height: 12, borderRadius: 10, background: '#ccc', overflow: 'hidden', marginTop: 8 }}>\r\n                <div style={{ position: 'absolute', inset: 0, width: `${billablePct}%`, backgroundColor: '#16a34a' }} />\r\n              </div>\r\n              <div style={{ display: 'flex', justifyContent: 'space-between', fontSize: 12 }}>\r\n                <span style={{ color: colours.light.subText }}>Billable</span>\r\n                <span style={{ color: colours.light.subText }}>Non-Billable</span>\r\n              </div>\r\n            </Stack>\r\n          </div>\r\n\r\n          {/* Matter Details */}\r\n          <div style={{ marginTop: 16, background: 'white', borderRadius: 10, border: `1px solid ${colours.light.border}`, padding: 12 }}>\r\n            <span style={{ color: colours.light.subText, fontWeight: 600 }}>Matter Details</span>\r\n            <Separator styles={{ root: { margin: '8px 0' } }} />\r\n            <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: 12 }}>\r\n              <div style={{ display: 'flex', gap: 8 }}>\r\n                <span style={{ color: colours.light.subText, minWidth: 110 }}>Practice Area:</span>\r\n                <span>{fmt(matter.practiceArea)}</span>\r\n              </div>\r\n              <div style={{ display: 'flex', gap: 8 }}>\r\n                <span style={{ color: colours.light.subText, minWidth: 110 }}>Description:</span>\r\n                <span>{fmt(matter.description)}</span>\r\n              </div>\r\n              <div style={{ display: 'flex', gap: 8 }}>\r\n                <span style={{ color: colours.light.subText, minWidth: 110 }}>Opponent:</span>\r\n                <span>{fmt(matter.opponent as string)}</span>\r\n              </div>\r\n            </div>\r\n            <Separator styles={{ root: { margin: '8px 0' } }} />\r\n            <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: 12 }}>\r\n              <div style={{ display: 'flex', gap: 8 }}>\r\n                <span style={{ color: colours.light.subText, minWidth: 110 }}>Open Date:</span>\r\n                <span>{fmtDate(matter.openDate)}</span>\r\n              </div>\r\n              <div style={{ display: 'flex', gap: 8 }}>\r\n                <span style={{ color: colours.light.subText, minWidth: 110 }}>CCL Date:</span>\r\n                <span>{fmtDate(matter.cclDate as any)}</span>\r\n              </div>\r\n            </div>\r\n            <Separator styles={{ root: { margin: '8px 0' } }} />\r\n            <div style={{ display: 'flex', gap: 12, flexWrap: 'wrap' }}>\r\n              <TooltipHost content={`${fmt(matter.originatingSolicitor)} (Originating)`}>\r\n                <div style={{ width: 34, height: 34, borderRadius: '50%', background: '#0ea5e9', color: 'white', display: 'flex', alignItems: 'center', justifyContent: 'center', fontWeight: 700 }}>\r\n                  {getInitials(matter.originatingSolicitor)}\r\n                </div>\r\n              </TooltipHost>\r\n              <TooltipHost content={`${fmt(matter.responsibleSolicitor)} (Responsible)`}>\r\n                <div style={{ width: 34, height: 34, borderRadius: '50%', background: '#22c55e', color: 'white', display: 'flex', alignItems: 'center', justifyContent: 'center', fontWeight: 700 }}>\r\n                  {getInitials(matter.responsibleSolicitor)}\r\n                </div>\r\n              </TooltipHost>\r\n              <TooltipHost content={`${fmt(matter.supervisingPartner)} (Supervising)`}>\r\n                <div style={{ width: 34, height: 34, borderRadius: '50%', background: '#f59e0b', color: 'white', display: 'flex', alignItems: 'center', justifyContent: 'center', fontWeight: 700 }}>\r\n                  {getInitials(matter.supervisingPartner)}\r\n                </div>\r\n              </TooltipHost>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Right column: Client */}\r\n        <div>\r\n          <div style={{ background: 'white', borderRadius: 10, border: `1px solid ${colours.light.border}`, padding: 12 }}>\r\n            <span style={{ color: colours.light.subText, fontWeight: 600 }}>Client</span>\r\n            <Separator styles={{ root: { margin: '8px 0' } }} />\r\n            <div style={{ display: 'flex', alignItems: 'center', gap: 8 }}>\r\n              <Icon iconName=\"Contact\" />\r\n              <Link href=\"#\" target=\"_blank\">{fmt(matter.clientName)}</Link>\r\n              <span style={{ color: colours.light.subText }}>{fmt(matter.clientEmail)}</span>\r\n            </div>\r\n            <Separator styles={{ root: { margin: '8px 0' } }} />\r\n            <div style={{ display: 'flex', alignItems: 'center', gap: 12, flexWrap: 'wrap' }}>\r\n              <TooltipHost content=\"Call Client\">\r\n                <div role=\"button\" aria-label=\"Call Client\" title=\"Call Client\" style={{ width: 32, height: 32, borderRadius: 8, background: colours.light.background, display: 'flex', alignItems: 'center', justifyContent: 'center', cursor: 'pointer' }}>\r\n                  <Icon iconName=\"Phone\" />\r\n                </div>\r\n              </TooltipHost>\r\n              <TooltipHost content=\"Email Client\">\r\n                <div role=\"button\" aria-label=\"Email Client\" title=\"Email Client\" style={{ width: 32, height: 32, borderRadius: 8, background: colours.light.background, display: 'flex', alignItems: 'center', justifyContent: 'center', cursor: 'pointer' }}>\r\n                  <Icon iconName=\"Mail\" />\r\n                </div>\r\n              </TooltipHost>\r\n              <div style={{ marginLeft: 'auto', display: 'flex', gap: 12 }}>\r\n                <span style={{ color: colours.light.subText }}>{fmt(matter.clientPhone)}</span>\r\n                <span style={{ color: colours.light.subText }}>{fmt(matter.clientEmail)}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MatterOverview;\r\n","import React, { useMemo, useState, useEffect } from 'react';\r\nimport { Stack, Text, Spinner, SpinnerSize, MessageBar, MessageBarType, IconButton, mergeStyles, Icon } from '@fluentui/react';\r\nimport ThemedSpinner from '../../components/ThemedSpinner';\r\nimport ToggleSwitch from '../../components/ToggleSwitch';\r\nimport SegmentedControl from '../../components/filter/SegmentedControl';\r\nimport FilterBanner from '../../components/filter/FilterBanner';\r\nimport { NormalizedMatter, UserData } from '../../app/functionality/types';\r\nimport {\r\n  filterMattersByStatus,\r\n  filterMattersByArea,\r\n  filterMattersByRole,\r\n  applyAdminFilter,\r\n  getUniquePracticeAreas\r\n} from '../../utils/matterNormalization';\r\nimport { isAdminUser } from '../../app/admin';\r\nimport MatterLineItem from './MatterLineItem';\r\nimport MatterOverview from './MatterOverview';\r\nimport { colours } from '../../app/styles/colours';\r\nimport { useTheme } from '../../app/functionality/ThemeContext';\r\nimport { useNavigatorActions } from '../../app/functionality/NavigatorContext';\r\n// Debugger removed: MatterApiDebugger was deleted\r\n\r\ninterface MattersProps {\r\n  matters: NormalizedMatter[];\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  userData: UserData[] | null;\r\n}\r\n\r\nconst Matters: React.FC<MattersProps> = ({ matters, isLoading, error, userData }) => {\r\n  const { isDarkMode } = useTheme();\r\n  const { setContent } = useNavigatorActions();\r\n  const [selected, setSelected] = useState<NormalizedMatter | null>(null);\r\n  const [searchTerm, setSearchTerm] = useState<string>('');\r\n  const [activeFilter, setActiveFilter] = useState<string>('Active');\r\n  const [activeAreaFilter, setActiveAreaFilter] = useState<string>('All');\r\n  const [activeRoleFilter, setActiveRoleFilter] = useState<string>('All');\r\n  // Debug inspector removed with MatterApiDebugger\r\n  // Scope & dataset selection\r\n  const [scope, setScope] = useState<'mine' | 'all'>('mine');\r\n  const [useNewData, setUseNewData] = useState<boolean>(false); // Admin-only toggle to view VNet (new) data\r\n  const [twoColumn, setTwoColumn] = useState<boolean>(false);\r\n\r\n  const userFullName = userData?.[0]?.FullName?.toLowerCase();\r\n  const userRole = userData?.[0]?.Role?.toLowerCase();\r\n  const isAdmin = isAdminUser(userData?.[0] || null);\r\n  const isLocalhost = (typeof window !== 'undefined') && (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1');\r\n\r\n\r\n  // Apply all filters in sequence\r\n  const filtered = useMemo(() => {\r\n    let result = matters;\r\n\r\n    // Decide dataset and scope to construct allowed sources\r\n    const effectiveUseNew = isAdmin ? useNewData : false;\r\n    const allowedSources = new Set<string>([\r\n      ...(effectiveUseNew ? ['vnet_direct'] : ['legacy_all', 'legacy_user']),\r\n    ]);\r\n    if (allowedSources.size > 0) {\r\n      result = result.filter((m) => allowedSources.has(m.dataSource));\r\n    } else {\r\n      // If no sources selected, show nothing\r\n      result = [];\r\n    }\r\n\r\n    // Apply admin filter next\r\n  // - If scope is 'all' and user is admin => show everyone\r\n  // - Otherwise => show only user's matters\r\n  const effectiveShowEveryone = scope === 'all' && isAdmin;\r\n  result = applyAdminFilter(result, effectiveShowEveryone, userFullName || '', userRole || '');\r\n\r\n    // For New data + Mine, restrict to Responsible solicitor only\r\n    if (effectiveUseNew && scope === 'mine') {\r\n      result = result.filter(m => m.role === 'responsible' || m.role === 'both');\r\n    }\r\n\r\n    // Apply status filter\r\n    // Admin-only extra option: 'Matter Requests' filters by originalStatus === 'MatterRequest'\r\n    if (activeFilter === 'Matter Requests') {\r\n      result = result.filter(m => (m.originalStatus || '').toLowerCase() === 'matterrequest');\r\n    } else if (activeFilter !== 'All') {\r\n      result = filterMattersByStatus(result, activeFilter.toLowerCase() as any);\r\n    } else {\r\n    }\r\n\r\n    // Apply area filter\r\n    result = filterMattersByArea(result, activeAreaFilter);\r\n\r\n    // Apply role filter\r\n    if (activeRoleFilter !== 'All') {\r\n      const allowedRoles = activeRoleFilter === 'Responsible' ? ['responsible'] :\r\n                          activeRoleFilter === 'Originating' ? ['originating'] :\r\n                          ['responsible', 'originating'];\r\n      result = filterMattersByRole(result, allowedRoles as any);\r\n    }\r\n\r\n    // Apply search term filter\r\n    if (searchTerm.trim()) {\r\n      const term = searchTerm.toLowerCase();\r\n      result = result.filter((m) =>\r\n        m.clientName?.toLowerCase().includes(term) ||\r\n        m.displayNumber?.toLowerCase().includes(term) ||\r\n        m.description?.toLowerCase().includes(term) ||\r\n        m.practiceArea?.toLowerCase().includes(term)\r\n      );\r\n    }\r\n\r\n    return result;\r\n  }, [\r\n    matters,\r\n    userFullName,\r\n    userRole,\r\n    activeFilter,\r\n    activeAreaFilter,\r\n    activeRoleFilter,\r\n    searchTerm,\r\n    scope,\r\n    useNewData,\r\n    isAdmin,\r\n  ]);\r\n\r\n  // Dataset count (post-source selection only, before other filters)\r\n  const datasetCount = useMemo(() => {\r\n    const effectiveUseNew = isAdmin ? useNewData : false;\r\n    const allowedSources = new Set<string>([\r\n      ...(effectiveUseNew ? ['vnet_direct'] : ['legacy_all', 'legacy_user']),\r\n    ]);\r\n    return matters.filter(m => allowedSources.has(m.dataSource)).length;\r\n  }, [matters, useNewData, isAdmin]);\r\n\r\n  // Pre-compute scope counts for a compact scope control with badges\r\n  const scopeCounts = useMemo(() => {\r\n    const effectiveUseNew = isAdmin ? useNewData : false;\r\n    const allowedSources = new Set<string>([\r\n      ...(effectiveUseNew ? ['vnet_direct'] : ['legacy_all', 'legacy_user']),\r\n    ]);\r\n\r\n    // Base after sources\r\n    let base = matters.filter(m => allowedSources.has(m.dataSource));\r\n\r\n    // Apply status filter\r\n    if (activeFilter === 'Matter Requests') {\r\n      base = base.filter(m => (m.originalStatus || '').toLowerCase() === 'matterrequest');\r\n    } else if (activeFilter !== 'All') {\r\n      base = filterMattersByStatus(base, activeFilter.toLowerCase() as any);\r\n    }\r\n\r\n    // Apply area filter\r\n    base = filterMattersByArea(base, activeAreaFilter);\r\n\r\n    // Apply role filter\r\n    if (activeRoleFilter !== 'All') {\r\n      const allowedRoles = activeRoleFilter === 'Responsible' ? ['responsible'] :\r\n                          activeRoleFilter === 'Originating' ? ['originating'] :\r\n                          ['responsible', 'originating'];\r\n      base = filterMattersByRole(base, allowedRoles as any);\r\n    }\r\n\r\n    // Apply search\r\n    if (searchTerm.trim()) {\r\n      const term = searchTerm.toLowerCase();\r\n      base = base.filter((m) =>\r\n        m.clientName?.toLowerCase().includes(term) ||\r\n        m.displayNumber?.toLowerCase().includes(term) ||\r\n        m.description?.toLowerCase().includes(term) ||\r\n        m.practiceArea?.toLowerCase().includes(term)\r\n      );\r\n    }\r\n\r\n    // Counts per scope\r\n    const mineList = (() => {\r\n      let arr = applyAdminFilter(base, false, userFullName || '', userRole || '');\r\n      if (effectiveUseNew) {\r\n        arr = arr.filter(m => m.role === 'responsible' || m.role === 'both');\r\n      }\r\n      return arr;\r\n    })();\r\n\r\n    const allList = applyAdminFilter(base, true, userFullName || '', userRole || '');\r\n\r\n    return {\r\n      mine: mineList.length,\r\n      all: allList.length,\r\n    };\r\n  }, [\r\n    matters,\r\n    useNewData,\r\n    isAdmin,\r\n    activeFilter,\r\n    activeAreaFilter,\r\n    activeRoleFilter,\r\n    searchTerm,\r\n    userFullName,\r\n    userRole,\r\n  ]);\r\n\r\n  // Get unique practice areas for filtering\r\n  const availableAreas = useMemo(() => {\r\n    return getUniquePracticeAreas(matters);\r\n  }, [matters]);\r\n\r\n  // No auto-toggle for admins; let Luke/Alex choose when to see everyone's matters.\r\n\r\n  // Set up navigation content with filter bar\r\n  useEffect(() => {\r\n    if (!selected) {\r\n      console.log('🔄 Setting new FilterBanner content for Matters');\r\n      const filterOptions = isAdmin ? ['All', 'Active', 'Closed', 'Requests'] : ['All', 'Active', 'Closed'];\r\n      setContent(\r\n        <FilterBanner\r\n          seamless\r\n          dense\r\n          primaryFilter={{\r\n            value: activeFilter,\r\n            onChange: setActiveFilter,\r\n            options: filterOptions.map(o => ({ key: o === 'Requests' ? 'Matter Requests' : o, label: o })),\r\n            ariaLabel: \"Filter matters by status\"\r\n          }}\r\n          secondaryFilter={{\r\n            value: activeRoleFilter,\r\n            onChange: setActiveRoleFilter,\r\n            options: ['All','Responsible','Originating'].map(o => ({ key: o, label: o })),\r\n            ariaLabel: \"Filter matters by role\"\r\n          }}\r\n          search={{\r\n            value: searchTerm,\r\n            onChange: setSearchTerm,\r\n            placeholder: \"Search…\"\r\n          }}\r\n        >\r\n          {/* Area dropdown - scalable for many areas */}\r\n          {availableAreas.length > 1 && (\r\n            <div style={{ display: 'flex', alignItems: 'center', gap: 6 }}>\r\n              <span style={{ fontSize: 11, fontWeight: 500, color: isDarkMode ? colours.dark.text : colours.light.text }}>Area:</span>\r\n              <select\r\n                value={activeAreaFilter}\r\n                onChange={(e) => setActiveAreaFilter(e.target.value)}\r\n                style={{\r\n                  padding: '4px 10px',\r\n                  borderRadius: 10,\r\n                  border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n                  background: isDarkMode ? colours.dark.cardBackground : colours.light.cardBackground,\r\n                  color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                  fontSize: 12,\r\n                  fontFamily: 'Raleway, sans-serif',\r\n                  minWidth: '120px'\r\n                }}\r\n              >\r\n                <option value=\"All\">All Areas</option>\r\n                {availableAreas.map((area) => (\r\n                  <option key={area} value={area}>{area}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          )}\r\n\r\n          {/* Scope + Layout (moved out of admin panel) */}\r\n          <div style={{ display: 'flex', alignItems: 'center', gap: 6, transform: 'scale(0.96)', transformOrigin: 'left center' }}>\r\n            <div style={{ display: 'flex', alignItems: 'center', gap: 6 }}>\r\n              <span style={{ fontSize: 11, fontWeight: 500, color: isDarkMode ? colours.dark.text : colours.light.text }}>Scope:</span>\r\n              <SegmentedControl\r\n                id=\"matters-scope-seg\"\r\n                ariaLabel=\"Scope mine or all\"\r\n                value={scope}\r\n                onChange={(k) => setScope(k as 'mine' | 'all')}\r\n                options={[\r\n                  { key: 'mine', label: 'Mine', badge: scopeCounts.mine },\r\n                  { key: 'all', label: 'All', badge: scopeCounts.all, disabled: !isAdmin }\r\n                ]}\r\n              />\r\n            </div>\r\n            <div style={{ width: 1, height: 18, background: 'rgba(0,0,0,0.12)' }} />\r\n            <div style={{ display: 'flex', alignItems: 'center', gap: 6 }}>\r\n              <span style={{ fontSize: 11, fontWeight: 500, color: isDarkMode ? colours.dark.text : colours.light.text }}>Layout:</span>\r\n              <SegmentedControl\r\n                id=\"matters-layout-seg\"\r\n                ariaLabel=\"Toggle layout one or two columns\"\r\n                value={twoColumn ? 'two' : 'one'}\r\n                onChange={(k) => setTwoColumn(k === 'two')}\r\n                options={[\r\n                  { key: 'one', label: '1' },\r\n                  { key: 'two', label: '2' }\r\n                ]}\r\n              />\r\n            </div>\r\n          </div>\r\n          {/* Admin controls (debug + data toggle) for admin or localhost */}\r\n          {(isAdmin || isLocalhost) && (\r\n            <div style={{ display: 'flex', alignItems: 'center', gap: 6, marginLeft: 6 }}>\r\n              <div\r\n                style={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  gap: 8,\r\n                  padding: '2px 8px',\r\n                  height: 32,\r\n                  borderRadius: 10,\r\n                  background: isDarkMode ? '#5a4a12' : colours.highlightYellow,\r\n                  border: isDarkMode ? '1px solid #806c1d' : '1px solid #e2c56a',\r\n                  boxShadow: '0 1px 2px rgba(0,0,0,0.15)',\r\n                  fontSize: 10,\r\n                  fontWeight: 600,\r\n                  color: isDarkMode ? '#ffe9a3' : '#5d4700'\r\n                }}\r\n                title=\"Admin Debugger (alex, luke, cass only)\"\r\n              >\r\n                <span style={{ fontSize: 10, fontWeight: 600, color: isDarkMode ? '#ffe9a3' : '#5d4700', marginRight: 4 }}>\r\n                  Admin Only\r\n                </span>\r\n                <span style={{ fontSize: 10, whiteSpace: 'nowrap' }}>Showing {filtered.length}/{datasetCount}</span>\r\n                <div style={{ width: 1, height: 16, background: 'rgba(0,0,0,0.2)' }} />\r\n                {/* Debugger button removed */}\r\n                <ToggleSwitch\r\n                  id=\"matters-new-data-toggle\"\r\n                  checked={useNewData}\r\n                  onChange={(v) => setUseNewData(v)}\r\n                  size=\"sm\"\r\n                  onText=\"New\"\r\n                  offText=\"Legacy\"\r\n                  ariaLabel=\"Toggle dataset between legacy and new\"\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </FilterBanner>\r\n      );\r\n    } else {\r\n      setContent(\r\n        <div style={{\r\n          backgroundColor: isDarkMode ? colours.dark.sectionBackground : colours.light.sectionBackground,\r\n          boxShadow: isDarkMode ? '0 2px 4px rgba(0,0,0,0.4)' : '0 2px 4px rgba(0,0,0,0.1)',\r\n          borderTop: isDarkMode ? '1px solid rgba(255,255,255,0.1)' : '1px solid rgba(0,0,0,0.05)',\r\n          padding: '0 24px',\r\n          display: 'flex',\r\n          flexDirection: 'row',\r\n          gap: '8px',\r\n          alignItems: 'center',\r\n          height: '48px',\r\n          position: 'sticky',\r\n          top: '48px',\r\n          zIndex: 999,\r\n        }}>\r\n          <IconButton\r\n            iconProps={{ iconName: 'ChevronLeft' }}\r\n            onClick={() => setSelected(null)}\r\n            styles={{\r\n              root: {\r\n                width: 32,\r\n                height: 32,\r\n                borderRadius: 0,\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                backgroundColor: isDarkMode ? colours.dark.sectionBackground : '#f3f3f3',\r\n                boxShadow: '0 1px 2px rgba(0,0,0,0.1)',\r\n                marginRight: 8,\r\n              }\r\n            }}\r\n            title=\"Back\"\r\n            ariaLabel=\"Back\"\r\n          />\r\n          <Text variant=\"mediumPlus\" styles={{\r\n            root: {\r\n              fontWeight: '600',\r\n              color: isDarkMode ? colours.dark.text : colours.light.text,\r\n              fontFamily: 'Raleway, sans-serif',\r\n            }\r\n          }}>\r\n            Matter Details\r\n          </Text>\r\n        </div>\r\n      );\r\n    }\r\n    return () => setContent(null);\r\n  }, [\r\n    setContent,\r\n    selected,\r\n    isDarkMode,\r\n    activeFilter,\r\n    activeAreaFilter,\r\n    availableAreas,\r\n    searchTerm,\r\n  scope,\r\n  useNewData,\r\n    activeRoleFilter,\r\n    filtered.length,\r\n    datasetCount,\r\n    isAdmin,\r\n    isLocalhost,\r\n    twoColumn,\r\n  ]);\r\n\r\n  if (selected) {\r\n    return (\r\n      <div style={{ padding: 20 }}>\r\n        <MatterOverview matter={selected} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className={containerStyle(isDarkMode)}>\r\n        <div style={{ \r\n          display: 'flex', \r\n          justifyContent: 'center', \r\n          alignItems: 'center', \r\n          height: '200px' \r\n        }}>\r\n          <ThemedSpinner label=\"Loading matters...\" size={SpinnerSize.medium} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className={containerStyle(isDarkMode)}>\r\n        <div style={{ padding: '20px' }}>\r\n          <MessageBar messageBarType={MessageBarType.error}>{error}</MessageBar>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (filtered.length === 0 && !isLoading && !error) {\r\n    return (\r\n      <div className={containerStyle(isDarkMode)}>\r\n        <div style={{\r\n          backgroundColor: 'transparent',\r\n          borderRadius: '12px',\r\n          padding: '60px 40px',\r\n          textAlign: 'center',\r\n          boxShadow: 'none',\r\n        }}>\r\n          <Icon\r\n            iconName=\"Search\"\r\n            styles={{\r\n              root: {\r\n                fontSize: '48px',\r\n                color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n                marginBottom: '20px',\r\n              },\r\n            }}\r\n          />\r\n          <Text\r\n            variant=\"xLarge\"\r\n            styles={{\r\n              root: {\r\n                color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                fontFamily: 'Raleway, sans-serif',\r\n                fontWeight: '600',\r\n                marginBottom: '8px',\r\n              },\r\n            }}\r\n          >\r\n            No matters found\r\n          </Text>\r\n          <Text\r\n            variant=\"medium\"\r\n            styles={{\r\n              root: {\r\n                color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n                fontFamily: 'Raleway, sans-serif',\r\n              },\r\n            }}\r\n          >\r\n            Try adjusting your search criteria or filters\r\n          </Text>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={containerStyle(isDarkMode)}>\r\n      <section className=\"page-section\">\r\n        <Stack\r\n          tokens={{ childrenGap: 0 }}\r\n          styles={{\r\n            root: {\r\n              backgroundColor: isDarkMode \r\n                ? colours.dark.sectionBackground \r\n                : colours.light.sectionBackground,\r\n              padding: '16px',\r\n              borderRadius: 0,\r\n              boxShadow: isDarkMode\r\n                ? `0 4px 12px ${colours.dark.border}`\r\n                : `0 4px 12px ${colours.light.border}`,\r\n              width: '100%',\r\n              fontFamily: 'Raleway, sans-serif',\r\n            },\r\n          }}\r\n        >\r\n          {/* Connected List Items (supports 1-col / 2-col) */}\r\n          <div\r\n            className={twoColumn ? 'two-col-grid' : undefined}\r\n            style={{\r\n              display: twoColumn ? 'grid' : 'flex',\r\n              flexDirection: twoColumn ? undefined : 'column',\r\n              gap: twoColumn ? '12px' : '0px',\r\n              padding: 0,\r\n              margin: 0,\r\n              backgroundColor: 'transparent',\r\n              gridTemplateColumns: twoColumn ? 'repeat(2, minmax(0, 1fr))' : undefined,\r\n              width: '100%',\r\n              transition: 'grid-template-columns .25s ease',\r\n            }}\r\n          >\r\n            {/* Inject responsive fallback style once */}\r\n            {twoColumn && typeof document !== 'undefined' && !document.getElementById('mattersTwoColStyles') && (\r\n              (() => {\r\n                const styleEl = document.createElement('style');\r\n                styleEl.id = 'mattersTwoColStyles';\r\n                styleEl.textContent = '@media (max-width: 860px){.two-col-grid{display:flex!important;flex-direction:column!important;}}';\r\n                document.head.appendChild(styleEl);\r\n                return null;\r\n              })()\r\n            )}\r\n            {filtered.map((m, idx) => (\r\n              <MatterLineItem\r\n                key={m.matterId || idx}\r\n                matter={m}\r\n                onSelect={setSelected}\r\n                isLast={idx === filtered.length - 1}\r\n              />\r\n            ))}\r\n          </div>\r\n        </Stack>\r\n      </section>\r\n\r\n      {/* Debugger removed */}\r\n    </div>\r\n  );\r\n\r\n  function containerStyle(dark: boolean) {\r\n    return mergeStyles({\r\n      backgroundColor: dark ? colours.dark.background : colours.light.background,\r\n      minHeight: '100vh',\r\n      boxSizing: 'border-box',\r\n      color: dark ? colours.light.text : colours.dark.text,\r\n    });\r\n  }\r\n};\r\n\r\nexport default Matters;","import React, { useRef, useLayoutEffect, useState, useCallback } from 'react';\r\nimport { useTheme } from '../../app/functionality/ThemeContext';\r\nimport { colours } from '../../app/styles/colours';\r\n\r\nexport interface SegmentedOption {\r\n  key: string;\r\n  label: string;\r\n  badge?: number | string; // optional count / indicator\r\n  disabled?: boolean;\r\n}\r\n\r\ninterface SegmentedControlProps {\r\n  value: string;\r\n  onChange: (key: string) => void;\r\n  options: SegmentedOption[];\r\n  size?: 'sm' | 'md';\r\n  ariaLabel?: string;\r\n  fullWidth?: boolean;\r\n  pill?: boolean;\r\n  id?: string;\r\n  style?: React.CSSProperties;\r\n}\r\n\r\n/**\r\n * Apple-style segmented control with clean aesthetics and proper spacing\r\n */\r\nconst SegmentedControl: React.FC<SegmentedControlProps> = ({\r\n  value,\r\n  onChange,\r\n  options,\r\n  size = 'sm',\r\n  ariaLabel,\r\n  fullWidth = false,\r\n  pill = true,\r\n  id,\r\n  style,\r\n}) => {\r\n  const { isDarkMode } = useTheme();\r\n  const height = size === 'sm' ? 28 : 34;\r\n  const fontSize = size === 'sm' ? 12 : 13;\r\n  const paddingX = 14;\r\n\r\n  const containerRef = useRef<HTMLDivElement | null>(null);\r\n  const btnRefs = useRef<(HTMLButtonElement | null)[]>([]);\r\n  const [thumbRect, setThumbRect] = useState<{ left: number; width: number }>({ left: 4, width: 0 });\r\n\r\n  const activeIndex = options.findIndex((o) => o.key === value);\r\n\r\n  const recalc = useCallback(() => {\r\n    const container = containerRef.current;\r\n    const activeBtn = btnRefs.current[activeIndex];\r\n    if (container && activeBtn) {\r\n      const c = container.getBoundingClientRect();\r\n      const b = activeBtn.getBoundingClientRect();\r\n  // Align left to container padding (4px) without double-adding; maintain 4px inset on both sides\r\n  const left = Math.round(b.left - c.left);\r\n  const width = Math.max(0, Math.round(b.width));\r\n  setThumbRect({ left, width });\r\n    }\r\n  }, [activeIndex]);\r\n\r\n  useLayoutEffect(() => {\r\n    recalc();\r\n  }, [recalc, activeIndex, options, value, size]);\r\n\r\n  useLayoutEffect(() => {\r\n    window.addEventListener('resize', recalc);\r\n    return () => window.removeEventListener('resize', recalc);\r\n  }, [recalc]);\r\n\r\n  const onKeyDown = useCallback(\r\n    (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n      const idx = options.findIndex((o) => o.key === value);\r\n      if (idx < 0) return;\r\n      if (e.key === 'ArrowRight') {\r\n        e.preventDefault();\r\n        for (let i = idx + 1; i < options.length; i++) {\r\n          if (!options[i].disabled) {\r\n            onChange(options[i].key);\r\n            break;\r\n          }\r\n        }\r\n      } else if (e.key === 'ArrowLeft') {\r\n        e.preventDefault();\r\n        for (let i = idx - 1; i >= 0; i--) {\r\n          if (!options[i].disabled) {\r\n            onChange(options[i].key);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [options, onChange, value]\r\n  );\r\n\r\n  return (\r\n    <div\r\n      id={id}\r\n      role=\"tablist\"\r\n      aria-label={ariaLabel}\r\n      ref={containerRef}\r\n      tabIndex={0}\r\n      onKeyDown={onKeyDown}\r\n      style={{\r\n        display: 'flex',\r\n        position: 'relative',\r\n        background: isDarkMode\r\n          ? 'rgba(255,255,255,0.06)'\r\n          : 'rgba(0,0,0,0.04)',\r\n        borderRadius: pill ? height / 2 : 10,\r\n        padding: 4,\r\n        height,\r\n        fontFamily: 'Raleway, sans-serif',\r\n        userSelect: 'none',\r\n        overflow: 'hidden',\r\n        width: fullWidth ? '100%' : 'auto',\r\n        boxShadow: 'none',\r\n        ...style,\r\n      }}\r\n    >\r\n      {/* Apple-style thumb with matching inner radius (outer radius - padding) */}\r\n      {activeIndex >= 0 && (\r\n        <span\r\n          aria-hidden=\"true\"\r\n          style={{\r\n            pointerEvents: 'none',\r\n            position: 'absolute',\r\n            top: 4,\r\n            height: Math.max(0, height - 8),\r\n            left: thumbRect.left,\r\n            width: thumbRect.width,\r\n            background: '#FFFFFF',\r\n            borderRadius: pill ? (height - 8) / 2 : 8,\r\n            transition:\r\n              'left 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94), width 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94)',\r\n            boxShadow: isDarkMode\r\n              ? '0 1px 3px rgba(0,0,0,0.3), 0 1px 2px rgba(0,0,0,0.24)'\r\n              : '0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.08)',\r\n          }}\r\n        />\r\n      )}\r\n      {/* Options */}\r\n      {options.map((opt, idx) => {\r\n        const isActive = opt.key === value;\r\n        return (\r\n          <button\r\n            key={opt.key}\r\n            role=\"tab\"\r\n            aria-selected={isActive}\r\n            disabled={opt.disabled}\r\n            onClick={() => !opt.disabled && onChange(opt.key)}\r\n            style={{\r\n              position: 'relative',\r\n              zIndex: 1,\r\n              flex: fullWidth ? 1 : undefined,\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              gap: 6,\r\n              background: 'transparent',\r\n              border: 'none',\r\n              cursor: opt.disabled ? 'not-allowed' : 'pointer',\r\n              padding: `0 ${paddingX}px`,\r\n              fontSize,\r\n              fontWeight: 500,\r\n              color: isActive\r\n                ? (isDarkMode ? '#1f2937' : '#1f2937')\r\n                : isDarkMode\r\n                ? 'rgba(255,255,255,0.70)'\r\n                : 'rgba(0,0,0,0.55)',\r\n              transition: 'color 200ms ease',\r\n              minWidth: 0,\r\n              whiteSpace: 'nowrap',\r\n              outline: 'none',\r\n            }}\r\n            ref={el => { btnRefs.current[idx] = el; }}\r\n            onFocus={(e) => {\r\n              const parent = containerRef.current;\r\n              if (parent) parent.style.boxShadow = isDarkMode\r\n                ? '0 0 0 2px rgba(54,144,206,.35)'\r\n                : '0 0 0 2px rgba(54,144,206,.25)';\r\n            }}\r\n            onBlur={(e) => {\r\n              const parent = containerRef.current;\r\n              if (parent && !parent.contains(e.relatedTarget as Node)) {\r\n                parent.style.boxShadow = 'none';\r\n              }\r\n            }}\r\n          >\r\n            <span>{opt.label}</span>\r\n            {typeof opt.badge !== 'undefined' && (\r\n              <span style={{\r\n                background: isActive\r\n                  ? (isDarkMode ? 'rgba(0,0,0,0.15)' : 'rgba(0,0,0,0.08)')\r\n                  : (isDarkMode\r\n                    ? 'rgba(255,255,255,0.15)'\r\n                    : 'rgba(0,0,0,0.06)'),\r\n                color: isActive\r\n                  ? (isDarkMode ? '#1f2937' : '#1f2937')\r\n                  : (isDarkMode ? 'rgba(255,255,255,0.8)' : 'rgba(0,0,0,0.65)'),\r\n                borderRadius: 8,\r\n                padding: '2px 6px',\r\n                fontSize: fontSize - 2,\r\n                fontWeight: 600,\r\n                lineHeight: 1.2,\r\n              }}>{opt.badge}</span>\r\n            )}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SegmentedControl;\r\n","import React from 'react';\r\nimport { SearchBox, Icon } from '@fluentui/react';\r\nimport { mergeStyles } from '@fluentui/react/lib/Styling';\r\nimport { useTheme } from '../../app/functionality/ThemeContext';\r\nimport { colours } from '../../app/styles/colours';\r\nimport SegmentedControl from './SegmentedControl';\r\nimport { sharedSearchBoxStyle } from '../../app/styles/FilterStyles';\r\n\r\n// Add spin animation CSS\r\nconst spinAnimation = `\r\n  @keyframes spin {\r\n    from { transform: rotate(0deg); }\r\n    to { transform: rotate(360deg); }\r\n  }\r\n`;\r\n\r\n// Inject CSS into head if not already present\r\nif (typeof document !== 'undefined' && !document.querySelector('#refresh-spin-animation')) {\r\n  const style = document.createElement('style');\r\n  style.id = 'refresh-spin-animation';\r\n  style.textContent = spinAnimation;\r\n  document.head.appendChild(style);\r\n}\r\n\r\nexport interface FilterOption {\r\n  key: string;\r\n  label: string;\r\n}\r\n\r\nexport interface FilterBannerProps {\r\n  // Primary filter (status/type) - can be React node or SegmentedControl props\r\n  primaryFilter?: React.ReactNode | {\r\n    value: string;\r\n    onChange: (value: string) => void;\r\n    options: FilterOption[];\r\n    ariaLabel: string;\r\n  };\r\n  \r\n  // Secondary filter (area/category) - can be React node or SegmentedControl props  \r\n  secondaryFilter?: React.ReactNode | {\r\n    value: string;\r\n    onChange: (value: string) => void;\r\n    options: FilterOption[];\r\n    ariaLabel: string;\r\n  };\r\n  \r\n  // Search functionality\r\n  search?: {\r\n    value: string;\r\n    onChange: (value: string) => void;\r\n    placeholder: string;\r\n  };\r\n  \r\n  // Refresh functionality\r\n  refresh?: {\r\n    onRefresh: () => void;\r\n    isLoading?: boolean;\r\n    nextUpdateTime?: string;\r\n    collapsible?: boolean;\r\n  };\r\n  \r\n  // Additional actions/controls\r\n  children?: React.ReactNode;\r\n  \r\n  // Styling options\r\n  className?: string;\r\n  sticky?: boolean;\r\n  topOffset?: number;\r\n  // Remove chrome (background/border/shadow) for embedding inside another banner\r\n  seamless?: boolean;\r\n  // Denser spacing for compact navigators\r\n  dense?: boolean;\r\n  // When true, show a collapsed search icon that expands on click/focus\r\n  collapsibleSearch?: boolean;\r\n}\r\n\r\n/**\r\n * Shared filter banner component for consistent styling across all tabs\r\n */\r\nconst FilterBanner: React.FC<FilterBannerProps> = React.memo(({\r\n  primaryFilter,\r\n  secondaryFilter,\r\n  search,\r\n  refresh,\r\n  children,\r\n  className,\r\n  sticky = true,\r\n  topOffset = 0,\r\n  seamless = false,\r\n  dense = false,\r\n  collapsibleSearch = false\r\n}) => {\r\n  const { isDarkMode } = useTheme();\r\n  const [searchOpen, setSearchOpen] = React.useState<boolean>(!collapsibleSearch || !!search?.value);\r\n  const [refreshOpen, setRefreshOpen] = React.useState<boolean>(!refresh?.collapsible);\r\n\r\n  const containerStyle = mergeStyles({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    gap: dense ? 6 : 12,\r\n    rowGap: dense ? 6 : 8,\r\n    padding: seamless\r\n      ? (dense ? '0' : '8px 12px')\r\n      : (dense ? '0' : '12px 20px'),\r\n    background: seamless ? 'transparent' : (isDarkMode \r\n      ? 'linear-gradient(135deg, rgba(31, 39, 50, 0.95) 0%, rgba(25, 32, 41, 0.98) 100%)'\r\n      : 'linear-gradient(135deg, rgba(255, 255, 255, 0.95) 0%, rgba(248, 250, 252, 0.98) 100%)'),\r\n    backdropFilter: seamless ? 'none' : 'blur(12px)',\r\n    WebkitBackdropFilter: seamless ? 'none' : 'blur(12px)',\r\n    borderBottom: seamless ? 'none' : (isDarkMode \r\n      ? '1px solid rgba(255, 255, 255, 0.08)' \r\n      : '1px solid rgba(0, 0, 0, 0.06)'),\r\n    boxShadow: seamless ? 'none' : (isDarkMode\r\n      ? '0 2px 8px rgba(0, 0, 0, 0.3), inset 0 1px 0 rgba(255, 255, 255, 0.05)'\r\n      : '0 2px 8px rgba(0, 0, 0, 0.08), inset 0 1px 0 rgba(255, 255, 255, 0.8)'),\r\n    fontFamily: 'Raleway, sans-serif',\r\n    flexWrap: 'wrap',\r\n  minHeight: dense ? 44 : 56,\r\n  // Center wrapped rows vertically within the banner for better balance\r\n  alignContent: 'center',\r\n    ...(sticky && {\r\n      position: 'sticky',\r\n      top: topOffset,\r\n      zIndex: 1000,\r\n    }),\r\n    selectors: {\r\n      '@media (max-width: 600px)': {\r\n        padding: '10px 16px',\r\n        gap: 8,\r\n        rowGap: 8,\r\n        flexDirection: 'column',\r\n        alignItems: 'stretch',\r\n      }\r\n    }\r\n  }, className);\r\n\r\n  const filtersContainerStyle = mergeStyles({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexWrap: 'wrap',\r\n    gap: 6,\r\n    rowGap: 6,\r\n    flex: '0 0 auto',\r\n  // Keep items centered within their row; when wrapping, center the row group\r\n  alignContent: 'center',\r\n    selectors: {\r\n      '@media (max-width: 600px)': {\r\n        width: '100%',\r\n        justifyContent: 'space-between',\r\n      }\r\n    }\r\n  });\r\n\r\n  const searchContainerStyle = mergeStyles({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginLeft: 'auto',\r\n    flex: '0 0 auto',\r\n    minWidth: collapsibleSearch && !searchOpen ? 0 : 240,\r\n    selectors: {\r\n      '@media (max-width: 900px)': {\r\n        marginLeft: 0,\r\n        flex: '1 0 auto',\r\n        minWidth: 'auto',\r\n      },\r\n      '@media (max-width: 600px)': {\r\n        width: '100%',\r\n        flex: '1 1 100%',\r\n      }\r\n    }\r\n  });\r\n\r\n  const actionsContainerStyle = mergeStyles({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexWrap: 'wrap',\r\n    gap: 6,\r\n    rowGap: 6,\r\n    flex: '0 0 auto',\r\n  alignContent: 'center',\r\n    selectors: {\r\n      '@media (max-width: 600px)': {\r\n        width: '100%',\r\n        justifyContent: 'center',\r\n      }\r\n    }\r\n  });\r\n\r\n  // Right-side cluster to keep search and refresh together on wrap\r\n  const rightClusterStyle = mergeStyles({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    gap: 8,\r\n    marginLeft: 'auto',\r\n    flex: '0 1 auto',\r\n    flexWrap: 'nowrap',\r\n    selectors: {\r\n      '@media (max-width: 900px)': {\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        justifyContent: 'space-between',\r\n        flexWrap: 'wrap',\r\n        gap: 8,\r\n      },\r\n      '@media (max-width: 600px)': {\r\n        gap: 8,\r\n      }\r\n    }\r\n  });\r\n\r\n  const refreshContainerStyle = mergeStyles({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flex: '0 0 auto',\r\n    selectors: {\r\n      '@media (max-width: 900px)': {\r\n        marginLeft: 0,\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className={containerStyle}>\r\n      {/* Primary and Secondary Filters */}\r\n      {(primaryFilter || secondaryFilter) && (\r\n        <div className={filtersContainerStyle}>\r\n          {primaryFilter && (\r\n            React.isValidElement(primaryFilter) ? primaryFilter : (\r\n              <SegmentedControl\r\n                id={`${(primaryFilter as any).ariaLabel.toLowerCase().replace(/\\s+/g, '-')}-filter`}\r\n                ariaLabel={(primaryFilter as any).ariaLabel}\r\n                value={(primaryFilter as any).value}\r\n                onChange={(primaryFilter as any).onChange}\r\n                options={(primaryFilter as any).options}\r\n              />\r\n            )\r\n          )}\r\n          {secondaryFilter && (\r\n            React.isValidElement(secondaryFilter) ? secondaryFilter : (\r\n              <SegmentedControl\r\n                id={`${(secondaryFilter as any).ariaLabel.toLowerCase().replace(/\\s+/g, '-')}-filter`}\r\n                ariaLabel={(secondaryFilter as any).ariaLabel}\r\n                value={(secondaryFilter as any).value}\r\n                onChange={(secondaryFilter as any).onChange}\r\n                options={(secondaryFilter as any).options}\r\n              />\r\n            )\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Additional Actions */}\r\n      {children && (\r\n        <div className={actionsContainerStyle}>\r\n          {children}\r\n        </div>\r\n      )}\r\n\r\n      {/* Right-side: Search + Refresh grouped to wrap together */}\r\n      {(search || refresh) && (\r\n        <div className={rightClusterStyle}>\r\n          {search && (\r\n            <div className={searchContainerStyle}>\r\n              {collapsibleSearch && !searchOpen && !search.value ? (\r\n                <button\r\n                  type=\"button\"\r\n                  aria-label=\"Open search\"\r\n                  onClick={() => setSearchOpen(true)}\r\n                  style={{\r\n                    display: 'inline-flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    width: 28,\r\n                    height: 28,\r\n                    borderRadius: 6,\r\n                    border: isDarkMode ? '1px solid rgba(255,255,255,0.12)' : '1px solid rgba(0,0,0,0.12)',\r\n                    background: 'transparent',\r\n                    cursor: 'pointer',\r\n                    color: isDarkMode ? '#E5E7EB' : '#0F172A'\r\n                  }}\r\n                >\r\n                  <span className=\"ms-Icon root\" aria-hidden=\"true\" style={{ fontFamily: 'FabricMDL2Icons', fontSize: 14 }}>\r\n                    \r\n                  </span>\r\n                </button>\r\n              ) : (\r\n                <SearchBox\r\n                  placeholder={search.placeholder}\r\n                  value={search.value}\r\n                  onChange={(_, newValue) => search.onChange(newValue || '')}\r\n                  onFocus={() => setSearchOpen(true)}\r\n                  onBlur={() => {\r\n                    if (collapsibleSearch && !search.value) setSearchOpen(false);\r\n                  }}\r\n                  styles={sharedSearchBoxStyle(isDarkMode)}\r\n                  iconProps={{ iconName: 'Search' }}\r\n                />\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {refresh && (\r\n            <div className={refreshContainerStyle}>\r\n              {refresh.collapsible && !refreshOpen ? (\r\n                <button\r\n                  type=\"button\"\r\n                  aria-label=\"Show refresh options\"\r\n                  onClick={() => setRefreshOpen(true)}\r\n                  disabled={refresh.isLoading}\r\n                  style={{\r\n                    display: 'inline-flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    width: 28,\r\n                    height: 28,\r\n                    borderRadius: 6,\r\n                    border: isDarkMode ? '1px solid rgba(255,255,255,0.12)' : '1px solid rgba(0,0,0,0.12)',\r\n                    background: 'transparent',\r\n                    cursor: refresh.isLoading ? 'not-allowed' : 'pointer',\r\n                    color: isDarkMode ? '#E5E7EB' : '#0F172A',\r\n                    opacity: refresh.isLoading ? 0.6 : 1\r\n                  }}\r\n                >\r\n                  <Icon\r\n                    iconName={refresh.isLoading ? \"Sync\" : \"Refresh\"}\r\n                    style={{ \r\n                      fontSize: 14,\r\n                      animation: refresh.isLoading ? 'spin 1s linear infinite' : 'none'\r\n                    }}\r\n                  />\r\n                </button>\r\n              ) : (\r\n                <div\r\n                  style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    gap: 8,\r\n                    padding: '4px 12px',\r\n                    height: 32,\r\n                    lineHeight: '24px',\r\n                    borderRadius: 16,\r\n                    backgroundColor: isDarkMode ? 'rgba(255,255,255,0.06)' : 'rgba(0,0,0,0.03)',\r\n                    border: isDarkMode ? '1px solid rgba(255,255,255,0.12)' : '1px solid rgba(0,0,0,0.08)',\r\n                    fontSize: 12,\r\n                    color: isDarkMode ? colours.dark.highlight : colours.light.highlight,\r\n                  }}\r\n                  onBlur={() => {\r\n                    if (refresh.collapsible) setRefreshOpen(false);\r\n                  }}\r\n                >\r\n                  <Icon\r\n                    iconName={refresh.isLoading ? \"Sync\" : \"Clock\"}\r\n                    style={{ \r\n                      fontSize: 14, \r\n                      color: isDarkMode ? colours.dark.highlight : colours.light.highlight,\r\n                      animation: refresh.isLoading ? 'spin 1s linear infinite' : 'none'\r\n                    }}\r\n                  />\r\n                  {refresh.nextUpdateTime && (\r\n                    <span style={{ fontSize: 11, fontWeight: 500 }}>\r\n                      Next: {refresh.nextUpdateTime}\r\n                    </span>\r\n                  )}\r\n                  <button\r\n                    onClick={refresh.onRefresh}\r\n                    disabled={refresh.isLoading}\r\n                    title=\"Refresh now\"\r\n                    style={{\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      gap: 4,\r\n                      padding: '4px 8px',\r\n                      border: isDarkMode ? '1px solid rgba(255,255,255,0.15)' : '1px solid rgba(0,0,0,0.1)',\r\n                      borderRadius: 4,\r\n                      backgroundColor: isDarkMode ? 'rgba(255,255,255,0.08)' : 'rgba(0,0,0,0.05)',\r\n                      color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                      fontSize: 11,\r\n                      fontWeight: 500,\r\n                      fontFamily: 'Raleway, sans-serif',\r\n                      cursor: refresh.isLoading ? 'not-allowed' : 'pointer',\r\n                      transition: '0.15s',\r\n                      opacity: refresh.isLoading ? 0.6 : 0.8,\r\n                    }}\r\n                  >\r\n                    <Icon\r\n                      iconName={refresh.isLoading ? \"Sync\" : \"Refresh\"}\r\n                      style={{ \r\n                        fontSize: 12,\r\n                        animation: refresh.isLoading ? 'spin 1s linear infinite' : 'none'\r\n                      }}\r\n                    />\r\n                    <span>Update Now</span>\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default FilterBanner;","import React, { useCallback } from 'react';\r\nimport { useTheme } from '../app/functionality/ThemeContext';\r\nimport { colours } from '../app/styles/colours';\r\n\r\nexport interface ToggleSwitchProps {\r\n  checked: boolean;\r\n  onChange: (checked: boolean) => void;\r\n  id?: string;\r\n  disabled?: boolean;\r\n  onText?: string; // optional inline text when ON\r\n  offText?: string; // optional inline text when OFF\r\n  size?: 'sm' | 'md';\r\n  ariaLabel?: string; // a11y label if no visible text\r\n  title?: string;\r\n  style?: React.CSSProperties;\r\n}\r\n\r\n/**\r\n * Accessible, theme‑aware toggle switch (iOS style) for boolean state.\r\n * Renders a button with role=\"switch\" and keyboard support (Space / Enter).\r\n */\r\nconst ToggleSwitch: React.FC<ToggleSwitchProps> = ({\r\n  checked,\r\n  onChange,\r\n  id,\r\n  disabled = false,\r\n  onText,\r\n  offText,\r\n  size = 'md',\r\n  ariaLabel,\r\n  title,\r\n  style,\r\n}) => {\r\n  const { isDarkMode } = useTheme();\r\n\r\n  const trackHeight = size === 'sm' ? 18 : 22;\r\n  const trackWidth = size === 'sm' ? 36 : 44;\r\n  const knobSize = size === 'sm' ? 14 : 18;\r\n  const padding = (trackHeight - knobSize) / 2;\r\n\r\n  const handleToggle = useCallback(() => {\r\n    if (disabled) return;\r\n    onChange(!checked);\r\n  }, [disabled, checked, onChange]);\r\n\r\n  const handleKey = useCallback((e: React.KeyboardEvent<HTMLButtonElement>) => {\r\n    if (e.key === ' ' || e.key === 'Enter') {\r\n      e.preventDefault();\r\n      handleToggle();\r\n    }\r\n  }, [handleToggle]);\r\n\r\n  // Force consistent blue highlight (ignore CTA red)\r\n  const onColour = colours.highlight;\r\n  const offColour = isDarkMode ? 'rgba(255,255,255,0.22)' : 'rgba(0,0,0,0.22)';\r\n  const focusRing = isDarkMode ? '0 0 0 3px rgba(255,255,255,0.25)' : '0 0 0 3px rgba(0,0,0,0.15)';\r\n\r\n  return (\r\n    <button\r\n      id={id}\r\n      type=\"button\"\r\n      role=\"switch\"\r\n      aria-checked={checked}\r\n      aria-label={ariaLabel}\r\n      disabled={disabled}\r\n      title={title}\r\n      onClick={handleToggle}\r\n      onKeyDown={handleKey}\r\n      style={{\r\n        position: 'relative',\r\n        display: 'inline-flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        width: trackWidth + (onText || offText ? (size === 'sm' ? 42 : 52) : 0),\r\n        minWidth: trackWidth,\r\n        height: trackHeight,\r\n        padding: 0,\r\n        margin: 0,\r\n        border: 'none',\r\n        background: 'transparent',\r\n        cursor: disabled ? 'not-allowed' : 'pointer',\r\n        fontFamily: 'Raleway, sans-serif',\r\n        fontSize: size === 'sm' ? 11 : 12,\r\n        color: isDarkMode ? colours.dark.text : colours.light.text,\r\n        gap: 6,\r\n        ...style,\r\n      }}\r\n    >\r\n      {/* Track */}\r\n      <span\r\n        style={{\r\n          position: 'relative',\r\n          width: trackWidth,\r\n            height: trackHeight,\r\n          background: checked ? onColour : offColour,\r\n          borderRadius: trackHeight,\r\n          transition: 'background 180ms ease',\r\n          boxShadow: isDarkMode ? 'inset 0 0 0 1px rgba(255,255,255,0.08)' : 'inset 0 0 0 1px rgba(0,0,0,0.08)',\r\n        }}\r\n      >\r\n        {/* Knob */}\r\n        <span\r\n          style={{\r\n            position: 'absolute',\r\n            top: padding,\r\n            left: padding,\r\n            width: knobSize,\r\n            height: knobSize,\r\n            background: '#fff',\r\n            borderRadius: '50%',\r\n            transform: `translateX(${checked ? trackWidth - knobSize - padding * 2 : 0}px)`,\r\n            transition: 'transform 180ms cubic-bezier(.4,.2,.2,1), background 180ms',\r\n            boxShadow: '0 1px 2px rgba(0,0,0,0.25), 0 0 0 1px rgba(0,0,0,0.05)',\r\n          }}\r\n        />\r\n      </span>\r\n      {(onText || offText) && (\r\n        <span\r\n          style={{\r\n            userSelect: 'none',\r\n            fontWeight: 500,\r\n            minWidth: size === 'sm' ? 32 : 40,\r\n            textAlign: 'left',\r\n            opacity: disabled ? 0.5 : 0.85,\r\n            transition: 'color 180ms, opacity 180ms',\r\n          }}\r\n        >\r\n          {checked ? onText : offText}\r\n        </span>\r\n      )}\r\n      {/* Focus ring overlay */}\r\n      <span\r\n        className=\"toggle-focus-ring\"\r\n        style={{\r\n          position: 'absolute',\r\n          inset: 0,\r\n          borderRadius: trackHeight,\r\n          pointerEvents: 'none'\r\n        }}\r\n      />\r\n      <style>{`\r\n        button[id='${id || ''}']:focus-visible .toggle-focus-ring { box-shadow: ${focusRing}; }\r\n        button[id='${id || ''}']:active span > span { filter: brightness(0.95); }\r\n      `}</style>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ToggleSwitch;\r\n"],"names":["sharedSearchBoxContainerStyle","isDarkMode","mergeStyles","position","width","maxWidth","display","alignItems","sharedSearchBoxStyle","gap","flex","flexWrap","root","backgroundColor","colours","dark","inputBackground","border","boxShadow","borderRadius","padding","height","outline","transition","selectors","borderColor","field","lineHeight","color","text","light","fontSize","opacity","icon","iconColor","marginLeft","CopyableText","_ref","value","className","label","copied","copy","timeout","arguments","length","undefined","setCopied","useState","navigator","clipboard","writeText","then","setTimeout","useCopyToClipboard","_jsxs","title","onClick","e","stopPropagation","style","children","_jsx","left","top","background","zIndex","formatDate","dateStr","Date","toLocaleDateString","day","month","year","getAreaColor","area","toLowerCase","blue","orange","green","yellow","cta","_ref2","matter","onSelect","isLast","useTheme","lineItemStyle","borderBottom","cursor","fontFamily","minHeight","transform","content","bottom","practiceArea","mainContentStyle","gridTemplateColumns","clientNameStyle","fontWeight","marginBottom","userSelect","highlight","matterNumberStyle","descriptionStyle","metaStyle","statusStyle","dateStyle","actionBadgeStyle","minWidth","justifyContent","viewButtonStyle","handleClick","clientName","displayNumber","description","marginTop","status","responsibleSolicitor","originatingSolicitor","Text","variant","styles","openDate","matterId","flexShrink","marginRight","clientPhone","window","location","href","Icon","iconName","clientEmail","_get","overviewData","outstandingData","fmt","v","String","trim","fmtDate","d","isNaN","getTime","fmtCurrency","n","val","isFinite","Intl","NumberFormat","currency","maximumFractionDigits","format","safeNumber","fallback","get","obj","key","getInitials","full","s","parts","split","filter","Boolean","slice","toUpperCase","billableAmount","billableHours","nonBillableAmount","nonBillableHours","outstandingBalance","clientFunds","totalAmount","billablePct","Math","round","clioUrl","dn","encodeURIComponent","Link","target","subText","toFixed","Stack","tokens","childrenGap","overflow","inset","Separator","margin","opponent","cclDate","TooltipHost","supervisingPartner","role","_userData$","_userData$$FullName","_userData$2","_userData$2$Role","matters","isLoading","error","userData","setContent","useNavigatorActions","selected","setSelected","searchTerm","setSearchTerm","activeFilter","setActiveFilter","activeAreaFilter","setActiveAreaFilter","activeRoleFilter","setActiveRoleFilter","scope","setScope","useNewData","setUseNewData","twoColumn","setTwoColumn","userFullName","FullName","userRole","Role","isAdmin","isAdminUser","isLocalhost","hostname","filtered","useMemo","result","effectiveUseNew","allowedSources","Set","size","m","has","dataSource","effectiveShowEveryone","applyAdminFilter","originalStatus","filterMattersByStatus","filterMattersByArea","allowedRoles","filterMattersByRole","term","_m$clientName","_m$displayNumber","_m$description","_m$practiceArea","includes","datasetCount","scopeCounts","base","_m$clientName2","_m$displayNumber2","_m$description2","_m$practiceArea2","mineList","arr","allList","mine","all","availableAreas","getUniquePracticeAreas","useEffect","sectionBackground","borderTop","flexDirection","IconButton","iconProps","ariaLabel","console","log","filterOptions","FilterBanner","seamless","dense","primaryFilter","onChange","options","map","o","secondaryFilter","search","placeholder","cardBackground","transformOrigin","SegmentedControl","id","k","badge","disabled","highlightYellow","whiteSpace","ToggleSwitch","checked","onText","offText","MatterOverview","containerStyle","ThemedSpinner","SpinnerSize","medium","MessageBar","messageBarType","MessageBarType","document","getElementById","styleEl","createElement","textContent","head","appendChild","idx","MatterLineItem","textAlign","boxSizing","fullWidth","pill","containerRef","useRef","btnRefs","thumbRect","setThumbRect","activeIndex","findIndex","recalc","useCallback","container","current","activeBtn","c","getBoundingClientRect","b","max","useLayoutEffect","addEventListener","removeEventListener","onKeyDown","preventDefault","i","ref","tabIndex","pointerEvents","opt","isActive","el","onFocus","parent","onBlur","contains","relatedTarget","querySelector","React","refresh","sticky","topOffset","collapsibleSearch","searchOpen","setSearchOpen","refreshOpen","setRefreshOpen","collapsible","rowGap","backdropFilter","WebkitBackdropFilter","alignContent","filtersContainerStyle","searchContainerStyle","actionsContainerStyle","rightClusterStyle","refreshContainerStyle","replace","SearchBox","_","newValue","type","animation","nextUpdateTime","onRefresh","trackHeight","trackWidth","knobSize","handleToggle","handleKey","onColour","offColour","focusRing"],"sourceRoot":""}