{"version":3,"file":"static/js/903.a57f9bd7.chunk.js","mappings":"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","sources":["CustomForms/AnnualLeaveBookings.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { getProxyBaseUrl } from '../utils/getProxyBaseUrl';\r\n// invisible change\r\nimport {\r\n  Stack,\r\n  Text,\r\n  DefaultButton,\r\n  Icon,\r\n  Persona,\r\n  PersonaSize\r\n} from '@fluentui/react';\r\nimport { mergeStyles } from '@fluentui/react';\r\nimport { format } from 'date-fns';\r\nimport { colours } from '../app/styles/colours';\r\nimport { formContainerStyle } from './BespokeForms';\r\nimport { sharedDefaultButtonStyles } from '../app/styles/ButtonStyles';\r\nimport HelixAvatar from '../assets/helix avatar.png';\r\n\r\nexport interface BookingEntry {\r\n  id: string;\r\n  request_id?: number;\r\n  person: string;\r\n  start_date: string;\r\n  end_date: string;\r\n  status: string; // \"approved\", \"rejected\", \"booked\", \"discarded\", etc.\r\n  days_taken?: number;\r\n  reason?: string; // General reason for leave\r\n  rejection_notes?: string; // Specific rejection notes\r\n}\r\n\r\nexport interface TeamMember {\r\n  Initials: string;\r\n  Nickname?: string;\r\n  First: string;\r\n  imageUrl?: string;\r\n}\r\n\r\nexport interface AnnualLeaveBookingsProps {\r\n  bookings: BookingEntry[];\r\n  onClose: () => void;\r\n  team: TeamMember[];\r\n}\r\n\r\nconst labelStyleText = mergeStyles({\r\n  fontSize: '14px',\r\n  fontWeight: 600,\r\n  color: colours.highlight,\r\n  marginBottom: '5px',\r\n});\r\n\r\nconst valueStyleText = mergeStyles({\r\n  fontSize: '18px',\r\n  color: colours.light.text,\r\n  marginBottom: '10px',\r\n});\r\n\r\nconst approvedBackdropStyle = mergeStyles({\r\n  backgroundColor: '#e6ffe6',\r\n  padding: '10px',\r\n  borderRadius: '4px',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  gap: '10px',\r\n  marginBottom: '15px',\r\n});\r\n\r\nconst rejectedBackdropStyle = mergeStyles({\r\n  backgroundColor: '#fff9e6',\r\n  padding: '10px',\r\n  borderRadius: '4px',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  gap: '10px',\r\n  marginBottom: '15px',\r\n});\r\n\r\nconst formatDateRange = (startStr: string, endStr: string) => {\r\n  const start = new Date(startStr);\r\n  const end = new Date(endStr);\r\n  if (start.getFullYear() === end.getFullYear()) {\r\n    return `${format(start, 'd MMM')} - ${format(end, 'd MMM yyyy')}`;\r\n  } else {\r\n    return `${format(start, 'd MMM yyyy')} - ${format(end, 'd MMM yyyy')}`;\r\n  }\r\n};\r\n\r\nconst AnnualLeaveBookings: React.FC<AnnualLeaveBookingsProps> = ({ bookings, onClose, team }) => {\r\n  const updateAnnualLeave = async (\r\n    leaveId: string,\r\n    newStatus: string,\r\n    reason: string | null\r\n  ): Promise<void> => {\r\n  const url = `${getProxyBaseUrl()}/${process.env.REACT_APP_UPDATE_ANNUAL_LEAVE_PATH}?code=${process.env.REACT_APP_UPDATE_ANNUAL_LEAVE_CODE}`;\r\n    const payload = { id: leaveId, newStatus, reason: reason || '' };\r\n    const response = await fetch(url, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(payload),\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(`Update failed with status ${response.status}: ${response.statusText}`);\r\n    }\r\n  };\r\n\r\n  const getNickname = (initials: string) => {\r\n    const member = team.find(m => m.Initials.toLowerCase() === initials.toLowerCase());\r\n    return member?.Nickname || initials;\r\n  };\r\n\r\n  const BookingCard: React.FC<{ entry: BookingEntry }> = ({ entry }) => {\r\n    const recordId = entry.request_id ? String(entry.request_id) : entry.id;\r\n    const [updated, setUpdated] = useState(false);\r\n    const [confirmationMessage, setConfirmationMessage] = useState('');\r\n\r\n    const localHandleAction = async () => {\r\n      try {\r\n        // If status is 'rejected', allow user to 'Acknowledge'\r\n        if (entry.status.toLowerCase() === 'rejected') {\r\n          await updateAnnualLeave(recordId, 'acknowledged', null);\r\n          setUpdated(true);\r\n          setConfirmationMessage('Acknowledged successfully');\r\n          console.log(`Leave ${recordId} acknowledged after rejection.`);\r\n        } else {\r\n          // Otherwise, if 'approved' or other \"approvable\" statuses, set it to 'booked'\r\n          await updateAnnualLeave(recordId, 'booked', null);\r\n          setUpdated(true);\r\n          setConfirmationMessage('Booked successfully');\r\n          console.log(`Leave ${recordId} booked successfully.`);\r\n        }\r\n      } catch (error) {\r\n        console.error(`Error processing leave ${recordId}:`, error);\r\n      }\r\n    };\r\n\r\n    const localHandleDiscardAction = async () => {\r\n      try {\r\n        await updateAnnualLeave(recordId, 'discarded', null);\r\n        setUpdated(true);\r\n        setConfirmationMessage('Request discarded successfully');\r\n        console.log(`Leave ${recordId} discarded.`);\r\n      } catch (error) {\r\n        console.error(`Error discarding leave ${recordId}:`, error);\r\n      }\r\n    };\r\n\r\n    // If itâ€™s rejected, show the rejected-style backdrop; otherwise, show approved style\r\n    const isRejected = entry.status.toLowerCase() === 'rejected';\r\n    const backdropStyle = isRejected ? rejectedBackdropStyle : approvedBackdropStyle;\r\n\r\n    return (\r\n      <Stack key={recordId} tokens={{ childrenGap: 15 }}>\r\n        <div\r\n          className={mergeStyles(\r\n            backdropStyle,\r\n            updated && { backgroundColor: '#f0f0f0', border: '2px solid #009900' }\r\n          )}\r\n        >\r\n          <Icon\r\n            iconName={isRejected ? 'Cancel' : 'CompletedSolid'}\r\n            styles={{ root: { fontSize: 24, color: isRejected ? '#cc0000' : '#009900' } }}\r\n          />\r\n          <Text style={{ fontSize: 20, fontWeight: 700, color: colours.light.text }}>\r\n            {isRejected\r\n              ? 'Your Annual Leave Request has been Rejected'\r\n              : 'Your Annual Leave Request has been Approved'}\r\n          </Text>\r\n        </div>\r\n\r\n        <Stack horizontal tokens={{ childrenGap: 15 }} verticalAlign=\"center\">\r\n          <Persona\r\n            imageUrl={HelixAvatar}\r\n            text={getNickname(entry.person)}\r\n            size={PersonaSize.size48}\r\n            styles={{ primaryText: { fontWeight: 'bold', fontSize: '18px' } }}\r\n          />\r\n          <Stack tokens={{ childrenGap: 10 }} style={{ flex: 1 }}>\r\n            <Stack\r\n              tokens={{ childrenGap: 10 }}\r\n              styles={{\r\n                root: {\r\n                  border: `1px solid ${colours.light.border}`,\r\n                  borderRadius: '4px',\r\n                  padding: '12px',\r\n                  backgroundColor: colours.light.grey,\r\n                },\r\n              }}\r\n            >\r\n              <Stack horizontal tokens={{ childrenGap: 40 }}>\r\n                <Stack>\r\n                  <Text className={labelStyleText}>\r\n                    {isRejected ? 'Rejected Dates:' : 'Approved Dates:'}\r\n                  </Text>\r\n                  <Text className={valueStyleText}>\r\n                    {formatDateRange(entry.start_date, entry.end_date)}\r\n                  </Text>\r\n                </Stack>\r\n              </Stack>\r\n            </Stack>\r\n          </Stack>\r\n        </Stack>\r\n\r\n        <Stack horizontal tokens={{ childrenGap: 10 }}>\r\n          <DefaultButton\r\n            text={isRejected ? 'Acknowledge' : 'Book to Confirm'}\r\n            onClick={localHandleAction}\r\n            styles={sharedDefaultButtonStyles}\r\n            iconProps={{\r\n              iconName: isRejected ? 'Check' : 'CompletedSolid',\r\n              styles: {\r\n                root: {\r\n                  color: isRejected ? '#0000FF' : '#009900'\r\n                }\r\n              }\r\n            }}\r\n            style={{ alignSelf: 'flex-start', maxWidth: 'auto' }}\r\n          />\r\n          {!isRejected && (\r\n            <DefaultButton\r\n              text=\"No Longer Needed\"\r\n              onClick={localHandleDiscardAction}\r\n              styles={sharedDefaultButtonStyles}\r\n              iconProps={{\r\n                iconName: 'Cancel',\r\n                styles: { root: { color: '#cc0000' } }\r\n              }}\r\n              style={{ alignSelf: 'flex-start', maxWidth: 'auto' }}\r\n            />\r\n          )}\r\n        </Stack>\r\n\r\n        {/* Show a confirmation message once the user takes an action */}\r\n        {confirmationMessage && (\r\n          <Text style={{ marginTop: 10, fontWeight: 'bold', color: '#009900' }}>\r\n            {confirmationMessage}\r\n          </Text>\r\n        )}\r\n\r\n        {/* Only display rejection_notes if status is \"rejected\" and there's a value */}\r\n        {isRejected && entry.rejection_notes && (\r\n          <Stack tokens={{ childrenGap: 5 }} styles={{ root: { marginTop: 10 } }}>\r\n            <Text style={{ fontWeight: 600, color: colours.light.text }}>\r\n              Rejection Notes:\r\n            </Text>\r\n            <Text style={{ color: colours.light.text }}>\r\n              {entry.rejection_notes}\r\n            </Text>\r\n          </Stack>\r\n        )}\r\n      </Stack>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={formContainerStyle}>\r\n      <Stack tokens={{ childrenGap: 20 }}>\r\n        {bookings.length === 0 ? (\r\n          <Text style={{ fontSize: 20, color: colours.light.text }}>\r\n            No approved or rejected leave requests.\r\n          </Text>\r\n        ) : (\r\n          bookings.map(entry => (\r\n            <BookingCard\r\n              key={entry.request_id ? String(entry.request_id) : entry.id}\r\n              entry={entry}\r\n            />\r\n          ))\r\n        )}\r\n      </Stack>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnnualLeaveBookings;\r\n"],"names":["labelStyleText","mergeStyles","fontSize","fontWeight","color","colours","highlight","marginBottom","valueStyleText","light","text","approvedBackdropStyle","backgroundColor","padding","borderRadius","display","alignItems","gap","rejectedBackdropStyle","formatDateRange","startStr","endStr","start","Date","end","getFullYear","format","_ref","bookings","onClose","team","updateAnnualLeave","async","leaveId","newStatus","reason","url","getProxyBaseUrl","process","REACT_APP_UPDATE_ANNUAL_LEAVE_PATH","REACT_APP_UPDATE_ANNUAL_LEAVE_CODE","payload","id","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","statusText","getNickname","initials","member","find","m","Initials","toLowerCase","Nickname","BookingCard","_ref2","entry","recordId","request_id","String","updated","setUpdated","useState","confirmationMessage","setConfirmationMessage","isRejected","backdropStyle","_jsxs","Stack","tokens","childrenGap","children","className","border","_jsx","Icon","iconName","styles","root","Text","style","horizontal","verticalAlign","Persona","imageUrl","HelixAvatar","person","size","PersonaSize","size48","primaryText","flex","grey","start_date","end_date","DefaultButton","onClick","console","log","error","sharedDefaultButtonStyles","iconProps","alignSelf","maxWidth","marginTop","rejection_notes","formContainerStyle","length","map"],"sourceRoot":""}