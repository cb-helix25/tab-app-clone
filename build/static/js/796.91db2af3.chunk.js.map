{"version":3,"file":"static/js/796.91db2af3.chunk.js","mappings":"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","sources":["utils/debug.ts","tabs/Reporting/ManagementDashboard.tsx","tabs/Reporting/AnnualLeaveReport.tsx","utils/enquirySource.ts","tabs/Reporting/MetaMetricsReport.tsx","tabs/Reporting/SeoReport.tsx","tabs/Reporting/HomePreview.tsx","utils/enquiryCrossReference.ts","tabs/Reporting/EnquiriesReport.tsx","hooks/useStreamingDatasets.ts","tabs/Reporting/ReportingHome.tsx"],"sourcesContent":["/**\r\n * Lightweight debug logger gated by REACT_APP_DEBUG_LOGS.\r\n * Set REACT_APP_DEBUG_LOGS=true to enable verbose logs locally.\r\n */\r\nexport const isDebugLogs = (): boolean => process.env.REACT_APP_DEBUG_LOGS === 'true';\r\n\r\nexport const debugLog = (...args: unknown[]): void => {\r\n  if (isDebugLogs()) console.log(...args);\r\n};\r\n\r\nexport const debugWarn = (...args: unknown[]): void => {\r\n  if (isDebugLogs()) console.warn(...args);\r\n};\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport type { CSSProperties } from 'react';\r\nimport {\r\n  DatePicker,\r\n  DayOfWeek,\r\n  DefaultButton,\r\n  IButtonStyles,\r\n  IDatePickerStyles,\r\n  PrimaryButton,\r\n  Spinner,\r\n  Stack,\r\n  Icon,\r\n} from '@fluentui/react';\r\nimport { useTheme } from '../../app/functionality/ThemeContext';\r\nimport { colours } from '../../app/styles/colours';\r\nimport type { Enquiry, Matter, POID, TeamData, UserData } from '../../app/functionality/types';\r\nimport type { AnnualLeaveRecord } from './AnnualLeaveReport';\r\nimport { debugLog, debugWarn } from '../../utils/debug';\r\nimport './ManagementDashboard.css';\r\n\r\ninterface RecoveredFee {\r\n  payment_date: string;\r\n  payment_allocated: number;\r\n  user_id: number;\r\n  kind?: string; // 'Service', 'Expense', or 'Product'\r\n}\r\n\r\nexport interface WIP {\r\n  date?: string; // YYYY-MM-DD format date field from Clio/SQL\r\n  created_at: string;\r\n  total?: number;\r\n  quantity_in_hours?: number;\r\n  user_id?: number;\r\n  // When sourced from Clio API, user is nested\r\n  user?: { id?: number | string };\r\n}\r\n\r\ninterface ManagementDashboardProps {\r\n  enquiries?: Enquiry[] | null;\r\n  allMatters?: Matter[] | null;\r\n  wip?: WIP[] | null | undefined;\r\n  recoveredFees?: RecoveredFee[] | null;\r\n  teamData?: TeamData[] | null;\r\n  userData?: UserData[] | null;\r\n  poidData?: POID[] | null;\r\n  annualLeave?: AnnualLeaveRecord[] | null;\r\n  triggerRefresh?: () => void;\r\n  lastRefreshTimestamp?: number;\r\n  isFetching?: boolean;\r\n}\r\n\r\ntype RangeKey = 'all' | 'today' | 'yesterday' | 'week' | 'lastWeek' | 'month' | 'lastMonth' | 'last90Days' | 'quarter' | 'yearToDate' | 'year' | 'custom';\r\n\r\ninterface RangeOption {\r\n  key: RangeKey;\r\n  label: string;\r\n}\r\n\r\ninterface MemberMetrics {\r\n  initials: string;\r\n  displayName: string;\r\n  enquiries: number;\r\n  matters: number;\r\n  wipHours: number;\r\n  wipValue: number;\r\n  collected: number;\r\n  targetHours?: number;\r\n  trendDirection?: 'up' | 'down' | 'neutral' | 'away';\r\n}\r\n\r\ntype SortColumn = 'displayName' | 'enquiries' | 'matters' | 'wipHours' | 'wipValue' | 'collected';\r\ntype SortDirection = 'asc' | 'desc';\r\n\r\nconst RANGE_OPTIONS: RangeOption[] = [\r\n  { key: 'today', label: 'Today' },\r\n  { key: 'yesterday', label: 'Yesterday' },\r\n  { key: 'week', label: 'This Week' },\r\n  { key: 'lastWeek', label: 'Last Week' },\r\n  { key: 'month', label: 'This Month' },\r\n  { key: 'lastMonth', label: 'Last Month' },\r\n  { key: 'last90Days', label: 'Last 90 Days' },\r\n  { key: 'quarter', label: 'This Quarter' },\r\n  { key: 'yearToDate', label: 'Year To Date' },\r\n  { key: 'year', label: 'Current Year' },\r\n];\r\n\r\nconst getDatePickerStyles = (isDarkMode: boolean): Partial<IDatePickerStyles> => {\r\n  const baseBorder = isDarkMode ? 'rgba(148, 163, 184, 0.24)' : 'rgba(13, 47, 96, 0.18)';\r\n  const hoverBorder = isDarkMode ? 'rgba(135, 206, 255, 0.5)' : 'rgba(54, 144, 206, 0.4)';\r\n  const focusBorder = isDarkMode ? '#87ceeb' : colours.highlight;\r\n  const backgroundColour = isDarkMode ? 'rgba(15, 23, 42, 0.9)' : 'rgba(255, 255, 255, 0.95)';\r\n  const hoverBackground = isDarkMode ? 'rgba(15, 23, 42, 0.95)' : 'rgba(248, 250, 252, 1)';\r\n  const focusBackground = isDarkMode ? 'rgba(15, 23, 42, 1)' : 'rgba(255, 255, 255, 1)';\r\n\r\n  return {\r\n    root: { \r\n      maxWidth: 220,\r\n      '.ms-DatePicker': {\r\n        fontFamily: 'Raleway, sans-serif !important',\r\n      }\r\n    },\r\n    textField: {\r\n      root: {\r\n        fontFamily: 'Raleway, sans-serif !important',\r\n        width: '100% !important',\r\n      },\r\n      fieldGroup: {\r\n        height: '36px !important',\r\n        borderRadius: '8px !important',\r\n        border: `1px solid ${baseBorder} !important`,\r\n        background: `${backgroundColour} !important`,\r\n        padding: '0 14px !important',\r\n        boxShadow: isDarkMode \r\n          ? '0 2px 4px rgba(0, 0, 0, 0.2) !important' \r\n          : '0 1px 3px rgba(15, 23, 42, 0.08) !important',\r\n        transition: 'all 0.2s ease !important',\r\n        selectors: {\r\n          ':hover': {\r\n            border: `1px solid ${hoverBorder} !important`,\r\n            background: `${hoverBackground} !important`,\r\n            boxShadow: isDarkMode \r\n              ? '0 4px 8px rgba(0, 0, 0, 0.25) !important' \r\n              : '0 2px 6px rgba(15, 23, 42, 0.12) !important',\r\n            transform: 'translateY(-1px) !important',\r\n          },\r\n          ':focus-within': {\r\n            border: `1px solid ${focusBorder} !important`,\r\n            background: `${focusBackground} !important`,\r\n            boxShadow: isDarkMode \r\n              ? `0 0 0 3px rgba(135, 206, 235, 0.1), 0 4px 12px rgba(0, 0, 0, 0.25) !important`\r\n              : `0 0 0 3px rgba(54, 144, 206, 0.1), 0 2px 8px rgba(15, 23, 42, 0.15) !important`,\r\n            transform: 'translateY(-1px) !important',\r\n          }\r\n        }\r\n      },\r\n      field: {\r\n        fontSize: '14px !important',\r\n        color: `${isDarkMode ? colours.dark.text : colours.light.text} !important`,\r\n        fontFamily: 'Raleway, sans-serif !important',\r\n        fontWeight: '500 !important',\r\n        background: 'transparent !important',\r\n        lineHeight: '20px !important',\r\n        border: 'none !important',\r\n        outline: 'none !important',\r\n      },\r\n    },\r\n    icon: {\r\n      color: `${isDarkMode ? colours.highlight : colours.missedBlue} !important`,\r\n      fontSize: '16px !important',\r\n      fontWeight: 'bold !important',\r\n    },\r\n    callout: {\r\n      fontSize: '14px !important',\r\n      borderRadius: '12px !important',\r\n      border: `1px solid ${baseBorder} !important`,\r\n      boxShadow: isDarkMode \r\n        ? '0 8px 24px rgba(0, 0, 0, 0.4) !important' \r\n        : '0 6px 20px rgba(15, 23, 42, 0.15) !important',\r\n    },\r\n    wrapper: { \r\n      borderRadius: '12px !important',\r\n    },\r\n  };\r\n};\r\n\r\nconst getRangeButtonStyles = (isDarkMode: boolean, active: boolean, disabled: boolean = false): IButtonStyles => {\r\n  const activeBackground = colours.highlight;\r\n  const inactiveBackground = isDarkMode ? 'rgba(148, 163, 184, 0.16)' : 'transparent';\r\n\r\n  const resolvedBackground = disabled\r\n    ? (isDarkMode ? 'rgba(15, 23, 42, 0.8)' : 'transparent')\r\n    : active ? activeBackground : inactiveBackground;\r\n\r\n  const resolvedBorder = active\r\n    ? `1px solid ${isDarkMode ? 'rgba(135, 176, 255, 0.5)' : 'rgba(13, 47, 96, 0.32)'}`\r\n    : `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.24)' : 'rgba(13, 47, 96, 0.16)'}`;\r\n\r\n  const resolvedColor = disabled\r\n    ? (isDarkMode ? '#E2E8F0' : colours.missedBlue)\r\n    : active\r\n      ? '#ffffff'\r\n      : (isDarkMode ? '#E2E8F0' : colours.missedBlue);\r\n\r\n  return {\r\n    root: {\r\n      display: 'inline-flex',\r\n      alignItems: 'center',\r\n      whiteSpace: 'nowrap' as const,\r\n      overflow: 'hidden',\r\n      textOverflow: 'ellipsis',\r\n      borderRadius: 999,\r\n      border: resolvedBorder,\r\n  padding: '0 12px',\r\n  minHeight: 32,\r\n  height: 32,\r\n  fontWeight: 600,\r\n      fontSize: 13,\r\n      color: resolvedColor,\r\n      background: resolvedBackground,\r\n  boxShadow: active && !disabled ? '0 2px 8px rgba(54, 144, 206, 0.25)' : 'none',\r\n      fontFamily: 'Raleway, sans-serif',\r\n      cursor: disabled ? 'default' : 'pointer',\r\n    },\r\n    rootHovered: {\r\n      background: disabled\r\n        ? resolvedBackground\r\n        : active\r\n          ? '#2f7cb3'\r\n          : (isDarkMode ? 'rgba(148, 163, 184, 0.24)' : 'rgba(54, 144, 206, 0.12)'),\r\n    },\r\n    rootPressed: {\r\n      background: disabled\r\n        ? resolvedBackground\r\n        : active\r\n          ? '#266795'\r\n          : (isDarkMode ? 'rgba(148, 163, 184, 0.3)' : 'rgba(54, 144, 206, 0.16)'),\r\n    },\r\n  };\r\n};\r\n\r\nconst getTeamButtonStyles = (isDarkMode: boolean, active: boolean, hasWorked: boolean = true): IButtonStyles => {\r\n  const activeBackground = active \r\n    ? `linear-gradient(135deg, ${colours.highlight} 0%, #2f7cb3 100%)`\r\n    : (isDarkMode ? 'rgba(15, 23, 42, 0.8)' : 'transparent');\r\n  \r\n  const activeBorder = active\r\n    ? `2px solid ${isDarkMode ? '#87ceeb' : colours.highlight}`\r\n    : `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.24)' : 'rgba(13, 47, 96, 0.16)'}`;\r\n\r\n  // Greyed out styling when member hasn't worked\r\n  const greyedOut = !hasWorked;\r\n  const opacity = greyedOut ? 0.4 : 1;\r\n  const textColor = active ? '#ffffff' : \r\n    greyedOut ? (isDarkMode ? '#64748B' : '#94A3B8') :\r\n    (isDarkMode ? '#E2E8F0' : colours.missedBlue);\r\n\r\n  return {\r\n    root: {\r\n      borderRadius: 999,\r\n      minHeight: 32,\r\n      height: 32,\r\n      padding: '0 8px',\r\n      fontWeight: active ? 700 : 600,\r\n      fontSize: 12,\r\n      border: activeBorder,\r\n      background: activeBackground,\r\n      color: textColor,\r\n      opacity,\r\n      boxShadow: active \r\n        ? (isDarkMode ? '0 2px 8px rgba(54, 144, 206, 0.3)' : '0 2px 8px rgba(54, 144, 206, 0.25)')\r\n        : 'none',\r\n      fontFamily: 'Raleway, sans-serif',\r\n      transform: active ? 'translateY(-1px)' : 'none',\r\n      transition: 'all 0.2s ease',\r\n    },\r\n    rootHovered: {\r\n      background: active \r\n        ? `linear-gradient(135deg, #2f7cb3 0%, #266795 100%)` \r\n        : (isDarkMode ? 'rgba(15, 23, 42, 0.86)' : 'rgba(54, 144, 206, 0.1)'),\r\n      transform: 'translateY(-1px)',\r\n      boxShadow: active \r\n        ? (isDarkMode ? '0 4px 12px rgba(54, 144, 206, 0.4)' : '0 4px 12px rgba(54, 144, 206, 0.35)')\r\n        : (isDarkMode ? '0 2px 4px rgba(0, 0, 0, 0.1)' : '0 2px 4px rgba(15, 23, 42, 0.05)'),\r\n    },\r\n    rootPressed: {\r\n      background: active \r\n        ? `linear-gradient(135deg, #266795 0%, #1e5a7a 100%)` \r\n        : (isDarkMode ? 'rgba(15, 23, 42, 0.9)' : 'rgba(54, 144, 206, 0.14)'),\r\n      transform: 'translateY(0)',\r\n    },\r\n  };\r\n};\r\n\r\nconst getRoleButtonStyles = (isDarkMode: boolean, active: boolean): IButtonStyles => {\r\n  const activeBackground = active \r\n    ? `linear-gradient(135deg, ${colours.highlight} 0%, #2f7cb3 100%)`\r\n    : (isDarkMode ? 'rgba(15, 23, 42, 0.8)' : 'transparent');\r\n  \r\n  const activeBorder = active\r\n    ? `2px solid ${isDarkMode ? '#87ceeb' : colours.highlight}`\r\n    : `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.24)' : 'rgba(13, 47, 96, 0.16)'}`;\r\n\r\n  const textColor = active ? '#ffffff' : (isDarkMode ? '#E2E8F0' : colours.missedBlue);\r\n\r\n  return {\r\n    root: {\r\n      borderRadius: 999,\r\n      minHeight: 32,\r\n      height: 32,\r\n      padding: '0 12px',\r\n      fontWeight: active ? 700 : 600,\r\n      fontSize: 12,\r\n      border: activeBorder,\r\n      background: activeBackground,\r\n      color: textColor,\r\n      boxShadow: active \r\n        ? (isDarkMode ? '0 2px 8px rgba(54, 144, 206, 0.3)' : '0 2px 8px rgba(54, 144, 206, 0.25)')\r\n        : 'none',\r\n      fontFamily: 'Raleway, sans-serif',\r\n      transform: active ? 'translateY(-1px)' : 'none',\r\n      transition: 'all 0.2s ease',\r\n    },\r\n    rootHovered: {\r\n      background: active \r\n        ? `linear-gradient(135deg, #2f7cb3 0%, #266795 100%)` \r\n        : (isDarkMode ? 'rgba(15, 23, 42, 0.86)' : 'rgba(54, 144, 206, 0.1)'),\r\n      transform: 'translateY(-1px)',\r\n      boxShadow: active \r\n        ? (isDarkMode ? '0 4px 12px rgba(54, 144, 206, 0.4)' : '0 4px 12px rgba(54, 144, 206, 0.35)')\r\n        : (isDarkMode ? '0 2px 4px rgba(0, 0, 0, 0.1)' : '0 2px 4px rgba(15, 23, 42, 0.05)'),\r\n    },\r\n    rootPressed: {\r\n      background: active \r\n        ? `linear-gradient(135deg, #266795 0%, #1e5a7a 100%)` \r\n        : (isDarkMode ? 'rgba(15, 23, 42, 0.9)' : 'rgba(54, 144, 206, 0.14)'),\r\n      transform: 'translateY(0)',\r\n    },\r\n  };\r\n};\r\n\r\nconst summaryChipStyle = (isDarkMode: boolean): CSSProperties => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  padding: '12px 16px',\r\n  borderRadius: 10,\r\n  background: isDarkMode ? 'rgba(15, 23, 42, 0.72)' : '#ffffff',\r\n  border: `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.25)' : '#e2e8f0'}`,\r\n  boxShadow: isDarkMode ? '0 4px 6px rgba(0, 0, 0, 0.3)' : '0 4px 6px rgba(0, 0, 0, 0.07)',\r\n  textAlign: 'center' as const,\r\n  rowGap: 6,\r\n  width: '100%',\r\n});\r\n\r\nconst dateStampButtonStyle = (isDarkMode: boolean): CSSProperties => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'flex-start',\r\n  justifyContent: 'center',\r\n  padding: '6px 12px',\r\n  borderRadius: 10,\r\n  border: `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.28)' : 'rgba(13, 47, 96, 0.14)'}`,\r\n  background: isDarkMode ? 'rgba(15, 23, 42, 0.8)' : 'rgba(255, 255, 255, 0.95)',\r\n  color: isDarkMode ? '#e2e8f0' : '#0d2f60',\r\n  minWidth: 132,\r\n  gap: 2,\r\n  cursor: 'pointer',\r\n  transition: 'all 0.2s ease',\r\n  fontFamily: 'Raleway, sans-serif',\r\n  whiteSpace: 'nowrap',\r\n  lineHeight: 1.3,\r\n});\r\n\r\nconst clearAllTimeButtonStyle = (isDarkMode: boolean): CSSProperties => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  padding: '0 14px',\r\n  height: 58,\r\n  borderRadius: 10,\r\n  border: `1px solid ${isDarkMode ? 'rgba(239, 68, 68, 0.4)' : 'rgba(239, 68, 68, 0.3)'}`,\r\n  background: isDarkMode ? 'rgba(239, 68, 68, 0.15)' : 'rgba(254, 242, 242, 0.9)',\r\n  color: isDarkMode ? '#fca5a5' : '#dc2626',\r\n  gap: 8,\r\n  cursor: 'pointer',\r\n  transition: 'all 0.2s ease',\r\n  fontFamily: 'Raleway, sans-serif',\r\n  fontWeight: 600,\r\n  fontSize: 14,\r\n  whiteSpace: 'nowrap',\r\n});\r\n\r\nconst clearFilterButtonStyle = (isDarkMode: boolean): CSSProperties => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  padding: '0 12px',\r\n  height: 32,\r\n  borderRadius: 8,\r\n  border: `1px solid ${isDarkMode ? 'rgba(239, 68, 68, 0.35)' : 'rgba(239, 68, 68, 0.25)'}`,\r\n  background: isDarkMode ? 'rgba(239, 68, 68, 0.12)' : 'rgba(254, 242, 242, 0.85)',\r\n  color: isDarkMode ? '#fca5a5' : '#dc2626',\r\n  gap: 6,\r\n  cursor: 'pointer',\r\n  transition: 'all 0.2s ease',\r\n  fontFamily: 'Raleway, sans-serif',\r\n  fontWeight: 600,\r\n  fontSize: 13,\r\n  whiteSpace: 'nowrap',\r\n});\r\n\r\nconst computeRange = (range: RangeKey): { start: Date; end: Date } => {\r\n  const now = new Date();\r\n  const end = new Date(now);\r\n  const start = new Date(now);\r\n\r\n  switch (range) {\r\n    case 'today':\r\n      start.setHours(0, 0, 0, 0);\r\n      break;\r\n    case 'yesterday': {\r\n      const yesterday = new Date(now);\r\n      yesterday.setDate(yesterday.getDate() - 1);\r\n      start.setTime(yesterday.getTime());\r\n      start.setHours(0, 0, 0, 0);\r\n      end.setTime(yesterday.getTime());\r\n      end.setHours(23, 59, 59, 999);\r\n      break;\r\n    }\r\n    case 'week': {\r\n      const day = now.getDay();\r\n      const diff = (day + 6) % 7; // Monday as start\r\n      start.setDate(now.getDate() - diff);\r\n      start.setHours(0, 0, 0, 0);\r\n      break;\r\n    }\r\n    case 'lastWeek': {\r\n      const day = now.getDay();\r\n      const diff = (day + 6) % 7; // Monday as start\r\n      const thisWeekStart = new Date(now);\r\n      thisWeekStart.setDate(now.getDate() - diff);\r\n      thisWeekStart.setHours(0, 0, 0, 0);\r\n\r\n      start.setTime(thisWeekStart.getTime());\r\n      start.setDate(start.getDate() - 7);\r\n      start.setHours(0, 0, 0, 0);\r\n\r\n      end.setTime(start.getTime());\r\n      end.setDate(end.getDate() + 6);\r\n      end.setHours(23, 59, 59, 999);\r\n      break;\r\n    }\r\n    case 'month':\r\n      start.setDate(1);\r\n      start.setHours(0, 0, 0, 0);\r\n      break;\r\n    case 'lastMonth': {\r\n      // Set to first day of last month\r\n      start.setMonth(now.getMonth() - 1, 1);\r\n      start.setHours(0, 0, 0, 0);\r\n      // Set end to last day of last month (day 0 of current month)\r\n      end.setDate(0);\r\n      end.setHours(23, 59, 59, 999);\r\n      break;\r\n    }\r\n    case 'last90Days': {\r\n      // Set start to 90 days ago\r\n      start.setDate(now.getDate() - 89);\r\n      start.setHours(0, 0, 0, 0);\r\n      break;\r\n    }\r\n    case 'quarter': {\r\n      const quarterStart = Math.floor(now.getMonth() / 3) * 3;\r\n      start.setMonth(quarterStart, 1);\r\n      start.setHours(0, 0, 0, 0);\r\n      break;\r\n    }\r\n    case 'yearToDate': {\r\n      // Financial year: 1 April to 31 March\r\n      const currentYear = now.getFullYear();\r\n      const currentMonth = now.getMonth(); // 0-11 (0 = January)\r\n\r\n      if (currentMonth >= 3) { // April onwards (month 3+)\r\n        // We're in the financial year that started this calendar year\r\n        start.setFullYear(currentYear, 3, 1); // 1 April this year\r\n      } else {\r\n        // We're in Jan/Feb/Mar - still in the financial year that started last calendar year\r\n        start.setFullYear(currentYear - 1, 3, 1); // 1 April last year\r\n      }\r\n      start.setHours(0, 0, 0, 0);\r\n      break;\r\n    }\r\n    case 'year': {\r\n      // Calendar year: 1 January to 31 December\r\n      const currentYear = now.getFullYear();\r\n      start.setFullYear(currentYear, 0, 1);\r\n      start.setHours(0, 0, 0, 0);\r\n\r\n      end.setFullYear(currentYear, 11, 31);\r\n      end.setHours(23, 59, 59, 999);\r\n      break;\r\n    }\r\n    case 'custom':\r\n      // For custom ranges, return current date as both start and end\r\n      // The actual dates will be controlled by the DatePicker components\r\n      return { start: new Date(now), end: new Date(now) };\r\n    case 'all':\r\n    default:\r\n      return { start: new Date(0), end };\r\n  }\r\n\r\n  return { start, end };\r\n};\r\n\r\nconst computePreviousRange = (range: RangeKey, currentStart: Date, currentEnd: Date): { start: Date; end: Date } | null => {\r\n  if (range === 'all' || range === 'custom') return null;\r\n\r\n  const start = new Date();\r\n  const end = new Date();\r\n\r\n  switch (range) {\r\n    case 'today': {\r\n      // Previous working day\r\n      const prevDay = new Date(currentStart);\r\n      prevDay.setDate(prevDay.getDate() - 1);\r\n      // Skip weekends\r\n      while (prevDay.getDay() === 0 || prevDay.getDay() === 6) {\r\n        prevDay.setDate(prevDay.getDate() - 1);\r\n      }\r\n      start.setTime(prevDay.getTime());\r\n      start.setHours(0, 0, 0, 0);\r\n      end.setTime(prevDay.getTime());\r\n      end.setHours(23, 59, 59, 999);\r\n      break;\r\n    }\r\n    case 'yesterday': {\r\n      // Day before yesterday\r\n      const dayBeforeYesterday = new Date(currentStart);\r\n      dayBeforeYesterday.setDate(dayBeforeYesterday.getDate() - 1);\r\n      start.setTime(dayBeforeYesterday.getTime());\r\n      start.setHours(0, 0, 0, 0);\r\n      end.setTime(dayBeforeYesterday.getTime());\r\n      end.setHours(23, 59, 59, 999);\r\n      break;\r\n    }\r\n    case 'week': {\r\n      // Previous week, accounting for partial weeks\r\n      const currentDays = Math.ceil((currentEnd.getTime() - currentStart.getTime()) / (1000 * 60 * 60 * 24)) + 1;\r\n      const weekStart = new Date(currentStart);\r\n      weekStart.setDate(weekStart.getDate() - 7);\r\n      \r\n      start.setTime(weekStart.getTime());\r\n      end.setTime(weekStart.getTime());\r\n      end.setDate(end.getDate() + currentDays - 1);\r\n      end.setHours(23, 59, 59, 999);\r\n      break;\r\n    }\r\n    case 'lastWeek': {\r\n      // Week before last (full week)\r\n      const previousWeekStart = new Date(currentStart);\r\n      previousWeekStart.setDate(previousWeekStart.getDate() - 7);\r\n      previousWeekStart.setHours(0, 0, 0, 0);\r\n\r\n      const previousWeekEnd = new Date(previousWeekStart);\r\n      previousWeekEnd.setDate(previousWeekEnd.getDate() + 6);\r\n      previousWeekEnd.setHours(23, 59, 59, 999);\r\n\r\n      start.setTime(previousWeekStart.getTime());\r\n      end.setTime(previousWeekEnd.getTime());\r\n      break;\r\n    }\r\n    case 'month': {\r\n      // Previous month - get the full previous month\r\n      const prevMonth = new Date(currentStart);\r\n      prevMonth.setMonth(prevMonth.getMonth() - 1, 1); // Set to 1st of previous month\r\n      start.setTime(prevMonth.getTime());\r\n      start.setHours(0, 0, 0, 0);\r\n      \r\n      // End of previous month\r\n      end.setTime(prevMonth.getTime());\r\n      end.setMonth(end.getMonth() + 1, 0); // Last day of previous month\r\n      end.setHours(23, 59, 59, 999);\r\n      break;\r\n    }\r\n    case 'lastMonth': {\r\n      // \"Last Month\" compares to the month before that\r\n      const twoMonthsAgo = new Date(currentStart);\r\n      twoMonthsAgo.setMonth(twoMonthsAgo.getMonth() - 1, 1); // Set to 1st of two months ago\r\n      start.setTime(twoMonthsAgo.getTime());\r\n      start.setHours(0, 0, 0, 0);\r\n      \r\n      // End of two months ago\r\n      end.setTime(twoMonthsAgo.getTime());\r\n      end.setMonth(end.getMonth() + 1, 0); // Last day of two months ago\r\n      end.setHours(23, 59, 59, 999);\r\n      break;\r\n    }\r\n    case 'last90Days': {\r\n      // Use the length of the current range to ensure the comparison window matches exactly\r\n  const dayInMs = 24 * 60 * 60 * 1000;\r\n  const rangeLengthInDays = Math.max(1, Math.round((currentEnd.getTime() - currentStart.getTime()) / dayInMs) + 1);\r\n\r\n      const previousEnd = new Date(currentStart);\r\n      previousEnd.setDate(previousEnd.getDate() - 1);\r\n      previousEnd.setHours(23, 59, 59, 999);\r\n\r\n      const previousStart = new Date(previousEnd);\r\n      previousStart.setDate(previousStart.getDate() - (rangeLengthInDays - 1));\r\n      previousStart.setHours(0, 0, 0, 0);\r\n\r\n      start.setTime(previousStart.getTime());\r\n      end.setTime(previousEnd.getTime());\r\n      break;\r\n    }\r\n    case 'quarter': {\r\n      // Previous quarter - get the full previous quarter\r\n      const prevQuarter = new Date(currentStart);\r\n      prevQuarter.setMonth(prevQuarter.getMonth() - 3, 1); // Set to 1st of quarter start month\r\n      start.setTime(prevQuarter.getTime());\r\n      start.setHours(0, 0, 0, 0);\r\n      \r\n      // End of previous quarter\r\n      end.setTime(prevQuarter.getTime());\r\n      end.setMonth(end.getMonth() + 3, 0); // Last day of previous quarter\r\n      end.setHours(23, 59, 59, 999);\r\n      break;\r\n    }\r\n    case 'yearToDate': {\r\n      // Previous financial year\r\n      const prevYear = new Date(currentStart);\r\n      prevYear.setFullYear(prevYear.getFullYear() - 1);\r\n      start.setTime(prevYear.getTime());\r\n      start.setHours(0, 0, 0, 0);\r\n\r\n      // End of previous financial year (day before current year starts)\r\n      end.setTime(currentStart.getTime());\r\n      end.setDate(end.getDate() - 1);\r\n      end.setHours(23, 59, 59, 999);\r\n      break;\r\n    }\r\n    case 'year': {\r\n      // Previous calendar year\r\n      const prevYearStart = new Date(currentStart);\r\n      prevYearStart.setFullYear(prevYearStart.getFullYear() - 1);\r\n      prevYearStart.setHours(0, 0, 0, 0);\r\n\r\n      const prevYearEnd = new Date(currentEnd);\r\n      prevYearEnd.setFullYear(prevYearEnd.getFullYear() - 1);\r\n      prevYearEnd.setHours(23, 59, 59, 999);\r\n\r\n      start.setTime(prevYearStart.getTime());\r\n      end.setTime(prevYearEnd.getTime());\r\n      break;\r\n    }\r\n    default:\r\n      return null;\r\n  }\r\n\r\n  return { start, end };\r\n};\r\n\r\n// Helper function to format date range for display\r\nconst formatDateRange = (start: Date, end: Date): string => {\r\n  const formatOptions: Intl.DateTimeFormatOptions = { \r\n    day: '2-digit', \r\n    month: 'short',\r\n    year: start.getFullYear() !== end.getFullYear() ? 'numeric' : undefined\r\n  };\r\n  \r\n  const startStr = start.toLocaleDateString('en-GB', formatOptions);\r\n  const endStr = end.toLocaleDateString('en-GB', formatOptions);\r\n  \r\n  if (startStr === endStr) return startStr;\r\n  return `${startStr} - ${endStr}`;\r\n};\r\n\r\n// Helper function to get range label\r\nconst getRangeLabel = (range: RangeKey): string => {\r\n  switch (range) {\r\n  case 'today': return 'Today';\r\n  case 'yesterday': return 'Yesterday';\r\n  case 'week': return 'This Week';\r\n  case 'lastWeek': return 'Last Week';\r\n  case 'month': return 'This Month';\r\n  case 'lastMonth': return 'Last Month';\r\n  case 'last90Days': return 'Last 90 Days';\r\n  case 'quarter': return 'This Quarter';\r\n  case 'yearToDate': return 'Year To Date';\r\n  case 'year': return 'Current Year';\r\n  case 'all': return 'All Time';\r\n    default: return 'Custom';\r\n  }\r\n};\r\n\r\n// Helper function to get previous range label\r\nconst getPreviousRangeLabel = (range: RangeKey): string => {\r\n  switch (range) {\r\n  case 'today': return 'Previous Working Day';\r\n  case 'yesterday': return 'Day Before Yesterday';\r\n  case 'week': return 'Previous Week';\r\n  case 'lastWeek': return 'Week Before Last';\r\n  case 'lastMonth': return 'Two Months Ago';\r\n  case 'last90Days': return 'Prior 90 Days';\r\n  case 'month': return 'Previous Month';\r\n  case 'quarter': return 'Previous Quarter';\r\n  case 'yearToDate': return 'Previous Financial Year';\r\n  case 'year': return 'Previous Year';\r\n    default: return 'Previous Period';\r\n  }\r\n};\r\n\r\nconst parseDateValue = (input: unknown): Date | null => {\r\n  if (typeof input !== 'string' || input.trim().length === 0) {\r\n    return null;\r\n  }\r\n  const trimmed = input.trim();\r\n  const normalised = trimmed.includes('/') && !trimmed.includes('T')\r\n    ? (() => {\r\n      const parts = trimmed.split('/');\r\n      if (parts.length !== 3) {\r\n        return trimmed;\r\n      }\r\n      const [day, month, year] = parts;\r\n      return `${year.length === 2 ? `20${year}` : year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;\r\n    })()\r\n    : trimmed;\r\n  const candidate = new Date(normalised);\r\n  return Number.isNaN(candidate.getTime()) ? null : candidate;\r\n};\r\n\r\nconst safeNumber = (value: unknown): number => {\r\n  if (typeof value === 'number' && Number.isFinite(value)) {\r\n    return value;\r\n  }\r\n  if (typeof value === 'string') {\r\n    const numeric = Number(value);\r\n    return Number.isFinite(numeric) ? numeric : 0;\r\n  }\r\n  return 0;\r\n};\r\n\r\nconst formatDateForPicker = (date?: Date | null): string => {\r\n  if (!date) {\r\n    return '';\r\n  }\r\n  return date.toLocaleDateString('en-GB', { day: '2-digit', month: 'short', year: 'numeric' });\r\n};\r\n\r\nconst parseDatePickerInput = (value?: string | null): Date | null => (\r\n  value ? parseDateValue(value) : null\r\n);\r\n\r\nconst matchesInitials = (value: unknown, initials: string): boolean => {\r\n  if (!initials || typeof value !== 'string') {\r\n    return false;\r\n  }\r\n  return value.toLowerCase().includes(initials.toLowerCase());\r\n};\r\n\r\n// Normalise a full name: letters only, lowercase\r\nconst normalizeName = (name?: string | null): string => (\r\n  typeof name === 'string' ? name.replace(/[^a-zA-Z]/g, '').toLowerCase() : ''\r\n);\r\n\r\n// Known display name corrections from legacy data\r\nconst NAME_MAP: Record<string, string> = {\r\n  'Samuel Packwood': 'Sam Packwood',\r\n  'Bianca ODonnell': \"Bianca O'Donnell\",\r\n};\r\n\r\nconst mapNameIfNeeded = (name?: string | null): string => {\r\n  if (!name) return '';\r\n  return NAME_MAP[name] ?? name;\r\n};\r\n\r\nconst displayName = (record?: TeamData | null): string => {\r\n  if (!record) {\r\n    return 'Unknown';\r\n  }\r\n  return (\r\n    record['Nickname']\r\n    || record['Full Name']\r\n    || record['First']\r\n    || record['Last']\r\n    || record['Initials']\r\n    || 'Unknown'\r\n  );\r\n};\r\n\r\nconst formatHours = (hours: number): string => {\r\n  if (hours <= 0) {\r\n    return '0h';\r\n  }\r\n  const whole = Math.floor(hours);\r\n  const minutes = Math.round((hours - whole) * 60);\r\n  return minutes > 0 ? `${whole}h ${minutes}m` : `${whole}h`;\r\n};\r\n\r\n// Calculate working days between two dates (excluding weekends and basic UK bank holidays)\r\nconst calculateWorkingDays = (startDate: Date, endDate: Date): number => {\r\n  const start = new Date(startDate);\r\n  const end = new Date(endDate);\r\n  let workingDays = 0;\r\n  \r\n  // Basic UK bank holidays for 2024-2025 (simplified - could be made more dynamic)\r\n  const bankHolidays = [\r\n    '2024-01-01', '2024-03-29', '2024-04-01', '2024-05-06', '2024-05-27', '2024-08-26', '2024-12-25', '2024-12-26',\r\n    '2025-01-01', '2025-04-18', '2025-04-21', '2025-05-05', '2025-05-26', '2025-08-25', '2025-12-25', '2025-12-26'\r\n  ];\r\n  \r\n  const bankHolidaySet = new Set(bankHolidays);\r\n  \r\n  for (let date = new Date(start); date <= end; date.setDate(date.getDate() + 1)) {\r\n    const dayOfWeek = date.getDay();\r\n    const dateString = date.toISOString().split('T')[0];\r\n    \r\n    // Skip weekends (0 = Sunday, 6 = Saturday) and bank holidays\r\n    if (dayOfWeek !== 0 && dayOfWeek !== 6 && !bankHolidaySet.has(dateString)) {\r\n      workingDays++;\r\n    }\r\n  }\r\n  \r\n  return workingDays;\r\n};\r\n\r\n// Determine trend direction based on actual vs target hours\r\nconst getTrendDirection = (actualHours: number, targetHours: number): 'up' | 'down' | 'neutral' => {\r\n  if (targetHours === 0) return 'neutral';\r\n  const performance = actualHours / targetHours;\r\n  if (performance > 1.0) return 'up'; // Any amount above target\r\n  if (performance < 1.0) return 'down'; // Any amount below target\r\n  return 'neutral'; // Exactly at target (very rare)\r\n};\r\n\r\n// Get trend arrow and color\r\nconst getTrendArrow = (direction: 'up' | 'down' | 'neutral' | 'away'): string => {\r\n  switch (direction) {\r\n    case 'up': return '↗';\r\n    case 'down': return '↘';\r\n    case 'away': return '✈'; // Travel/away icon\r\n    default: return '';\r\n  }\r\n};\r\n\r\nconst getTrendColor = (direction: 'up' | 'down' | 'neutral' | 'away', isDarkMode: boolean): string => {\r\n  switch (direction) {\r\n    case 'up': return '#10B981'; // Green\r\n    case 'down': return '#EF4444'; // Red\r\n    case 'away': return isDarkMode ? '#94A3B8' : '#64748B'; // Blue-gray for away\r\n    default: return isDarkMode ? '#9CA3AF' : '#6B7280'; // Gray\r\n  }\r\n};\r\n\r\nconst formatCurrency = (amount: number): string => {\r\n  if (amount === 0) {\r\n    return '£0';\r\n  }\r\n  if (Math.abs(amount) < 1000) {\r\n    return `£${amount.toLocaleString('en-GB', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`;\r\n  }\r\n  if (Math.abs(amount) < 1000000) {\r\n    return `£${(amount / 1000).toFixed(1)}k`;\r\n  }\r\n  return `£${(amount / 1000000).toFixed(2)}m`;\r\n};\r\n\r\nconst formatDateTag = (date: Date | null): string => {\r\n  if (!date) {\r\n    return 'n/a';\r\n  }\r\n  return date.toLocaleDateString('en-GB', { day: '2-digit', month: 'short' });\r\n};\r\n\r\nconst enquiriesHandledBy = (enquiry: Enquiry, initials: string): boolean => (\r\n  matchesInitials(enquiry.Point_of_Contact, initials)\r\n  || matchesInitials(enquiry.Call_Taker, initials)\r\n);\r\n\r\nconst matterOwnedBy = (matter: Matter, initials: string): boolean => (\r\n  matchesInitials(matter.ResponsibleSolicitor, initials)\r\n  || matchesInitials(matter.OriginatingSolicitor, initials)\r\n);\r\n\r\nconst ManagementDashboard: React.FC<ManagementDashboardProps> = ({\r\n  enquiries: rawEnquiries,\r\n  allMatters: rawMatters,\r\n  wip: rawWip,\r\n  recoveredFees: rawFees,\r\n  teamData: rawTeam,\r\n  userData: rawUsers,\r\n  annualLeave: rawAnnualLeave,\r\n  triggerRefresh,\r\n  lastRefreshTimestamp,\r\n  isFetching = false,\r\n}) => {\r\n  // Add CSS animation for spinning refresh icon\r\n  useEffect(() => {\r\n    if (typeof document !== 'undefined' && !document.getElementById('refreshSpinAnimation')) {\r\n      const style = document.createElement('style');\r\n      style.id = 'refreshSpinAnimation';\r\n      style.textContent = `\r\n        @keyframes spin {\r\n          0% { transform: rotate(0deg); }\r\n          100% { transform: rotate(360deg); }\r\n        }\r\n      `;\r\n      document.head.appendChild(style);\r\n    }\r\n  }, []);\r\n\r\n  const { isDarkMode } = useTheme();\r\n  const [{ start: rangeStart, end: rangeEnd }, setRangeState] = useState(() => computeRange('all'));\r\n  const [rangeKey, setRangeKey] = useState<RangeKey>('all');\r\n  const [startDate, setStartDate] = useState<Date | undefined>(undefined);\r\n  const [endDate, setEndDate] = useState<Date | undefined>(undefined);\r\n  const [hoveredMetric, setHoveredMetric] = useState<{ type: string; x: number; y: number } | null>(null);\r\n  const [hoveredMember, setHoveredMember] = useState<{ \r\n    member: MemberMetrics; \r\n    previousData?: any; \r\n    x: number; \r\n    y: number \r\n  } | null>(null);\r\n  const [showDatasetInfo, setShowDatasetInfo] = useState(false);\r\n  const [showCollectedInfo, setShowCollectedInfo] = useState(false);\r\n  const [timeElapsed, setTimeElapsed] = useState(0); // Time since last refresh in seconds\r\n\r\n  // Auto-refresh configuration\r\n  const AUTO_REFRESH_INTERVAL = 15 * 60 * 1000; // 15 minutes in milliseconds\r\n  const UPDATE_INTERVAL = 1000; // Update color every second\r\n\r\n  // Auto-refresh effect - only runs when component is mounted (dashboard is open)\r\n  useEffect(() => {\r\n    if (!triggerRefresh) return; // No refresh function available\r\n\r\n    // Timer to track elapsed time and update color\r\n    const colorTimer = setInterval(() => {\r\n      setTimeElapsed(prev => prev + 1);\r\n    }, UPDATE_INTERVAL);\r\n\r\n    // Timer to trigger auto-refresh every 15 minutes\r\n    const refreshTimer = setInterval(() => {\r\n      debugLog('🔄 Auto-refresh triggered after 15 minutes');\r\n      triggerRefresh();\r\n      setTimeElapsed(0); // Reset elapsed time\r\n    }, AUTO_REFRESH_INTERVAL);\r\n\r\n    // Cleanup on unmount (when dashboard closes)\r\n    return () => {\r\n      clearInterval(colorTimer);\r\n      clearInterval(refreshTimer);\r\n    };\r\n  }, [triggerRefresh]);\r\n\r\n  // Reset timer when manual refresh happens\r\n  useEffect(() => {\r\n    if (lastRefreshTimestamp) {\r\n      setTimeElapsed(0);\r\n    }\r\n  }, [lastRefreshTimestamp]);\r\n\r\n  // Calculate color based on elapsed time (green → blue over 15 minutes)\r\n  const getRefreshIndicatorColor = () => {\r\n    const maxSeconds = 15 * 60; // 15 minutes\r\n    const progress = Math.min(timeElapsed / maxSeconds, 1); // 0 to 1\r\n\r\n    // Green (start): rgb(34, 197, 94)\r\n    // Blue (end): rgb(59, 130, 246)\r\n    const r = Math.round(34 + (59 - 34) * progress);\r\n    const g = Math.round(197 + (130 - 197) * progress);\r\n    const b = Math.round(94 + (246 - 94) * progress);\r\n\r\n    return `rgb(${r}, ${g}, ${b})`;\r\n  };\r\n\r\n  // Format timestamp as \"X ago\"\r\n  const formatTimeAgo = (timestamp: number | undefined): string => {\r\n    if (!timestamp) return 'Pending';\r\n    \r\n    const now = Date.now();\r\n    const diff = Math.floor((now - timestamp) / 1000); // difference in seconds\r\n    \r\n    if (diff < 60) return 'Just now';\r\n    if (diff < 120) return '1 min ago';\r\n    if (diff < 3600) return `${Math.floor(diff / 60)} mins ago`;\r\n    if (diff < 7200) return '1 hour ago';\r\n    if (diff < 86400) return `${Math.floor(diff / 3600)} hours ago`;\r\n    if (diff < 172800) return '1 day ago';\r\n    return `${Math.floor(diff / 86400)} days ago`;\r\n  };\r\n\r\n  // Check if member was completely away during the period (for daily/weekly views)\r\n  const wasCompletelyAway = (startDate: Date, endDate: Date, memberInitials: string): boolean => {\r\n    if (!rawAnnualLeave) return false;\r\n    \r\n    const workingDays = calculateWorkingDays(startDate, endDate);\r\n    if (workingDays === 0) return false; // No working days in period\r\n    \r\n    const memberLeave = rawAnnualLeave.filter(record => \r\n      record.fe === memberInitials && \r\n      (record.status.toLowerCase().includes('approved') || record.status.toLowerCase().includes('confirmed'))\r\n    );\r\n    \r\n    let totalLeaveDays = 0;\r\n    \r\n    for (const leave of memberLeave) {\r\n      const leaveStart = new Date(leave.start_date);\r\n      const leaveEnd = new Date(leave.end_date);\r\n      \r\n      // Check if leave period overlaps with our date range\r\n      const overlapStart = leaveStart > startDate ? leaveStart : startDate;\r\n      const overlapEnd = leaveEnd < endDate ? leaveEnd : endDate;\r\n      \r\n      if (overlapStart <= overlapEnd) {\r\n        // Calculate working days within the overlap period\r\n        const overlapLeaveDays = calculateWorkingDays(overlapStart, overlapEnd);\r\n        totalLeaveDays += overlapLeaveDays;\r\n      }\r\n    }\r\n    \r\n    // Return true if ALL working days in the period were leave days\r\n    return totalLeaveDays >= workingDays;\r\n  };\r\n\r\n  // Calculate leave days for a team member within the specified date range\r\n  const calculateLeaveDays = (startDate: Date, endDate: Date, memberInitials: string, rangeKey: RangeKey): number => {\r\n    if (!rawAnnualLeave) return 0;\r\n    \r\n    // For daily and weekly views, don't subtract leave days if completely away\r\n    // (we'll grey out the indicator instead)\r\n    if ((rangeKey === 'today' || rangeKey === 'week') && wasCompletelyAway(startDate, endDate, memberInitials)) {\r\n      return 0; // Don't reduce target, we'll handle this in trend calculation\r\n    }\r\n    \r\n    // For longer periods (month, quarter, year), subtract actual leave days\r\n    const memberLeave = rawAnnualLeave.filter(record => \r\n      record.fe === memberInitials && \r\n      (record.status.toLowerCase().includes('approved') || record.status.toLowerCase().includes('confirmed'))\r\n    );\r\n    \r\n    let totalLeaveDays = 0;\r\n    \r\n    for (const leave of memberLeave) {\r\n      const leaveStart = new Date(leave.start_date);\r\n      const leaveEnd = new Date(leave.end_date);\r\n      \r\n      // Check if leave period overlaps with our date range\r\n      const overlapStart = leaveStart > startDate ? leaveStart : startDate;\r\n      const overlapEnd = leaveEnd < endDate ? leaveEnd : endDate;\r\n      \r\n      if (overlapStart <= overlapEnd) {\r\n        // Calculate working days within the overlap period\r\n        const overlapLeaveDays = calculateWorkingDays(overlapStart, overlapEnd);\r\n        totalLeaveDays += overlapLeaveDays;\r\n      }\r\n    }\r\n    \r\n    return totalLeaveDays;\r\n  };\r\n\r\n  // Calculate target hours for a team member (6 hours per working day, minus leave days for longer periods)\r\n  const calculateTargetHours = (startDate: Date, endDate: Date, memberInitials: string): number => {\r\n    const workingDays = calculateWorkingDays(startDate, endDate);\r\n    const leaveDays = calculateLeaveDays(startDate, endDate, memberInitials, rangeKey);\r\n    const availableDays = Math.max(0, workingDays - leaveDays);\r\n    const targetHours = availableDays * 6; // 6 hours per working day\r\n    \r\n    return targetHours;\r\n  };\r\n\r\n  // Role options - \"Ops\" combines Non-solicitor and Operations 1\r\n  // \"Inactive\" includes all inactive team members\r\n  const ROLE_OPTIONS = [\r\n    { key: 'Partner', label: 'Partner' },\r\n    { key: 'Associate Solicitor', label: 'Associate' },\r\n    { key: 'Solicitor', label: 'Solicitor' },\r\n    { key: 'Paralegal', label: 'Paralegal' },\r\n    { key: 'Ops', label: 'Ops' },\r\n    { key: 'Inactive', label: 'Inactive' },\r\n  ] as const;\r\n\r\n  const [selectedTeams, setSelectedTeams] = useState<string[]>([]);\r\n  const [selectedRoles, setSelectedRoles] = useState<string[]>([]);\r\n  const [showRoleFilter, setShowRoleFilter] = useState<boolean>(false);\r\n  const [sortColumn, setSortColumn] = useState<SortColumn>('displayName');\r\n  const [sortDirection, setSortDirection] = useState<SortDirection>('asc');\r\n\r\n  const enquiries = rawEnquiries ?? [];\r\n  const matters = rawMatters ?? [];\r\n  const wip = rawWip ?? [];\r\n  const fees = rawFees ?? [];\r\n  const team = rawTeam ?? [];\r\n\r\n  const activeStart = useMemo(() => startDate ?? rangeStart, [startDate, rangeStart]);\r\n  const activeEnd = useMemo(() => endDate ?? rangeEnd, [endDate, rangeEnd]);\r\n\r\n  const withinRange = (value: Date | null): boolean => {\r\n    if (!value) {\r\n      return false;\r\n    }\r\n    const endOfDay = new Date(activeEnd);\r\n    endOfDay.setHours(23, 59, 59, 999);\r\n    return value >= activeStart && value <= endOfDay;\r\n  };\r\n\r\n  const filteredEnquiries = useMemo(() => (\r\n    enquiries.filter((entry) => withinRange(parseDateValue(entry.Touchpoint_Date)))\r\n  ), [enquiries, activeStart, activeEnd]);\r\n\r\n  const filteredMatters = useMemo(() => (\r\n    matters.filter((entry) => {\r\n      const openDate = (entry as any)['Open Date'] ?? entry.OpenDate;\r\n      const closeDate = (entry as any)['Close Date'] ?? entry.CloseDate;\r\n      const dateToCheck = openDate ?? closeDate ?? '';\r\n      const parsedDate = parseDateValue(dateToCheck);\r\n      return withinRange(parsedDate);\r\n    })\r\n  ), [matters, activeStart, activeEnd]);\r\n\r\n  const filteredWip = useMemo(() => {\r\n    // Normalize a date-like input to a local-day Date at 00:00\r\n    const toLocalDay = (input: unknown): Date | null => {\r\n      if (typeof input !== 'string') {\r\n        const d = input instanceof Date ? input : new Date(input as any);\r\n        if (!Number.isNaN(d.getTime())) {\r\n          return new Date(d.getFullYear(), d.getMonth(), d.getDate());\r\n        }\r\n        return null;\r\n      }\r\n      const s = input.trim();\r\n      // Extract leading YYYY-MM-DD if present\r\n      const m = s.match(/^(\\d{4})-(\\d{2})-(\\d{2})/);\r\n      if (m) {\r\n        const y = Number(m[1]);\r\n        const mo = Number(m[2]) - 1;\r\n        const da = Number(m[3]);\r\n        return new Date(y, mo, da); // local midnight\r\n      }\r\n      // Fallback: parse and clamp to local midnight\r\n      const d = new Date(s);\r\n      if (!Number.isNaN(d.getTime())) {\r\n        return new Date(d.getFullYear(), d.getMonth(), d.getDate());\r\n      }\r\n      return null;\r\n    };\r\n\r\n    const startTime = new Date(activeStart.getFullYear(), activeStart.getMonth(), activeStart.getDate()).getTime();\r\n    const endOfDay = new Date(activeEnd);\r\n    endOfDay.setHours(23, 59, 59, 999);\r\n    const endTime = endOfDay.getTime();\r\n\r\n    const filtered = wip.filter((entry) => {\r\n      const when = toLocalDay(entry.date || entry.created_at || (entry as any).updated_at);\r\n      if (!when) return false;\r\n      const t = when.getTime();\r\n      return t >= startTime && t <= endTime;\r\n    });\r\n\r\n    if (rangeKey === 'week') {\r\n      // eslint-disable-next-line no-console\r\n      console.log('[ManagementDashboard] Filtered WIP for This Week:', filtered.map(e => ({ date: e.date, created_at: e.created_at, hours: e.quantity_in_hours, value: e.total })));\r\n      if (filtered.length === 0 && wip.length > 0) {\r\n        const sample = wip.slice(0, 5).map(e => ({ rawDate: e.date, rawCreated: e.created_at }));\r\n        // eslint-disable-next-line no-console\r\n        console.log('[ManagementDashboard] WIP sample (first 5) with dates:', sample, 'Range:', { start: activeStart, end: activeEnd });\r\n      }\r\n    }\r\n    return filtered;\r\n  }, [wip, activeStart, activeEnd, rangeKey]);\r\n\r\n  const filteredFees = useMemo(() => (\r\n    fees.filter((entry) => {\r\n      // Exclude disbursements (kind = 'Expense') - only count actual fees\r\n      // If kind is 'Expense' or 'Product', exclude it\r\n      // If kind is 'Service' or missing (legacy data), include it\r\n      if (entry.kind === 'Expense' || entry.kind === 'Product') {\r\n        return false;\r\n      }\r\n      return withinRange(parseDateValue(entry.payment_date));\r\n    })\r\n  ), [fees, activeStart, activeEnd]);\r\n\r\n  const teamMembers = useMemo(() => (\r\n    team\r\n      .filter((member) => {\r\n        return Boolean(member['Initials']); // Include all team members with initials\r\n      })\r\n      .map((member) => {\r\n        const statusValueRaw = typeof member.status === 'string'\r\n          ? member.status\r\n          : typeof (member as Record<string, unknown>)['Status'] === 'string'\r\n            ? String((member as Record<string, unknown>)['Status'])\r\n            : undefined;\r\n        const isActive = statusValueRaw ? statusValueRaw.toLowerCase() === 'active' : false;\r\n        \r\n        const roleValueRaw = (member as Record<string, unknown>)['Role'] \r\n          ? String((member as Record<string, unknown>)['Role'])\r\n          : undefined;\r\n        \r\n        // If inactive, role becomes \"Inactive\" regardless of original role\r\n        if (!isActive) {\r\n          return {\r\n            initials: member['Initials'] ?? '',\r\n            record: member,\r\n            display: displayName(member),\r\n            clioId: member['Clio ID'] ? String(member['Clio ID']) : undefined,\r\n            role: 'Inactive',\r\n            isActive: false,\r\n          };\r\n        }\r\n        \r\n        // Normalize role: map \"Non-solicitor\" and \"Operations 1\" to \"Ops\"\r\n        let normalizedRole = roleValueRaw;\r\n        if (roleValueRaw === 'Non-solicitor' || roleValueRaw === 'Operations 1') {\r\n          normalizedRole = 'Ops';\r\n        }\r\n        \r\n        return {\r\n          initials: member['Initials'] ?? '',\r\n          record: member,\r\n          display: displayName(member),\r\n          clioId: member['Clio ID'] ? String(member['Clio ID']) : undefined,\r\n          role: normalizedRole,\r\n          isActive: true,\r\n        };\r\n      })\r\n      .sort((a, b) => a.display.localeCompare(b.display))\r\n  ), [team]);\r\n\r\n  // Filter displayable team members: hide Ops and Inactive unless their filters are selected\r\n  const displayableTeamMembers = useMemo(() => {\r\n    const showOps = selectedRoles.includes('Ops');\r\n    const showInactive = selectedRoles.includes('Inactive');\r\n    \r\n    return teamMembers.filter((member) => {\r\n      // Always show standard fee-earning roles\r\n      if (member.role !== 'Ops' && member.role !== 'Inactive') {\r\n        return true;\r\n      }\r\n      // Show Ops only if Ops filter is active\r\n      if (member.role === 'Ops' && showOps) {\r\n        return true;\r\n      }\r\n      // Show Inactive only if Inactive filter is active\r\n      if (member.role === 'Inactive' && showInactive) {\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n  }, [teamMembers, selectedRoles]);\r\n\r\n  const visibleMembers = useMemo(() => {\r\n    // Start with displayable members (excludes Ops and Inactive unless their filters are active)\r\n    let filtered = displayableTeamMembers;\r\n    \r\n    // Filter by selected team members\r\n    if (selectedTeams.length > 0) {\r\n      filtered = filtered.filter((member) => selectedTeams.includes(member.initials));\r\n    }\r\n    \r\n    // Filter by selected roles\r\n    if (selectedRoles.length > 0) {\r\n      filtered = filtered.filter((member) => selectedRoles.includes(member.role ?? ''));\r\n    }\r\n    \r\n    return filtered;\r\n  }, [displayableTeamMembers, selectedTeams, selectedRoles]);\r\n\r\n  // OPTIMIZATION: Pre-index all large datasets to avoid repeated filtering\r\n  \r\n  // Index WIP by Clio ID (156k+ entries)\r\n  const wipByClioId = useMemo(() => {\r\n    const index = new Map<string, typeof filteredWip>();\r\n    filteredWip.forEach((record) => {\r\n      const clioId = record.user_id != null \r\n        ? String(record.user_id) \r\n        : record.user?.id != null \r\n          ? String(record.user.id) \r\n          : null;\r\n      if (clioId) {\r\n        if (!index.has(clioId)) {\r\n          index.set(clioId, []);\r\n        }\r\n        index.get(clioId)!.push(record);\r\n      }\r\n    });\r\n    return index;\r\n  }, [filteredWip]);\r\n\r\n  // Index Fees by Clio ID\r\n  const feesByClioId = useMemo(() => {\r\n    const index = new Map<string, typeof filteredFees>();\r\n    filteredFees.forEach((record) => {\r\n      const clioId = String(record.user_id ?? '');\r\n      if (clioId) {\r\n        if (!index.has(clioId)) {\r\n          index.set(clioId, []);\r\n        }\r\n        index.get(clioId)!.push(record);\r\n      }\r\n    });\r\n    return index;\r\n  }, [filteredFees]);\r\n\r\n  // Index Enquiries by email and initials (1172 enquiries)\r\n  const enquiriesByContact = useMemo(() => {\r\n    const byEmail = new Map<string, typeof filteredEnquiries>();\r\n    const byInitials = new Map<string, typeof filteredEnquiries>();\r\n    \r\n    filteredEnquiries.forEach((enquiry) => {\r\n      // Index by email\r\n      if (typeof enquiry.Point_of_Contact === 'string') {\r\n        const email = enquiry.Point_of_Contact.toLowerCase();\r\n        if (!byEmail.has(email)) {\r\n          byEmail.set(email, []);\r\n        }\r\n        byEmail.get(email)!.push(enquiry);\r\n      }\r\n      \r\n      // Index by initials (for fallback matching)\r\n      const poc = String(enquiry.Point_of_Contact || '').toUpperCase();\r\n      if (poc && poc.length <= 4) { // Likely initials\r\n        if (!byInitials.has(poc)) {\r\n          byInitials.set(poc, []);\r\n        }\r\n        byInitials.get(poc)!.push(enquiry);\r\n      }\r\n    });\r\n    \r\n    return { byEmail, byInitials };\r\n  }, [filteredEnquiries]);\r\n\r\n  // Index Matters by normalized solicitor name (5594 matters)\r\n  // OPTIMIZED: Use more efficient Map operations with deduplication\r\n  const mattersBySolicitor = useMemo(() => {\r\n    const index = new Map<string, Map<string, typeof filteredMatters[0]>>();\r\n    \r\n    filteredMatters.forEach((matter) => {\r\n      const rawOriginating = mapNameIfNeeded((matter as any)['Originating Solicitor'] ?? (matter as any).OriginatingSolicitor);\r\n      const rawResponsible = mapNameIfNeeded((matter as any)['Responsible Solicitor'] ?? (matter as any).ResponsibleSolicitor);\r\n      \r\n      // Normalize once per matter (cached by normalizePersonName)\r\n      const normalizedOriginating = normalizeName(rawOriginating);\r\n      const normalizedResponsible = normalizeName(rawResponsible);\r\n      \r\n      // Use matter ID as unique key to prevent duplicates\r\n      const matterId = (matter as any).matterId || (matter as any)['Unique ID'] || (matter as any).UniqueID || JSON.stringify(matter);\r\n      \r\n      // Index by originating solicitor - use deduplication map\r\n      if (normalizedOriginating) {\r\n        if (!index.has(normalizedOriginating)) {\r\n          index.set(normalizedOriginating, new Map());\r\n        }\r\n        index.get(normalizedOriginating)!.set(matterId, matter);\r\n      }\r\n      \r\n      // Index by responsible solicitor - use deduplication map\r\n      if (normalizedResponsible) {\r\n        if (!index.has(normalizedResponsible)) {\r\n          index.set(normalizedResponsible, new Map());\r\n        }\r\n        index.get(normalizedResponsible)!.set(matterId, matter);\r\n      }\r\n    });\r\n    \r\n    // Convert back to arrays without duplicates\r\n    const finalIndex = new Map<string, typeof filteredMatters>();\r\n    index.forEach((matterMap, solicitor) => {\r\n      finalIndex.set(solicitor, Array.from(matterMap.values()));\r\n    });\r\n    \r\n    return finalIndex;\r\n  }, [filteredMatters]);\r\n\r\n  const metricsByMember: MemberMetrics[] = useMemo(() => (\r\n    visibleMembers.map((member) => {\r\n      const memberEmail = (member.record as Record<string, unknown>)['Email']\r\n        ? String((member.record as Record<string, unknown>)['Email']).toLowerCase()\r\n        : undefined;\r\n      const memberFullName = (member.record as Record<string, unknown>)['Full Name']\r\n        ? String((member.record as Record<string, unknown>)['Full Name'])\r\n        : member.display;\r\n\r\n      // OPTIMIZED: Use pre-indexed enquiries lookup\r\n      let enquiriesForMember: typeof filteredEnquiries = [];\r\n      if (memberEmail) {\r\n        // Primary: lookup by email (O(1))\r\n        enquiriesForMember = enquiriesByContact.byEmail.get(memberEmail) || [];\r\n      } else {\r\n        // Fallback: lookup by initials (O(1))\r\n        enquiriesForMember = enquiriesByContact.byInitials.get(member.initials.toUpperCase()) || [];\r\n      }\r\n\r\n      // OPTIMIZED: Use pre-indexed matters lookup with normalized name (O(1))\r\n      const normalizedMemberName = normalizeName(memberFullName);\r\n      const mattersForMember = normalizedMemberName \r\n        ? (mattersBySolicitor.get(normalizedMemberName) || [])\r\n        : [];\r\n\r\n      // OPTIMIZED: Use pre-indexed lookups instead of filtering 156k+ entries\r\n      const wipForMember = member.clioId ? (wipByClioId.get(member.clioId) || []) : [];\r\n      const feesForMember = member.clioId ? (feesByClioId.get(member.clioId) || []) : [];\r\n      const wipHours = wipForMember.reduce((total, record) => total + safeNumber(record.quantity_in_hours), 0);\r\n      const targetHours = startDate && endDate ? calculateTargetHours(startDate, endDate, member.initials) : 0;\r\n      \r\n      // Check if member was completely away for daily/weekly views\r\n      const completelyAway = startDate && endDate && \r\n        (rangeKey === 'today' || rangeKey === 'week') && \r\n        wasCompletelyAway(startDate, endDate, member.initials);\r\n      \r\n      // Check if member has 0 hours but had leave days (should be neutral, not penalized)\r\n      const hadLeaveWithNoWork = wipHours === 0 && startDate && endDate && \r\n        rawAnnualLeave && rawAnnualLeave.some(record => {\r\n          if (record.fe !== member.initials) return false;\r\n          if (!(record.status.toLowerCase().includes('approved') || record.status.toLowerCase().includes('confirmed'))) return false;\r\n          \r\n          const leaveStart = new Date(record.start_date);\r\n          const leaveEnd = new Date(record.end_date);\r\n          \r\n          // Check if leave period overlaps with our date range\r\n          return leaveStart <= endDate && leaveEnd >= startDate;\r\n        });\r\n      \r\n      let trendDirection: 'up' | 'down' | 'neutral' | 'away';\r\n      if (completelyAway) {\r\n        trendDirection = 'away';\r\n      } else if (hadLeaveWithNoWork) {\r\n        trendDirection = 'neutral';\r\n      } else if (targetHours === 0 && wipHours > 0) {\r\n        // If target calculation failed but they have work hours, show as above target\r\n        trendDirection = 'up';\r\n      } else {\r\n        trendDirection = getTrendDirection(wipHours, targetHours);\r\n      }\r\n      \r\n      return {\r\n        initials: member.initials,\r\n        displayName: member.display,\r\n        enquiries: enquiriesForMember.length,\r\n        matters: mattersForMember.length,\r\n        wipHours,\r\n        wipValue: wipForMember.reduce((total, record) => total + safeNumber(record.total), 0),\r\n        collected: feesForMember.reduce((total, record) => total + safeNumber(record.payment_allocated), 0),\r\n        targetHours,\r\n        trendDirection,\r\n      } as MemberMetrics;\r\n    })\r\n  ), [visibleMembers, enquiriesByContact, mattersBySolicitor, wipByClioId, feesByClioId]);\r\n\r\n  // Sort the metrics by the selected column and direction\r\n  const sortedMetricsByMember = useMemo(() => {\r\n    const sorted = [...metricsByMember].sort((a, b) => {\r\n      // First, separate active (has work) from inactive (no work) members\r\n      const aHasWork = a.wipHours > 0;\r\n      const bHasWork = b.wipHours > 0;\r\n      \r\n      // Active members always come before inactive members\r\n      if (aHasWork && !bHasWork) return -1;\r\n      if (!aHasWork && bHasWork) return 1;\r\n      \r\n      // Within the same group (active or inactive), sort by the selected column\r\n      let aValue: string | number = a[sortColumn];\r\n      let bValue: string | number = b[sortColumn];\r\n\r\n      // For string comparison (displayName), use locale compare\r\n      if (typeof aValue === 'string' && typeof bValue === 'string') {\r\n        const result = aValue.localeCompare(bValue);\r\n        return sortDirection === 'asc' ? result : -result;\r\n      }\r\n\r\n      // For numeric comparison\r\n      if (typeof aValue === 'number' && typeof bValue === 'number') {\r\n        const result = aValue - bValue;\r\n        return sortDirection === 'asc' ? result : -result;\r\n      }\r\n\r\n      return 0;\r\n    });\r\n    return sorted;\r\n  }, [metricsByMember, sortColumn, sortDirection]);\r\n\r\n  const totals = useMemo(() => (\r\n    sortedMetricsByMember.reduce(\r\n      (acc, row) => ({\r\n        enquiries: acc.enquiries + row.enquiries,\r\n        matters: acc.matters + row.matters,\r\n        wipHours: acc.wipHours + row.wipHours,\r\n        wipValue: acc.wipValue + row.wipValue,\r\n        collected: acc.collected + row.collected,\r\n      }),\r\n      { enquiries: 0, matters: 0, wipHours: 0, wipValue: 0, collected: 0 },\r\n    )\r\n  ), [sortedMetricsByMember]);\r\n\r\n  const summaryTotals = useMemo(() => {\r\n    const wipAggregates = filteredWip.reduce(\r\n      (acc, record) => ({\r\n        hours: acc.hours + safeNumber(record.quantity_in_hours),\r\n        value: acc.value + safeNumber(record.total),\r\n      }),\r\n      { hours: 0, value: 0 },\r\n    );\r\n\r\n    const collectedTotal = filteredFees.reduce(\r\n      (acc, record) => acc + safeNumber(record.payment_allocated),\r\n      0,\r\n    );\r\n\r\n    return {\r\n      enquiries: filteredEnquiries.length,\r\n      matters: filteredMatters.length,\r\n      wipHours: wipAggregates.hours,\r\n      wipValue: wipAggregates.value,\r\n      collected: collectedTotal,\r\n    };\r\n  }, [filteredEnquiries, filteredMatters, filteredWip, filteredFees]);\r\n\r\n  // Calculate previous period metrics for comparison\r\n  const previousRange = React.useMemo<{ start: Date; end: Date } | null>(\r\n    () => computePreviousRange(rangeKey, startDate || rangeStart, endDate || rangeEnd),\r\n    [rangeKey, startDate, endDate, rangeStart, rangeEnd]\r\n  );\r\n  \r\n  // Debug logging for previous range\r\n  debugLog('🔍 Previous Range Debug:', {\r\n    rangeKey,\r\n    currentStart: startDate || rangeStart,\r\n    currentEnd: endDate || rangeEnd,\r\n    previousRange,\r\n    hasPreviousRange: !!previousRange\r\n  });\r\n  \r\n  const previousMetrics = useMemo(() => {\r\n    if (!previousRange) {\r\n      debugLog('❌ No previous range calculated');\r\n      return null;\r\n    }\r\n\r\n    debugLog('📊 Calculating previous metrics for range:', previousRange);\r\n\r\n    const prevEnquiries = rawEnquiries?.filter((e: any) => {\r\n      const date = parseDateValue(e.Touchpoint_Date);\r\n      return date && date >= previousRange.start && date <= previousRange.end;\r\n    }) || [];\r\n\r\n    const prevMatters = rawMatters?.filter((m: any) => {\r\n      // Align with current-period filtering: prefer Open Date, fallback to Close Date\r\n      const openDate = (m as any)['Open Date'] ?? m.OpenDate;\r\n      const closeDate = (m as any)['Close Date'] ?? m.CloseDate;\r\n      const dateToCheck = openDate ?? closeDate ?? '';\r\n      const date = parseDateValue(dateToCheck);\r\n      return date && date >= previousRange.start && date <= previousRange.end;\r\n    }) || [];\r\n\r\n    const prevWip = rawWip?.filter((w: any) => {\r\n      const date = parseDateValue(w.created_at);\r\n      return date && date >= previousRange.start && date <= previousRange.end;\r\n    }) || [];\r\n\r\n    const prevFees = rawFees?.filter((f: any) => {\r\n      const date = parseDateValue(f.payment_date);\r\n      return date && date >= previousRange.start && date <= previousRange.end;\r\n    }) || [];\r\n\r\n    return {\r\n      enquiries: prevEnquiries.length,\r\n      matters: prevMatters.length,\r\n      wipHours: prevWip.reduce((total: number, record: any) => total + safeNumber(record.quantity_in_hours), 0),\r\n      wipValue: prevWip.reduce((total: number, record: any) => total + safeNumber(record.total), 0),\r\n      collected: prevFees.reduce((total: number, record: any) => total + safeNumber(record.payment_allocated), 0),\r\n    };\r\n  }, [previousRange, rawEnquiries, rawMatters, rawWip, rawFees]);\r\n\r\n  // Calculate previous period metrics for individual team members\r\n  const previousMemberMetrics = useMemo(() => {\r\n    if (!previousRange || !teamMembers.length) return new Map();\r\n\r\n    const prevEnquiries = rawEnquiries?.filter((e: any) => {\r\n      const date = parseDateValue(e.Touchpoint_Date);\r\n      return date && date >= previousRange.start && date <= previousRange.end;\r\n    }) || [];\r\n\r\n    const prevMatters = rawMatters?.filter((m: any) => {\r\n      // Align with current-period filtering: prefer Open Date, fallback to Close Date\r\n      const openDate = (m as any)['Open Date'] ?? m.OpenDate;\r\n      const closeDate = (m as any)['Close Date'] ?? m.CloseDate;\r\n      const dateToCheck = openDate ?? closeDate ?? '';\r\n      const date = parseDateValue(dateToCheck);\r\n      return date && date >= previousRange.start && date <= previousRange.end;\r\n    }) || [];\r\n\r\n    const prevWip = rawWip?.filter((w: any) => {\r\n      const date = parseDateValue(w.created_at);\r\n      return date && date >= previousRange.start && date <= previousRange.end;\r\n    }) || [];\r\n\r\n    const prevFees = rawFees?.filter((f: any) => {\r\n      const date = parseDateValue(f.payment_date);\r\n      return date && date >= previousRange.start && date <= previousRange.end;\r\n    }) || [];\r\n\r\n    const memberMap = new Map();\r\n\r\n    teamMembers.forEach((member) => {\r\n      // Calculate previous period metrics for this member\r\n      const prevEnquiriesForMember = prevEnquiries.filter((enquiry: any) => {\r\n        const memberEmail = member.record.Email?.toLowerCase();\r\n        if (memberEmail && enquiry.Point_of_Contact?.toLowerCase() === memberEmail) {\r\n          return true;\r\n        }\r\n        return enquiriesHandledBy(enquiry, member.initials);\r\n      });\r\n\r\n      const prevMattersForMember = prevMatters.filter((matter: any) => \r\n        matterOwnedBy(matter, member.initials)\r\n      );\r\n\r\n      const prevWipForMember = prevWip.filter((wipEntry: any) => {\r\n        if (!member.clioId) return false;\r\n        const flat = wipEntry.user_id != null ? String(wipEntry.user_id) : undefined;\r\n        const nested = wipEntry.user?.id != null ? String(wipEntry.user.id) : undefined;\r\n        return flat === member.clioId || nested === member.clioId;\r\n      });\r\n\r\n      const prevFeesForMember = prevFees.filter((fee: any) => {\r\n        return member.clioId ? String(fee.user_id ?? '') === member.clioId : false;\r\n      });\r\n\r\n      const prevWipHours = prevWipForMember.reduce((total: number, record: any) => \r\n        total + safeNumber(record.quantity_in_hours), 0\r\n      );\r\n      const prevWipValue = prevWipForMember.reduce((total: number, record: any) => \r\n        total + safeNumber(record.total), 0\r\n      );\r\n      const prevCollected = prevFeesForMember.reduce((total: number, record: any) => \r\n        total + safeNumber(record.payment_allocated), 0\r\n      );\r\n\r\n      memberMap.set(member.initials, {\r\n        enquiries: prevEnquiriesForMember.length,\r\n        matters: prevMattersForMember.length,\r\n        wipHours: prevWipHours,\r\n        wipValue: prevWipValue,\r\n        collected: prevCollected,\r\n      });\r\n\r\n      // Temporary debug for matters - remove after testing\r\n      if (member.initials === 'CH' && prevMattersForMember.length === 0) {\r\n        debugLog('CH matters debug:', {\r\n          totalPrevMatters: prevMatters.length,\r\n          prevMattersForMember: prevMattersForMember.length,\r\n          memberInitials: member.initials,\r\n          sampleMatters: prevMatters.slice(0, 3).map((m: any) => ({\r\n            DateOpened: m.DateOpened,\r\n            ResponsibleSolicitor: m.ResponsibleSolicitor,\r\n            OriginatingSolicitor: m.OriginatingSolicitor\r\n          }))\r\n        });\r\n      }\r\n    });\r\n\r\n    return memberMap;\r\n  }, [previousRange, rawEnquiries, rawMatters, rawWip, rawFees, teamMembers]);\r\n\r\n  // Helper function to calculate percentage change\r\n  const calculateChange = (current: number, previous: number): { percentage: number; direction: 'up' | 'down' | 'neutral' } => {\r\n    // If both are zero, no change\r\n    if (current === 0 && previous === 0) {\r\n      return { percentage: 0, direction: 'neutral' };\r\n    }\r\n    \r\n    // If previous is zero but current has value, that's a new addition (not 100% increase)\r\n    if (previous === 0 && current > 0) {\r\n      return { percentage: current, direction: 'up' };\r\n    }\r\n    \r\n    // If current is zero but previous had value, that's a complete drop\r\n    if (current === 0 && previous > 0) {\r\n      return { percentage: 100, direction: 'down' };\r\n    }\r\n    \r\n    // Normal percentage calculation\r\n    const percentage = ((current - previous) / previous) * 100;\r\n    return {\r\n      percentage: Math.abs(percentage),\r\n      direction: percentage > 0 ? 'up' : percentage < 0 ? 'down' : 'neutral'\r\n    };\r\n  };\r\n\r\n  // Helper function to render trend indicator\r\n  const renderTrendIndicator = (current: number, previous: number | undefined, type: 'count' | 'currency' | 'hours' = 'count', metricName: string) => {\r\n    if (!previousMetrics || previous === undefined) return null;\r\n\r\n    const change = calculateChange(current, previous);\r\n    if (change.direction === 'neutral') return null;\r\n\r\n    const color = change.direction === 'up' \r\n      ? (isDarkMode ? '#22c55e' : '#16a34a') \r\n      : (isDarkMode ? '#ef4444' : '#dc2626');\r\n\r\n    const arrow = change.direction === 'up' ? '↗' : '↘';\r\n    \r\n    // Different display logic based on type\r\n    let displayText: string;\r\n    \r\n    if (type === 'currency') {\r\n      // For currency, show actual amount difference\r\n      const difference = current - previous;\r\n      const absChange = Math.abs(difference);\r\n      if (absChange >= 1000) {\r\n        displayText = `£${(absChange / 1000).toFixed(0)}k`;\r\n      } else {\r\n        displayText = `£${absChange.toFixed(0)}`;\r\n      }\r\n    } else if (type === 'hours') {\r\n      // For hours, show hour difference for small changes, percentage for large\r\n      const difference = Math.abs(current - previous);\r\n      if (difference < 10) {\r\n        displayText = `${difference.toFixed(1)}h`;\r\n      } else {\r\n        displayText = `${change.percentage.toFixed(0)}%`;\r\n      }\r\n    } else {\r\n      // For counts (enquiries, matters), show numbers for small changes, percentages for large\r\n      const difference = Math.abs(current - previous);\r\n      if (previous === 0 && current > 0) {\r\n        displayText = `+${current}`;\r\n      } else if (current === 0 && previous > 0) {\r\n        displayText = `${difference}`;\r\n      } else if (difference <= 5) {\r\n        displayText = `${difference}`;\r\n      } else {\r\n        displayText = `${change.percentage.toFixed(0)}%`;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <span \r\n        style={{\r\n          fontSize: 10,\r\n          fontWeight: 600,\r\n          color,\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          gap: 2,\r\n          fontFamily: 'Raleway, sans-serif',\r\n          letterSpacing: '0.02em',\r\n          cursor: 'help',\r\n          padding: '2px 4px',\r\n          borderRadius: 4,\r\n          transition: 'all 0.2s ease',\r\n        }}\r\n        onMouseEnter={(e) => {\r\n          const rect = e.currentTarget.getBoundingClientRect();\r\n          setHoveredMetric({\r\n            type: metricName,\r\n            x: rect.left + rect.width / 2,\r\n            y: rect.top - 10\r\n          });\r\n        }}\r\n        onMouseLeave={() => setHoveredMetric(null)}\r\n        title={`Compare ${getRangeLabel(rangeKey)} vs ${getPreviousRangeLabel(rangeKey)}`}\r\n      >\r\n        {arrow} {displayText}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  const handleRangeSelect = (key: RangeKey) => {\r\n    setRangeKey(key);\r\n    if (key === 'custom') {\r\n      return;\r\n    }\r\n\r\n    const newRange = computeRange(key);\r\n    setRangeState(newRange);\r\n    if (key === 'all') {\r\n      setStartDate(undefined);\r\n      setEndDate(undefined);\r\n    } else {\r\n      setStartDate(newRange.start);\r\n      setEndDate(newRange.end);\r\n    }\r\n  };\r\n\r\n  const initialiseCustomDates = () => {\r\n    const today = new Date();\r\n    const fallbackStart = (!activeStart || rangeKey === 'all' || activeStart.getFullYear() < 1980)\r\n      ? (() => {\r\n          const start = new Date(today);\r\n          start.setDate(today.getDate() - 6);\r\n          start.setHours(0, 0, 0, 0);\r\n          return start;\r\n        })()\r\n      : new Date(activeStart);\r\n\r\n    const fallbackEnd = (!activeEnd || rangeKey === 'all')\r\n      ? (() => {\r\n          const end = new Date(today);\r\n          end.setHours(23, 59, 59, 999);\r\n          return end;\r\n        })()\r\n      : new Date(activeEnd);\r\n\r\n    setStartDate(fallbackStart);\r\n    setEndDate(fallbackEnd);\r\n  };\r\n\r\n  const handleActivateCustomRange = () => {\r\n    if (isCustomRange) {\r\n      return;\r\n    }\r\n    initialiseCustomDates();\r\n    setRangeKey('custom');\r\n  };\r\n\r\n  const toggleTeamSelection = (initials: string) => {\r\n    setSelectedTeams((prev) => (\r\n      prev.includes(initials)\r\n        ? prev.filter((item) => item !== initials)\r\n        : [...prev, initials]\r\n    ));\r\n  };\r\n\r\n  const toggleRoleSelection = (role: string) => {\r\n    const isRoleCurrentlySelected = selectedRoles.includes(role);\r\n    \r\n    // Update role selection\r\n    setSelectedRoles((prev) => (\r\n      isRoleCurrentlySelected\r\n        ? prev.filter((item) => item !== role)\r\n        : [...prev, role]\r\n    ));\r\n    \r\n    // Auto-select team members with this role (use teamMembers, not displayableTeamMembers)\r\n    if (!isRoleCurrentlySelected) {\r\n      // Adding role - select all members with this role\r\n      const membersWithRole = teamMembers\r\n        .filter(member => member.role === role)\r\n        .map(member => member.initials);\r\n      \r\n      setSelectedTeams(prev => {\r\n        const newSet = new Set([...prev, ...membersWithRole]);\r\n        return Array.from(newSet);\r\n      });\r\n    } else {\r\n      // Removing role - deselect members with ONLY this role\r\n      // (keep members who also match other selected roles)\r\n      const remainingRoles = selectedRoles.filter(r => r !== role);\r\n      \r\n      if (remainingRoles.length > 0) {\r\n        // Keep members who have any of the remaining selected roles\r\n        setSelectedTeams(prev => \r\n          prev.filter(initials => {\r\n            const member = teamMembers.find(m => m.initials === initials);\r\n            return member && remainingRoles.includes(member.role ?? '');\r\n          })\r\n        );\r\n      } else {\r\n        // No other roles selected, clear team selection\r\n        const membersWithRole = teamMembers\r\n          .filter(member => member.role === role)\r\n          .map(member => member.initials);\r\n        \r\n        setSelectedTeams(prev => prev.filter(initials => !membersWithRole.includes(initials)));\r\n      }\r\n    }\r\n  };\r\n\r\n  // Check if a team member has worked (has WIP hours) in the current date range\r\n  const memberHasWorked = (memberInitials: string): boolean => {\r\n    // Check WIP data directly for the member, not through metricsByMember\r\n    // This ensures the visual state is independent of filters\r\n    const member = teamMembers.find(m => m.initials === memberInitials);\r\n    if (!member || !member.clioId) return false;\r\n    \r\n    const wipForMember = wipByClioId.get(member.clioId) || [];\r\n    const wipHours = wipForMember.reduce((total, record) => total + safeNumber(record.quantity_in_hours), 0);\r\n    return wipHours > 0;\r\n  };\r\n\r\n  const handleColumnSort = (column: SortColumn) => {\r\n    if (sortColumn === column) {\r\n      // Toggle direction if same column\r\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      // New column, default to ascending\r\n      setSortColumn(column);\r\n      setSortDirection('asc');\r\n    }\r\n  };\r\n\r\n  const getSortIcon = (column: SortColumn): JSX.Element => {\r\n    const isActive = sortColumn === column;\r\n    const iconStyle: React.CSSProperties = {\r\n      marginLeft: '6px',\r\n      fontSize: '10px',\r\n      opacity: isActive ? 0.9 : 0.35,\r\n      transition: 'opacity 0.2s ease, transform 0.2s ease',\r\n      fontWeight: 'normal',\r\n      color: 'currentColor',\r\n      display: 'inline-block',\r\n      lineHeight: 1,\r\n    };\r\n\r\n    if (!isActive) {\r\n      return (\r\n        <span style={iconStyle}>▴</span>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <span style={iconStyle}>\r\n        {sortDirection === 'asc' ? '▴' : '▾'}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  const dashboardThemeClass = isDarkMode ? 'dark-theme' : 'light-theme';\r\n  const allTeamsSelected = selectedTeams.length === 0 || selectedTeams.length === displayableTeamMembers.length;\r\n  const allRolesSelected = selectedRoles.length === 0 || selectedRoles.length === ROLE_OPTIONS.length;\r\n\r\n  const handleSelectAllTeams = () => {\r\n    if (allTeamsSelected) {\r\n      return;\r\n    }\r\n    setSelectedTeams([]);\r\n  };\r\n\r\n  const handleSelectAllRoles = () => {\r\n    if (allRolesSelected) {\r\n      return;\r\n    }\r\n    setSelectedRoles([]);\r\n    // Also clear team selections that were auto-selected by roles\r\n    setSelectedTeams([]);\r\n  };\r\n\r\n  const isCustomRange = rangeKey === 'custom';\r\n  const activePresetKey = RANGE_OPTIONS.some(option => option.key === rangeKey)\r\n    ? rangeKey\r\n    : undefined;\r\n  const isAllPresetActive = rangeKey === 'all';\r\n  const formattedFromLabel = rangeKey === 'all' ? 'All Time' : formatDateTag(activeStart);\r\n  const formattedToLabel = formatDateTag(activeEnd);\r\n\r\n  const handleClearAllTime = () => {\r\n    handleRangeSelect('all');\r\n  };\r\n\r\n  return (\r\n    <div className={`management-dashboard-container animate-dashboard ${dashboardThemeClass}`}>\r\n      <div className=\"filter-toolbar\">\r\n        <div className=\"filter-toolbar__top\">\r\n          <div className=\"filter-toolbar__date-inputs\">\r\n            {isCustomRange ? (\r\n              <div className=\"date-pickers\">\r\n                <DatePicker\r\n                  label=\"From\"\r\n                  styles={getDatePickerStyles(isDarkMode)}\r\n                  value={startDate}\r\n                  onSelectDate={(date) => {\r\n                    setStartDate(date ?? undefined);\r\n                    setRangeKey('custom');\r\n                  }}\r\n                  allowTextInput\r\n                  firstDayOfWeek={DayOfWeek.Monday}\r\n                  formatDate={formatDateForPicker}\r\n                  parseDateFromString={parseDatePickerInput}\r\n                />\r\n                <DatePicker\r\n                  label=\"To\"\r\n                  styles={getDatePickerStyles(isDarkMode)}\r\n                  value={endDate}\r\n                  onSelectDate={(date) => {\r\n                    setEndDate(date ?? undefined);\r\n                    setRangeKey('custom');\r\n                  }}\r\n                  allowTextInput\r\n                  firstDayOfWeek={DayOfWeek.Monday}\r\n                  formatDate={formatDateForPicker}\r\n                  parseDateFromString={parseDatePickerInput}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <div className=\"date-stamp-group\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"date-stamp-button\"\r\n                  style={dateStampButtonStyle(isDarkMode)}\r\n                  onClick={handleActivateCustomRange}\r\n                  title=\"Click to customise the start date\"\r\n                  onMouseEnter={(e) => {\r\n                    e.currentTarget.style.background = isDarkMode ? 'rgba(30, 41, 59, 0.86)' : 'rgba(248, 250, 252, 1)';\r\n                    e.currentTarget.style.transform = 'translateY(-1px)';\r\n                  }}\r\n                  onMouseLeave={(e) => {\r\n                    e.currentTarget.style.background = isDarkMode ? 'rgba(15, 23, 42, 0.8)' : 'rgba(255, 255, 255, 0.95)';\r\n                    e.currentTarget.style.transform = 'translateY(0)';\r\n                  }}\r\n                >\r\n                  <span style={{ fontSize: 11, opacity: 0.7, fontWeight: 600 }}>From</span>\r\n                  <span style={{ fontSize: 16, fontWeight: 700 }}>{formattedFromLabel}</span>\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"date-stamp-button\"\r\n                  style={dateStampButtonStyle(isDarkMode)}\r\n                  onClick={handleActivateCustomRange}\r\n                  title=\"Click to customise the end date\"\r\n                  onMouseEnter={(e) => {\r\n                    e.currentTarget.style.background = isDarkMode ? 'rgba(30, 41, 59, 0.86)' : 'rgba(248, 250, 252, 1)';\r\n                    e.currentTarget.style.transform = 'translateY(-1px)';\r\n                  }}\r\n                  onMouseLeave={(e) => {\r\n                    e.currentTarget.style.background = isDarkMode ? 'rgba(15, 23, 42, 0.8)' : 'rgba(255, 255, 255, 0.95)';\r\n                    e.currentTarget.style.transform = 'translateY(0)';\r\n                  }}\r\n                >\r\n                  <span style={{ fontSize: 11, opacity: 0.7, fontWeight: 600 }}>To</span>\r\n                  <span style={{ fontSize: 16, fontWeight: 700 }}>{formattedToLabel}</span>\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"filter-toolbar__actions\">\r\n            <div \r\n              className=\"filter-status-chip\"\r\n              style={{\r\n                borderColor: isFetching ? undefined : getRefreshIndicatorColor(),\r\n                transition: 'border-color 1s ease',\r\n              }}\r\n              title={\r\n                isFetching \r\n                  ? 'Refreshing data...' \r\n                  : `Next auto-refresh in ${Math.floor((15 * 60 - timeElapsed) / 60)}m ${(15 * 60 - timeElapsed) % 60}s`\r\n              }\r\n            >\r\n              {isFetching ? (\r\n                <>\r\n                  <div className=\"filter-status-indicator\" />\r\n                  Refreshing\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <div \r\n                    className=\"filter-status-indicator\" \r\n                    style={{ \r\n                      background: getRefreshIndicatorColor(),\r\n                      transition: 'background 1s ease',\r\n                    }}\r\n                  />\r\n                  {formatTimeAgo(lastRefreshTimestamp)}\r\n                </>\r\n              )}\r\n            </div>\r\n\r\n            {triggerRefresh && (\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  triggerRefresh();\r\n                  setTimeElapsed(0); // Reset timer on manual refresh\r\n                }}\r\n                disabled={isFetching}\r\n                className=\"filter-icon-button\"\r\n                title={isFetching ? 'Refreshing data...' : 'Refresh datasets (auto-refreshes every 15 min)'}\r\n                aria-label={isFetching ? 'Refreshing data' : 'Refresh datasets'}\r\n              >\r\n                <Icon \r\n                  iconName=\"Refresh\" \r\n                  style={{ \r\n                    fontSize: 16,\r\n                    animation: isFetching ? 'spin 1s linear infinite' : 'none'\r\n                  }} \r\n                />\r\n              </button>\r\n            )}\r\n\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => setShowRoleFilter(!showRoleFilter)}\r\n              className=\"filter-icon-button\"\r\n              style={{\r\n                color: showRoleFilter \r\n                  ? (isDarkMode ? '#60a5fa' : colours.highlight)\r\n                  : (isDarkMode ? 'rgba(148, 163, 184, 0.6)' : 'rgba(13, 47, 96, 0.5)'),\r\n                transform: showRoleFilter ? 'translateY(-1px)' : 'translateY(0)'\r\n              }}\r\n              title={showRoleFilter ? 'Hide role filter' : 'Show role filter'}\r\n              aria-label={showRoleFilter ? 'Hide role filter' : 'Show role filter'}\r\n            >\r\n              <Icon iconName=\"People\" style={{ fontSize: 16 }} />\r\n            </button>\r\n\r\n            <div className=\"filter-icon-button-wrapper\">\r\n              <button\r\n                type=\"button\"\r\n                onMouseEnter={() => setShowDatasetInfo(true)}\r\n                onMouseLeave={() => setShowDatasetInfo(false)}\r\n                className=\"filter-icon-button\"\r\n                style={{\r\n                  color: isDarkMode ? '#60a5fa' : colours.highlight,\r\n                  transform: showDatasetInfo ? 'translateY(-1px)' : 'translateY(0)'\r\n                }}\r\n                title=\"Dataset information\"\r\n                aria-label=\"Dataset information\"\r\n              >\r\n                <Icon iconName=\"Info\" style={{ fontSize: 16 }} />\r\n              </button>\r\n\r\n              {showDatasetInfo && (\r\n                <div className=\"filter-dataset-tooltip\">\r\n                  <div style={{ fontWeight: 700, marginBottom: 8, fontSize: 13, color: isDarkMode ? '#60a5fa' : colours.highlight }}>\r\n                    Dataset Date Ranges\r\n                  </div>\r\n                  <div style={{ display: 'flex', flexDirection: 'column', gap: 6 }}>\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between', gap: 12 }}>\r\n                      <span style={{ opacity: 0.8 }}>Enquiries:</span>\r\n                      <span style={{ fontWeight: 600 }}>Last 24 months</span>\r\n                    </div>\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between', gap: 12 }}>\r\n                      <span style={{ opacity: 0.8 }}>Matters:</span>\r\n                      <span style={{ fontWeight: 600 }}>Last 24 months</span>\r\n                    </div>\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between', gap: 12 }}>\r\n                      <span style={{ opacity: 0.8 }}>WIP:</span>\r\n                      <span style={{ fontWeight: 600 }}>Last 12 months</span>\r\n                    </div>\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between', gap: 12 }}>\r\n                      <span style={{ opacity: 0.8 }}>Recovered Fees:</span>\r\n                      <span style={{ fontWeight: 600 }}>Last 12 months</span>\r\n                    </div>\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between', gap: 12 }}>\r\n                      <span style={{ opacity: 0.8 }}>Annual Leave:</span>\r\n                      <span style={{ fontWeight: 600 }}>Current year</span>\r\n                    </div>\r\n                  </div>\r\n                  <div style={{\r\n                    marginTop: 10,\r\n                    paddingTop: 8,\r\n                    borderTop: `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.2)' : 'rgba(148, 163, 184, 0.3)'}`,\r\n                    fontSize: 11,\r\n                    opacity: 0.7,\r\n                    fontStyle: 'italic'\r\n                  }}>\r\n                    Data outside these ranges won't appear in metrics\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"filter-toolbar__middle\">\r\n          <div className=\"filter-toolbar__presets\">\r\n            <div className=\"filter-preset-group\">\r\n              {RANGE_OPTIONS.slice(0, 2).map(({ key, label }) => (\r\n                <DefaultButton\r\n                  key={key}\r\n                  text={label}\r\n                  onClick={() => handleRangeSelect(key)}\r\n                  styles={getRangeButtonStyles(isDarkMode, activePresetKey === key, false)}\r\n                />\r\n              ))}\r\n              <div className=\"preset-separator\">|</div>\r\n              {RANGE_OPTIONS.slice(2, 4).map(({ key, label }) => (\r\n                <DefaultButton\r\n                  key={key}\r\n                  text={label}\r\n                  onClick={() => handleRangeSelect(key)}\r\n                  styles={getRangeButtonStyles(isDarkMode, activePresetKey === key, false)}\r\n                />\r\n              ))}\r\n              <div className=\"preset-separator\">|</div>\r\n              {RANGE_OPTIONS.slice(4, 6).map(({ key, label }) => (\r\n                <DefaultButton\r\n                  key={key}\r\n                  text={label}\r\n                  onClick={() => handleRangeSelect(key)}\r\n                  styles={getRangeButtonStyles(isDarkMode, activePresetKey === key, false)}\r\n                />\r\n              ))}\r\n              <div className=\"preset-separator\">|</div>\r\n              {RANGE_OPTIONS.slice(6, 8).map(({ key, label }) => (\r\n                <DefaultButton\r\n                  key={key}\r\n                  text={label}\r\n                  onClick={() => handleRangeSelect(key)}\r\n                  styles={getRangeButtonStyles(isDarkMode, activePresetKey === key, false)}\r\n                />\r\n              ))}\r\n              <div className=\"preset-separator\">|</div>\r\n              {RANGE_OPTIONS.slice(8, 10).map(({ key, label }) => (\r\n                <DefaultButton\r\n                  key={key}\r\n                  text={label}\r\n                  onClick={() => handleRangeSelect(key)}\r\n                  styles={getRangeButtonStyles(isDarkMode, activePresetKey === key, false)}\r\n                />\r\n              ))}\r\n              {activePresetKey && activePresetKey !== 'all' && (\r\n                <button\r\n                  onClick={handleClearAllTime}\r\n                  style={clearFilterButtonStyle(isDarkMode)}\r\n                  title=\"Clear date range filter\"\r\n                >\r\n                  <span style={{ fontSize: 16 }}>×</span>\r\n                  Clear\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"filter-toolbar__bottom\">\r\n          <div className=\"filter-group-container team-filter-container\">\r\n            <div className=\"team-slicer-buttons\">\r\n              {displayableTeamMembers.map((member) => (\r\n                <DefaultButton\r\n                  key={member.initials}\r\n                  text={member.initials}\r\n                  onClick={() => toggleTeamSelection(member.initials)}\r\n                  title={memberHasWorked(member.initials) ? undefined : `${member.display || member.initials} has no WIP hours in this period`}\r\n                  styles={getTeamButtonStyles(isDarkMode, selectedTeams.includes(member.initials), memberHasWorked(member.initials))}\r\n                />\r\n              ))}\r\n              {!allTeamsSelected && (\r\n                <button\r\n                  onClick={handleSelectAllTeams}\r\n                  style={clearFilterButtonStyle(isDarkMode)}\r\n                  title=\"Clear team filter\"\r\n                >\r\n                  <span style={{ fontSize: 16 }}>×</span>\r\n                  Clear\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {showRoleFilter && (\r\n          <div className=\"filter-toolbar__roles\">\r\n            <div className=\"filter-group-container role-filter-container\">\r\n              <div className=\"role-slicer-buttons\">\r\n                {ROLE_OPTIONS.map(({ key, label }) => (\r\n                  <DefaultButton\r\n                    key={key}\r\n                    text={label}\r\n                    onClick={() => toggleRoleSelection(key)}\r\n                    styles={getRoleButtonStyles(isDarkMode, selectedRoles.includes(key))}\r\n                  />\r\n                ))}\r\n                {!allRolesSelected && (\r\n                  <button\r\n                    onClick={handleSelectAllRoles}\r\n                    style={clearFilterButtonStyle(isDarkMode)}\r\n                    title=\"Clear role filter\"\r\n                  >\r\n                    <span style={{ fontSize: 16 }}>×</span>\r\n                    Clear\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(140px, 1fr))', gap: 12 }}>\r\n        <div style={summaryChipStyle(isDarkMode)}>\r\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', width: '100%' }}>\r\n            <span style={{ fontSize: 12, opacity: 0.65 }}>Enquiries</span>\r\n            {renderTrendIndicator(summaryTotals.enquiries, previousMetrics?.enquiries, 'count', 'enquiries')}\r\n          </div>\r\n          <span style={{ fontSize: 20, fontWeight: 700 }}>{summaryTotals.enquiries.toLocaleString('en-GB')}</span>\r\n        </div>\r\n        <div style={summaryChipStyle(isDarkMode)}>\r\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', width: '100%' }}>\r\n            <span style={{ fontSize: 12, opacity: 0.65 }}>Matters</span>\r\n            {renderTrendIndicator(summaryTotals.matters, previousMetrics?.matters, 'count', 'matters')}\r\n          </div>\r\n          <span style={{ fontSize: 20, fontWeight: 700 }}>{summaryTotals.matters.toLocaleString('en-GB')}</span>\r\n        </div>\r\n        <div style={summaryChipStyle(isDarkMode)}>\r\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', width: '100%' }}>\r\n            <span style={{ fontSize: 12, opacity: 0.65 }}>WIP Hours</span>\r\n            {renderTrendIndicator(summaryTotals.wipHours, previousMetrics?.wipHours, 'hours', 'wipHours')}\r\n          </div>\r\n          <span style={{ fontSize: 20, fontWeight: 700 }}>{formatHours(summaryTotals.wipHours)}</span>\r\n        </div>\r\n        <div style={summaryChipStyle(isDarkMode)}>\r\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', width: '100%' }}>\r\n            <span style={{ fontSize: 12, opacity: 0.65 }}>WIP (£)</span>\r\n            {renderTrendIndicator(summaryTotals.wipValue, previousMetrics?.wipValue, 'currency', 'wipValue')}\r\n          </div>\r\n          <span style={{ fontSize: 20, fontWeight: 700 }}>{formatCurrency(summaryTotals.wipValue)}</span>\r\n        </div>\r\n        <div \r\n          style={{\r\n            ...summaryChipStyle(isDarkMode),\r\n            position: 'relative',\r\n          }}\r\n          onMouseEnter={() => setShowCollectedInfo(true)}\r\n          onMouseLeave={() => setShowCollectedInfo(false)}\r\n        >\r\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', width: '100%' }}>\r\n            <div style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\r\n              <span style={{ fontSize: 12, opacity: 0.65 }}>Collected</span>\r\n              <Icon \r\n                iconName=\"Info\" \r\n                style={{ \r\n                  fontSize: 10, \r\n                  opacity: 0.4,\r\n                  cursor: 'help'\r\n                }} \r\n              />\r\n            </div>\r\n            {renderTrendIndicator(summaryTotals.collected, previousMetrics?.collected, 'currency', 'collected')}\r\n          </div>\r\n          <span style={{ fontSize: 20, fontWeight: 700 }}>{formatCurrency(summaryTotals.collected)}</span>\r\n          \r\n          {showCollectedInfo && (\r\n            <div style={{\r\n              position: 'absolute',\r\n              top: '100%',\r\n              right: 0,\r\n              marginTop: 8,\r\n              padding: '10px 12px',\r\n              background: isDarkMode ? 'rgba(15, 23, 42, 0.98)' : 'rgba(255, 255, 255, 0.98)',\r\n              border: `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.3)' : 'rgba(148, 163, 184, 0.25)'}`,\r\n              borderRadius: 8,\r\n              boxShadow: isDarkMode ? '0 8px 16px rgba(0, 0, 0, 0.4)' : '0 4px 12px rgba(0, 0, 0, 0.15)',\r\n              fontSize: 11,\r\n              lineHeight: 1.5,\r\n              width: 240,\r\n              zIndex: 1000,\r\n              color: isDarkMode ? '#e2e8f0' : '#334155',\r\n              textAlign: 'left',\r\n            }}>\r\n              <div style={{ fontWeight: 700, marginBottom: 6, fontSize: 12, textAlign: 'left' }}>\r\n                Total Fees Collected\r\n              </div>\r\n              <div style={{ opacity: 0.85, textAlign: 'left' }}>\r\n                Includes all fee earners (active, Ops, and inactive).\r\n              </div>\r\n              <div style={{ marginTop: 6, opacity: 0.85, textAlign: 'left' }}>\r\n                Table below shows only active solicitors and selected filters.\r\n              </div>\r\n              <div style={{ \r\n                marginTop: 8, \r\n                paddingTop: 6, \r\n                borderTop: `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.2)' : 'rgba(148, 163, 184, 0.25)'}`,\r\n                fontSize: 10,\r\n                opacity: 0.65,\r\n                fontStyle: 'italic',\r\n                textAlign: 'left'\r\n              }}>\r\n                Excludes disbursements\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {isFetching && (\r\n  <div style={{ display: 'flex', alignItems: 'center', gap: 6 }}>\r\n          <Spinner label=\"Refreshing data\" />\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"metrics-table\">\r\n        <div className=\"metrics-table-header\">\r\n          <span \r\n            onClick={() => handleColumnSort('displayName')}\r\n            style={{ cursor: 'pointer', userSelect: 'none' }}\r\n            title=\"Click to sort by team member\"\r\n          >\r\n            Team {getSortIcon('displayName')}\r\n          </span>\r\n          <span \r\n            onClick={() => handleColumnSort('enquiries')}\r\n            style={{ cursor: 'pointer', userSelect: 'none' }}\r\n            title=\"Click to sort by enquiries\"\r\n          >\r\n            Enquiries {getSortIcon('enquiries')}\r\n          </span>\r\n          <span \r\n            onClick={() => handleColumnSort('matters')}\r\n            style={{ cursor: 'pointer', userSelect: 'none' }}\r\n            title=\"Click to sort by matters\"\r\n          >\r\n            Matters {getSortIcon('matters')}\r\n          </span>\r\n          <span \r\n            onClick={() => handleColumnSort('wipHours')}\r\n            style={{ cursor: 'pointer', userSelect: 'none' }}\r\n            title=\"Click to sort by WIP hours\"\r\n          >\r\n            WIP (h) {getSortIcon('wipHours')}\r\n          </span>\r\n          <span \r\n            onClick={() => handleColumnSort('wipValue')}\r\n            style={{ cursor: 'pointer', userSelect: 'none' }}\r\n            title=\"Click to sort by WIP value\"\r\n          >\r\n            WIP (£) {getSortIcon('wipValue')}\r\n          </span>\r\n          <span \r\n            onClick={() => handleColumnSort('collected')}\r\n            style={{ cursor: 'pointer', userSelect: 'none' }}\r\n            title=\"Click to sort by collected fees\"\r\n          >\r\n            Collected {getSortIcon('collected')}\r\n          </span>\r\n        </div>\r\n        {sortedMetricsByMember.length === 0 && (\r\n          <div className=\"metrics-table-row animate-table-row\">\r\n            <span>No team members selected</span>\r\n            <span>0</span>\r\n            <span>0</span>\r\n            <span>0h</span>\r\n            <span>£0</span>\r\n            <span>£0</span>\r\n          </div>\r\n        )}\r\n        {sortedMetricsByMember.map((row, index) => {\r\n          const isInactive = row.wipHours === 0;\r\n          const prevRow = index > 0 ? sortedMetricsByMember[index - 1] : null;\r\n          const isFirstInactive = isInactive && (prevRow?.wipHours || 0) > 0;\r\n          \r\n          return (\r\n            <React.Fragment key={`${row.initials}-${startDate?.getTime()}-${endDate?.getTime()}-${rangeKey}`}>\r\n              {isFirstInactive && (\r\n                <div className=\"metrics-table-row\" style={{\r\n                  opacity: 0.6,\r\n                  fontSize: '11px',\r\n                  fontStyle: 'italic',\r\n                  background: isDarkMode ? 'rgba(71, 85, 105, 0.1)' : 'rgba(148, 163, 184, 0.08)',\r\n                  borderTop: `1px solid ${isDarkMode ? '#475569' : '#94A3B8'}`,\r\n                  padding: '6px 12px',\r\n                }}>\r\n                  <span>— Inactive in this period —</span>\r\n                  <span></span>\r\n                  <span></span>\r\n                  <span></span>\r\n                  <span></span>\r\n                  <span></span>\r\n                </div>\r\n              )}\r\n              <div \r\n                className=\"metrics-table-row animate-table-row\" \r\n                style={{ \r\n                  animationDelay: `${Math.min(index * 0.05, 0.5)}s`,\r\n                  opacity: isInactive ? 0.4 : 1,\r\n                  background: isInactive ? (isDarkMode ? 'rgba(71, 85, 105, 0.15)' : 'rgba(148, 163, 184, 0.1)') : 'transparent',\r\n                  borderLeft: isInactive ? `3px solid ${isDarkMode ? '#475569' : '#94A3B8'}` : 'none',\r\n                  paddingLeft: isInactive ? '9px' : '12px',\r\n                  filter: isInactive ? 'grayscale(20%)' : 'none',\r\n                  color: isInactive ? (isDarkMode ? '#64748B' : '#94A3B8') : 'inherit'\r\n                }}\r\n              >\r\n            <span style={{ display: 'flex', alignItems: 'center', gap: '6px' }}>\r\n              <span \r\n                style={{ \r\n                  cursor: 'help',\r\n                  padding: '2px 4px',\r\n                  borderRadius: 4,\r\n                  transition: 'all 0.2s ease',\r\n                }}\r\n                onMouseEnter={(e) => {\r\n                  const rect = e.currentTarget.getBoundingClientRect();\r\n                  const previousData = previousMemberMetrics.get(row.initials);\r\n                  setHoveredMember({\r\n                    member: row,\r\n                    previousData,\r\n                    x: rect.left + rect.width / 2,\r\n                    y: rect.top - 10\r\n                  });\r\n                }}\r\n                onMouseLeave={() => setHoveredMember(null)}\r\n              >\r\n                {row.displayName}\r\n              </span>\r\n              {row.trendDirection && row.trendDirection !== 'neutral' && (\r\n                <span \r\n                  style={{ \r\n                    color: getTrendColor(row.trendDirection, isDarkMode),\r\n                    fontSize: '12px',\r\n                    fontWeight: 600,\r\n                  }}\r\n                  title={\r\n                    row.trendDirection === 'away' ? 'Away on leave' :\r\n                    row.trendDirection === 'up' && (row.targetHours || 0) === 0 ? 'Above target (calculation issue)' :\r\n                    row.trendDirection === 'up' ? `Performance: ${row.wipHours.toFixed(1)}h / ${(row.targetHours || 0).toFixed(1)}h target (${((row.wipHours / (row.targetHours || 1)) * 100).toFixed(1)}% of target)` :\r\n                    row.trendDirection === 'down' ? `Performance: ${row.wipHours.toFixed(1)}h / ${(row.targetHours || 0).toFixed(1)}h target (${((row.wipHours / (row.targetHours || 1)) * 100).toFixed(1)}% of target)` :\r\n                    `At target: ${row.wipHours.toFixed(1)}h / ${(row.targetHours || 0).toFixed(1)}h`\r\n                  }\r\n                >\r\n                  {getTrendArrow(row.trendDirection)}\r\n                  {row.trendDirection !== 'away' && row.targetHours && row.targetHours > 0 && (\r\n                    <span style={{ \r\n                      fontSize: '9px', \r\n                      marginLeft: '2px',\r\n                      opacity: 0.7,\r\n                      fontWeight: 500\r\n                    }}>\r\n                      {((row.wipHours / row.targetHours) * 100).toFixed(0)}%\r\n                    </span>\r\n                  )}\r\n                </span>\r\n              )}\r\n              {row.trendDirection === 'neutral' && row.wipHours === 0 && (\r\n                <span \r\n                  style={{ \r\n                    color: getTrendColor('neutral', isDarkMode),\r\n                    fontSize: '12px',\r\n                    fontWeight: 600,\r\n                  }}\r\n                  title=\"No work due to leave\"\r\n                >\r\n                  —\r\n                </span>\r\n              )}\r\n            </span>\r\n            <span>{row.enquiries.toLocaleString('en-GB')}</span>\r\n            <span>{row.matters.toLocaleString('en-GB')}</span>\r\n            <span \r\n              title={`WIP Hours: ${formatHours(row.wipHours)}\\nTarget: ${formatHours(row.targetHours || 0)}\\nDate Range: ${startDate?.toLocaleDateString('en-GB')} - ${endDate?.toLocaleDateString('en-GB')}\\nPerformance: ${row.targetHours ? ((row.wipHours / row.targetHours) * 100).toFixed(1) : 'N/A'}% of target`}\r\n            >\r\n              {formatHours(row.wipHours)}\r\n            </span>\r\n            <span>{formatCurrency(row.wipValue)}</span>\r\n            <span>{formatCurrency(row.collected)}</span>\r\n          </div>\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n        <div className=\"metrics-table-row animate-table-row\" style={{ animationDelay: `${sortedMetricsByMember.length * 0.05}s` }}>\r\n          <span>Total</span>\r\n          <span>{totals.enquiries.toLocaleString('en-GB')}</span>\r\n          <span>{totals.matters.toLocaleString('en-GB')}</span>\r\n          <span>{formatHours(totals.wipHours)}</span>\r\n          <span>{formatCurrency(totals.wipValue)}</span>\r\n          <span>{formatCurrency(totals.collected)}</span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Premium Hover Tooltip */}\r\n      {hoveredMetric && previousRange && (\r\n        <div\r\n          style={{\r\n            position: 'fixed',\r\n            left: Math.max(20, Math.min(hoveredMetric.x, window.innerWidth - 300)), // Keep within screen bounds\r\n            top: hoveredMetric.y - 20, // 20px above cursor\r\n            transform: hoveredMetric.x > window.innerWidth - 140 ? 'translateX(-100%)' : \r\n                      hoveredMetric.x < 140 ? 'translateX(0%)' : 'translateX(-50%)', // Smart alignment\r\n            zIndex: 10000,\r\n            pointerEvents: 'none',\r\n            maxWidth: 280,\r\n          }}\r\n        >\r\n          <div style={{\r\n            background: isDarkMode \r\n              ? 'linear-gradient(145deg, rgba(15, 23, 42, 0.98) 0%, rgba(30, 41, 59, 0.98) 100%)'\r\n              : 'linear-gradient(145deg, rgba(255, 255, 255, 0.98) 0%, rgba(248, 250, 252, 0.98) 100%)',\r\n            border: `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.3)' : 'rgba(148, 163, 184, 0.25)'}`,\r\n            borderRadius: 12,\r\n            padding: '12px 16px',\r\n            fontSize: 12,\r\n            fontFamily: 'Raleway, sans-serif',\r\n            boxShadow: isDarkMode \r\n              ? '0 20px 25px -5px rgba(0, 0, 0, 0.5), 0 10px 10px -5px rgba(0, 0, 0, 0.2)'\r\n              : '0 20px 25px -5px rgba(0, 0, 0, 0.15), 0 10px 10px -5px rgba(0, 0, 0, 0.08)',\r\n            backdropFilter: 'blur(20px)',\r\n            color: isDarkMode ? '#e2e8f0' : '#475569',\r\n          }}>\r\n            <div style={{ fontWeight: 600, marginBottom: 8, fontSize: 13 }}>\r\n              Period Comparison\r\n            </div>\r\n            <div style={{ display: 'flex', flexDirection: 'column', gap: 6 }}>\r\n              <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <span style={{ opacity: 0.7, fontWeight: 500 }}>{getRangeLabel(rangeKey)}:</span>\r\n                <span style={{ fontWeight: 600 }}>\r\n                  {hoveredMetric.type === 'enquiries' ? summaryTotals.enquiries.toLocaleString('en-GB') :\r\n                   hoveredMetric.type === 'matters' ? summaryTotals.matters.toLocaleString('en-GB') :\r\n                   hoveredMetric.type === 'wipHours' ? formatHours(summaryTotals.wipHours) :\r\n                   hoveredMetric.type === 'wipValue' ? formatCurrency(summaryTotals.wipValue) :\r\n                   hoveredMetric.type === 'collected' ? formatCurrency(summaryTotals.collected) : ''}\r\n                </span>\r\n              </div>\r\n              <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <span style={{ opacity: 0.7, fontWeight: 500 }}>{getPreviousRangeLabel(rangeKey)}:</span>\r\n                <span style={{ fontWeight: 600 }}>\r\n                  {hoveredMetric.type === 'enquiries' ? (previousMetrics?.enquiries || 0).toLocaleString('en-GB') :\r\n                   hoveredMetric.type === 'matters' ? (previousMetrics?.matters || 0).toLocaleString('en-GB') :\r\n                   hoveredMetric.type === 'wipHours' ? formatHours(previousMetrics?.wipHours || 0) :\r\n                   hoveredMetric.type === 'wipValue' ? formatCurrency(previousMetrics?.wipValue || 0) :\r\n                   hoveredMetric.type === 'collected' ? formatCurrency(previousMetrics?.collected || 0) : ''}\r\n                </span>\r\n              </div>\r\n              <div style={{ \r\n                height: 1, \r\n                background: isDarkMode ? 'rgba(148, 163, 184, 0.2)' : 'rgba(148, 163, 184, 0.25)', \r\n                margin: '6px 0' \r\n              }} />\r\n              <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', fontSize: 11 }}>\r\n                <span style={{ opacity: 0.6 }}>{formatDateRange(startDate || rangeStart, endDate || rangeEnd)}</span>\r\n                <span style={{ opacity: 0.6 }}>vs {formatDateRange(previousRange.start, previousRange.end)}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Premium Team Member Hover Tooltip */}\r\n      {hoveredMember && previousRange && (\r\n        <div\r\n          style={{\r\n            position: 'fixed',\r\n            left: Math.max(20, Math.min(hoveredMember.x, window.innerWidth - 340)), // Keep within screen bounds\r\n            top: hoveredMember.y - 20, // 20px above cursor\r\n            transform: hoveredMember.x > window.innerWidth - 160 ? 'translateX(-100%)' : \r\n                      hoveredMember.x < 160 ? 'translateX(0%)' : 'translateX(-50%)', // Smart alignment\r\n            zIndex: 10000,\r\n            pointerEvents: 'none',\r\n            maxWidth: 320,\r\n          }}\r\n        >\r\n          <div style={{\r\n            background: isDarkMode \r\n              ? 'linear-gradient(145deg, rgba(15, 23, 42, 0.98) 0%, rgba(30, 41, 59, 0.98) 100%)'\r\n              : 'linear-gradient(145deg, rgba(255, 255, 255, 0.98) 0%, rgba(248, 250, 252, 0.98) 100%)',\r\n            border: `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.3)' : 'rgba(148, 163, 184, 0.25)'}`,\r\n            borderRadius: 12,\r\n            padding: '16px 20px',\r\n            fontSize: 12,\r\n            fontFamily: 'Raleway, sans-serif',\r\n            boxShadow: isDarkMode \r\n              ? '0 20px 25px -5px rgba(0, 0, 0, 0.5), 0 10px 10px -5px rgba(0, 0, 0, 0.2)'\r\n              : '0 20px 25px -5px rgba(0, 0, 0, 0.15), 0 10px 10px -5px rgba(0, 0, 0, 0.08)',\r\n            backdropFilter: 'blur(20px)',\r\n            color: isDarkMode ? '#e2e8f0' : '#475569',\r\n          }}>\r\n            <div style={{ fontWeight: 700, marginBottom: 12, fontSize: 14, color: isDarkMode ? '#f1f5f9' : '#334155' }}>\r\n              {hoveredMember.member.displayName}\r\n            </div>\r\n            \r\n            <div style={{ display: 'grid', gridTemplateColumns: '1fr auto auto', gap: '8px 16px', alignItems: 'center' }}>\r\n              <div style={{ fontWeight: 600, opacity: 0.8, fontSize: 11, textTransform: 'uppercase', letterSpacing: '0.5px' }}>Metric</div>\r\n              <div style={{ fontWeight: 600, opacity: 0.8, fontSize: 11, textTransform: 'uppercase', letterSpacing: '0.5px', textAlign: 'right' }}>{getRangeLabel(rangeKey)}</div>\r\n              <div style={{ fontWeight: 600, opacity: 0.8, fontSize: 11, textTransform: 'uppercase', letterSpacing: '0.5px', textAlign: 'right' }}>{getPreviousRangeLabel(rangeKey)}</div>\r\n              \r\n              <div style={{ \r\n                gridColumn: '1 / -1', \r\n                height: 1, \r\n                background: isDarkMode ? 'rgba(148, 163, 184, 0.2)' : 'rgba(148, 163, 184, 0.25)', \r\n                margin: '4px 0' \r\n              }} />\r\n              \r\n              <div style={{ fontWeight: 500 }}>Enquiries</div>\r\n              <div style={{ fontWeight: 600, textAlign: 'right' }}>{hoveredMember.member.enquiries}</div>\r\n              <div style={{ fontWeight: 600, textAlign: 'right', opacity: 0.7 }}>{hoveredMember.previousData?.enquiries || 0}</div>\r\n              \r\n              <div style={{ fontWeight: 500 }}>Matters</div>\r\n              <div style={{ fontWeight: 600, textAlign: 'right' }}>{hoveredMember.member.matters}</div>\r\n              <div style={{ fontWeight: 600, textAlign: 'right', opacity: 0.7 }}>{hoveredMember.previousData?.matters || 0}</div>\r\n              \r\n              <div style={{ fontWeight: 500 }}>WIP Hours</div>\r\n              <div style={{ fontWeight: 600, textAlign: 'right' }}>{formatHours(hoveredMember.member.wipHours)}</div>\r\n              <div style={{ fontWeight: 600, textAlign: 'right', opacity: 0.7 }}>{formatHours(hoveredMember.previousData?.wipHours || 0)}</div>\r\n              \r\n              <div style={{ fontWeight: 500 }}>WIP Value</div>\r\n              <div style={{ fontWeight: 600, textAlign: 'right' }}>{formatCurrency(hoveredMember.member.wipValue)}</div>\r\n              <div style={{ fontWeight: 600, textAlign: 'right', opacity: 0.7 }}>{formatCurrency(hoveredMember.previousData?.wipValue || 0)}</div>\r\n              \r\n              <div style={{ fontWeight: 500 }}>Collected</div>\r\n              <div style={{ fontWeight: 600, textAlign: 'right' }}>{formatCurrency(hoveredMember.member.collected)}</div>\r\n              <div style={{ fontWeight: 600, textAlign: 'right', opacity: 0.7 }}>{formatCurrency(hoveredMember.previousData?.collected || 0)}</div>\r\n            </div>\r\n\r\n            <div style={{ \r\n              marginTop: 12, \r\n              paddingTop: 12, \r\n              borderTop: `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.2)' : 'rgba(148, 163, 184, 0.25)'}`,\r\n              display: 'flex', \r\n              justifyContent: 'space-between', \r\n              fontSize: 10, \r\n              opacity: 0.6 \r\n            }}>\r\n              <span>{formatDateRange(startDate || rangeStart, endDate || rangeEnd)}</span>\r\n              <span>{formatDateRange(previousRange.start, previousRange.end)}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManagementDashboard;","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { \r\n  DatePicker, \r\n  DefaultButton, \r\n  Icon,\r\n  type IDatePickerStyles, \r\n  type IButtonStyles,\r\n  DayOfWeek\r\n} from \"@fluentui/react\";\r\nimport { colours } from \"../../app/styles/colours\";\r\nimport { useTheme } from \"../../app/functionality/ThemeContext\";\r\nimport { TeamData } from \"../../app/functionality/types\";\r\nimport './ManagementDashboard.css';\r\n\r\nexport interface AnnualLeaveRecord {\r\n  request_id: number;\r\n  fe: string;\r\n  start_date: string;\r\n  end_date: string;\r\n  reason: string;\r\n  status: string;\r\n  days_taken: number;\r\n  leave_type?: string;\r\n  rejection_notes?: string;\r\n  hearing_confirmation?: boolean;\r\n  hearing_details?: string;\r\n}\r\n\r\ninterface Props {\r\n  data: AnnualLeaveRecord[];\r\n  teamData: TeamData[];\r\n  triggerRefresh?: () => void;\r\n  lastRefreshTimestamp?: number;\r\n  isFetching?: boolean;\r\n}\r\n\r\nconst UNPAID_LEAVE_CAP = 5;\r\n\r\ntype RangeKey =\r\n  | 'all'\r\n  | 'today'\r\n  | 'yesterday'\r\n  | 'week'\r\n  | 'lastWeek'\r\n  | 'month'\r\n  | 'lastMonth'\r\n  | 'last90Days'\r\n  | 'quarter'\r\n  | 'yearToDate'\r\n  | 'year'\r\n  | 'custom';\r\n\r\nconst RANGE_OPTIONS: Array<{ key: RangeKey; label: string }> = [\r\n  { key: 'today', label: 'Today' },\r\n  { key: 'yesterday', label: 'Yesterday' },\r\n  { key: 'week', label: 'This Week' },\r\n  { key: 'lastWeek', label: 'Last Week' },\r\n  { key: 'month', label: 'This Month' },\r\n  { key: 'lastMonth', label: 'Last Month' },\r\n  { key: 'last90Days', label: 'Last 90 Days' },\r\n  { key: 'quarter', label: 'This Quarter' },\r\n  { key: 'yearToDate', label: 'Year To Date' },\r\n  { key: 'year', label: 'Current Year' },\r\n];\r\n\r\nconst ROLE_OPTIONS = [\r\n  { key: 'Partner', label: 'Partner' },\r\n  { key: 'Associate Solicitor', label: 'Associate' },\r\n  { key: 'Solicitor', label: 'Solicitor' },\r\n  { key: 'Paralegal', label: 'Paralegal' },\r\n  { key: 'Ops', label: 'Ops' },\r\n  { key: 'Inactive', label: 'Inactive' },\r\n] as const;\r\n\r\ninterface TeamMember {\r\n  initials: string;\r\n  display: string;\r\n  role?: string;\r\n  isActive: boolean;\r\n  email?: string;\r\n  holidayEntitlement: number;\r\n}\r\n\r\nconst NAME_MAP: Record<string, string> = {\r\n  'Samuel Packwood': 'Sam Packwood',\r\n  'Bianca ODonnell': \"Bianca O'Donnell\",\r\n};\r\n\r\nconst mapNameIfNeeded = (name?: string | null): string => {\r\n  if (!name) return '';\r\n  return NAME_MAP[name] ?? name;\r\n};\r\n\r\nconst getInitials = (input: string): string => {\r\n  const s = (input || '').trim();\r\n  if (!s) return '?';\r\n  let tokens: string[] = [];\r\n  if (s.includes('@')) {\r\n    const local = s.split('@')[0] || '';\r\n    tokens = local.split(/[^a-zA-Z]+/).filter(Boolean);\r\n  } else {\r\n    tokens = s.split(/\\s+/).filter(Boolean);\r\n  }\r\n  if (tokens.length === 0) return '?';\r\n  const first = tokens[0][0] || '';\r\n  const last = tokens.length > 1 ? tokens[tokens.length - 1][0] : tokens[0][1] || '';\r\n  const initials = (first + last).toUpperCase();\r\n  return initials || '?';\r\n};\r\n\r\nconst displayName = (record?: TeamData | null): string => {\r\n  if (!record) return 'Unknown';\r\n  return (\r\n    record['Nickname'] ||\r\n    record['Full Name'] ||\r\n    record['First'] ||\r\n    record['Last'] ||\r\n    record['Initials'] ||\r\n    'Unknown'\r\n  );\r\n};\r\n\r\nconst parseDate = (value: unknown): Date | null => {\r\n  if (!value) return null;\r\n  const candidate = new Date(String(value));\r\n  return Number.isNaN(candidate.getTime()) ? null : candidate;\r\n};\r\n\r\nconst formatDateForPicker = (date?: Date | null): string => {\r\n  if (!date) return '';\r\n  return date.toLocaleDateString('en-GB', {\r\n    day: '2-digit',\r\n    month: 'short',\r\n    year: 'numeric',\r\n  });\r\n};\r\n\r\nconst parseDatePickerInput = (value?: string | null): Date | null =>\r\n  value ? parseDate(value) : null;\r\n\r\nconst formatDateTag = (date: Date | null): string => {\r\n  if (!date) return 'n/a';\r\n  return date.toLocaleDateString('en-GB', { day: '2-digit', month: 'short' });\r\n};\r\n\r\nconst getDatePickerStyles = (isDarkMode: boolean): Partial<IDatePickerStyles> => {\r\n  const baseBorder = isDarkMode ? 'rgba(148, 163, 184, 0.24)' : 'rgba(13, 47, 96, 0.18)';\r\n  const hoverBorder = isDarkMode ? 'rgba(135, 206, 255, 0.5)' : 'rgba(54, 144, 206, 0.4)';\r\n  const focusBorder = isDarkMode ? '#87ceeb' : colours.highlight;\r\n  const backgroundColour = isDarkMode ? 'rgba(15, 23, 42, 0.9)' : 'rgba(255, 255, 255, 0.95)';\r\n  const hoverBackground = isDarkMode ? 'rgba(15, 23, 42, 0.95)' : 'rgba(248, 250, 252, 1)';\r\n  const focusBackground = isDarkMode ? 'rgba(15, 23, 42, 1)' : 'rgba(255, 255, 255, 1)';\r\n\r\n  return {\r\n    root: {\r\n      maxWidth: 220,\r\n      '.ms-DatePicker': {\r\n        fontFamily: 'Raleway, sans-serif !important',\r\n      },\r\n    },\r\n    textField: {\r\n      root: {\r\n        fontFamily: 'Raleway, sans-serif !important',\r\n        width: '100% !important',\r\n      },\r\n      fieldGroup: {\r\n        height: '36px !important',\r\n        borderRadius: '8px !important',\r\n        border: `1px solid ${baseBorder} !important`,\r\n        background: `${backgroundColour} !important`,\r\n        padding: '0 14px !important',\r\n        boxShadow: isDarkMode\r\n          ? '0 2px 4px rgba(0, 0, 0, 0.2) !important'\r\n          : '0 1px 3px rgba(15, 23, 42, 0.08) !important',\r\n        transition: 'all 0.2s ease !important',\r\n        selectors: {\r\n          ':hover': {\r\n            border: `1px solid ${hoverBorder} !important`,\r\n            background: `${hoverBackground} !important`,\r\n            boxShadow: isDarkMode\r\n              ? '0 4px 8px rgba(0, 0, 0, 0.25) !important'\r\n              : '0 2px 6px rgba(15, 23, 42, 0.12) !important',\r\n          },\r\n          ':focus-within': {\r\n            border: `1px solid ${focusBorder} !important`,\r\n            background: `${focusBackground} !important`,\r\n            boxShadow: isDarkMode\r\n              ? '0 2px 4px rgba(135, 206, 255, 0.12) !important'\r\n              : '0 2px 6px rgba(54, 144, 206, 0.15) !important',\r\n          },\r\n        },\r\n      },\r\n      field: {\r\n        fontSize: '14px !important',\r\n        fontFamily: 'Raleway, sans-serif !important',\r\n        fontWeight: '500 !important',\r\n        background: 'transparent !important',\r\n        lineHeight: '20px !important',\r\n        border: 'none !important',\r\n        outline: 'none !important',\r\n      },\r\n    },\r\n    icon: {\r\n      color: `${isDarkMode ? colours.highlight : colours.missedBlue} !important`,\r\n      fontSize: '16px !important',\r\n      fontWeight: 'bold !important',\r\n    },\r\n    callout: {\r\n      fontSize: '14px !important',\r\n      borderRadius: '12px !important',\r\n      border: `1px solid ${baseBorder} !important`,\r\n      boxShadow: isDarkMode\r\n        ? '0 8px 24px rgba(0, 0, 0, 0.4) !important'\r\n        : '0 6px 20px rgba(15, 23, 42, 0.15) !important',\r\n    },\r\n    wrapper: {\r\n      borderRadius: '12px !important',\r\n    },\r\n  };\r\n};\r\n\r\nconst getRangeButtonStyles = (\r\n  isDarkMode: boolean,\r\n  active: boolean,\r\n  hasData: boolean = true,\r\n): IButtonStyles => {\r\n  const resolvedBackground = !hasData\r\n    ? isDarkMode\r\n      ? 'rgba(100, 116, 139, 0.2)'\r\n      : 'rgba(203, 213, 225, 0.35)'\r\n    : active\r\n      ? `linear-gradient(135deg, ${colours.highlight} 0%, #2f7cb3 100%)`\r\n      : isDarkMode\r\n        ? 'rgba(15, 23, 42, 0.8)'\r\n        : 'transparent';\r\n\r\n  const disabled = !hasData;\r\n\r\n  return {\r\n    root: {\r\n      minWidth: 48,\r\n      height: 32,\r\n      fontSize: 12,\r\n      fontWeight: 600,\r\n      borderRadius: 8,\r\n      border: '1px solid',\r\n      borderColor: active\r\n        ? '#2f7cb3'\r\n        : isDarkMode\r\n          ? 'rgba(148, 163, 184, 0.24)'\r\n          : 'rgba(148, 163, 184, 0.4)',\r\n      background: resolvedBackground,\r\n      color: disabled\r\n        ? isDarkMode\r\n          ? 'rgba(148, 163, 184, 0.55)'\r\n          : 'rgba(100, 116, 139, 0.8)'\r\n        : active\r\n          ? '#fff'\r\n          : isDarkMode\r\n            ? '#e2e8f0'\r\n            : '#1e293b',\r\n      cursor: disabled ? 'not-allowed' : 'pointer',\r\n      opacity: disabled ? 0.6 : 1,\r\n      fontFamily: 'Raleway, sans-serif',\r\n      padding: '0 12px',\r\n      transition: 'all 0.2s ease',\r\n    },\r\n    rootHovered: {\r\n      background: disabled\r\n        ? resolvedBackground\r\n        : active\r\n          ? '#2f7cb3'\r\n          : isDarkMode\r\n            ? 'rgba(148, 163, 184, 0.24)'\r\n            : 'rgba(54, 144, 206, 0.12)',\r\n    },\r\n    rootPressed: {\r\n      background: disabled\r\n        ? resolvedBackground\r\n        : active\r\n          ? 'linear-gradient(135deg, #266795 0%, #1e5a7a 100%)'\r\n          : isDarkMode\r\n            ? 'rgba(15, 23, 42, 0.9)'\r\n            : 'rgba(54, 144, 206, 0.14)',\r\n    },\r\n  };\r\n};\r\n\r\nconst getRoleButtonStyles = (\r\n  isDarkMode: boolean,\r\n  active: boolean,\r\n  hasRole: boolean = true,\r\n): IButtonStyles => {\r\n  const resolvedBackground = !hasRole\r\n    ? isDarkMode\r\n      ? 'rgba(100, 116, 139, 0.4)'\r\n      : 'rgba(203, 213, 225, 0.6)'\r\n    : active\r\n      ? `linear-gradient(135deg, ${colours.highlight} 0%, #2f7cb3 100%)`\r\n      : isDarkMode\r\n        ? 'rgba(15, 23, 42, 0.8)'\r\n        : 'transparent';\r\n\r\n  const disabled = !hasRole;\r\n\r\n  return {\r\n    root: {\r\n      minWidth: 40,\r\n      height: 28,\r\n      fontSize: 11,\r\n      fontWeight: 600,\r\n      border: '1px solid',\r\n      borderColor: active\r\n        ? '#2f7cb3'\r\n        : isDarkMode\r\n          ? 'rgba(148, 163, 184, 0.3)'\r\n          : 'rgba(203, 213, 225, 0.7)',\r\n      borderRadius: 4,\r\n      color: disabled\r\n        ? isDarkMode\r\n          ? 'rgba(148, 163, 184, 0.6)'\r\n          : 'rgba(100, 116, 139, 0.7)'\r\n        : active\r\n          ? '#fff'\r\n          : isDarkMode\r\n            ? '#e2e8f0'\r\n            : '#475569',\r\n      background: resolvedBackground,\r\n      cursor: disabled ? 'not-allowed' : 'pointer',\r\n      opacity: disabled ? 0.6 : 1,\r\n      padding: '0 10px',\r\n      fontFamily: 'Raleway, sans-serif',\r\n    },\r\n    rootHovered: {\r\n      background: disabled\r\n        ? resolvedBackground\r\n        : active\r\n          ? '#2f7cb3'\r\n          : isDarkMode\r\n            ? 'rgba(148, 163, 184, 0.24)'\r\n            : 'rgba(54, 144, 206, 0.12)',\r\n    },\r\n    rootPressed: {\r\n      background: disabled\r\n        ? resolvedBackground\r\n        : active\r\n          ? '#266795'\r\n          : isDarkMode\r\n            ? 'rgba(148, 163, 184, 0.3)'\r\n            : 'rgba(54, 144, 206, 0.16)',\r\n    },\r\n  };\r\n};\r\n\r\nconst getTeamButtonStyles = (\r\n  isDarkMode: boolean,\r\n  active: boolean,\r\n  hasLeave: boolean = true,\r\n): IButtonStyles => {\r\n  const activeBackground = active\r\n    ? `linear-gradient(135deg, ${colours.highlight} 0%, #2f7cb3 100%)`\r\n    : isDarkMode\r\n      ? 'rgba(15, 23, 42, 0.8)'\r\n      : 'transparent';\r\n\r\n  const activeBorder = active\r\n    ? `1px solid ${isDarkMode ? '#87ceeb' : colours.highlight}`\r\n    : `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.24)' : 'rgba(13, 47, 96, 0.16)'}`;\r\n\r\n  return {\r\n    root: {\r\n      borderRadius: 999,\r\n      minHeight: 32,\r\n      height: 32,\r\n      padding: '0 12px',\r\n      fontWeight: active ? 700 : 600,\r\n      fontSize: 12,\r\n      border: activeBorder,\r\n      background: activeBackground,\r\n      color: active ? '#ffffff' : (isDarkMode ? '#E2E8F0' : colours.missedBlue),\r\n      boxShadow: active\r\n        ? (isDarkMode ? '0 2px 8px rgba(54, 144, 206, 0.3)' : '0 2px 8px rgba(54, 144, 206, 0.25)')\r\n        : 'none',\r\n      fontFamily: 'Raleway, sans-serif',\r\n      transform: active ? 'translateY(-1px)' : 'none',\r\n      transition: 'all 0.2s ease',\r\n      opacity: hasLeave ? 1 : 0.55,\r\n      cursor: hasLeave ? 'pointer' : 'default',\r\n    },\r\n    rootHovered: {\r\n      background: active\r\n        ? `linear-gradient(135deg, #2f7cb3 0%, #266795 100%)`\r\n        : (isDarkMode ? 'rgba(15, 23, 42, 0.86)' : 'rgba(54, 144, 206, 0.1)'),\r\n      transform: hasLeave ? 'translateY(-1px)' : 'none',\r\n      boxShadow: hasLeave\r\n        ? (isDarkMode ? '0 4px 12px rgba(54, 144, 206, 0.4)' : '0 4px 12px rgba(54, 144, 206, 0.35)')\r\n        : 'none',\r\n    },\r\n    rootPressed: {\r\n      background: active\r\n        ? `linear-gradient(135deg, #266795 0%, #1e5a7a 100%)`\r\n        : (isDarkMode ? 'rgba(15, 23, 42, 0.9)' : 'rgba(54, 144, 206, 0.14)'),\r\n      transform: hasLeave ? 'translateY(0)' : 'none',\r\n    },\r\n  };\r\n};\r\n\r\nconst clearFilterButtonStyle = (isDarkMode: boolean): React.CSSProperties => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  padding: '0 12px',\r\n  height: 32,\r\n  borderRadius: 8,\r\n  border: `1px solid ${isDarkMode ? 'rgba(239, 68, 68, 0.35)' : 'rgba(239, 68, 68, 0.25)'}`,\r\n  background: isDarkMode ? 'rgba(239, 68, 68, 0.12)' : 'rgba(254, 242, 242, 0.85)',\r\n  color: isDarkMode ? '#fca5a5' : '#dc2626',\r\n  gap: 6,\r\n  cursor: 'pointer',\r\n  transition: 'all 0.2s ease',\r\n  fontFamily: 'Raleway, sans-serif',\r\n  fontWeight: 600,\r\n  fontSize: 13,\r\n  whiteSpace: 'nowrap',\r\n});\r\n\r\nconst dateStampButtonStyle = (isDarkMode: boolean): React.CSSProperties => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'flex-start',\r\n  justifyContent: 'center',\r\n  gap: 2,\r\n  padding: '8px 12px',\r\n  borderRadius: 10,\r\n  border: `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.24)' : 'rgba(13, 47, 96, 0.16)'}`,\r\n  background: isDarkMode ? 'rgba(15, 23, 42, 0.8)' : 'rgba(255, 255, 255, 0.95)',\r\n  color: isDarkMode ? '#E2E8F0' : colours.missedBlue,\r\n  minWidth: 120,\r\n  cursor: 'pointer',\r\n  transition: 'all 0.2s ease',\r\n});\r\n\r\nconst containerStyle = (isDarkMode: boolean): React.CSSProperties => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  gap: 16,\r\n  background: isDarkMode ? colours.dark.background : colours.light.background,\r\n  padding: '18px 22px',\r\n  minHeight: '100%',\r\n});\r\n\r\nconst surface = (isDarkMode: boolean, overrides: React.CSSProperties = {}): React.CSSProperties => ({\r\n  background: isDarkMode ? 'rgba(15, 23, 42, 0.88)' : '#FFFFFF',\r\n  borderRadius: 12,\r\n  border: `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.24)' : 'rgba(15, 23, 42, 0.06)'}`,\r\n  boxShadow: isDarkMode ? '0 2px 10px rgba(0, 0, 0, 0.22)' : '0 2px 8px rgba(15, 23, 42, 0.06)',\r\n  padding: 16,\r\n  ...overrides,\r\n});\r\n\r\nconst workingDaysBetween = (start: Date, end: Date): number => {\r\n  if (!start || !end) return 1;\r\n  let count = 0;\r\n  const cursor = new Date(start);\r\n  cursor.setHours(0, 0, 0, 0);\r\n  const endCopy = new Date(end);\r\n  endCopy.setHours(23, 59, 59, 999);\r\n\r\n  while (cursor <= endCopy) {\r\n    const day = cursor.getDay();\r\n    if (day !== 0 && day !== 6) count++;\r\n    cursor.setDate(cursor.getDate() + 1);\r\n  }\r\n  return Math.max(1, count);\r\n};\r\n\r\nconst formatTimeAgo = (timestamp?: number): string => {\r\n  if (!timestamp) return 'Not refreshed yet';\r\n  const diffMs = Date.now() - timestamp;\r\n  if (diffMs < 60_000) return 'Just now';\r\n  const minutes = Math.floor(diffMs / 60_000);\r\n  if (minutes < 60) return `${minutes}m ago`;\r\n  const hours = Math.floor(minutes / 60);\r\n  if (hours < 24) {\r\n    const remainingMinutes = minutes % 60;\r\n    return remainingMinutes ? `${hours}h ${remainingMinutes}m ago` : `${hours}h ago`;\r\n  }\r\n  const days = Math.floor(hours / 24);\r\n  if (days < 7) return `${days}d ago`;\r\n  const weeks = Math.floor(days / 7);\r\n  if (weeks < 5) return `${weeks}w ago`;\r\n  const months = Math.floor(days / 30);\r\n  if (months < 12) return `${months}mo ago`;\r\n  const years = Math.floor(days / 365);\r\n  return `${years}y ago`;\r\n};\r\n\r\nconst computeRange = (key: RangeKey): { start: Date; end: Date } => {\r\n  const now = new Date();\r\n  const start = new Date(now);\r\n  const end = new Date(now);\r\n\r\n  switch (key) {\r\n    case 'today':\r\n      start.setHours(0, 0, 0, 0);\r\n      end.setHours(23, 59, 59, 999);\r\n      break;\r\n    case 'yesterday':\r\n      start.setDate(start.getDate() - 1);\r\n      end.setDate(start.getDate());\r\n      start.setHours(0, 0, 0, 0);\r\n      end.setHours(23, 59, 59, 999);\r\n      break;\r\n    case 'week':\r\n      start.setDate(now.getDate() - now.getDay() + 1);\r\n      start.setHours(0, 0, 0, 0);\r\n      break;\r\n    case 'lastWeek':\r\n      start.setDate(now.getDate() - now.getDay() - 6);\r\n      end.setDate(start.getDate() + 6);\r\n      start.setHours(0, 0, 0, 0);\r\n      end.setHours(23, 59, 59, 999);\r\n      break;\r\n    case 'month':\r\n      start.setDate(1);\r\n      start.setHours(0, 0, 0, 0);\r\n      break;\r\n    case 'lastMonth':\r\n      start.setMonth(start.getMonth() - 1, 1);\r\n      start.setHours(0, 0, 0, 0);\r\n      end.setMonth(start.getMonth() + 1, 0);\r\n      end.setHours(23, 59, 59, 999);\r\n      break;\r\n    case 'last90Days':\r\n      start.setDate(now.getDate() - 89);\r\n      start.setHours(0, 0, 0, 0);\r\n      break;\r\n    case 'quarter': {\r\n      const quarterStart = Math.floor(now.getMonth() / 3) * 3;\r\n      start.setMonth(quarterStart, 1);\r\n      start.setHours(0, 0, 0, 0);\r\n      break;\r\n    }\r\n    case 'yearToDate': {\r\n      const currentYear = now.getFullYear();\r\n      const currentMonth = now.getMonth();\r\n      if (currentMonth >= 3) {\r\n        start.setFullYear(currentYear, 3, 1);\r\n      } else {\r\n        start.setFullYear(currentYear - 1, 3, 1);\r\n      }\r\n      start.setHours(0, 0, 0, 0);\r\n      break;\r\n    }\r\n    case 'year':\r\n      start.setFullYear(now.getFullYear(), 0, 1);\r\n      start.setHours(0, 0, 0, 0);\r\n      end.setFullYear(now.getFullYear(), 11, 31);\r\n      end.setHours(23, 59, 59, 999);\r\n      break;\r\n    case 'custom':\r\n      return { start: new Date(now), end: new Date(now) };\r\n    case 'all':\r\n    default:\r\n      return { start: new Date(0), end };\r\n  }\r\n\r\n  return { start, end };\r\n};\r\n\r\nconst normalizeRange = (input: { start: Date; end: Date }): { start: Date; end: Date } => {\r\n  const start = new Date(input.start);\r\n  const end = new Date(input.end);\r\n  start.setHours(0, 0, 0, 0);\r\n  end.setHours(23, 59, 59, 999);\r\n  return { start, end };\r\n};\r\n\r\nconst quickRanges: Array<{ key: RangeKey; label: string; get: () => { start: Date; end: Date } | null }> = [\r\n  { key: 'all', label: 'All', get: () => null },\r\n  ...RANGE_OPTIONS.map(({ key, label }) => ({\r\n    key,\r\n    label,\r\n    get: () => normalizeRange(computeRange(key)),\r\n  })),\r\n];\r\n\r\nconst isWithin = (value: Date | null, start: Date, end: Date): boolean => {\r\n  if (!value) return false;\r\n  const time = value.getTime();\r\n  return time >= start.getTime() && time <= end.getTime();\r\n};\r\n\r\nfunction getFinancialYear(date = new Date()) {\r\n  const year = date.getFullYear();\r\n  const start = new Date(date);\r\n  if (date.getMonth() < 3) {\r\n    start.setFullYear(year - 1, 3, 1);\r\n  } else {\r\n    start.setFullYear(year, 3, 1);\r\n  }\r\n  const end = new Date(start);\r\n  end.setFullYear(start.getFullYear() + 1);\r\n  end.setMonth(2, 31);\r\n  return { start, end };\r\n}\r\n\r\nconst AnnualLeaveReport: React.FC<Props> = ({\r\n  data,\r\n  teamData,\r\n  triggerRefresh,\r\n  lastRefreshTimestamp,\r\n  isFetching,\r\n}) => {\r\n  const { isDarkMode } = useTheme();\r\n  const [rangeKey, setRangeKey] = useState<RangeKey>(\"yearToDate\");\r\n  const [customDateRange, setCustomDateRange] = useState<{ start: Date | null; end: Date | null } | null>(null);\r\n  const [selectedRoles, setSelectedRoles] = useState<Set<string>>(new Set());\r\n  const [selectedTeams, setSelectedTeams] = useState<Set<string>>(new Set());\r\n  const [showRoleFilter, setShowRoleFilter] = useState(false);\r\n  const [showDatasetInfo, setShowDatasetInfo] = useState(false);\r\n  const [expandedUserDetails, setExpandedUserDetails] = useState<string | null>(null);\r\n  const [timeElapsed, setTimeElapsed] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setTimeElapsed((prev) => prev + 1);\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (lastRefreshTimestamp) {\r\n      setTimeElapsed(0);\r\n    }\r\n  }, [lastRefreshTimestamp]);\r\n\r\n  const getRefreshIndicatorColor = useCallback((): string => {\r\n    const maxSeconds = 15 * 60;\r\n    const progress = Math.min(timeElapsed / maxSeconds, 1);\r\n    const r = Math.round(34 + (59 - 34) * progress);\r\n    const g = Math.round(197 + (130 - 197) * progress);\r\n    const b = Math.round(94 + (246 - 94) * progress);\r\n    return `rgb(${r}, ${g}, ${b})`;\r\n  }, [timeElapsed]);\r\n\r\n  const range = useMemo(() => {\r\n    if (rangeKey === \"custom\") {\r\n      if (!customDateRange || !customDateRange.start || !customDateRange.end) {\r\n        return null;\r\n      }\r\n      return normalizeRange({ start: customDateRange.start, end: customDateRange.end });\r\n    }\r\n    const preset = quickRanges.find((entry) => entry.key === rangeKey);\r\n    return preset?.get() ?? null;\r\n  }, [rangeKey, customDateRange]);\r\n\r\n  const showCustomPickers = rangeKey === \"custom\";\r\n  const customStartValue = customDateRange?.start ?? null;\r\n  const customEndValue = customDateRange?.end ?? null;\r\n  const displayRangeStart = range?.start ?? (showCustomPickers ? customStartValue : null);\r\n  const displayRangeEnd = range?.end ?? (showCustomPickers ? customEndValue : null);\r\n\r\n  const fromLabel = rangeKey === \"all\"\r\n    ? \"All time\"\r\n    : displayRangeStart\r\n      ? formatDateTag(displayRangeStart)\r\n      : \"Select start\";\r\n  const toLabel = rangeKey === \"all\"\r\n    ? \"Latest\"\r\n    : displayRangeEnd\r\n      ? formatDateTag(displayRangeEnd)\r\n      : \"Select end\";\r\n  const currentRangeLabel = rangeKey === \"custom\"\r\n    ? \"Custom\"\r\n    : quickRanges.find((entry) => entry.key === rangeKey)?.label ?? \"All\";\r\n\r\n  const workingDaysCount = useMemo(\r\n    () => (range ? workingDaysBetween(range.start, range.end) : undefined),\r\n    [range],\r\n  );\r\n\r\n  const teamMembers = useMemo<TeamMember[]>(() => {\r\n    if (!teamData || teamData.length === 0) return [];\r\n    return teamData\r\n      .map((record) => {\r\n        const display = mapNameIfNeeded(displayName(record));\r\n        const initialsRaw = (record[\"Initials\"] || \"\").trim().toUpperCase();\r\n        const initials = initialsRaw || getInitials(display);\r\n        const status = (record.status || \"\").toLowerCase();\r\n        return {\r\n          initials,\r\n          display,\r\n          role: record[\"Role\"]?.trim(),\r\n          isActive: status !== \"inactive\",\r\n          email: record[\"Email\"]?.trim(),\r\n          holidayEntitlement: record.holiday_entitlement ?? 25,\r\n        } satisfies TeamMember;\r\n      })\r\n      .filter((member) => member.initials && member.initials !== \"?\")\r\n      .sort((a, b) => a.display.localeCompare(b.display));\r\n  }, [teamData]);\r\n\r\n  const memberLookup = useMemo(() => {\r\n    const map = new Map<string, TeamMember>();\r\n    teamMembers.forEach((member) => {\r\n      map.set(member.initials, member);\r\n    });\r\n    return map;\r\n  }, [teamMembers]);\r\n\r\n  const filteredLeave = useMemo(() => {\r\n    const entries = data ?? [];\r\n    return entries.filter((row) => {\r\n      const statusMatch = (row.status || \"\").toLowerCase() === \"booked\";\r\n      if (!statusMatch) {\r\n        return false;\r\n      }\r\n      const initials = (row.fe || \"\").trim().toUpperCase();\r\n      const member = memberLookup.get(initials);\r\n      if (!member || !member.isActive) {\r\n        return false;\r\n      }\r\n      if (selectedTeams.size > 0 && !selectedTeams.has(initials)) {\r\n        return false;\r\n      }\r\n      if (selectedRoles.size > 0) {\r\n        const roleKey = member.role?.trim();\r\n        if (!roleKey || !selectedRoles.has(roleKey)) {\r\n          return false;\r\n        }\r\n      }\r\n      if (range) {\r\n        const leaveStart = parseDate(row.start_date);\r\n        const leaveEnd = parseDate(row.end_date) ?? leaveStart;\r\n        if (!leaveStart && !leaveEnd) return false;\r\n        const withinStart = leaveStart ? isWithin(leaveStart, range.start, range.end) : false;\r\n        const withinEnd = leaveEnd ? isWithin(leaveEnd, range.start, range.end) : false;\r\n        if (!withinStart && !withinEnd) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    });\r\n  }, [data, range, selectedTeams, selectedRoles, memberLookup]);\r\n\r\n  const leaveByMember = useMemo(() => {\r\n    const map = new Map<string, AnnualLeaveRecord[]>();\r\n    filteredLeave.forEach((row) => {\r\n      const initials = (row.fe || \"\").trim().toUpperCase();\r\n      if (!map.has(initials)) {\r\n        map.set(initials, []);\r\n      }\r\n      map.get(initials)!.push(row);\r\n    });\r\n    return map;\r\n  }, [filteredLeave]);\r\n\r\n  const memberCounts = useMemo(() => {\r\n    const counts = new Map<string, number>();\r\n    filteredLeave.forEach((row) => {\r\n      const initials = (row.fe || \"\").trim().toUpperCase();\r\n      counts.set(initials, (counts.get(initials) || 0) + 1);\r\n    });\r\n    return counts;\r\n  }, [filteredLeave]);\r\n\r\n  const leaveEntriesForDisplay = useMemo(() => {\r\n    return filteredLeave\r\n      .map((row) => {\r\n        const initials = (row.fe || \"\").trim().toUpperCase();\r\n        const member = memberLookup.get(initials);\r\n        const start = parseDate(row.start_date);\r\n        const end = parseDate(row.end_date) ?? start;\r\n        const formattedStart = formatDateForPicker(start ?? null);\r\n        const formattedEnd = formatDateForPicker(end ?? null);\r\n        const dateLabel = formattedStart && formattedEnd\r\n          ? formattedStart === formattedEnd\r\n            ? formattedStart\r\n            : `${formattedStart} – ${formattedEnd}`\r\n          : formattedStart || formattedEnd || \"Unknown\";\r\n        return {\r\n          id: row.request_id ?? `${initials}-${row.start_date}-${row.end_date}`,\r\n          initials,\r\n          name: member?.display ?? (initials || \"Unknown\"),\r\n          start,\r\n          end,\r\n          dateLabel,\r\n          daysTaken: row.days_taken ?? 0,\r\n          leaveType: row.leave_type || \"Standard\",\r\n          status: row.status || \"Unknown\",\r\n          reason: row.reason || \"\",\r\n        };\r\n      })\r\n      .sort((a, b) => {\r\n        const aTime = a.start?.getTime() ?? 0;\r\n        const bTime = b.start?.getTime() ?? 0;\r\n        return bTime - aTime;\r\n      });\r\n  }, [filteredLeave, memberLookup]);\r\n\r\n  const roleCounts = useMemo(() => {\r\n    const counts = new Map<string, number>();\r\n    filteredLeave.forEach((row) => {\r\n      const initials = (row.fe || \"\").trim().toUpperCase();\r\n      const roleKey = memberLookup.get(initials)?.role?.trim();\r\n      if (!roleKey) return;\r\n      counts.set(roleKey, (counts.get(roleKey) || 0) + 1);\r\n    });\r\n    return counts;\r\n  }, [filteredLeave, memberLookup]);\r\n\r\n  const filteredMembers = useMemo(() => {\r\n    return teamMembers.filter((member) => {\r\n      if (!member.isActive) return false;\r\n      const includeTeam = selectedTeams.size === 0 || selectedTeams.has(member.initials);\r\n      const includeRole = selectedRoles.size === 0 || (member.role && selectedRoles.has(member.role));\r\n      return includeTeam && includeRole;\r\n    });\r\n  }, [teamMembers, selectedTeams, selectedRoles]);\r\n\r\n  const leaveData = useMemo(() => {\r\n    return filteredMembers.map((member) => {\r\n      const personLeave = leaveByMember.get(member.initials) ?? [];\r\n      const standardTaken = personLeave\r\n        .filter((l) => (l.leave_type || \"\").toLowerCase() === \"standard\")\r\n        .reduce((sum, l) => sum + (l.days_taken || 0), 0);\r\n      const unpaidTaken = personLeave\r\n        .filter((l) => (l.leave_type || \"\").toLowerCase() === \"unpaid\")\r\n        .reduce((sum, l) => sum + (l.days_taken || 0), 0);\r\n      const standardRemaining = Math.max(0, member.holidayEntitlement - standardTaken);\r\n      const unpaidRemaining = Math.max(0, UNPAID_LEAVE_CAP - unpaidTaken);\r\n      const totalTaken = standardTaken + unpaidTaken;\r\n\r\n      return {\r\n        initials: member.initials,\r\n        fullName: member.display,\r\n        entitlement: member.holidayEntitlement,\r\n        standardTaken,\r\n        standardRemaining,\r\n        unpaidTaken,\r\n        unpaidRemaining,\r\n        totalTaken,\r\n      };\r\n    });\r\n  }, [filteredMembers, leaveByMember]);\r\n\r\n  const totals = useMemo(() => {\r\n    return leaveData.reduce(\r\n      (acc, row) => ({\r\n        entitlement: acc.entitlement + row.entitlement,\r\n        standardTaken: acc.standardTaken + row.standardTaken,\r\n        standardRemaining: acc.standardRemaining + row.standardRemaining,\r\n        unpaidTaken: acc.unpaidTaken + row.unpaidTaken,\r\n        unpaidRemaining: acc.unpaidRemaining + row.unpaidRemaining,\r\n        totalTaken: acc.totalTaken + row.totalTaken,\r\n      }),\r\n      { entitlement: 0, standardTaken: 0, standardRemaining: 0, unpaidTaken: 0, unpaidRemaining: 0, totalTaken: 0 },\r\n    );\r\n  }, [leaveData]);\r\n\r\n  const datasetSummary = useMemo(() => {\r\n    const total = data.length;\r\n    const booked = data.filter((row) => (row.status || \"\").toLowerCase() === \"booked\").length;\r\n    const uniquePeople = new Set(data.map((row) => (row.fe || \"\").trim().toUpperCase()).filter(Boolean)).size;\r\n    return { total, booked, uniquePeople };\r\n  }, [data]);\r\n\r\n  const lastRefreshLabel = useMemo(() => formatTimeAgo(lastRefreshTimestamp), [lastRefreshTimestamp]);\r\n  const footerTimestamp = useMemo(() => (lastRefreshTimestamp ? new Date(lastRefreshTimestamp) : new Date()), [lastRefreshTimestamp]);\r\n\r\n  const handleRangeSelect = useCallback((key: RangeKey) => {\r\n    if (key === \"custom\") {\r\n      setCustomDateRange((prev) => {\r\n        if (prev && prev.start && prev.end) {\r\n          return prev;\r\n        }\r\n        const { start, end } = getFinancialYear();\r\n        return { start, end };\r\n      });\r\n    } else {\r\n      setCustomDateRange(null);\r\n    }\r\n    setRangeKey(key);\r\n  }, []);\r\n\r\n  const handleCustomDateChange = useCallback(\r\n    (position: \"start\" | \"end\") => (date?: Date | null) => {\r\n      setCustomDateRange((prev) => {\r\n        const next = prev ? { ...prev } : { start: null as Date | null, end: null as Date | null };\r\n        next[position] = date ? new Date(date) : null;\r\n        return next;\r\n      });\r\n      setRangeKey(\"custom\");\r\n    },\r\n    [],\r\n  );\r\n\r\n  const handleTeamToggle = useCallback((initials: string) => {\r\n    const key = initials.toUpperCase();\r\n    setSelectedTeams((prev) => {\r\n      const next = new Set(prev);\r\n      if (next.has(key)) {\r\n        next.delete(key);\r\n      } else {\r\n        next.add(key);\r\n      }\r\n      return next;\r\n    });\r\n  }, []);\r\n\r\n  const handleClearTeams = useCallback(() => {\r\n    setSelectedTeams(new Set());\r\n  }, []);\r\n\r\n  const handleRoleToggle = useCallback((roleKey: string) => {\r\n    setSelectedRoles((prev) => {\r\n      const next = new Set(prev);\r\n      if (next.has(roleKey)) {\r\n        next.delete(roleKey);\r\n      } else {\r\n        next.add(roleKey);\r\n      }\r\n      return next;\r\n    });\r\n  }, []);\r\n\r\n  const handleClearRoles = useCallback(() => {\r\n    setSelectedRoles(new Set());\r\n  }, []);\r\n\r\n  const handleToggleRoles = useCallback(() => {\r\n    setShowRoleFilter((prev) => !prev);\r\n  }, []);\r\n\r\n  const handleToggleInfo = useCallback(() => {\r\n    setShowDatasetInfo((prev) => !prev);\r\n  }, []);\r\n\r\n  const handleUserClick = useCallback((initials: string) => {\r\n    setExpandedUserDetails((prev) => prev === initials ? null : initials);\r\n  }, []);\r\n\r\n  const handleRefresh = useCallback(() => {\r\n    if (triggerRefresh && !isFetching) {\r\n      triggerRefresh();\r\n      setTimeElapsed(0);\r\n    }\r\n  }, [triggerRefresh, isFetching]);\r\n\r\n  const getLeaveBreakdown = useCallback(\r\n    (personInitials: string, leaveType?: \"taken\" | \"remaining\" | \"unpaid\" | \"total\") => {\r\n      const entries = leaveByMember.get(personInitials) ?? [];\r\n      const member = teamMembers.find((p) => p.initials === personInitials);\r\n      if (!member) return \"\";\r\n\r\n      const standardLeave = entries.filter((l) => (l.leave_type || \"\").toLowerCase() === \"standard\");\r\n      const unpaidLeave = entries.filter((l) => (l.leave_type || \"\").toLowerCase() === \"unpaid\");\r\n      const standardTaken = standardLeave.reduce((sum, l) => sum + (l.days_taken || 0), 0);\r\n      const unpaidTaken = unpaidLeave.reduce((sum, l) => sum + (l.days_taken || 0), 0);\r\n\r\n      switch (leaveType) {\r\n        case \"taken\":\r\n          if (standardLeave.length === 0) return \"No standard leave taken\";\r\n          return `Standard Leave Taken:\\n${standardLeave.map((l) => {\r\n            const start = parseDate(l.start_date);\r\n            const end = parseDate(l.end_date);\r\n            const startLabel = start ? start.toLocaleDateString(\"en-GB\") : \"?\";\r\n            const endLabel = end ? end.toLocaleDateString(\"en-GB\") : startLabel;\r\n            return `• ${startLabel} - ${endLabel}: ${l.days_taken} days (${l.reason || \"n/a\"})`;\r\n          }).join(\"\\n\")}`;\r\n        case \"remaining\": {\r\n          const remaining = Math.max(0, member.holidayEntitlement - standardTaken);\r\n          return `Remaining Leave:\\n• Entitlement: ${member.holidayEntitlement} days\\n• Taken: ${standardTaken} days\\n• Remaining: ${remaining} days`;\r\n        }\r\n        case \"unpaid\":\r\n          if (unpaidLeave.length === 0) return \"No unpaid leave taken\";\r\n          return `Unpaid Leave:\\n${unpaidLeave.map((l) => {\r\n            const start = parseDate(l.start_date);\r\n            const end = parseDate(l.end_date);\r\n            const startLabel = start ? start.toLocaleDateString(\"en-GB\") : \"?\";\r\n            const endLabel = end ? end.toLocaleDateString(\"en-GB\") : startLabel;\r\n            return `• ${startLabel} - ${endLabel}: ${l.days_taken} days (${l.reason || \"n/a\"})`;\r\n          }).join(\"\\n\")}\\n• Unpaid cap: ${UNPAID_LEAVE_CAP} days`;\r\n        case \"total\":\r\n          return `Total Leave Taken:\\n• Standard: ${standardTaken} days\\n• Unpaid: ${unpaidTaken} days\\n• Total: ${standardTaken + unpaidTaken} days`;\r\n        default:\r\n          return `${member.display}\\n• Entitlement: ${member.holidayEntitlement} days\\n• Standard taken: ${standardTaken} days\\n• Unpaid taken: ${unpaidTaken} days`;\r\n      }\r\n    },\r\n    [leaveByMember, teamMembers],\r\n  );\r\n\r\n  const filteredUserEntries = useMemo(() => {\r\n    if (!expandedUserDetails) return [];\r\n    return leaveEntriesForDisplay.filter(entry => entry.initials === expandedUserDetails);\r\n  }, [leaveEntriesForDisplay, expandedUserDetails]);\r\n\r\n  const datasetInfoItems = useMemo(\r\n    () => [\r\n      { label: \"Rows available\", value: datasetSummary.total.toLocaleString() },\r\n      { label: \"Booked requests\", value: datasetSummary.booked.toLocaleString() },\r\n      { label: \"People with leave\", value: datasetSummary.uniquePeople.toLocaleString() },\r\n      { label: \"Current range\", value: currentRangeLabel },\r\n      { label: \"Filters applied\", value: `${selectedRoles.size} roles · ${selectedTeams.size} team` },\r\n      { label: \"Working days\", value: workingDaysCount ? workingDaysCount.toString() : \"All time\" },\r\n    ],\r\n    [datasetSummary, currentRangeLabel, selectedRoles.size, selectedTeams.size, workingDaysCount],\r\n  );\r\n\r\n  return (\r\n    <div style={containerStyle(isDarkMode)}>\r\n      <div style={surface(isDarkMode)}>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\", gap: 16 }}>\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"flex-start\", flexWrap: \"wrap\", gap: 12 }}>\r\n            {showCustomPickers ? (\r\n              <div style={{ display: \"flex\", gap: 8 }}>\r\n                <DatePicker\r\n                  label=\"From\"\r\n                  styles={getDatePickerStyles(isDarkMode)}\r\n                  value={customStartValue || undefined}\r\n                  onSelectDate={handleCustomDateChange(\"start\")}\r\n                  allowTextInput\r\n                  firstDayOfWeek={DayOfWeek.Monday}\r\n                  formatDate={formatDateForPicker}\r\n                  parseDateFromString={parseDatePickerInput}\r\n                />\r\n                <DatePicker\r\n                  label=\"To\"\r\n                  styles={getDatePickerStyles(isDarkMode)}\r\n                  value={customEndValue || undefined}\r\n                  onSelectDate={handleCustomDateChange(\"end\")}\r\n                  allowTextInput\r\n                  firstDayOfWeek={DayOfWeek.Monday}\r\n                  formatDate={formatDateForPicker}\r\n                  parseDateFromString={parseDatePickerInput}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <div style={{ display: \"flex\", gap: 8 }}>\r\n                <button\r\n                  type=\"button\"\r\n                  style={dateStampButtonStyle(isDarkMode)}\r\n                  onClick={() => handleRangeSelect(\"custom\")}\r\n                  title=\"Click to customise the start date\"\r\n                >\r\n                  <span style={{ fontSize: 11, opacity: 0.7, fontWeight: 600 }}>From</span>\r\n                  <span style={{ fontSize: 16, fontWeight: 700 }}>{fromLabel}</span>\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  style={dateStampButtonStyle(isDarkMode)}\r\n                  onClick={() => handleRangeSelect(\"custom\")}\r\n                  title=\"Click to customise the end date\"\r\n                >\r\n                  <span style={{ fontSize: 11, opacity: 0.7, fontWeight: 600 }}>To</span>\r\n                  <span style={{ fontSize: 16, fontWeight: 700 }}>{toLabel}</span>\r\n                </button>\r\n              </div>\r\n            )}\r\n\r\n            <div style={{ display: \"flex\", gap: 8, alignItems: \"center\" }}>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  gap: 6,\r\n                  padding: \"6px 12px\",\r\n                  borderRadius: 8,\r\n                  border: `1px solid ${isFetching ? (isDarkMode ? \"rgba(148, 163, 184, 0.3)\" : \"rgba(148, 163, 184, 0.25)\") : getRefreshIndicatorColor()}`,\r\n                  background: isDarkMode ? \"rgba(15, 23, 42, 0.8)\" : \"rgba(255, 255, 255, 0.95)\",\r\n                  fontSize: 12,\r\n                  fontWeight: 600,\r\n                  color: isDarkMode ? \"#E2E8F0\" : colours.missedBlue,\r\n                  transition: \"border-color 1s ease\",\r\n                }}\r\n                title={\r\n                  isFetching\r\n                    ? \"Refreshing data...\"\r\n                    : `Next auto-refresh in ${Math.max(0, Math.floor((15 * 60 - timeElapsed) / 60))}m ${Math.max(0, (15 * 60 - timeElapsed) % 60)}s`\r\n                }\r\n              >\r\n                {isFetching ? (\r\n                  <>\r\n                    <div\r\n                      style={{\r\n                        width: 8,\r\n                        height: 8,\r\n                        borderRadius: \"50%\",\r\n                        background: isDarkMode ? \"rgba(148, 163, 184, 0.6)\" : \"rgba(13, 47, 96, 0.5)\",\r\n                      }}\r\n                    />\r\n                    Refreshing\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <div\r\n                      style={{\r\n                        width: 8,\r\n                        height: 8,\r\n                        borderRadius: \"50%\",\r\n                        background: getRefreshIndicatorColor(),\r\n                        transition: \"background 1s ease\",\r\n                      }}\r\n                    />\r\n                    {lastRefreshLabel}\r\n                  </>\r\n                )}\r\n              </div>\r\n\r\n              {triggerRefresh && (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={handleRefresh}\r\n                  disabled={isFetching}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    width: 32,\r\n                    height: 32,\r\n                    borderRadius: 8,\r\n                    border: `1px solid ${isDarkMode ? \"rgba(148, 163, 184, 0.24)\" : \"rgba(13, 47, 96, 0.16)\"}`,\r\n                    background: isDarkMode ? \"rgba(15, 23, 42, 0.8)\" : \"rgba(255, 255, 255, 0.95)\",\r\n                    color: isDarkMode ? \"#E2E8F0\" : colours.missedBlue,\r\n                    cursor: isFetching ? \"default\" : \"pointer\",\r\n                    opacity: isFetching ? 0.6 : 1,\r\n                    transition: \"all 0.2s ease\",\r\n                  }}\r\n                  title={isFetching ? \"Refreshing data...\" : \"Refresh datasets (auto-refreshes every 15 min)\"}\r\n                  aria-label={isFetching ? \"Refreshing data\" : \"Refresh datasets\"}\r\n                >\r\n                  <Icon\r\n                    iconName=\"Refresh\"\r\n                    style={{\r\n                      fontSize: 16,\r\n                      animation: isFetching ? \"spin 1s linear infinite\" : \"none\",\r\n                    }}\r\n                  />\r\n                </button>\r\n              )}\r\n\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleToggleRoles}\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  width: 32,\r\n                  height: 32,\r\n                  borderRadius: 8,\r\n                  border: `1px solid ${isDarkMode ? \"rgba(148, 163, 184, 0.24)\" : \"rgba(13, 47, 96, 0.16)\"}`,\r\n                  background: isDarkMode ? \"rgba(15, 23, 42, 0.8)\" : \"rgba(255, 255, 255, 0.95)\",\r\n                  color: showRoleFilter ? (isDarkMode ? \"#60a5fa\" : colours.highlight) : (isDarkMode ? \"rgba(148, 163, 184, 0.6)\" : \"rgba(13, 47, 96, 0.5)\"),\r\n                  cursor: \"pointer\",\r\n                  transform: showRoleFilter ? \"translateY(-1px)\" : \"translateY(0)\",\r\n                  transition: \"all 0.2s ease\",\r\n                }}\r\n                title={showRoleFilter ? \"Hide role filter\" : \"Show role filter\"}\r\n                aria-label={showRoleFilter ? \"Hide role filter\" : \"Show role filter\"}\r\n              >\r\n                <Icon iconName=\"People\" style={{ fontSize: 16 }} />\r\n              </button>\r\n\r\n              <div style={{ position: \"relative\" }}>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={handleToggleInfo}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    width: 32,\r\n                    height: 32,\r\n                    borderRadius: 8,\r\n                    border: `1px solid ${isDarkMode ? \"rgba(148, 163, 184, 0.24)\" : \"rgba(13, 47, 96, 0.16)\"}`,\r\n                    background: isDarkMode ? \"rgba(15, 23, 42, 0.8)\" : \"rgba(255, 255, 255, 0.95)\",\r\n                    color: isDarkMode ? \"#60a5fa\" : colours.highlight,\r\n                    cursor: \"pointer\",\r\n                    transform: showDatasetInfo ? \"translateY(-1px)\" : \"translateY(0)\",\r\n                    transition: \"all 0.2s ease\",\r\n                  }}\r\n                  title=\"Dataset information\"\r\n                  aria-label=\"Dataset information\"\r\n                >\r\n                  <Icon iconName=\"Info\" style={{ fontSize: 16 }} />\r\n                </button>\r\n\r\n                {showDatasetInfo && (\r\n                  <div\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      top: \"100%\",\r\n                      right: 0,\r\n                      marginTop: 8,\r\n                      padding: \"10px 12px\",\r\n                      background: isDarkMode ? \"rgba(15, 23, 42, 0.98)\" : \"rgba(255, 255, 255, 0.98)\",\r\n                      border: `1px solid ${isDarkMode ? \"rgba(148, 163, 184, 0.3)\" : \"rgba(148, 163, 184, 0.25)\"}`,\r\n                      borderRadius: 8,\r\n                      boxShadow: isDarkMode ? \"0 8px 16px rgba(0, 0, 0, 0.4)\" : \"0 4px 12px rgba(0, 0, 0, 0.15)\",\r\n                      fontSize: 11,\r\n                      lineHeight: 1.5,\r\n                      width: 260,\r\n                      zIndex: 1000,\r\n                      color: isDarkMode ? \"#e2e8f0\" : \"#334155\",\r\n                      textAlign: \"left\",\r\n                    }}\r\n                  >\r\n                    <div style={{ fontWeight: 700, marginBottom: 8, fontSize: 13, color: isDarkMode ? \"#60a5fa\" : colours.highlight }}>\r\n                      Dataset information\r\n                    </div>\r\n                    <div style={{ display: \"flex\", flexDirection: \"column\", gap: 6 }}>\r\n                      {datasetInfoItems.map((item) => (\r\n                        <div key={item.label} style={{ display: \"flex\", justifyContent: \"space-between\", gap: 12 }}>\r\n                          <span style={{ opacity: 0.75 }}>{item.label}:</span>\r\n                          <span style={{ fontWeight: 600 }}>{item.value}</span>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        marginTop: 10,\r\n                        paddingTop: 8,\r\n                        borderTop: `1px solid ${isDarkMode ? \"rgba(148, 163, 184, 0.2)\" : \"rgba(148, 163, 184, 0.3)\"}`,\r\n                        fontSize: 11,\r\n                        opacity: 0.7,\r\n                        fontStyle: \"italic\",\r\n                      }}\r\n                    >\r\n                      Data is limited to booked annual leave captured in Dynamics.\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              display: \"grid\",\r\n              gridTemplateColumns: \"repeat(auto-fit, minmax(180px, 1fr))\",\r\n              gap: 12,\r\n              padding: \"10px 12px\",\r\n              borderRadius: 10,\r\n              background: isDarkMode ? \"rgba(148, 163, 184, 0.08)\" : \"rgba(13, 47, 96, 0.04)\",\r\n              border: `1px solid ${isDarkMode ? \"rgba(148, 163, 184, 0.16)\" : \"rgba(13, 47, 96, 0.08)\"}`,\r\n              fontSize: 12,\r\n              color: isDarkMode ? \"rgba(226, 232, 240, 0.85)\" : \"rgba(13, 47, 96, 0.75)\",\r\n            }}\r\n          >\r\n            <div>\r\n              <div style={{ fontWeight: 600, opacity: 0.7 }}>Range</div>\r\n              <div style={{ fontSize: 14, fontWeight: 600 }}>{currentRangeLabel}</div>\r\n            </div>\r\n            <div>\r\n              <div style={{ fontWeight: 600, opacity: 0.7 }}>Working days</div>\r\n              <div style={{ fontSize: 14, fontWeight: 600 }}>{workingDaysCount ? workingDaysCount : \"All time\"}</div>\r\n            </div>\r\n            <div>\r\n              <div style={{ fontWeight: 600, opacity: 0.7 }}>Active filters</div>\r\n              <div style={{ fontSize: 14, fontWeight: 600 }}>\r\n                {selectedRoles.size === 0 && selectedTeams.size === 0 ? \"None\" : `${selectedRoles.size} roles · ${selectedTeams.size} team`}\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <div style={{ fontWeight: 600, opacity: 0.7 }}>Entries in view</div>\r\n              <div style={{ fontSize: 14, fontWeight: 600 }}>{filteredLeave.length.toLocaleString()}</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div style={{ display: \"flex\", flexDirection: \"column\", gap: 12 }}>\r\n            <div style={{ display: \"flex\", flexWrap: \"wrap\", gap: 8, alignItems: \"center\" }}>\r\n              {quickRanges.map((rangeOption) => {\r\n                const active = rangeOption.key === rangeKey;\r\n                return (\r\n                  <DefaultButton\r\n                    key={rangeOption.key}\r\n                    text={rangeOption.label}\r\n                    onClick={() => handleRangeSelect(rangeOption.key)}\r\n                    styles={getRangeButtonStyles(isDarkMode, active, true)}\r\n                  />\r\n                );\r\n              })}\r\n              {rangeKey !== \"all\" && (\r\n                <button\r\n                  onClick={() => handleRangeSelect(\"all\")}\r\n                  style={clearFilterButtonStyle(isDarkMode)}\r\n                  title=\"Clear date range filter\"\r\n                >\r\n                  <span style={{ fontSize: 16 }}>×</span>\r\n                  Clear\r\n                </button>\r\n              )}\r\n            </div>\r\n\r\n            {showRoleFilter && (\r\n              <div style={{ display: \"flex\", flexDirection: \"column\", gap: 12 }}>\r\n                <div style={{ display: \"flex\", flexWrap: \"wrap\", gap: 8, alignItems: \"center\" }}>\r\n                  {ROLE_OPTIONS.map(({ key, label }) => (\r\n                    <DefaultButton\r\n                      key={key}\r\n                      text={label}\r\n                      onClick={() => handleRoleToggle(key)}\r\n                      styles={getRoleButtonStyles(isDarkMode, selectedRoles.has(key), (roleCounts.get(key) || 0) > 0)}\r\n                    />\r\n                  ))}\r\n                  {selectedRoles.size > 0 && (\r\n                    <button\r\n                      onClick={handleClearRoles}\r\n                      style={clearFilterButtonStyle(isDarkMode)}\r\n                      title=\"Clear role filter\"\r\n                    >\r\n                      <span style={{ fontSize: 16 }}>×</span>\r\n                      Clear\r\n                    </button>\r\n                  )}\r\n                </div>\r\n\r\n                <div style={{ display: \"flex\", flexWrap: \"wrap\", gap: 8, alignItems: \"center\" }}>\r\n                  {teamMembers\r\n                    .filter((member) => member.isActive)\r\n                    .map((member) => {\r\n                      const count = memberCounts.get(member.initials) || 0;\r\n                      const isSelected = selectedTeams.has(member.initials);\r\n                      return (\r\n                        <DefaultButton\r\n                          key={member.initials}\r\n                          text={member.initials}\r\n                          onClick={() => handleTeamToggle(member.initials)}\r\n                          title={`${member.display}${count ? ` (${count} entries)` : \"\"}`}\r\n                          styles={getTeamButtonStyles(isDarkMode, isSelected, count > 0 || isSelected)}\r\n                        />\r\n                      );\r\n                    })}\r\n                  {selectedTeams.size > 0 && (\r\n                    <button\r\n                      onClick={handleClearTeams}\r\n                      style={clearFilterButtonStyle(isDarkMode)}\r\n                      title=\"Clear team filter\"\r\n                    >\r\n                      <span style={{ fontSize: 16 }}>×</span>\r\n                      Clear\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {!showRoleFilter && (\r\n              <div style={{ display: \"flex\", flexWrap: \"wrap\", gap: 8, alignItems: \"center\" }}>\r\n                {teamMembers\r\n                  .filter((member) => member.isActive)\r\n                  .map((member) => {\r\n                    const count = memberCounts.get(member.initials) || 0;\r\n                    const isSelected = selectedTeams.has(member.initials);\r\n                    return (\r\n                      <DefaultButton\r\n                        key={member.initials}\r\n                        text={member.initials}\r\n                        onClick={() => handleTeamToggle(member.initials)}\r\n                        styles={getTeamButtonStyles(isDarkMode, isSelected, count > 0 || isSelected)}\r\n                        title={`${member.display}${count ? ` (${count} entries)` : \"\"}`}\r\n                      />\r\n                    );\r\n                  })}\r\n                {selectedTeams.size > 0 && (\r\n                  <button\r\n                    onClick={handleClearTeams}\r\n                    style={clearFilterButtonStyle(isDarkMode)}\r\n                    title=\"Clear team filter\"\r\n                  >\r\n                    <span style={{ fontSize: 16 }}>×</span>\r\n                    Clear\r\n                  </button>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={surface(isDarkMode, { padding: 0 })}>\r\n        <div className=\"metrics-table\">\r\n          <div className=\"metrics-table-header\">\r\n            <span title=\"Employee name and overview (click to view details)\">Employee</span>\r\n            <span title=\"Annual leave entitlement in days\">Entitlement</span>\r\n            <span title=\"Standard annual leave taken (hover rows for details)\">Taken</span>\r\n            <span title=\"Standard annual leave remaining\">Remaining</span>\r\n            <span title=\"Unpaid leave taken (hover rows for details)\">Unpaid</span>\r\n            <span title=\"Total leave taken (standard + unpaid)\">Total</span>\r\n          </div>\r\n          {leaveData.length === 0 && (\r\n            <div className=\"metrics-table-row animate-table-row\">\r\n              <span>No team members selected</span>\r\n              <span>0</span>\r\n              <span>0</span>\r\n              <span>0</span>\r\n              <span>0</span>\r\n              <span>0</span>\r\n            </div>\r\n          )}\r\n          {leaveData.map((row, index) => (\r\n            <div\r\n              key={`${row.initials}-${displayRangeStart?.getTime() ?? \"na\"}-${displayRangeEnd?.getTime() ?? \"na\"}-${index}`}\r\n              className=\"metrics-table-row animate-table-row\"\r\n              style={{ \r\n                animationDelay: `${Math.min(index * 0.05, 0.5)}s`,\r\n                cursor: 'pointer',\r\n                position: 'relative'\r\n              }}\r\n              onClick={() => handleUserClick(row.initials)}\r\n              title={`Click to view detailed leave entries for ${row.fullName}`}\r\n            >\r\n              <span title={getLeaveBreakdown(row.initials)} style={{ display: 'flex', alignItems: 'center', gap: 8 }}>\r\n                {row.fullName}\r\n                <Icon \r\n                  iconName={expandedUserDetails === row.initials ? \"ChevronDown\" : \"ChevronRight\"} \r\n                  style={{ \r\n                    fontSize: 12, \r\n                    opacity: 0.6,\r\n                    transition: 'transform 0.2s ease'\r\n                  }} \r\n                />\r\n              </span>\r\n              <span title={`Annual leave entitlement: ${row.entitlement} days`}>{row.entitlement}</span>\r\n              <span\r\n                style={{ color: row.standardTaken > row.entitlement ? \"#dc2626\" : \"inherit\" }}\r\n                title={getLeaveBreakdown(row.initials, \"taken\")}\r\n              >\r\n                {row.standardTaken}\r\n              </span>\r\n              <span\r\n                style={{ color: row.standardRemaining <= 5 ? \"#f59e0b\" : \"#059669\" }}\r\n                title={getLeaveBreakdown(row.initials, \"remaining\")}\r\n              >\r\n                {row.standardRemaining}\r\n              </span>\r\n              <span\r\n                style={{ color: row.unpaidTaken > 0 ? \"#dc2626\" : \"inherit\" }}\r\n                title={getLeaveBreakdown(row.initials, \"unpaid\")}\r\n              >\r\n                {row.unpaidTaken}\r\n              </span>\r\n              <span\r\n                style={{ fontWeight: 600 }}\r\n                title={getLeaveBreakdown(row.initials, \"total\")}\r\n              >\r\n                {row.totalTaken}\r\n              </span>\r\n            </div>\r\n          ))}\r\n          <div\r\n            className=\"metrics-table-row animate-table-row\"\r\n            style={{ animationDelay: `${Math.min(leaveData.length * 0.05, 0.5)}s` }}\r\n          >\r\n            <span title=\"Summary totals for all selected team members\">Total</span>\r\n            <span title={`Total entitlement: ${totals.entitlement} days across ${leaveData.length} team members`}>{totals.entitlement}</span>\r\n            <span title={`Total standard leave taken: ${totals.standardTaken} days`}>{totals.standardTaken}</span>\r\n            <span title={`Total standard leave remaining: ${totals.standardRemaining} days`}>{totals.standardRemaining}</span>\r\n            <span title={`Total unpaid leave taken: ${totals.unpaidTaken} days`}>{totals.unpaidTaken}</span>\r\n            <span title={`Total leave taken: ${totals.totalTaken} days (standard + unpaid)`}>{totals.totalTaken}</span>\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n            padding: \"8px 12px\",\r\n            fontSize: 12,\r\n            opacity: 0.7,\r\n            fontWeight: 500,\r\n          }}\r\n        >\r\n          Last refreshed: {footerTimestamp.toLocaleDateString(\"en-GB\")} {footerTimestamp.toLocaleTimeString(\"en-GB\", { hour: \"2-digit\", minute: \"2-digit\" })}\r\n        </div>\r\n      </div>\r\n\r\n      {expandedUserDetails && (\r\n        <div style={surface(isDarkMode)}>\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", marginBottom: 12 }}>\r\n            <h3 style={{ margin: 0, fontSize: 16, fontWeight: 700 }}>\r\n              Leave entries for {leaveData.find(d => d.initials === expandedUserDetails)?.fullName || expandedUserDetails}\r\n            </h3>\r\n            <div style={{ display: \"flex\", alignItems: \"center\", gap: 8 }}>\r\n              <span style={{ fontSize: 12, opacity: 0.65 }}>{filteredUserEntries.length} entries</span>\r\n              <button\r\n                onClick={() => setExpandedUserDetails(null)}\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  width: 24,\r\n                  height: 24,\r\n                  borderRadius: 4,\r\n                  border: `1px solid ${isDarkMode ? \"rgba(148, 163, 184, 0.24)\" : \"rgba(13, 47, 96, 0.16)\"}`,\r\n                  background: \"transparent\",\r\n                  color: isDarkMode ? \"#E2E8F0\" : colours.missedBlue,\r\n                  cursor: \"pointer\",\r\n                  fontSize: 16,\r\n                }}\r\n                title=\"Close details\"\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {filteredUserEntries.length === 0 ? (\r\n            <div\r\n              style={{\r\n                padding: \"16px 20px\",\r\n                borderRadius: 8,\r\n                border: `1px dashed ${isDarkMode ? \"rgba(148, 163, 184, 0.3)\" : \"rgba(13, 47, 96, 0.2)\"}`,\r\n                color: isDarkMode ? \"rgba(226, 232, 240, 0.75)\" : \"rgba(13, 47, 96, 0.7)\",\r\n                fontSize: 13,\r\n              }}\r\n            >\r\n              No leave entries found for this user in the current date range and filters.\r\n            </div>\r\n          ) : (\r\n            <div style={{ overflowX: \"auto\" }}>\r\n              <table\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderCollapse: \"collapse\",\r\n                  fontSize: 13,\r\n                  minWidth: 680,\r\n                }}\r\n              >\r\n                <thead>\r\n                  <tr\r\n                    style={{\r\n                      textTransform: \"uppercase\",\r\n                      letterSpacing: 0.4,\r\n                      fontSize: 11,\r\n                      color: isDarkMode ? \"rgba(226, 232, 240, 0.7)\" : \"rgba(15, 23, 42, 0.66)\",\r\n                    }}\r\n                  >\r\n                    <th style={{ textAlign: \"left\", padding: \"10px 12px\", borderBottom: `1px solid ${isDarkMode ? \"rgba(148, 163, 184, 0.24)\" : \"rgba(203, 213, 225, 0.8)\"}` }}>Dates</th>\r\n                    <th style={{ textAlign: \"left\", padding: \"10px 12px\", borderBottom: `1px solid ${isDarkMode ? \"rgba(148, 163, 184, 0.24)\" : \"rgba(203, 213, 225, 0.8)\"}` }}>Days</th>\r\n                    <th style={{ textAlign: \"left\", padding: \"10px 12px\", borderBottom: `1px solid ${isDarkMode ? \"rgba(148, 163, 184, 0.24)\" : \"rgba(203, 213, 225, 0.8)\"}` }}>Type</th>\r\n                    <th style={{ textAlign: \"left\", padding: \"10px 12px\", borderBottom: `1px solid ${isDarkMode ? \"rgba(148, 163, 184, 0.24)\" : \"rgba(203, 213, 225, 0.8)\"}` }}>Status</th>\r\n                    <th style={{ textAlign: \"left\", padding: \"10px 12px\", borderBottom: `1px solid ${isDarkMode ? \"rgba(148, 163, 184, 0.24)\" : \"rgba(203, 213, 225, 0.8)\"}` }}>Reason</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {filteredUserEntries.map((entry, index) => {\r\n                    const zebra = index % 2 === 1;\r\n                    return (\r\n                      <tr\r\n                        key={entry.id}\r\n                        style={{\r\n                          background: zebra\r\n                            ? isDarkMode\r\n                              ? \"rgba(148, 163, 184, 0.06)\"\r\n                              : \"rgba(248, 250, 252, 0.8)\"\r\n                            : \"transparent\",\r\n                          color: isDarkMode ? \"#e2e8f0\" : \"#1f2937\",\r\n                        }}\r\n                      >\r\n                        <td style={{ padding: \"10px 12px\" }}>{entry.dateLabel}</td>\r\n                        <td style={{ padding: \"10px 12px\" }}>{entry.daysTaken}</td>\r\n                        <td style={{ padding: \"10px 12px\", textTransform: \"capitalize\" }}>{entry.leaveType.toLowerCase()}</td>\r\n                        <td style={{ padding: \"10px 12px\" }}>\r\n                          <span\r\n                            style={{\r\n                              display: \"inline-flex\",\r\n                              alignItems: \"center\",\r\n                              gap: 6,\r\n                              padding: \"4px 10px\",\r\n                              borderRadius: 999,\r\n                              fontSize: 11,\r\n                              fontWeight: 600,\r\n                              background: entry.status.toLowerCase() === \"booked\"\r\n                                ? (isDarkMode ? \"rgba(16, 185, 129, 0.18)\" : \"rgba(16, 185, 129, 0.16)\")\r\n                                : (isDarkMode ? \"rgba(148, 163, 184, 0.14)\" : \"rgba(148, 163, 184, 0.18)\"),\r\n                              color: entry.status.toLowerCase() === \"booked\"\r\n                                ? (isDarkMode ? \"#34d399\" : \"#047857\")\r\n                                : (isDarkMode ? \"#e2e8f0\" : \"#0f172a\"),\r\n                            }}\r\n                          >\r\n                            {entry.status}\r\n                          </span>\r\n                        </td>\r\n                        <td style={{ padding: \"10px 12px\", maxWidth: 280, whiteSpace: \"normal\", lineHeight: 1.4 }}>\r\n                          {entry.reason || \"—\"}\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      <div style={surface(isDarkMode)}>\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", marginBottom: 12 }}>\r\n          <h3 style={{ margin: 0, fontSize: 16, fontWeight: 700 }}>All leave entries in view</h3>\r\n          <span style={{ fontSize: 12, opacity: 0.65 }}>{leaveEntriesForDisplay.length} entries</span>\r\n        </div>\r\n\r\n        {leaveEntriesForDisplay.length === 0 ? (\r\n          <div\r\n            style={{\r\n              padding: \"16px 20px\",\r\n              borderRadius: 8,\r\n              border: `1px dashed ${isDarkMode ? \"rgba(148, 163, 184, 0.3)\" : \"rgba(13, 47, 96, 0.2)\"}`,\r\n              color: isDarkMode ? \"rgba(226, 232, 240, 0.75)\" : \"rgba(13, 47, 96, 0.7)\",\r\n              fontSize: 13,\r\n            }}\r\n          >\r\n            No leave entries match the current filters.\r\n          </div>\r\n        ) : (\r\n          <div style={{ overflowX: \"auto\" }}>\r\n            <table\r\n              style={{\r\n                width: \"100%\",\r\n                borderCollapse: \"collapse\",\r\n                fontSize: 13,\r\n                minWidth: 680,\r\n              }}\r\n            >\r\n              <thead>\r\n                <tr\r\n                  style={{\r\n                    textTransform: \"uppercase\",\r\n                    letterSpacing: 0.4,\r\n                    fontSize: 11,\r\n                    color: isDarkMode ? \"rgba(226, 232, 240, 0.7)\" : \"rgba(15, 23, 42, 0.66)\",\r\n                  }}\r\n                >\r\n                  <th style={{ textAlign: \"left\", padding: \"10px 12px\", borderBottom: `1px solid ${isDarkMode ? \"rgba(148, 163, 184, 0.24)\" : \"rgba(203, 213, 225, 0.8)\"}` }}>Person</th>\r\n                  <th style={{ textAlign: \"left\", padding: \"10px 12px\", borderBottom: `1px solid ${isDarkMode ? \"rgba(148, 163, 184, 0.24)\" : \"rgba(203, 213, 225, 0.8)\"}` }}>Dates</th>\r\n                  <th style={{ textAlign: \"left\", padding: \"10px 12px\", borderBottom: `1px solid ${isDarkMode ? \"rgba(148, 163, 184, 0.24)\" : \"rgba(203, 213, 225, 0.8)\"}` }}>Days</th>\r\n                  <th style={{ textAlign: \"left\", padding: \"10px 12px\", borderBottom: `1px solid ${isDarkMode ? \"rgba(148, 163, 184, 0.24)\" : \"rgba(203, 213, 225, 0.8)\"}` }}>Type</th>\r\n                  <th style={{ textAlign: \"left\", padding: \"10px 12px\", borderBottom: `1px solid ${isDarkMode ? \"rgba(148, 163, 184, 0.24)\" : \"rgba(203, 213, 225, 0.8)\"}` }}>Status</th>\r\n                  <th style={{ textAlign: \"left\", padding: \"10px 12px\", borderBottom: `1px solid ${isDarkMode ? \"rgba(148, 163, 184, 0.24)\" : \"rgba(203, 213, 225, 0.8)\"}` }}>Reason</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {leaveEntriesForDisplay.map((entry, index) => {\r\n                  const zebra = index % 2 === 1;\r\n                  return (\r\n                    <tr\r\n                      key={entry.id}\r\n                      style={{\r\n                        background: zebra\r\n                          ? isDarkMode\r\n                            ? \"rgba(148, 163, 184, 0.06)\"\r\n                            : \"rgba(248, 250, 252, 0.8)\"\r\n                          : \"transparent\",\r\n                        color: isDarkMode ? \"#e2e8f0\" : \"#1f2937\",\r\n                      }}\r\n                    >\r\n                      <td style={{ padding: \"10px 12px\", fontWeight: 600 }}>\r\n                        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                          <span>{entry.name}</span>\r\n                          <span style={{ fontSize: 11, opacity: 0.6 }}>{entry.initials}</span>\r\n                        </div>\r\n                      </td>\r\n                      <td style={{ padding: \"10px 12px\" }}>{entry.dateLabel}</td>\r\n                      <td style={{ padding: \"10px 12px\" }}>{entry.daysTaken}</td>\r\n                      <td style={{ padding: \"10px 12px\", textTransform: \"capitalize\" }}>{entry.leaveType.toLowerCase()}</td>\r\n                      <td style={{ padding: \"10px 12px\" }}>\r\n                        <span\r\n                          style={{\r\n                            display: \"inline-flex\",\r\n                            alignItems: \"center\",\r\n                            gap: 6,\r\n                            padding: \"4px 10px\",\r\n                            borderRadius: 999,\r\n                            fontSize: 11,\r\n                            fontWeight: 600,\r\n                            background: entry.status.toLowerCase() === \"booked\"\r\n                              ? (isDarkMode ? \"rgba(16, 185, 129, 0.18)\" : \"rgba(16, 185, 129, 0.16)\")\r\n                              : (isDarkMode ? \"rgba(148, 163, 184, 0.14)\" : \"rgba(148, 163, 184, 0.18)\"),\r\n                            color: entry.status.toLowerCase() === \"booked\"\r\n                              ? (isDarkMode ? \"#34d399\" : \"#047857\")\r\n                              : (isDarkMode ? \"#e2e8f0\" : \"#0f172a\"),\r\n                          }}\r\n                        >\r\n                          {entry.status}\r\n                        </span>\r\n                      </td>\r\n                      <td style={{ padding: \"10px 12px\", maxWidth: 280, whiteSpace: \"normal\", lineHeight: 1.4 }}>\r\n                        {entry.reason || \"—\"}\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default AnnualLeaveReport;","/**\r\n * Utilities to normalize enquiry source across inconsistent fields.\r\n * Keeps logic self-contained and side-effect free so the UI can rely on a consistent label.\r\n */\r\n\r\nexport type NormalizedEnquirySource = {\r\n  /** Human-friendly label used for grouping in the UI */\r\n  label: string;\r\n  /** Machine-friendly category key for downstream use if needed */\r\n  key: string;\r\n  /** Optional detail such as referrer name or campaign */\r\n  detail?: string;\r\n};\r\n\r\nconst toStr = (v: unknown): string => (typeof v === 'string' ? v : v == null ? '' : String(v));\r\n\r\nfunction safeLower(v: unknown): string {\r\n  return toStr(v).trim().toLowerCase();\r\n}\r\n\r\nfunction extractDomain(url: string): string | null {\r\n  try {\r\n    const u = new URL(url);\r\n    return u.hostname.toLowerCase();\r\n  } catch {\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction getUtmParams(url: string): { source?: string; medium?: string; campaign?: string } {\r\n  try {\r\n    const u = new URL(url);\r\n    const params = u.searchParams;\r\n    return {\r\n      source: params.get('utm_source') || undefined,\r\n      medium: params.get('utm_medium') || undefined,\r\n      campaign: params.get('utm_campaign') || undefined,\r\n    };\r\n  } catch {\r\n    return {};\r\n  }\r\n}\r\n\r\nfunction hasGclid(v: unknown): boolean {\r\n  // Some rows store GCLID in its own column; sometimes within the URL\r\n  const s = safeLower(v);\r\n  if (!s) return false;\r\n  return s.includes('gclid=') || s.length > 0; // explicit column is often a long token\r\n}\r\n\r\nfunction looksLikeFacebookLead(notes: string, campaign: string): boolean {\r\n  const n = notes.toLowerCase();\r\n  const c = campaign.toLowerCase();\r\n  return n.includes('facebook lead id') || c.includes('facebook');\r\n}\r\n\r\n/**\r\n * Derive a normalized source from an enquiry record with mixed schema.\r\n * Priority order:\r\n * 1) Paid search (Google Ads): explicit gclid OR utm_source=google with cpc/ppc OR ultimate_source contains 'google ads'\r\n * 2) ChatGPT: utm_source chatgpt or referral domain includes chatgpt.com/searchgpt\r\n * 3) Facebook Lead Ads: indicators in notes/campaign or referral domain facebook\r\n * 4) Organic search: explicit label or utm_medium=organic\r\n * 5) Referral: Contact_Referrer / Referring_Company present\r\n * 6) Operations (explicit)\r\n * 7) Website (helix-law domain without UTM)\r\n * 8) Direct (fallback for MOC-based values)\r\n * 9) Unknown\r\n */\r\nexport function getNormalizedEnquirySource(raw: unknown): NormalizedEnquirySource {\r\n  const e = (raw ?? {}) as Record<string, unknown>;\r\n  const ultimate = safeLower(e.Ultimate_Source ?? (e as any).source ?? (e as any).Source);\r\n  const moc = safeLower(e.Method_of_Contact ?? (e as any).method_of_contact ?? (e as any).moc);\r\n  const contactRef = toStr(e.Contact_Referrer ?? (e as any).contact_referrer).trim();\r\n  const referringCompany = toStr(e.Referring_Company ?? (e as any).referring_company).trim();\r\n  const url = toStr(e.Referral_URL ?? (e as any).referral_url).trim();\r\n  const campaign = toStr(e.Campaign ?? (e as any).campaign).trim();\r\n  const gclid = toStr(e.GCLID ?? (e as any).gclid).trim();\r\n  const notes = toStr(e.Initial_first_call_notes ?? (e as any).notes).trim();\r\n\r\n  // Skip if ultimate source is actually a contact method (data cleaning)\r\n  const contactMethods = ['phone call', 'phone', 'call in', 'direct email', 'web form', 'website form', 'online form', 'chat', 'chatgpt'];\r\n  const isUltimateActuallyMOC = contactMethods.some(method => ultimate.includes(method));\r\n\r\n  // 1) Google Ads (paid search)\r\n  const utm = url ? getUtmParams(url) : {};\r\n  const hasPaidMedium = safeLower(utm.medium).includes('cpc') || safeLower(utm.medium).includes('ppc');\r\n  if (\r\n    hasGclid(gclid) ||\r\n    (safeLower(utm.source) === 'google' && (hasPaidMedium || ultimate.includes('paid') || ultimate.includes('ads'))) ||\r\n    (ultimate.includes('google ads') && !isUltimateActuallyMOC) ||\r\n    (ultimate.includes('paid search') && !isUltimateActuallyMOC)\r\n  ) {\r\n    return { key: 'google_ads', label: 'Google Ads', detail: campaign || utm.campaign };\r\n  }\r\n\r\n  // 2) ChatGPT (as a source, not MOC)\r\n  const domain = url ? extractDomain(url) : null;\r\n  if (\r\n    domain === 'chatgpt.com' ||\r\n    ultimate.includes('searchgpt') || \r\n    url.includes('utm_source=chatgpt')\r\n  ) {\r\n    return { key: 'chatgpt', label: 'ChatGPT', detail: utm.campaign };\r\n  }\r\n\r\n  // 3) Meta Ads (Facebook/Instagram)\r\n  if (\r\n    domain === 'facebook.com' || domain === 'm.facebook.com' ||\r\n    looksLikeFacebookLead(notes, campaign) ||\r\n    (ultimate.includes('facebook') && !isUltimateActuallyMOC)\r\n  ) {\r\n    return { key: 'meta_ads', label: 'Meta Ads', detail: campaign };\r\n  }\r\n\r\n  // 4) Organic Search (amalgamate organic search and google organic)\r\n  if ((ultimate.includes('organic search') && !isUltimateActuallyMOC) || \r\n      (ultimate.includes('google organic') && !isUltimateActuallyMOC) ||\r\n      safeLower(utm.medium) === 'organic') {\r\n    return { key: 'organic', label: 'Organic search' };\r\n  }\r\n\r\n  // 5) Referral sources\r\n  if (referringCompany) return { key: 'referral_company', label: `Referral: ${referringCompany}`, detail: referringCompany };\r\n  if (contactRef) return { key: 'referral_contact', label: 'Referral', detail: contactRef };\r\n\r\n  // 6) Operations (explicit flag often used internally)\r\n  if (ultimate === 'operations') return { key: 'operations', label: 'Operations' };\r\n\r\n  // 7) Actual source value (when not a contact method)\r\n  if (ultimate && !isUltimateActuallyMOC) {\r\n    return { key: ultimate.replace(/\\s+/g, '_'), label: toStr(e.Ultimate_Source as any) || toStr((e as any).Source) };\r\n  }\r\n\r\n  // 8) Not Recorded (when source is empty or was actually a contact method)\r\n  return { key: 'not_recorded', label: 'Not Recorded' };\r\n}\r\n\r\nexport function getNormalizedEnquirySourceLabel(raw: unknown): string {\r\n  return getNormalizedEnquirySource(raw).label;\r\n}\r\n\r\n/**\r\n * Get normalized Method of Contact from enquiry record\r\n */\r\nexport function getNormalizedEnquiryMOC(raw: unknown): NormalizedEnquirySource {\r\n  const e = (raw ?? {}) as Record<string, unknown>;\r\n  const moc = safeLower(e.Method_of_Contact ?? (e as any).method_of_contact ?? (e as any).moc);\r\n  const ultimate = safeLower(e.Ultimate_Source ?? (e as any).source ?? (e as any).Source);\r\n\r\n  // If ultimate source is actually a contact method, use it\r\n  if (ultimate.includes('phone call') || ultimate.includes('phone') || ultimate === 'call in') {\r\n    return { key: 'phone', label: 'Phone call' };\r\n  }\r\n  if (ultimate.includes('website form') || ultimate.includes('web form') || ultimate.includes('online form')) {\r\n    return { key: 'web_form', label: 'Website form' };\r\n  }\r\n  if (ultimate.includes('chatgpt') || ultimate.includes('chat')) {\r\n    return { key: 'chat', label: 'Live chat' };\r\n  }\r\n  if (ultimate.includes('email')) {\r\n    return { key: 'email', label: 'Email' };\r\n  }\r\n\r\n  // Use MOC field\r\n  if (moc === 'direct email' || moc === 'email') return { key: 'email', label: 'Email' };\r\n  if (moc === 'call in' || moc === 'phone' || moc === 'phone call' || moc === 'telephone') return { key: 'phone', label: 'Phone call' };\r\n  if (moc === 'web form' || moc === 'website form' || moc === 'online form' || moc === 'contact form') return { key: 'web_form', label: 'Website form' };\r\n  if (moc === 'live chat' || moc === 'chat' || moc === 'chatgpt') return { key: 'chat', label: 'Live chat' };\r\n  if (moc === 'in-person' || moc === 'walk-in') return { key: 'in_person', label: 'In-person' };\r\n\r\n  // Fallback\r\n  if (moc) return { key: moc.replace(/\\s+/g, '_'), label: toStr(e.Method_of_Contact as any) || toStr((e as any).moc) };\r\n  return { key: 'unknown', label: 'Unknown' };\r\n}\r\n\r\nexport function getNormalizedEnquiryMOCLabel(raw: unknown): string {\r\n  return getNormalizedEnquiryMOC(raw).label;\r\n}\r\n","import React, { useCallback, useEffect, useState, useMemo } from 'react';\r\nimport { DefaultButton, PrimaryButton, Spinner, SpinnerSize, FontIcon, DatePicker, DayOfWeek, type IDatePickerStyles, type IButtonStyles } from '@fluentui/react';\r\nimport { colours } from '../../app/styles/colours';\r\nimport { useTheme } from '../../app/functionality/ThemeContext';\r\nimport { MarketingMetrics } from './EnquiriesReport';\r\nimport { getNormalizedEnquirySourceLabel } from '../../utils/enquirySource';\r\nimport { Enquiry } from '../../app/functionality/types';\r\nimport './ManagementDashboard.css';\r\n\r\n// Safe import of Recharts components\r\nlet LineChart: any, Line: any, XAxis: any, YAxis: any, CartesianGrid: any, Tooltip: any, Legend: any, ResponsiveContainer: any, AreaChart: any, Area: any;\r\n\r\ntry {\r\n  const recharts = require('recharts');\r\n  LineChart = recharts.LineChart;\r\n  Line = recharts.Line;\r\n  XAxis = recharts.XAxis;\r\n  YAxis = recharts.YAxis;\r\n  CartesianGrid = recharts.CartesianGrid;\r\n  Tooltip = recharts.Tooltip;\r\n  Legend = recharts.Legend;\r\n  ResponsiveContainer = recharts.ResponsiveContainer;\r\n  AreaChart = recharts.AreaChart;\r\n  Area = recharts.Area;\r\n} catch (error) {\r\n  console.warn('Recharts not available, charts will be disabled');\r\n}\r\n\r\ninterface MetaMetricsReportProps {\r\n  metaMetrics: MarketingMetrics[] | null;\r\n  enquiries?: Enquiry[] | null;\r\n  triggerRefresh?: () => Promise<void>;\r\n  lastRefreshTimestamp?: number;\r\n  isFetching?: boolean;\r\n}\r\n\r\ninterface AdData {\r\n  adId: string;\r\n  adName: string;\r\n  campaignName: string;\r\n  adsetName: string;\r\n  dateStart: string;\r\n  dateStop: string;\r\n  metrics: {\r\n    spend: number;\r\n    impressions: number;\r\n    clicks: number;\r\n    reach: number;\r\n    frequency: number;\r\n    cpc: number;\r\n    cpm: number;\r\n    ctr: number;\r\n    conversions: number;\r\n    costPerConversion: number;\r\n    conversionRate: number;\r\n  };\r\n}\r\n\r\n// Interface for deals from instructions API\r\ninterface Deal {\r\n  DealId: number;\r\n  ProspectId: number;\r\n  InstructionRef?: string;\r\n  Status: string;\r\n  PitchedBy?: string;\r\n  PitchedDate?: string;\r\n  Amount?: number;\r\n  ServiceDescription?: string;\r\n  AreaOfWork?: string;\r\n  LeadClientEmail?: string;\r\n  FirstName?: string;\r\n  LastName?: string;\r\n  // Add any other fields that might exist\r\n  [key: string]: any;\r\n}\r\n\r\ninterface InstructionData {\r\n  instructions: any[];\r\n  deals: Deal[];\r\n}\r\n\r\ninterface ClioContact {\r\n  id: number;\r\n  name: string;\r\n  primary_email_address?: string;\r\n  type: string;\r\n  matters?: any[];\r\n}\r\n\r\ninterface ClioSearchResults {\r\n  [email: string]: ClioContact | null;\r\n}\r\n\r\ntype RangeKey = 'today' | 'yesterday' | 'week' | 'lastWeek' | 'month' | 'lastMonth' | 'last90Days' | 'quarter' | 'yearToDate' | 'year' | 'custom' | 'all';\r\n\r\nconst RANGE_OPTIONS: Array<{ key: RangeKey; label: string }> = [\r\n  { key: 'today', label: 'Today' },\r\n  { key: 'yesterday', label: 'Yesterday' },\r\n  { key: 'week', label: 'This Week' },\r\n  { key: 'lastWeek', label: 'Last Week' },\r\n  { key: 'month', label: 'This Month' },\r\n  { key: 'lastMonth', label: 'Last Month' },\r\n  { key: 'last90Days', label: 'Last 90 Days' },\r\n  { key: 'quarter', label: 'This Quarter' },\r\n  { key: 'yearToDate', label: 'Year To Date' },\r\n  { key: 'year', label: 'Current Year' },\r\n];\r\n\r\n// Helper function for consistent surface styling (matches EnquiriesReport)\r\nfunction surface(isDark: boolean, overrides: React.CSSProperties = {}): React.CSSProperties {\r\n  return {\r\n    background: isDark ? 'rgba(15, 23, 42, 0.88)' : '#FFFFFF',\r\n    borderRadius: 12,\r\n    border: `1px solid ${isDark ? 'rgba(148, 163, 184, 0.24)' : 'rgba(15, 23, 42, 0.06)'}`,\r\n    boxShadow: isDark ? '0 2px 10px rgba(0, 0, 0, 0.22)' : '0 2px 8px rgba(15, 23, 42, 0.06)',\r\n    padding: 16,\r\n    ...overrides,\r\n  };\r\n}\r\n\r\nconst MetaMetricsReport: React.FC<MetaMetricsReportProps> = ({\r\n  metaMetrics,\r\n  enquiries,\r\n  triggerRefresh,\r\n  lastRefreshTimestamp,\r\n  isFetching = false\r\n}) => {\r\n  const { isDarkMode } = useTheme();\r\n  const [isRefreshing, setIsRefreshing] = useState(false);\r\n  const [rangeKey, setRangeKey] = useState<RangeKey>('month');\r\n  const [customDateRange, setCustomDateRange] = useState<{ start: Date | null; end: Date | null } | null>(null);\r\n  const [timeElapsed, setTimeElapsed] = useState(0);\r\n  const [adData, setAdData] = useState<AdData[] | null>(null);\r\n  const [isLoadingAds, setIsLoadingAds] = useState(false);\r\n  const [instructionData, setInstructionData] = useState<InstructionData | null>(null);\r\n  const [isLoadingInstructions, setIsLoadingInstructions] = useState(false);\r\n  // State for caching and rate limiting\r\n  const [clioSearchResults, setClioSearchResults] = useState<ClioSearchResults>({});\r\n  const [clioSearchCache, setClioSearchCache] = useState<{[email: string]: {result: any, timestamp: number}}>({});\r\n  const [lastClioSearch, setLastClioSearch] = useState<number>(0);\r\n  const [isLoadingClioSearch, setIsLoadingClioSearch] = useState(false);\r\n\r\n  // Auto-refresh tracking\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setTimeElapsed(prev => prev + 1);\r\n    }, 1000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (lastRefreshTimestamp) {\r\n      setTimeElapsed(0);\r\n    }\r\n  }, [lastRefreshTimestamp]);\r\n\r\n  const computeRange = useCallback((range: RangeKey): { start: Date; end: Date } => {\r\n    const now = new Date();\r\n    const end = new Date(now);\r\n    const start = new Date(now);\r\n\r\n    switch (range) {\r\n      case 'today':\r\n        start.setHours(0, 0, 0, 0);\r\n        end.setHours(23, 59, 59, 999);\r\n        break;\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59, 999);\r\n        break;\r\n      case 'week':\r\n        const startOfWeek = (start.getDay() + 6) % 7;\r\n        start.setDate(start.getDate() - startOfWeek);\r\n        start.setHours(0, 0, 0, 0);\r\n        end.setHours(23, 59, 59, 999);\r\n        break;\r\n      case 'lastWeek':\r\n        const lastWeekStart = (start.getDay() + 6) % 7 + 7;\r\n        start.setDate(start.getDate() - lastWeekStart);\r\n        start.setHours(0, 0, 0, 0);\r\n        end.setDate(end.getDate() - (end.getDay() + 6) % 7 - 1);\r\n        end.setHours(23, 59, 59, 999);\r\n        break;\r\n      case 'month':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0, 0);\r\n        end.setHours(23, 59, 59, 999);\r\n        break;\r\n      case 'lastMonth':\r\n        start.setMonth(start.getMonth() - 1, 1);\r\n        start.setHours(0, 0, 0, 0);\r\n        end.setMonth(end.getMonth(), 0);\r\n        end.setHours(23, 59, 59, 999);\r\n        break;\r\n      case 'last90Days':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0, 0);\r\n        end.setHours(23, 59, 59, 999);\r\n        break;\r\n      case 'quarter':\r\n        const quarter = Math.floor(start.getMonth() / 3);\r\n        start.setMonth(quarter * 3, 1);\r\n        start.setHours(0, 0, 0, 0);\r\n        end.setHours(23, 59, 59, 999);\r\n        break;\r\n      case 'yearToDate':\r\n        start.setMonth(0, 1);\r\n        start.setHours(0, 0, 0, 0);\r\n        end.setHours(23, 59, 59, 999);\r\n        break;\r\n      case 'year':\r\n        start.setMonth(0, 1);\r\n        start.setHours(0, 0, 0, 0);\r\n        end.setMonth(11, 31);\r\n        end.setHours(23, 59, 59, 999);\r\n        break;\r\n      default:\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0, 0);\r\n        end.setHours(23, 59, 59, 999);\r\n    }\r\n\r\n    return { start, end };\r\n  }, []);\r\n\r\n  const range = useMemo(() => {\r\n    if (rangeKey === 'custom' && customDateRange) {\r\n      if (customDateRange.start && customDateRange.end) {\r\n        const start = new Date(customDateRange.start);\r\n        const end = new Date(customDateRange.end);\r\n        start.setHours(0, 0, 0, 0);\r\n        end.setHours(23, 59, 59, 999);\r\n        return { start, end };\r\n      }\r\n      return null;\r\n    }\r\n    if (rangeKey === 'all') return null;\r\n    return computeRange(rangeKey);\r\n  }, [rangeKey, customDateRange, computeRange]);\r\n\r\n  // Filter and process Meta metrics data\r\n  const filteredMetrics = useMemo(() => {\r\n    if (!metaMetrics) return [];\r\n    \r\n    if (!range) {\r\n      console.log('No range filter - returning all metrics');\r\n      return metaMetrics;\r\n    }\r\n    \r\n    console.log('Filtering metrics with range:', {\r\n      rangeKey,\r\n      startDate: range.start.toISOString(),\r\n      endDate: range.end.toISOString(),\r\n      totalMetrics: metaMetrics.length,\r\n      sampleDates: metaMetrics.slice(0, 3).map(m => ({\r\n        raw: m.date,\r\n        parsed: new Date(m.date).toISOString(),\r\n        type: typeof m.date\r\n      }))\r\n    });\r\n    \r\n    const filtered = metaMetrics.filter((metric, index) => {\r\n      const metricDate = new Date(metric.date);\r\n      const isInRange = metricDate >= range.start && metricDate <= range.end;\r\n      \r\n      if (index < 3) { // Log first 3 for debugging\r\n        console.log(`Metric ${index}:`, {\r\n          rawDate: metric.date,\r\n          parsedDate: metricDate.toISOString(),\r\n          rangeStart: range.start.toISOString(),\r\n          rangeEnd: range.end.toISOString(),\r\n          isInRange,\r\n          comparison: {\r\n            afterStart: metricDate >= range.start,\r\n            beforeEnd: metricDate <= range.end\r\n          }\r\n        });\r\n      }\r\n      \r\n      return isInRange;\r\n    });\r\n    \r\n    console.log('Filter complete:', {\r\n      originalCount: metaMetrics.length,\r\n      filteredCount: filtered.length,\r\n      filteredDates: filtered.slice(0, 3).map(m => new Date(m.date).toLocaleDateString())\r\n    });\r\n    \r\n    return filtered;\r\n  }, [metaMetrics, range, rangeKey]);\r\n\r\n  // Calculate comprehensive statistics\r\n  const stats = useMemo(() => {\r\n    if (!filteredMetrics.length) {\r\n      return {\r\n        totalSpend: 0,\r\n        totalReach: 0,\r\n        totalImpressions: 0,\r\n        totalClicks: 0,\r\n        totalConversions: 0,\r\n        avgCtr: 0,\r\n        avgCpc: 0,\r\n        avgCpm: 0,\r\n        avgFrequency: 0,\r\n        costPerConversion: 0,\r\n        conversionRate: 0,\r\n        reachRate: 0,\r\n        impressionShare: 0\r\n      };\r\n    }\r\n\r\n    const totals = filteredMetrics.reduce((acc, metric) => {\r\n      const meta = metric.metaAds;\r\n      if (!meta) return acc;\r\n      \r\n      return {\r\n        spend: acc.spend + meta.spend,\r\n        reach: acc.reach + meta.reach,\r\n        impressions: acc.impressions + meta.impressions,\r\n        clicks: acc.clicks + meta.clicks,\r\n        conversions: acc.conversions + meta.conversions,\r\n        ctrSum: acc.ctrSum + meta.ctr,\r\n        cpcSum: acc.cpcSum + meta.cpc,\r\n        cpmSum: acc.cpmSum + meta.cpm,\r\n        frequencySum: acc.frequencySum + meta.frequency,\r\n        days: acc.days + 1\r\n      };\r\n    }, {\r\n      spend: 0, reach: 0, impressions: 0, clicks: 0, conversions: 0,\r\n      ctrSum: 0, cpcSum: 0, cpmSum: 0, frequencySum: 0, days: 0\r\n    });\r\n\r\n    const avgCtr = totals.days > 0 ? totals.ctrSum / totals.days : 0;\r\n    const avgCpc = totals.days > 0 ? totals.cpcSum / totals.days : 0;\r\n    const avgCpm = totals.days > 0 ? totals.cpmSum / totals.days : 0;\r\n    const avgFrequency = totals.days > 0 ? totals.frequencySum / totals.days : 0;\r\n    const costPerConversion = totals.conversions > 0 ? totals.spend / totals.conversions : 0;\r\n    const conversionRate = totals.clicks > 0 ? (totals.conversions / totals.clicks) * 100 : 0;\r\n    const reachRate = totals.impressions > 0 ? (totals.reach / totals.impressions) * 100 : 0;\r\n\r\n    return {\r\n      totalSpend: totals.spend,\r\n      totalReach: totals.reach,\r\n      totalImpressions: totals.impressions,\r\n      totalClicks: totals.clicks,\r\n      totalConversions: totals.conversions,\r\n      avgCtr,\r\n      avgCpc,\r\n      avgCpm,\r\n      avgFrequency,\r\n      costPerConversion,\r\n      conversionRate,\r\n      reachRate,\r\n      impressionShare: 85.2 // Mock value - would need actual competition data\r\n    };\r\n  }, [filteredMetrics]);\r\n\r\n  // Function to check if an enquiry has been pitched by matching with deals\r\n  const getEnquiryPitchStatus = useCallback((enquiry: Enquiry) => {\r\n    if (!instructionData?.deals) {\r\n      // Only log this once to avoid spam\r\n      if (!(window as any).noDealDataLogged) {\r\n        console.log('⚠️ No instruction data available for pitch matching');\r\n        (window as any).noDealDataLogged = true;\r\n      }\r\n      return { isPitched: false, pitchDate: null };\r\n    }\r\n    \r\n    // Reset the no-data flag when we have data\r\n    (window as any).noDealDataLogged = false;\r\n    \r\n    // Debug: Log sample deal structure once\r\n    if (!(window as any).dealStructureLogged && instructionData.deals.length > 0) {\r\n      console.log('📋 Sample deal structure:', instructionData.deals[0]);\r\n      console.log('📋 All available fields in first deal:', Object.keys(instructionData.deals[0]));\r\n      console.log('📋 Date-related fields:', Object.keys(instructionData.deals[0]).filter(key => \r\n        key.toLowerCase().includes('date') || key.toLowerCase().includes('created') || key.toLowerCase().includes('time')\r\n      ));\r\n      (window as any).dealStructureLogged = true;\r\n    }\r\n    \r\n    // Since enquiries don't have ProspectId/ACID, we need to match by client info\r\n    const enquiryEmail = enquiry.Email?.toLowerCase().trim();\r\n    const enquiryFirstName = enquiry.First_Name?.toLowerCase().trim();\r\n    const enquiryLastName = enquiry.Last_Name?.toLowerCase().trim();\r\n    \r\n    // Skip if we don't have enough identifying information\r\n    if (!enquiryEmail && (!enquiryFirstName || !enquiryLastName)) {\r\n      return { isPitched: false, pitchDate: null };\r\n    }\r\n    \r\n    // Look for a matching deal based on client information\r\n    const matchingDeal = instructionData.deals.find(deal => {\r\n      // Try to match by email if available\r\n      if (enquiryEmail && (deal as any).LeadClientEmail?.toLowerCase().trim() === enquiryEmail) {\r\n        return true;\r\n      }\r\n      \r\n      // Try to match by name (this is less reliable but worth trying)\r\n      if (enquiryFirstName && enquiryLastName) {\r\n        const dealFirstName = (deal as any).FirstName?.toLowerCase().trim();\r\n        const dealLastName = (deal as any).LastName?.toLowerCase().trim();\r\n        \r\n        if (dealFirstName === enquiryFirstName && dealLastName === enquiryLastName) {\r\n          return true;\r\n        }\r\n      }\r\n      \r\n      return false;\r\n    });\r\n    \r\n    if (!matchingDeal) {\r\n      return { isPitched: false, pitchDate: null };\r\n    }\r\n    \r\n    // Get pitch date from the PitchedDate field\r\n    const pitchDate = (matchingDeal as any).PitchedDate || null;\r\n    \r\n    return { isPitched: true, pitchDate };\r\n  }, [instructionData]);\r\n\r\n  // Function to check if an enquiry pitch became an instruction\r\n  const getEnquiryInstructionStatus = useCallback((enquiry: Enquiry) => {\r\n    if (!instructionData?.instructions) {\r\n      return { hasInstruction: false, instructionRef: null, isProofOfIdComplete: false };\r\n    }\r\n    \r\n    const enquiryEmail = enquiry.Email?.toLowerCase().trim();\r\n    const enquiryFirstName = enquiry.First_Name?.toLowerCase().trim();\r\n    const enquiryLastName = enquiry.Last_Name?.toLowerCase().trim();\r\n    \r\n    if (!enquiryEmail && (!enquiryFirstName || !enquiryLastName)) {\r\n      return { hasInstruction: false, instructionRef: null, isProofOfIdComplete: false };\r\n    }\r\n    \r\n    // Find matching deal first to get InstructionRef\r\n    const matchingDeal = instructionData.deals?.find(deal => {\r\n      if (enquiryEmail && (deal as any).LeadClientEmail?.toLowerCase().trim() === enquiryEmail) {\r\n        return true;\r\n      }\r\n      \r\n      if (enquiryFirstName && enquiryLastName) {\r\n        const dealFirstName = (deal as any).FirstName?.toLowerCase().trim();\r\n        const dealLastName = (deal as any).LastName?.toLowerCase().trim();\r\n        \r\n        if (dealFirstName === enquiryFirstName && dealLastName === enquiryLastName) {\r\n          return true;\r\n        }\r\n      }\r\n      \r\n      return false;\r\n    });\r\n    \r\n    // Debug logging for instruction conversion analysis\r\n    if ((enquiry.First_Name === 'Mohammad' && enquiry.Last_Name === 'Khawaja') || \r\n        (enquiry.First_Name === 'Amanda' && enquiry.Last_Name === 'Townsend')) {\r\n      console.log(`Instruction debug for ${enquiry.First_Name} ${enquiry.Last_Name}:`, {\r\n        email: enquiryEmail,\r\n        hasDeal: !!matchingDeal,\r\n        dealData: matchingDeal ? {\r\n          InstructionRef: (matchingDeal as any).InstructionRef,\r\n          LeadClientEmail: (matchingDeal as any).LeadClientEmail,\r\n          FirstName: (matchingDeal as any).FirstName,\r\n          LastName: (matchingDeal as any).LastName\r\n        } : null\r\n      });\r\n    }\r\n    \r\n    // If no deal found, not instructed\r\n    if (!matchingDeal || !(matchingDeal as any).InstructionRef) {\r\n      return { hasInstruction: false, instructionRef: null, isProofOfIdComplete: false };\r\n    }\r\n    \r\n    const instructionRef = (matchingDeal as any).InstructionRef;\r\n    \r\n    // Find the corresponding instruction and check if it's truly \"instructed\"\r\n    const matchingInstruction = instructionData.instructions.find(inst => \r\n      (inst as any).ref === instructionRef || (inst as any).InstructionRef === instructionRef\r\n    );\r\n    \r\n    if (!matchingInstruction) {\r\n      return { hasInstruction: false, instructionRef: instructionRef, isProofOfIdComplete: false };\r\n    }\r\n    \r\n    // Business logic: Instructed = InternalStatus is 'paid' (regardless of stage)\r\n    // POID Complete = Stage is 'proof-of-id-complete' AND InternalStatus is 'poid'\r\n    const stage = ((matchingInstruction as any).Stage || (matchingInstruction as any).stage || '').toLowerCase();\r\n    const internalStatus = ((matchingInstruction as any).InternalStatus || (matchingInstruction as any).internalStatus || '').toLowerCase();\r\n    \r\n    const isInstructed = internalStatus === 'paid';\r\n    const isProofOfIdComplete = stage === 'proof-of-id-complete' && internalStatus === 'poid';\r\n    \r\n    // Debug logging for instruction status analysis\r\n    if ((enquiry.First_Name === 'Mohammad' && enquiry.Last_Name === 'Khawaja') || \r\n        (enquiry.First_Name === 'Amanda' && enquiry.Last_Name === 'Townsend')) {\r\n      console.log(`Instruction status for ${enquiry.First_Name} ${enquiry.Last_Name}:`, {\r\n        instructionRef,\r\n        stage,\r\n        internalStatus,\r\n        isInstructed,\r\n        isProofOfIdComplete,\r\n        instructionData: matchingInstruction\r\n      });\r\n    }\r\n    \r\n    return { \r\n      hasInstruction: isInstructed, \r\n      instructionRef: instructionRef,\r\n      isProofOfIdComplete: isProofOfIdComplete && !isInstructed\r\n    };\r\n  }, [instructionData]);\r\n\r\n  // Extract value band from Facebook lead notes if Value field is empty\r\n  const getEnquiryValue = (enquiry: any): string => {\r\n    // If Value field has content, use it\r\n    if (enquiry.Value && enquiry.Value.trim() !== '') {\r\n      return enquiry.Value;\r\n    }\r\n    \r\n    // For Facebook leads, check if value is in the notes\r\n    const notes = enquiry.Initial_first_call_notes || '';\r\n    const valueBandMatch = notes.match(/Value Band Or Qualifier:\\s*([^,\\n]+)/i);\r\n    if (valueBandMatch) {\r\n      const valueBand = valueBandMatch[1].trim();\r\n      \r\n      // Convert common abbreviations to full value bands\r\n      switch (valueBand.toLowerCase()) {\r\n        case '<10k':\r\n        case 'less than 10k':\r\n          return 'Less than £10,000';\r\n        case '10k-50k':\r\n        case '10-50k':\r\n          return '£10,000 to £50,000';\r\n        case '50k-100k':\r\n        case '50-100k':\r\n          return '£50,000 to £100,000';\r\n        case '100k-500k':\r\n        case '100-500k':\r\n          return '£100,001 - £500,000';\r\n        case '>500k':\r\n        case 'more than 500k':\r\n          return '£500,001 or more';\r\n        case 'unsure':\r\n        case 'uncertain':\r\n          return 'unsure';\r\n        case 'other':\r\n        case 'non-monetary':\r\n          return 'The claim is for something other than money';\r\n        default:\r\n          return valueBand; // Return as-is if no mapping found\r\n      }\r\n    }\r\n    \r\n    return ''; // No value information found\r\n  };\r\n\r\n  // Helper function to convert value bands to numeric values for calculations\r\n  const convertValueBandToNumber = (valueText: string): number => {\r\n    if (!valueText || typeof valueText !== 'string') return 0;\r\n    \r\n    const value = valueText.toLowerCase().trim();\r\n    \r\n    // Handle exact value band matches from database\r\n    switch (value) {\r\n      // Under £10k variants\r\n      case 'less than £10,000':\r\n      case '£10,000 or less':\r\n      case 'a financial sum below £10,000':\r\n        return 5000; // Midpoint of 0-10k\r\n      \r\n      // £10k-£50k variants\r\n      case '£10,000 to £50,000':\r\n      case '£10,000 - £50,000':\r\n      case '£25,000 to £50,000':\r\n        return 30000; // Midpoint of 10k-50k\r\n      \r\n      // £10k-£100k variants\r\n      case '£10,001 - £100,000':\r\n      case 'a financial sum between £10,000 - £100,000':\r\n        return 55000; // Midpoint of 10k-100k\r\n      \r\n      // £50k-£100k variants\r\n      case '£50,000 to £100,000':\r\n      case '£50,000 or more':\r\n        return 75000; // Midpoint of 50k-100k\r\n      \r\n      // £100k-£500k variants\r\n      case '£100,001 - £500,000':\r\n      case 'a financial sum between £100,001 - £500,000':\r\n        return 300000; // Midpoint of 100k-500k\r\n      \r\n      // Over £100k\r\n      case 'greater than £100,000':\r\n        return 250000; // Conservative estimate\r\n      \r\n      // Over £500k\r\n      case '£500,001 or more':\r\n      case 'a financial sum over £500,001':\r\n        return 750000; // Conservative estimate for 500k+\r\n      \r\n      // Numeric values (some enquiries have direct numbers)\r\n      case '5000':\r\n        return 5000;\r\n      case '£1000':\r\n        return 1000;\r\n      \r\n      // Uncertain/unsure/other cases\r\n      case 'unsure':\r\n      case 'uncertain':\r\n      case 'i\\'m uncertain/other':\r\n      case 'unable to establish':\r\n      case 'other':\r\n      case 'not applicable':\r\n      case 'the claim is for something other than money':\r\n      case 'dispute involves a property, land or shares':\r\n      case 'test item':\r\n      case '':\r\n        return 0; // No monetary value\r\n      \r\n      default:\r\n        // Try to extract any numeric value as fallback\r\n        const numMatch = value.match(/£?([\\d,]+)/);\r\n        if (numMatch) {\r\n          const numValue = parseFloat(numMatch[1].replace(/,/g, ''));\r\n          return isNaN(numValue) ? 0 : numValue;\r\n        }\r\n        \r\n        console.log('Unmapped value band:', valueText);\r\n        return 0;\r\n    }\r\n  };\r\n\r\n  // Filter Meta enquiries and calculate ROI metrics\r\n  const metaEnquiryStats = useMemo(() => {\r\n    if (!enquiries) {\r\n      return {\r\n        totalEnquiries: 0,\r\n        enquiriesInPeriod: 0,\r\n        totalValue: 0,\r\n        averageValue: 0,\r\n        roi: 0,\r\n        costPerEnquiry: 0,\r\n        pitchedCount: 0,\r\n        instructedCount: 0,\r\n        pitchConversionRate: 0,\r\n        instructionConversionRate: 0,\r\n        pitchToInstructionRate: 0,\r\n        enquiries: []\r\n      };\r\n    }\r\n\r\n    // Filter enquiries to Meta Ads source within the date range\r\n    // Debug: Log instruction data summary\r\n    if (!(window as any).instructionDataLogged && instructionData) {\r\n      console.log('📋 Instruction data summary:', {\r\n        totalInstructions: instructionData.instructions?.length || 0,\r\n        totalDeals: instructionData.deals?.length || 0,\r\n        sampleInstruction: instructionData.instructions?.[0],\r\n        sampleDeal: instructionData.deals?.[0],\r\n        instructionStages: instructionData.instructions?.slice(0, 10).map(inst => ({\r\n          ref: (inst as any).ref || (inst as any).InstructionRef,\r\n          stage: (inst as any).Stage || (inst as any).stage,\r\n          internalStatus: (inst as any).InternalStatus || (inst as any).internalStatus\r\n        }))\r\n      });\r\n      (window as any).instructionDataLogged = true;\r\n    }\r\n\r\n    // Debug: Log all enquiries being classified as Meta Ads\r\n    if (!(window as any).metaSourcesLogged) {\r\n      const metaSources = enquiries\r\n        .map(enquiry => ({\r\n          name: `${enquiry.First_Name} ${enquiry.Last_Name}`,\r\n          Ultimate_Source: enquiry.Ultimate_Source,\r\n          normalizedSource: getNormalizedEnquirySourceLabel(enquiry),\r\n          Method_of_Contact: enquiry.Method_of_Contact,\r\n          Referral_URL: enquiry.Referral_URL\r\n        }))\r\n        .filter(e => e.normalizedSource === 'Meta Ads')\r\n        .slice(0, 10);\r\n      \r\n      console.log('Enquiries classified as Meta Ads:', metaSources);\r\n      (window as any).metaSourcesLogged = true;\r\n    }\r\n\r\n    const metaEnquiries = enquiries.filter(enquiry => {\r\n      const source = getNormalizedEnquirySourceLabel(enquiry);\r\n      const isMetaSource = source === 'Meta Ads';\r\n      \r\n      // Debug logging for specific enquiry\r\n      if (enquiry.First_Name === 'Mohammad' && enquiry.Last_Name === 'Khawaja') {\r\n        console.log('Mohammad Khawaja debug:', {\r\n          Ultimate_Source: enquiry.Ultimate_Source,\r\n          normalizedSource: source,\r\n          isMetaSource,\r\n          enquiry\r\n        });\r\n      }\r\n      \r\n      if (!isMetaSource) return false;\r\n      \r\n      // Check if enquiry is within date range (skip date filter for \"all time\")\r\n      if (range) {\r\n        const enquiryDate = new Date(enquiry.Date_Created || enquiry.Touchpoint_Date);\r\n        const isInRange = enquiryDate >= range.start && enquiryDate <= range.end;\r\n        return isInRange;\r\n      }\r\n      \r\n      // For \"all time\" (range is null), include all Meta enquiries\r\n      return true;\r\n    });\r\n\r\n    // Debug: Log Meta enquiries to see their structure (only once)\r\n    if (metaEnquiries.length > 0 && !(window as any).metaEnquiriesLogged) {\r\n      console.log('� Meta enquiries found:', metaEnquiries.length);\r\n      console.log('📋 Sample Meta enquiry fields:', Object.keys(metaEnquiries[0]));\r\n      (window as any).metaEnquiriesLogged = true;\r\n    }\r\n\r\n    const totalEnquiries = metaEnquiries.length;\r\n    \r\n    // Log pitch matching summary when we have both enquiries and instruction data\r\n    if (totalEnquiries > 0 && instructionData?.deals && !(window as any).pitchSummaryLogged) {\r\n      const pitchedCount = metaEnquiries.filter(enquiry => getEnquiryPitchStatus(enquiry).isPitched).length;\r\n      const instructedCount = metaEnquiries.filter(enquiry => getEnquiryInstructionStatus(enquiry).hasInstruction).length;\r\n      console.log(`📈 Conversion Summary: ${pitchedCount}/${totalEnquiries} pitched, ${instructedCount}/${totalEnquiries} instructed`);\r\n      (window as any).pitchSummaryLogged = true;\r\n    } else if (totalEnquiries > 0 && !instructionData?.deals && !(window as any).noPitchDataLogged) {\r\n      console.log('⚠️ Cannot calculate conversion summary - no instruction data available');\r\n      (window as any).noPitchDataLogged = true;\r\n    }\r\n    \r\n    // Calculate pitch and instruction conversion metrics\r\n    const pitchedCount = totalEnquiries > 0 && instructionData?.deals ? \r\n      metaEnquiries.filter(enquiry => getEnquiryPitchStatus(enquiry).isPitched).length : 0;\r\n    const instructedCount = totalEnquiries > 0 && instructionData?.deals ? \r\n      metaEnquiries.filter(enquiry => getEnquiryInstructionStatus(enquiry).hasInstruction).length : 0;\r\n    \r\n    const pitchConversionRate = totalEnquiries > 0 ? (pitchedCount / totalEnquiries) * 100 : 0;\r\n    const instructionConversionRate = totalEnquiries > 0 ? (instructedCount / totalEnquiries) * 100 : 0;\r\n    const pitchToInstructionRate = pitchedCount > 0 ? (instructedCount / pitchedCount) * 100 : 0;\r\n    \r\n    // Calculate total value from enquiries using value band conversion\r\n    const totalValue = metaEnquiries.reduce((sum, enquiry) => {\r\n      const enquiryValue = getEnquiryValue(enquiry);\r\n      const numericValue = convertValueBandToNumber(enquiryValue);\r\n      return sum + numericValue;\r\n    }, 0);\r\n\r\n    const averageValue = totalEnquiries > 0 ? totalValue / totalEnquiries : 0;\r\n    const costPerEnquiry = stats.totalSpend > 0 && totalEnquiries > 0 ? stats.totalSpend / totalEnquiries : 0;\r\n    const roi = stats.totalSpend > 0 ? ((totalValue - stats.totalSpend) / stats.totalSpend) * 100 : 0;\r\n\r\n    return {\r\n      totalEnquiries,\r\n      enquiriesInPeriod: totalEnquiries,\r\n      totalValue,\r\n      averageValue,\r\n      roi,\r\n      costPerEnquiry,\r\n      pitchedCount,\r\n      instructedCount,\r\n      pitchConversionRate,\r\n      instructionConversionRate,\r\n      pitchToInstructionRate,\r\n      enquiries: metaEnquiries\r\n    };\r\n  }, [enquiries, range, stats.totalSpend]);\r\n\r\n  // Prepare chart data\r\n  const chartData = useMemo(() => {\r\n    return filteredMetrics.map(metric => ({\r\n      date: new Date(metric.date).toLocaleDateString('en-GB', { day: '2-digit', month: 'short' }),\r\n      spend: metric.metaAds?.spend || 0,\r\n      reach: metric.metaAds?.reach || 0,\r\n      impressions: metric.metaAds?.impressions || 0,\r\n      clicks: metric.metaAds?.clicks || 0,\r\n      conversions: metric.metaAds?.conversions || 0,\r\n      ctr: metric.metaAds?.ctr || 0,\r\n      cpc: metric.metaAds?.cpc || 0,\r\n      cpm: metric.metaAds?.cpm || 0,\r\n    }));\r\n  }, [filteredMetrics]);\r\n\r\n  const fetchAdData = useCallback(async () => {\r\n    setIsLoadingAds(true);\r\n    try {\r\n      const response = await fetch('/api/marketing-metrics/ads?daysBack=7');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        if (data.success) {\r\n          setAdData(data.data);\r\n          console.log('Ad data loaded:', data.data.length, 'ads');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to fetch ad data:', error);\r\n    } finally {\r\n      setIsLoadingAds(false);\r\n    }\r\n  }, []);\r\n\r\n  // Fetch instruction data to get deals for pitch status\r\n  const fetchInstructionData = useCallback(async () => {\r\n    setIsLoadingInstructions(true);\r\n    try {\r\n      const response = await fetch('/api/instructions');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setInstructionData({\r\n          instructions: data.instructions || [],\r\n          deals: data.deals || []\r\n        });\r\n        console.log('✅ Instruction data loaded:', data.deals?.length || 0, 'deals for pitch matching');\r\n      } else {\r\n        console.error('❌ Failed to fetch instruction data:', response.status, response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Error fetching instruction data:', error);\r\n    } finally {\r\n      setIsLoadingInstructions(false);\r\n    }\r\n  }, []);\r\n\r\n  // Search Clio for contacts by email addresses with caching and rate limiting\r\n  const searchClioContacts = useCallback(async (emails: string[]) => {\r\n    if (emails.length === 0) return;\r\n    \r\n    const now = Date.now();\r\n    const CACHE_DURATION = 10 * 60 * 1000; // 10 minutes\r\n    const RATE_LIMIT_DELAY = 5 * 1000; // 5 seconds between API calls\r\n    \r\n    // Check if we should rate limit this request\r\n    if (now - lastClioSearch < RATE_LIMIT_DELAY) {\r\n      console.log(`⏳ Clio search rate limited. Last search was ${Math.round((now - lastClioSearch) / 1000)}s ago`);\r\n      return;\r\n    }\r\n    \r\n    // Filter out emails that are already cached and still valid\r\n    const emailsToSearch = emails.filter(email => {\r\n      const cached = clioSearchCache[email];\r\n      if (!cached) return true; // Not cached, need to search\r\n      \r\n      const isExpired = now - cached.timestamp > CACHE_DURATION;\r\n      if (isExpired) {\r\n        console.log(`🗑️ Cache expired for ${email} (${Math.round((now - cached.timestamp) / 1000 / 60)} mins old)`);\r\n        return true; // Expired, need to refresh\r\n      }\r\n      \r\n      // Use cached result\r\n      console.log(`💾 Using cached result for ${email}`);\r\n      setClioSearchResults(prev => ({...prev, [email]: cached.result}));\r\n      return false; // Don't search, use cache\r\n    });\r\n    \r\n    if (emailsToSearch.length === 0) {\r\n      console.log(`📧 All ${emails.length} emails already cached - no Clio API calls needed`);\r\n      return;\r\n    }\r\n    \r\n    console.log(`📧 Searching Clio for ${emailsToSearch.length}/${emails.length} emails (${emails.length - emailsToSearch.length} cached)`);\r\n    setIsLoadingClioSearch(true);\r\n    setLastClioSearch(now);\r\n    \r\n    try {\r\n      const response = await fetch('/api/search-clio-contacts', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ emails: emailsToSearch }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        if (data.success) {\r\n          // Update both results and cache\r\n          const newResults = data.results;\r\n          const newCacheEntries: {[email: string]: {result: any, timestamp: number}} = {};\r\n          \r\n          Object.entries(newResults).forEach(([email, result]) => {\r\n            newCacheEntries[email] = {\r\n              result,\r\n              timestamp: now\r\n            };\r\n          });\r\n          \r\n          setClioSearchResults(prev => ({...prev, ...newResults}));\r\n          setClioSearchCache(prev => ({...prev, ...newCacheEntries}));\r\n          \r\n          console.log(`🔍 Clio search completed: ${data.summary.totalFound}/${data.summary.totalSearched} contacts found, cached for 10 minutes`);\r\n        } else {\r\n          console.error('❌ Clio search failed:', data.error);\r\n        }\r\n      } else {\r\n        console.error('❌ Failed to search Clio contacts:', response.status, response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Error searching Clio contacts:', error);\r\n    } finally {\r\n      setIsLoadingClioSearch(false);\r\n    }\r\n  }, [clioSearchCache, lastClioSearch]);\r\n\r\n  // Clear Clio cache manually\r\n  const clearClioCache = useCallback(() => {\r\n    console.log('🗑️ Clearing Clio cache and forcing refresh');\r\n    setClioSearchCache({});\r\n    setClioSearchResults({});\r\n    setLastClioSearch(0);\r\n    \r\n    // Re-trigger search if we have enquiries\r\n    if (metaEnquiryStats?.enquiries && metaEnquiryStats.enquiries.length > 0) {\r\n      const uniqueEmails = Array.from(new Set(\r\n        metaEnquiryStats.enquiries\r\n          .map(enquiry => enquiry.Email)\r\n          .filter(email => email && email.trim() !== '')\r\n      ));\r\n      \r\n      if (uniqueEmails.length > 0) {\r\n        console.log(`📧 Re-starting fresh Clio contact search for ${uniqueEmails.length} unique email addresses`);\r\n        searchClioContacts(uniqueEmails);\r\n      }\r\n    }\r\n  }, [metaEnquiryStats?.enquiries, searchClioContacts]);\r\n\r\n  // Load ad data and instruction data on component mount\r\n  useEffect(() => {\r\n    fetchAdData();\r\n    fetchInstructionData();\r\n  }, [fetchAdData, fetchInstructionData]);\r\n\r\n  // Search Clio contacts when metaEnquiryStats changes and has enquiries\r\n  useEffect(() => {\r\n    if (metaEnquiryStats?.enquiries && metaEnquiryStats.enquiries.length > 0) {\r\n      const uniqueEmails = Array.from(new Set(\r\n        metaEnquiryStats.enquiries\r\n          .map(enquiry => enquiry.Email)\r\n          .filter(email => email && email.trim() !== '')\r\n      ));\r\n      \r\n      if (uniqueEmails.length > 0) {\r\n        console.log(`📧 Starting Clio contact search for ${uniqueEmails.length} unique email addresses`);\r\n        searchClioContacts(uniqueEmails);\r\n      }\r\n    }\r\n  }, [metaEnquiryStats?.enquiries, searchClioContacts]);\r\n\r\n  const handleRefresh = useCallback(async () => {\r\n    if (!triggerRefresh || isRefreshing) return;\r\n    \r\n    setIsRefreshing(true);\r\n    try {\r\n      await Promise.all([\r\n        triggerRefresh(),\r\n        fetchAdData(),\r\n        fetchInstructionData()\r\n      ]);\r\n    } finally {\r\n      setIsRefreshing(false);\r\n    }\r\n  }, [triggerRefresh, isRefreshing, fetchAdData, fetchInstructionData]);\r\n\r\n  const formatCurrency = (value: number) => {\r\n    return new Intl.NumberFormat('en-GB', { \r\n      style: 'currency', \r\n      currency: 'GBP',\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2\r\n    }).format(value);\r\n  };\r\n\r\n  const formatNumber = (value: number) => {\r\n    return new Intl.NumberFormat('en-GB').format(value);\r\n  };\r\n\r\n  const formatPercent = (value: number) => {\r\n    return `${value.toFixed(2)}%`;\r\n  };\r\n\r\n  const formatTimeAgo = (timestamp?: number): string => {\r\n    if (!timestamp) return 'Never';\r\n    const diffMs = Date.now() - timestamp;\r\n    if (diffMs < 60_000) return 'Just now';\r\n    const minutes = Math.floor(diffMs / 60_000);\r\n    if (minutes < 60) return `${minutes}m ago`;\r\n    const hours = Math.floor(minutes / 60);\r\n    if (hours < 24) return `${hours}h ago`;\r\n    const days = Math.floor(hours / 24);\r\n    return `${days}d ago`;\r\n  };\r\n\r\n  const getDatePickerStyles = (isDarkMode: boolean): Partial<IDatePickerStyles> => ({\r\n    root: { maxWidth: 220 },\r\n    textField: {\r\n      root: { fontFamily: 'Raleway, sans-serif !important', width: '100% !important' },\r\n      fieldGroup: {\r\n        height: '36px !important',\r\n        borderRadius: '8px !important',\r\n        border: `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.24)' : 'rgba(13, 47, 96, 0.18)'} !important`,\r\n        background: `${isDarkMode ? 'rgba(15, 23, 42, 0.9)' : 'rgba(255, 255, 255, 0.95)'} !important`,\r\n        padding: '0 14px !important',\r\n      },\r\n      field: {\r\n        fontSize: '14px !important',\r\n        fontFamily: 'Raleway, sans-serif !important',\r\n        fontWeight: '500 !important',\r\n      },\r\n    },\r\n  });\r\n\r\n  const getRangeButtonStyles = (isDarkMode: boolean, active: boolean): IButtonStyles => ({\r\n    root: {\r\n      borderRadius: 999,\r\n      border: active \r\n        ? `1px solid ${isDarkMode ? 'rgba(135, 176, 255, 0.5)' : 'rgba(13, 47, 96, 0.32)'}`\r\n        : `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.24)' : 'rgba(13, 47, 96, 0.16)'}`,\r\n      padding: '0 12px',\r\n      minHeight: 32,\r\n      height: 32,\r\n      fontWeight: 600,\r\n      fontSize: 13,\r\n      color: active ? '#ffffff' : (isDarkMode ? '#E2E8F0' : colours.missedBlue),\r\n      background: active ? colours.highlight : (isDarkMode ? 'rgba(148, 163, 184, 0.16)' : 'transparent'),\r\n      fontFamily: 'Raleway, sans-serif',\r\n      transition: 'all 0.2s ease',\r\n    },\r\n    rootHovered: {\r\n      background: active ? '#2f7cb3' : (isDarkMode ? 'rgba(148, 163, 184, 0.24)' : 'rgba(54, 144, 206, 0.12)'),\r\n    },\r\n  });\r\n\r\n  const containerStyle = {\r\n    padding: '24px',\r\n    backgroundColor: isDarkMode ? colours.dark.background : colours.light.background,\r\n    minHeight: '100vh',\r\n    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n    fontFamily: 'Raleway, sans-serif',\r\n  };\r\n\r\n  const headerStyle = {\r\n    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n    fontSize: '28px',\r\n    fontWeight: 700,\r\n    marginBottom: '8px',\r\n    fontFamily: 'Raleway, sans-serif',\r\n  };\r\n\r\n  const subHeaderStyle = {\r\n    color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n    fontSize: '16px',\r\n    margin: 0,\r\n    fontFamily: 'Raleway, sans-serif',\r\n  };\r\n\r\n  const sectionTitleStyle = {\r\n    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n    fontSize: '20px',\r\n    fontWeight: 600,\r\n    marginBottom: '16px',\r\n    fontFamily: 'Raleway, sans-serif',\r\n  };\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      {/* Header Section */}\r\n      <div style={{ \r\n        display: 'flex', \r\n        justifyContent: 'space-between', \r\n        alignItems: 'flex-start',\r\n        marginBottom: '16px',\r\n        flexWrap: 'wrap',\r\n        gap: '16px'\r\n      }}>\r\n        <div>\r\n          <h1 style={{\r\n            ...headerStyle,\r\n            marginBottom: '4px'\r\n          }}>Meta Analytics</h1>\r\n          <p style={{\r\n            ...subHeaderStyle,\r\n            margin: 0\r\n          }}>\r\n            Facebook advertising performance insights\r\n          </p>\r\n        </div>\r\n        \r\n        <div style={{ display: 'flex', gap: '12px', alignItems: 'center', flexWrap: 'wrap' }}>\r\n          {lastRefreshTimestamp && (\r\n            <div style={{ \r\n              fontSize: '12px',\r\n              color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n              textAlign: 'right',\r\n              fontFamily: 'Raleway, sans-serif'\r\n            }}>\r\n              <div>Updated {new Date(lastRefreshTimestamp).toLocaleTimeString()}</div>\r\n            </div>\r\n          )}\r\n          \r\n          <PrimaryButton\r\n            text={isRefreshing ? 'Refreshing...' : 'Refresh'}\r\n            onClick={handleRefresh}\r\n            disabled={isRefreshing || isFetching}\r\n            iconProps={isRefreshing ? undefined : { iconName: 'Refresh' }}\r\n            styles={{\r\n              root: {\r\n                backgroundColor: colours.cta,\r\n                borderColor: colours.cta,\r\n                fontFamily: 'Raleway, sans-serif',\r\n              },\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Navigation Surface */}\r\n      <div style={surface(isDarkMode)}>\r\n        <div style={{ display: 'flex', flexDirection: 'column', gap: 16 }}>\r\n          {/* Date Range Display */}\r\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', flexWrap: 'wrap', gap: 12 }}>\r\n            {rangeKey === 'custom' && customDateRange ? (\r\n              <div style={{ display: 'flex', gap: 8 }}>\r\n                <DatePicker\r\n                  placeholder=\"Start date\"\r\n                  value={customDateRange?.start || undefined}\r\n                  onSelectDate={(date) => setCustomDateRange(prev => ({\r\n                    start: date || null,\r\n                    end: prev?.end || null\r\n                  }))}\r\n                  firstDayOfWeek={DayOfWeek.Monday}\r\n                  styles={getDatePickerStyles(isDarkMode)}\r\n                />\r\n                <DatePicker\r\n                  placeholder=\"End date\"\r\n                  value={customDateRange?.end || undefined}\r\n                  onSelectDate={(date) => setCustomDateRange(prev => ({\r\n                    start: prev?.start || null,\r\n                    end: date || null\r\n                  }))}\r\n                  firstDayOfWeek={DayOfWeek.Monday}\r\n                  styles={getDatePickerStyles(isDarkMode)}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <div style={{ display: 'flex', gap: 8 }}>\r\n                <div style={{\r\n                  padding: '8px 12px',\r\n                  borderRadius: 8,\r\n                  background: isDarkMode ? 'rgba(15, 23, 42, 0.8)' : 'rgba(255, 255, 255, 0.95)',\r\n                  border: `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.24)' : 'rgba(13, 47, 96, 0.18)'}`,\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  gap: 2,\r\n                  cursor: 'pointer',\r\n                }}\r\n                onClick={() => setRangeKey('custom')}\r\n                title=\"Click to set custom date range\">\r\n                  <span style={{ fontSize: 11, opacity: 0.7, fontWeight: 600 }}>From</span>\r\n                  <span style={{ fontSize: 16, fontWeight: 700 }}>\r\n                    {range ? range.start.toLocaleDateString() : 'All time'}\r\n                  </span>\r\n                </div>\r\n                <div style={{\r\n                  padding: '8px 12px',\r\n                  borderRadius: 8,\r\n                  background: isDarkMode ? 'rgba(15, 23, 42, 0.8)' : 'rgba(255, 255, 255, 0.95)',\r\n                  border: `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.24)' : 'rgba(13, 47, 96, 0.18)'}`,\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  gap: 2,\r\n                  cursor: 'pointer',\r\n                }}\r\n                onClick={() => setRangeKey('custom')}\r\n                title=\"Click to set custom date range\">\r\n                  <span style={{ fontSize: 11, opacity: 0.7, fontWeight: 600 }}>To</span>\r\n                  <span style={{ fontSize: 16, fontWeight: 700 }}>\r\n                    {range ? range.end.toLocaleDateString() : 'All time'}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div style={{ display: 'flex', gap: 8, alignItems: 'center' }}>\r\n              <div style={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                gap: 6,\r\n                padding: '6px 12px',\r\n                borderRadius: 8,\r\n                border: `1px solid ${isFetching ? (isDarkMode ? 'rgba(148, 163, 184, 0.3)' : 'rgba(148, 163, 184, 0.25)') : (isDarkMode ? 'rgba(34, 197, 94, 0.3)' : 'rgba(34, 197, 94, 0.25)')}`,\r\n                background: isDarkMode ? 'rgba(15, 23, 42, 0.8)' : 'rgba(255, 255, 255, 0.95)',\r\n                fontSize: 12,\r\n                fontWeight: 600,\r\n                color: isDarkMode ? '#E2E8F0' : colours.missedBlue,\r\n              }}>\r\n                {isFetching ? (\r\n                  <>\r\n                    <Spinner size={SpinnerSize.xSmall} />\r\n                    Refreshing...\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <div style={{\r\n                      width: 8,\r\n                      height: 8,\r\n                      borderRadius: '50%',\r\n                      backgroundColor: '#22c55e',\r\n                    }} />\r\n                    Live data\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Data Summary */}\r\n          {metaMetrics && metaMetrics.length > 0 && (\r\n            <div style={{\r\n              padding: '8px 12px',\r\n              borderRadius: 8,\r\n              background: isDarkMode ? 'rgba(148, 163, 184, 0.08)' : 'rgba(13, 47, 96, 0.04)',\r\n              border: `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.16)' : 'rgba(13, 47, 96, 0.08)'}`,\r\n              fontSize: 12,\r\n              color: isDarkMode ? 'rgba(226, 232, 240, 0.85)' : 'rgba(13, 47, 96, 0.75)',\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              alignItems: 'center',\r\n              gap: 12\r\n            }}>\r\n              <span>\r\n                Available data: {new Date(Math.min(...metaMetrics.map(m => new Date(m.date).getTime()))).toLocaleDateString()} to {new Date(Math.max(...metaMetrics.map(m => new Date(m.date).getTime()))).toLocaleDateString()} \r\n                ({metaMetrics.length.toLocaleString()} total records)\r\n              </span>\r\n              <span>Showing {filteredMetrics.length.toLocaleString()} filtered</span>\r\n            </div>\r\n          )}\r\n\r\n          {/* Range Navigation Buttons */}\r\n          <div style={{ display: 'flex', flexWrap: 'wrap', gap: 8, alignItems: 'center' }}>\r\n            {RANGE_OPTIONS.map(option => (\r\n              <DefaultButton\r\n                key={option.key}\r\n                text={option.label}\r\n                onClick={() => setRangeKey(option.key)}\r\n                styles={getRangeButtonStyles(isDarkMode, rangeKey === option.key)}\r\n              />\r\n            ))}\r\n            <DefaultButton\r\n              text=\"Custom\"\r\n              onClick={() => setRangeKey('custom')}\r\n              styles={getRangeButtonStyles(isDarkMode, rangeKey === 'custom')}\r\n            />\r\n            <DefaultButton\r\n              text=\"All Time\"\r\n              onClick={() => setRangeKey('all')}\r\n              styles={getRangeButtonStyles(isDarkMode, rangeKey === 'all')}\r\n            />\r\n            {rangeKey !== 'all' && (\r\n              <button\r\n                onClick={() => setRangeKey('all')}\r\n                style={{\r\n                  marginLeft: 8,\r\n                  padding: '4px 8px',\r\n                  backgroundColor: 'transparent',\r\n                  border: `1px solid ${isDarkMode ? colours.accent : colours.highlight}`,\r\n                  borderRadius: '4px',\r\n                  color: isDarkMode ? colours.accent : colours.highlight,\r\n                  cursor: 'pointer',\r\n                  fontSize: '12px',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  gap: 4,\r\n                }}\r\n                title=\"Clear date range filter\"\r\n              >\r\n                <span style={{ fontSize: 16 }}>×</span>\r\n                Clear\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Loading State */}\r\n      {isFetching && (\r\n        <div style={surface(isDarkMode, { textAlign: 'center', padding: '60px', marginTop: '16px' })}>\r\n          <Spinner size={SpinnerSize.large} />\r\n          <p style={{ marginTop: '20px', fontSize: '16px' }}>\r\n            Loading Meta marketing analytics...\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      {/* No Data State */}\r\n      {!isFetching && (!metaMetrics || metaMetrics.length === 0 || filteredMetrics.length === 0) && (\r\n        <div style={surface(isDarkMode, { textAlign: 'center', padding: '60px', marginTop: '16px' })}>\r\n          <FontIcon \r\n            iconName=\"BarChart4\" \r\n            style={{ \r\n              fontSize: '64px', \r\n              color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n              marginBottom: '20px' \r\n            }} \r\n          />\r\n          <h3 style={{ \r\n            color: isDarkMode ? colours.dark.text : colours.light.text,\r\n            marginBottom: '12px',\r\n            fontSize: '24px'\r\n          }}>\r\n            {!metaMetrics || metaMetrics.length === 0 ? 'No Meta metrics available' : 'No data for selected period'}\r\n          </h3>\r\n          <p style={{ \r\n            color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n            margin: 0,\r\n            fontSize: '16px'\r\n          }}>\r\n            {!metaMetrics || metaMetrics.length === 0 \r\n              ? 'Meta marketing data will appear here once available.' \r\n              : 'Try selecting a different time range to view data.'}\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Main Analytics Dashboard */}\r\n      {!isFetching && filteredMetrics.length > 0 && (\r\n        <>\r\n          {/* Key Performance Indicators */}\r\n          <div style={surface(isDarkMode, { marginTop: '16px' })}>\r\n            <h3 style={sectionTitleStyle}>Key Metrics</h3>\r\n            <div style={{ \r\n              display: 'grid', \r\n              gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\r\n              gap: '20px',\r\n              marginBottom: '32px'\r\n            }}>\r\n              <div style={{\r\n                padding: '20px',\r\n                backgroundColor: isDarkMode ? 'rgba(15, 23, 42, 0.7)' : 'rgba(248, 250, 252, 0.8)',\r\n                borderRadius: '12px',\r\n                border: `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.24)' : 'rgba(15, 23, 42, 0.06)'}`,\r\n              }}>\r\n                <div style={{ \r\n                  fontSize: '36px', \r\n                  fontWeight: 700, \r\n                  color: colours.accent,\r\n                  marginBottom: '8px' \r\n                }}>\r\n                  {formatCurrency(stats.totalSpend)}\r\n                </div>\r\n                <div style={{ fontSize: '14px', color: '#ffffff' }}>\r\n                  Total Investment\r\n                </div>\r\n              </div>\r\n\r\n              <div style={{\r\n                padding: '20px',\r\n                backgroundColor: isDarkMode ? 'rgba(15, 23, 42, 0.7)' : 'rgba(248, 250, 252, 0.8)',\r\n                borderRadius: '12px',\r\n                border: `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.24)' : 'rgba(15, 23, 42, 0.06)'}`,\r\n              }}>\r\n                <div style={{ \r\n                  fontSize: '36px', \r\n                  fontWeight: 700, \r\n                  color: colours.accent,\r\n                  marginBottom: '8px' \r\n                }}>\r\n                  {formatNumber(stats.totalReach)}\r\n                </div>\r\n                <div style={{ fontSize: '14px', color: '#ffffff' }}>\r\n                  People Reached\r\n                </div>\r\n              </div>\r\n\r\n              <div style={{\r\n                padding: '20px',\r\n                backgroundColor: isDarkMode ? 'rgba(15, 23, 42, 0.7)' : 'rgba(248, 250, 252, 0.8)',\r\n                borderRadius: '12px',\r\n                border: `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.24)' : 'rgba(15, 23, 42, 0.06)'}`,\r\n              }}>\r\n                <div style={{ \r\n                  fontSize: '36px', \r\n                  fontWeight: 700, \r\n                  color: colours.accent,\r\n                  marginBottom: '8px' \r\n                }}>\r\n                  {formatNumber(stats.totalConversions)}\r\n                </div>\r\n                <div style={{ fontSize: '14px', color: '#ffffff' }}>\r\n                  Total Conversions\r\n                </div>\r\n              </div>\r\n\r\n              <div style={{\r\n                padding: '20px',\r\n                backgroundColor: isDarkMode ? 'rgba(15, 23, 42, 0.7)' : 'rgba(248, 250, 252, 0.8)',\r\n                borderRadius: '12px',\r\n                border: `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.24)' : 'rgba(15, 23, 42, 0.06)'}`,\r\n              }}>\r\n                <div style={{ \r\n                  fontSize: '36px', \r\n                  fontWeight: 700, \r\n                  color: colours.accent,\r\n                  marginBottom: '8px' \r\n                }}>\r\n                  {formatCurrency(stats.costPerConversion)}\r\n                </div>\r\n                <div style={{ fontSize: '14px', color: '#ffffff' }}>\r\n                  Cost Per Conversion\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Performance Summary */}\r\n          <div style={surface(isDarkMode, { marginTop: '16px' })}>\r\n            <h3 style={sectionTitleStyle}>Performance Summary</h3>\r\n            <div style={{ \r\n              display: 'grid', \r\n              gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))',\r\n              gap: '20px',\r\n              marginBottom: '20px'\r\n            }}>\r\n              {/* Efficiency Metrics */}\r\n              <div>\r\n                <h4 style={{ \r\n                  color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                  marginBottom: '12px',\r\n                  fontSize: '16px'\r\n                }}>Campaign Efficiency</h4>\r\n                <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span>Click-Through Rate:</span>\r\n                    <strong style={{ color: colours.accent }}>{formatPercent(stats.avgCtr)}</strong>\r\n                  </div>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span>Cost Per Click:</span>\r\n                    <strong style={{ color: colours.accent }}>{formatCurrency(stats.avgCpc)}</strong>\r\n                  </div>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span>Conversion Rate:</span>\r\n                    <strong style={{ color: colours.accent }}>{formatPercent(stats.conversionRate)}</strong>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Reach & Frequency */}\r\n              <div>\r\n                <h4 style={{ \r\n                  color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                  marginBottom: '12px',\r\n                  fontSize: '16px'\r\n                }}>Reach & Frequency</h4>\r\n                <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span>Total Impressions:</span>\r\n                    <strong style={{ color: colours.accent }}>{formatNumber(stats.totalImpressions)}</strong>\r\n                  </div>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span>Unique Reach:</span>\r\n                    <strong style={{ color: colours.accent }}>{formatNumber(stats.totalReach)}</strong>\r\n                  </div>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span>Average Frequency:</span>\r\n                    <strong style={{ color: colours.accent }}>{stats.avgFrequency.toFixed(2)}</strong>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* ROI Analysis */}\r\n              <div>\r\n                <h4 style={{ \r\n                  color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                  marginBottom: '12px',\r\n                  fontSize: '16px'\r\n                }}>ROI Analysis</h4>\r\n                <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span>Total Clicks:</span>\r\n                    <strong style={{ color: colours.accent }}>{formatNumber(stats.totalClicks)}</strong>\r\n                  </div>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span>Cost Per Conversion:</span>\r\n                    <strong style={{ color: colours.accent }}>{formatCurrency(stats.costPerConversion)}</strong>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* ROI & Enquiries Analysis */}\r\n          <div style={surface(isDarkMode, { marginTop: '16px' })}>\r\n            <h3 style={sectionTitleStyle}>ROI & Enquiries Analysis</h3>\r\n            <div style={{ \r\n              display: 'grid', \r\n              gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))',\r\n              gap: '20px',\r\n              marginBottom: '20px'\r\n            }}>\r\n              {/* Enquiries Overview */}\r\n              <div>\r\n                <h4 style={{ \r\n                  color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                  marginBottom: '12px',\r\n                  fontSize: '16px'\r\n                }}>Meta Enquiries</h4>\r\n                <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span>Total Enquiries:</span>\r\n                    <strong style={{ color: colours.accent }}>{metaEnquiryStats.totalEnquiries}</strong>\r\n                  </div>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span>Cost Per Enquiry:</span>\r\n                    <strong style={{ color: colours.accent }}>\r\n                      {metaEnquiryStats.costPerEnquiry > 0 ? formatCurrency(metaEnquiryStats.costPerEnquiry) : '—'}\r\n                    </strong>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* ROI Metrics */}\r\n              <div>\r\n                <h4 style={{ \r\n                  color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                  marginBottom: '12px',\r\n                  fontSize: '16px'\r\n                }}>Return on Investment</h4>\r\n                <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span>Total Value (est.):</span>\r\n                    <strong style={{ color: colours.accent }}>\r\n                      {metaEnquiryStats.totalValue > 0 ? formatCurrency(metaEnquiryStats.totalValue) : '—'}\r\n                    </strong>\r\n                  </div>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span>ROI:</span>\r\n                    <strong style={{ \r\n                      color: metaEnquiryStats.roi > 0 ? colours.accent : colours.cta\r\n                    }}>\r\n                      {metaEnquiryStats.totalValue > 0 ? `${metaEnquiryStats.roi.toFixed(1)}%` : '—'}\r\n                    </strong>\r\n                  </div>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span>Revenue Ratio:</span>\r\n                    <strong style={{ color: colours.accent }}>\r\n                      {metaEnquiryStats.totalValue > 0 && stats.totalSpend > 0 \r\n                        ? `${(metaEnquiryStats.totalValue / stats.totalSpend).toFixed(2)}:1`\r\n                        : '—'\r\n                      }\r\n                    </strong>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Conversion Funnel */}\r\n              <div>\r\n                <h4 style={{ \r\n                  color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                  marginBottom: '12px',\r\n                  fontSize: '16px'\r\n                }}>Conversion Funnel</h4>\r\n                <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span>Ad Impressions:</span>\r\n                    <strong style={{ color: colours.accent }}>{formatNumber(stats.totalImpressions)}</strong>\r\n                  </div>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span>Ad Clicks:</span>\r\n                    <strong style={{ color: colours.accent }}>{formatNumber(stats.totalClicks)}</strong>\r\n                  </div>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span>Enquiries:</span>\r\n                    <strong style={{ color: colours.accent }}>{metaEnquiryStats.totalEnquiries}</strong>\r\n                  </div>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span>Click-to-Enquiry:</span>\r\n                    <strong style={{ color: colours.accent }}>\r\n                      {stats.totalClicks > 0 && metaEnquiryStats.totalEnquiries > 0\r\n                        ? `${((metaEnquiryStats.totalEnquiries / stats.totalClicks) * 100).toFixed(2)}%`\r\n                        : '—'\r\n                      }\r\n                    </strong>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Recent Meta Enquiries */}\r\n            {metaEnquiryStats.enquiries.length > 0 && (\r\n              <div style={{ marginTop: '24px' }}>\r\n                <h4 style={{ \r\n                  color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                  marginBottom: '12px',\r\n                  fontSize: '16px'\r\n                }}>Recent Meta Enquiries ({metaEnquiryStats.enquiries.length})</h4>\r\n                \r\n                {/* Clio Search Summary */}\r\n                {Object.keys(clioSearchResults).length > 0 && (\r\n                  <div style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '8px',\r\n                    padding: '8px',\r\n                    backgroundColor: isDarkMode ? 'rgba(59, 130, 246, 0.1)' : 'rgba(59, 130, 246, 0.05)',\r\n                    borderRadius: '4px',\r\n                    border: '1px solid rgba(59, 130, 246, 0.2)',\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'center'\r\n                  }}>\r\n                    <div>\r\n                      <span style={{ color: colours.accent, fontWeight: 600 }}>🔍 Clio Validation: </span>\r\n                      {(() => {\r\n                        const totalSearched = Object.keys(clioSearchResults).length;\r\n                        const foundContacts = Object.values(clioSearchResults).filter(contact => contact !== null).length;\r\n                        const contactsWithMatters = Object.values(clioSearchResults).filter(contact => contact && contact.matters && contact.matters.length > 0).length;\r\n                        const cachedCount = Object.keys(clioSearchCache).length;\r\n                        \r\n                        return `${foundContacts}/${totalSearched} contacts found, ${contactsWithMatters} with matters${cachedCount > 0 ? ` (${cachedCount} cached)` : ''}`;\r\n                      })()}\r\n                      {isLoadingClioSearch && <span style={{ opacity: 0.7 }}> (searching...)</span>}\r\n                    </div>\r\n                    <button\r\n                      onClick={clearClioCache}\r\n                      disabled={isLoadingClioSearch}\r\n                      style={{\r\n                        padding: '4px 8px',\r\n                        fontSize: '10px',\r\n                        backgroundColor: 'transparent',\r\n                        border: '1px solid rgba(59, 130, 246, 0.4)',\r\n                        borderRadius: '3px',\r\n                        color: colours.accent,\r\n                        cursor: isLoadingClioSearch ? 'not-allowed' : 'pointer',\r\n                        opacity: isLoadingClioSearch ? 0.5 : 1\r\n                      }}\r\n                      title=\"Clear cache and refresh Clio search results\"\r\n                    >\r\n                      🔄 Refresh\r\n                    </button>\r\n                  </div>\r\n                )}\r\n                \r\n                <div style={{ \r\n                  maxHeight: '400px',\r\n                  overflowY: 'auto',\r\n                  border: `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.12)' : 'rgba(15, 23, 42, 0.08)'}`,\r\n                  borderRadius: '8px'\r\n                }}>\r\n                  {/* Table Header */}\r\n                  <div style={{\r\n                    display: 'grid',\r\n                    gridTemplateColumns: '2fr 1fr 1fr 1fr 1fr 1fr 1fr',\r\n                    gap: '12px',\r\n                    padding: '12px',\r\n                    backgroundColor: isDarkMode ? 'rgba(15, 23, 42, 0.6)' : 'rgba(248, 250, 252, 0.8)',\r\n                    borderBottom: `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.12)' : 'rgba(15, 23, 42, 0.08)'}`,\r\n                    fontSize: '11px',\r\n                    fontWeight: 600,\r\n                    color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n                    position: 'sticky',\r\n                    top: 0,\r\n                    zIndex: 1\r\n                  }}>\r\n                    <div>Name</div>\r\n                    <div>Value</div>\r\n                    <div>Claimed</div>\r\n                    <div>Pitched</div>\r\n                    <div>Conversion</div>\r\n                    <div>Clio</div>\r\n                    <div>Enquiry Date</div>\r\n                  </div>\r\n                  \r\n                  {/* Table Rows */}\r\n                  {metaEnquiryStats.enquiries.map((enquiry, index) => (\r\n                    <div key={`enquiry-${enquiry.ID}-${index}`} style={{\r\n                      display: 'grid',\r\n                      gridTemplateColumns: '2fr 1fr 1fr 1fr 1fr 1fr 1fr',\r\n                      gap: '12px',\r\n                      padding: '12px',\r\n                      borderBottom: index < metaEnquiryStats.enquiries.length - 1 ? \r\n                        `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.08)' : 'rgba(15, 23, 42, 0.04)'}` : 'none',\r\n                      fontSize: '12px',\r\n                      alignItems: 'center',\r\n                      backgroundColor: 'transparent',\r\n                      transition: 'background-color 0.2s ease',\r\n                      cursor: 'default'\r\n                    }}\r\n                    onMouseEnter={(e) => {\r\n                      e.currentTarget.style.backgroundColor = isDarkMode ? 'rgba(15, 23, 42, 0.3)' : 'rgba(248, 250, 252, 0.7)';\r\n                    }}\r\n                    onMouseLeave={(e) => {\r\n                      e.currentTarget.style.backgroundColor = 'transparent';\r\n                    }}\r\n                    >\r\n                      {/* Name Column */}\r\n                      <div>\r\n                        <div style={{ fontWeight: 600, marginBottom: '2px' }}>\r\n                          {enquiry.First_Name} {enquiry.Last_Name}\r\n                        </div>\r\n                        <div style={{ opacity: 0.7, fontSize: '11px' }}>\r\n                          {enquiry.Area_of_Work || 'No AOW'}\r\n                        </div>\r\n                      </div>\r\n                      \r\n                      {/* Value Column */}\r\n                      <div style={{ fontWeight: 500, color: colours.accent }}>\r\n                        {(() => {\r\n                          // Debug: Log value data for first few enquiries\r\n                          if (!(window as any).valueDebugLogged) {\r\n                            console.log('🔍 Value Debug - First 5 enquiries:');\r\n                            metaEnquiryStats.enquiries.slice(0, 5).forEach((enq, i) => {\r\n                              console.log(`${i+1}. ${enq.First_Name} ${enq.Last_Name}:`, {\r\n                                Value: enq.Value,\r\n                                ValueType: typeof enq.Value,\r\n                                ValueString: String(enq.Value),\r\n                                ParsedFloat: parseFloat(String(enq.Value))\r\n                              });\r\n                            });\r\n                            (window as any).valueDebugLogged = true;\r\n                          }\r\n                          \r\n                          // Get value from Value field or Facebook lead notes\r\n                          const enquiryValue = getEnquiryValue(enquiry);\r\n                          if (!enquiryValue || enquiryValue.trim() === '') return '—';\r\n                          \r\n                          // Return the text value as-is (it's a value band description)\r\n                          return enquiryValue;\r\n                        })()}\r\n                      </div>\r\n                      \r\n                      {/* Claimed Column */}\r\n                      <div>\r\n                        {(() => {\r\n                          const poc = enquiry.Point_of_Contact?.toLowerCase() || '';\r\n                          const isClaimed = poc !== 'team@helix-law.com' && !!poc;\r\n                          \r\n                          if (isClaimed) {\r\n                            // Show who claimed it (extract name part from email)\r\n                            const emailName = enquiry.Point_of_Contact?.split('@')[0] || '';\r\n                            // Properly capitalize each word/initial - make initials ALL CAPS\r\n                            const displayName = emailName\r\n                              .replace(/\\./g, ' ')\r\n                              .split(' ')\r\n                              .map(word => word.toUpperCase())\r\n                              .join(' ');\r\n                            return (\r\n                              <div style={{\r\n                                fontWeight: 600,\r\n                                color: '#10b981',\r\n                                fontSize: '11px'\r\n                              }}>\r\n                                {displayName}\r\n                              </div>\r\n                            );\r\n                          } else {\r\n                            return (\r\n                              <div style={{\r\n                                fontWeight: 600,\r\n                                color: '#ef4444',\r\n                                fontSize: '11px'\r\n                              }}>\r\n                                Unclaimed\r\n                              </div>\r\n                            );\r\n                          }\r\n                        })()}\r\n                      </div>\r\n                      \r\n                      {/* Pitched Column */}\r\n                      <div>\r\n                        {(() => {\r\n                          // Check if enquiry has been pitched by looking up deals table\r\n                          const pitchStatus = getEnquiryPitchStatus(enquiry);\r\n                          \r\n                          if (pitchStatus.isPitched) {\r\n                            return (\r\n                              <div>\r\n                                <div style={{\r\n                                  fontWeight: 600,\r\n                                  color: '#3b82f6',\r\n                                  fontSize: '11px'\r\n                                }}>\r\n                                  Pitched\r\n                                </div>\r\n                                {pitchStatus.pitchDate ? (\r\n                                  <div style={{\r\n                                    fontSize: '10px',\r\n                                    color: '#3b82f6',\r\n                                    fontWeight: 500,\r\n                                    marginTop: '2px'\r\n                                  }}>\r\n                                    {new Date(pitchStatus.pitchDate).toLocaleDateString('en-GB', {\r\n                                      day: '2-digit',\r\n                                      month: '2-digit',\r\n                                      year: '2-digit'\r\n                                    })}\r\n                                  </div>\r\n                                ) : (\r\n                                  <div style={{\r\n                                    fontSize: '9px',\r\n                                    color: '#64748b',\r\n                                    fontStyle: 'italic',\r\n                                    marginTop: '2px'\r\n                                  }}>\r\n                                    Date unknown\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                            );\r\n                          } else {\r\n                            return (\r\n                              <div style={{\r\n                                fontWeight: 600,\r\n                                color: '#64748b',\r\n                                fontSize: '11px'\r\n                              }}>\r\n                                Not Pitched\r\n                              </div>\r\n                            );\r\n                          }\r\n                        })()}\r\n                      </div>\r\n                      \r\n                      {/* Conversion Column */}\r\n                      <div>\r\n                        {(() => {\r\n                          // Check if enquiry pitch became an instruction\r\n                          const instructionStatus = getEnquiryInstructionStatus(enquiry);\r\n                          \r\n                          return (\r\n                            <div>\r\n                              <div style={{\r\n                                fontWeight: 600,\r\n                                color: instructionStatus.hasInstruction ? '#10b981' : \r\n                                       instructionStatus.isProofOfIdComplete ? '#f59e0b' : '#64748b',\r\n                                fontSize: '11px'\r\n                              }}>\r\n                                {instructionStatus.hasInstruction ? 'Instructed' : \r\n                                 instructionStatus.isProofOfIdComplete ? 'poid-complete' : 'Not Instructed'}\r\n                              </div>\r\n                              {(instructionStatus.hasInstruction || instructionStatus.isProofOfIdComplete) && (\r\n                                <div style={{ \r\n                                  opacity: 0.7,\r\n                                  fontSize: '9px',\r\n                                  marginTop: '1px'\r\n                                }}>\r\n                                  {instructionStatus.instructionRef}\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                      </div>\r\n                      \r\n                      {/* Clio Column */}\r\n                      <div>\r\n                        {(() => {\r\n                          // Check Clio contact status\r\n                          const clioContact = clioSearchResults[enquiry.Email];\r\n                          const isLoading = isLoadingClioSearch && !clioSearchResults.hasOwnProperty(enquiry.Email);\r\n                          \r\n                          if (isLoading) {\r\n                            return (\r\n                              <div style={{\r\n                                fontWeight: 600,\r\n                                color: '#64748b',\r\n                                fontSize: '11px'\r\n                              }}>\r\n                                Searching...\r\n                              </div>\r\n                            );\r\n                          }\r\n                          \r\n                          if (clioContact) {\r\n                            const hasMatter = clioContact.matters && clioContact.matters.length > 0;\r\n                            const matterCount = clioContact.matters?.length || 0;\r\n                            return (\r\n                              <div>\r\n                                <div style={{\r\n                                  fontWeight: 600,\r\n                                  color: hasMatter ? '#10b981' : '#3b82f6',\r\n                                  fontSize: '11px'\r\n                                }}>\r\n                                  {hasMatter ? `${matterCount} Matter(s)` : 'Contact Found'}\r\n                                </div>\r\n                                <div style={{ \r\n                                  opacity: 0.7,\r\n                                  fontSize: '9px',\r\n                                  marginTop: '1px'\r\n                                }}>\r\n                                  {clioContact.name}\r\n                                </div>\r\n                              </div>\r\n                            );\r\n                          } else {\r\n                            return (\r\n                              <div style={{\r\n                                fontWeight: 600,\r\n                                color: '#ef4444',\r\n                                fontSize: '11px'\r\n                              }}>\r\n                                Not Found\r\n                              </div>\r\n                            );\r\n                          }\r\n                        })()}\r\n                      </div>\r\n                      \r\n                      {/* Date Column */}\r\n                      <div style={{ fontWeight: 500 }}>\r\n                        {new Date(enquiry.Date_Created || enquiry.Touchpoint_Date).toLocaleDateString('en-GB', {\r\n                          day: '2-digit',\r\n                          month: '2-digit',\r\n                          year: '2-digit'\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Performance Charts */}\r\n          {LineChart && AreaChart && (\r\n            <div style={{ \r\n              display: 'grid', \r\n              gridTemplateColumns: 'repeat(auto-fit, minmax(500px, 1fr))',\r\n              gap: '16px',\r\n              marginTop: '16px'\r\n            }}>\r\n              {/* Spend Trend Chart */}\r\n              <div style={surface(isDarkMode)}>\r\n                <h3 style={sectionTitleStyle}>Daily Spend Trend</h3>\r\n                <ResponsiveContainer width=\"100%\" height={300}>\r\n                  <AreaChart data={chartData}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" stroke={isDarkMode ? 'rgba(148, 163, 184, 0.2)' : 'rgba(0,0,0,0.1)'} />\r\n                    <XAxis \r\n                      dataKey=\"date\" \r\n                      tick={{ fontSize: 12, fill: isDarkMode ? '#E2E8F0' : '#374151' }}\r\n                      stroke={isDarkMode ? '#64748B' : '#9CA3AF'}\r\n                    />\r\n                    <YAxis \r\n                      tick={{ fontSize: 12, fill: isDarkMode ? '#E2E8F0' : '#374151' }}\r\n                      stroke={isDarkMode ? '#64748B' : '#9CA3AF'}\r\n                    />\r\n                    <Tooltip \r\n                      contentStyle={{\r\n                        backgroundColor: isDarkMode ? colours.dark.cardBackground : colours.light.cardBackground,\r\n                        border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n                        borderRadius: '8px',\r\n                        fontSize: '12px'\r\n                      }}\r\n                      formatter={(value: any) => [formatCurrency(Number(value)), 'Spend']}\r\n                    />\r\n                    <Area type=\"monotone\" dataKey=\"spend\" stroke={colours.cta} fill={colours.cta} fillOpacity={0.3} />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n\r\n              {/* Engagement Metrics */}\r\n              <div style={surface(isDarkMode)}>\r\n                <h3 style={sectionTitleStyle}>Engagement Performance</h3>\r\n                <ResponsiveContainer width=\"100%\" height={300}>\r\n                  <LineChart data={chartData}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" stroke={isDarkMode ? 'rgba(148, 163, 184, 0.2)' : 'rgba(0,0,0,0.1)'} />\r\n                    <XAxis \r\n                      dataKey=\"date\" \r\n                      tick={{ fontSize: 12, fill: isDarkMode ? '#E2E8F0' : '#374151' }}\r\n                      stroke={isDarkMode ? '#64748B' : '#9CA3AF'}\r\n                    />\r\n                    <YAxis \r\n                      tick={{ fontSize: 12, fill: isDarkMode ? '#E2E8F0' : '#374151' }}\r\n                      stroke={isDarkMode ? '#64748B' : '#9CA3AF'}\r\n                    />\r\n                    <Tooltip \r\n                      contentStyle={{\r\n                        backgroundColor: isDarkMode ? colours.dark.cardBackground : colours.light.cardBackground,\r\n                        border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n                        borderRadius: '8px',\r\n                        fontSize: '12px'\r\n                      }}\r\n                    />\r\n                    <Legend />\r\n                    <Line type=\"monotone\" dataKey=\"clicks\" stroke={colours.highlight} strokeWidth={2} name=\"Clicks\" />\r\n                    <Line type=\"monotone\" dataKey=\"conversions\" stroke={colours.accent} strokeWidth={2} name=\"Conversions\" />\r\n                  </LineChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Chart Placeholder - Only shown when charts not available */}\r\n          {(!LineChart || !AreaChart) && (\r\n            <div style={surface(isDarkMode, { marginTop: '16px' })}>\r\n              <h3 style={sectionTitleStyle}>Performance Charts</h3>\r\n              <div style={{ \r\n                padding: '40px',\r\n                textAlign: 'center',\r\n                backgroundColor: isDarkMode ? 'rgba(15, 23, 42, 0.5)' : 'rgba(248, 250, 252, 0.8)',\r\n                borderRadius: '8px',\r\n                border: `1px dashed ${isDarkMode ? 'rgba(148, 163, 184, 0.3)' : 'rgba(13, 47, 96, 0.2)'}`,\r\n              }}>\r\n                <FontIcon \r\n                  iconName=\"LineChart\" \r\n                  style={{ \r\n                    fontSize: '48px', \r\n                    color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n                    marginBottom: '16px' \r\n                  }} \r\n                />\r\n                <h4 style={{ \r\n                  color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                  marginBottom: '8px' \r\n                }}>\r\n                  Charts Loading...\r\n                </h4>\r\n                <p style={{ \r\n                  color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n                  margin: 0,\r\n                  fontSize: '14px'\r\n                }}>\r\n                  Performance visualizations will be displayed here once Recharts loads.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Individual Ad Performance */}\r\n          <div style={surface(isDarkMode, { marginTop: '16px' })}>\r\n            <div style={{ \r\n              display: 'flex', \r\n              justifyContent: 'space-between', \r\n              alignItems: 'center',\r\n              marginBottom: '16px'\r\n            }}>\r\n              <h3 style={sectionTitleStyle}>Top Performing Ads (Last 7 Days)</h3>\r\n              {isLoadingAds && (\r\n                <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\r\n                  <Spinner size={SpinnerSize.small} />\r\n                  <span style={{ fontSize: '12px', color: isDarkMode ? colours.dark.subText : colours.light.subText }}>\r\n                    Loading ads...\r\n                  </span>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {adData && adData.length > 0 ? (\r\n              <div style={{ \r\n                display: 'grid',\r\n                gap: '12px'\r\n              }}>\r\n                {adData.slice(0, 10).map((ad) => (\r\n                  <div key={ad.adId} style={{\r\n                    padding: '16px',\r\n                    backgroundColor: isDarkMode ? 'rgba(15, 23, 42, 0.5)' : 'rgba(248, 250, 252, 0.6)',\r\n                    borderRadius: '8px',\r\n                    border: `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.16)' : 'rgba(15, 23, 42, 0.04)'}`,\r\n                  }}>\r\n                    <div style={{ \r\n                      display: 'grid',\r\n                      gridTemplateColumns: '2fr 1fr 1fr 1fr 1fr',\r\n                      gap: '16px',\r\n                      alignItems: 'center'\r\n                    }}>\r\n                      {/* Ad Details */}\r\n                      <div>\r\n                        <div style={{ \r\n                          fontWeight: 600,\r\n                          fontSize: '14px',\r\n                          color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                          marginBottom: '4px'\r\n                        }}>\r\n                          {ad.adName}\r\n                        </div>\r\n                        <div style={{ \r\n                          fontSize: '12px',\r\n                          color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n                          marginBottom: '2px'\r\n                        }}>\r\n                          Campaign: {ad.campaignName}\r\n                        </div>\r\n                        <div style={{ \r\n                          fontSize: '12px',\r\n                          color: isDarkMode ? colours.dark.subText : colours.light.subText\r\n                        }}>\r\n                          Ad Set: {ad.adsetName}\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Spend */}\r\n                      <div style={{ textAlign: 'center' }}>\r\n                        <div style={{ \r\n                          fontSize: '18px',\r\n                          fontWeight: 700,\r\n                          color: colours.cta,\r\n                          marginBottom: '2px'\r\n                        }}>\r\n                          {formatCurrency(ad.metrics.spend)}\r\n                        </div>\r\n                        <div style={{ \r\n                          fontSize: '11px',\r\n                          color: isDarkMode ? colours.dark.subText : colours.light.subText\r\n                        }}>\r\n                          Spend\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Reach & Impressions */}\r\n                      <div style={{ textAlign: 'center' }}>\r\n                        <div style={{ \r\n                          fontSize: '16px',\r\n                          fontWeight: 600,\r\n                          color: colours.highlight,\r\n                          marginBottom: '2px'\r\n                        }}>\r\n                          {formatNumber(ad.metrics.reach)}\r\n                        </div>\r\n                        <div style={{ \r\n                          fontSize: '11px',\r\n                          color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n                          marginBottom: '4px'\r\n                        }}>\r\n                          Reach\r\n                        </div>\r\n                        <div style={{ \r\n                          fontSize: '12px',\r\n                          color: isDarkMode ? colours.dark.subText : colours.light.subText\r\n                        }}>\r\n                          {formatNumber(ad.metrics.impressions)} imp\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Clicks & CTR */}\r\n                      <div style={{ textAlign: 'center' }}>\r\n                        <div style={{ \r\n                          fontSize: '16px',\r\n                          fontWeight: 600,\r\n                          color: colours.highlight,\r\n                          marginBottom: '2px'\r\n                        }}>\r\n                          {formatNumber(ad.metrics.clicks)}\r\n                        </div>\r\n                        <div style={{ \r\n                          fontSize: '11px',\r\n                          color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n                          marginBottom: '4px'\r\n                        }}>\r\n                          Clicks\r\n                        </div>\r\n                        <div style={{ \r\n                          fontSize: '12px',\r\n                          color: colours.accent\r\n                        }}>\r\n                          {formatPercent(ad.metrics.ctr)} CTR\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Conversions & CPA */}\r\n                      <div style={{ textAlign: 'center' }}>\r\n                        <div style={{ \r\n                          fontSize: '16px',\r\n                          fontWeight: 600,\r\n                          color: colours.accent,\r\n                          marginBottom: '2px'\r\n                        }}>\r\n                          {ad.metrics.conversions}\r\n                        </div>\r\n                        <div style={{ \r\n                          fontSize: '11px',\r\n                          color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n                          marginBottom: '4px'\r\n                        }}>\r\n                          Conversions\r\n                        </div>\r\n                        <div style={{ \r\n                          fontSize: '12px',\r\n                          color: colours.cta\r\n                        }}>\r\n                          {ad.metrics.costPerConversion > 0 ? formatCurrency(ad.metrics.costPerConversion) : '—'} CPA\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n\r\n                {adData.length > 10 && (\r\n                  <div style={{\r\n                    textAlign: 'center',\r\n                    padding: '12px',\r\n                    fontSize: '12px',\r\n                    color: isDarkMode ? colours.dark.subText : colours.light.subText\r\n                  }}>\r\n                    Showing top 10 of {adData.length} ads\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ) : !isLoadingAds ? (\r\n              <div style={{ \r\n                textAlign: 'center',\r\n                padding: '40px',\r\n                backgroundColor: isDarkMode ? 'rgba(15, 23, 42, 0.3)' : 'rgba(248, 250, 252, 0.6)',\r\n                borderRadius: '8px',\r\n                border: `1px dashed ${isDarkMode ? 'rgba(148, 163, 184, 0.2)' : 'rgba(13, 47, 96, 0.15)'}`,\r\n              }}>\r\n                <FontIcon \r\n                  iconName=\"Target\" \r\n                  style={{ \r\n                    fontSize: '32px', \r\n                    color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n                    marginBottom: '12px' \r\n                  }} \r\n                />\r\n                <p style={{ \r\n                  color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n                  margin: 0,\r\n                  fontSize: '14px'\r\n                }}>\r\n                  No individual ad data available for the selected period.\r\n                </p>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MetaMetricsReport;","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { Spinner, SpinnerSize } from '@fluentui/react';\r\nimport { colours } from '../../app/styles/colours';\r\n\r\ninterface Ga4Row {\r\n  date: string; // YYYYMMDD\r\n  sessions?: number;\r\n  activeUsers?: number;\r\n  screenPageViews?: number;\r\n  bounceRate?: number;\r\n  averageSessionDuration?: number;\r\n  conversions?: number;\r\n}\r\n\r\ninterface SeriesPoint {\r\n  x: string; // YYYY-MM-DD\r\n  y: number;\r\n}\r\n\r\nconst cardStyle = (isDark: boolean): React.CSSProperties => ({\r\n  background: isDark ? 'rgba(15, 23, 42, 0.88)' : '#fff',\r\n  border: `1px solid ${isDark ? 'rgba(148, 163, 184, 0.24)' : 'rgba(15, 23, 42, 0.06)'}`,\r\n  borderRadius: 12,\r\n  padding: 16,\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  gap: 8,\r\n});\r\n\r\nconst SectionTitle: React.FC<{ children: React.ReactNode }> = ({ children }) => (\r\n  <h2 style={{ margin: 0, fontSize: 16, fontWeight: 600, fontFamily: 'Raleway, sans-serif' }}>{children}</h2>\r\n);\r\n\r\nfunction fmtDate(d: string): string {\r\n  if (!d || d.length !== 8) return d;\r\n  return `${d.slice(0,4)}-${d.slice(4,6)}-${d.slice(6)}`;\r\n}\r\n\r\nfunction toSeries(rows: Ga4Row[] | undefined, key: keyof Ga4Row): SeriesPoint[] {\r\n  if (!rows) return [];\r\n  return rows.map(r => ({ x: fmtDate(r.date), y: Number(r[key] ?? 0) }));\r\n}\r\n\r\nconst SeoReport: React.FC = () => {\r\n  const [isDark, setIsDark] = useState<boolean>(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [rows, setRows] = useState<Ga4Row[]>([]);\r\n\r\n  useEffect(() => {\r\n    setIsDark(window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        // Request GA4 data (organicOnly where possible) for last 30 days\r\n        const resp = await fetch('/api/marketing-metrics/ga4?daysBack=30&organicOnly=true');\r\n        if (!resp.ok) throw new Error(`${resp.status} ${resp.statusText}`);\r\n        const payload = await resp.json();\r\n        const rowsArray = Array.isArray(payload?.data) ? payload.data : Array.isArray(payload) ? payload : [];\r\n        const mapped: Ga4Row[] = rowsArray.map((d: any) => ({\r\n          date: d.date || d.googleAnalytics?.date,\r\n          sessions: d.googleAnalytics?.sessions,\r\n          activeUsers: d.googleAnalytics?.activeUsers,\r\n          screenPageViews: d.googleAnalytics?.screenPageViews,\r\n          bounceRate: d.googleAnalytics?.bounceRate,\r\n          averageSessionDuration: d.googleAnalytics?.averageSessionDuration,\r\n          conversions: d.googleAnalytics?.conversions,\r\n        }));\r\n        setRows(mapped);\r\n      } catch (e: any) {\r\n        setError(e?.message || 'Failed to load GA4 data');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const sessions = useMemo(() => toSeries(rows, 'sessions'), [rows]);\r\n  const users = useMemo(() => toSeries(rows, 'activeUsers'), [rows]);\r\n  const conversions = useMemo(() => toSeries(rows, 'conversions'), [rows]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div style={{ padding: 24 }}>\r\n        <Spinner size={SpinnerSize.medium} label=\"Loading SEO metrics…\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div style={{ padding: 16, color: isDark ? '#fecaca' : '#991b1b', background: isDark ? 'rgba(248,113,113,0.18)' : 'rgba(248,113,113,0.12)', borderRadius: 10 }}>\r\n        {error}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const statCard = (label: string, value: string) => (\r\n    <div style={cardStyle(isDark)}>\r\n      <span style={{ fontSize: 12, color: isDark ? '#E2E8F0' : colours.missedBlue, fontWeight: 600 }}>{label}</span>\r\n      <span style={{ fontSize: 22, fontWeight: 700 }}>{value}</span>\r\n    </div>\r\n  );\r\n\r\n  const last = rows[rows.length - 1];\r\n  const totalSessions = rows.reduce((acc, r) => acc + (r.sessions || 0), 0);\r\n  const totalUsers = rows.reduce((acc, r) => acc + (r.activeUsers || 0), 0);\r\n  const totalConversions = rows.reduce((acc, r) => acc + (r.conversions || 0), 0);\r\n\r\n  return (\r\n    <div style={{ minHeight: '100vh', padding: '24px 28px', display: 'flex', flexDirection: 'column', gap: 16 }}>\r\n      <SectionTitle>SEO report (GA4)</SectionTitle>\r\n\r\n      <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', gap: 12 }}>\r\n        {statCard('30‑day sessions', totalSessions.toLocaleString())}\r\n        {statCard('30‑day users', totalUsers.toLocaleString())}\r\n        {statCard('30‑day conversions', totalConversions.toLocaleString())}\r\n        {statCard('Latest day', last ? fmtDate(last.date) : '—')}\r\n      </div>\r\n\r\n      <div style={cardStyle(isDark)}>\r\n        <span style={{ fontSize: 13, fontWeight: 600, marginBottom: 6 }}>Daily sessions (last 30 days)</span>\r\n        <pre style={{ margin: 0, overflowX: 'auto', fontSize: 12 }}>\r\n          {JSON.stringify(sessions.slice(-30), null, 2)}\r\n        </pre>\r\n      </div>\r\n\r\n      <div style={cardStyle(isDark)}>\r\n        <span style={{ fontSize: 13, fontWeight: 600, marginBottom: 6 }}>Daily users (last 30 days)</span>\r\n        <pre style={{ margin: 0, overflowX: 'auto', fontSize: 12 }}>\r\n          {JSON.stringify(users.slice(-30), null, 2)}\r\n        </pre>\r\n      </div>\r\n\r\n      <div style={cardStyle(isDark)}>\r\n        <span style={{ fontSize: 13, fontWeight: 600, marginBottom: 6 }}>Daily conversions (last 30 days)</span>\r\n        <pre style={{ margin: 0, overflowX: 'auto', fontSize: 12 }}>\r\n          {JSON.stringify(conversions.slice(-30), null, 2)}\r\n        </pre>\r\n      </div>\r\n\r\n      <div style={{ opacity: 0.7, fontSize: 12 }}>\r\n        Notes: Using GA4 daily metrics. We can narrow to organic search via dimension filters in the backend later (e.g., defaultChannelGroup = Organic Search).\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SeoReport;\r\n","import React, { useState } from 'react';\r\nimport type { CSSProperties } from 'react';\r\nimport { colours } from '../../app/styles/colours';\r\nimport { WIP } from './ManagementDashboard';\r\nimport { Icon, Text, DefaultButton, type IButtonStyles } from '@fluentui/react';\r\nimport { useTheme } from '../../app/functionality/ThemeContext';\r\nimport { Enquiry, Matter } from '../../app/functionality/types';\r\nimport './HomePreview.css';\r\n\r\ninterface RecoveredFee {\r\n  payment_date: string;\r\n  payment_allocated: number;\r\n}\r\n\r\ninterface HomePreviewProps {\r\n  enquiries: Enquiry[] | null;\r\n  allMatters: Matter[] | null;\r\n  wip: WIP[] | null | undefined;\r\n  recoveredFees: RecoveredFee[] | null;\r\n}\r\n\r\ntype RangeKey = 'today' | 'thisWeek' | 'thisMonth' | 'all';\r\n\r\nconst baseShadow = (isDarkMode: boolean): string => (\r\n  isDarkMode ? '0 2px 8px rgba(0, 0, 0, 0.24)' : '0 2px 6px rgba(15, 23, 42, 0.08)'\r\n);\r\n\r\nconst softBorder = (isDarkMode: boolean): string => (\r\n  isDarkMode ? 'rgba(148, 163, 184, 0.28)' : 'rgba(15, 23, 42, 0.08)'\r\n);\r\n\r\nconst sectionContainerStyle = (isDarkMode: boolean): CSSProperties => ({\r\n  background: isDarkMode ? 'rgba(15, 23, 42, 0.86)' : '#FFFFFF',\r\n  borderRadius: 14,\r\n  border: `1px solid ${softBorder(isDarkMode)}`,\r\n  boxShadow: baseShadow(isDarkMode),\r\n  padding: '22px 24px',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  gap: 18,\r\n  fontFamily: 'Raleway, sans-serif',\r\n});\r\n\r\nconst headerRowStyle = (isDarkMode: boolean): CSSProperties => ({\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  gap: 16,\r\n  flexWrap: 'wrap',\r\n  alignItems: 'center',\r\n  color: isDarkMode ? colours.light.text : colours.dark.text,\r\n  fontFamily: 'Raleway, sans-serif',\r\n});\r\n\r\nconst headerTitleStyle = (isDarkMode: boolean): CSSProperties => ({\r\n  fontSize: 20,\r\n  fontWeight: 700,\r\n  margin: 0,\r\n  color: isDarkMode ? colours.light.text : colours.dark.text,\r\n  fontFamily: 'Raleway, sans-serif',\r\n});\r\n\r\nconst rangeButtonsRowStyle: CSSProperties = {\r\n  display: 'flex',\r\n  gap: 10,\r\n  flexWrap: 'wrap',\r\n};\r\n\r\nconst rangeButtonStyles = (isDarkMode: boolean, isActive: boolean): IButtonStyles => ({\r\n  root: {\r\n    borderRadius: 999,\r\n    padding: '0 14px',\r\n    height: 32,\r\n    background: isActive\r\n      ? colours.highlight\r\n      : isDarkMode\r\n        ? 'rgba(148, 163, 184, 0.18)'\r\n        : 'rgba(54, 144, 206, 0.12)',\r\n    color: isActive ? '#FFFFFF' : isDarkMode ? '#E2E8F0' : colours.missedBlue,\r\n    border: isActive\r\n      ? '1px solid rgba(13, 47, 96, 0.42)'\r\n      : `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.28)' : 'rgba(13, 47, 96, 0.18)'}`,\r\n    fontWeight: 600,\r\n    boxShadow: 'none',\r\n    transition: 'background 0.2s ease',\r\n    fontFamily: 'Raleway, sans-serif',\r\n  },\r\n  rootHovered: {\r\n    background: isActive\r\n      ? '#2f7cb3'\r\n      : isDarkMode\r\n        ? 'rgba(148, 163, 184, 0.24)'\r\n        : 'rgba(54, 144, 206, 0.18)',\r\n  },\r\n  rootPressed: {\r\n    background: isActive\r\n      ? '#266795'\r\n      : isDarkMode\r\n        ? 'rgba(148, 163, 184, 0.3)'\r\n        : 'rgba(54, 144, 206, 0.24)',\r\n  },\r\n});\r\n\r\nconst metricsGridStyle: CSSProperties = {\r\n  display: 'grid',\r\n  gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\r\n  gap: 16,\r\n  width: '100%',\r\n};\r\n\r\nconst metricCardStyle = (isDarkMode: boolean): CSSProperties => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  padding: '16px 14px',\r\n  borderRadius: 12,\r\n  border: `1px solid ${softBorder(isDarkMode)}`,\r\n  background: isDarkMode ? 'rgba(15, 23, 42, 0.7)' : 'rgba(248, 250, 252, 0.92)',\r\n  boxShadow: 'none',\r\n  gap: 12,\r\n});\r\n\r\nconst iconStyle = (isDarkMode: boolean): CSSProperties => ({\r\n  fontSize: 32,\r\n  color: isDarkMode ? colours.highlight : colours.highlight,\r\n});\r\n\r\nconst cardContentStyle: CSSProperties = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'flex-start',\r\n  gap: 4,\r\n};\r\n\r\nconst HomePreview: React.FC<HomePreviewProps> = ({ enquiries, allMatters, wip, recoveredFees }) => {\r\n  const { isDarkMode } = useTheme();\r\n  const [selectedRange, setSelectedRange] = useState<RangeKey>('all');\r\n\r\n  const parseAndFormatDate = (dateStr: string | undefined): string => {\r\n    if (!dateStr) return 'N/A';\r\n    const parts = dateStr.includes('/') ? dateStr.split('/') : dateStr.split('-');\r\n    let date: Date;\r\n    if (parts.length === 3 && dateStr.includes('/')) {\r\n      date = new Date(`${parts[2]}-${parts[1]}-${parts[0]}`); // DD/MM/YYYY -> YYYY-MM-DD\r\n    } else {\r\n      date = new Date(dateStr);\r\n    }\r\n    if (isNaN(date.getTime())) return 'N/A';\r\n    return date.toLocaleDateString('en-GB', { day: '2-digit', month: '2-digit', year: 'numeric' });\r\n  };\r\n\r\n  const formatCurrency = (amount: number): string => {\r\n    if (amount < 10000) {\r\n      return `£${amount.toLocaleString('en-GB', { minimumFractionDigits: 0, maximumFractionDigits: 0 })}`;\r\n    } else if (amount < 1000000) {\r\n      return `£${(amount / 1000).toFixed(1)}k`;\r\n    } else if (amount < 1000000000) {\r\n      return `£${(amount / 1000000).toFixed(2)}m`;\r\n    } else {\r\n      return `£${(amount / 1000000000).toFixed(2)}b`;\r\n    }\r\n  };\r\n\r\n  const formatHours = (hours: number): string => {\r\n    const whole = Math.floor(hours);\r\n    const fraction = hours - whole;\r\n    const minutes = Math.round(fraction * 60);\r\n    return `${whole}h ${minutes}m`;\r\n  };\r\n\r\n  const getDateRange = () => {\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    let startDate: Date;\r\n\r\n    switch (selectedRange) {\r\n      case 'today':\r\n        startDate = new Date(today);\r\n        break;\r\n      case 'thisWeek':\r\n        startDate = new Date(today);\r\n        startDate.setDate(today.getDate() - today.getDay() + (today.getDay() === 0 ? -6 : 1));\r\n        startDate.setHours(0, 0, 0, 0);\r\n        break;\r\n      case 'thisMonth':\r\n        startDate = new Date(today.getFullYear(), today.getMonth(), 1);\r\n        break;\r\n      case 'all':\r\n      default:\r\n        startDate = new Date(0);\r\n        break;\r\n    }\r\n    return { startDate, endDate: today };\r\n  };\r\n\r\n  const { startDate, endDate } = getDateRange();\r\n\r\n  const filteredEnquiries = enquiries?.filter(e => {\r\n    const date = new Date(e.Touchpoint_Date);\r\n    return date >= startDate && date <= endDate;\r\n  }) || [];\r\n  const enquiriesCount = filteredEnquiries.length;\r\n  const enquiriesRange = filteredEnquiries.length\r\n    ? `${parseAndFormatDate(filteredEnquiries.reduce((min, e) => new Date(e.Touchpoint_Date) < new Date(min.Touchpoint_Date) ? e : min, filteredEnquiries[0]).Touchpoint_Date)} - ${parseAndFormatDate(filteredEnquiries.reduce((max, e) => new Date(e.Touchpoint_Date) > new Date(max.Touchpoint_Date) ? e : max, filteredEnquiries[0]).Touchpoint_Date)}`\r\n    : 'N/A';\r\n\r\n  const filteredMatters = allMatters?.filter(m => {\r\n    const date = new Date((m as any)[\"Open Date\"] || m.OpenDate);\r\n    return date >= startDate && date <= endDate;\r\n  }) || [];\r\n  const mattersCount = filteredMatters.length;\r\n  const mattersRange = filteredMatters.length\r\n    ? `${parseAndFormatDate((filteredMatters.reduce((min, m) => new Date((m as any)[\"Open Date\"] || m.OpenDate) < new Date((min as any)[\"Open Date\"] || min.OpenDate) ? m : min, filteredMatters[0]) as any)[\"Open Date\"] || filteredMatters[0].OpenDate)} - ${parseAndFormatDate((filteredMatters.reduce((max, m) => new Date((m as any)[\"Open Date\"] || m.OpenDate) > new Date((max as any)[\"Open Date\"] || max.OpenDate) ? m : max, filteredMatters[0]) as any)[\"Open Date\"] || filteredMatters[0].OpenDate)}`\r\n    : 'N/A';\r\n\r\n  const filteredWip = wip?.filter(w => {\r\n    const date = new Date(w.created_at);\r\n    return date >= startDate && date <= endDate;\r\n  }) || [];\r\n  const wipTotalPounds = filteredWip.reduce((sum, w) => sum + (w.total || 0), 0) || 0;\r\n  const wipTotalHours = filteredWip.reduce((sum, w) => sum + (w.quantity_in_hours || 0), 0) || 0;\r\n  const wipRange = filteredWip.length\r\n    ? `${parseAndFormatDate(filteredWip.reduce((min, w) => new Date(w.created_at) < new Date(min.created_at) ? w : min, filteredWip[0]).created_at)} - ${parseAndFormatDate(filteredWip.reduce((max, w) => new Date(w.created_at) > new Date(max.created_at) ? w : max, filteredWip[0]).created_at)}`\r\n    : 'N/A';\r\n\r\n  const filteredRecoveredFees = recoveredFees?.filter(r => {\r\n    const date = new Date(r.payment_date);\r\n    return date >= startDate && date <= endDate;\r\n  }) || [];\r\n  const collectedTotal = filteredRecoveredFees.reduce((sum, r) => sum + r.payment_allocated, 0) || 0;\r\n  const collectedRange = filteredRecoveredFees.length\r\n    ? `${parseAndFormatDate(filteredRecoveredFees.reduce((min, r) => new Date(r.payment_date) < new Date(min.payment_date) ? r : min, filteredRecoveredFees[0]).payment_date)} - ${parseAndFormatDate(filteredRecoveredFees.reduce((max, r) => new Date(r.payment_date) > new Date(max.payment_date) ? r : max, filteredRecoveredFees[0]).payment_date)}`\r\n    : 'N/A';\r\n\r\n  const metricCards = [\r\n    { icon: 'People', title: 'Total Enquiries', value: enquiriesCount.toLocaleString(), range: enquiriesRange },\r\n    { icon: 'Folder', title: 'Total Matters', value: mattersCount.toLocaleString(), range: mattersRange },\r\n    { icon: 'Clock', title: 'WIP (h)', value: formatHours(wipTotalHours), range: wipRange },\r\n    { icon: 'Clock', title: 'WIP (£)', value: formatCurrency(wipTotalPounds), range: wipRange },\r\n    { icon: 'Money', title: 'Collected', value: formatCurrency(collectedTotal), range: collectedRange },\r\n  ];\r\n\r\n  const rangeOptions: Array<{ key: RangeKey; label: string }> = [\r\n    { key: 'today', label: 'Today' },\r\n    { key: 'thisWeek', label: 'This Week' },\r\n    { key: 'thisMonth', label: 'This Month' },\r\n    { key: 'all', label: 'All Time' },\r\n  ];\r\n\r\n  return (\r\n    <section\r\n      className=\"home-preview-section\"\r\n      style={sectionContainerStyle(isDarkMode)}\r\n    >\r\n      <div style={headerRowStyle(isDarkMode)}>\r\n        <h2 style={headerTitleStyle(isDarkMode)}>Key Insights</h2>\r\n        <div style={rangeButtonsRowStyle}>\r\n          {rangeOptions.map((option) => (\r\n            <DefaultButton\r\n              key={option.key}\r\n              text={option.label}\r\n              onClick={() => setSelectedRange(option.key)}\r\n              styles={rangeButtonStyles(isDarkMode, selectedRange === option.key)}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div style={metricsGridStyle}>\r\n        {metricCards.map((card) => (\r\n          <div key={card.title} className=\"metric-card\" style={metricCardStyle(isDarkMode)}>\r\n            <div style={{ display: 'flex', alignItems: 'center', gap: 12 }}>\r\n              <Icon iconName={card.icon} style={iconStyle(isDarkMode)} />\r\n              <div style={cardContentStyle}>\r\n                <Text\r\n                  variant=\"large\"\r\n                  styles={{ root: { fontWeight: 600, color: isDarkMode ? '#E2E8F0' : colours.dark.text, fontFamily: 'Raleway, sans-serif' } }}\r\n                >\r\n                  {card.title}\r\n                </Text>\r\n                <Text\r\n                  variant=\"xxLarge\"\r\n                  styles={{ root: { fontWeight: 800, color: isDarkMode ? '#FFFFFF' : '#0F172A', fontFamily: 'Raleway, sans-serif' } }}\r\n                >\r\n                  {card.value}\r\n                </Text>\r\n                <Text\r\n                  variant=\"small\"\r\n                  styles={{ root: { color: isDarkMode ? 'rgba(226, 232, 240, 0.7)' : colours.greyText, fontFamily: 'Raleway, sans-serif' } }}\r\n                >\r\n                  {card.range}\r\n                </Text>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default HomePreview;","/**\r\n * Cross-reference utilities for matching enquiries between old (helix-core-data) \r\n * and new (instructions) database systems during migration transition.\r\n */\r\n\r\nexport interface OldEnquiry {\r\n  ID: string;\r\n  Date_Created: string;\r\n  Email: string;\r\n  First_Name: string;\r\n  Last_Name: string;\r\n  Company?: string;\r\n  Point_of_Contact: string;\r\n  Matter_Ref?: string;\r\n  // Additional fields as needed\r\n}\r\n\r\nexport interface NewEnquiry {\r\n  id: number;\r\n  datetime: string;\r\n  first: string;\r\n  last: string;\r\n  email: string;\r\n  poc: string;\r\n  stage?: string;\r\n  claim?: string;\r\n  // Additional fields as needed\r\n}\r\n\r\nexport interface CrossReferenceMatch {\r\n  oldId: string;\r\n  newId?: number;\r\n  matchType: 'exact' | 'partial' | 'none';\r\n  matchScore: number;\r\n  matchReasons: string[];\r\n  migrationStatus: 'migrated' | 'partial' | 'not-migrated' | 'sync-pending';\r\n}\r\n\r\n/**\r\n * Compare two strings with fuzzy matching for names/emails\r\n */\r\nfunction fuzzyMatch(str1: string, str2: string, threshold = 0.8): boolean {\r\n  if (!str1 || !str2) return false;\r\n  \r\n  const s1 = str1.toLowerCase().trim();\r\n  const s2 = str2.toLowerCase().trim();\r\n  \r\n  if (s1 === s2) return true;\r\n  \r\n  // Simple similarity check - could be enhanced with Levenshtein distance\r\n  const longer = s1.length > s2.length ? s1 : s2;\r\n  const shorter = s1.length > s2.length ? s2 : s1;\r\n  \r\n  const editDistance = levenshteinDistance(longer, shorter);\r\n  const similarity = (longer.length - editDistance) / longer.length;\r\n  \r\n  return similarity >= threshold;\r\n}\r\n\r\nfunction levenshteinDistance(str1: string, str2: string): number {\r\n  const matrix = [];\r\n  \r\n  for (let i = 0; i <= str2.length; i++) {\r\n    matrix[i] = [i];\r\n  }\r\n  \r\n  for (let j = 0; j <= str1.length; j++) {\r\n    matrix[0][j] = j;\r\n  }\r\n  \r\n  for (let i = 1; i <= str2.length; i++) {\r\n    for (let j = 1; j <= str1.length; j++) {\r\n      if (str2.charAt(i - 1) === str1.charAt(j - 1)) {\r\n        matrix[i][j] = matrix[i - 1][j - 1];\r\n      } else {\r\n        matrix[i][j] = Math.min(\r\n          matrix[i - 1][j - 1] + 1,\r\n          matrix[i][j - 1] + 1,\r\n          matrix[i - 1][j] + 1\r\n        );\r\n      }\r\n    }\r\n  }\r\n  \r\n  return matrix[str2.length][str1.length];\r\n}\r\n\r\n/**\r\n * Parse date strings to Date objects for comparison\r\n */\r\nfunction parseDate(dateStr: string): Date | null {\r\n  if (!dateStr) return null;\r\n  try {\r\n    return new Date(dateStr);\r\n  } catch {\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Check if two dates are within a reasonable range (same day or close)\r\n */\r\nfunction datesMatch(date1: string, date2: string, daysTolerance = 1): boolean {\r\n  const d1 = parseDate(date1);\r\n  const d2 = parseDate(date2);\r\n  \r\n  if (!d1 || !d2) return false;\r\n  \r\n  const diffTime = Math.abs(d1.getTime() - d2.getTime());\r\n  const diffDays = diffTime / (1000 * 60 * 60 * 24);\r\n  \r\n  return diffDays <= daysTolerance;\r\n}\r\n\r\n/**\r\n * Find potential matches for an old enquiry in the new system\r\n */\r\nexport function findMatches(oldEnquiry: OldEnquiry, newEnquiries: NewEnquiry[]): CrossReferenceMatch {\r\n  const matches = newEnquiries.map(newEnq => {\r\n    const matchReasons: string[] = [];\r\n    let score = 0;\r\n    \r\n    // Email match (highest priority)\r\n    if (oldEnquiry.Email && newEnq.email && \r\n        oldEnquiry.Email.toLowerCase().trim() === newEnq.email.toLowerCase().trim()) {\r\n      score += 50;\r\n      matchReasons.push('Exact email match');\r\n    }\r\n    \r\n    // Name match\r\n    const oldFullName = `${oldEnquiry.First_Name || ''} ${oldEnquiry.Last_Name || ''}`.trim();\r\n    const newFullName = `${newEnq.first || ''} ${newEnq.last || ''}`.trim();\r\n    \r\n    if (oldFullName && newFullName) {\r\n      if (fuzzyMatch(oldFullName, newFullName, 0.9)) {\r\n        score += 30;\r\n        matchReasons.push('Name match');\r\n      } else if (fuzzyMatch(oldEnquiry.First_Name || '', newEnq.first || '', 0.8) ||\r\n                 fuzzyMatch(oldEnquiry.Last_Name || '', newEnq.last || '', 0.8)) {\r\n        score += 15;\r\n        matchReasons.push('Partial name match');\r\n      }\r\n    }\r\n    \r\n    // Date proximity\r\n    if (datesMatch(oldEnquiry.Date_Created, newEnq.datetime, 2)) {\r\n      score += 20;\r\n      matchReasons.push('Date proximity');\r\n    }\r\n    \r\n    // POC match (if available)\r\n    if (oldEnquiry.Point_of_Contact && newEnq.poc &&\r\n        oldEnquiry.Point_of_Contact.toLowerCase().trim() === newEnq.poc.toLowerCase().trim()) {\r\n      score += 10;\r\n      matchReasons.push('POC match');\r\n    }\r\n    \r\n    return {\r\n      newId: newEnq.id,\r\n      score,\r\n      matchReasons,\r\n      newEnquiry: newEnq\r\n    };\r\n  });\r\n  \r\n  // Find best match\r\n  const bestMatch = matches.length > 0 \r\n    ? matches.reduce((best, current) => current.score > best.score ? current : best)\r\n    : { newId: undefined as number | undefined, score: 0, matchReasons: [] as string[], newEnquiry: null as NewEnquiry | null };\r\n  \r\n  let matchType: 'exact' | 'partial' | 'none';\r\n  let migrationStatus: 'migrated' | 'partial' | 'not-migrated' | 'sync-pending';\r\n  \r\n  if (bestMatch.score >= 70) {\r\n    matchType = 'exact';\r\n    migrationStatus = 'migrated';\r\n  } else if (bestMatch.score >= 30) {\r\n    matchType = 'partial';\r\n    migrationStatus = 'partial';\r\n  } else {\r\n    matchType = 'none';\r\n    migrationStatus = 'not-migrated';\r\n  }\r\n  \r\n  return {\r\n    oldId: oldEnquiry.ID,\r\n    newId: bestMatch.newId,\r\n    matchType,\r\n    matchScore: bestMatch.score,\r\n    matchReasons: bestMatch.matchReasons,\r\n    migrationStatus\r\n  };\r\n}\r\n\r\n/**\r\n * Batch cross-reference all old enquiries against new ones\r\n */\r\nexport function crossReferenceEnquiries(\r\n  oldEnquiries: OldEnquiry[], \r\n  newEnquiries: NewEnquiry[]\r\n): CrossReferenceMatch[] {\r\n  return oldEnquiries.map(oldEnq => findMatches(oldEnq, newEnquiries));\r\n}\r\n\r\n/**\r\n * Get migration statistics\r\n */\r\nexport function getMigrationStats(matches: CrossReferenceMatch[]) {\r\n  const stats = {\r\n    total: matches.length,\r\n    migrated: 0,\r\n    partial: 0,\r\n    notMigrated: 0,\r\n    syncPending: 0\r\n  };\r\n  \r\n  matches.forEach(match => {\r\n    switch (match.migrationStatus) {\r\n      case 'migrated':\r\n        stats.migrated++;\r\n        break;\r\n      case 'partial':\r\n        stats.partial++;\r\n        break;\r\n      case 'not-migrated':\r\n        stats.notMigrated++;\r\n        break;\r\n      case 'sync-pending':\r\n        stats.syncPending++;\r\n        break;\r\n    }\r\n  });\r\n  \r\n  return {\r\n    ...stats,\r\n    migrationRate: (stats.migrated / stats.total * 100).toFixed(1),\r\n    completionRate: ((stats.migrated + stats.partial) / stats.total * 100).toFixed(1)\r\n  };\r\n}\r\n\r\n/**\r\n * Status indicators for UI display\r\n */\r\nexport function getStatusIndicator(match: CrossReferenceMatch) {\r\n  switch (match.migrationStatus) {\r\n    case 'migrated':\r\n      return { icon: '✅', label: 'Migrated', color: '#22c55e' };\r\n    case 'partial':\r\n      return { icon: '⚠️', label: 'Partial', color: '#f59e0b' };\r\n    case 'not-migrated':\r\n      return { icon: '❌', label: 'Not Migrated', color: '#ef4444' };\r\n    case 'sync-pending':\r\n      return { icon: '🔄', label: 'Sync Pending', color: '#3b82f6' };\r\n    default:\r\n      return { icon: '❓', label: 'Unknown', color: '#6b7280' };\r\n  }\r\n}","import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport {\r\n  DatePicker,\r\n  DayOfWeek,\r\n  DefaultButton,\r\n  Icon,\r\n  type IButtonStyles,\r\n  type IDatePickerStyles,\r\n  MessageBar,\r\n  MessageBarType,\r\n  Dialog,\r\n  DialogType,\r\n  DialogFooter,\r\n  PrimaryButton,\r\n  TextField,\r\n} from '@fluentui/react';\r\nimport {\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  Legend,\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  ReferenceArea,\r\n} from 'recharts';\r\nimport { useTheme } from '../../app/functionality/ThemeContext';\r\nimport type { Enquiry, TeamData } from '../../app/functionality/types';\r\nimport { colours } from '../../app/styles/colours';\r\nimport './ManagementDashboard.css';\r\nimport { getNormalizedEnquirySourceLabel, getNormalizedEnquiryMOCLabel } from '../../utils/enquirySource';\r\nimport { findMatches, type OldEnquiry, type NewEnquiry } from '../../utils/enquiryCrossReference';\r\nimport type { AnnualLeaveRecord } from './AnnualLeaveReport';\r\n\r\n// Marketing Metrics Interfaces\r\ninterface GoogleAnalyticsMetrics {\r\n  date: string;\r\n  sessions: number;\r\n  users: number;\r\n  pageviews: number;\r\n  bounceRate: number;\r\n  avgSessionDuration: number;\r\n  conversions: number;\r\n  conversionRate: number;\r\n  organicTraffic: number;\r\n  paidTraffic: number;\r\n}\r\n\r\ninterface GoogleAdsMetrics {\r\n  date: string;\r\n  impressions: number;\r\n  clicks: number;\r\n  cost: number;\r\n  conversions: number;\r\n  ctr: number; // Click-through rate\r\n  cpc: number; // Cost per click\r\n  cpa: number; // Cost per acquisition\r\n  qualityScore: number;\r\n}\r\n\r\ninterface MetaAdsMetrics {\r\n  date: string;\r\n  reach: number;\r\n  impressions: number;\r\n  clicks: number;\r\n  spend: number;\r\n  conversions: number;\r\n  ctr: number;\r\n  cpm: number; // Cost per mille\r\n  cpc: number; // Cost per click\r\n  frequency: number;\r\n}\r\n\r\ninterface MarketingMetrics {\r\n  date: string;\r\n  googleAnalytics?: GoogleAnalyticsMetrics;\r\n  googleAds?: GoogleAdsMetrics;\r\n  metaAds?: MetaAdsMetrics;\r\n}\r\n\r\ninterface EnquiriesReportProps {\r\n  enquiries: Enquiry[] | null;\r\n  teamData?: TeamData[] | null;\r\n  annualLeave?: AnnualLeaveRecord[] | null;\r\n  metaMetrics?: MarketingMetrics[] | null;\r\n  triggerRefresh?: () => void;\r\n  lastRefreshTimestamp?: number;\r\n  isFetching?: boolean;\r\n}\r\n\r\nconst EMPTY_DAY_FILTER = { name: '', poc: '', taker: '', status: '' } as const;\r\n\r\ntype RangeKey =\r\n  | 'all'\r\n  | 'today'\r\n  | 'yesterday'\r\n  | 'week'\r\n  | 'lastWeek'\r\n  | 'month'\r\n  | 'lastMonth'\r\n  | 'last90Days'\r\n  | 'quarter'\r\n  | 'yearToDate'\r\n  | 'year'\r\n  | 'custom';\r\n\r\nconst RANGE_OPTIONS: Array<{ key: RangeKey; label: string }> = [\r\n  { key: 'today', label: 'Today' },\r\n  { key: 'yesterday', label: 'Yesterday' },\r\n  { key: 'week', label: 'This Week' },\r\n  { key: 'lastWeek', label: 'Last Week' },\r\n  { key: 'month', label: 'This Month' },\r\n  { key: 'lastMonth', label: 'Last Month' },\r\n  { key: 'last90Days', label: 'Last 90 Days' },\r\n  { key: 'quarter', label: 'This Quarter' },\r\n  { key: 'yearToDate', label: 'Year To Date' },\r\n  { key: 'year', label: 'Current Year' },\r\n];\r\n\r\nconst ROLE_OPTIONS = [\r\n  { key: 'Partner', label: 'Partner' },\r\n  { key: 'Associate Solicitor', label: 'Associate' },\r\n  { key: 'Solicitor', label: 'Solicitor' },\r\n  { key: 'Paralegal', label: 'Paralegal' },\r\n  { key: 'Ops', label: 'Ops' },\r\n  { key: 'Inactive', label: 'Inactive' },\r\n] as const;\r\n\r\ninterface TeamMember {\r\n  initials: string;\r\n  display: string;\r\n  role?: string;\r\n  isActive: boolean;\r\n  record: TeamData;\r\n  email?: string;\r\n  normalizedName: string;\r\n}\r\n\r\ninterface EnrichedEnquiry {\r\n  enquiry: Enquiry;\r\n  member?: TeamMember;\r\n}\r\n\r\nfunction parseDate(value: unknown): Date | null {\r\n  if (!value) return null;\r\n  const candidate = new Date(String(value));\r\n  return Number.isNaN(candidate.getTime()) ? null : candidate;\r\n}\r\n\r\nfunction getInitials(input: string): string {\r\n  const s = (input || '').trim();\r\n  if (!s) return '?';\r\n  let tokens: string[] = [];\r\n  if (s.includes('@')) {\r\n    const local = s.split('@')[0] || '';\r\n    tokens = local.split(/[^a-zA-Z]+/).filter(Boolean);\r\n  } else {\r\n    tokens = s.split(/\\s+/).filter(Boolean);\r\n  }\r\n  if (tokens.length === 0) return '?';\r\n  const first = tokens[0][0] || '';\r\n  const last = tokens.length > 1 ? tokens[tokens.length - 1][0] : tokens[0][1] || '';\r\n  const initials = (first + last).toUpperCase();\r\n  return initials || '?';\r\n}\r\n\r\nconst NAME_MAP: Record<string, string> = {\r\n  'Samuel Packwood': 'Sam Packwood',\r\n  'Bianca ODonnell': \"Bianca O'Donnell\",\r\n};\r\n\r\n// Helix brand-based color palette using actual brand colors\r\nconst PIE_COLORS = [\r\n  colours.blue,           // #3690CE - Primary brand blue\r\n  colours.darkBlue,       // #061733 - Dark brand blue\r\n  colours.websiteBlue,    // #000319 - Website blue\r\n  colours.missedBlue,     // #0d2f60 - Missed blue\r\n  colours.accent,         // #87F3F3 - Brand accent\r\n  colours.highlight,      // #3690CE - Highlight (same as blue)\r\n  colours.dark.subText,   // #3690CE - Sub text blue\r\n  colours.dark.highlight, // #3690CE - Dark mode highlight\r\n  colours.highlightBlue,  // #d6e8ff - Light highlight blue\r\n  colours.greyText,       // #6B6B6B - Professional gray\r\n  colours.subtleGrey,     // #A0A0A0 - Subtle gray\r\n  colours.dark.border,    // #374151 - Dark border\r\n  colours.dark.grey,      // #374151 - Dark gray\r\n  colours.light.border,   // #F4F4F6 - Light border\r\n  colours.dark.cardHover, // #374151 - Card hover\r\n];\r\n\r\ninterface PieChartData {\r\n  name: string;\r\n  value: number;\r\n  color: string;\r\n}\r\n\r\nconst CustomPieLabel = ({ \r\n  cx, cy, midAngle, innerRadius, outerRadius, name, percent, isDarkMode \r\n}: any) => {\r\n  if (percent < 0.05) return null; // Don't show labels for segments < 5%\r\n  \r\n  const RADIAN = Math.PI / 180;\r\n  const radius = outerRadius + 25; // Position labels outside the pie\r\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n  return (\r\n    <text \r\n      x={x} \r\n      y={y} \r\n      fill={isDarkMode ? colours.accent : colours.greyText}\r\n      textAnchor={x > cx ? 'start' : 'end'} \r\n      dominantBaseline=\"central\"\r\n      fontSize={10}\r\n      fontFamily=\"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\"\r\n      fontWeight={500}\r\n    >\r\n      {`${name} ${(percent * 100).toFixed(0)}%`}\r\n    </text>\r\n  );\r\n};\r\n\r\nconst PieChartComponent: React.FC<{\r\n  data: PieChartData[];\r\n  title: string;\r\n  isDarkMode: boolean;\r\n  type: 'source' | 'moc' | 'poc';\r\n  activeFilter?: string | null;\r\n  onSliceClick: (value: string) => void;\r\n}> = ({ data, title, isDarkMode, type, activeFilter, onSliceClick }) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [displayData, setDisplayData] = useState<PieChartData[]>([]);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const timer = setTimeout(() => {\r\n      setDisplayData(data);\r\n      setIsLoading(false);\r\n    }, 150); // Small delay for smooth transition\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [data]);\r\n\r\n  const handleSliceClick = (data: any, index: number) => {\r\n    if (data && data.name) {\r\n      onSliceClick(data.name);\r\n    }\r\n  };\r\n\r\n  if (data.length === 0) {\r\n    return (\r\n      <div style={{ \r\n        height: 220, \r\n        display: 'flex', \r\n        alignItems: 'center', \r\n        justifyContent: 'center', \r\n        opacity: 0.7,\r\n        color: isDarkMode ? colours.dark.text : colours.light.text,\r\n        transition: 'all 0.3s ease-in-out'\r\n      }}>\r\n        No data in range.\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ \r\n      position: 'relative',\r\n      height: 220,\r\n      transition: 'opacity 0.3s ease-in-out',\r\n      opacity: isLoading ? 0.5 : 1\r\n    }}>\r\n      {isLoading && (\r\n        <div style={{\r\n          position: 'absolute',\r\n          top: '50%',\r\n          left: '50%',\r\n          transform: 'translate(-50%, -50%)',\r\n          zIndex: 10,\r\n          color: isDarkMode ? colours.accent : colours.blue,\r\n          fontSize: '12px',\r\n          fontWeight: 500\r\n        }}>\r\n          Loading...\r\n        </div>\r\n      )}\r\n      <ResponsiveContainer width=\"100%\" height={220}>\r\n        <PieChart>\r\n          <Pie\r\n            data={displayData}\r\n            cx=\"50%\"\r\n            cy=\"50%\"\r\n            outerRadius={70}\r\n            fill=\"#8884d8\"\r\n            dataKey=\"value\"\r\n            label={(props) => <CustomPieLabel {...props} isDarkMode={isDarkMode} />}\r\n            labelLine={false}\r\n            stroke={isDarkMode ? '#1f2937' : '#ffffff'}\r\n            strokeWidth={1}\r\n            animationBegin={0}\r\n            animationDuration={800}\r\n            animationEasing=\"ease-out\"\r\n            onClick={handleSliceClick}\r\n            cursor=\"pointer\"\r\n          >\r\n            {displayData.map((entry, index) => (\r\n              <Cell \r\n                key={`cell-${index}`} \r\n                fill={entry.color}\r\n                stroke={activeFilter === entry.name ? (isDarkMode ? colours.accent : colours.highlight) : (isDarkMode ? '#1f2937' : '#ffffff')}\r\n                strokeWidth={activeFilter === entry.name ? 3 : 2}\r\n                style={{\r\n                  opacity: activeFilter && activeFilter !== entry.name ? 0.4 : 1,\r\n                  transition: 'all 0.3s ease-in-out',\r\n                  cursor: 'pointer'\r\n                }}\r\n              />\r\n            ))}\r\n          </Pie>\r\n          <Tooltip \r\n            contentStyle={{\r\n              backgroundColor: isDarkMode ? colours.dark.sectionBackground : colours.light.sectionBackground,\r\n              border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n              borderRadius: '8px',\r\n              color: isDarkMode ? colours.dark.text : colours.light.text,\r\n              boxShadow: isDarkMode ? '0 4px 12px rgba(0,0,0,0.3)' : '0 4px 12px rgba(0,0,0,0.1)',\r\n              fontSize: '12px',\r\n              fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\r\n              transition: 'all 0.2s ease-in-out'\r\n            }}\r\n            formatter={(value, name) => [value, name]}\r\n            labelStyle={{\r\n              color: isDarkMode ? colours.dark.text : colours.light.text\r\n            }}\r\n          />\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n      {activeFilter && (\r\n        <div style={{\r\n          position: 'absolute',\r\n          top: '5px',\r\n          right: '5px',\r\n          fontSize: '10px',\r\n          color: isDarkMode ? colours.accent : colours.highlight,\r\n          backgroundColor: isDarkMode ? 'rgba(135, 206, 255, 0.1)' : 'rgba(54, 144, 206, 0.1)',\r\n          padding: '2px 6px',\r\n          borderRadius: '4px',\r\n          border: `1px solid ${isDarkMode ? colours.accent : colours.highlight}`,\r\n          cursor: 'pointer'\r\n        }}\r\n        onClick={() => onSliceClick(activeFilter)}\r\n        title=\"Click to clear filter\">\r\n          Filtered: {activeFilter} ×\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst toStr = (v: unknown): string => (typeof v === 'string' ? v : v == null ? '' : String(v));\r\n\r\nconst normalizeName = (name?: string | null): string =>\r\n  typeof name === 'string' ? name.replace(/[^a-zA-Z]/g, '').toLowerCase() : '';\r\n\r\nconst mapNameIfNeeded = (name?: string | null): string => {\r\n  if (!name) return '';\r\n  return NAME_MAP[name] ?? name;\r\n};\r\n\r\nconst displayName = (record?: TeamData | null): string => {\r\n  if (!record) return 'Unknown';\r\n  return (\r\n    record['Nickname'] ||\r\n    record['Full Name'] ||\r\n    record['First'] ||\r\n    record['Last'] ||\r\n    record['Initials'] ||\r\n    'Unknown'\r\n  );\r\n};\r\n\r\nconst getDatePickerStyles = (isDarkMode: boolean): Partial<IDatePickerStyles> => {\r\n  const baseBorder = isDarkMode ? 'rgba(148, 163, 184, 0.24)' : 'rgba(13, 47, 96, 0.18)';\r\n  const hoverBorder = isDarkMode ? 'rgba(135, 206, 255, 0.5)' : 'rgba(54, 144, 206, 0.4)';\r\n  const focusBorder = isDarkMode ? '#87ceeb' : colours.highlight;\r\n  const backgroundColour = isDarkMode ? 'rgba(15, 23, 42, 0.9)' : 'rgba(255, 255, 255, 0.95)';\r\n  const hoverBackground = isDarkMode ? 'rgba(15, 23, 42, 0.95)' : 'rgba(248, 250, 252, 1)';\r\n  const focusBackground = isDarkMode ? 'rgba(15, 23, 42, 1)' : 'rgba(255, 255, 255, 1)';\r\n\r\n  return {\r\n    root: {\r\n      maxWidth: 220,\r\n      '.ms-DatePicker': {\r\n        fontFamily: 'Raleway, sans-serif !important',\r\n      },\r\n    },\r\n    textField: {\r\n      root: {\r\n        fontFamily: 'Raleway, sans-serif !important',\r\n        width: '100% !important',\r\n      },\r\n      fieldGroup: {\r\n        height: '36px !important',\r\n        borderRadius: '8px !important',\r\n        border: `1px solid ${baseBorder} !important`,\r\n        background: `${backgroundColour} !important`,\r\n        padding: '0 14px !important',\r\n        boxShadow: isDarkMode\r\n          ? '0 2px 4px rgba(0, 0, 0, 0.2) !important'\r\n          : '0 1px 3px rgba(15, 23, 42, 0.08) !important',\r\n        transition: 'all 0.2s ease !important',\r\n        selectors: {\r\n          ':hover': {\r\n            border: `1px solid ${hoverBorder} !important`,\r\n            background: `${hoverBackground} !important`,\r\n            boxShadow: isDarkMode\r\n              ? '0 4px 8px rgba(0, 0, 0, 0.25) !important'\r\n              : '0 2px 6px rgba(15, 23, 42, 0.12) !important',\r\n          },\r\n          ':focus-within': {\r\n            border: `1px solid ${focusBorder} !important`,\r\n            background: `${focusBackground} !important`,\r\n            boxShadow: isDarkMode\r\n              ? '0 2px 4px rgba(135, 206, 255, 0.12) !important'\r\n              : '0 2px 6px rgba(54, 144, 206, 0.15) !important',\r\n          },\r\n        },\r\n      },\r\n      field: {\r\n        fontSize: '14px !important',\r\n        fontFamily: 'Raleway, sans-serif !important',\r\n        fontWeight: '500 !important',\r\n        background: 'transparent !important',\r\n        lineHeight: '20px !important',\r\n        border: 'none !important',\r\n        outline: 'none !important',\r\n      },\r\n    },\r\n    icon: {\r\n      color: `${isDarkMode ? colours.highlight : colours.missedBlue} !important`,\r\n      fontSize: '16px !important',\r\n      fontWeight: 'bold !important',\r\n    },\r\n    callout: {\r\n      fontSize: '14px !important',\r\n      borderRadius: '12px !important',\r\n      border: `1px solid ${baseBorder} !important`,\r\n      boxShadow: isDarkMode\r\n        ? '0 8px 24px rgba(0, 0, 0, 0.4) !important'\r\n        : '0 6px 20px rgba(15, 23, 42, 0.15) !important',\r\n    },\r\n    wrapper: {\r\n      borderRadius: '12px !important',\r\n    },\r\n  };\r\n};\r\n\r\nconst getRangeButtonStyles = (\r\n  isDarkMode: boolean,\r\n  active: boolean,\r\n  disabled: boolean = false,\r\n): IButtonStyles => {\r\n  const activeBackground = colours.highlight;\r\n  const inactiveBackground = isDarkMode ? 'rgba(148, 163, 184, 0.16)' : 'transparent';\r\n\r\n  const resolvedBackground = disabled\r\n    ? isDarkMode\r\n      ? 'rgba(15, 23, 42, 0.8)'\r\n      : 'transparent'\r\n    : active\r\n      ? activeBackground\r\n      : inactiveBackground;\r\n\r\n  const resolvedBorder = active\r\n    ? `1px solid ${isDarkMode ? 'rgba(135, 176, 255, 0.5)' : 'rgba(13, 47, 96, 0.32)'}`\r\n    : `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.24)' : 'rgba(13, 47, 96, 0.16)'}`;\r\n\r\n  const resolvedColor = disabled\r\n    ? isDarkMode\r\n      ? '#E2E8F0'\r\n      : colours.missedBlue\r\n    : active\r\n      ? '#ffffff'\r\n      : isDarkMode\r\n        ? '#E2E8F0'\r\n        : colours.missedBlue;\r\n\r\n  return {\r\n    root: {\r\n      display: 'inline-flex',\r\n      alignItems: 'center',\r\n      whiteSpace: 'nowrap',\r\n      overflow: 'hidden',\r\n      textOverflow: 'ellipsis',\r\n      borderRadius: 999,\r\n      border: resolvedBorder,\r\n      padding: '0 12px',\r\n      minHeight: 32,\r\n      height: 32,\r\n      fontWeight: 600,\r\n      fontSize: 13,\r\n      color: resolvedColor,\r\n      background: resolvedBackground,\r\n      boxShadow: active && !disabled ? '0 2px 8px rgba(54, 144, 206, 0.25)' : 'none',\r\n      fontFamily: 'Raleway, sans-serif',\r\n      cursor: disabled ? 'default' : 'pointer',\r\n      transition: 'all 0.2s ease',\r\n    },\r\n    rootHovered: {\r\n      background: disabled\r\n        ? resolvedBackground\r\n        : active\r\n          ? '#2f7cb3'\r\n          : isDarkMode\r\n            ? 'rgba(148, 163, 184, 0.24)'\r\n            : 'rgba(54, 144, 206, 0.12)',\r\n    },\r\n    rootPressed: {\r\n      background: disabled\r\n        ? resolvedBackground\r\n        : active\r\n          ? '#266795'\r\n          : isDarkMode\r\n            ? 'rgba(148, 163, 184, 0.3)'\r\n            : 'rgba(54, 144, 206, 0.16)',\r\n    },\r\n  };\r\n};\r\n\r\nconst getTeamButtonStyles = (\r\n  isDarkMode: boolean,\r\n  active: boolean,\r\n  hasEnquiries: boolean = true,\r\n): IButtonStyles => {\r\n  const activeBackground = active\r\n    ? `linear-gradient(135deg, ${colours.highlight} 0%, #2f7cb3 100%)`\r\n    : isDarkMode\r\n      ? 'rgba(15, 23, 42, 0.8)'\r\n      : 'transparent';\r\n\r\n  const activeBorder = active\r\n    ? `2px solid ${isDarkMode ? '#87ceeb' : colours.highlight}`\r\n    : `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.24)' : 'rgba(13, 47, 96, 0.16)'}`;\r\n\r\n  const greyedOut = !hasEnquiries;\r\n  const opacity = greyedOut ? 0.4 : 1;\r\n  const textColor = active\r\n    ? '#ffffff'\r\n    : greyedOut\r\n      ? isDarkMode\r\n        ? '#64748B'\r\n        : '#94A3B8'\r\n      : isDarkMode\r\n        ? '#E2E8F0'\r\n        : colours.missedBlue;\r\n\r\n  return {\r\n    root: {\r\n      borderRadius: 999,\r\n      minHeight: 32,\r\n      height: 32,\r\n      padding: '0 8px',\r\n      fontWeight: active ? 700 : 600,\r\n      fontSize: 12,\r\n      border: activeBorder,\r\n      background: activeBackground,\r\n      color: textColor,\r\n      opacity,\r\n      boxShadow: active\r\n        ? isDarkMode\r\n          ? '0 2px 8px rgba(54, 144, 206, 0.3)'\r\n          : '0 2px 8px rgba(54, 144, 206, 0.25)'\r\n        : 'none',\r\n      fontFamily: 'Raleway, sans-serif',\r\n      transform: active ? 'translateY(-1px)' : 'none',\r\n      transition: 'all 0.2s ease',\r\n    },\r\n    rootHovered: {\r\n      background: active\r\n        ? 'linear-gradient(135deg, #2f7cb3 0%, #266795 100%)'\r\n        : isDarkMode\r\n          ? 'rgba(15, 23, 42, 0.86)'\r\n          : 'rgba(54, 144, 206, 0.1)',\r\n      transform: 'translateY(-1px)',\r\n      boxShadow: active\r\n        ? isDarkMode\r\n          ? '0 4px 12px rgba(54, 144, 206, 0.4)'\r\n          : '0 4px 12px rgba(54, 144, 206, 0.35)'\r\n        : isDarkMode\r\n          ? '0 2px 4px rgba(0, 0, 0, 0.1)'\r\n          : '0 2px 4px rgba(15, 23, 42, 0.05)',\r\n    },\r\n    rootPressed: {\r\n      background: active\r\n        ? 'linear-gradient(135deg, #266795 0%, #1e5a7a 100%)'\r\n        : isDarkMode\r\n          ? 'rgba(15, 23, 42, 0.9)'\r\n          : 'rgba(54, 144, 206, 0.14)',\r\n      transform: 'translateY(0)',\r\n    },\r\n  };\r\n};\r\n\r\nconst getRoleButtonStyles = (isDarkMode: boolean, active: boolean, hasData: boolean = true): IButtonStyles => {\r\n  const activeBackground = active\r\n    ? `linear-gradient(135deg, ${colours.highlight} 0%, #2f7cb3 100%)`\r\n    : isDarkMode\r\n      ? 'rgba(15, 23, 42, 0.8)'\r\n      : 'transparent';\r\n\r\n  const activeBorder = active\r\n    ? `2px solid ${isDarkMode ? '#87ceeb' : colours.highlight}`\r\n    : `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.24)' : 'rgba(13, 47, 96, 0.16)'}`;\r\n\r\n  const textColor = active\r\n    ? '#ffffff'\r\n    : hasData\r\n      ? (isDarkMode ? '#E2E8F0' : colours.missedBlue)\r\n      : (isDarkMode ? '#64748B' : '#94A3B8');\r\n  const opacity = hasData ? 1 : 0.55;\r\n\r\n  return {\r\n    root: {\r\n      borderRadius: 999,\r\n      minHeight: 32,\r\n      height: 32,\r\n      padding: '0 12px',\r\n      fontWeight: active ? 700 : 600,\r\n      fontSize: 12,\r\n      border: activeBorder,\r\n      background: activeBackground,\r\n      color: textColor,\r\n      opacity,\r\n      boxShadow: active\r\n        ? isDarkMode\r\n          ? '0 2px 8px rgba(54, 144, 206, 0.3)'\r\n          : '0 2px 8px rgba(54, 144, 206, 0.25)'\r\n        : 'none',\r\n      fontFamily: 'Raleway, sans-serif',\r\n      transform: active ? 'translateY(-1px)' : 'none',\r\n      transition: 'all 0.2s ease',\r\n    },\r\n    rootHovered: {\r\n      background: active\r\n        ? 'linear-gradient(135deg, #2f7cb3 0%, #266795 100%)'\r\n        : isDarkMode\r\n          ? 'rgba(15, 23, 42, 0.86)'\r\n          : 'rgba(54, 144, 206, 0.1)',\r\n      transform: hasData ? 'translateY(-1px)' : 'none',\r\n      opacity: hasData ? 1 : opacity,\r\n      boxShadow: active\r\n        ? isDarkMode\r\n          ? '0 4px 12px rgba(54, 144, 206, 0.4)'\r\n          : '0 4px 12px rgba(54, 144, 206, 0.35)'\r\n        : isDarkMode\r\n          ? '0 2px 4px rgba(0, 0, 0, 0.1)'\r\n          : '0 2px 4px rgba(15, 23, 42, 0.05)',\r\n    },\r\n    rootPressed: {\r\n      background: active\r\n        ? 'linear-gradient(135deg, #266795 0%, #1e5a7a 100%)'\r\n        : isDarkMode\r\n          ? 'rgba(15, 23, 42, 0.9)'\r\n          : 'rgba(54, 144, 206, 0.14)',\r\n      transform: hasData ? 'translateY(0)' : 'none',\r\n    },\r\n  };\r\n};\r\n\r\nconst clearFilterButtonStyle = (isDarkMode: boolean): React.CSSProperties => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  padding: '0 12px',\r\n  height: 32,\r\n  borderRadius: 8,\r\n  border: `1px solid ${isDarkMode ? 'rgba(239, 68, 68, 0.35)' : 'rgba(239, 68, 68, 0.25)'}`,\r\n  background: isDarkMode ? 'rgba(239, 68, 68, 0.12)' : 'rgba(254, 242, 242, 0.85)',\r\n  color: isDarkMode ? '#fca5a5' : '#dc2626',\r\n  gap: 6,\r\n  cursor: 'pointer',\r\n  transition: 'all 0.2s ease',\r\n  fontFamily: 'Raleway, sans-serif',\r\n  fontWeight: 600,\r\n  fontSize: 13,\r\n  whiteSpace: 'nowrap',\r\n});\r\n\r\nconst dateStampButtonStyle = (isDarkMode: boolean): React.CSSProperties => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'flex-start',\r\n  justifyContent: 'center',\r\n  gap: 2,\r\n  padding: '8px 12px',\r\n  borderRadius: 10,\r\n  border: `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.24)' : 'rgba(13, 47, 96, 0.16)'}`,\r\n  background: isDarkMode ? 'rgba(15, 23, 42, 0.8)' : 'rgba(255, 255, 255, 0.95)',\r\n  color: isDarkMode ? '#E2E8F0' : colours.missedBlue,\r\n  minWidth: 120,\r\n  transition: 'all 0.2s ease',\r\n  cursor: 'pointer',\r\n});\r\n\r\nconst computeRange = (range: RangeKey): { start: Date; end: Date } => {\r\n  const now = new Date();\r\n  const end = new Date(now);\r\n  const start = new Date(now);\r\n\r\n  switch (range) {\r\n    case 'today':\r\n      start.setHours(0, 0, 0, 0);\r\n      break;\r\n    case 'yesterday': {\r\n      const yesterday = new Date(now);\r\n      yesterday.setDate(yesterday.getDate() - 1);\r\n      start.setTime(yesterday.getTime());\r\n      start.setHours(0, 0, 0, 0);\r\n      end.setTime(yesterday.getTime());\r\n      end.setHours(23, 59, 59, 999);\r\n      break;\r\n    }\r\n    case 'week': {\r\n      const day = now.getDay();\r\n      const diff = (day + 6) % 7;\r\n      start.setDate(now.getDate() - diff);\r\n      start.setHours(0, 0, 0, 0);\r\n      break;\r\n    }\r\n    case 'lastWeek': {\r\n      const day = now.getDay();\r\n      const diff = (day + 6) % 7;\r\n      const thisWeekStart = new Date(now);\r\n      thisWeekStart.setDate(now.getDate() - diff);\r\n      thisWeekStart.setHours(0, 0, 0, 0);\r\n\r\n      start.setTime(thisWeekStart.getTime());\r\n      start.setDate(start.getDate() - 7);\r\n      start.setHours(0, 0, 0, 0);\r\n\r\n      end.setTime(start.getTime());\r\n      end.setDate(end.getDate() + 6);\r\n      end.setHours(23, 59, 59, 999);\r\n      break;\r\n    }\r\n    case 'month':\r\n      start.setDate(1);\r\n      start.setHours(0, 0, 0, 0);\r\n      break;\r\n    case 'lastMonth': {\r\n      start.setMonth(now.getMonth() - 1, 1);\r\n      start.setHours(0, 0, 0, 0);\r\n      end.setDate(0);\r\n      end.setHours(23, 59, 59, 999);\r\n      break;\r\n    }\r\n    case 'last90Days':\r\n      start.setDate(now.getDate() - 89);\r\n      start.setHours(0, 0, 0, 0);\r\n      break;\r\n    case 'quarter': {\r\n      const quarterStart = Math.floor(now.getMonth() / 3) * 3;\r\n      start.setMonth(quarterStart, 1);\r\n      start.setHours(0, 0, 0, 0);\r\n      break;\r\n    }\r\n    case 'yearToDate': {\r\n      const currentYear = now.getFullYear();\r\n      const currentMonth = now.getMonth();\r\n      if (currentMonth >= 3) {\r\n        start.setFullYear(currentYear, 3, 1);\r\n      } else {\r\n        start.setFullYear(currentYear - 1, 3, 1);\r\n      }\r\n      start.setHours(0, 0, 0, 0);\r\n      break;\r\n    }\r\n    case 'year':\r\n      start.setFullYear(now.getFullYear(), 0, 1);\r\n      start.setHours(0, 0, 0, 0);\r\n      end.setFullYear(now.getFullYear(), 11, 31);\r\n      end.setHours(23, 59, 59, 999);\r\n      break;\r\n    case 'custom':\r\n      return { start: new Date(now), end: new Date(now) };\r\n    case 'all':\r\n    default:\r\n      return { start: new Date(0), end };\r\n  }\r\n\r\n  return { start, end };\r\n};\r\n\r\nconst normalizeRange = (input: { start: Date; end: Date }): { start: Date; end: Date } => {\r\n  const start = new Date(input.start);\r\n  const end = new Date(input.end);\r\n  start.setHours(0, 0, 0, 0);\r\n  end.setHours(23, 59, 59, 999);\r\n  return { start, end };\r\n};\r\n\r\nconst quickRanges: Array<{ key: RangeKey; label: string; get: () => { start: Date; end: Date } | null }> = [\r\n  { key: 'all', label: 'All', get: () => null },\r\n  ...RANGE_OPTIONS.map(({ key, label }) => ({\r\n    key,\r\n    label,\r\n    get: () => normalizeRange(computeRange(key)),\r\n  })),\r\n];\r\n\r\nconst isWithin = (value: Date | null, start: Date, end: Date): boolean => {\r\n  if (!value) return false;\r\n  const time = value.getTime();\r\n  return time >= start.getTime() && time <= end.getTime();\r\n};\r\n\r\nconst formatDateForPicker = (date?: Date | null): string => {\r\n  if (!date) return '';\r\n  return date.toLocaleDateString('en-GB', {\r\n    day: '2-digit',\r\n    month: 'short',\r\n    year: 'numeric',\r\n  });\r\n};\r\n\r\nconst parseDatePickerInput = (value?: string | null): Date | null =>\r\n  value ? parseDate(value) : null;\r\n\r\nconst formatDateTag = (date: Date | null): string => {\r\n  if (!date) return 'n/a';\r\n  return date.toLocaleDateString('en-GB', { day: '2-digit', month: 'short' });\r\n};\r\n\r\nconst workingDaysBetween = (start: Date, end: Date): number => {\r\n  if (!start || !end) return 1;\r\n  let count = 0;\r\n  const cursor = new Date(start);\r\n  cursor.setHours(0, 0, 0, 0);\r\n  const endCopy = new Date(end);\r\n  endCopy.setHours(23, 59, 59, 999);\r\n\r\n  while (cursor <= endCopy) {\r\n    const day = cursor.getDay();\r\n    if (day !== 0 && day !== 6) count++;\r\n    cursor.setDate(cursor.getDate() + 1);\r\n  }\r\n  return Math.max(1, count);\r\n};\r\n\r\nconst formatTimeAgo = (timestamp?: number): string => {\r\n  if (!timestamp) return 'Not refreshed yet';\r\n  const diffMs = Date.now() - timestamp;\r\n  if (diffMs < 60_000) return 'Just now';\r\n  const minutes = Math.floor(diffMs / 60_000);\r\n  if (minutes < 60) return `${minutes}m ago`;\r\n  const hours = Math.floor(minutes / 60);\r\n  if (hours < 24) {\r\n    const remainingMinutes = minutes % 60;\r\n    return remainingMinutes ? `${hours}h ${remainingMinutes}m ago` : `${hours}h ago`;\r\n  }\r\n  const days = Math.floor(hours / 24);\r\n  if (days < 7) return `${days}d ago`;\r\n  const weeks = Math.floor(days / 7);\r\n  if (weeks < 5) return `${weeks}w ago`;\r\n  const months = Math.floor(days / 30);\r\n  if (months < 12) return `${months}mo ago`;\r\n  const years = Math.floor(days / 365);\r\n  return `${years}y ago`;\r\n};\r\n\r\nconst formatDayHeaderLabel = (isoDate: string): string => {\r\n  const parsed = parseDate(isoDate);\r\n  if (!parsed) return isoDate;\r\n\r\n  const today = new Date();\r\n  today.setHours(0, 0, 0, 0);\r\n\r\n  const target = new Date(parsed);\r\n  target.setHours(0, 0, 0, 0);\r\n\r\n  const diffMs = today.getTime() - target.getTime();\r\n  const diffDays = Math.round(diffMs / 86_400_000);\r\n\r\n  if (diffDays === 0) return 'Today';\r\n  if (diffDays === 1) return 'Yesterday';\r\n\r\n  const startOfWeek = new Date(today);\r\n  const dayIndex = (startOfWeek.getDay() + 6) % 7; // Monday as start of week\r\n  startOfWeek.setDate(startOfWeek.getDate() - dayIndex);\r\n  const endOfWeek = new Date(startOfWeek);\r\n  endOfWeek.setDate(startOfWeek.getDate() + 6);\r\n\r\n  if (target >= startOfWeek && target <= endOfWeek) {\r\n    return target.toLocaleDateString('en-GB', { weekday: 'long' });\r\n  }\r\n\r\n  return target.toLocaleDateString('en-GB');\r\n};\r\n\r\n// Triaged POC identifiers and patterns (case-insensitive)\r\nfunction isTriagedPoc(value: string): boolean {\r\n  const v = (value || '').trim().toLowerCase();\r\n  if (!v) return false;\r\n  if (v === 'property@helix-law.com' || v === 'commercial@helix-law.com' || v === 'construction@helix-law.com') return true;\r\n  const local = v.includes('@') ? v.split('@')[0] : v;\r\n  if (local === 'commercial' || local === 'construction' || local === 'property') return true;\r\n  return false;\r\n}\r\n\r\nconst getPocRaw = (entry: unknown): string => {\r\n  if (!entry || typeof entry !== 'object') return '';\r\n  const candidate = entry as Record<string, unknown>;\r\n  const poc = candidate.Point_of_Contact ?? candidate.poc;\r\n  return typeof poc === 'string' ? poc.trim() : '';\r\n};\r\n\r\nfunction containerStyle(isDark: boolean): React.CSSProperties {\r\n  return {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: 16,\r\n    background: isDark ? colours.dark.background : colours.light.background,\r\n    padding: '18px 22px',\r\n    minHeight: '100%',\r\n  };\r\n}\r\n\r\nfunction surface(isDark: boolean, overrides: React.CSSProperties = {}): React.CSSProperties {\r\n  return {\r\n    background: isDark ? 'rgba(15, 23, 42, 0.88)' : '#FFFFFF',\r\n    borderRadius: 12,\r\n    border: `1px solid ${isDark ? 'rgba(148, 163, 184, 0.24)' : 'rgba(15, 23, 42, 0.06)'}`,\r\n    boxShadow: isDark ? '0 2px 10px rgba(0, 0, 0, 0.22)' : '0 2px 8px rgba(15, 23, 42, 0.06)',\r\n    padding: 16,\r\n    ...overrides,\r\n  };\r\n}\r\n\r\nconst grid: React.CSSProperties = {\r\n  display: 'grid',\r\n  gridTemplateColumns: 'repeat(12, 1fr)',\r\n  gap: 12,\r\n};\r\n\r\nconst pill: React.CSSProperties = {\r\n  display: 'inline-flex',\r\n  alignItems: 'center',\r\n  gap: 6,\r\n  padding: '5px 10px',\r\n  borderRadius: 999,\r\n  fontSize: 12,\r\n  fontWeight: 600,\r\n};\r\n\r\nfunction sectionTitle(): React.CSSProperties {\r\n  return { fontSize: 16, fontWeight: 600, margin: 0 };\r\n}\r\n\r\nconst EnquiriesReport: React.FC<EnquiriesReportProps> = ({ \r\n  enquiries, \r\n  teamData, \r\n  annualLeave, \r\n  metaMetrics,\r\n  triggerRefresh, \r\n  lastRefreshTimestamp, \r\n  isFetching \r\n}) => {\r\n  const { isDarkMode } = useTheme();\r\n  \r\n  // Add CSS animations for smooth loading\r\n  React.useEffect(() => {\r\n    const style = document.createElement('style');\r\n    style.textContent = `\r\n      @keyframes fadeInUp {\r\n        from {\r\n          opacity: 0;\r\n          transform: translateY(10px);\r\n        }\r\n        to {\r\n          opacity: 1;\r\n          transform: translateY(0);\r\n        }\r\n      }\r\n    `;\r\n    document.head.appendChild(style);\r\n    return () => {\r\n      document.head.removeChild(style);\r\n    };\r\n  }, []);\r\n  \r\n  const [rangeKey, setRangeKey] = useState<RangeKey>('month');\r\n  const [selectedRoles, setSelectedRoles] = useState<Set<string>>(new Set());\r\n  const [selectedTeams, setSelectedTeams] = useState<Set<string>>(new Set());\r\n  const [customDateRange, setCustomDateRange] = useState<{ start: Date | null; end: Date | null } | null>(null);\r\n  const [timeElapsed, setTimeElapsed] = useState(0); // Time since last refresh in seconds\r\n  const [showRoleFilter, setShowRoleFilter] = useState<boolean>(false);\r\n  const [showDatasetInfo, setShowDatasetInfo] = useState(false);\r\n  const [sourceFilter, setSourceFilter] = useState<string | null>(null);\r\n  const [mocFilter, setMocFilter] = useState<string | null>(null);\r\n  const [pocFilter, setPocFilter] = useState<string | null>(null);\r\n  \r\n  // Modal state for showing underlying data\r\n  const [modalData, setModalData] = useState<{\r\n    isOpen: boolean;\r\n    title: string;\r\n    items: any[];\r\n    type: 'source' | 'moc' | 'poc';\r\n    filterValue: string;\r\n  }>({\r\n    isOpen: false,\r\n    title: '',\r\n    items: [],\r\n    type: 'source',\r\n    filterValue: ''\r\n  });\r\n  \r\n  // Function to open modal with filtered data\r\n  const openModal = (type: 'source' | 'moc' | 'poc', filterValue: string) => {\r\n    let filteredItems: any[] = [];\r\n    let title = '';\r\n    \r\n    switch (type) {\r\n      case 'source':\r\n        filteredItems = filteredEntries.filter(({ enquiry }) => \r\n          getNormalizedEnquirySourceLabel(enquiry) === filterValue\r\n        );\r\n        title = `Enquiries from: ${filterValue}`;\r\n        break;\r\n      case 'moc':\r\n        filteredItems = filteredEntries.filter(({ enquiry }) => \r\n          getNormalizedEnquiryMOCLabel(enquiry) === filterValue\r\n        );\r\n        title = `Enquiries via: ${filterValue}`;\r\n        break;\r\n      case 'poc':\r\n        filteredItems = filteredEntries.filter(({ enquiry }) => {\r\n          const poc = toStr(enquiry.Point_of_Contact || (enquiry as any).point_of_contact).trim();\r\n          return poc === filterValue;\r\n        });\r\n        title = `Enquiries handled by: ${filterValue}`;\r\n        break;\r\n    }\r\n    \r\n    setModalData({\r\n      isOpen: true,\r\n      title,\r\n      items: filteredItems,\r\n      type,\r\n      filterValue\r\n    });\r\n  };\r\n  \r\n  const closeModal = () => {\r\n    setModalData(prev => ({ ...prev, isOpen: false }));\r\n  };\r\n  \r\n  // Reassignment functionality\r\n  const [reassignmentDropdown, setReassignmentDropdown] = useState<{ enquiryId: string; x: number; y: number } | null>(null);\r\n  const [isReassigning, setIsReassigning] = useState(false);\r\n  const [reassignmentMessage, setReassignmentMessage] = useState<{ type: 'success' | 'error', text: string } | null>(null);\r\n\r\n  // Auto-refresh tracking - Update elapsed time every second\r\n  React.useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setTimeElapsed((prev) => prev + 1);\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  // Reset timer when manual refresh happens\r\n  React.useEffect(() => {\r\n    if (lastRefreshTimestamp) {\r\n      setTimeElapsed(0);\r\n    }\r\n  }, [lastRefreshTimestamp]);\r\n\r\n  // Calculate color based on elapsed time (green → blue over 15 minutes)\r\n  const getRefreshIndicatorColor = (): string => {\r\n    const maxSeconds = 15 * 60; // 15 minutes\r\n    const progress = Math.min(timeElapsed / maxSeconds, 1); // 0 to 1\r\n\r\n    // Green (start): rgb(34, 197, 94)\r\n    // Blue (end): rgb(59, 130, 246)\r\n    const r = Math.round(34 + (59 - 34) * progress);\r\n    const g = Math.round(197 + (130 - 197) * progress);\r\n    const b = Math.round(94 + (246 - 94) * progress);\r\n\r\n    return `rgb(${r}, ${g}, ${b})`;\r\n  };\r\n  const range = useMemo(() => {\r\n    if (rangeKey === 'custom') {\r\n      if (!customDateRange || !customDateRange.start || !customDateRange.end) {\r\n        return null;\r\n      }\r\n      return normalizeRange({ start: customDateRange.start, end: customDateRange.end });\r\n    }\r\n    const preset = quickRanges.find((entry) => entry.key === rangeKey);\r\n    const base = preset?.get();\r\n    return base ?? null;\r\n  }, [rangeKey, customDateRange]);\r\n\r\n  const teamMembers = useMemo<TeamMember[]>(() => {\r\n    if (!teamData || teamData.length === 0) return [];\r\n    return teamData\r\n      .map((record) => {\r\n        const display = mapNameIfNeeded(displayName(record));\r\n        const initialsRaw = (record['Initials'] || '').trim();\r\n        const initials = initialsRaw || getInitials(display);\r\n        const normalizedName = normalizeName(display);\r\n        const role = record['Role']?.trim();\r\n        const status = (record.status || '').toLowerCase();\r\n        const email = record['Email']?.trim();\r\n        return {\r\n          initials,\r\n          display,\r\n          role,\r\n          isActive: status !== 'inactive',\r\n          record,\r\n          email,\r\n          normalizedName,\r\n        } satisfies TeamMember;\r\n      })\r\n  .filter((member) => Boolean(member.initials) && member.initials !== '?')\r\n      .sort((a, b) => a.display.localeCompare(b.display));\r\n  }, [teamData]);\r\n\r\n  const enrichedEnquiries = useMemo<EnrichedEnquiry[]>(() => {\r\n    const list = enquiries || [];\r\n    if (list.length === 0) return [];\r\n\r\n    const byNormalizedName = new Map<string, TeamMember>();\r\n    const byInitials = new Map<string, TeamMember>();\r\n\r\n    teamMembers.forEach((member) => {\r\n      if (member.normalizedName) {\r\n        byNormalizedName.set(member.normalizedName, member);\r\n      }\r\n      byInitials.set(member.initials.toLowerCase(), member);\r\n      if (member.email) {\r\n        const local = member.email.split('@')[0] || '';\r\n        const normalizedLocal = normalizeName(local);\r\n        if (normalizedLocal) {\r\n          byNormalizedName.set(normalizedLocal, member);\r\n        }\r\n      }\r\n    });\r\n\r\n    return list.map((enquiry) => {\r\n      const candidate = (enquiry.Point_of_Contact || (enquiry as any).poc || (enquiry as any).pocname || '').trim();\r\n      const mapped = mapNameIfNeeded(candidate);\r\n      const normalized = normalizeName(mapped);\r\n      let member = normalized ? byNormalizedName.get(normalized) : undefined;\r\n\r\n      if (!member && mapped) {\r\n        const initials = getInitials(mapped).toLowerCase();\r\n        if (initials) {\r\n          member = byInitials.get(initials);\r\n        }\r\n      }\r\n\r\n      if (!member) {\r\n        const taker = (enquiry.Call_Taker || (enquiry as any).call_taker || '').trim();\r\n        const takerNormalized = normalizeName(mapNameIfNeeded(taker));\r\n        if (takerNormalized) {\r\n          member = byNormalizedName.get(takerNormalized) ?? byInitials.get(getInitials(taker).toLowerCase());\r\n        }\r\n      }\r\n\r\n      return { enquiry, member };\r\n    });\r\n  }, [enquiries, teamMembers]);\r\n\r\n  // Bespoke: local cross-reference map to drive migration indicator without changing global data\r\n  const migrationOverrides = useMemo(() => {\r\n    const overrides = new Map<string, { status: 'migrated' | 'partial' | 'not-migrated' | 'sync-pending' | 'instructions-only' | 'unknown'; instructionsId?: number; matchScore?: number }>();\r\n\r\n    // Prefer server-provided union of enquiries if available (richer), else fall back to prop\r\n    const global = (window as any)?.migrationData;\r\n    const all: any[] = Array.isArray(global?.allEnquiries) ? global.allEnquiries : (Array.isArray(enquiries) ? enquiries as any[] : []);\r\n    if (!all || all.length === 0) return overrides;\r\n\r\n    // Heuristic partition of legacy vs new records\r\n    const oldArr: OldEnquiry[] = [];\r\n    const newArr: NewEnquiry[] = [];\r\n    for (const x of all) {\r\n      const hasLegacyShape = typeof x?.ID !== 'undefined' || typeof x?.Date_Created !== 'undefined' || typeof x?.Point_of_Contact !== 'undefined';\r\n      const hasNewShape = typeof x?.id !== 'undefined' || typeof x?.datetime !== 'undefined' || typeof x?.poc !== 'undefined';\r\n      if (hasLegacyShape && !hasNewShape) {\r\n        oldArr.push({\r\n          ID: String(x.ID ?? ''),\r\n          Date_Created: String(x.Date_Created ?? x.Touchpoint_Date ?? ''),\r\n          Email: String(x.Email ?? ''),\r\n          First_Name: String(x.First_Name ?? x.first ?? ''),\r\n          Last_Name: String(x.Last_Name ?? x.last ?? ''),\r\n          Company: x.Company,\r\n          Point_of_Contact: String(x.Point_of_Contact ?? ''),\r\n          Matter_Ref: x.Matter_Ref,\r\n        });\r\n      } else if (hasNewShape) {\r\n        newArr.push({\r\n          id: Number(x.id ?? 0),\r\n          datetime: String(x.datetime ?? x.Date_Created ?? x.Touchpoint_Date ?? ''),\r\n          first: String(x.first ?? x.First_Name ?? ''),\r\n          last: String(x.last ?? x.Last_Name ?? ''),\r\n          email: String(x.email ?? x.Email ?? ''),\r\n          poc: String(x.poc ?? x.Point_of_Contact ?? ''),\r\n          stage: x.stage,\r\n          claim: x.claim,\r\n        });\r\n      }\r\n    }\r\n\r\n    if (oldArr.length === 0 || newArr.length === 0) return overrides;\r\n\r\n    // Build overrides by best match\r\n    for (const oldItem of oldArr) {\r\n      const match = findMatches(oldItem, newArr);\r\n      if (match.migrationStatus === 'migrated' || match.migrationStatus === 'partial' || match.migrationStatus === 'sync-pending') {\r\n        overrides.set(oldItem.ID, {\r\n          status: match.migrationStatus,\r\n          instructionsId: match.newId,\r\n          matchScore: match.matchScore,\r\n        });\r\n      } else {\r\n        overrides.set(oldItem.ID, { status: 'not-migrated' });\r\n      }\r\n    }\r\n\r\n    return overrides;\r\n  }, [enquiries]);\r\n\r\n  // Calculate actual date range from available data\r\n  const dataDateRange = useMemo(() => {\r\n    if (!enquiries || enquiries.length === 0) return null;\r\n    \r\n    const dates = enquiries\r\n      .map(e => parseDate((e as any).Touchpoint_Date))\r\n      .filter(d => d !== null) as Date[];\r\n    \r\n    if (dates.length === 0) return null;\r\n    \r\n    const earliest = new Date(Math.min(...dates.map(d => d.getTime())));\r\n    const latest = new Date(Math.max(...dates.map(d => d.getTime())));\r\n    \r\n    return { earliest, latest };\r\n  }, [enquiries]);\r\n\r\n  // Debug: Check what data we're receiving\r\n  React.useEffect(() => {\r\n    console.log('[EnquiriesReport] Received enquiries:', {\r\n      isNull: enquiries === null,\r\n      isArray: Array.isArray(enquiries),\r\n      length: Array.isArray(enquiries) ? enquiries.length : 0,\r\n      sample: Array.isArray(enquiries) && enquiries.length > 0 ? enquiries[0] : null\r\n    });\r\n  }, [enquiries]);\r\n\r\n  const filteredEntries = useMemo(() => {\r\n    return enrichedEnquiries.filter(({ enquiry, member }) => {\r\n      if (range) {\r\n        const date = parseDate((enquiry as any).Touchpoint_Date || (enquiry as any).Date_Created);\r\n        if (!date || !isWithin(date, range.start, range.end)) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      if (selectedTeams.size > 0) {\r\n        const memberInitials = member?.initials;\r\n        if (!memberInitials || !selectedTeams.has(memberInitials)) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      if (selectedRoles.size > 0) {\r\n        const memberRole = member?.role?.trim();\r\n        if (!memberRole || !selectedRoles.has(memberRole)) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      // Source filter\r\n      if (sourceFilter) {\r\n        const enquirySource = getNormalizedEnquirySourceLabel(enquiry);\r\n        if (enquirySource !== sourceFilter) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      // MOC filter\r\n      if (mocFilter) {\r\n        const enquiryMOC = getNormalizedEnquiryMOCLabel(enquiry);\r\n        if (enquiryMOC !== mocFilter) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      // POC filter\r\n      if (pocFilter) {\r\n        const poc = toStr(enquiry.Point_of_Contact || (enquiry as any).point_of_contact).trim();\r\n        if (poc !== pocFilter) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      return true;\r\n    });\r\n  }, [enrichedEnquiries, range, selectedRoles, selectedTeams, sourceFilter, mocFilter, pocFilter]);\r\n\r\n  const filtered = useMemo(() => filteredEntries.map((entry) => entry.enquiry), [filteredEntries]);\r\n\r\n  const memberCounts = useMemo(() => {\r\n    const counts = new Map<string, number>();\r\n    filteredEntries.forEach(({ member }) => {\r\n      if (member) {\r\n        counts.set(member.initials, (counts.get(member.initials) || 0) + 1);\r\n      }\r\n    });\r\n    return counts;\r\n  }, [filteredEntries]);\r\n\r\n  const roleCounts = useMemo(() => {\r\n    const counts = new Map<string, number>();\r\n    filteredEntries.forEach(({ member }) => {\r\n      const roleKey = member?.role?.trim();\r\n      if (!roleKey) return;\r\n      counts.set(roleKey, (counts.get(roleKey) || 0) + 1);\r\n    });\r\n    return counts;\r\n  }, [filteredEntries]);\r\n\r\n  const lastRefreshLabel = useMemo(() => formatTimeAgo(lastRefreshTimestamp), [lastRefreshTimestamp]);\r\n  const showCustomPickers = rangeKey === 'custom';\r\n  const customStartValue = customDateRange?.start ?? null;\r\n  const customEndValue = customDateRange?.end ?? null;\r\n  const displayRangeStart = range?.start ?? (showCustomPickers ? customStartValue : null);\r\n  const displayRangeEnd = range?.end ?? (showCustomPickers ? customEndValue : null);\r\n  const fromLabel = rangeKey === 'all'\r\n    ? 'All time'\r\n    : displayRangeStart\r\n      ? formatDateTag(displayRangeStart)\r\n      : 'Select start';\r\n  const toLabel = rangeKey === 'all'\r\n    ? 'Latest'\r\n    : displayRangeEnd\r\n      ? formatDateTag(displayRangeEnd)\r\n      : 'Select end';\r\n  const currentRangeLabel = rangeKey === 'custom'\r\n    ? 'Custom'\r\n    : quickRanges.find((entry) => entry.key === rangeKey)?.label ?? 'All';\r\n\r\n  const stats = useMemo(() => {\r\n    const total = filtered.length;\r\n    const bySource = new Map<string, number>();\r\n    const byMOC = new Map<string, number>();\r\n    const byPoc = new Map<string, number>();\r\n    let claimed = 0;\r\n    let unclaimed = 0;\r\n\r\n    const getSource = (e: any): string => getNormalizedEnquirySourceLabel(e);\r\n    const getMOC = (e: any): string => getNormalizedEnquiryMOCLabel(e);\r\n\r\n    const isClaimed = (pocRaw: string): boolean => {\r\n      const v = pocRaw.toLowerCase();\r\n      if (!v) return false;\r\n      // Treat team inbox and placeholders as unclaimed\r\n      if (v === 'team@helix-law.com' || v === 'team' || v === 'anyone' || v === 'unassigned' || v === 'unknown' || v === 'n/a') return false;\r\n      // Triaged are not considered claimed\r\n      if (isTriagedPoc(v)) return false;\r\n      return true;\r\n    };\r\n\r\n    filtered.forEach((e: any) => {\r\n      const src = getSource(e);\r\n      const moc = getMOC(e);\r\n      bySource.set(src, (bySource.get(src) || 0) + 1);\r\n      byMOC.set(moc, (byMOC.get(moc) || 0) + 1);\r\n\r\n      const pocRaw = getPocRaw(e);\r\n      const claimedFlag = isClaimed(pocRaw);\r\n      let pocKey: string;\r\n      if (claimedFlag) pocKey = pocRaw;\r\n      else if (isTriagedPoc(pocRaw)) pocKey = 'Triaged';\r\n      else pocKey = 'Unassigned';\r\n      byPoc.set(pocKey, (byPoc.get(pocKey) || 0) + 1);\r\n      if (claimedFlag) claimed++; else unclaimed++;\r\n    });\r\n    const wdRaw = range ? workingDaysBetween(range.start, range.end) : workingDaysBetween(new Date(2000,0,1), new Date());\r\n    const wdForRate = Math.max(1, wdRaw); // avoid divide-by-zero; do not alter displayed badge count\r\n    const perDay = total / wdForRate;\r\n    return { total, perDay, bySource, byMOC, byPoc, workingDays: wdRaw, claimed, unclaimed };\r\n  }, [filtered, range]);\r\n\r\n  const workingDaysLabel = range\r\n    ? `${stats.workingDays} working days in selected range`\r\n    : 'All data (working days not applicable)';\r\n\r\n  // Group recent enquiries by day for progressive loading (timeline style)\r\n  const dayGroups = useMemo(() => {\r\n    const groupsMap = new Map<string, any[]>();\r\n    for (const e of filtered) {\r\n      const d0 = parseDate((e as any).Touchpoint_Date);\r\n      if (!d0 || isNaN(d0.getTime())) continue;\r\n      const y = d0.getFullYear();\r\n      const m = String(d0.getMonth() + 1).padStart(2, '0');\r\n      const day = String(d0.getDate()).padStart(2, '0');\r\n      const key = `${y}-${m}-${day}`;\r\n      const arr = groupsMap.get(key) || [];\r\n      arr.push(e);\r\n      groupsMap.set(key, arr);\r\n    }\r\n    return Array.from(groupsMap.entries())\r\n      .sort((a, b) => (a[0] < b[0] ? 1 : -1))\r\n      .map(([date, items]) => ({ date, items }));\r\n  }, [filtered]);\r\n  // Infinite scroll over date groups\r\n  const [visibleGroupCount, setVisibleGroupCount] = useState<number>(3);\r\n  const sentinelRef = React.useRef<HTMLDivElement | null>(null);\r\n  React.useEffect(() => {\r\n    setVisibleGroupCount(3);\r\n  }, [rangeKey, dayGroups.length]);\r\n  React.useEffect(() => {\r\n    const el = sentinelRef.current;\r\n    if (!el) return;\r\n    const obs = new IntersectionObserver((entries) => {\r\n      const first = entries[0];\r\n      if (first && first.isIntersecting) {\r\n        setVisibleGroupCount((n) => Math.min(dayGroups.length, n + 3));\r\n      }\r\n    }, { rootMargin: '200px' });\r\n    obs.observe(el);\r\n    return () => obs.disconnect();\r\n  }, [dayGroups.length]);\r\n\r\n  const topSources = useMemo(() => Array.from(stats.bySource.entries()).sort((a,b)=>b[1]-a[1]).slice(0,6), [stats.bySource]);\r\n  const topMOCs = useMemo(() => Array.from(stats.byMOC.entries()).sort((a,b)=>b[1]-a[1]).slice(0,6), [stats.byMOC]);\r\n  const topPocs = useMemo(() => Array.from(stats.byPoc.entries()).sort((a,b)=>b[1]-a[1]).slice(0,10), [stats.byPoc]);\r\n  \r\n  // Pie chart data\r\n  const sourcesPieData: PieChartData[] = useMemo(() => \r\n    topSources.map(([name, value], index) => ({\r\n      name,\r\n      value,\r\n      color: PIE_COLORS[index % PIE_COLORS.length]\r\n    })), [topSources]);\r\n    \r\n  const mocsPieData: PieChartData[] = useMemo(() => \r\n    topMOCs.map(([name, value], index) => ({\r\n      name,\r\n      value,\r\n      color: PIE_COLORS[index % PIE_COLORS.length]\r\n    })), [topMOCs]);\r\n    \r\n  const pocsPieData: PieChartData[] = useMemo(() => \r\n    topPocs.map(([name, value], index) => ({\r\n      name,\r\n      value,\r\n      color: PIE_COLORS[index % PIE_COLORS.length]\r\n    })), [topPocs]);\r\n\r\n  // Line chart data - dynamic aggregation based on time range\r\n  const lineChartData = useMemo(() => {\r\n    if (!filtered || filtered.length === 0) return [];\r\n    \r\n    // Determine aggregation level based on rangeKey\r\n    const getAggregationConfig = (range: RangeKey) => {\r\n      // Calculate actual date span for the filtered data\r\n      const getActualDateSpan = () => {\r\n        if (!filtered || filtered.length === 0) return 0;\r\n        \r\n        const dates = filtered\r\n          .map(e => parseDate(e.Date_Created))\r\n          .filter(Boolean)\r\n          .sort((a, b) => a!.getTime() - b!.getTime());\r\n          \r\n        if (dates.length < 2) return 0;\r\n        \r\n        const startDate = dates[0]!;\r\n        const endDate = dates[dates.length - 1]!;\r\n        return Math.abs(endDate.getTime() - startDate.getTime()) / (1000 * 60 * 60 * 24);\r\n      };\r\n      \r\n      const actualDays = getActualDateSpan();\r\n      \r\n      switch (range) {\r\n        case 'today':\r\n        case 'yesterday':\r\n        case 'week':\r\n        case 'lastWeek':\r\n        case 'month':\r\n        case 'lastMonth':\r\n          return { level: 'daily', format: { day: '2-digit', month: 'short' } as const };\r\n        case 'last90Days':\r\n          // If actual span is less than 14 days, use daily\r\n          return actualDays < 14 \r\n            ? { level: 'daily', format: { day: '2-digit', month: 'short' } as const }\r\n            : { level: 'weekly', format: { day: '2-digit', month: 'short' } as const };\r\n        case 'quarter':\r\n          // If actual span is less than 14 days, use daily aggregation\r\n          return actualDays < 14 \r\n            ? { level: 'daily', format: { day: '2-digit', month: 'short' } as const }\r\n            : { level: 'weekly', format: { day: '2-digit', month: 'short' } as const };\r\n        case 'yearToDate':\r\n        case 'year':\r\n          // If actual span is less than 14 days, use daily\r\n          return actualDays < 14 \r\n            ? { level: 'daily', format: { day: '2-digit', month: 'short' } as const }\r\n            : { level: 'monthly', format: { month: 'short', year: '2-digit' } as const };\r\n        case 'custom':\r\n          // For custom ranges, determine based on date span\r\n          if (customDateRange?.start && customDateRange?.end) {\r\n            const daysDiff = Math.abs(customDateRange.end.getTime() - customDateRange.start.getTime()) / (1000 * 60 * 60 * 24);\r\n            if (daysDiff < 14) return { level: 'daily', format: { day: '2-digit', month: 'short' } as const };\r\n            if (daysDiff <= 90) return { level: 'weekly', format: { day: '2-digit', month: 'short' } as const };\r\n            return { level: 'monthly', format: { month: 'short', year: '2-digit' } as const };\r\n          }\r\n          return { level: 'daily', format: { day: '2-digit', month: 'short' } as const };\r\n        default:\r\n          return { level: 'daily', format: { day: '2-digit', month: 'short' } as const };\r\n      }\r\n    };\r\n\r\n    const { level, format } = getAggregationConfig(rangeKey);\r\n    \r\n    // Group enquiries by aggregation level\r\n    const aggregatedGroups = new Map<string, { count: number; startDate: Date; endDate: Date; isWeekend?: boolean }>();\r\n    \r\n    filtered.forEach(enquiry => {\r\n      const createdDate = parseDate(enquiry.Date_Created);\r\n      if (!createdDate) return;\r\n      \r\n      let aggregationKey: string;\r\n      let startDate: Date;\r\n      let endDate: Date;\r\n      let isWeekend = false;\r\n      \r\n      if (level === 'daily') {\r\n        aggregationKey = createdDate.toISOString().split('T')[0];\r\n        startDate = endDate = new Date(createdDate);\r\n        const dayOfWeek = createdDate.getDay();\r\n        isWeekend = dayOfWeek === 0 || dayOfWeek === 6;\r\n      } else if (level === 'weekly') {\r\n        // Get start of week (Monday)\r\n        const monday = new Date(createdDate);\r\n        monday.setDate(createdDate.getDate() - ((createdDate.getDay() + 6) % 7));\r\n        monday.setHours(0, 0, 0, 0);\r\n        \r\n        const sunday = new Date(monday);\r\n        sunday.setDate(monday.getDate() + 6);\r\n        sunday.setHours(23, 59, 59, 999);\r\n        \r\n        aggregationKey = monday.toISOString().split('T')[0];\r\n        startDate = monday;\r\n        endDate = sunday;\r\n      } else { // monthly\r\n        const firstDay = new Date(createdDate.getFullYear(), createdDate.getMonth(), 1);\r\n        const lastDay = new Date(createdDate.getFullYear(), createdDate.getMonth() + 1, 0);\r\n        \r\n        aggregationKey = `${createdDate.getFullYear()}-${(createdDate.getMonth() + 1).toString().padStart(2, '0')}`;\r\n        startDate = firstDay;\r\n        endDate = lastDay;\r\n      }\r\n      \r\n      const existing = aggregatedGroups.get(aggregationKey);\r\n      aggregatedGroups.set(aggregationKey, {\r\n        count: (existing?.count || 0) + 1,\r\n        startDate: existing?.startDate || startDate,\r\n        endDate: existing?.endDate || endDate,\r\n        isWeekend: level === 'daily' ? isWeekend : undefined\r\n      });\r\n    });\r\n    \r\n    // Convert to chart data format\r\n    const chartData = Array.from(aggregatedGroups.entries())\r\n      .map(([key, data]) => {\r\n        let formattedDate: string;\r\n        \r\n        if (level === 'daily') {\r\n          formattedDate = data.startDate.toLocaleDateString('en-GB', format);\r\n        } else if (level === 'weekly') {\r\n          const startFormatted = data.startDate.toLocaleDateString('en-GB', { day: '2-digit', month: 'short' });\r\n          const endFormatted = data.endDate.toLocaleDateString('en-GB', { day: '2-digit', month: 'short' });\r\n          formattedDate = `${startFormatted} - ${endFormatted}`;\r\n        } else {\r\n          formattedDate = data.startDate.toLocaleDateString('en-GB', format);\r\n        }\r\n        \r\n        return {\r\n          date: key,\r\n          count: data.count,\r\n          formattedDate,\r\n          isWeekend: data.isWeekend,\r\n          aggregationLevel: level,\r\n          startDate: data.startDate,\r\n          endDate: data.endDate\r\n        };\r\n      })\r\n      .sort((a, b) => a.date.localeCompare(b.date));\r\n    \r\n    return chartData;\r\n  }, [filtered, rangeKey, customDateRange]);\r\n\r\n  // Function to check if a team member is on annual leave for a specific date\r\n  const isOnAnnualLeave = useCallback((memberInitials: string, checkDate: string): boolean => {\r\n    if (!annualLeave) return false;\r\n    \r\n    const checkDateObj = new Date(checkDate);\r\n    const memberLeave = annualLeave.filter(record => \r\n      record.fe === memberInitials || \r\n      record.fe?.toLowerCase().includes(memberInitials.toLowerCase())\r\n    );\r\n    \r\n    return memberLeave.some(record => {\r\n      const startDate = new Date(record.start_date);\r\n      const endDate = new Date(record.end_date);\r\n      return checkDateObj >= startDate && checkDateObj <= endDate;\r\n    });\r\n  }, [annualLeave]);\r\n\r\n  // Daily summary calculations for collapsible sections\r\n  const dailySummaries = useMemo(() => {\r\n    const summaries = new Map<string, {\r\n      unclaimed: number;\r\n      claimed: number;\r\n      triaged: number;\r\n      topClaimers: Array<{ initials: string; count: number; display: string }>;\r\n      nonClaimers: Array<{ initials: string; display: string; onLeave: boolean }>;\r\n      totalEnquiries: number;\r\n    }>();\r\n\r\n    // Get all active team members for non-claimer analysis\r\n    const activeTeamMembers = teamMembers.filter((member: TeamMember) => member.isActive);\r\n\r\n    dayGroups.forEach(({ date, items }) => {\r\n      let unclaimed = 0;\r\n      let claimed = 0;\r\n      let triaged = 0;\r\n      const claimerCounts = new Map<string, { count: number; display: string }>();\r\n\r\n      // Analyze each enquiry in the day\r\n      items.forEach((enquiry: any) => {\r\n        const poc = enquiry.Point_of_Contact?.trim();\r\n        const status = enquiry.Status?.toLowerCase();\r\n        const callTaker = enquiry.Call_Taker?.trim();\r\n\r\n        // Count as triaged if it has a clear status indicating processing\r\n        if (status && ['completed', 'closed', 'resolved', 'triaged', 'processed'].includes(status)) {\r\n          triaged++;\r\n        }\r\n\r\n        // Count as claimed if assigned to someone (POC or Call Taker)\r\n        if (poc || callTaker) {\r\n          claimed++;\r\n          \r\n          // Track who claimed it (prefer POC over Call Taker)\r\n          const claimer = poc || callTaker;\r\n          if (claimer) {\r\n            const initials = getInitials(claimer);\r\n            const member = teamMembers.find((m: TeamMember) => \r\n              m.initials === initials || \r\n              m.email?.toLowerCase() === claimer.toLowerCase() ||\r\n              m.normalizedName.includes(claimer.toLowerCase())\r\n            );\r\n            \r\n            if (member) {\r\n              const existing = claimerCounts.get(member.initials) || { count: 0, display: member.display };\r\n              claimerCounts.set(member.initials, { \r\n                count: existing.count + 1, \r\n                display: member.display \r\n              });\r\n            }\r\n          }\r\n        } else {\r\n          unclaimed++;\r\n        }\r\n      });\r\n\r\n      // Get top 3 claimers for this day\r\n      const topClaimers = Array.from(claimerCounts.entries())\r\n        .map(([initials, data]) => ({ initials, ...data }))\r\n        .sort((a, b) => b.count - a.count)\r\n        .slice(0, 3);\r\n\r\n      // Find non-claimers (active team members who didn't claim any enquiries)\r\n      const claimerInitials = new Set(claimerCounts.keys());\r\n      const nonClaimers = activeTeamMembers\r\n        .filter((member: TeamMember) => !claimerInitials.has(member.initials))\r\n        .map((member: TeamMember) => ({\r\n          initials: member.initials,\r\n          display: member.display,\r\n          onLeave: isOnAnnualLeave(member.initials, date)\r\n        }));\r\n\r\n      summaries.set(date, {\r\n        unclaimed,\r\n        claimed,\r\n        triaged,\r\n        topClaimers,\r\n        nonClaimers,\r\n        totalEnquiries: items.length\r\n      });\r\n    });\r\n\r\n    return summaries;\r\n  }, [dayGroups, teamMembers]);\r\n\r\n  // Function to toggle day collapse state\r\n  const toggleDayCollapse = useCallback((date: string) => {\r\n    setCollapsedDays(prev => {\r\n      const newSet = new Set(prev);\r\n      if (newSet.has(date)) {\r\n        newSet.delete(date);\r\n      } else {\r\n        newSet.add(date);\r\n      }\r\n      return newSet;\r\n    });\r\n  }, []);\r\n\r\n  // Hover highlight for fee earner within a day group\r\n  const [hoverHighlight, setHoverHighlight] = useState<{ date: string; poc: string } | null>(null);\r\n  const [hoveredDay, setHoveredDay] = useState<string | null>(null);\r\n  const [dayFilters, setDayFilters] = useState<Record<string, { name: string; poc: string; taker: string; status: string }>>({});\r\n  \r\n  // Collapsible day sections - track which days are collapsed (default: all collapsed)\r\n  const [collapsedDays, setCollapsedDays] = useState<Set<string>>(new Set());\r\n\r\n  // Initialize all days as collapsed by default\r\n  const initializeCollapsedDays = useCallback(() => {\r\n    const allDays = new Set<string>();\r\n    dayGroups.forEach(group => {\r\n      allDays.add(group.date);\r\n    });\r\n    setCollapsedDays(allDays);\r\n  }, [dayGroups]);\r\n\r\n  // Initialize collapsed state when dayGroups change\r\n  useEffect(() => {\r\n    initializeCollapsedDays();\r\n  }, [initializeCollapsedDays]);\r\n\r\n  // Migration modal state (bespoke, report-local)\r\n  type DraftEnquiry = {\r\n    aow: string;\r\n    moc: string;\r\n    first: string;\r\n    last: string;\r\n    email: string;\r\n    phone?: string;\r\n    notes?: string;\r\n    tow?: string;\r\n    rep?: string;\r\n    poc?: string;\r\n    value?: string;\r\n    rating?: string;\r\n    rank?: string;\r\n    contact_referrer?: string;\r\n    company_referrer?: string;\r\n    gclid?: string;\r\n    source?: string;\r\n    url?: string;\r\n    // Missing fields from new schema\r\n    stage?: string;\r\n    claim?: string; // datetime as string\r\n    pitch?: string; // int as string for form input\r\n    acid?: string;\r\n    card_id?: string;\r\n  };\r\n  const [migrationModalOpen, setMigrationModalOpen] = useState(false);\r\n  const [migrationLegacy, setMigrationLegacy] = useState<any | null>(null);\r\n  const [migrationDraft, setMigrationDraft] = useState<DraftEnquiry | null>(null);\r\n  const [migrationSubmitting, setMigrationSubmitting] = useState(false);\r\n  const [migrationError, setMigrationError] = useState<string | null>(null);\r\n  const [manualMigrationOverrides, setManualMigrationOverrides] = useState<Map<string, { status: 'migrated' | 'partial' | 'not-migrated'; instructionsId?: number }>>(new Map());\r\n\r\n  const buildDraftFromLegacy = useCallback((raw: any): DraftEnquiry => {\r\n    const pick = (obj: any, keys: string[]): string => {\r\n      for (const k of keys) {\r\n        const v = obj?.[k];\r\n        if (v != null && String(v).trim().length > 0) return String(v).trim();\r\n      }\r\n      return '';\r\n    };\r\n\r\n    // Clean up Source vs Method of Contact confusion\r\n    const cleanSourceAndMOC = (rawSource: string, rawMOC: string) => {\r\n      const source = rawSource?.toLowerCase() || '';\r\n      const moc = rawMOC?.toLowerCase() || '';\r\n      \r\n      // Define pure marketing sources\r\n      const marketingSources = [\r\n        'organic search', 'google ads', 'facebook lead ads', 'facebook ads',\r\n        'linkedin ads', 'instagram ads', 'youtube ads', 'bing ads',\r\n        'referral', 'direct', 'social media', 'email marketing',\r\n        'seo', 'ppc', 'affiliate', 'partnership'\r\n      ];\r\n      \r\n      // Define pure contact methods\r\n      const contactMethods = [\r\n        'phone call', 'phone', 'telephone', 'call',\r\n        'email', 'website form', 'contact form', 'online form',\r\n        'live chat', 'chatgpt', 'chat', 'in-person', 'walk-in'\r\n      ];\r\n      \r\n      // If source looks like a contact method, move it to MOC\r\n      let cleanedSource = source;\r\n      let cleanedMOC = moc;\r\n      \r\n      if (contactMethods.some(method => source.includes(method))) {\r\n        cleanedMOC = source;\r\n        cleanedSource = moc || 'direct';\r\n      }\r\n      \r\n      // Handle website form specifically (could be both)\r\n      if (source.includes('website form') || source.includes('contact form')) {\r\n        cleanedMOC = 'website form';\r\n        cleanedSource = cleanedSource.replace(/website form|contact form/gi, '').trim() || 'direct';\r\n      }\r\n      \r\n      // Handle ChatGPT specifically\r\n      if (source.includes('chatgpt') || source.includes('chat')) {\r\n        cleanedMOC = 'live chat';\r\n        cleanedSource = cleanedSource.replace(/chatgpt|chat/gi, '').trim() || 'direct';\r\n      }\r\n      \r\n      // Default fallbacks\r\n      if (!cleanedSource) cleanedSource = 'direct';\r\n      if (!cleanedMOC) cleanedMOC = 'website form';\r\n      \r\n      return {\r\n        source: cleanedSource,\r\n        moc: cleanedMOC\r\n      };\r\n    };\r\n\r\n    const rawSource = pick(raw, ['Ultimate_Source', 'source', 'Source']);\r\n    const rawMOC = pick(raw, ['Method_of_Contact', 'moc', 'Method', 'Channel']);\r\n    const { source, moc } = cleanSourceAndMOC(rawSource, rawMOC);\r\n    \r\n    const aow = pick(raw, ['Area_of_Work', 'aow', 'Service', 'Area', 'Practice']);\r\n    const first = pick(raw, ['First_Name', 'first', 'First']);\r\n    const last = pick(raw, ['Last_Name', 'last', 'Last']);\r\n    const email = pick(raw, ['Email', 'email', 'Email_Address']);\r\n    const phone = pick(raw, ['Phone_Number', 'Secondary_Phone', 'Phone', 'Telephone', 'phone', 'tel']);\r\n    const notes = pick(raw, ['Initial_first_call_notes', 'Notes', 'Description', 'Message', 'notes']);\r\n    const tow = pick(raw, ['Type_of_Work', 'tow']);\r\n    const rep = pick(raw, ['Call_Taker', 'rep']);\r\n    const poc = pick(raw, ['Point_of_Contact', 'poc']);\r\n    const value = pick(raw, ['Value', 'value']);\r\n    const rating = pick(raw, ['Rating', 'rating']);\r\n    const rank = pick(raw, ['Gift_Rank', 'rank']);\r\n    const contact_referrer = pick(raw, ['Contact_Referrer', 'contact_referrer']);\r\n    const company_referrer = pick(raw, ['Referring_Company', 'company_referrer']);\r\n    const gclid = pick(raw, ['GCLID', 'gclid']);\r\n    const url = pick(raw, ['Referral_URL', 'Website', 'url']);\r\n    \r\n    // Extract missing fields\r\n    const stage = pick(raw, ['Stage', 'status', 'stage']) || 'pending'; // default stage\r\n    const claim = pick(raw, ['Claim_Date', 'claim']); // datetime field\r\n    const pitch = pick(raw, ['Pitch', 'pitch']) || '0'; // int field\r\n    const acid = pick(raw, ['ID', 'id', 'ACID', 'acid']); // Legacy ID maps to acid\r\n    const card_id = pick(raw, ['Card_ID', 'card_id', 'CardID']);\r\n    \r\n    // Enhance notes with additional legacy data that doesn't have direct mapping\r\n    let enhancedNotes = notes;\r\n    const additionalInfo = [];\r\n    \r\n    // Add data cleaning info if source/MOC were corrected\r\n    if (rawSource !== source || rawMOC !== moc) {\r\n      additionalInfo.push(`Data cleaned: Original Source=\"${rawSource}\", Original MOC=\"${rawMOC}\"`);\r\n    }\r\n    \r\n    // Add company/title if present\r\n    if (raw.Company) additionalInfo.push(`Company: ${raw.Company}`);\r\n    if (raw.Title) additionalInfo.push(`Title: ${raw.Title}`);\r\n    if (raw.Website && !url) additionalInfo.push(`Website: ${raw.Website}`);\r\n    \r\n    // Add address information if present\r\n    const addressParts = [\r\n      raw.Unit_Building_Name_or_Number,\r\n      raw.Mailing_Street,\r\n      raw.Mailing_Street_2,\r\n      raw.Mailing_Street_3,\r\n      raw.City,\r\n      raw.Mailing_County,\r\n      raw.Postal_Code,\r\n      raw.Country\r\n    ].filter(Boolean);\r\n    if (addressParts.length > 0) {\r\n      additionalInfo.push(`Address: ${addressParts.join(', ')}`);\r\n    }\r\n    \r\n    // Add marketing/campaign info if present\r\n    if (raw.Campaign) additionalInfo.push(`Campaign: ${raw.Campaign}`);\r\n    if (raw.Ad_Group) additionalInfo.push(`Ad Group: ${raw.Ad_Group}`);\r\n    if (raw.Search_Keyword) additionalInfo.push(`Keywords: ${raw.Search_Keyword}`);\r\n    if (raw.Tags) additionalInfo.push(`Tags: ${raw.Tags}`);\r\n    if (raw.Do_not_Market) additionalInfo.push(`Do Not Market: ${raw.Do_not_Market}`);\r\n    if (raw.DOB) additionalInfo.push(`DOB: ${raw.DOB}`);\r\n    if (raw.Matter_Ref) additionalInfo.push(`Matter Ref: ${raw.Matter_Ref}`);\r\n    \r\n    if (additionalInfo.length > 0) {\r\n      enhancedNotes = enhancedNotes ? \r\n        `${enhancedNotes}\\n\\n--- Legacy Data ---\\n${additionalInfo.join('\\n')}` :\r\n        `--- Legacy Data ---\\n${additionalInfo.join('\\n')}`;\r\n    }\r\n    \r\n    return { \r\n      aow, moc, first, last, email, phone, \r\n      notes: enhancedNotes, tow, rep, poc, value, rating, rank,\r\n      contact_referrer, company_referrer, gclid, source, url,\r\n      stage, claim, pitch, acid, card_id\r\n    };\r\n  }, []);\r\n\r\n  const openMigrationModal = useCallback((legacy: any) => {\r\n    setMigrationLegacy(legacy);\r\n    setMigrationDraft(buildDraftFromLegacy(legacy));\r\n    setMigrationError(null);\r\n    setMigrationModalOpen(true);\r\n  }, [buildDraftFromLegacy]);\r\n\r\n  const closeMigrationModal = useCallback(() => {\r\n    setMigrationModalOpen(false);\r\n    setMigrationLegacy(null);\r\n    setMigrationDraft(null);\r\n    setMigrationSubmitting(false);\r\n    setMigrationError(null);\r\n  }, []);\r\n\r\n  const submitMigration = useCallback(async () => {\r\n    if (!migrationDraft) return;\r\n    setMigrationSubmitting(true);\r\n    setMigrationError(null);\r\n    try {\r\n      const resp = await fetch('/processEnquiry?source=migration', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(migrationDraft),\r\n      });\r\n      if (!resp.ok) {\r\n        const txt = await resp.text();\r\n        throw new Error(txt || `HTTP ${resp.status}`);\r\n      }\r\n      // Mark as migrated locally for immediate feedback\r\n      const legacyId = migrationLegacy?.ID ? String(migrationLegacy.ID) : undefined;\r\n      if (legacyId) {\r\n        setManualMigrationOverrides((prev) => {\r\n          const next = new Map(prev);\r\n          next.set(legacyId, { status: 'migrated' });\r\n          return next;\r\n        });\r\n      }\r\n      closeMigrationModal();\r\n    } catch (e: any) {\r\n      setMigrationError(e?.message ? String(e.message) : 'Migration failed');\r\n    } finally {\r\n      setMigrationSubmitting(false);\r\n    }\r\n  }, [migrationDraft, migrationLegacy, closeMigrationModal]);\r\n\r\n  // Role and team filters\r\n  const handleRoleToggle = (role: string) => {\r\n    const updated = new Set(selectedRoles);\r\n    if (updated.has(role)) updated.delete(role);\r\n    else updated.add(role);\r\n    setSelectedRoles(updated);\r\n  };\r\n\r\n  const handleTeamToggle = (team: string) => {\r\n    const updated = new Set(selectedTeams);\r\n    if (updated.has(team)) updated.delete(team);\r\n    else updated.add(team);\r\n    setSelectedTeams(updated);\r\n  };\r\n\r\n  const updateDayFilter = useCallback((date: string, key: 'name' | 'poc' | 'taker' | 'status', value: string) => {\r\n    setDayFilters((prev) => {\r\n      const current = prev[date] ?? EMPTY_DAY_FILTER;\r\n      const next = { ...current, [key]: value };\r\n      const hasAny = Object.values(next).some((v) => v.trim().length > 0);\r\n      if (!hasAny) {\r\n        const { [date]: _omit, ...rest } = prev;\r\n        return rest;\r\n      }\r\n      return { ...prev, [date]: next };\r\n    });\r\n  }, []);\r\n\r\n  const handleRangeSelect = (key: RangeKey) => {\r\n    if (key === 'custom') {\r\n      setCustomDateRange((prev) => {\r\n        if (prev && prev.start && prev.end) {\r\n          return prev;\r\n        }\r\n        const fallbackStart = range ? new Date(range.start) : new Date();\r\n        const fallbackEnd = range ? new Date(range.end) : new Date();\r\n        return { start: fallbackStart, end: fallbackEnd };\r\n      });\r\n    } else {\r\n      setCustomDateRange(null);\r\n    }\r\n    setRangeKey(key);\r\n  };\r\n\r\n  // Helper for range button active state\r\n  const isActive = (key: string) => rangeKey === key;\r\n\r\n  const handleCustomDateChange = (position: 'start' | 'end') => (date?: Date | null) => {\r\n    setCustomDateRange((prev) => {\r\n      const next = prev ? { ...prev } : { start: null as Date | null, end: null as Date | null };\r\n      next[position] = date ? new Date(date) : null;\r\n      return next;\r\n    });\r\n    setRangeKey('custom');\r\n  };\r\n\r\n  const handleClearTeams = () => {\r\n    setSelectedTeams(new Set());\r\n  };\r\n\r\n  const handleClearRoles = () => {\r\n    setSelectedRoles(new Set());\r\n  };\r\n\r\n  // Refresh data manually\r\n  const handleRefresh = () => {\r\n    if (triggerRefresh) {\r\n      triggerRefresh();\r\n      setTimeElapsed(0); // Reset timer on manual refresh\r\n    }\r\n  };\r\n\r\n  // Reassignment functionality\r\n  const teamMemberOptions = useMemo(() => {\r\n    return teamMembers\r\n      .filter(member => member.isActive)\r\n      .map(member => ({\r\n        value: member.email || member.display,\r\n        text: `${member.display} (${member.initials})`,\r\n        initials: member.initials,\r\n        email: member.email\r\n      }));\r\n  }, [teamMembers]);\r\n\r\n  const handleReassignClick = useCallback((enquiryId: string, event: React.MouseEvent) => {\r\n    event.stopPropagation();\r\n    const rect = event.currentTarget.getBoundingClientRect();\r\n    setReassignmentDropdown({\r\n      enquiryId,\r\n      x: rect.left,\r\n      y: rect.bottom + 5\r\n    });\r\n  }, []);\r\n\r\n  const handleReassignmentSelect = useCallback(async (selectedValue: string) => {\r\n    if (!selectedValue || !reassignmentDropdown) return;\r\n    \r\n    const selectedOption = teamMemberOptions.find(option => option.value === selectedValue);\r\n    if (!selectedOption) return;\r\n    \r\n    setIsReassigning(true);\r\n    setReassignmentMessage(null);\r\n    \r\n    try {\r\n      const response = await fetch('/api/updateEnquiryPOC', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          ID: reassignmentDropdown.enquiryId,\r\n          Point_of_Contact: selectedValue\r\n        })\r\n      });\r\n\r\n      const result = await response.json();\r\n      \r\n      if (response.ok && result.success) {\r\n        setReassignmentMessage({ \r\n          type: 'success', \r\n          text: `Successfully reassigned to ${selectedOption.text}` \r\n        });\r\n        \r\n        // Update the local data to reflect the change immediately\r\n        if (triggerRefresh) {\r\n          setTimeout(() => triggerRefresh(), 500); // Small delay to allow DB update\r\n        }\r\n      } else {\r\n        throw new Error(result.message || 'Failed to reassign enquiry');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error reassigning enquiry:', error);\r\n      setReassignmentMessage({ \r\n        type: 'error', \r\n        text: `Failed to reassign: ${error instanceof Error ? error.message : 'Unknown error'}` \r\n      });\r\n    } finally {\r\n      setIsReassigning(false);\r\n      setReassignmentDropdown(null);\r\n      \r\n      // Clear message after 3 seconds\r\n      setTimeout(() => setReassignmentMessage(null), 3000);\r\n    }\r\n  }, [reassignmentDropdown, triggerRefresh, teamMemberOptions]);\r\n\r\n  const closeReassignmentDropdown = useCallback(() => {\r\n    setReassignmentDropdown(null);\r\n  }, []);\r\n\r\n  // Close dropdown when clicking outside\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      if (reassignmentDropdown) {\r\n        const target = event.target as Element;\r\n        if (!target.closest('.reassignment-dropdown')) {\r\n          closeReassignmentDropdown();\r\n        }\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => document.removeEventListener('mousedown', handleClickOutside);\r\n  }, [reassignmentDropdown, closeReassignmentDropdown]);\r\n\r\n  return (\r\n    <div style={containerStyle(isDarkMode)}>\r\n      {/* Active Filters Indicator */}\r\n      {(sourceFilter || mocFilter || pocFilter) && (\r\n        <div style={{\r\n          marginBottom: 16,\r\n          padding: '12px 16px',\r\n          backgroundColor: isDarkMode ? 'rgba(135, 206, 255, 0.1)' : 'rgba(54, 144, 206, 0.1)',\r\n          borderLeft: `4px solid ${isDarkMode ? colours.accent : colours.highlight}`,\r\n          borderRadius: '0 8px 8px 0',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          gap: 12,\r\n          fontSize: '14px',\r\n          color: isDarkMode ? colours.dark.text : colours.light.text\r\n        }}>\r\n          <span style={{ fontWeight: 600, color: isDarkMode ? colours.accent : colours.highlight }}>\r\n            Active Filters:\r\n          </span>\r\n          <div style={{ display: 'flex', gap: 8, flexWrap: 'wrap' }}>\r\n            {sourceFilter && (\r\n              <span style={{\r\n                padding: '4px 8px',\r\n                backgroundColor: isDarkMode ? 'rgba(135, 206, 255, 0.2)' : 'rgba(54, 144, 206, 0.2)',\r\n                borderRadius: '4px',\r\n                border: `1px solid ${isDarkMode ? colours.accent : colours.highlight}`,\r\n                cursor: 'pointer'\r\n              }}\r\n              onClick={() => setSourceFilter(null)}\r\n              title=\"Click to remove filter\">\r\n                Source: {sourceFilter} ×\r\n              </span>\r\n            )}\r\n            {mocFilter && (\r\n              <span style={{\r\n                padding: '4px 8px',\r\n                backgroundColor: isDarkMode ? 'rgba(135, 206, 255, 0.2)' : 'rgba(54, 144, 206, 0.2)',\r\n                borderRadius: '4px',\r\n                border: `1px solid ${isDarkMode ? colours.accent : colours.highlight}`,\r\n                cursor: 'pointer'\r\n              }}\r\n              onClick={() => setMocFilter(null)}\r\n              title=\"Click to remove filter\">\r\n                Contact: {mocFilter} ×\r\n              </span>\r\n            )}\r\n            {pocFilter && (\r\n              <span style={{\r\n                padding: '4px 8px',\r\n                backgroundColor: isDarkMode ? 'rgba(135, 206, 255, 0.2)' : 'rgba(54, 144, 206, 0.2)',\r\n                borderRadius: '4px',\r\n                border: `1px solid ${isDarkMode ? colours.accent : colours.highlight}`,\r\n                cursor: 'pointer'\r\n              }}\r\n              onClick={() => setPocFilter(null)}\r\n              title=\"Click to remove filter\">\r\n                Fee Earner: {pocFilter} ×\r\n              </span>\r\n            )}\r\n          </div>\r\n          <button\r\n            onClick={() => {\r\n              setSourceFilter(null);\r\n              setMocFilter(null);\r\n              setPocFilter(null);\r\n            }}\r\n            style={{\r\n              marginLeft: 'auto',\r\n              padding: '4px 8px',\r\n              backgroundColor: 'transparent',\r\n              border: `1px solid ${isDarkMode ? colours.accent : colours.highlight}`,\r\n              borderRadius: '4px',\r\n              color: isDarkMode ? colours.accent : colours.highlight,\r\n              cursor: 'pointer',\r\n              fontSize: '12px'\r\n            }}\r\n            title=\"Clear all filters\"\r\n          >\r\n            Clear All\r\n          </button>\r\n        </div>\r\n      )}\r\n      <div style={surface(isDarkMode)}>\r\n        <div style={{ display: 'flex', flexDirection: 'column', gap: 16 }}>\r\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', flexWrap: 'wrap', gap: 12 }}>\r\n            {showCustomPickers ? (\r\n              <div style={{ display: 'flex', gap: 8 }}>\r\n                <DatePicker\r\n                  label=\"From\"\r\n                  styles={getDatePickerStyles(isDarkMode)}\r\n                  value={customStartValue || undefined}\r\n                  onSelectDate={handleCustomDateChange('start')}\r\n                  allowTextInput\r\n                  firstDayOfWeek={DayOfWeek.Monday}\r\n                  formatDate={formatDateForPicker}\r\n                  parseDateFromString={parseDatePickerInput}\r\n                />\r\n                <DatePicker\r\n                  label=\"To\"\r\n                  styles={getDatePickerStyles(isDarkMode)}\r\n                  value={customEndValue || undefined}\r\n                  onSelectDate={handleCustomDateChange('end')}\r\n                  allowTextInput\r\n                  firstDayOfWeek={DayOfWeek.Monday}\r\n                  formatDate={formatDateForPicker}\r\n                  parseDateFromString={parseDatePickerInput}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <div style={{ display: 'flex', gap: 8 }}>\r\n                <button\r\n                  type=\"button\"\r\n                  style={dateStampButtonStyle(isDarkMode)}\r\n                  onClick={() => handleRangeSelect('custom')}\r\n                  title=\"Click to customise the start date\"\r\n                  onMouseEnter={(e) => {\r\n                    e.currentTarget.style.background = isDarkMode ? 'rgba(30, 41, 59, 0.86)' : 'rgba(248, 250, 252, 1)';\r\n                    e.currentTarget.style.transform = 'translateY(-1px)';\r\n                  }}\r\n                  onMouseLeave={(e) => {\r\n                    e.currentTarget.style.background = isDarkMode ? 'rgba(15, 23, 42, 0.8)' : 'rgba(255, 255, 255, 0.95)';\r\n                    e.currentTarget.style.transform = 'translateY(0)';\r\n                  }}\r\n                >\r\n                  <span style={{ fontSize: 11, opacity: 0.7, fontWeight: 600 }}>From</span>\r\n                  <span style={{ fontSize: 16, fontWeight: 700 }}>{fromLabel}</span>\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  style={dateStampButtonStyle(isDarkMode)}\r\n                  onClick={() => handleRangeSelect('custom')}\r\n                  title=\"Click to customise the end date\"\r\n                  onMouseEnter={(e) => {\r\n                    e.currentTarget.style.background = isDarkMode ? 'rgba(30, 41, 59, 0.86)' : 'rgba(248, 250, 252, 1)';\r\n                    e.currentTarget.style.transform = 'translateY(-1px)';\r\n                  }}\r\n                  onMouseLeave={(e) => {\r\n                    e.currentTarget.style.background = isDarkMode ? 'rgba(15, 23, 42, 0.8)' : 'rgba(255, 255, 255, 0.95)';\r\n                    e.currentTarget.style.transform = 'translateY(0)';\r\n                  }}\r\n                >\r\n                  <span style={{ fontSize: 11, opacity: 0.7, fontWeight: 600 }}>To</span>\r\n                  <span style={{ fontSize: 16, fontWeight: 700 }}>{toLabel}</span>\r\n                </button>\r\n              </div>\r\n            )}\r\n\r\n            <div style={{ display: 'flex', gap: 8, alignItems: 'center' }}>\r\n              <div \r\n                style={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  gap: 6,\r\n                  padding: '6px 12px',\r\n                  borderRadius: 8,\r\n                  border: `1px solid ${isFetching ? (isDarkMode ? 'rgba(148, 163, 184, 0.3)' : 'rgba(148, 163, 184, 0.25)') : getRefreshIndicatorColor()}`,\r\n                  background: isDarkMode ? 'rgba(15, 23, 42, 0.8)' : 'rgba(255, 255, 255, 0.95)',\r\n                  fontSize: 12,\r\n                  fontWeight: 600,\r\n                  color: isDarkMode ? '#E2E8F0' : colours.missedBlue,\r\n                  transition: 'border-color 1s ease',\r\n                }}\r\n                title={\r\n                  isFetching \r\n                    ? 'Refreshing data...' \r\n                    : `Next auto-refresh in ${Math.floor((15 * 60 - timeElapsed) / 60)}m ${(15 * 60 - timeElapsed) % 60}s`\r\n                }\r\n              >\r\n                {isFetching ? (\r\n                  <>\r\n                    <div style={{\r\n                      width: 8,\r\n                      height: 8,\r\n                      borderRadius: '50%',\r\n                      background: isDarkMode ? 'rgba(148, 163, 184, 0.6)' : 'rgba(13, 47, 96, 0.5)',\r\n                    }} />\r\n                    Refreshing\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <div \r\n                      style={{ \r\n                        width: 8,\r\n                        height: 8,\r\n                        borderRadius: '50%',\r\n                        background: getRefreshIndicatorColor(),\r\n                        transition: 'background 1s ease',\r\n                      }}\r\n                    />\r\n                    {lastRefreshLabel}\r\n                  </>\r\n                )}\r\n              </div>\r\n\r\n              {triggerRefresh && (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={handleRefresh}\r\n                  disabled={isFetching}\r\n                  style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    width: 32,\r\n                    height: 32,\r\n                    borderRadius: 8,\r\n                    border: `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.24)' : 'rgba(13, 47, 96, 0.16)'}`,\r\n                    background: isDarkMode ? 'rgba(15, 23, 42, 0.8)' : 'rgba(255, 255, 255, 0.95)',\r\n                    color: isDarkMode ? '#E2E8F0' : colours.missedBlue,\r\n                    cursor: isFetching ? 'default' : 'pointer',\r\n                    opacity: isFetching ? 0.6 : 1,\r\n                    transition: 'all 0.2s ease',\r\n                  }}\r\n                  title={isFetching ? 'Refreshing data...' : 'Refresh datasets (auto-refreshes every 15 min)'}\r\n                  aria-label={isFetching ? 'Refreshing data' : 'Refresh datasets'}\r\n                  onMouseEnter={(e) => {\r\n                    if (!isFetching) {\r\n                      e.currentTarget.style.transform = 'translateY(-1px)';\r\n                      e.currentTarget.style.background = isDarkMode ? 'rgba(30, 41, 59, 0.86)' : 'rgba(248, 250, 252, 1)';\r\n                    }\r\n                  }}\r\n                  onMouseLeave={(e) => {\r\n                    if (!isFetching) {\r\n                      e.currentTarget.style.transform = 'translateY(0)';\r\n                      e.currentTarget.style.background = isDarkMode ? 'rgba(15, 23, 42, 0.8)' : 'rgba(255, 255, 255, 0.95)';\r\n                    }\r\n                  }}\r\n                >\r\n                  <Icon \r\n                    iconName=\"Refresh\" \r\n                    style={{ \r\n                      fontSize: 16,\r\n                      animation: isFetching ? 'spin 1s linear infinite' : 'none'\r\n                    }} \r\n                  />\r\n                </button>\r\n              )}\r\n\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => setShowRoleFilter(!showRoleFilter)}\r\n                style={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  width: 32,\r\n                  height: 32,\r\n                  borderRadius: 8,\r\n                  border: `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.24)' : 'rgba(13, 47, 96, 0.16)'}`,\r\n                  background: isDarkMode ? 'rgba(15, 23, 42, 0.8)' : 'rgba(255, 255, 255, 0.95)',\r\n                  color: showRoleFilter \r\n                    ? (isDarkMode ? '#60a5fa' : colours.highlight)\r\n                    : (isDarkMode ? 'rgba(148, 163, 184, 0.6)' : 'rgba(13, 47, 96, 0.5)'),\r\n                  cursor: 'pointer',\r\n                  transform: showRoleFilter ? 'translateY(-1px)' : 'translateY(0)',\r\n                  transition: 'all 0.2s ease',\r\n                }}\r\n                title={showRoleFilter ? 'Hide role filter' : 'Show role filter'}\r\n                aria-label={showRoleFilter ? 'Hide role filter' : 'Show role filter'}\r\n                onMouseEnter={(e) => {\r\n                  e.currentTarget.style.transform = 'translateY(-1px)';\r\n                  e.currentTarget.style.background = isDarkMode ? 'rgba(30, 41, 59, 0.86)' : 'rgba(248, 250, 252, 1)';\r\n                }}\r\n                onMouseLeave={(e) => {\r\n                  e.currentTarget.style.transform = showRoleFilter ? 'translateY(-1px)' : 'translateY(0)';\r\n                  e.currentTarget.style.background = isDarkMode ? 'rgba(15, 23, 42, 0.8)' : 'rgba(255, 255, 255, 0.95)';\r\n                }}\r\n              >\r\n                <Icon iconName=\"People\" style={{ fontSize: 16 }} />\r\n              </button>\r\n\r\n              <div style={{ position: 'relative' }}>\r\n                <button\r\n                  type=\"button\"\r\n                  onMouseEnter={() => setShowDatasetInfo(true)}\r\n                  onMouseLeave={() => setShowDatasetInfo(false)}\r\n                  style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    width: 32,\r\n                    height: 32,\r\n                    borderRadius: 8,\r\n                    border: `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.24)' : 'rgba(13, 47, 96, 0.16)'}`,\r\n                    background: isDarkMode ? 'rgba(15, 23, 42, 0.8)' : 'rgba(255, 255, 255, 0.95)',\r\n                    color: isDarkMode ? '#60a5fa' : colours.highlight,\r\n                    cursor: 'pointer',\r\n                    transform: showDatasetInfo ? 'translateY(-1px)' : 'translateY(0)',\r\n                    transition: 'all 0.2s ease',\r\n                  }}\r\n                  title=\"Dataset information\"\r\n                  aria-label=\"Dataset information\"\r\n                >\r\n                  <Icon iconName=\"Info\" style={{ fontSize: 16 }} />\r\n                </button>\r\n\r\n                {showDatasetInfo && (\r\n                  <div style={{\r\n                    position: 'absolute',\r\n                    top: '100%',\r\n                    right: 0,\r\n                    marginTop: 8,\r\n                    padding: '10px 12px',\r\n                    background: isDarkMode ? 'rgba(15, 23, 42, 0.98)' : 'rgba(255, 255, 255, 0.98)',\r\n                    border: `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.3)' : 'rgba(148, 163, 184, 0.25)'}`,\r\n                    borderRadius: 8,\r\n                    boxShadow: isDarkMode ? '0 8px 16px rgba(0, 0, 0, 0.4)' : '0 4px 12px rgba(0, 0, 0, 0.15)',\r\n                    fontSize: 11,\r\n                    lineHeight: 1.5,\r\n                    width: 240,\r\n                    zIndex: 1000,\r\n                    color: isDarkMode ? '#e2e8f0' : '#334155',\r\n                    textAlign: 'left',\r\n                  }}>\r\n                    <div style={{ fontWeight: 700, marginBottom: 8, fontSize: 13, color: isDarkMode ? '#60a5fa' : colours.highlight }}>\r\n                      Dataset Information\r\n                    </div>\r\n                    <div style={{ display: 'flex', flexDirection: 'column', gap: 6 }}>\r\n                      <div style={{ display: 'flex', justifyContent: 'space-between', gap: 12 }}>\r\n                        <span style={{ opacity: 0.8 }}>Enquiries:</span>\r\n                        <span style={{ fontWeight: 600 }}>Last 24 months</span>\r\n                      </div>\r\n                    </div>\r\n                    <div style={{\r\n                      marginTop: 10,\r\n                      paddingTop: 8,\r\n                      borderTop: `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.2)' : 'rgba(148, 163, 184, 0.3)'}`,\r\n                      fontSize: 11,\r\n                      opacity: 0.7,\r\n                      fontStyle: 'italic'\r\n                    }}>\r\n                      Data outside this range won't appear in metrics\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {dataDateRange && (\r\n            <div style={{ \r\n              padding: '8px 12px',\r\n              borderRadius: 8,\r\n              background: isDarkMode ? 'rgba(148, 163, 184, 0.08)' : 'rgba(13, 47, 96, 0.04)',\r\n              border: `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.16)' : 'rgba(13, 47, 96, 0.08)'}`,\r\n              fontSize: 12,\r\n              color: isDarkMode ? 'rgba(226, 232, 240, 0.85)' : 'rgba(13, 47, 96, 0.75)',\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              alignItems: 'center',\r\n              gap: 12\r\n            }}>\r\n              <span>\r\n                Available data: {dataDateRange.earliest.toLocaleDateString()} to {dataDateRange.latest.toLocaleDateString()} \r\n                ({enquiries?.length.toLocaleString()} total)\r\n              </span>\r\n              <span>{workingDaysLabel}</span>\r\n            </div>\r\n          )}\r\n\r\n          <div style={{ display: 'flex', flexWrap: 'wrap', gap: 8, alignItems: 'center' }}>\r\n            {quickRanges.map(r => {\r\n              const active = isActive(r.key);\r\n              return (\r\n                <DefaultButton\r\n                  key={r.key}\r\n                  text={r.label}\r\n                  onClick={() => handleRangeSelect(r.key)}\r\n                  styles={getRangeButtonStyles(isDarkMode, active, false)}\r\n                />\r\n              );\r\n            })}\r\n            {rangeKey !== 'all' && (\r\n              <button\r\n                onClick={() => handleRangeSelect('all')}\r\n                style={clearFilterButtonStyle(isDarkMode)}\r\n                title=\"Clear date range filter\"\r\n              >\r\n                <span style={{ fontSize: 16 }}>×</span>\r\n                Clear\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n          {showRoleFilter && (\r\n            <div style={{ display: 'flex', flexDirection: 'column', gap: 12 }}>\r\n              <div style={{ display: 'flex', flexWrap: 'wrap', gap: 8, alignItems: 'center' }}>\r\n                {ROLE_OPTIONS.map(({ key, label }) => (\r\n                  <DefaultButton\r\n                    key={key}\r\n                    text={label}\r\n                    onClick={() => handleRoleToggle(key)}\r\n                    styles={getRoleButtonStyles(isDarkMode, selectedRoles.has(key))}\r\n                  />\r\n                ))}\r\n                {selectedRoles.size > 0 && (\r\n                  <button\r\n                    onClick={handleClearRoles}\r\n                    style={clearFilterButtonStyle(isDarkMode)}\r\n                    title=\"Clear role filter\"\r\n                  >\r\n                    <span style={{ fontSize: 16 }}>×</span>\r\n                    Clear\r\n                  </button>\r\n                )}\r\n              </div>\r\n\r\n              <div style={{ display: 'flex', flexWrap: 'wrap', gap: 8, alignItems: 'center' }}>\r\n                {teamMembers\r\n                  .filter((member) => memberCounts.has(member.initials))\r\n                  .map((member) => {\r\n                    const count = memberCounts.get(member.initials) || 0;\r\n                    const isSelected = selectedTeams.has(member.initials);\r\n                    return (\r\n                      <DefaultButton\r\n                        key={member.initials}\r\n                        text={member.initials}\r\n                        onClick={() => handleTeamToggle(member.initials)}\r\n                        title={`${member.display} (${count} enquiries)`}\r\n                        styles={getTeamButtonStyles(isDarkMode, isSelected, count > 0)}\r\n                      />\r\n                    );\r\n                  })}\r\n                {selectedTeams.size > 0 && (\r\n                  <button\r\n                    onClick={handleClearTeams}\r\n                    style={clearFilterButtonStyle(isDarkMode)}\r\n                    title=\"Clear team filter\"\r\n                  >\r\n                    <span style={{ fontSize: 16 }}>×</span>\r\n                    Clear\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Reassignment status message */}\r\n        {reassignmentMessage && (\r\n          <MessageBar\r\n            messageBarType={reassignmentMessage.type === 'success' ? MessageBarType.success : MessageBarType.error}\r\n            onDismiss={() => setReassignmentMessage(null)}\r\n            styles={{\r\n              root: {\r\n                marginTop: 12,\r\n                borderRadius: 8,\r\n              }\r\n            }}\r\n          >\r\n            {reassignmentMessage.text}\r\n          </MessageBar>\r\n        )}\r\n\r\n        {/* Show data status */}\r\n        {enquiries === null && (\r\n          <div style={{ \r\n            marginTop: 12, \r\n            padding: 16, \r\n            borderRadius: 12, \r\n            background: isDarkMode ? 'rgba(220,38,38,0.12)' : 'rgba(220,38,38,0.08)',\r\n            border: isDarkMode ? '1px solid rgba(248,113,113,0.28)' : '1px solid rgba(220,38,38,0.18)',\r\n            color: isDarkMode ? '#fda4af' : '#b91c1c',\r\n            fontSize: 14\r\n          }}>\r\n            ⚠️ No enquiry data loaded. Click refresh or check console for errors.\r\n          </div>\r\n        )}\r\n        {enquiries && enquiries.length === 0 && (\r\n          <div style={{ \r\n            marginTop: 12, \r\n            padding: 16, \r\n            borderRadius: 12, \r\n            background: isDarkMode ? 'rgba(251,191,36,0.12)' : 'rgba(251,191,36,0.08)',\r\n            border: isDarkMode ? '1px solid rgba(251,191,36,0.28)' : '1px solid rgba(251,191,36,0.18)',\r\n            color: isDarkMode ? '#fcd34d' : '#d97706',\r\n            fontSize: 14\r\n          }}>\r\n            ℹ️ No enquiries found in database for the last 24 months. Check server logs or database.\r\n          </div>\r\n        )}\r\n        {enquiries && enquiries.length > 0 && filtered.length === 0 && (\r\n          <div style={{ \r\n            marginTop: 12, \r\n            padding: 16, \r\n            borderRadius: 12, \r\n            background: isDarkMode ? 'rgba(251,191,36,0.12)' : 'rgba(251,191,36,0.08)',\r\n            border: isDarkMode ? '1px solid rgba(251,191,36,0.28)' : '1px solid rgba(251,191,36,0.18)',\r\n            color: isDarkMode ? '#fcd34d' : '#d97706',\r\n            fontSize: 14\r\n          }}>\r\n            ℹ️ {enquiries.length} enquiries loaded, but none match the selected date range \"{currentRangeLabel}\". Try \"All\" to see all data.\r\n          </div>\r\n        )}\r\n\r\n        {/* Dashboard-style stat cards */}\r\n        <div style={{ marginTop: 12, display: 'grid', gridTemplateColumns: 'repeat(3, minmax(220px, 1fr))', gap: 12 }}>\r\n          {/* Total Enquiries */}\r\n          <div style={{\r\n            borderRadius: 12,\r\n            padding: 16,\r\n            background: isDarkMode ? 'linear-gradient(135deg, #0B1220 0%, #141C2C 100%)' : 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n            boxShadow: isDarkMode ? '0 4px 6px rgba(0, 0, 0, 0.3)' : '0 4px 6px rgba(0, 0, 0, 0.07)',\r\n            border: isDarkMode ? '1px solid rgba(148,163,184,0.18)' : '1px solid rgba(13,47,96,0.08)'\r\n          }}>\r\n            <div style={{ fontSize: 12, fontWeight: 700, opacity: 0.7, marginBottom: 6 }}>Enquiries</div>\r\n            <div style={{ fontSize: 28, fontWeight: 800, color: isDarkMode ? '#E2E8F0' : colours.missedBlue }}>\r\n              {filtered.length.toLocaleString()}\r\n            </div>\r\n            <div style={{ fontSize: 12, opacity: 0.8, marginTop: 6 }}>~ {Math.round(stats.perDay)} per working day</div>\r\n          </div>\r\n\r\n          {/* Claimed */}\r\n          <div style={{\r\n            borderRadius: 12,\r\n            padding: 16,\r\n            background: isDarkMode ? 'linear-gradient(135deg, #0B1220 0%, #12263A 100%)' : 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n            boxShadow: isDarkMode ? '0 4px 6px rgba(0, 0, 0, 0.3)' : '0 4px 6px rgba(0, 0, 0, 0.07)',\r\n            border: isDarkMode ? '1px solid rgba(148,163,184,0.18)' : '1px solid rgba(13,47,96,0.08)'\r\n          }}>\r\n            <div style={{ fontSize: 12, fontWeight: 700, opacity: 0.7, marginBottom: 6 }}>Claimed</div>\r\n            <div style={{ fontSize: 28, fontWeight: 800, color: isDarkMode ? '#E2E8F0' : colours.missedBlue }}>\r\n              {stats.claimed.toLocaleString()}\r\n            </div>\r\n            <div style={{ fontSize: 12, opacity: 0.8, marginTop: 6 }}>\r\n              {filtered.length ? Math.round((stats.claimed / filtered.length) * 100) : 0}% of total\r\n            </div>\r\n          </div>\r\n\r\n          {/* Unclaimed */}\r\n          <div style={{\r\n            borderRadius: 12,\r\n            padding: 16,\r\n            background: isDarkMode ? 'linear-gradient(135deg, #0B1220 0%, #2A1B1B 100%)' : 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n            boxShadow: isDarkMode ? '0 4px 6px rgba(0, 0, 0, 0.3)' : '0 4px 6px rgba(0, 0, 0, 0.07)',\r\n            border: isDarkMode ? '1px solid rgba(148,163,184,0.18)' : '1px solid rgba(13,47,96,0.08)'\r\n          }}>\r\n            <div style={{ fontSize: 12, fontWeight: 700, opacity: 0.7, marginBottom: 6 }}>Unclaimed</div>\r\n            <div style={{ fontSize: 28, fontWeight: 800, color: isDarkMode ? '#E2E8F0' : colours.missedBlue }}>\r\n              {stats.unclaimed.toLocaleString()}\r\n            </div>\r\n            <div style={{ fontSize: 12, opacity: 0.8, marginTop: 6 }}>\r\n              {filtered.length ? Math.round((stats.unclaimed / filtered.length) * 100) : 0}% of total\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Enquiries Over Time Line Chart */}\r\n        <div style={{\r\n          marginTop: 24,\r\n          borderRadius: 12,\r\n          padding: 20,\r\n          background: isDarkMode ? 'linear-gradient(135deg, #0B1220 0%, #141C2C 100%)' : 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n          boxShadow: isDarkMode ? '0 4px 6px rgba(0, 0, 0, 0.3)' : '0 4px 6px rgba(0, 0, 0, 0.07)',\r\n          border: isDarkMode ? '1px solid rgba(148,163,184,0.18)' : '1px solid rgba(13,47,96,0.08)'\r\n        }}>\r\n          <h3 style={{\r\n            margin: '0 0 16px 0',\r\n            fontSize: 18,\r\n            fontWeight: 700,\r\n            color: isDarkMode ? colours.accent : colours.blue,\r\n          }}>\r\n            Enquiries Over Time\r\n            <span style={{ \r\n              fontSize: 12, \r\n              fontWeight: 400, \r\n              opacity: 0.7, \r\n              marginLeft: 8 \r\n            }}>\r\n              ({lineChartData[0]?.aggregationLevel === 'daily' ? 'Daily' : \r\n                lineChartData[0]?.aggregationLevel === 'weekly' ? 'Weekly' : 'Monthly'})\r\n            </span>\r\n          </h3>\r\n          \r\n          {lineChartData.length === 0 ? (\r\n            <div style={{ \r\n              height: 300,\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              color: isDarkMode ? colours.dark.text : colours.light.text,\r\n              opacity: 0.7\r\n            }}>\r\n              No data in selected range.\r\n            </div>\r\n          ) : (\r\n            <ResponsiveContainer width=\"100%\" height={300}>\r\n              <LineChart data={lineChartData} margin={{ top: 20, right: 30, left: 20, bottom: 20 }}>\r\n                <CartesianGrid \r\n                  strokeDasharray=\"3 3\" \r\n                  stroke={isDarkMode ? 'rgba(148,163,184,0.2)' : 'rgba(15,23,42,0.1)'} \r\n                />\r\n                \r\n                {/* Weekend highlighting - only for daily view */}\r\n                {lineChartData[0]?.aggregationLevel === 'daily' && (() => {\r\n                  const weekendBlocks: JSX.Element[] = [];\r\n                  let weekendStart: number | null = null;\r\n                  \r\n                  lineChartData.forEach((dataPoint, index) => {\r\n                    if (dataPoint.isWeekend && weekendStart === null) {\r\n                      // Start of weekend\r\n                      weekendStart = index;\r\n                    } else if (!dataPoint.isWeekend && weekendStart !== null) {\r\n                      // End of weekend\r\n                      weekendBlocks.push(\r\n                        <ReferenceArea\r\n                          key={`weekend-${weekendStart}-${index}`}\r\n                          x1={lineChartData[weekendStart].formattedDate}\r\n                          x2={lineChartData[index - 1].formattedDate}\r\n                          fill={isDarkMode ? 'rgba(148,163,184,0.08)' : 'rgba(15,23,42,0.04)'}\r\n                          fillOpacity={1}\r\n                        />\r\n                      );\r\n                      weekendStart = null;\r\n                    }\r\n                  });\r\n                  \r\n                  // Handle case where data ends on a weekend\r\n                  if (weekendStart !== null) {\r\n                    weekendBlocks.push(\r\n                      <ReferenceArea\r\n                        key={`weekend-${weekendStart}-end`}\r\n                        x1={lineChartData[weekendStart].formattedDate}\r\n                        x2={lineChartData[lineChartData.length - 1].formattedDate}\r\n                        fill={isDarkMode ? 'rgba(148,163,184,0.08)' : 'rgba(15,23,42,0.04)'}\r\n                        fillOpacity={1}\r\n                      />\r\n                    );\r\n                  }\r\n                  \r\n                  return weekendBlocks;\r\n                })()}\r\n                \r\n                <XAxis \r\n                  dataKey=\"formattedDate\"\r\n                  stroke={isDarkMode ? colours.dark.text : colours.light.text}\r\n                  fontSize={11}\r\n                  fontFamily=\"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\"\r\n                  tick={{ fill: isDarkMode ? colours.dark.text : colours.light.text }}\r\n                />\r\n                <YAxis \r\n                  stroke={isDarkMode ? colours.dark.text : colours.light.text}\r\n                  fontSize={11}\r\n                  fontFamily=\"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\"\r\n                  tick={{ fill: isDarkMode ? colours.dark.text : colours.light.text }}\r\n                />\r\n                <Tooltip \r\n                  contentStyle={{\r\n                    backgroundColor: isDarkMode ? colours.dark.sectionBackground : colours.light.sectionBackground,\r\n                    border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n                    borderRadius: '8px',\r\n                    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                    boxShadow: isDarkMode ? '0 4px 12px rgba(0,0,0,0.3)' : '0 4px 12px rgba(0,0,0,0.1)',\r\n                    fontSize: '12px',\r\n                    fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\"\r\n                  }}\r\n                  labelFormatter={(label: any) => {\r\n                    // Find the data point from the chart data\r\n                    const dataPoint = lineChartData.find(d => d.formattedDate === label);\r\n                    if (!dataPoint) return label;\r\n                    \r\n                    const aggregationLabel = dataPoint.aggregationLevel === 'daily' ? 'Date' :\r\n                                           dataPoint.aggregationLevel === 'weekly' ? 'Week' : 'Month';\r\n                    const weekendLabel = dataPoint.isWeekend ? ' (Weekend)' : '';\r\n                    return `${aggregationLabel}: ${label}${weekendLabel}`;\r\n                  }}\r\n                  formatter={(value: any, name: any) => [value, 'Enquiries']}\r\n                />\r\n                \r\n                <Line \r\n                  type=\"monotone\" \r\n                  dataKey=\"count\" \r\n                  stroke={colours.blue} \r\n                  strokeWidth={3}\r\n                  connectNulls={false}\r\n                  dot={(props: any) => {\r\n                    const { cx, cy, payload, index } = props;\r\n                    const isDaily = payload?.aggregationLevel === 'daily';\r\n                    const isWeekend = payload?.isWeekend;\r\n                    \r\n                    // Check if this point is part of a weekend transition\r\n                    let isWeekendTransition = false;\r\n                    if (isDaily && typeof index === 'number' && lineChartData[index]) {\r\n                      const currentDate = new Date(lineChartData[index].date);\r\n                      const currentDay = currentDate.getDay();\r\n                      \r\n                      // Check connection to previous point\r\n                      if (index > 0) {\r\n                        const prevDate = new Date(lineChartData[index - 1].date);\r\n                        const prevDay = prevDate.getDay();\r\n                        isWeekendTransition = (prevDay === 5 && currentDay === 6) || (prevDay === 0 && currentDay === 1);\r\n                      }\r\n                      \r\n                      // Check connection to next point\r\n                      if (!isWeekendTransition && index < lineChartData.length - 1) {\r\n                        const nextDate = new Date(lineChartData[index + 1].date);\r\n                        const nextDay = nextDate.getDay();\r\n                        isWeekendTransition = (currentDay === 5 && nextDay === 6) || (currentDay === 0 && nextDay === 1);\r\n                      }\r\n                    }\r\n                    \r\n                    return (\r\n                      <g>\r\n                        <circle\r\n                          cx={cx}\r\n                          cy={cy}\r\n                          r={isDaily ? 4 : 5}\r\n                          fill={isDaily && isWeekend ? colours.greyText : colours.blue}\r\n                          stroke={isDarkMode ? colours.dark.sectionBackground : colours.light.sectionBackground}\r\n                          strokeWidth={2}\r\n                          opacity={isWeekendTransition ? 0.7 : 1}\r\n                        />\r\n                        {/* Add a subtle indicator for weekend transitions */}\r\n                        {isWeekendTransition && (\r\n                          <circle\r\n                            cx={cx}\r\n                            cy={cy}\r\n                            r={isDaily ? 6 : 7}\r\n                            fill=\"none\"\r\n                            stroke={isDarkMode ? 'rgba(135, 206, 255, 0.3)' : 'rgba(54, 144, 206, 0.3)'}\r\n                            strokeWidth={1}\r\n                            strokeDasharray=\"2 2\"\r\n                          />\r\n                        )}\r\n                      </g>\r\n                    );\r\n                  }}\r\n                  activeDot={{ \r\n                    r: 6, \r\n                    fill: colours.accent,\r\n                    stroke: isDarkMode ? colours.dark.sectionBackground : colours.light.sectionBackground,\r\n                    strokeWidth: 2\r\n                  }}\r\n                  animationDuration={800}\r\n                  animationEasing=\"ease-out\"\r\n                />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          )}\r\n        </div>\r\n\r\n        {/* Migration Status Summary - Transition Management */}\r\n        {(() => {\r\n          const migrationData = (window as any).migrationData;\r\n          if (!migrationData?.stats) return null;\r\n          \r\n          const { stats } = migrationData;\r\n          return (\r\n            <div style={{ marginTop: 16, padding: 14, borderRadius: 8, \r\n              background: isDarkMode ? 'rgba(15, 23, 42, 0.4)' : 'rgba(248, 250, 252, 0.8)',\r\n              border: isDarkMode ? '1px solid rgba(148,163,184,0.15)' : '1px solid rgba(13,47,96,0.08)',\r\n              boxShadow: 'none'\r\n            }}>\r\n              <div style={{ fontSize: 13, fontWeight: 600, marginBottom: 10, color: isDarkMode ? '#cbd5e1' : '#475569', opacity: 0.8 }}>\r\n                Data Migration Status\r\n              </div>\r\n              <div style={{ display: 'grid', gridTemplateColumns: 'repeat(4, 1fr)', gap: 10, fontSize: 11 }}>\r\n                <div style={{ textAlign: 'center' }}>\r\n                  <div style={{ fontSize: 16, fontWeight: 700, color: isDarkMode ? '#86efac' : '#22c55e' }}>\r\n                    {stats.migrated || 0}\r\n                  </div>\r\n                  <div style={{ opacity: 0.6 }}>● Synced</div>\r\n                </div>\r\n                <div style={{ textAlign: 'center' }}>\r\n                  <div style={{ fontSize: 16, fontWeight: 700, color: isDarkMode ? '#fcd34d' : '#d97706' }}>\r\n                    {stats.partial || 0}\r\n                  </div>\r\n                  <div style={{ opacity: 0.6 }}>◐ Partial</div>\r\n                </div>\r\n                <div style={{ textAlign: 'center' }}>\r\n                  <div style={{ fontSize: 16, fontWeight: 700, color: isDarkMode ? '#94a3b8' : '#64748b' }}>\r\n                    {stats.notMigrated || 0}\r\n                  </div>\r\n                  <div style={{ opacity: 0.6 }}>○ Legacy</div>\r\n                </div>\r\n                <div style={{ textAlign: 'center' }}>\r\n                  <div style={{ fontSize: 16, fontWeight: 700, color: isDarkMode ? '#c4b5fd' : '#8b5cf6' }}>\r\n                    {stats.instructionsOnly || 0}\r\n                  </div>\r\n                  <div style={{ opacity: 0.6 }}>● New Only</div>\r\n                </div>\r\n              </div>\r\n              <div style={{ marginTop: 8, textAlign: 'center', fontSize: 10, opacity: 0.5 }}>\r\n                Sync Rate: {stats.migrationRate || '0.0%'} • {stats.total || 0} enquiries analyzed\r\n              </div>\r\n            </div>\r\n          );\r\n        })()}\r\n      </div>\r\n\r\n      {/* Marketing Metrics Section */}\r\n      {metaMetrics && metaMetrics.length > 0 && (\r\n        <div style={surface(isDarkMode)}>\r\n          <h3 style={sectionTitle()}>Marketing Performance</h3>\r\n          <div style={{ \r\n            display: 'grid', \r\n            gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))', \r\n            gap: 20, \r\n            marginTop: 16 \r\n          }}>\r\n            {/* Google Analytics Card */}\r\n            <div style={{\r\n              background: isDarkMode ? 'rgba(66, 165, 245, 0.1)' : 'rgba(66, 165, 245, 0.05)',\r\n              border: `1px solid ${isDarkMode ? 'rgba(66, 165, 245, 0.3)' : 'rgba(66, 165, 245, 0.2)'}`,\r\n              borderRadius: 12,\r\n              padding: 16\r\n            }}>\r\n              <div style={{ \r\n                display: 'flex', \r\n                alignItems: 'center', \r\n                gap: 8, \r\n                marginBottom: 12,\r\n                color: '#42a5f5'\r\n              }}>\r\n                <Icon iconName=\"BarChart4\" style={{ fontSize: 16 }} />\r\n                <span style={{ fontWeight: 600, fontSize: 14 }}>Google Analytics</span>\r\n              </div>\r\n              {(() => {\r\n                const latest = metaMetrics[metaMetrics.length - 1]?.googleAnalytics;\r\n                if (!latest) return <div style={{ fontSize: 12, opacity: 0.6 }}>No data available</div>;\r\n                \r\n                return (\r\n                  <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: 8, fontSize: 12 }}>\r\n                    <div>\r\n                      <div style={{ fontWeight: 600, color: isDarkMode ? colours.dark.text : colours.light.text }}>\r\n                        {latest.sessions.toLocaleString()}\r\n                      </div>\r\n                      <div style={{ opacity: 0.7 }}>Sessions</div>\r\n                    </div>\r\n                    <div>\r\n                      <div style={{ fontWeight: 600, color: isDarkMode ? colours.dark.text : colours.light.text }}>\r\n                        {latest.users.toLocaleString()}\r\n                      </div>\r\n                      <div style={{ opacity: 0.7 }}>Users</div>\r\n                    </div>\r\n                    <div>\r\n                      <div style={{ fontWeight: 600, color: isDarkMode ? colours.dark.text : colours.light.text }}>\r\n                        {latest.conversions}\r\n                      </div>\r\n                      <div style={{ opacity: 0.7 }}>Conversions</div>\r\n                    </div>\r\n                    <div>\r\n                      <div style={{ fontWeight: 600, color: isDarkMode ? colours.dark.text : colours.light.text }}>\r\n                        {(latest.conversionRate * 100).toFixed(1)}%\r\n                      </div>\r\n                      <div style={{ opacity: 0.7 }}>Conv. Rate</div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })()}\r\n            </div>\r\n\r\n            {/* Google Ads Card */}\r\n            <div style={{\r\n              background: isDarkMode ? 'rgba(76, 175, 80, 0.1)' : 'rgba(76, 175, 80, 0.05)',\r\n              border: `1px solid ${isDarkMode ? 'rgba(76, 175, 80, 0.3)' : 'rgba(76, 175, 80, 0.2)'}`,\r\n              borderRadius: 12,\r\n              padding: 16\r\n            }}>\r\n              <div style={{ \r\n                display: 'flex', \r\n                alignItems: 'center', \r\n                gap: 8, \r\n                marginBottom: 12,\r\n                color: '#4caf50'\r\n              }}>\r\n                <Icon iconName=\"Money\" style={{ fontSize: 16 }} />\r\n                <span style={{ fontWeight: 600, fontSize: 14 }}>Google Ads</span>\r\n              </div>\r\n              {(() => {\r\n                const latest = metaMetrics[metaMetrics.length - 1]?.googleAds;\r\n                if (!latest) return <div style={{ fontSize: 12, opacity: 0.6 }}>No data available</div>;\r\n                \r\n                return (\r\n                  <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: 8, fontSize: 12 }}>\r\n                    <div>\r\n                      <div style={{ fontWeight: 600, color: isDarkMode ? colours.dark.text : colours.light.text }}>\r\n                        £{latest.cost.toFixed(0)}\r\n                      </div>\r\n                      <div style={{ opacity: 0.7 }}>Spend</div>\r\n                    </div>\r\n                    <div>\r\n                      <div style={{ fontWeight: 600, color: isDarkMode ? colours.dark.text : colours.light.text }}>\r\n                        {latest.clicks.toLocaleString()}\r\n                      </div>\r\n                      <div style={{ opacity: 0.7 }}>Clicks</div>\r\n                    </div>\r\n                    <div>\r\n                      <div style={{ fontWeight: 600, color: isDarkMode ? colours.dark.text : colours.light.text }}>\r\n                        {latest.conversions}\r\n                      </div>\r\n                      <div style={{ opacity: 0.7 }}>Conversions</div>\r\n                    </div>\r\n                    <div>\r\n                      <div style={{ fontWeight: 600, color: isDarkMode ? colours.dark.text : colours.light.text }}>\r\n                        £{latest.cpa.toFixed(0)}\r\n                      </div>\r\n                      <div style={{ opacity: 0.7 }}>Cost/Conv</div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })()}\r\n            </div>\r\n\r\n            {/* Meta Ads Card */}\r\n            <div style={{\r\n              background: isDarkMode ? 'rgba(59, 89, 152, 0.1)' : 'rgba(59, 89, 152, 0.05)',\r\n              border: `1px solid ${isDarkMode ? 'rgba(59, 89, 152, 0.3)' : 'rgba(59, 89, 152, 0.2)'}`,\r\n              borderRadius: 12,\r\n              padding: 16\r\n            }}>\r\n              <div style={{ \r\n                display: 'flex', \r\n                alignItems: 'center', \r\n                gap: 8, \r\n                marginBottom: 12,\r\n                color: '#3b5998'\r\n              }}>\r\n                <Icon iconName=\"People\" style={{ fontSize: 16 }} />\r\n                <span style={{ fontWeight: 600, fontSize: 14 }}>Meta Ads</span>\r\n              </div>\r\n              {(() => {\r\n                const latest = metaMetrics[metaMetrics.length - 1]?.metaAds;\r\n                if (!latest) return <div style={{ fontSize: 12, opacity: 0.6 }}>No data available</div>;\r\n                \r\n                return (\r\n                  <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: 8, fontSize: 12 }}>\r\n                    <div>\r\n                      <div style={{ fontWeight: 600, color: isDarkMode ? colours.dark.text : colours.light.text }}>\r\n                        £{latest.spend.toFixed(0)}\r\n                      </div>\r\n                      <div style={{ opacity: 0.7 }}>Spend</div>\r\n                    </div>\r\n                    <div>\r\n                      <div style={{ fontWeight: 600, color: isDarkMode ? colours.dark.text : colours.light.text }}>\r\n                        {(latest.reach / 1000).toFixed(1)}k\r\n                      </div>\r\n                      <div style={{ opacity: 0.7 }}>Reach</div>\r\n                    </div>\r\n                    <div>\r\n                      <div style={{ fontWeight: 600, color: isDarkMode ? colours.dark.text : colours.light.text }}>\r\n                        {latest.conversions}\r\n                      </div>\r\n                      <div style={{ opacity: 0.7 }}>Conversions</div>\r\n                    </div>\r\n                    <div>\r\n                      <div style={{ fontWeight: 600, color: isDarkMode ? colours.dark.text : colours.light.text }}>\r\n                        {(latest.ctr * 100).toFixed(1)}%\r\n                      </div>\r\n                      <div style={{ opacity: 0.7 }}>CTR</div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div style={grid}>\r\n        <div style={{ gridColumn: 'span 4' }}>\r\n          <div style={surface(isDarkMode)}>\r\n            <h3 style={sectionTitle()}>Top sources</h3>\r\n            <div style={{ \r\n              display: 'flex', \r\n              flexDirection: window.innerWidth < 1200 ? 'column' : 'row',\r\n              gap: 20, \r\n              marginTop: 16 \r\n            }}>\r\n              <div style={{ \r\n                flex: window.innerWidth < 1200 ? 'none' : 1,\r\n                minHeight: 220\r\n              }}>\r\n                <PieChartComponent \r\n                  data={sourcesPieData} \r\n                  title=\"Top sources\" \r\n                  isDarkMode={isDarkMode}\r\n                  type=\"source\"\r\n                  activeFilter={sourceFilter}\r\n                  onSliceClick={(value) => openModal('source', value)}\r\n                />\r\n              </div>\r\n              <div style={{ \r\n                flex: window.innerWidth < 1200 ? 'none' : 1,\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                gap: 12, \r\n                justifyContent: 'center',\r\n                minHeight: 180,\r\n                marginTop: window.innerWidth < 1200 ? 16 : 0,\r\n                transition: 'all 0.3s ease-in-out'\r\n              }}>\r\n                {topSources.map(([name, count], index) => (\r\n                  <div key={name} style={{ \r\n                    display: 'flex', \r\n                    justifyContent: 'space-between', \r\n                    alignItems: 'center',\r\n                    borderBottom: `1px dashed ${isDarkMode ? 'rgba(148,163,184,0.2)' : 'rgba(15,23,42,0.08)'}`, \r\n                    padding: '8px 0',\r\n                    fontSize: '14px',\r\n                    opacity: 0,\r\n                    animation: `fadeInUp 0.4s ease-out ${index * 0.1}s forwards`\r\n                  }}>\r\n                    <span style={{ color: isDarkMode ? colours.dark.text : colours.light.text }}>{name}</span>\r\n                    <span style={{ \r\n                      fontWeight: 600,\r\n                      color: colours.blue,\r\n                      minWidth: '40px',\r\n                      textAlign: 'right'\r\n                    }}>{count}</span>\r\n                  </div>\r\n                ))}\r\n                {topSources.length === 0 && (\r\n                  <span style={{ \r\n                    opacity: 0.7,\r\n                    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                    textAlign: 'center',\r\n                    padding: '20px 0'\r\n                  }}>No data in range.</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{ gridColumn: 'span 4' }}>\r\n          <div style={surface(isDarkMode)}>\r\n            <h3 style={sectionTitle()}>Contact methods</h3>\r\n            <div style={{ \r\n              display: 'flex', \r\n              flexDirection: window.innerWidth < 1200 ? 'column' : 'row',\r\n              gap: 20, \r\n              marginTop: 16 \r\n            }}>\r\n              <div style={{ \r\n                flex: window.innerWidth < 1200 ? 'none' : 1,\r\n                minHeight: 220\r\n              }}>\r\n                <PieChartComponent \r\n                  data={mocsPieData} \r\n                  title=\"Contact methods\" \r\n                  isDarkMode={isDarkMode}\r\n                  type=\"moc\"\r\n                  activeFilter={mocFilter}\r\n                  onSliceClick={(value) => openModal('moc', value)}\r\n                />\r\n              </div>\r\n              <div style={{ \r\n                flex: window.innerWidth < 1200 ? 'none' : 1,\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                gap: 12, \r\n                justifyContent: 'center',\r\n                minHeight: 180,\r\n                marginTop: window.innerWidth < 1200 ? 16 : 0,\r\n                transition: 'all 0.3s ease-in-out'\r\n              }}>\r\n                {topMOCs.map(([name, count], index) => (\r\n                  <div key={name} style={{ \r\n                    display: 'flex', \r\n                    justifyContent: 'space-between', \r\n                    alignItems: 'center',\r\n                    borderBottom: `1px dashed ${isDarkMode ? 'rgba(148,163,184,0.2)' : 'rgba(15,23,42,0.08)'}`, \r\n                    padding: '8px 0',\r\n                    fontSize: '14px',\r\n                    opacity: 0,\r\n                    animation: `fadeInUp 0.4s ease-out ${index * 0.1}s forwards`\r\n                  }}>\r\n                    <span style={{ color: isDarkMode ? colours.dark.text : colours.light.text }}>{name}</span>\r\n                    <span style={{ \r\n                      fontWeight: 600,\r\n                      color: colours.blue,\r\n                      minWidth: '40px',\r\n                      textAlign: 'right'\r\n                    }}>{count}</span>\r\n                  </div>\r\n                ))}\r\n                {topMOCs.length === 0 && (\r\n                  <span style={{ \r\n                    opacity: 0.7,\r\n                    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                    textAlign: 'center',\r\n                    padding: '20px 0'\r\n                  }}>No data in range.</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{ gridColumn: 'span 4' }}>\r\n          <div style={surface(isDarkMode)}>\r\n            <h3 style={sectionTitle()}>By fee earner</h3>\r\n            <div style={{ \r\n              display: 'flex', \r\n              flexDirection: window.innerWidth < 1200 ? 'column' : 'row',\r\n              gap: 20, \r\n              marginTop: 16 \r\n            }}>\r\n              <div style={{ \r\n                flex: window.innerWidth < 1200 ? 'none' : 1,\r\n                minHeight: 220\r\n              }}>\r\n                <PieChartComponent \r\n                  data={pocsPieData} \r\n                  title=\"By fee earner\" \r\n                  isDarkMode={isDarkMode}\r\n                  type=\"poc\"\r\n                  activeFilter={pocFilter}\r\n                  onSliceClick={(value) => openModal('poc', value)}\r\n                />\r\n              </div>\r\n              <div style={{ \r\n                flex: window.innerWidth < 1200 ? 'none' : 1,\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                gap: 12, \r\n                justifyContent: 'center',\r\n                minHeight: 180,\r\n                marginTop: window.innerWidth < 1200 ? 16 : 0,\r\n                transition: 'all 0.3s ease-in-out'\r\n              }}>\r\n                {topPocs.map(([name, count], index) => (\r\n                  <div key={name} style={{ \r\n                    display: 'flex', \r\n                    justifyContent: 'space-between', \r\n                    alignItems: 'center',\r\n                    borderBottom: `1px dashed ${isDarkMode ? 'rgba(148,163,184,0.2)' : 'rgba(15,23,42,0.08)'}`, \r\n                    padding: '8px 0',\r\n                    fontSize: '14px',\r\n                    opacity: 0,\r\n                    animation: `fadeInUp 0.4s ease-out ${index * 0.1}s forwards`\r\n                  }}>\r\n                    <span style={{ color: isDarkMode ? colours.dark.text : colours.light.text }}>{name}</span>\r\n                    <span style={{ \r\n                      fontWeight: 600,\r\n                      color: colours.blue,\r\n                      minWidth: '40px',\r\n                      textAlign: 'right'\r\n                    }}>{count}</span>\r\n                  </div>\r\n                ))}\r\n                {topPocs.length === 0 && (\r\n                  <span style={{ \r\n                    opacity: 0.7,\r\n                    color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                    textAlign: 'center',\r\n                    padding: '20px 0'\r\n                  }}>No data in range.</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={surface(isDarkMode)}>\r\n        <h3 style={sectionTitle()}>Recent enquiries</h3>\r\n        {dayGroups.length === 0 ? (\r\n          <div style={{ opacity: 0.7 }}>No enquiries in the selected range.</div>\r\n        ) : (\r\n          <div>\r\n            {dayGroups.slice(0, visibleGroupCount).map((grp, gIdx) => {\r\n              const isHovered = hoveredDay === grp.date;\r\n              const dateLabel = formatDayHeaderLabel(grp.date);\r\n              const dateTooltip = new Date(grp.date).toLocaleDateString('en-GB', {\r\n                weekday: 'long',\r\n                day: '2-digit',\r\n                month: 'long',\r\n                year: 'numeric'\r\n              });\r\n              // Connector accent: brand accent in dark mode (higher alpha), standard blue in light mode\r\n              const accent = isDarkMode ? 'rgba(135, 243, 243, 0.55)' : colours.missedBlue;\r\n              const connectorStyle: React.CSSProperties = {\r\n                position: 'absolute',\r\n                left: 10,\r\n                top: gIdx === 0 ? '20px' : 0,\r\n                bottom: gIdx === visibleGroupCount - 1 ? '50%' : 0,\r\n                width: 2,\r\n                background: accent,\r\n                opacity: 1,\r\n                zIndex: 1,\r\n              };\r\n              const nodeStyle: React.CSSProperties = {\r\n                position: 'absolute',\r\n                left: 6,\r\n                top: 16,\r\n                width: 10,\r\n                height: 10,\r\n                borderRadius: 5,\r\n                background: isDarkMode ? 'rgba(255,255,255,0.15)' : '#fff',\r\n                border: `2px solid ${accent}`,\r\n                zIndex: 2,\r\n              };\r\n              const blockStyle: React.CSSProperties = {\r\n                borderRadius: 12,\r\n                padding: 12,\r\n                background: isDarkMode ? 'linear-gradient(135deg, #0B1220 0%, #141C2C 100%)' : 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n                boxShadow: isHovered\r\n                  ? (isDarkMode ? '0 6px 16px rgba(15,23,42,0.45)' : '0 10px 24px rgba(15,23,42,0.12)')\r\n                  : (isDarkMode ? '0 2px 6px rgba(0,0,0,0.25)' : '0 2px 6px rgba(15,23,42,0.04)'),\r\n                border: isDarkMode\r\n                  ? `1px solid ${isHovered ? 'rgba(148,163,184,0.35)' : 'rgba(148,163,184,0.14)'}`\r\n                  : `1px solid ${isHovered ? 'rgba(13,47,96,0.18)' : 'rgba(13,47,96,0.06)'}`,\r\n                opacity: isHovered ? 1 : 0.6,\r\n                filter: isHovered ? 'none' : 'grayscale(0.12)',\r\n                transition: 'all 0.24s ease'\r\n              };\r\n              const filters = dayFilters[grp.date] ?? EMPTY_DAY_FILTER;\r\n              const filterName = filters.name.trim().toLowerCase();\r\n              const filterPoc = filters.poc.trim().toLowerCase();\r\n              const filterTaker = filters.taker.trim().toLowerCase();\r\n              const filterStatus = filters.status.trim().toLowerCase();\r\n              const hasFilters = Boolean(filterName || filterPoc || filterTaker || filterStatus);\r\n\r\n              const filteredItems = grp.items.filter((raw: any) => {\r\n                const nameCandidate = (raw.Client_Name || raw.Description || raw.Client || `${raw.First_Name || ''} ${raw.Last_Name || ''}`.trim() || '-').toLowerCase();\r\n                if (filterName && !nameCandidate.includes(filterName)) return false;\r\n\r\n                const pocCandidateRaw = getPocRaw(raw) || '';\r\n                const pocCandidate = pocCandidateRaw.toLowerCase();\r\n                if (filterPoc && !pocCandidate.includes(filterPoc)) return false;\r\n\r\n                const takerCandidate = (raw.Call_Taker || '').toString().toLowerCase();\r\n                if (filterTaker && !takerCandidate.includes(filterTaker)) return false;\r\n\r\n                if (filterStatus) {\r\n                  const statusLabel = isTriagedPoc(pocCandidateRaw)\r\n                    ? 'triaged'\r\n                    : (!pocCandidateRaw || pocCandidate === 'team@helix-law.com' ? 'unclaimed' : 'claimed');\r\n                  if (statusLabel !== filterStatus) return false;\r\n                }\r\n\r\n                return true;\r\n              });\r\n\r\n              const displayItems = filteredItems;\r\n              const headerPillStyle: React.CSSProperties = {\r\n                display: 'inline-flex',\r\n                alignItems: 'center',\r\n                gap: 8,\r\n                padding: '6px 10px',\r\n                borderRadius: 8,\r\n                background: isDarkMode ? 'rgba(148,163,184,0.12)' : 'rgba(13,47,96,0.05)',\r\n                border: isDarkMode ? '1px solid rgba(148,163,184,0.18)' : '1px solid rgba(13,47,96,0.08)',\r\n                fontWeight: 700,\r\n                marginBottom: 8,\r\n              };\r\n              const subtleBadge: React.CSSProperties = {\r\n                display: 'inline-block',\r\n                padding: '1px 6px',\r\n                borderRadius: 999,\r\n                background: isDarkMode ? 'rgba(148,163,184,0.12)' : 'rgba(13,47,96,0.05)',\r\n                border: isDarkMode ? '1px solid rgba(148,163,184,0.18)' : '1px solid rgba(13,47,96,0.08)',\r\n                fontSize: 11,\r\n                fontWeight: 600,\r\n              };\r\n              return (\r\n                <div\r\n                  key={grp.date}\r\n                  style={{ position: 'relative', paddingLeft: 24, marginBottom: 18, transition: 'opacity 0.2s ease' }}\r\n                  onMouseEnter={() => setHoveredDay(grp.date)}\r\n                  onMouseLeave={() => setHoveredDay((prev) => (prev === grp.date ? null : prev))}\r\n                  onFocus={() => setHoveredDay(grp.date)}\r\n                  onBlur={() => setHoveredDay((prev) => (prev === grp.date ? null : prev))}\r\n                >\r\n                  {/* Accent connector and node */}\r\n                  <div style={connectorStyle} />\r\n                  <div style={nodeStyle} />\r\n                  {/* Block container */}\r\n                  <div style={blockStyle}>\r\n                    {/* Date header pill - clickable to toggle collapse */}\r\n                    <div \r\n                      style={{ \r\n                        ...headerPillStyle, \r\n                        justifyContent: 'space-between', \r\n                        width: '100%',\r\n                        cursor: 'pointer',\r\n                        userSelect: 'none'\r\n                      }}\r\n                      onClick={() => toggleDayCollapse(grp.date)}\r\n                    >\r\n                      <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\r\n                        <Icon \r\n                          iconName={collapsedDays.has(grp.date) ? 'ChevronRight' : 'ChevronDown'} \r\n                          style={{ \r\n                            fontSize: 10, \r\n                            opacity: 0.7,\r\n                            transition: 'transform 0.2s ease',\r\n                            transform: collapsedDays.has(grp.date) ? 'rotate(0deg)' : 'rotate(0deg)'\r\n                          }} \r\n                        />\r\n                        <span title={dateTooltip}>{dateLabel}</span>\r\n                      </div>\r\n                      <span style={{ fontSize: 12, opacity: 0.75 }}>\r\n                        {displayItems.length} shown\r\n                        {hasFilters ? ` · filtered from ${grp.items.length}` : ` · total ${grp.items.length}`}\r\n                      </span>\r\n                    </div>\r\n\r\n                    {/* Conditional rendering: collapsed summary or expanded view */}\r\n                    {collapsedDays.has(grp.date) ? (\r\n                      /* Collapsed Summary View */\r\n                      (() => {\r\n                        const summary = dailySummaries.get(grp.date);\r\n                        if (!summary) return null;\r\n                        \r\n                        return (\r\n                          <div style={{ \r\n                            padding: '12px 0', \r\n                            display: 'flex', \r\n                            flexDirection: 'column', \r\n                            gap: '12px' \r\n                          }}>\r\n                            {/* Summary Metrics */}\r\n                            <div style={{ \r\n                              display: 'grid', \r\n                              gridTemplateColumns: 'repeat(3, 1fr)', \r\n                              gap: '12px' \r\n                            }}>\r\n                              <div style={{\r\n                                padding: '8px 12px',\r\n                                borderRadius: '8px',\r\n                                background: isDarkMode ? 'rgba(239, 68, 68, 0.1)' : 'rgba(239, 68, 68, 0.05)',\r\n                                border: `1px solid ${isDarkMode ? 'rgba(239, 68, 68, 0.2)' : 'rgba(239, 68, 68, 0.1)'}`,\r\n                                textAlign: 'center'\r\n                              }}>\r\n                                <div style={{ fontSize: '20px', fontWeight: 700, color: '#ef4444' }}>\r\n                                  {summary.unclaimed}\r\n                                </div>\r\n                                <div style={{ fontSize: '10px', opacity: 0.7, textTransform: 'uppercase' }}>\r\n                                  Unclaimed\r\n                                </div>\r\n                              </div>\r\n                              <div style={{\r\n                                padding: '8px 12px',\r\n                                borderRadius: '8px',\r\n                                background: isDarkMode ? 'rgba(34, 197, 94, 0.1)' : 'rgba(34, 197, 94, 0.05)',\r\n                                border: `1px solid ${isDarkMode ? 'rgba(34, 197, 94, 0.2)' : 'rgba(34, 197, 94, 0.1)'}`,\r\n                                textAlign: 'center'\r\n                              }}>\r\n                                <div style={{ fontSize: '20px', fontWeight: 700, color: '#22c55e' }}>\r\n                                  {summary.claimed}\r\n                                </div>\r\n                                <div style={{ fontSize: '10px', opacity: 0.7, textTransform: 'uppercase' }}>\r\n                                  Claimed\r\n                                </div>\r\n                              </div>\r\n                              <div style={{\r\n                                padding: '8px 12px',\r\n                                borderRadius: '8px',\r\n                                background: isDarkMode ? 'rgba(59, 130, 246, 0.1)' : 'rgba(59, 130, 246, 0.05)',\r\n                                border: `1px solid ${isDarkMode ? 'rgba(59, 130, 246, 0.2)' : 'rgba(59, 130, 246, 0.1)'}`,\r\n                                textAlign: 'center'\r\n                              }}>\r\n                                <div style={{ fontSize: '20px', fontWeight: 700, color: '#3b82f6' }}>\r\n                                  {summary.triaged}\r\n                                </div>\r\n                                <div style={{ fontSize: '10px', opacity: 0.7, textTransform: 'uppercase' }}>\r\n                                  Triaged\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n\r\n                            {/* Top Claimers and Non-claimers */}\r\n                            <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '16px' }}>\r\n                              {/* Top Claimers */}\r\n                              <div>\r\n                                <div style={{ fontSize: '11px', fontWeight: 600, marginBottom: '6px', opacity: 0.8 }}>\r\n                                  Top Claimers\r\n                                </div>\r\n                                {summary.topClaimers.length > 0 ? (\r\n                                  <div style={{ display: 'flex', flexDirection: 'column', gap: '4px' }}>\r\n                                    {summary.topClaimers.map((claimer, idx) => (\r\n                                      <div key={claimer.initials} style={{\r\n                                        display: 'flex',\r\n                                        justifyContent: 'space-between',\r\n                                        alignItems: 'center',\r\n                                        fontSize: '10px',\r\n                                        padding: '4px 8px',\r\n                                        background: isDarkMode ? 'rgba(255,255,255,0.04)' : 'rgba(0,0,0,0.02)',\r\n                                        borderRadius: '4px'\r\n                                      }}>\r\n                                        <span style={{ fontWeight: 500 }}>{claimer.initials}</span>\r\n                                        <span style={{ \r\n                                          fontSize: '9px', \r\n                                          color: colours.blue, \r\n                                          fontWeight: 600 \r\n                                        }}>\r\n                                          {claimer.count}\r\n                                        </span>\r\n                                      </div>\r\n                                    ))}\r\n                                  </div>\r\n                                ) : (\r\n                                  <div style={{ fontSize: '10px', opacity: 0.5, fontStyle: 'italic' }}>\r\n                                    No claims\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n\r\n                              {/* Non-claimers */}\r\n                              <div>\r\n                                <div style={{ fontSize: '11px', fontWeight: 600, marginBottom: '6px', opacity: 0.8 }}>\r\n                                  Non-claimers\r\n                                </div>\r\n                                {summary.nonClaimers.length > 0 ? (\r\n                                  <div style={{ \r\n                                    display: 'grid', \r\n                                    gridTemplateColumns: 'repeat(auto-fit, minmax(40px, 1fr))',\r\n                                    gap: '3px'\r\n                                  }}>\r\n                                    {summary.nonClaimers.map((nonClaimer) => (\r\n                                      <div key={nonClaimer.initials} style={{\r\n                                        fontSize: '9px',\r\n                                        padding: '3px 4px',\r\n                                        backgroundColor: isDarkMode ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.05)',\r\n                                        borderRadius: '3px',\r\n                                        textAlign: 'center',\r\n                                        display: 'flex',\r\n                                        flexDirection: 'column',\r\n                                        alignItems: 'center',\r\n                                        opacity: nonClaimer.onLeave ? 0.4 : 0.8,\r\n                                        border: nonClaimer.onLeave ? `1px dashed ${colours.greyText}` : 'none'\r\n                                      }}>\r\n                                        <span style={{ fontWeight: 500 }}>{nonClaimer.initials}</span>\r\n                                        {nonClaimer.onLeave && (\r\n                                          <span style={{ \r\n                                            fontSize: '7px', \r\n                                            color: colours.greyText,\r\n                                            fontStyle: 'italic',\r\n                                            lineHeight: 1\r\n                                          }}>\r\n                                            leave\r\n                                          </span>\r\n                                        )}\r\n                                      </div>\r\n                                    ))}\r\n                                  </div>\r\n                                ) : (\r\n                                  <div style={{ fontSize: '10px', opacity: 0.5, fontStyle: 'italic' }}>\r\n                                    All claimed\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })()\r\n                    ) : (\r\n                      /* Expanded View - Existing enquiry list */\r\n                      <>\r\n                        {/* Column filters */}\r\n                        <div\r\n                          style={{\r\n                            display: 'grid',\r\n                            gridTemplateColumns: 'minmax(220px, 1fr) 220px 160px 120px',\r\n                            gap: 8,\r\n                            margin: '6px 0 10px',\r\n                            opacity: isHovered ? 0.8 : 0.45,\r\n                            transition: 'opacity 0.2s ease'\r\n                          }}\r\n                        >\r\n                          <input\r\n                            value={filters.name}\r\n                            onChange={(event) => updateDayFilter(grp.date, 'name', event.target.value)}\r\n                            placeholder=\"Filter name / description\"\r\n                            style={{\r\n                              fontSize: 11,\r\n                              padding: '6px 8px',\r\n                              borderRadius: 8,\r\n                              border: isDarkMode ? '1px solid rgba(148,163,184,0.22)' : '1px solid rgba(15,23,42,0.14)',\r\n                              background: isDarkMode ? 'rgba(15,23,42,0.6)' : 'rgba(241,245,249,0.8)',\r\n                              color: isDarkMode ? '#e2e8f0' : '#1f2937'\r\n                            }}\r\n                          />\r\n                          <input\r\n                            value={filters.poc}\r\n                            onChange={(event) => updateDayFilter(grp.date, 'poc', event.target.value)}\r\n                            placeholder=\"Filter point of contact\"\r\n                            style={{\r\n                              fontSize: 11,\r\n                              padding: '6px 8px',\r\n                              borderRadius: 8,\r\n                              border: isDarkMode ? '1px solid rgba(148,163,184,0.22)' : '1px solid rgba(15,23,42,0.14)',\r\n                              background: isDarkMode ? 'rgba(15,23,42,0.6)' : 'rgba(241,245,249,0.8)',\r\n                              color: isDarkMode ? '#e2e8f0' : '#1f2937'\r\n                            }}\r\n                          />\r\n                          <input\r\n                            value={filters.taker}\r\n                            onChange={(event) => updateDayFilter(grp.date, 'taker', event.target.value)}\r\n                            placeholder=\"Filter call taker\"\r\n                            style={{\r\n                              fontSize: 11,\r\n                              padding: '6px 8px',\r\n                              borderRadius: 8,\r\n                              border: isDarkMode ? '1px solid rgba(148,163,184,0.22)' : '1px solid rgba(15,23,42,0.14)',\r\n                              background: isDarkMode ? 'rgba(15,23,42,0.6)' : 'rgba(241,245,249,0.8)',\r\n                              color: isDarkMode ? '#e2e8f0' : '#1f2937'\r\n                            }}\r\n                          />\r\n                          <select\r\n                            value={filters.status}\r\n                            onChange={(event) => updateDayFilter(grp.date, 'status', event.target.value)}\r\n                            style={{\r\n                              fontSize: 11,\r\n                              padding: '6px 8px',\r\n                              borderRadius: 8,\r\n                              border: isDarkMode ? '1px solid rgba(148,163,184,0.22)' : '1px solid rgba(15,23,42,0.14)',\r\n                              background: isDarkMode ? 'rgba(15,23,42,0.6)' : 'rgba(241,245,249,0.8)',\r\n                              color: isDarkMode ? '#e2e8f0' : '#1f2937'\r\n                            }}\r\n                          >\r\n                        <option value=\"\">All statuses</option>\r\n                        <option value=\"claimed\">Claimed</option>\r\n                        <option value=\"unclaimed\">Unclaimed</option>\r\n                        <option value=\"triaged\">Triaged</option>\r\n                      </select>\r\n                    </div>\r\n\r\n                    {/* Group rows: Name | Point of contact | Call taker | Status */}\r\n                    <div style={{ display: 'grid', gridTemplateColumns: 'minmax(220px, 1fr) 220px 160px 120px', gap: 8 }}>\r\n                      <div style={{ fontSize: 11, fontWeight: 600, opacity: 0.55 }}>Name</div>\r\n                      <div style={{ fontSize: 11, fontWeight: 600, opacity: 0.55 }}>Point of contact</div>\r\n                      <div style={{ fontSize: 11, fontWeight: 600, opacity: 0.55 }}>Call taker</div>\r\n                      <div style={{ fontSize: 11, fontWeight: 600, opacity: 0.55 }}>Status</div>\r\n                      {displayItems.length === 0 && (\r\n                        <div style={{ gridColumn: '1 / span 4', fontSize: 11, opacity: 0.6, padding: '8px 0' }}>\r\n                          No enquiries match the filters for this day.\r\n                        </div>\r\n                      )}\r\n                      {displayItems.map((e: any, idx2: number) => {\r\n                        const name = e.Client_Name || e.Description || e.Client || `${e.First_Name || ''} ${e.Last_Name || ''}`.trim() || '-';\r\n                        const stageStr = typeof e.stage === 'string' ? e.stage.toLowerCase() : (typeof (e as any).Stage === 'string' ? (e as any).Stage.toLowerCase() : '');\r\n                        const statusStr = typeof (e as any).Status === 'string' ? (e as any).Status.toLowerCase() : (typeof (e as any).status === 'string' ? (e as any).status.toLowerCase() : '');\r\n                        // Heuristics to identify Deal vs Instruction\r\n                        const instructionRefField = (e as any).InstructionRef || (e as any).instruction_ref || (e as any).instructionRef;\r\n                        const rRefField = instructionRefField || (e as any).RRef || (e as any).rref || (e as any).Rref;\r\n                        const dealIdRaw = (e as any).DealId ?? (e as any).deal_id ?? (e as any).dealId;\r\n                        const prospectIdRaw = (e as any).ProspectId ?? (e as any).prospect_id ?? (e as any).prospectId;\r\n                        const dealIdNum = typeof dealIdRaw === 'string' ? parseInt(dealIdRaw, 10) : (typeof dealIdRaw === 'number' ? dealIdRaw : NaN);\r\n                        const prospectIdNum = typeof prospectIdRaw === 'string' ? parseInt(prospectIdRaw, 10) : (typeof prospectIdRaw === 'number' ? prospectIdRaw : NaN);\r\n                        const hasInstruction = Boolean(\r\n                          instructionRefField ||\r\n                          (e as any).Matter_Ref || (e as any).matter_ref || (e as any).MatterRef || (e as any).matterRef ||\r\n                          (e as any).MatterId || (e as any).MatterID || (e as any).matterId || (e as any).matterID ||\r\n                          statusStr === 'closed' || statusStr === 'instructed' ||\r\n                          (stageStr && stageStr.includes('instruct'))\r\n                        );\r\n                        const hasDeal = Boolean(\r\n                          (e as any).pitch === true ||\r\n                          (e as any).Pitched === true ||\r\n                          Boolean((e as any).PitchedDate) ||\r\n                          (stageStr && (stageStr.includes('deal') || stageStr.includes('pitch'))) ||\r\n                          statusStr === 'pitched' ||\r\n                          // If we have an RRef-like value but no confirmed instruction, treat as deal\r\n                          (!!rRefField && !hasInstruction) ||\r\n                          (Number.isFinite(dealIdNum) && dealIdNum > 0) ||\r\n                          (Number.isFinite(prospectIdNum) && prospectIdNum > 0)\r\n                        );\r\n                        const pocRaw = (e.Point_of_Contact || '').trim().toLowerCase();\r\n                        const isUnclaimed = !pocRaw || pocRaw === 'team@helix-law.com';\r\n                        const isTriaged = isTriagedPoc(pocRaw);\r\n                        const isClaimedEntry = !isUnclaimed && !isTriaged;\r\n                        const isHighlightActive = !!hoverHighlight && hoverHighlight.date === grp.date;\r\n                        const isRowHighlighted = isHighlightActive && hoverHighlight!.poc === pocRaw;\r\n                        const highlightedCellStyle: React.CSSProperties = isRowHighlighted\r\n                          ? (isDarkMode\r\n                              ? { background: 'rgba(135, 243, 243, 0.12)', outline: '1px solid rgba(135, 243, 243, 0.38)', borderRadius: 6 }\r\n                              : { background: 'rgba(13, 47, 96, 0.06)', outline: '1px solid rgba(13, 47, 96, 0.18)', borderRadius: 6 })\r\n                          : {};\r\n                        \r\n                        // Migration status indicators for transition management (with local override)\r\n                        let migrationStatus = (e as any).migrationStatus || 'unknown';\r\n                        let matchScore = (e as any).matchScore || 0;\r\n                        let instructionsId = (e as any).instructionsId;\r\n                        // If this looks like a legacy entry and we have a local override, apply it\r\n                        const legacyId = (e as any).ID ? String((e as any).ID) : null;\r\n                        if (legacyId && migrationOverrides.has(legacyId)) {\r\n                          const o = migrationOverrides.get(legacyId)!;\r\n                          migrationStatus = o.status || migrationStatus;\r\n                          if (typeof o.matchScore === 'number') matchScore = o.matchScore;\r\n                          if (typeof o.instructionsId !== 'undefined') instructionsId = o.instructionsId as any;\r\n                        }\r\n                        \r\n                        const getMigrationIndicator = (status: string) => {\r\n                          switch (status) {\r\n                            case 'migrated':\r\n                              return { icon: '●', color: isDarkMode ? '#86efac' : '#22c55e', label: 'Synced', title: `Synced to new system (ID: ${instructionsId})` };\r\n                            case 'partial':\r\n                              return { icon: '◐', color: isDarkMode ? '#fcd34d' : '#d97706', label: 'Partial', title: `Partially synced (Score: ${matchScore})` };\r\n                            case 'not-migrated':\r\n                              return { icon: '○', color: isDarkMode ? '#94a3b8' : '#64748b', label: 'Legacy', title: 'Legacy system only' };\r\n                            case 'sync-pending':\r\n                              return { icon: '◒', color: isDarkMode ? '#93c5fd' : '#3b82f6', label: 'Pending', title: 'Sync pending' };\r\n                            case 'instructions-only':\r\n                              return { icon: '●', color: isDarkMode ? '#c4b5fd' : '#8b5cf6', label: 'New', title: 'New system only' };\r\n                            default:\r\n                              return { icon: '○', color: isDarkMode ? '#64748b' : '#94a3b8', label: 'Unknown', title: 'Migration status unknown' };\r\n                          }\r\n                        };\r\n                        \r\n                        const migrationIndicator = getMigrationIndicator(migrationStatus);\r\n                        const migrationBadge: React.CSSProperties = {\r\n                          display: 'inline-flex', \r\n                          alignItems: 'center', \r\n                          gap: 4,\r\n                          padding: '1px 4px', \r\n                          borderRadius: 6, \r\n                          fontSize: 9, \r\n                          fontWeight: 500,\r\n                          background: isDarkMode ? 'rgba(0,0,0,0.15)' : 'rgba(255,255,255,0.7)',\r\n                          border: `1px solid ${migrationIndicator.color}30`,\r\n                          color: migrationIndicator.color,\r\n                          marginLeft: 4,\r\n                          opacity: 0.9,\r\n                          cursor: 'pointer'\r\n                        };\r\n                        const pocLabel = isUnclaimed ? 'Unclaimed' : (isTriaged ? 'Triaged' : (e.Point_of_Contact as string));\r\n                        const pocStyle: React.CSSProperties = (isUnclaimed || isTriaged)\r\n                          ? {\r\n                              ...subtleBadge,\r\n                              background: isTriaged\r\n                                ? (isDarkMode ? 'rgba(71,85,105,0.18)' : 'rgba(100,116,139,0.12)') // dark grey for Triaged\r\n                                : (isDarkMode ? 'rgba(220,38,38,0.12)' : 'rgba(220,38,38,0.08)'),\r\n                              border: isTriaged\r\n                                ? (isDarkMode ? '1px solid rgba(148,163,184,0.35)' : '1px solid rgba(100,116,139,0.28)')\r\n                                : (isDarkMode ? '1px solid rgba(248,113,113,0.28)' : '1px solid rgba(220,38,38,0.18)'),\r\n                              color: isTriaged\r\n                                ? (isDarkMode ? '#CBD5E1' : '#334155')\r\n                                : (isDarkMode ? '#fda4af' : '#b91c1c'),\r\n                            }\r\n                          : {};\r\n                        const taker = (e.Call_Taker || '').trim();\r\n                        const takerLabel = taker.toLowerCase() === 'operations' ? 'Internal' : 'External';\r\n                        const takerStyle: React.CSSProperties = subtleBadge;\r\n                        const claimedBadge: React.CSSProperties = isDarkMode\r\n                          ? { ...subtleBadge, background: 'rgba(32,178,108,0.12)', border: '1px solid rgba(32,178,108,0.28)', color: '#86efac', marginRight: 6 }\r\n                          : { ...subtleBadge, background: 'rgba(32,178,108,0.08)', border: '1px solid rgba(32,178,108,0.18)', color: colours.green, marginRight: 6 };\r\n                        // Claimed status: clear text instead of confusing dots\r\n                        const rowDim: React.CSSProperties = {};\r\n                        const nameCellExtra: React.CSSProperties = {};\r\n                        const statusPrimary = isUnclaimed ? 'Unclaimed' : (isTriaged ? 'Triaged' : 'Claimed');\r\n                        const statusPrimaryBadge: React.CSSProperties = (() => {\r\n                          if (isUnclaimed) {\r\n                            return isDarkMode\r\n                              ? { ...subtleBadge, background: 'rgba(248,113,113,0.12)', border: '1px solid rgba(248,113,113,0.28)', color: '#fca5a5' }\r\n                              : { ...subtleBadge, background: 'rgba(239,68,68,0.12)', border: '1px solid rgba(239,68,68,0.18)', color: '#b91c1c' };\r\n                          }\r\n                          if (isTriaged) {\r\n                            return isDarkMode\r\n                              ? { ...subtleBadge, background: 'rgba(96,165,250,0.12)', border: '1px solid rgba(96,165,250,0.28)', color: '#93c5fd' }\r\n                              : { ...subtleBadge, background: 'rgba(59,130,246,0.12)', border: '1px solid rgba(59,130,246,0.18)', color: '#1d4ed8' };\r\n                          }\r\n                          return { ...claimedBadge, marginRight: 0 };\r\n                        })();\r\n                        const tagBase: React.CSSProperties = {\r\n                          display: 'inline-flex', alignItems: 'center', gap: 4,\r\n                          padding: '2px 6px', borderRadius: 999, fontSize: 10, fontWeight: 700,\r\n                          marginLeft: 8\r\n                        };\r\n                        // Align with Instructions module semantics and colours: Pitched (blue), Instructed (green)\r\n                        const dealTag: React.CSSProperties = isDarkMode\r\n                          ? { ...tagBase, background: 'rgba(59,130,246,0.12)', border: '1px solid rgba(147,197,253,0.28)', color: '#93c5fd' }\r\n                          : { ...tagBase, background: 'rgba(37,99,235,0.08)', border: '1px solid rgba(37,99,235,0.18)', color: '#1e40af' };\r\n                        const instructionTag: React.CSSProperties = isDarkMode\r\n                          ? { ...tagBase, background: 'rgba(32,178,108,0.12)', border: '1px solid rgba(32,178,108,0.28)', color: '#86efac' }\r\n                          : { ...tagBase, background: 'rgba(32,178,108,0.08)', border: '1px solid rgba(32,178,108,0.18)', color: colours.green };\r\n                        const initialsPillStyle: React.CSSProperties = {\r\n                          display: 'inline-flex', alignItems: 'center', justifyContent: 'center',\r\n                          width: 22, height: 22, borderRadius: 999, fontSize: 10, fontWeight: 800,\r\n                          color: isDarkMode ? '#E2E8F0' : colours.missedBlue,\r\n                          background: isDarkMode ? 'linear-gradient(135deg, #0B1220 0%, #12263A 100%)' : 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n                          border: isDarkMode ? '1px solid rgba(148,163,184,0.35)' : '1px solid rgba(13,47,96,0.18)',\r\n                          boxShadow: isDarkMode ? '0 1px 2px rgba(0,0,0,0.35)' : '0 1px 2px rgba(15,23,42,0.08)',\r\n                          marginRight: 8, cursor: 'pointer'\r\n                        };\r\n                        return (\r\n                          <React.Fragment key={idx2}>\r\n                            <div style={{ ...rowDim, ...nameCellExtra, ...highlightedCellStyle, display: 'flex', alignItems: 'center', gap: 6 }}>\r\n                              <span>{name}</span>\r\n                              <span \r\n                                title={migrationIndicator.title}\r\n                                style={migrationBadge}\r\n                                onClick={() => openMigrationModal(e)}\r\n                              >\r\n                                {migrationIndicator.icon}\r\n                              </span>\r\n                            </div>\r\n                            <div\r\n                              style={{ ...rowDim, ...highlightedCellStyle, display: 'flex', alignItems: 'center', gap: 6 }}\r\n                              onMouseEnter={() => { if (isClaimedEntry) setHoverHighlight({ date: grp.date, poc: pocRaw }); }}\r\n                              onMouseLeave={() => { if (isRowHighlighted) setHoverHighlight(null); }}\r\n                            >\r\n                              {isClaimedEntry && (\r\n                                <span\r\n                                  title={`${pocLabel} - Click to reassign`}\r\n                                  aria-label={`${pocLabel} - Click to reassign`}\r\n                                  style={{\r\n                                    ...initialsPillStyle,\r\n                                    cursor: 'pointer',\r\n                                    transition: 'all 0.2s ease',\r\n                                    position: 'relative'\r\n                                  }}\r\n                                  onClick={(event) => handleReassignClick((e as any).ID || (e as any).id || `${gIdx}-${idx2}`, event)}\r\n                                  onMouseEnter={() => setHoverHighlight({ date: grp.date, poc: pocRaw })}\r\n                                  onMouseLeave={() => { if (isRowHighlighted) setHoverHighlight(null); }}\r\n                                >\r\n                                  {getInitials(e.Point_of_Contact as string)}\r\n                                  <Icon \r\n                                    iconName=\"Edit\" \r\n                                    style={{ \r\n                                      fontSize: 8, \r\n                                      position: 'absolute', \r\n                                      bottom: -2, \r\n                                      right: -2,\r\n                                      background: isDarkMode ? colours.dark.background : colours.light.background,\r\n                                      borderRadius: '50%',\r\n                                      padding: 1,\r\n                                      opacity: 0.7\r\n                                    }} \r\n                                  />\r\n                                </span>\r\n                              )}\r\n                              {(isUnclaimed || isTriaged) && (\r\n                                <span \r\n                                  style={{\r\n                                    ...pocStyle,\r\n                                    cursor: 'pointer',\r\n                                    position: 'relative',\r\n                                    transition: 'all 0.2s ease'\r\n                                  }}\r\n                                  title={`${pocLabel} - Click to assign`}\r\n                                  onClick={(event) => handleReassignClick((e as any).ID || (e as any).id || `${gIdx}-${idx2}`, event)}\r\n                                >\r\n                                  {pocLabel}\r\n                                  <Icon \r\n                                    iconName=\"AddFriend\" \r\n                                    style={{ \r\n                                      fontSize: 8, \r\n                                      marginLeft: 4,\r\n                                      opacity: 0.7\r\n                                    }} \r\n                                  />\r\n                                </span>\r\n                              )}\r\n                            </div>\r\n                            <div style={{ ...rowDim, ...highlightedCellStyle }}><span style={takerStyle}>{takerLabel}</span></div>\r\n                            <div style={{ ...rowDim, ...highlightedCellStyle, display: 'flex', alignItems: 'center', gap: 6, flexWrap: 'wrap' }}>\r\n                              <span style={statusPrimaryBadge}>{statusPrimary}</span>\r\n                              {hasInstruction && <span title=\"Instructed\" aria-label=\"Instructed\" style={instructionTag}>Instructed</span>}\r\n                              {!hasInstruction && hasDeal && <span title=\"Pitched\" aria-label=\"Pitched\" style={dealTag}>Pitched</span>}\r\n                            </div>\r\n                          </React.Fragment>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n            {/* Sentinel for infinite scroll */}\r\n            {visibleGroupCount < dayGroups.length && <div ref={sentinelRef} style={{ height: 1 }} />}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Migration modal */}\r\n      <Dialog\r\n        hidden={!migrationModalOpen}\r\n        onDismiss={closeMigrationModal}\r\n        dialogContentProps={{\r\n          type: DialogType.largeHeader,\r\n          title: 'Migrate Legacy Enquiry',\r\n          subText: 'Review and adjust field mappings before creating the new enquiry record.'\r\n        }}\r\n        minWidth={900}\r\n        maxWidth={1100}\r\n        styles={{\r\n          main: {\r\n            backgroundColor: isDarkMode ? colours.dark.sectionBackground : colours.light.sectionBackground,\r\n            border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n            borderRadius: 12,\r\n            boxShadow: isDarkMode \r\n              ? '0 25px 50px -12px rgba(0, 0, 0, 0.8)' \r\n              : '0 25px 50px -12px rgba(0, 0, 0, 0.25)',\r\n            maxHeight: '85vh',\r\n            height: 'auto'\r\n          }\r\n        }}\r\n      >\r\n        {migrationLegacy && migrationDraft && (\r\n          <div style={{ \r\n            display: 'grid', \r\n            gridTemplateColumns: '420px 1fr', \r\n            gap: 20,\r\n            padding: 16,\r\n            maxHeight: '65vh',\r\n            overflow: 'hidden'\r\n          }}>\r\n            {/* Legacy preview */}\r\n            <div style={{\r\n              backgroundColor: isDarkMode ? colours.dark.background : colours.light.background,\r\n              border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n              borderRadius: 8,\r\n              padding: 16,\r\n              overflow: 'auto',\r\n              maxHeight: '65vh'\r\n            }}>\r\n              <div style={{ \r\n                display: 'flex', \r\n                alignItems: 'center', \r\n                gap: 8, \r\n                marginBottom: 12,\r\n                paddingBottom: 8,\r\n                borderBottom: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`\r\n              }}>\r\n                <Icon iconName=\"Database\" style={{ \r\n                  fontSize: 14, \r\n                  color: isDarkMode ? colours.dark.subText : colours.light.subText\r\n                }} />\r\n                <div style={{ \r\n                  fontWeight: 600, \r\n                  fontSize: 14,\r\n                  color: isDarkMode ? colours.dark.text : colours.light.text\r\n                }}>Legacy Record</div>\r\n                <div style={{ \r\n                  fontSize: 10, \r\n                  opacity: 0.7,\r\n                  backgroundColor: isDarkMode ? colours.dark.border : colours.light.border,\r\n                  padding: '2px 6px',\r\n                  borderRadius: 4,\r\n                  fontFamily: 'monospace'\r\n                }}>\r\n                  ID: {String(migrationLegacy.ID ?? 'unknown')}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Contact Information Section */}\r\n              <div style={{ marginBottom: 16 }}>\r\n                <div style={{ \r\n                  fontSize: 12, \r\n                  fontWeight: 600, \r\n                  color: colours.blue,\r\n                  marginBottom: 8,\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  gap: 6\r\n                }}>\r\n                  <Icon iconName=\"Contact\" style={{ fontSize: 11 }} />\r\n                  Contact Information\r\n                </div>\r\n                <div style={{ display: 'grid', gap: 4, paddingLeft: 16, fontSize: 11 }}>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span style={{ color: isDarkMode ? colours.dark.subText : colours.greyText }}>Name:</span>\r\n                    <span style={{ fontWeight: 500, textAlign: 'right' }}>\r\n                      {(migrationLegacy.First_Name || '') + ' ' + (migrationLegacy.Last_Name || '') || '-'}\r\n                    </span>\r\n                  </div>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span style={{ color: isDarkMode ? colours.dark.subText : colours.greyText }}>Email:</span>\r\n                    <span style={{ fontWeight: 500, textAlign: 'right' }}>\r\n                      {migrationLegacy.Email || '-'}\r\n                    </span>\r\n                  </div>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span style={{ color: isDarkMode ? colours.dark.subText : colours.greyText }}>Phone:</span>\r\n                    <span style={{ fontWeight: 500, textAlign: 'right' }}>\r\n                      {migrationLegacy.Phone_Number || migrationLegacy.Secondary_Phone || '-'}\r\n                    </span>\r\n                  </div>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span style={{ color: isDarkMode ? colours.dark.subText : colours.greyText }}>Company:</span>\r\n                    <span style={{ fontWeight: 500, textAlign: 'right' }}>\r\n                      {migrationLegacy.Company || '-'}\r\n                    </span>\r\n                  </div>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span style={{ color: isDarkMode ? colours.dark.subText : colours.greyText }}>Title:</span>\r\n                    <span style={{ fontWeight: 500, textAlign: 'right' }}>\r\n                      {migrationLegacy.Title || '-'}\r\n                    </span>\r\n                  </div>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span style={{ color: isDarkMode ? colours.dark.subText : colours.greyText }}>Website:</span>\r\n                    <span style={{ fontWeight: 500, textAlign: 'right', fontSize: 10 }}>\r\n                      {migrationLegacy.Website || '-'}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Business Details Section */}\r\n              <div style={{ marginBottom: 16 }}>\r\n                <div style={{ \r\n                  fontSize: 12, \r\n                  fontWeight: 600, \r\n                  color: colours.green,\r\n                  marginBottom: 8,\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  gap: 6\r\n                }}>\r\n                  <Icon iconName=\"Work\" style={{ fontSize: 11 }} />\r\n                  Business Details\r\n                </div>\r\n                <div style={{ display: 'grid', gap: 4, paddingLeft: 16, fontSize: 11 }}>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span style={{ color: isDarkMode ? colours.dark.subText : colours.greyText }}>Area of Work:</span>\r\n                    <span style={{ fontWeight: 500, textAlign: 'right', maxWidth: '60%' }}>\r\n                      {migrationLegacy.Area_of_Work || '-'}\r\n                    </span>\r\n                  </div>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span style={{ color: isDarkMode ? colours.dark.subText : colours.greyText }}>Type of Work:</span>\r\n                    <span style={{ fontWeight: 500, textAlign: 'right', maxWidth: '60%' }}>\r\n                      {migrationLegacy.Type_of_Work || '-'}\r\n                    </span>\r\n                  </div>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span style={{ color: isDarkMode ? colours.dark.subText : colours.greyText }}>Contact Method:</span>\r\n                    <span style={{ fontWeight: 500, textAlign: 'right' }}>\r\n                      {migrationLegacy.Method_of_Contact || '-'}\r\n                    </span>\r\n                  </div>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span style={{ color: isDarkMode ? colours.dark.subText : colours.greyText }}>Value:</span>\r\n                    <span style={{ fontWeight: 500, textAlign: 'right' }}>\r\n                      {migrationLegacy.Value || '-'}\r\n                    </span>\r\n                  </div>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span style={{ color: isDarkMode ? colours.dark.subText : colours.greyText }}>Rating:</span>\r\n                    <span style={{ fontWeight: 500, textAlign: 'right' }}>\r\n                      {migrationLegacy.Rating || '-'}\r\n                    </span>\r\n                  </div>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span style={{ color: isDarkMode ? colours.dark.subText : colours.greyText }}>Gift Rank:</span>\r\n                    <span style={{ fontWeight: 500, textAlign: 'right' }}>\r\n                      {migrationLegacy.Gift_Rank || '-'}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Attribution Section */}\r\n              <div style={{ marginBottom: 16 }}>\r\n                <div style={{ \r\n                  fontSize: 12, \r\n                  fontWeight: 600, \r\n                  color: colours.yellow,\r\n                  marginBottom: 8,\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  gap: 6\r\n                }}>\r\n                  <Icon iconName=\"Ringer\" style={{ fontSize: 11 }} />\r\n                  Attribution & Source\r\n                </div>\r\n                <div style={{ display: 'grid', gap: 4, paddingLeft: 16, fontSize: 11 }}>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span style={{ color: isDarkMode ? colours.dark.subText : colours.greyText }}>Source:</span>\r\n                    <span style={{ fontWeight: 500, textAlign: 'right', maxWidth: '60%' }}>\r\n                      {migrationLegacy.Ultimate_Source || '-'}\r\n                    </span>\r\n                  </div>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span style={{ color: isDarkMode ? colours.dark.subText : colours.greyText }}>Contact Referrer:</span>\r\n                    <span style={{ fontWeight: 500, textAlign: 'right', maxWidth: '60%' }}>\r\n                      {migrationLegacy.Contact_Referrer || '-'}\r\n                    </span>\r\n                  </div>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span style={{ color: isDarkMode ? colours.dark.subText : colours.greyText }}>Referring Company:</span>\r\n                    <span style={{ fontWeight: 500, textAlign: 'right', maxWidth: '60%' }}>\r\n                      {migrationLegacy.Referring_Company || '-'}\r\n                    </span>\r\n                  </div>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span style={{ color: isDarkMode ? colours.dark.subText : colours.greyText }}>Campaign:</span>\r\n                    <span style={{ fontWeight: 500, textAlign: 'right', maxWidth: '60%' }}>\r\n                      {migrationLegacy.Campaign || '-'}\r\n                    </span>\r\n                  </div>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span style={{ color: isDarkMode ? colours.dark.subText : colours.greyText }}>GCLID:</span>\r\n                    <span style={{ fontWeight: 500, textAlign: 'right', fontFamily: 'monospace', fontSize: 10 }}>\r\n                      {migrationLegacy.GCLID || '-'}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Internal Section */}\r\n              <div style={{ marginBottom: 16 }}>\r\n                <div style={{ \r\n                  fontSize: 12, \r\n                  fontWeight: 600, \r\n                  color: colours.red,\r\n                  marginBottom: 8,\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  gap: 6\r\n                }}>\r\n                  <Icon iconName=\"People\" style={{ fontSize: 11 }} />\r\n                  Internal Details\r\n                </div>\r\n                <div style={{ display: 'grid', gap: 4, paddingLeft: 16, fontSize: 11 }}>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span style={{ color: isDarkMode ? colours.dark.subText : colours.greyText }}>Point of Contact:</span>\r\n                    <span style={{ fontWeight: 500, textAlign: 'right' }}>\r\n                      {migrationLegacy.Point_of_Contact || '-'}\r\n                    </span>\r\n                  </div>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span style={{ color: isDarkMode ? colours.dark.subText : colours.greyText }}>Call Taker:</span>\r\n                    <span style={{ fontWeight: 500, textAlign: 'right' }}>\r\n                      {migrationLegacy.Call_Taker || '-'}\r\n                    </span>\r\n                  </div>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span style={{ color: isDarkMode ? colours.dark.subText : colours.greyText }}>Matter Ref:</span>\r\n                    <span style={{ fontWeight: 500, textAlign: 'right' }}>\r\n                      {migrationLegacy.Matter_Ref || '-'}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Full Notes Display */}\r\n              {migrationLegacy.Initial_first_call_notes && (\r\n                <div style={{ \r\n                  marginTop: 16,\r\n                  padding: 12,\r\n                  backgroundColor: isDarkMode ? colours.dark.inputBackground : colours.light.inputBackground,\r\n                  borderRadius: 6,\r\n                  border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`\r\n                }}>\r\n                  <div style={{ \r\n                    fontSize: 11, \r\n                    fontWeight: 600, \r\n                    color: colours.blue,\r\n                    marginBottom: 6\r\n                  }}>\r\n                    Full Notes:\r\n                  </div>\r\n                  <div style={{ \r\n                    fontSize: 10, \r\n                    lineHeight: 1.4,\r\n                    maxHeight: 120,\r\n                    overflow: 'auto',\r\n                    color: isDarkMode ? colours.dark.text : colours.light.text\r\n                  }}>\r\n                    {migrationLegacy.Initial_first_call_notes}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n            {/* New record editable */}\r\n            <div style={{\r\n              backgroundColor: isDarkMode ? colours.dark.background : colours.light.background,\r\n              border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n              borderRadius: 8,\r\n              padding: 16,\r\n              overflow: 'auto',\r\n              maxHeight: '65vh'\r\n            }}>\r\n              <div style={{ \r\n                display: 'flex', \r\n                alignItems: 'center', \r\n                gap: 8, \r\n                marginBottom: 12,\r\n                paddingBottom: 8,\r\n                borderBottom: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`\r\n              }}>\r\n                <Icon iconName=\"EditCreate\" style={{ \r\n                  fontSize: 14, \r\n                  color: colours.blue\r\n                }} />\r\n                <div style={{ \r\n                  fontWeight: 600, \r\n                  fontSize: 14,\r\n                  color: isDarkMode ? colours.dark.text : colours.light.text\r\n                }}>New Record</div>\r\n                <div style={{ \r\n                  fontSize: 10, \r\n                  opacity: 0.8,\r\n                  backgroundColor: colours.blue,\r\n                  color: '#ffffff',\r\n                  padding: '2px 6px',\r\n                  borderRadius: 4,\r\n                  fontWeight: 500\r\n                }}>\r\n                  EDITABLE\r\n                </div>\r\n              </div>\r\n\r\n              {/* Contact Information Section */}\r\n              <div style={{ marginBottom: 16 }}>\r\n                <div style={{ \r\n                  fontSize: 12, \r\n                  fontWeight: 600, \r\n                  color: colours.blue,\r\n                  marginBottom: 8,\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  gap: 6\r\n                }}>\r\n                  <Icon iconName=\"Contact\" style={{ fontSize: 11 }} />\r\n                  Contact Information\r\n                  <span style={{ \r\n                    fontSize: 9, \r\n                    color: colours.red,\r\n                    fontWeight: 700 \r\n                  }}>*</span>\r\n                </div>\r\n                <div style={{ display: 'grid', gap: 8, paddingLeft: 4 }}>\r\n                  <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: 6 }}>\r\n                    <TextField \r\n                      label=\"First name\" \r\n                      value={migrationDraft.first}\r\n                      onChange={(_, v) => setMigrationDraft(d => d ? { ...d, first: v || '' } : d)}\r\n                      required\r\n                      styles={{\r\n                        field: {\r\n                          backgroundColor: isDarkMode ? colours.dark.inputBackground : colours.light.inputBackground,\r\n                          border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n                          fontSize: 12,\r\n                          padding: '6px 8px'\r\n                        },\r\n                        fieldGroup: { height: 28 }\r\n                      }}\r\n                    />\r\n                    <TextField \r\n                      label=\"Last name\" \r\n                      value={migrationDraft.last}\r\n                      onChange={(_, v) => setMigrationDraft(d => d ? { ...d, last: v || '' } : d)}\r\n                      required\r\n                      styles={{\r\n                        field: {\r\n                          backgroundColor: isDarkMode ? colours.dark.inputBackground : colours.light.inputBackground,\r\n                          border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n                          fontSize: 12,\r\n                          padding: '6px 8px'\r\n                        },\r\n                        fieldGroup: { height: 28 }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <TextField \r\n                    label=\"Email\" \r\n                    value={migrationDraft.email}\r\n                    onChange={(_, v) => setMigrationDraft(d => d ? { ...d, email: v || '' } : d)}\r\n                    required\r\n                    styles={{\r\n                      field: {\r\n                        backgroundColor: isDarkMode ? colours.dark.inputBackground : colours.light.inputBackground,\r\n                        border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n                        fontSize: 12,\r\n                        padding: '6px 8px'\r\n                      },\r\n                      fieldGroup: { height: 28 }\r\n                    }}\r\n                  />\r\n                  <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: 6 }}>\r\n                    <TextField \r\n                      label=\"Phone\" \r\n                      value={migrationDraft.phone || ''}\r\n                      onChange={(_, v) => setMigrationDraft(d => d ? { ...d, phone: v || '' } : d)}\r\n                      styles={{\r\n                        field: {\r\n                          backgroundColor: isDarkMode ? colours.dark.inputBackground : colours.light.inputBackground,\r\n                          border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n                          fontSize: 12,\r\n                          padding: '6px 8px'\r\n                        },\r\n                        fieldGroup: { height: 28 }\r\n                      }}\r\n                    />\r\n                    <TextField \r\n                      label=\"Point of contact (poc)\" \r\n                      value={migrationDraft.poc || ''}\r\n                      onChange={(_, v) => setMigrationDraft(d => d ? { ...d, poc: v || '' } : d)}\r\n                      styles={{\r\n                        field: {\r\n                          backgroundColor: isDarkMode ? colours.dark.inputBackground : colours.light.inputBackground,\r\n                          border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n                          fontSize: 12,\r\n                          padding: '6px 8px'\r\n                        },\r\n                        fieldGroup: { height: 28 }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Business Details Section */}\r\n              <div style={{ marginBottom: 16 }}>\r\n                <div style={{ \r\n                  fontSize: 12, \r\n                  fontWeight: 600, \r\n                  color: colours.green,\r\n                  marginBottom: 8,\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  gap: 6\r\n                }}>\r\n                  <Icon iconName=\"Work\" style={{ fontSize: 11 }} />\r\n                  Business Details\r\n                  <span style={{ \r\n                    fontSize: 9, \r\n                    color: colours.red,\r\n                    fontWeight: 700 \r\n                  }}>*</span>\r\n                </div>\r\n                <div style={{ display: 'grid', gap: 8, paddingLeft: 4 }}>\r\n                  <TextField \r\n                    label=\"Area of work (aow)\" \r\n                    value={migrationDraft.aow}\r\n                    onChange={(_, v) => setMigrationDraft(d => d ? { ...d, aow: v || '' } : d)}\r\n                    required\r\n                    styles={{\r\n                      field: {\r\n                        backgroundColor: isDarkMode ? colours.dark.inputBackground : colours.light.inputBackground,\r\n                        border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n                        fontSize: 12,\r\n                        padding: '6px 8px'\r\n                      },\r\n                      fieldGroup: { height: 28 }\r\n                    }}\r\n                  />\r\n                  <TextField \r\n                    label=\"Type of work (tow)\" \r\n                    value={migrationDraft.tow || ''}\r\n                    onChange={(_, v) => setMigrationDraft(d => d ? { ...d, tow: v || '' } : d)}\r\n                    styles={{\r\n                      field: {\r\n                        backgroundColor: isDarkMode ? colours.dark.inputBackground : colours.light.inputBackground,\r\n                        border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n                        fontSize: 12,\r\n                        padding: '6px 8px'\r\n                      },\r\n                      fieldGroup: { height: 28 }\r\n                    }}\r\n                  />\r\n                  <TextField \r\n                    label=\"Method of contact (moc)\" \r\n                    value={migrationDraft.moc}\r\n                    onChange={(_, v) => setMigrationDraft(d => d ? { ...d, moc: v || '' } : d)}\r\n                    required\r\n                    styles={{\r\n                      field: {\r\n                        backgroundColor: isDarkMode ? colours.dark.inputBackground : colours.light.inputBackground,\r\n                        border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n                        fontSize: 12,\r\n                        padding: '6px 8px'\r\n                      },\r\n                      fieldGroup: { height: 28 }\r\n                    }}\r\n                  />\r\n                  <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: 6 }}>\r\n                    <TextField \r\n                      label=\"Value\" \r\n                      value={migrationDraft.value || ''}\r\n                      onChange={(_, v) => setMigrationDraft(d => d ? { ...d, value: v || '' } : d)}\r\n                      styles={{\r\n                        field: {\r\n                          backgroundColor: isDarkMode ? colours.dark.inputBackground : colours.light.inputBackground,\r\n                          border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n                          fontSize: 12,\r\n                          padding: '6px 8px'\r\n                        },\r\n                        fieldGroup: { height: 28 }\r\n                      }}\r\n                    />\r\n                    <TextField \r\n                      label=\"Rating\" \r\n                      value={migrationDraft.rating || ''}\r\n                      onChange={(_, v) => setMigrationDraft(d => d ? { ...d, rating: v || '' } : d)}\r\n                      styles={{\r\n                        field: {\r\n                          backgroundColor: isDarkMode ? colours.dark.inputBackground : colours.light.inputBackground,\r\n                          border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n                          fontSize: 12,\r\n                          padding: '6px 8px'\r\n                        },\r\n                        fieldGroup: { height: 28 }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Attribution Section */}\r\n              <div style={{ marginBottom: 16 }}>\r\n                <div style={{ \r\n                  fontSize: 12, \r\n                  fontWeight: 600, \r\n                  color: colours.yellow,\r\n                  marginBottom: 8,\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  gap: 6\r\n                }}>\r\n                  <Icon iconName=\"Ringer\" style={{ fontSize: 11 }} />\r\n                  Attribution & Source\r\n                </div>\r\n                <div style={{ display: 'grid', gap: 8, paddingLeft: 4 }}>\r\n                  <TextField \r\n                    label=\"Source\" \r\n                    value={migrationDraft.source || ''}\r\n                    onChange={(_, v) => setMigrationDraft(d => d ? { ...d, source: v || '' } : d)}\r\n                    styles={{\r\n                      field: {\r\n                        backgroundColor: isDarkMode ? colours.dark.inputBackground : colours.light.inputBackground,\r\n                        border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n                        fontSize: 12,\r\n                        padding: '6px 8px'\r\n                      },\r\n                      fieldGroup: { height: 28 }\r\n                    }}\r\n                  />\r\n                  <TextField \r\n                    label=\"Contact referrer\" \r\n                    value={migrationDraft.contact_referrer || ''}\r\n                    onChange={(_, v) => setMigrationDraft(d => d ? { ...d, contact_referrer: v || '' } : d)}\r\n                    styles={{\r\n                      field: {\r\n                        backgroundColor: isDarkMode ? colours.dark.inputBackground : colours.light.inputBackground,\r\n                        border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n                        fontSize: 12,\r\n                        padding: '6px 8px'\r\n                      },\r\n                      fieldGroup: { height: 28 }\r\n                    }}\r\n                  />\r\n                  <TextField \r\n                    label=\"Company referrer\" \r\n                    value={migrationDraft.company_referrer || ''}\r\n                    onChange={(_, v) => setMigrationDraft(d => d ? { ...d, company_referrer: v || '' } : d)}\r\n                    styles={{\r\n                      field: {\r\n                        backgroundColor: isDarkMode ? colours.dark.inputBackground : colours.light.inputBackground,\r\n                        border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n                        fontSize: 12,\r\n                        padding: '6px 8px'\r\n                      },\r\n                      fieldGroup: { height: 28 }\r\n                    }}\r\n                  />\r\n                  <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: 6 }}>\r\n                    <TextField \r\n                      label=\"URL\" \r\n                      value={migrationDraft.url || ''}\r\n                      onChange={(_, v) => setMigrationDraft(d => d ? { ...d, url: v || '' } : d)}\r\n                      styles={{\r\n                        field: {\r\n                          backgroundColor: isDarkMode ? colours.dark.inputBackground : colours.light.inputBackground,\r\n                          border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n                          fontSize: 12,\r\n                          padding: '6px 8px'\r\n                        },\r\n                        fieldGroup: { height: 28 }\r\n                      }}\r\n                    />\r\n                    <TextField \r\n                      label=\"GCLID\" \r\n                      value={migrationDraft.gclid || ''}\r\n                      onChange={(_, v) => setMigrationDraft(d => d ? { ...d, gclid: v || '' } : d)}\r\n                      styles={{\r\n                        field: {\r\n                          backgroundColor: isDarkMode ? colours.dark.inputBackground : colours.light.inputBackground,\r\n                          border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n                          fontSize: 12,\r\n                          padding: '6px 8px',\r\n                          fontFamily: 'monospace'\r\n                        },\r\n                        fieldGroup: { height: 28 }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Internal Section */}\r\n              <div style={{ marginBottom: 16 }}>\r\n                <div style={{ \r\n                  fontSize: 12, \r\n                  fontWeight: 600, \r\n                  color: colours.red,\r\n                  marginBottom: 8,\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  gap: 6\r\n                }}>\r\n                  <Icon iconName=\"People\" style={{ fontSize: 11 }} />\r\n                  Internal Details\r\n                </div>\r\n                <div style={{ display: 'grid', gap: 8, paddingLeft: 4 }}>\r\n                  <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: 6 }}>\r\n                    <TextField \r\n                      label=\"Representative (rep)\" \r\n                      value={migrationDraft.rep || ''}\r\n                      onChange={(_, v) => setMigrationDraft(d => d ? { ...d, rep: v || '' } : d)}\r\n                      styles={{\r\n                        field: {\r\n                          backgroundColor: isDarkMode ? colours.dark.inputBackground : colours.light.inputBackground,\r\n                          border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n                          fontSize: 12,\r\n                          padding: '6px 8px'\r\n                        },\r\n                        fieldGroup: { height: 28 }\r\n                      }}\r\n                    />\r\n                    <TextField \r\n                      label=\"Rank\" \r\n                      value={migrationDraft.rank || ''}\r\n                      onChange={(_, v) => setMigrationDraft(d => d ? { ...d, rank: v || '' } : d)}\r\n                      styles={{\r\n                        field: {\r\n                          backgroundColor: isDarkMode ? colours.dark.inputBackground : colours.light.inputBackground,\r\n                          border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n                          fontSize: 12,\r\n                          padding: '6px 8px'\r\n                        },\r\n                        fieldGroup: { height: 28 }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Operational Fields Section */}\r\n              <div style={{ marginBottom: 16 }}>\r\n                <div style={{ \r\n                  fontSize: 12, \r\n                  fontWeight: 600, \r\n                  color: colours.blue,\r\n                  marginBottom: 8,\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  gap: 6\r\n                }}>\r\n                  <Icon iconName=\"Settings\" style={{ fontSize: 11 }} />\r\n                  Operational Fields\r\n                </div>\r\n                <div style={{ display: 'grid', gap: 8, paddingLeft: 4 }}>\r\n                  <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: 6 }}>\r\n                    <TextField \r\n                      label=\"Stage\" \r\n                      value={migrationDraft.stage || ''}\r\n                      onChange={(_, v) => setMigrationDraft(d => d ? { ...d, stage: v || '' } : d)}\r\n                      styles={{\r\n                        field: {\r\n                          backgroundColor: isDarkMode ? colours.dark.inputBackground : colours.light.inputBackground,\r\n                          border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n                          fontSize: 12,\r\n                          padding: '6px 8px'\r\n                        },\r\n                        fieldGroup: { height: 28 }\r\n                      }}\r\n                    />\r\n                    <TextField \r\n                      label=\"Claim Date\" \r\n                      value={migrationDraft.claim || ''}\r\n                      onChange={(_, v) => setMigrationDraft(d => d ? { ...d, claim: v || '' } : d)}\r\n                      placeholder=\"YYYY-MM-DD HH:mm:ss\"\r\n                      styles={{\r\n                        field: {\r\n                          backgroundColor: isDarkMode ? colours.dark.inputBackground : colours.light.inputBackground,\r\n                          border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n                          fontSize: 12,\r\n                          padding: '6px 8px'\r\n                        },\r\n                        fieldGroup: { height: 28 }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr 1fr', gap: 6 }}>\r\n                    <TextField \r\n                      label=\"Pitch\" \r\n                      value={migrationDraft.pitch || ''}\r\n                      onChange={(_, v) => setMigrationDraft(d => d ? { ...d, pitch: v || '' } : d)}\r\n                      placeholder=\"0\"\r\n                      styles={{\r\n                        field: {\r\n                          backgroundColor: isDarkMode ? colours.dark.inputBackground : colours.light.inputBackground,\r\n                          border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n                          fontSize: 12,\r\n                          padding: '6px 8px'\r\n                        },\r\n                        fieldGroup: { height: 28 }\r\n                      }}\r\n                    />\r\n                    <TextField \r\n                      label=\"ACID\" \r\n                      value={migrationDraft.acid || ''}\r\n                      onChange={(_, v) => setMigrationDraft(d => d ? { ...d, acid: v || '' } : d)}\r\n                      styles={{\r\n                        field: {\r\n                          backgroundColor: isDarkMode ? colours.dark.inputBackground : colours.light.inputBackground,\r\n                          border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n                          fontSize: 12,\r\n                          padding: '6px 8px'\r\n                        },\r\n                        fieldGroup: { height: 28 }\r\n                      }}\r\n                    />\r\n                    <TextField \r\n                      label=\"Card ID\" \r\n                      value={migrationDraft.card_id || ''}\r\n                      onChange={(_, v) => setMigrationDraft(d => d ? { ...d, card_id: v || '' } : d)}\r\n                      styles={{\r\n                        field: {\r\n                          backgroundColor: isDarkMode ? colours.dark.inputBackground : colours.light.inputBackground,\r\n                          border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n                          fontSize: 12,\r\n                          padding: '6px 8px'\r\n                        },\r\n                        fieldGroup: { height: 28 }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Notes Section */}\r\n              <div>\r\n                <div style={{ \r\n                  fontSize: 12, \r\n                  fontWeight: 600, \r\n                  color: colours.yellow,\r\n                  marginBottom: 8,\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  gap: 6\r\n                }}>\r\n                  <Icon iconName=\"FileComment\" style={{ fontSize: 11 }} />\r\n                  Notes & Additional Info\r\n                </div>\r\n                <div style={{ paddingLeft: 4 }}>\r\n                  <TextField \r\n                    label=\"Notes\" \r\n                    multiline \r\n                    rows={3} \r\n                    value={migrationDraft.notes || ''}\r\n                    onChange={(_, v) => setMigrationDraft(d => d ? { ...d, notes: v || '' } : d)}\r\n                    styles={{\r\n                      field: {\r\n                        backgroundColor: isDarkMode ? colours.dark.inputBackground : colours.light.inputBackground,\r\n                        border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n                        fontSize: 11,\r\n                        lineHeight: 1.4,\r\n                        padding: '8px'\r\n                      }\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {migrationError && (\r\n                <div style={{ marginTop: 16 }}>\r\n                  <MessageBar messageBarType={MessageBarType.error}>\r\n                    {migrationError}\r\n                  </MessageBar>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n        <DialogFooter styles={{\r\n          actions: {\r\n            backgroundColor: isDarkMode ? colours.dark.sectionBackground : colours.light.sectionBackground,\r\n            borderTop: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n            padding: '12px 16px',\r\n            display: 'flex',\r\n            gap: 8,\r\n            justifyContent: 'flex-end'\r\n          }\r\n        }}>\r\n          <PrimaryButton \r\n            text={migrationSubmitting ? 'Migrating...' : 'Confirm & Create'}\r\n            iconProps={migrationSubmitting ? { iconName: 'Sync' } : { iconName: 'CloudUpload' }}\r\n            onClick={submitMigration} \r\n            disabled={migrationSubmitting}\r\n            styles={{\r\n              root: {\r\n                backgroundColor: colours.blue,\r\n                border: 'none',\r\n                borderRadius: 4,\r\n                padding: '6px 12px',\r\n                fontWeight: 600,\r\n                fontSize: 12,\r\n                height: 28,\r\n                minWidth: 110\r\n              },\r\n              rootHovered: {\r\n                backgroundColor: colours.blue,\r\n                opacity: 0.9\r\n              },\r\n              rootPressed: {\r\n                backgroundColor: colours.blue,\r\n                opacity: 0.8\r\n              },\r\n              rootDisabled: {\r\n                backgroundColor: isDarkMode ? colours.dark.disabledBackground : colours.light.disabledBackground,\r\n                opacity: 0.6\r\n              }\r\n            }}\r\n          />\r\n          <DefaultButton \r\n            text=\"Cancel\" \r\n            onClick={closeMigrationModal} \r\n            disabled={migrationSubmitting}\r\n            styles={{\r\n              root: {\r\n                backgroundColor: 'transparent',\r\n                border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n                borderRadius: 4,\r\n                padding: '6px 12px',\r\n                fontWeight: 500,\r\n                fontSize: 12,\r\n                height: 28,\r\n                minWidth: 60,\r\n                color: isDarkMode ? colours.dark.text : colours.light.text\r\n              },\r\n              rootHovered: {\r\n                backgroundColor: isDarkMode ? colours.dark.hoverBackground : colours.light.hoverBackground\r\n              }\r\n            }}\r\n          />\r\n        </DialogFooter>\r\n      </Dialog>\r\n\r\n      {/* Reassignment Dropdown */}\r\n      {reassignmentDropdown && (\r\n        <div\r\n          className=\"reassignment-dropdown\"\r\n          style={{\r\n            position: 'fixed',\r\n            left: reassignmentDropdown.x,\r\n            top: reassignmentDropdown.y,\r\n            zIndex: 9999,\r\n            minWidth: 250,\r\n            background: isDarkMode ? 'rgba(15, 23, 42, 0.98)' : 'rgba(255, 255, 255, 0.98)',\r\n            border: `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.3)' : 'rgba(148, 163, 184, 0.25)'}`,\r\n            borderRadius: 8,\r\n            boxShadow: isDarkMode ? '0 8px 24px rgba(0, 0, 0, 0.4)' : '0 6px 20px rgba(15, 23, 42, 0.15)',\r\n            padding: 16,\r\n          }}\r\n        >\r\n          <div style={{ \r\n            fontSize: 14, \r\n            fontWeight: 600, \r\n            marginBottom: 12,\r\n            color: isDarkMode ? '#e2e8f0' : '#334155'\r\n          }}>\r\n            Reassign to:\r\n          </div>\r\n          <select\r\n            value=\"\"\r\n            onChange={(event) => handleReassignmentSelect(event.target.value)}\r\n            disabled={isReassigning}\r\n            style={{\r\n              width: '100%',\r\n              padding: '8px 12px',\r\n              borderRadius: 6,\r\n              border: `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.24)' : 'rgba(13, 47, 96, 0.16)'}`,\r\n              background: isDarkMode ? 'rgba(15, 23, 42, 0.9)' : 'rgba(255, 255, 255, 0.95)',\r\n              color: isDarkMode ? '#e2e8f0' : '#334155',\r\n              fontSize: 14,\r\n              fontFamily: 'Raleway, sans-serif',\r\n              cursor: isReassigning ? 'default' : 'pointer',\r\n              outline: 'none'\r\n            }}\r\n          >\r\n            <option value=\"\" disabled>Select team member...</option>\r\n            {teamMemberOptions.map((option) => (\r\n              <option key={option.value} value={option.value}>\r\n                {option.text}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {isReassigning && (\r\n            <div style={{ \r\n              marginTop: 8, \r\n              fontSize: 12, \r\n              color: isDarkMode ? '#94a3b8' : '#64748b',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              gap: 6\r\n            }}>\r\n              <Icon iconName=\"Loading\" style={{ animation: 'spin 1s linear infinite' }} />\r\n              Reassigning...\r\n            </div>\r\n          )}\r\n          <div style={{ \r\n            marginTop: 12, \r\n            fontSize: 11, \r\n            color: isDarkMode ? '#64748b' : '#94a3b8',\r\n            fontStyle: 'italic'\r\n          }}>\r\n            Click outside to cancel\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Data Modal */}\r\n      {modalData.isOpen && (\r\n        <div style={{\r\n          position: 'fixed',\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n          backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          zIndex: 1000,\r\n        }}\r\n        onClick={closeModal}>\r\n          <div style={{\r\n            backgroundColor: isDarkMode ? colours.dark.sectionBackground : colours.light.sectionBackground,\r\n            borderRadius: '12px',\r\n            padding: '24px',\r\n            maxWidth: '80vw',\r\n            maxHeight: '80vh',\r\n            overflow: 'hidden',\r\n            boxShadow: isDarkMode ? '0 20px 60px rgba(0,0,0,0.4)' : '0 20px 60px rgba(0,0,0,0.15)',\r\n            border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            minWidth: '600px'\r\n          }}\r\n          onClick={(e) => e.stopPropagation()}>\r\n            \r\n            {/* Modal Header */}\r\n            <div style={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              alignItems: 'center',\r\n              marginBottom: '20px',\r\n              paddingBottom: '16px',\r\n              borderBottom: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`\r\n            }}>\r\n              <h3 style={{\r\n                margin: 0,\r\n                color: isDarkMode ? colours.dark.text : colours.light.text,\r\n                fontSize: '18px',\r\n                fontWeight: 600\r\n              }}>\r\n                {modalData.title}\r\n              </h3>\r\n              <div style={{ display: 'flex', alignItems: 'center', gap: 12 }}>\r\n                <span style={{\r\n                  fontSize: '14px',\r\n                  color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n                  fontWeight: 500\r\n                }}>\r\n                  {modalData.items.length} enquir{modalData.items.length === 1 ? 'y' : 'ies'}\r\n                </span>\r\n                <button\r\n                  onClick={closeModal}\r\n                  style={{\r\n                    background: 'none',\r\n                    border: 'none',\r\n                    fontSize: '20px',\r\n                    cursor: 'pointer',\r\n                    color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n                    padding: '4px',\r\n                    borderRadius: '4px'\r\n                  }}\r\n                  title=\"Close\"\r\n                >\r\n                  ×\r\n                </button>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Modal Content */}\r\n            <div style={{\r\n              flex: 1,\r\n              overflow: 'auto',\r\n              paddingRight: '8px',\r\n              marginRight: '-8px'\r\n            }}>\r\n              {modalData.items.length === 0 ? (\r\n                <div style={{\r\n                  textAlign: 'center',\r\n                  padding: '40px',\r\n                  color: isDarkMode ? colours.dark.subText : colours.light.subText\r\n                }}>\r\n                  No enquiries found\r\n                </div>\r\n              ) : (\r\n                <div style={{ display: 'flex', flexDirection: 'column', gap: '6px' }}>\r\n                  {modalData.items.map(({ enquiry, member }, index) => {\r\n                    const createdDate = parseDate((enquiry as any).Touchpoint_Date || enquiry.Date_Created);\r\n                    const firstName = toStr(enquiry.First_Name || (enquiry as any).first || '');\r\n                    const lastName = toStr(enquiry.Last_Name || (enquiry as any).last || '');\r\n                    const fullName = `${firstName} ${lastName}`.trim() || 'Unknown';\r\n                    const email = toStr(enquiry.Email || (enquiry as any).email || '');\r\n                    const phone = toStr(enquiry.Phone_Number || (enquiry as any).phone || '');\r\n                    const aow = toStr(enquiry.Area_of_Work || (enquiry as any).aow || '');\r\n                    const notes = toStr(enquiry.Initial_first_call_notes || (enquiry as any).notes || '').substring(0, 80);\r\n                    \r\n                    return (\r\n                      <div key={index} style={{\r\n                        padding: '8px 12px',\r\n                        backgroundColor: index % 2 === 0 ? \r\n                          (isDarkMode ? 'rgba(255,255,255,0.02)' : 'rgba(0,0,0,0.02)') : \r\n                          'transparent',\r\n                        borderRadius: '4px',\r\n                        fontSize: '13px',\r\n                        lineHeight: '1.4'\r\n                      }}>\r\n                        <div style={{\r\n                          display: 'flex',\r\n                          justifyContent: 'space-between',\r\n                          alignItems: 'center',\r\n                          marginBottom: '4px'\r\n                        }}>\r\n                          <div style={{\r\n                            fontWeight: 600,\r\n                            color: isDarkMode ? colours.dark.text : colours.light.text\r\n                          }}>\r\n                            {fullName}\r\n                          </div>\r\n                          <div style={{\r\n                            fontSize: '11px',\r\n                            color: isDarkMode ? colours.dark.subText : colours.light.subText\r\n                          }}>\r\n                            {createdDate ? formatDateForPicker(createdDate) : 'Unknown date'}\r\n                          </div>\r\n                        </div>\r\n                        \r\n                        <div style={{ \r\n                          display: 'grid', \r\n                          gridTemplateColumns: '1fr 1fr', \r\n                          gap: '8px 16px',\r\n                          fontSize: '11px',\r\n                          color: isDarkMode ? colours.dark.subText : colours.light.subText\r\n                        }}>\r\n                          {email && (\r\n                            <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                              <span style={{ minWidth: '40px', fontWeight: 500 }}>Email:</span>\r\n                              <span>{email}</span>\r\n                            </div>\r\n                          )}\r\n                          {phone && (\r\n                            <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                              <span style={{ minWidth: '40px', fontWeight: 500 }}>Phone:</span>\r\n                              <span>{phone}</span>\r\n                            </div>\r\n                          )}\r\n                          {aow && (\r\n                            <div style={{ display: 'flex', alignItems: 'center', gridColumn: '1 / -1' }}>\r\n                              <span style={{ minWidth: '40px', fontWeight: 500 }}>Area:</span>\r\n                              <span>{aow}</span>\r\n                            </div>\r\n                          )}\r\n                          {modalData.type === 'source' && (\r\n                            <div style={{ display: 'flex', alignItems: 'center', gridColumn: '1 / -1' }}>\r\n                              <span style={{ minWidth: '40px', fontWeight: 500, color: colours.blue }}>Source:</span>\r\n                              <span style={{ color: colours.blue }}>{getNormalizedEnquirySourceLabel(enquiry)}</span>\r\n                            </div>\r\n                          )}\r\n                          {modalData.type === 'moc' && (\r\n                            <div style={{ display: 'flex', alignItems: 'center', gridColumn: '1 / -1' }}>\r\n                              <span style={{ minWidth: '40px', fontWeight: 500, color: colours.blue }}>Contact:</span>\r\n                              <span style={{ color: colours.blue }}>{getNormalizedEnquiryMOCLabel(enquiry)}</span>\r\n                            </div>\r\n                          )}\r\n                          {modalData.type === 'poc' && (\r\n                            <div style={{ display: 'flex', alignItems: 'center', gridColumn: '1 / -1' }}>\r\n                              <span style={{ minWidth: '40px', fontWeight: 500, color: colours.blue }}>Handler:</span>\r\n                              <span style={{ color: colours.blue }}>{toStr(enquiry.Point_of_Contact || (enquiry as any).point_of_contact).trim()}</span>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        \r\n                        {notes && (\r\n                          <div style={{\r\n                            fontSize: '10px',\r\n                            color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n                            fontStyle: 'italic',\r\n                            marginTop: '4px',\r\n                            opacity: 0.8\r\n                          }}>\r\n                            \"{notes}...\"\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            {/* Modal Footer */}\r\n            <div style={{\r\n              marginTop: '20px',\r\n              paddingTop: '16px',\r\n              borderTop: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              alignItems: 'center'\r\n            }}>\r\n              <button\r\n                onClick={() => {\r\n                  // Apply filter and close modal\r\n                  if (modalData.type === 'source') {\r\n                    setSourceFilter(sourceFilter === modalData.filterValue ? null : modalData.filterValue);\r\n                  } else if (modalData.type === 'moc') {\r\n                    setMocFilter(mocFilter === modalData.filterValue ? null : modalData.filterValue);\r\n                  } else if (modalData.type === 'poc') {\r\n                    setPocFilter(pocFilter === modalData.filterValue ? null : modalData.filterValue);\r\n                  }\r\n                  closeModal();\r\n                }}\r\n                style={{\r\n                  padding: '8px 16px',\r\n                  backgroundColor: colours.blue,\r\n                  color: 'white',\r\n                  border: 'none',\r\n                  borderRadius: '6px',\r\n                  cursor: 'pointer',\r\n                  fontSize: '13px',\r\n                  fontWeight: 500\r\n                }}\r\n              >\r\n                Filter by {modalData.filterValue}\r\n              </button>\r\n              <button\r\n                onClick={closeModal}\r\n                style={{\r\n                  padding: '8px 16px',\r\n                  backgroundColor: 'transparent',\r\n                  color: isDarkMode ? colours.dark.subText : colours.light.subText,\r\n                  border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,\r\n                  borderRadius: '6px',\r\n                  cursor: 'pointer',\r\n                  fontSize: '13px'\r\n                }}\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport type { MarketingMetrics, GoogleAnalyticsMetrics, GoogleAdsMetrics, MetaAdsMetrics };\r\nexport default EnquiriesReport;\r\n","import { useCallback, useEffect, useRef, useState } from 'react';\r\n\r\ninterface DatasetUpdate {\r\n  type: 'init' | 'dataset-complete' | 'dataset-error' | 'complete';\r\n  dataset?: string;\r\n  status?: 'loading' | 'ready' | 'error';\r\n  data?: any;\r\n  cached?: boolean;\r\n  count?: number;\r\n  error?: string;\r\n  datasets?: Array<{ name: string; status: string }>;\r\n}\r\n\r\ninterface UseStreamingDatasetsOptions {\r\n  datasets?: string[];\r\n  entraId?: string;\r\n  bypassCache?: boolean;\r\n  autoStart?: boolean;\r\n  maxConcurrent?: number; // Maximum number of datasets to fetch in parallel\r\n}\r\n\r\ninterface DatasetState {\r\n  status: 'idle' | 'loading' | 'ready' | 'error';\r\n  data: any;\r\n  cached: boolean;\r\n  count: number;\r\n  error?: string;\r\n  updatedAt?: number;\r\n  elapsedMs?: number;\r\n}\r\n\r\ninterface UseStreamingDatasetsResult {\r\n  datasets: Record<string, DatasetState>;\r\n  isConnected: boolean;\r\n  isComplete: boolean;\r\n  start: (override?: { datasets?: string[]; bypassCache?: boolean }) => void;\r\n  stop: () => void;\r\n  progress: {\r\n    completed: number;\r\n    total: number;\r\n    percentage: number;\r\n  };\r\n}\r\n\r\nexport function useStreamingDatasets(options: UseStreamingDatasetsOptions = {}): UseStreamingDatasetsResult {\r\n  const {\r\n    datasets = ['userData', 'teamData', 'enquiries', 'allMatters', 'wip', 'recoveredFees', 'poidData', 'wipClioCurrentWeek'],\r\n    entraId,\r\n    bypassCache = false,\r\n    autoStart = false,\r\n    maxConcurrent = 3, // Process up to 3 datasets in parallel for optimal performance\r\n  } = options;\r\n\r\n  const [datasetStates, setDatasetStates] = useState<Record<string, DatasetState>>({});\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [isComplete, setIsComplete] = useState(false);\r\n  const eventSourceRef = useRef<EventSource | null>(null);\r\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n  const stop = useCallback(() => {\r\n    if (eventSourceRef.current) {\r\n      eventSourceRef.current.close();\r\n      eventSourceRef.current = null;\r\n    }\r\n    if (timeoutRef.current) {\r\n      clearTimeout(timeoutRef.current);\r\n      timeoutRef.current = null;\r\n    }\r\n    setIsConnected(false);\r\n    setIsComplete(false);\r\n  }, []);\r\n\r\n  const start = useCallback((override?: { datasets?: string[]; bypassCache?: boolean }) => {\r\n    // Close existing connection first\r\n    if (eventSourceRef.current) {\r\n      eventSourceRef.current.close();\r\n      eventSourceRef.current = null;\r\n    }\r\n    setIsConnected(false);\r\n    setIsComplete(false);\r\n\r\n    // Build URL with query parameters\r\n    const effectiveDatasets = override?.datasets && override.datasets.length > 0 ? override.datasets : datasets;\r\n    const effectiveBypass = override?.bypassCache ?? bypassCache;\r\n\r\n    const url = new URL('/api/reporting-stream/stream-datasets', window.location.origin);\r\n    url.searchParams.set('datasets', effectiveDatasets.join(','));\r\n    if (entraId) {\r\n      url.searchParams.set('entraId', entraId);\r\n    }\r\n    if (effectiveBypass) {\r\n      url.searchParams.set('bypassCache', 'true');\r\n    }\r\n    if (maxConcurrent) {\r\n      url.searchParams.set('maxConcurrent', maxConcurrent.toString());\r\n    }\r\n\r\n    // Create EventSource connection\r\n    const eventSource = new EventSource(url.toString());\r\n    eventSourceRef.current = eventSource;\r\n\r\n    // Track timings for a concise summary at the end\r\n  const streamStart = Date.now();\r\n  const starts: Record<string, number> = {};\r\n    let cachedCount = 0;\r\n    let cachedElapsed = 0;\r\n    let freshCount = 0;\r\n    let freshElapsed = 0;\r\n\r\n    eventSource.onopen = () => {\r\n      setIsConnected(true);\r\n      setIsComplete(false);\r\n      \r\n      // Set a timeout to mark stuck datasets as error after 5 minutes\r\n      timeoutRef.current = setTimeout(() => {\r\n        console.warn('Streaming timeout reached - marking incomplete datasets as error');\r\n        setDatasetStates(prev => {\r\n          const next = { ...prev };\r\n          Object.keys(next).forEach(dataset => {\r\n            if (next[dataset].status === 'loading') {\r\n              next[dataset] = {\r\n                ...next[dataset],\r\n                status: 'error',\r\n                error: 'Timeout: Dataset took too long to load (>5min)',\r\n                updatedAt: Date.now(),\r\n                elapsedMs: starts[dataset] ? Date.now() - starts[dataset] : undefined,\r\n              };\r\n            }\r\n          });\r\n          return next;\r\n        });\r\n        setIsComplete(true);\r\n        stop();\r\n      }, 300000); // 5 minutes timeout (300 seconds)\r\n    };\r\n\r\n    eventSource.onmessage = (event) => {\r\n      try {\r\n        const update: DatasetUpdate = JSON.parse(event.data);\r\n\r\n        switch (update.type) {\r\n          case 'init':\r\n            if (update.datasets) {\r\n              setDatasetStates(prev => {\r\n                const next: Record<string, DatasetState> = {};\r\n                update.datasets!.forEach(({ name, status }) => {\r\n                  starts[name] = Date.now();\r\n                  next[name] = {\r\n                    status: status as 'loading',\r\n                    data: null,\r\n                    cached: false,\r\n                    count: 0,\r\n                    updatedAt: undefined,\r\n                    elapsedMs: 0,\r\n                  };\r\n                });\r\n                return next;\r\n              });\r\n            }\r\n            break;\r\n\r\n          case 'dataset-complete':\r\n            if (update.dataset) {\r\n              const started = starts[update.dataset!];\r\n              if (started) {\r\n                const elapsed = Date.now() - started;\r\n                if (update.cached) {\r\n                  cachedCount++;\r\n                  cachedElapsed += elapsed;\r\n                } else {\r\n                  freshCount++;\r\n                  freshElapsed += elapsed;\r\n                }\r\n              }\r\n              setDatasetStates(prev => ({\r\n                ...prev,\r\n                [update.dataset!]: {\r\n                  status: 'ready',\r\n                  data: update.data,\r\n                  cached: update.cached || false,\r\n                  count: update.count || 0,\r\n                  updatedAt: Date.now(),\r\n                  elapsedMs: started ? Date.now() - started : undefined,\r\n                },\r\n              }));\r\n            }\r\n            break;\r\n\r\n          case 'dataset-error':\r\n            if (update.dataset) {\r\n              const started = starts[update.dataset!];\r\n              setDatasetStates(prev => ({\r\n                ...prev,\r\n                [update.dataset!]: {\r\n                  ...prev[update.dataset!],\r\n                  status: 'error',\r\n                  error: update.error,\r\n                  updatedAt: Date.now(),\r\n                  elapsedMs: started ? Date.now() - started : undefined,\r\n                },\r\n              }));\r\n            }\r\n            break;\r\n\r\n          case 'complete':\r\n            setIsComplete(true);\r\n            // Clear timeout since we completed successfully\r\n            if (timeoutRef.current) {\r\n              clearTimeout(timeoutRef.current);\r\n              timeoutRef.current = null;\r\n            }\r\n            // Print one concise summary\r\n            const totalElapsed = Date.now() - streamStart;\r\n            const avgFresh = freshCount ? Math.round(freshElapsed / freshCount) : 0;\r\n            const avgCached = cachedCount ? Math.round(cachedElapsed / cachedCount) : 0;\r\n            const estSaved = freshCount \r\n              ? Math.max(0, (avgFresh * cachedCount) - cachedElapsed) \r\n              : 0;\r\n            // eslint-disable-next-line no-console\r\n            console.info(\r\n              `Reporting stream: ${cachedCount + freshCount} datasets in ${Math.round(totalElapsed)}ms | cached: ${cachedCount}` +\r\n              (cachedCount ? ` (avg ${avgCached}ms)` : '') +\r\n              ` | fresh: ${freshCount}` + (freshCount ? ` (avg ${avgFresh}ms)` : '') +\r\n              (estSaved ? ` | est. saved ~${Math.round(estSaved)}ms` : '')\r\n            );\r\n            stop(); // Close the connection\r\n            break;\r\n        }\r\n      } catch (error) {\r\n        // eslint-disable-next-line no-console\r\n        console.error('Streaming update parse error:', error);\r\n      }\r\n    };\r\n\r\n    eventSource.onerror = (error) => {\r\n      // eslint-disable-next-line no-console\r\n      console.error('Reporting stream connection error:', error, 'state:', eventSource.readyState);\r\n      setIsConnected(false);\r\n      // Don't call stop() here to avoid circular dependency, just close directly\r\n      if (eventSourceRef.current) {\r\n        eventSourceRef.current.close();\r\n        eventSourceRef.current = null;\r\n      }\r\n    };\r\n  }, [datasets, entraId, bypassCache]);\r\n\r\n  // Auto-start if requested (do not depend on `start` to avoid effect restarts on re-render)\r\n  useEffect(() => {\r\n    if (!autoStart) return;\r\n    start();\r\n    return () => {\r\n      if (eventSourceRef.current) {\r\n        eventSourceRef.current.close();\r\n        eventSourceRef.current = null;\r\n      }\r\n      setIsConnected(false);\r\n      setIsComplete(false);\r\n    };\r\n  }, [autoStart]);\r\n\r\n  // Calculate progress\r\n  const progress = {\r\n    completed: Object.values(datasetStates).filter(state => \r\n      state.status === 'ready' || state.status === 'error'\r\n    ).length,\r\n    total: Object.keys(datasetStates).length,\r\n    percentage: Object.keys(datasetStates).length > 0 \r\n      ? (Object.values(datasetStates).filter(state => \r\n          state.status === 'ready' || state.status === 'error'\r\n        ).length / Object.keys(datasetStates).length) * 100\r\n      : 0,\r\n  };\r\n\r\n  return {\r\n    datasets: datasetStates,\r\n    isConnected,\r\n    isComplete,\r\n    start,\r\n    stop,\r\n    progress,\r\n  };\r\n}\r\n\r\nexport default useStreamingDatasets;","import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport type { CSSProperties } from 'react';\r\nimport {\r\n  DefaultButton,\r\n  PrimaryButton,\r\n  Spinner,\r\n  SpinnerSize,\r\n  FontIcon,\r\n  type IButtonStyles,\r\n} from '@fluentui/react';\r\nimport { colours } from '../../app/styles/colours';\r\nimport { useTheme } from '../../app/functionality/ThemeContext';\r\nimport { useNavigatorActions } from '../../app/functionality/NavigatorContext';\r\nimport type { Enquiry, Matter, POID, TeamData, UserData } from '../../app/functionality/types';\r\nimport ManagementDashboard, { WIP } from './ManagementDashboard';\r\nimport AnnualLeaveReport, { AnnualLeaveRecord } from './AnnualLeaveReport';\r\nimport MetaMetricsReport from './MetaMetricsReport';\r\nimport SeoReport from './SeoReport';\r\nimport { debugLog, debugWarn } from '../../utils/debug';\r\nimport HomePreview from './HomePreview';\r\nimport EnquiriesReport, { MarketingMetrics } from './EnquiriesReport';\r\nimport { useStreamingDatasets } from '../../hooks/useStreamingDatasets';\r\n\r\n// Persist streaming progress across navigation\r\nconst STREAM_SNAPSHOT_KEY = 'reporting_stream_snapshot_v1';\r\nconst CACHE_STATE_KEY = 'reporting_cache_state_v1';\r\n\r\n// Persistent cache flags\r\nconst getCacheState = () => {\r\n  try {\r\n    const raw = sessionStorage.getItem(CACHE_STATE_KEY);\r\n    return raw ? JSON.parse(raw) : { hasFetchedOnce: false, lastCacheTime: null };\r\n  } catch {\r\n    return { hasFetchedOnce: false, lastCacheTime: null };\r\n  }\r\n};\r\n\r\nconst setCacheState = (hasFetchedOnce: boolean, lastCacheTime?: number | null) => {\r\n  try {\r\n    sessionStorage.setItem(CACHE_STATE_KEY, JSON.stringify({ \r\n      hasFetchedOnce, \r\n      lastCacheTime: lastCacheTime ?? cachedTimestamp \r\n    }));\r\n  } catch {/* ignore */}\r\n};\r\n\r\n// Helper to update both local state and persistence\r\nconst updateRefreshTimestamp = (timestamp: number, setLastRefreshTimestamp: (ts: number) => void) => {\r\n  setLastRefreshTimestamp(timestamp);\r\n  setCacheState(true, timestamp);\r\n};\r\n\r\ninterface RecoveredFee {\r\n  payment_date: string;\r\n  payment_allocated: number;\r\n  user_id: number;\r\n}\r\n\r\ninterface DatasetMap {\r\n  userData: UserData[] | null;\r\n  teamData: TeamData[] | null;\r\n  enquiries: Enquiry[] | null;\r\n  allMatters: Matter[] | null;\r\n  wip: WIP[] | null;\r\n  recoveredFees: RecoveredFee[] | null;\r\n  poidData: POID[] | null;\r\n  annualLeave: AnnualLeaveRecord[] | null;\r\n  metaMetrics: MarketingMetrics[] | null;\r\n}\r\n\r\nconst DATASETS = [\r\n  { key: 'userData', name: 'People' },\r\n  { key: 'teamData', name: 'Teams' },\r\n  { key: 'enquiries', name: 'Enquiries' },\r\n  { key: 'allMatters', name: 'Matters' },\r\n  { key: 'wip', name: 'WIP' },\r\n  { key: 'recoveredFees', name: 'Collected Fees' },\r\n  { key: 'poidData', name: 'ID Submissions' },\r\n  { key: 'annualLeave', name: 'Annual Leave' },\r\n  { key: 'metaMetrics', name: 'Meta Metrics' },\r\n] as const;\r\n\r\ntype DatasetDefinition = typeof DATASETS[number];\r\ntype DatasetKey = DatasetDefinition['key'];\r\ntype DatasetStatusValue = 'idle' | 'loading' | 'ready' | 'error';\r\n\r\ninterface DatasetMeta {\r\n  status: DatasetStatusValue;\r\n  updatedAt: number | null;\r\n}\r\n\r\ntype DatasetStatus = Record<DatasetKey, DatasetMeta>;\r\n\r\ninterface AvailableReport {\r\n  key: string;\r\n  name: string;\r\n  status: string;\r\n  action?: 'dashboard' | 'annualLeave' | 'enquiries' | 'metaMetrics' | 'seoReport';\r\n}\r\n\r\nconst AVAILABLE_REPORTS: AvailableReport[] = [\r\n  {\r\n    key: 'management',\r\n    name: 'Management dashboard',\r\n    status: 'Live today',\r\n    action: 'dashboard',\r\n  },\r\n  {\r\n    key: 'enquiries',\r\n    name: 'Enquiries report',\r\n    status: 'Live today',\r\n    action: 'enquiries',\r\n  },\r\n  {\r\n    key: 'annualLeave',\r\n    name: 'Annual leave report',\r\n    status: 'Live today',\r\n    action: 'annualLeave',\r\n  },\r\n  {\r\n    key: 'metaMetrics',\r\n    name: 'Meta metrics',\r\n    status: 'Live today',\r\n    action: 'metaMetrics',\r\n  },\r\n  // Only show SEO report if not in production\r\n  ...((process.env.NODE_ENV !== 'production') ? [{\r\n    key: 'seo',\r\n    name: 'SEO report',\r\n    status: 'Live today',\r\n    action: 'seoReport' as const,\r\n  }] : []),\r\n  {\r\n    key: 'matters',\r\n    name: 'Matters snapshot',\r\n    status: 'Matters tab',\r\n  },\r\n];\r\n\r\nconst MANAGEMENT_DATASET_KEYS = DATASETS.map((dataset) => dataset.key);\r\nconst REPORTING_ENDPOINT = '/api/reporting/management-datasets';\r\n\r\nconst EMPTY_DATASET: DatasetMap = {\r\n  userData: null,\r\n  teamData: null,\r\n  enquiries: null,\r\n  allMatters: null,\r\n  wip: null,\r\n  recoveredFees: null,\r\n  poidData: null,\r\n  annualLeave: null,\r\n  metaMetrics: null,\r\n};\r\n\r\nlet cachedData: DatasetMap = { ...EMPTY_DATASET };\r\nlet cachedTimestamp: number | null = null;\r\n\r\nconst LIGHT_BACKGROUND_COLOUR = colours.light.background;\r\nconst DARK_BACKGROUND_COLOUR = colours.dark.background;\r\nconst LIGHT_SURFACE_COLOUR = colours.light.sectionBackground;\r\nconst DARK_SURFACE_COLOUR = colours.dark.sectionBackground;\r\n\r\nconst STATUS_BADGE_COLOURS: Record<DatasetStatusValue, {\r\n  lightBg: string;\r\n  darkBg: string;\r\n  dot: string;\r\n  label: string;\r\n  icon?: string;\r\n}> = {\r\n  ready: {\r\n    lightBg: 'rgba(34, 197, 94, 0.16)',\r\n    darkBg: 'rgba(34, 197, 94, 0.28)',\r\n    dot: '#22c55e',\r\n    label: 'Ready',\r\n    icon: 'CheckMark',\r\n  },\r\n  loading: {\r\n    lightBg: 'rgba(59, 130, 246, 0.18)',\r\n    darkBg: 'rgba(59, 130, 246, 0.32)',\r\n    dot: '#60a5fa',\r\n    label: 'Refreshing',\r\n  },\r\n  error: {\r\n    lightBg: 'rgba(248, 113, 113, 0.18)',\r\n    darkBg: 'rgba(248, 113, 113, 0.32)',\r\n    dot: '#f87171',\r\n    label: 'Error',\r\n    icon: 'WarningSolid',\r\n  },\r\n  idle: {\r\n    lightBg: 'rgba(148, 163, 184, 0.16)',\r\n    darkBg: 'rgba(148, 163, 184, 0.28)',\r\n    dot: 'rgba(148, 163, 184, 0.7)',\r\n    label: 'Not loaded',\r\n    icon: 'Clock',\r\n  },\r\n};\r\n\r\nconst surfaceShadow = (isDarkMode: boolean): string => (\r\n  isDarkMode ? '0 2px 10px rgba(0, 0, 0, 0.22)' : '0 2px 8px rgba(15, 23, 42, 0.06)'\r\n);\r\n\r\nconst subtleStroke = (isDarkMode: boolean): string => (\r\n  isDarkMode ? 'rgba(148, 163, 184, 0.24)' : 'rgba(15, 23, 42, 0.06)'\r\n);\r\n\r\nconst containerStyle = (isDarkMode: boolean): CSSProperties => ({\r\n  minHeight: '100vh',\r\n  width: '100%',\r\n  padding: '26px 30px 40px',\r\n  background: isDarkMode ? colours.dark.background : colours.light.background,\r\n  color: isDarkMode ? colours.dark.text : colours.light.text,\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  gap: 18,\r\n  transition: 'background 0.3s ease, color 0.3s ease',\r\n  fontFamily: 'Raleway, sans-serif',\r\n});\r\n\r\nconst sectionSurfaceStyle = (isDarkMode: boolean, overrides: CSSProperties = {}): CSSProperties => ({\r\n  background: isDarkMode ? 'rgba(15, 23, 42, 0.88)' : '#FFFFFF',\r\n  borderRadius: 12,\r\n  border: `1px solid ${subtleStroke(isDarkMode)}`,\r\n  boxShadow: surfaceShadow(isDarkMode),\r\n  padding: '20px 22px',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  gap: 12,\r\n  ...overrides,\r\n});\r\n\r\nconst heroSurfaceStyle = (isDarkMode: boolean): CSSProperties => (\r\n  sectionSurfaceStyle(isDarkMode, { gap: 14, padding: '22px 24px' })\r\n);\r\n\r\nconst reportsListStyle = (): CSSProperties => ({\r\n  listStyle: 'none',\r\n  margin: 0,\r\n  padding: 0,\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  gap: 10,\r\n});\r\n\r\nconst reportRowStyle = (isDarkMode: boolean): CSSProperties => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  gap: 6,\r\n  padding: '12px 14px',\r\n  borderRadius: 10,\r\n  border: `1px solid ${subtleStroke(isDarkMode)}`,\r\n  background: isDarkMode ? 'rgba(17, 24, 39, 0.72)' : 'rgba(255, 255, 255, 0.95)',\r\n});\r\n\r\nconst reportRowHeaderStyle = (isDarkMode: boolean): CSSProperties => ({\r\n  display: 'flex',\r\n  alignItems: 'baseline',\r\n  justifyContent: 'space-between',\r\n  gap: 12,\r\n  color: isDarkMode ? colours.dark.text : colours.light.text,\r\n});\r\n\r\nconst reportNameStyle: CSSProperties = {\r\n  fontSize: 15,\r\n  fontWeight: 600,\r\n};\r\n\r\nconst reportStatusStyle = (isDarkMode: boolean): CSSProperties => ({\r\n  fontSize: 12,\r\n  fontWeight: 600,\r\n  color: isDarkMode ? colours.dark.subText : colours.highlight,\r\n});\r\n\r\nconst dataFeedListStyle = (): CSSProperties => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  gap: 8,\r\n});\r\n\r\nconst feedRowStyle = (isDarkMode: boolean): CSSProperties => ({\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  borderRadius: 8,\r\n  padding: '8px 12px',\r\n  background: isDarkMode ? colours.dark.cardBackground : colours.light.cardBackground,\r\n  border: `1px solid ${isDarkMode ? colours.dark.borderColor : colours.light.borderColor}`,\r\n  gap: 12,\r\n});\r\n\r\nconst feedLabelGroupStyle: CSSProperties = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  gap: 2,\r\n};\r\n\r\nconst feedLabelStyle: CSSProperties = {\r\n  fontSize: 13,\r\n  fontWeight: 600,\r\n};\r\n\r\nconst feedMetaStyle: CSSProperties = {\r\n  fontSize: 12,\r\n  opacity: 0.65,\r\n};\r\n\r\nconst statusPillStyle = (\r\n  palette: { lightBg: string; darkBg: string; dot: string; label: string },\r\n  isDarkMode: boolean,\r\n): CSSProperties => ({\r\n  display: 'inline-flex',\r\n  alignItems: 'center',\r\n  gap: 6,\r\n  padding: '4px 10px',\r\n  borderRadius: 999,\r\n  fontSize: 12,\r\n  fontWeight: 600,\r\n  background: isDarkMode ? palette.darkBg : palette.lightBg,\r\n  color: isDarkMode ? '#E2E8F0' : colours.missedBlue,\r\n  boxShadow: 'none',\r\n});\r\n\r\nconst statusDotStyle = (colour: string): CSSProperties => ({\r\n  width: 8,\r\n  height: 8,\r\n  borderRadius: '50%',\r\n  background: colour,\r\n});\r\n\r\nconst statusIconStyle = (isDarkMode: boolean): CSSProperties => ({\r\n  fontSize: 12,\r\n  color: isDarkMode ? '#E2E8F0' : colours.missedBlue,\r\n});\r\n\r\nconst refreshProgressPanelStyle = (isDarkMode: boolean): CSSProperties => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  gap: 10,\r\n  padding: '14px 16px',\r\n  borderRadius: 12,\r\n  background: isDarkMode\r\n    ? 'linear-gradient(135deg, rgba(30, 41, 59, 0.85) 0%, rgba(15, 23, 42, 0.94) 100%)'\r\n    : 'linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%)',\r\n  border: `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.28)' : 'rgba(59, 130, 246, 0.18)'}`,\r\n  boxShadow: isDarkMode ? '0 4px 6px rgba(0, 0, 0, 0.3)' : '0 4px 6px rgba(0, 0, 0, 0.07)',\r\n});\r\n\r\nconst refreshProgressHeaderStyle = (isDarkMode: boolean): CSSProperties => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  gap: 10,\r\n  fontSize: 14,\r\n  fontWeight: 600,\r\n  color: isDarkMode ? '#E2E8F0' : colours.missedBlue,\r\n});\r\n\r\nconst refreshProgressDetailStyle = (isDarkMode: boolean): CSSProperties => ({\r\n  fontSize: 12,\r\n  color: isDarkMode ? 'rgba(226, 232, 240, 0.82)' : 'rgba(15, 23, 42, 0.72)',\r\n  lineHeight: 1.5,\r\n});\r\n\r\nconst refreshProgressDatasetListStyle = (): CSSProperties => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  gap: 8,\r\n});\r\n\r\nconst refreshProgressDatasetRowStyle = (isDarkMode: boolean): CSSProperties => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  padding: '6px 10px',\r\n  borderRadius: 10,\r\n  background: isDarkMode ? 'rgba(30, 41, 59, 0.65)' : 'rgba(241, 245, 249, 0.85)',\r\n  border: `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.28)' : 'rgba(148, 163, 184, 0.28)'}`,\r\n  gap: 10,\r\n});\r\n\r\nconst refreshProgressDatasetLabelStyle = (isDarkMode: boolean): CSSProperties => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  gap: 8,\r\n  fontSize: 12,\r\n  fontWeight: 600,\r\n  color: isDarkMode ? '#E2E8F0' : colours.missedBlue,\r\n});\r\n\r\nconst refreshProgressDatasetStatusStyle = (isDarkMode: boolean): CSSProperties => ({\r\n  fontSize: 11,\r\n  fontWeight: 600,\r\n  color: isDarkMode ? 'rgba(226, 232, 240, 0.74)' : 'rgba(15, 23, 42, 0.64)',\r\n});\r\n\r\nconst sectionTitleStyle: CSSProperties = {\r\n  margin: 0,\r\n  fontSize: 16,\r\n  fontWeight: 600,\r\n  fontFamily: 'Raleway, sans-serif',\r\n};\r\n\r\nconst heroMetaRowStyle: CSSProperties = {\r\n  display: 'flex',\r\n  flexWrap: 'wrap',\r\n  gap: 8,\r\n  fontSize: 12,\r\n};\r\n\r\nconst fullScreenWrapperStyle = (isDarkMode: boolean): CSSProperties => ({\r\n  minHeight: '100vh',\r\n  padding: '24px 28px',\r\n  background: isDarkMode ? DARK_BACKGROUND_COLOUR : LIGHT_BACKGROUND_COLOUR,\r\n  color: isDarkMode ? colours.dark.text : colours.light.text,\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  gap: 16,\r\n  transition: 'background 0.3s ease, color 0.3s ease',\r\n});\r\n\r\nconst primaryButtonStyles = (isDarkMode: boolean): IButtonStyles => ({\r\n  root: {\r\n    borderRadius: 12,\r\n    padding: '0 20px',\r\n    height: 38,\r\n    background: colours.highlight,\r\n    color: '#ffffff',\r\n    fontWeight: 600,\r\n    boxShadow: 'none',\r\n    transition: 'background 0.2s ease',\r\n    fontFamily: 'Raleway, sans-serif',\r\n  },\r\n  rootHovered: {\r\n    background: '#2f7cb3',\r\n  },\r\n  rootPressed: {\r\n    background: '#266795',\r\n  },\r\n});\r\n\r\nconst subtleButtonStyles = (isDarkMode: boolean): IButtonStyles => ({\r\n  root: {\r\n    borderRadius: 12,\r\n    padding: '0 18px',\r\n    height: 38,\r\n    background: isDarkMode ? 'rgba(148, 163, 184, 0.16)' : 'transparent',\r\n    color: isDarkMode ? '#E2E8F0' : colours.missedBlue,\r\n    border: `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.32)' : 'rgba(13, 47, 96, 0.22)'}`,\r\n    fontWeight: 600,\r\n    boxShadow: 'none',\r\n    transition: 'background 0.2s ease',\r\n    fontFamily: 'Raleway, sans-serif',\r\n  },\r\n  rootHovered: {\r\n    background: isDarkMode ? 'rgba(148, 163, 184, 0.24)' : 'rgba(54, 144, 206, 0.12)',\r\n  },\r\n  rootPressed: {\r\n    background: isDarkMode ? 'rgba(148, 163, 184, 0.32)' : 'rgba(54, 144, 206, 0.18)',\r\n  },\r\n});\r\n\r\nconst dashboardNavigatorStyle = (isDarkMode: boolean): CSSProperties => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  gap: 12,\r\n  color: isDarkMode ? '#E2E8F0' : colours.missedBlue,\r\n});\r\n\r\nconst dashboardNavigatorTitleStyle = (isDarkMode: boolean): CSSProperties => ({\r\n  fontSize: 14,\r\n  fontWeight: 600,\r\n  fontFamily: 'Raleway, sans-serif',\r\n  color: isDarkMode ? '#E2E8F0' : colours.missedBlue,\r\n});\r\n\r\nconst dashboardNavigatorButtonStyles = (isDarkMode: boolean): IButtonStyles => ({\r\n  root: {\r\n    borderRadius: 999,\r\n    height: 32,\r\n    padding: '0 12px',\r\n    background: isDarkMode ? 'rgba(15, 23, 42, 0.7)' : 'rgba(248, 250, 252, 0.95)',\r\n    border: `1px solid ${isDarkMode ? 'rgba(148, 163, 184, 0.32)' : 'rgba(13, 47, 96, 0.18)'}`,\r\n    color: isDarkMode ? '#E2E8F0' : colours.missedBlue,\r\n    fontWeight: 600,\r\n    fontFamily: 'Raleway, sans-serif',\r\n    boxShadow: 'none',\r\n  },\r\n  rootHovered: {\r\n    background: isDarkMode ? 'rgba(15, 23, 42, 0.78)' : 'rgba(236, 244, 251, 0.96)',\r\n  },\r\n  rootPressed: {\r\n    background: isDarkMode ? 'rgba(15, 23, 42, 0.85)' : 'rgba(222, 235, 249, 0.96)',\r\n  },\r\n  icon: {\r\n    color: isDarkMode ? '#E2E8F0' : colours.missedBlue,\r\n  },\r\n  label: {\r\n    fontSize: 12,\r\n  },\r\n});\r\n\r\nconst formatRelativeTime = (timestamp: number): string => {\r\n  const diff = Date.now() - timestamp;\r\n  if (diff < 60000) return 'just now';\r\n  if (diff < 3600000) {\r\n    const minutes = Math.round(diff / 60000);\r\n    return `${minutes} min${minutes > 1 ? 's' : ''} ago`;\r\n  }\r\n  if (diff < 86400000) {\r\n    const hours = Math.round(diff / 3600000);\r\n    return `${hours} hour${hours > 1 ? 's' : ''} ago`;\r\n  }\r\n  return new Date(timestamp).toLocaleDateString('en-GB', { day: 'numeric', month: 'short', year: 'numeric' });\r\n};\r\n\r\nconst formatTimestamp = (timestamp: number): string => (\r\n  new Date(timestamp).toLocaleTimeString('en-GB', { hour: '2-digit', minute: '2-digit', second: '2-digit' })\r\n);\r\n\r\n// Convert Clio current week data to WIP format for Management Dashboard\r\nfunction convertClioToWipFormat(clioData: any, teamData: any[], currentUserData: any[]): WIP[] {\r\n  if (!clioData || !currentUserData?.[0]) return [];\r\n  \r\n  const wipEntries: WIP[] = [];\r\n  const currentWeek = clioData.current_week;\r\n  const currentUser = currentUserData[0];\r\n  const currentUserClioId = currentUser['Clio ID'] ? parseInt(currentUser['Clio ID'], 10) : null;\r\n  \r\n  if (!currentUserClioId || !currentWeek?.daily_data) return [];\r\n  \r\n  // Iterate through each day in current week\r\n  Object.entries(currentWeek.daily_data).forEach(([date, dayData]: [string, any]) => {\r\n    if (dayData && typeof dayData === 'object' && dayData.total_hours > 0) {\r\n      // Create a WIP entry for this day and the current user\r\n      wipEntries.push({\r\n        created_at: `${date}T00:00:00`, // Use the date from Clio\r\n        total: dayData.total_amount || 0,\r\n        quantity_in_hours: dayData.total_hours || 0,\r\n        user_id: currentUserClioId,\r\n      });\r\n    }\r\n  });\r\n  \r\n  return wipEntries;\r\n}\r\n\r\nconst formatDurationMs = (ms: number): string => {\r\n  if (ms <= 0) return '0s';\r\n  const totalSeconds = Math.floor(ms / 1000);\r\n  const minutes = Math.floor(totalSeconds / 60);\r\n  const seconds = totalSeconds % 60;\r\n  if (minutes === 0) return `${seconds}s`;\r\n  return `${minutes}m ${seconds.toString().padStart(2, '0')}s`;\r\n};\r\n\r\nconst formatElapsedTime = (ms: number): string => {\r\n  if (ms <= 0) return '';\r\n  if (ms < 1000) return `${Math.round(ms)}ms`;\r\n  if (ms < 10000) return `${(ms / 1000).toFixed(1)}s`; // e.g., \"4.2s\"\r\n  const totalSeconds = Math.floor(ms / 1000);\r\n  if (totalSeconds < 60) return `${totalSeconds}s`;\r\n  const minutes = Math.floor(totalSeconds / 60);\r\n  const seconds = totalSeconds % 60;\r\n  if (minutes < 10 && seconds > 0) return `${minutes}m ${seconds}s`;\r\n  return `${minutes}m`;\r\n};\r\n\r\nconst REFRESH_PHASES: Array<{ thresholdMs: number; label: string }> = [\r\n  { thresholdMs: 15000, label: 'Connecting to reporting data sources…' },\r\n  { thresholdMs: 45000, label: 'Pulling the latest matters and enquiries…' },\r\n  { thresholdMs: 90000, label: 'Crunching reporting metrics…' },\r\n  { thresholdMs: Number.POSITIVE_INFINITY, label: 'Finalising dashboard views…' },\r\n];\r\n\r\ninterface ReportingHomeProps {\r\n  userData?: UserData[] | null;\r\n  teamData?: TeamData[] | null;\r\n}\r\n\r\n/**\r\n * Streamlined reporting landing page that centres on the Management Dashboard experience.\r\n */\r\nconst ReportingHome: React.FC<ReportingHomeProps> = ({ userData: propUserData, teamData: propTeamData }) => {\r\n  const { isDarkMode } = useTheme();\r\n  const { setContent } = useNavigatorActions();\r\n  const [currentTime, setCurrentTime] = useState(() => new Date());\r\n  const [activeView, setActiveView] = useState<'overview' | 'dashboard' | 'annualLeave' | 'enquiries' | 'metaMetrics' | 'seoReport'>('overview');\r\n  const handleBackToOverview = useCallback(() => {\r\n    setActiveView('overview');\r\n  }, [setActiveView]);\r\n  const [datasetData, setDatasetData] = useState<DatasetMap>(() => ({\r\n    userData: propUserData ?? cachedData.userData,\r\n    teamData: propTeamData ?? cachedData.teamData,\r\n    enquiries: cachedData.enquiries,\r\n    allMatters: cachedData.allMatters,\r\n    wip: cachedData.wip,\r\n    recoveredFees: cachedData.recoveredFees,\r\n    poidData: cachedData.poidData,\r\n    annualLeave: cachedData.annualLeave,\r\n    metaMetrics: cachedData.metaMetrics,\r\n  }));\r\n  const [datasetStatus, setDatasetStatus] = useState<DatasetStatus>(() => {\r\n    const record: Partial<DatasetStatus> = {};\r\n    DATASETS.forEach((dataset) => {\r\n      const value = dataset.key === 'userData' && propUserData !== undefined\r\n        ? propUserData\r\n        : dataset.key === 'teamData' && propTeamData !== undefined\r\n          ? propTeamData\r\n          : cachedData[dataset.key];\r\n      const hasValue = Array.isArray(value) ? value.length > 0 : Boolean(value);\r\n      record[dataset.key] = { status: hasValue ? 'ready' : 'idle', updatedAt: cachedTimestamp };\r\n    });\r\n    return record as DatasetStatus;\r\n  });\r\n  const [lastRefreshTimestamp, setLastRefreshTimestamp] = useState<number | null>(cachedTimestamp);\r\n  const [isFetching, setIsFetching] = useState<boolean>(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [hasFetchedOnce, setHasFetchedOnce] = useState<boolean>(() => {\r\n    const cacheState = getCacheState();\r\n    // If we have valid cached data AND the persistent flag says we've fetched before, honor it\r\n    return Boolean(cachedTimestamp) && cacheState.hasFetchedOnce;\r\n  });\r\n  const [refreshStartedAt, setRefreshStartedAt] = useState<number | null>(null);\r\n\r\n  // Helper: set status for a subset of datasets\r\n  const setStatusesFor = useCallback((keys: DatasetKey[], status: DatasetStatusValue) => {\r\n    setDatasetStatus(prev => {\r\n      const next: DatasetStatus = { ...prev };\r\n      keys.forEach(k => {\r\n        const prevMeta = prev[k];\r\n        next[k] = { status, updatedAt: prevMeta?.updatedAt ?? null };\r\n      });\r\n      return next;\r\n    });\r\n  }, []);\r\n\r\n  // Prepare list of datasets to stream (stable identity across re-renders)\r\n  const streamableDatasets = useMemo(\r\n    () => {\r\n      const base = MANAGEMENT_DATASET_KEYS.filter(key => key !== 'annualLeave' && key !== 'metaMetrics');\r\n      // Ensure current-week WIP (Clio) and DB fallback are streamed so \"This Week\" metrics populate during streaming\r\n      return [...base, 'wipClioCurrentWeek' as unknown as DatasetKey, 'wipDbCurrentWeek' as unknown as DatasetKey];\r\n    },\r\n    []\r\n  );\r\n\r\n  // Add streaming datasets hook\r\n  const {\r\n    datasets: streamingDatasets,\r\n    isConnected: isStreamingConnected,\r\n    isComplete: isStreamingComplete,\r\n    start: startStreaming,\r\n    stop: stopStreaming,\r\n    progress: streamingProgress,\r\n  } = useStreamingDatasets({\r\n    datasets: streamableDatasets,\r\n    entraId: propUserData?.[0]?.EntraID,\r\n    bypassCache: false, // We'll control this via button\r\n    autoStart: false,\r\n  });\r\n\r\n  // Restore in-progress streaming state on mount and auto-resume if not complete\r\n  useEffect(() => {\r\n    try {\r\n      const raw = sessionStorage.getItem(STREAM_SNAPSHOT_KEY);\r\n      if (!raw) return;\r\n      const snap = JSON.parse(raw);\r\n      if (snap && snap.statuses) {\r\n        setDatasetStatus(prev => ({\r\n          ...prev,\r\n          ...snap.statuses,\r\n        }));\r\n      }\r\n      // Only auto-resume if the session was incomplete AND it's recent (within 5 minutes)\r\n      const fiveMinutesAgo = Date.now() - (5 * 60 * 1000);\r\n      const hadStream: boolean = Boolean(snap?.hadStream);\r\n      if (snap && hadStream && snap.isComplete === false && snap.ts > fiveMinutesAgo) {\r\n        debugLog('ReportingHome: Resuming incomplete streaming session from', new Date(snap.ts).toLocaleTimeString());\r\n        setIsFetching(true);\r\n        setRefreshStartedAt(Date.now());\r\n        // Ensure non-streaming datasets also refresh once during resume\r\n        // Mark them as loading if not present\r\n        setDatasetStatus(prev => ({\r\n          ...prev,\r\n          annualLeave: { status: 'loading', updatedAt: prev.annualLeave?.updatedAt ?? null },\r\n          metaMetrics: { status: 'loading', updatedAt: prev.metaMetrics?.updatedAt ?? null },\r\n        }));\r\n        // Kick off non-streaming fetchers in parallel\r\n        (async () => {\r\n          try {\r\n            const [annualLeaveResponse, meta] = await Promise.all([\r\n              fetch('/api/attendance/annual-leave-all', {\r\n                method: 'GET',\r\n                credentials: 'include',\r\n                headers: { Accept: 'application/json' },\r\n              }),\r\n              fetchMetaMetrics(),\r\n            ]);\r\n\r\n            let annualLeaveData: AnnualLeaveRecord[] = [];\r\n            if (annualLeaveResponse.ok) {\r\n              try {\r\n                const payload = await annualLeaveResponse.json();\r\n                if (payload.success && payload.all_data) {\r\n                  annualLeaveData = payload.all_data.map((record: any) => ({\r\n                    request_id: record.request_id,\r\n                    fe: record.person,\r\n                    start_date: record.start_date,\r\n                    end_date: record.end_date,\r\n                    reason: record.reason,\r\n                    status: record.status,\r\n                    days_taken: record.days_taken,\r\n                    leave_type: record.leave_type,\r\n                    rejection_notes: record.rejection_notes,\r\n                    hearing_confirmation: record.hearing_confirmation,\r\n                    hearing_details: record.hearing_details,\r\n                  }));\r\n                }\r\n              } catch {/* ignore parse errors */}\r\n            }\r\n\r\n            const now = Date.now();\r\n            setDatasetData(prev => ({\r\n              ...prev,\r\n              annualLeave: annualLeaveData,\r\n              metaMetrics: meta,\r\n            }));\r\n            setDatasetStatus(prev => ({\r\n              ...prev,\r\n              annualLeave: { status: 'ready', updatedAt: now },\r\n              metaMetrics: { status: 'ready', updatedAt: now },\r\n            }));\r\n            cachedData = { ...cachedData, annualLeave: annualLeaveData, metaMetrics: meta };\r\n            cachedTimestamp = now;\r\n            updateRefreshTimestamp(now, setLastRefreshTimestamp);\r\n          } catch {/* ignore resume fetch errors */}\r\n        })();\r\n        startStreaming();\r\n      } else if (snap && snap.isComplete === false) {\r\n        // Clear stale incomplete session\r\n        debugLog('ReportingHome: Clearing stale streaming session from', new Date(snap.ts).toLocaleTimeString());\r\n        sessionStorage.removeItem(STREAM_SNAPSHOT_KEY);\r\n      }\r\n    } catch {/* ignore */}\r\n  // startStreaming is stable from hook; using it is intentional\r\n  }, [startStreaming]);\r\n\r\n  // Persist streaming status snapshot whenever it changes\r\n  useEffect(() => {\r\n    try {\r\n      const statuses: Partial<DatasetStatus> = {} as Partial<DatasetStatus>;\r\n      Object.entries(streamingDatasets).forEach(([name, state]) => {\r\n        statuses[name as keyof DatasetStatus] = {\r\n          status: state.status,\r\n          updatedAt: state.updatedAt || null,\r\n        } as any;\r\n      });\r\n      // Only persist a snapshot if a stream actually started or is connected\r\n      const hadStream = (\r\n        isStreamingConnected ||\r\n        refreshStartedAt !== null ||\r\n        Object.values(streamingDatasets).some(s => s.status === 'loading' || s.status === 'ready')\r\n      );\r\n      if (hadStream) {\r\n        const snapshot = {\r\n          statuses,\r\n          isComplete: isStreamingComplete,\r\n          hadStream: true,\r\n          ts: Date.now(),\r\n        };\r\n        sessionStorage.setItem(STREAM_SNAPSHOT_KEY, JSON.stringify(snapshot));\r\n      }\r\n      if (isStreamingComplete) {\r\n        // Clear snapshot once complete to avoid stale resumes later\r\n        sessionStorage.removeItem(STREAM_SNAPSHOT_KEY);\r\n      }\r\n    } catch {/* ignore */}\r\n  }, [streamingDatasets, isStreamingComplete, isStreamingConnected, refreshStartedAt]);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => setCurrentTime(new Date()), 1000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n  if (activeView === 'dashboard') {\r\n      setContent(\r\n        <div style={dashboardNavigatorStyle(isDarkMode)}>\r\n          <DefaultButton\r\n            text=\"Back to overview\"\r\n            iconProps={{ iconName: 'Back' }}\r\n            onClick={handleBackToOverview}\r\n            styles={dashboardNavigatorButtonStyles(isDarkMode)}\r\n          />\r\n          <span style={dashboardNavigatorTitleStyle(isDarkMode)}>Management dashboard</span>\r\n        </div>,\r\n      );\r\n  } else if (activeView === 'annualLeave') {\r\n      setContent(\r\n        <div style={dashboardNavigatorStyle(isDarkMode)}>\r\n          <DefaultButton\r\n            text=\"Back to overview\"\r\n            iconProps={{ iconName: 'Back' }}\r\n            onClick={handleBackToOverview}\r\n            styles={dashboardNavigatorButtonStyles(isDarkMode)}\r\n          />\r\n          <span style={dashboardNavigatorTitleStyle(isDarkMode)}>Annual leave report</span>\r\n        </div>,\r\n      );\r\n    } else if (activeView === 'enquiries') {\r\n      setContent(\r\n        <div style={dashboardNavigatorStyle(isDarkMode)}>\r\n          <DefaultButton\r\n            text=\"Back to overview\"\r\n            iconProps={{ iconName: 'Back' }}\r\n            onClick={handleBackToOverview}\r\n            styles={dashboardNavigatorButtonStyles(isDarkMode)}\r\n          />\r\n          <span style={dashboardNavigatorTitleStyle(isDarkMode)}>Enquiries report</span>\r\n        </div>,\r\n      );\r\n    } else if (activeView === 'seoReport') {\r\n      setContent(\r\n        <div style={dashboardNavigatorStyle(isDarkMode)}>\r\n          <DefaultButton\r\n            text=\"Back to overview\"\r\n            iconProps={{ iconName: 'Back' }}\r\n            onClick={handleBackToOverview}\r\n            styles={dashboardNavigatorButtonStyles(isDarkMode)}\r\n          />\r\n          <span style={dashboardNavigatorTitleStyle(isDarkMode)}>SEO report</span>\r\n        </div>,\r\n      );\r\n    } else {\r\n      setContent(null);\r\n    }\r\n\r\n    return () => {\r\n      setContent(null);\r\n    };\r\n  }, [activeView, handleBackToOverview, isDarkMode, setContent]);\r\n\r\n  // Marketing metrics fetching function\r\n  const fetchMetaMetrics = useCallback(async (): Promise<MarketingMetrics[]> => {\r\n    debugLog('ReportingHome: fetchMetaMetrics called');\r\n    \r\n    try {\r\n      // Use our Express server route for live Facebook data with daily breakdown\r\n      const url = `/api/marketing-metrics?daysBack=30`; // Get last 30 days of daily data\r\n      debugLog('ReportingHome: Fetching meta metrics from:', url);\r\n      \r\n      const response = await fetch(url);\r\n      if (!response.ok) {\r\n        throw new Error(`Meta metrics fetch failed: ${response.status} ${response.statusText}`);\r\n      }\r\n      \r\n      const result = await response.json();\r\n      if (!result.success) {\r\n        debugWarn('ReportingHome: Meta metrics API returned error:', result.error);\r\n        return [];\r\n      }\r\n      \r\n      // The API now returns an array of daily metrics\r\n      const dailyMetrics = result.data;\r\n      \r\n      if (!Array.isArray(dailyMetrics)) {\r\n        debugWarn('ReportingHome: Expected array of daily metrics, got:', typeof dailyMetrics);\r\n        return [];\r\n      }\r\n      \r\n      debugLog('ReportingHome: Meta metrics fetched successfully. Days included:', dailyMetrics.length);\r\n      debugLog('ReportingHome: Date range:', result.dataSource, result.dateRange);\r\n      \r\n      return dailyMetrics; // Return the array directly as it's already in the correct format\r\n      \r\n    } catch (error) {\r\n      console.error('ReportingHome: Meta metrics fetch error:', error);\r\n      debugWarn('ReportingHome: Failed to fetch meta metrics:', error);\r\n      // Return empty array on error to prevent blocking the dashboard\r\n      return [];\r\n    }\r\n  }, []);\r\n\r\n  // Enhanced refresh function with streaming support\r\n  const refreshDatasetsWithStreaming = useCallback(async () => {\r\n    debugLog('ReportingHome: refreshDatasetsWithStreaming called');\r\n    setHasFetchedOnce(true);\r\n    setCacheState(true); // Persist the fetch state\r\n    setIsFetching(true);\r\n    setError(null);\r\n    setRefreshStartedAt(Date.now());\r\n\r\n    // Initialize all dataset statuses to loading\r\n    setDatasetStatus((prev) => {\r\n      const next: DatasetStatus = { ...prev };\r\n      MANAGEMENT_DATASET_KEYS.forEach((key) => {\r\n        const previousMeta = prev[key];\r\n        next[key] = { status: 'loading', updatedAt: previousMeta?.updatedAt ?? null };\r\n      });\r\n      return next;\r\n    });\r\n\r\n    try {\r\n      // Start streaming for main datasets\r\n  console.log('🌊 Starting streaming with datasets:', streamableDatasets);\r\n      console.log('🌊 EntraID for streaming:', propUserData?.[0]?.EntraID);\r\n      startStreaming();\r\n\r\n      // Only fetch annual leave and meta metrics if stale (>10 minutes) or missing\r\n      const nowTs = Date.now();\r\n      const tenMinutes = 10 * 60 * 1000;\r\n      const lastAL = datasetStatus.annualLeave?.updatedAt ?? 0;\r\n      const lastMeta = datasetStatus.metaMetrics?.updatedAt ?? 0;\r\n      const shouldFetchAnnualLeave = !cachedData.annualLeave || (nowTs - lastAL) > tenMinutes;\r\n      const shouldFetchMeta = !cachedData.metaMetrics || (nowTs - lastMeta) > tenMinutes;\r\n\r\n      let annualLeaveData: AnnualLeaveRecord[] = cachedData.annualLeave || [];\r\n      let metaMetricsData: MarketingMetrics[] = cachedData.metaMetrics || [];\r\n\r\n      if (shouldFetchAnnualLeave || shouldFetchMeta) {\r\n        const [annualLeaveResponse, metaMetrics] = await Promise.all([\r\n          shouldFetchAnnualLeave\r\n            ? fetch('/api/attendance/annual-leave-all', {\r\n                method: 'GET',\r\n                credentials: 'include',\r\n                headers: { Accept: 'application/json' },\r\n              })\r\n            : Promise.resolve(null as unknown as Response),\r\n          shouldFetchMeta ? fetchMetaMetrics() : Promise.resolve(metaMetricsData),\r\n        ]);\r\n\r\n        if (shouldFetchAnnualLeave && annualLeaveResponse && annualLeaveResponse.ok) {\r\n          try {\r\n            const annualLeavePayload = await annualLeaveResponse.json();\r\n            if (annualLeavePayload.success && annualLeavePayload.all_data) {\r\n              annualLeaveData = annualLeavePayload.all_data.map((record: any) => ({\r\n                request_id: record.request_id,\r\n                fe: record.person,\r\n                start_date: record.start_date,\r\n                end_date: record.end_date,\r\n                reason: record.reason,\r\n                status: record.status,\r\n                days_taken: record.days_taken,\r\n                leave_type: record.leave_type,\r\n                rejection_notes: record.rejection_notes,\r\n                hearing_confirmation: record.hearing_confirmation,\r\n                hearing_details: record.hearing_details,\r\n              }));\r\n            }\r\n          } catch {/* ignore parse errors */}\r\n        }\r\n\r\n        if (shouldFetchMeta) {\r\n          metaMetricsData = Array.isArray(metaMetrics) ? metaMetrics : [];\r\n        }\r\n      }\r\n\r\n      // Update non-streaming datasets\r\n      setDatasetData(prev => ({\r\n        ...prev,\r\n        annualLeave: annualLeaveData,\r\n        metaMetrics: metaMetricsData,\r\n      }));\r\n\r\n      // Update status for non-streaming datasets\r\n      setDatasetStatus(prev => ({\r\n        ...prev,\r\n        annualLeave: { status: 'ready', updatedAt: shouldFetchAnnualLeave ? nowTs : (prev.annualLeave?.updatedAt ?? nowTs) },\r\n        metaMetrics: { status: 'ready', updatedAt: shouldFetchMeta ? nowTs : (prev.metaMetrics?.updatedAt ?? nowTs) },\r\n      }));\r\n\r\n      cachedData = { ...cachedData, annualLeave: annualLeaveData, metaMetrics: metaMetricsData };\r\n      cachedTimestamp = nowTs;\r\n      updateRefreshTimestamp(nowTs, setLastRefreshTimestamp);\r\n\r\n    } catch (fetchError) {\r\n      debugWarn('Failed to refresh non-streaming datasets:', fetchError);\r\n      setError(fetchError instanceof Error ? fetchError.message : 'Unknown error');\r\n    }\r\n    // Note: Don't set isFetching(false) here - let the streaming completion handler do it\r\n    // This ensures we don't clear the loading state while streaming is still active\r\n  }, [startStreaming, fetchMetaMetrics, streamableDatasets]);\r\n\r\n  // Scoped refreshers for specific reports\r\n  const refreshAnnualLeaveOnly = useCallback(async () => {\r\n    setIsFetching(true);\r\n    setError(null);\r\n    setRefreshStartedAt(Date.now());\r\n    setStatusesFor(['annualLeave'], 'loading');\r\n    try {\r\n      const resp = await fetch('/api/attendance/annual-leave-all', {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n        headers: { Accept: 'application/json' },\r\n      });\r\n      let annualLeaveData: AnnualLeaveRecord[] = [];\r\n      if (resp.ok) {\r\n        const payload = await resp.json();\r\n        if (payload.success && payload.all_data) {\r\n          annualLeaveData = payload.all_data.map((record: any) => ({\r\n            request_id: record.request_id,\r\n            fe: record.person,\r\n            start_date: record.start_date,\r\n            end_date: record.end_date,\r\n            reason: record.reason,\r\n            status: record.status,\r\n            days_taken: record.days_taken,\r\n            leave_type: record.leave_type,\r\n            rejection_notes: record.rejection_notes,\r\n            hearing_confirmation: record.hearing_confirmation,\r\n            hearing_details: record.hearing_details,\r\n          }));\r\n        }\r\n      }\r\n      setDatasetData(prev => ({ ...prev, annualLeave: annualLeaveData }));\r\n      const now = Date.now();\r\n      setDatasetStatus(prev => ({ ...prev, annualLeave: { status: 'ready', updatedAt: now } }));\r\n      cachedData = { ...cachedData, annualLeave: annualLeaveData };\r\n      cachedTimestamp = now;\r\n  updateRefreshTimestamp(now, setLastRefreshTimestamp);\r\n    } catch (e) {\r\n      setError(e instanceof Error ? e.message : 'Failed to refresh annual leave');\r\n      setStatusesFor(['annualLeave'], 'error');\r\n    } finally {\r\n      setIsFetching(false);\r\n      setRefreshStartedAt(null);\r\n    }\r\n  }, [setStatusesFor]);\r\n\r\n  const refreshMetaMetricsOnly = useCallback(async () => {\r\n    setIsFetching(true);\r\n    setError(null);\r\n    setRefreshStartedAt(Date.now());\r\n    setStatusesFor(['metaMetrics'], 'loading');\r\n    try {\r\n      const metrics = await fetchMetaMetrics();\r\n      setDatasetData(prev => ({ ...prev, metaMetrics: metrics }));\r\n      const now = Date.now();\r\n      setDatasetStatus(prev => ({ ...prev, metaMetrics: { status: 'ready', updatedAt: now } }));\r\n      cachedData = { ...cachedData, metaMetrics: metrics };\r\n      cachedTimestamp = now;\r\n  updateRefreshTimestamp(now, setLastRefreshTimestamp);\r\n    } catch (e) {\r\n      setError(e instanceof Error ? e.message : 'Failed to refresh Meta metrics');\r\n      setStatusesFor(['metaMetrics'], 'error');\r\n    } finally {\r\n      setIsFetching(false);\r\n      setRefreshStartedAt(null);\r\n    }\r\n  }, [fetchMetaMetrics, setStatusesFor]);\r\n\r\n  const refreshEnquiriesScoped = useCallback(async () => {\r\n    setHasFetchedOnce(true);\r\n    setCacheState(true); // Persist the fetch state\r\n    setIsFetching(true);\r\n    setError(null);\r\n    setRefreshStartedAt(Date.now());\r\n    // Only the datasets this report needs\r\n    const needed: DatasetKey[] = ['enquiries', 'teamData'];\r\n    setStatusesFor(needed, 'loading');\r\n    try {\r\n      // Start streaming just the needed datasets\r\n      startStreaming({ datasets: needed, bypassCache: true });\r\n      // Refresh auxiliary non-streaming data in parallel\r\n      const [annualLeave, meta] = await Promise.all([\r\n        fetch('/api/attendance/annual-leave-all', {\r\n          method: 'GET',\r\n          credentials: 'include',\r\n          headers: { Accept: 'application/json' },\r\n        }).then(async r => {\r\n          if (!r.ok) return [] as AnnualLeaveRecord[];\r\n          const j = await r.json();\r\n          if (j.success && j.all_data) {\r\n            return j.all_data.map((record: any) => ({\r\n              request_id: record.request_id,\r\n              fe: record.person,\r\n              start_date: record.start_date,\r\n              end_date: record.end_date,\r\n              reason: record.reason,\r\n              status: record.status,\r\n              days_taken: record.days_taken,\r\n              leave_type: record.leave_type,\r\n              rejection_notes: record.rejection_notes,\r\n              hearing_confirmation: record.hearing_confirmation,\r\n              hearing_details: record.hearing_details,\r\n            }));\r\n          }\r\n          return [] as AnnualLeaveRecord[];\r\n        }),\r\n        fetchMetaMetrics(),\r\n      ]);\r\n      setDatasetData(prev => ({ ...prev, annualLeave, metaMetrics: meta }));\r\n      const now = Date.now();\r\n      setDatasetStatus(prev => ({\r\n        ...prev,\r\n        annualLeave: { status: 'ready', updatedAt: now },\r\n        metaMetrics: { status: 'ready', updatedAt: now },\r\n      }));\r\n      cachedData = { ...cachedData, annualLeave, metaMetrics: meta };\r\n      cachedTimestamp = now;\r\n  updateRefreshTimestamp(now, setLastRefreshTimestamp);\r\n    } catch (e) {\r\n      setError(e instanceof Error ? e.message : 'Failed to refresh datasets');\r\n      setStatusesFor(needed, 'error');\r\n    } finally {\r\n      setIsFetching(false);\r\n      setRefreshStartedAt(null);\r\n    }\r\n  }, [fetchMetaMetrics, setStatusesFor, startStreaming]);\r\n\r\n  // Sync streaming dataset updates with local state\r\n  useEffect(() => {\r\n    Object.entries(streamingDatasets).forEach(([datasetName, datasetState]) => {\r\n      if (datasetState.status === 'ready' && datasetState.data) {\r\n        // Update dataset data (special-case WIP to always include current-week merge)\r\n        if (datasetName === 'wip') {\r\n          const baseWip = Array.isArray(datasetState.data) ? (datasetState.data as WIP[]) : [];\r\n          const clioState = streamingDatasets['wipClioCurrentWeek'];\r\n          const dbCurrentState = streamingDatasets['wipDbCurrentWeek'];\r\n          const clioActivities: WIP[] | undefined = clioState && clioState.status === 'ready'\r\n            ? (clioState.data?.current_week?.activities as WIP[] | undefined)\r\n            : undefined;\r\n          const dbCurrentActivities: WIP[] | undefined = dbCurrentState && dbCurrentState.status === 'ready'\r\n            ? (dbCurrentState.data as WIP[] | undefined)\r\n            : undefined;\r\n          const activitiesToMerge = (clioActivities && clioActivities.length > 0)\r\n            ? clioActivities\r\n            : (dbCurrentActivities && dbCurrentActivities.length > 0 ? dbCurrentActivities : []);\r\n\r\n          if (activitiesToMerge.length > 0) {\r\n            const seen = new Set<string>(\r\n              baseWip.map(e => (\r\n                (e as any).id != null\r\n                  ? `id:${(e as any).id}`\r\n                  : `t:${e.created_at}|d:${e.date}|u:${e.user_id ?? (e.user as any)?.id ?? ''}|h:${e.quantity_in_hours ?? ''}|v:${e.total ?? ''}`\r\n              ))\r\n            );\r\n            const merged = baseWip.slice();\r\n            for (const a of activitiesToMerge) {\r\n              if (!a.date && a.created_at && typeof a.created_at === 'string') {\r\n                const m = a.created_at.match(/^(\\d{4}-\\d{2}-\\d{2})/);\r\n                if (m) {\r\n                  (a as any).date = m[1];\r\n                }\r\n              }\r\n              const key = (a as any).id != null\r\n                ? `id:${(a as any).id}`\r\n                : `t:${a.created_at}|d:${a.date}|u:${a.user_id ?? (a.user as any)?.id ?? ''}|h:${a.quantity_in_hours ?? ''}|v:${a.total ?? ''}`;\r\n              if (!seen.has(key)) {\r\n                merged.push(a);\r\n                seen.add(key);\r\n              }\r\n            }\r\n            setDatasetData(prev => ({\r\n              ...prev,\r\n              wip: merged,\r\n            }));\r\n          } else {\r\n            setDatasetData(prev => ({\r\n              ...prev,\r\n              wip: baseWip,\r\n            }));\r\n          }\r\n        } else {\r\n          setDatasetData(prev => ({\r\n            ...prev,\r\n            [datasetName]: datasetState.data,\r\n          }));\r\n        }\r\n\r\n        // Update dataset status\r\n        setDatasetStatus(prev => ({\r\n          ...prev,\r\n          [datasetName]: {\r\n            status: 'ready',\r\n            updatedAt: datasetState.updatedAt || Date.now(),\r\n          },\r\n        }));\r\n\r\n        // Update cache\r\n        cachedData = { ...cachedData, [datasetName]: datasetState.data };\r\n        if (datasetState.updatedAt) {\r\n          cachedTimestamp = datasetState.updatedAt;\r\n          setLastRefreshTimestamp(datasetState.updatedAt);\r\n        }\r\n      } else if (datasetState.status === 'error') {\r\n        // Update error status\r\n        setDatasetStatus(prev => ({\r\n          ...prev,\r\n          [datasetName]: {\r\n            status: 'error',\r\n            updatedAt: datasetState.updatedAt || Date.now(),\r\n          },\r\n        }));\r\n      }\r\n    });\r\n  }, [streamingDatasets]);\r\n\r\n  // Merge current-week WIP from streaming into historical WIP when streaming is used\r\n  useEffect(() => {\r\n    const wipState = streamingDatasets['wip'];\r\n    const clioState = streamingDatasets['wipClioCurrentWeek'];\r\n    const dbCurrentState = streamingDatasets['wipDbCurrentWeek'];\r\n\r\n    const hasWip = wipState && wipState.status === 'ready' && Array.isArray(wipState.data);\r\n    const clioActivities: WIP[] | undefined = clioState && clioState.status === 'ready'\r\n      ? (clioState.data?.current_week?.activities as WIP[] | undefined)\r\n      : undefined;\r\n    const dbCurrentActivities: WIP[] | undefined = dbCurrentState && dbCurrentState.status === 'ready'\r\n      ? (dbCurrentState.data as WIP[] | undefined)\r\n      : undefined;\r\n\r\n    // If Clio returns nothing, fallback to DB current-week activities\r\n    const activitiesToMerge = (clioActivities && clioActivities.length > 0)\r\n      ? clioActivities\r\n      : (dbCurrentActivities && dbCurrentActivities.length > 0 ? dbCurrentActivities : undefined);\r\n\r\n    if (!activitiesToMerge || activitiesToMerge.length === 0) return;\r\n\r\n    setDatasetData(prev => {\r\n      const baseWip: WIP[] = hasWip ? (wipState!.data as WIP[]) : (prev.wip || []);\r\n      // Dedupe by id if available, otherwise by a composite key\r\n      const seen = new Set<string>(\r\n        baseWip.map(e => (\r\n          (e as any).id != null\r\n            ? `id:${(e as any).id}`\r\n            : `t:${e.created_at}|d:${e.date}|u:${e.user_id ?? (e.user as any)?.id ?? ''}|h:${e.quantity_in_hours ?? ''}|v:${e.total ?? ''}`\r\n        ))\r\n      );\r\n      const merged = baseWip.slice();\r\n      for (const a of activitiesToMerge) {\r\n        // Ensure a.date is present (YYYY-MM-DD) for reliable filtering\r\n        if (!a.date && a.created_at && typeof a.created_at === 'string') {\r\n          const m = a.created_at.match(/^(\\d{4}-\\d{2}-\\d{2})/);\r\n          if (m) {\r\n            (a as any).date = m[1];\r\n          }\r\n        }\r\n        const key = (a as any).id != null\r\n          ? `id:${(a as any).id}`\r\n          : `t:${a.created_at}|d:${a.date}|u:${a.user_id ?? (a.user as any)?.id ?? ''}|h:${a.quantity_in_hours ?? ''}|v:${a.total ?? ''}`;\r\n        if (!seen.has(key)) {\r\n          merged.push(a);\r\n          seen.add(key);\r\n        }\r\n      }\r\n      if ((prev.wip?.length || 0) === merged.length) {\r\n        return prev; // no change\r\n      }\r\n      // eslint-disable-next-line no-console\r\n      console.log('🔗 Merged current-week activities into WIP (streaming):', {\r\n        base: baseWip.length,\r\n        added: merged.length - baseWip.length,\r\n        total: merged.length,\r\n      });\r\n      return { ...prev, wip: merged };\r\n    });\r\n  }, [streamingDatasets.wip, streamingDatasets.wipClioCurrentWeek, streamingDatasets.wipDbCurrentWeek]);\r\n\r\n  // Handle streaming completion\r\n  useEffect(() => {\r\n    if (isStreamingComplete) {\r\n      setIsFetching(false);\r\n      setRefreshStartedAt(null);\r\n      // Clear any pending refresh state\r\n      debugLog('ReportingHome: Streaming completed, clearing fetch state');\r\n      debugLog('ReportingHome: isStreamingConnected =', isStreamingConnected, 'isStreamingComplete =', isStreamingComplete);\r\n    }\r\n  }, [isStreamingComplete, isStreamingConnected]);\r\n\r\n  const refreshDatasets = useCallback(async () => {\r\n    debugLog('ReportingHome: refreshDatasets called');\r\n    setHasFetchedOnce(true);\r\n    setCacheState(true); // Persist the fetch state\r\n    setIsFetching(true);\r\n    setError(null);\r\n    setRefreshStartedAt(Date.now());\r\n\r\n    setDatasetStatus((prev) => {\r\n      const next: DatasetStatus = { ...prev };\r\n      MANAGEMENT_DATASET_KEYS.forEach((key) => {\r\n        const previousMeta = prev[key];\r\n        next[key] = { status: 'loading', updatedAt: previousMeta?.updatedAt ?? null };\r\n      });\r\n      return next;\r\n    });\r\n\r\n    try {\r\n      // Fetch both management datasets, annual leave data, and marketing metrics in parallel\r\n      debugLog('ReportingHome: Starting parallel fetch calls...');\r\n      const [managementResponse, annualLeaveResponse, metaMetrics] = await Promise.all([\r\n        (async () => {\r\n          const url = new URL(REPORTING_ENDPOINT, window.location.origin);\r\n          // Include current week Clio data in addition to standard datasets\r\n          // Exclude userData from fetch (we get it from props) and annualLeave (fetched separately)\r\n          const allDatasets = [\r\n            ...MANAGEMENT_DATASET_KEYS.filter(key => key !== 'annualLeave' && key !== 'userData'), \r\n            'wipClioCurrentWeek'\r\n          ];\r\n          debugLog('ReportingHome: Requesting datasets:', allDatasets);\r\n          url.searchParams.set('datasets', allDatasets.join(','));\r\n          \r\n          // Management Dashboard needs all team data, not user-specific data\r\n          // Don't pass entraId to get team-wide WIP data instead of filtered user data\r\n          \r\n          // Force a fresh fetch when user clicks Refresh\r\n          url.searchParams.set('bypassCache', 'true');\r\n\r\n          return fetch(url.toString(), {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n            headers: { Accept: 'application/json' },\r\n          });\r\n        })(),\r\n        // Fetch annual leave data\r\n        fetch('/api/attendance/annual-leave-all', {\r\n          method: 'GET',\r\n          credentials: 'include',\r\n          headers: { Accept: 'application/json' },\r\n        }),\r\n        // Fetch marketing metrics\r\n        fetchMetaMetrics()\r\n      ]);\r\n\r\n      if (!managementResponse.ok) {\r\n        const text = await managementResponse.text().catch(() => '');\r\n        throw new Error(`Failed to fetch datasets: ${managementResponse.status} ${managementResponse.statusText}${text ? ` – ${text.slice(0, 160)}` : ''}`);\r\n      }\r\n\r\n      const managementContentType = managementResponse.headers.get('content-type') || '';\r\n      if (!managementContentType.toLowerCase().includes('application/json')) {\r\n        const body = await managementResponse.text().catch(() => '');\r\n        throw new Error(`Unexpected response (not JSON). Content-Type: ${managementContentType || 'unknown'} – ${body.slice(0, 160)}`);\r\n      }\r\n\r\n      const managementPayload = (await managementResponse.json()) as Partial<DatasetMap> & { \r\n        errors?: Record<string, string>;\r\n        wipClioCurrentWeek?: any;\r\n        wipCurrentAndLastWeek?: any;\r\n      };\r\n\r\n      // Handle annual leave response\r\n      let annualLeaveData: AnnualLeaveRecord[] = [];\r\n      if (annualLeaveResponse.ok) {\r\n        try {\r\n          const annualLeavePayload = await annualLeaveResponse.json();\r\n          if (annualLeavePayload.success && annualLeavePayload.all_data) {\r\n            annualLeaveData = annualLeavePayload.all_data.map((record: any) => ({\r\n              request_id: record.request_id,\r\n              fe: record.person,\r\n              start_date: record.start_date,\r\n              end_date: record.end_date,\r\n              reason: record.reason,\r\n              status: record.status,\r\n              days_taken: record.days_taken,\r\n              leave_type: record.leave_type,\r\n              rejection_notes: record.rejection_notes,\r\n              hearing_confirmation: record.hearing_confirmation,\r\n              hearing_details: record.hearing_details,\r\n            }));\r\n          }\r\n        } catch (annualLeaveError) {\r\n          debugWarn('Failed to parse annual leave data:', annualLeaveError);\r\n        }\r\n      }\r\n\r\n      // Merge current week Clio data with historical WIP data\r\n      let mergedWip = managementPayload.wip ?? cachedData.wip;\r\n      // wipClioCurrentWeek now returns { current_week: { activities: [...] }, last_week: {...} }\r\n      const clioCurrentWeek = managementPayload.wipClioCurrentWeek;\r\n      \r\n      // Check if we have a merged wipCurrentAndLastWeek from backend that includes current-week activities\r\n      const hasCurrentWeekMerged = managementPayload.wipCurrentAndLastWeek?.current_week?.activities?.length > 0;\r\n      \r\n      debugLog('🔍 Frontend merge debug:', {\r\n        hasCurrentWeekMerged,\r\n        currentWeekActivitiesCount: managementPayload.wipCurrentAndLastWeek?.current_week?.activities?.length || 0,\r\n        clioCurrentWeekActivitiesCount: clioCurrentWeek?.current_week?.activities?.length || 0,\r\n        historicalWipCount: mergedWip?.length || 0\r\n      });\r\n      \r\n      if (hasCurrentWeekMerged) {\r\n        // Use the merged current and last week data from backend (includes current-week activities)\r\n        const currentWeekActivities = managementPayload.wipCurrentAndLastWeek.current_week.activities;\r\n        debugLog('📊 Using backend-merged current week data:', { \r\n          currentWeekEntries: currentWeekActivities.length,\r\n          historicalWip: mergedWip?.length || 0\r\n        });\r\n        \r\n        // Merge current week activities with historical WIP\r\n        if (mergedWip && Array.isArray(mergedWip)) {\r\n          mergedWip = [...mergedWip, ...currentWeekActivities];\r\n        } else {\r\n          mergedWip = currentWeekActivities;\r\n        }\r\n        \r\n        debugLog('📊 Final merged WIP count:', mergedWip ? mergedWip.length : 0);\r\n      } else if (clioCurrentWeek?.current_week?.activities && Array.isArray(clioCurrentWeek.current_week.activities) && mergedWip && Array.isArray(mergedWip)) {\r\n        // Fallback to old merge logic if backend merge wasn't available\r\n        const clioWipEntries = clioCurrentWeek.current_week.activities;\r\n        \r\n        debugLog('📊 Fallback: Merging Clio current week into WIP:', { \r\n          clioEntries: clioWipEntries.length, \r\n          historicalWip: mergedWip.length,\r\n          clioWipSample: clioWipEntries.slice(0, 3).map((e: any) => ({ \r\n            date: e.date, \r\n            user_id: e.user_id, \r\n            hours: e.quantity_in_hours \r\n          }))\r\n        });\r\n        \r\n        // Merge raw activities (with user_id preserved) into WIP array\r\n        mergedWip = [...mergedWip, ...clioWipEntries];\r\n      }\r\n\r\n      const nextData: DatasetMap = {\r\n        userData: propUserData ?? cachedData.userData, // Use prop, not fetched data\r\n        teamData: managementPayload.teamData ?? cachedData.teamData,\r\n        enquiries: managementPayload.enquiries ?? cachedData.enquiries,\r\n        allMatters: managementPayload.allMatters ?? cachedData.allMatters,\r\n        wip: mergedWip,\r\n        recoveredFees: managementPayload.recoveredFees ?? cachedData.recoveredFees,\r\n        poidData: managementPayload.poidData ?? cachedData.poidData,\r\n        annualLeave: annualLeaveData,\r\n        metaMetrics: metaMetrics, // Use fetched meta metrics\r\n      };\r\n\r\n      const now = Date.now();\r\n      cachedData = nextData;\r\n      cachedTimestamp = now;\r\n\r\n      setDatasetData(nextData);\r\n      setDatasetStatus((prev) => {\r\n        const next: DatasetStatus = { ...prev };\r\n        MANAGEMENT_DATASET_KEYS.forEach((key) => {\r\n          const value = nextData[key];\r\n          const hasValue = Array.isArray(value) ? value.length > 0 : Boolean(value);\r\n          next[key] = { status: hasValue ? 'ready' : 'ready', updatedAt: now };\r\n        });\r\n        return next;\r\n      });\r\n      updateRefreshTimestamp(now, setLastRefreshTimestamp);\r\n\r\n      if (managementPayload.errors && Object.keys(managementPayload.errors).length > 0) {\r\n        setError('Some datasets were unavailable.');\r\n      }\r\n    } catch (fetchError) {\r\n      debugWarn('Failed to refresh reporting datasets:', fetchError);\r\n      setError(fetchError instanceof Error ? fetchError.message : 'Unknown error');\r\n      setDatasetStatus((prev) => {\r\n        const next: DatasetStatus = { ...prev };\r\n        MANAGEMENT_DATASET_KEYS.forEach((key) => {\r\n          const previous = prev[key];\r\n          next[key] = { status: 'error', updatedAt: previous?.updatedAt ?? null };\r\n        });\r\n        return next;\r\n      });\r\n    } finally {\r\n      setIsFetching(false);\r\n      setRefreshStartedAt(null);\r\n    }\r\n  }, []);\r\n\r\n  // Predictive cache loading - preload commonly needed datasets when Reports tab is accessed\r\n  const preloadReportingCache = useCallback(async () => {\r\n    // Check if we have recent cached data to avoid unnecessary preheating\r\n    const cacheState = getCacheState();\r\n    const now = Date.now();\r\n    const fiveMinutesAgo = now - (5 * 60 * 1000);\r\n    \r\n    // Only preload if we haven't fetched recently AND cache is stale\r\n    const shouldPreheat = !hasFetchedOnce || \r\n                          !cacheState.lastCacheTime || \r\n                          cacheState.lastCacheTime < fiveMinutesAgo;\r\n    \r\n    if (shouldPreheat) {\r\n      const commonDatasets = ['teamData', 'userData', 'enquiries', 'allMatters'];\r\n      debugLog('ReportingHome: Preloading common reporting datasets on tab access:', commonDatasets);\r\n      try {\r\n        await fetch('/api/cache-preheater/preheat', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ \r\n            datasets: commonDatasets,\r\n            entraId: propUserData?.[0]?.EntraID \r\n          }),\r\n        });\r\n        debugLog('ReportingHome: Cache preheating completed successfully');\r\n      } catch (error) {\r\n        debugWarn('Cache preload failed:', error);\r\n      }\r\n    } else {\r\n      debugLog('ReportingHome: Skipping cache preheat - recent data available');\r\n    }\r\n  }, [hasFetchedOnce, propUserData]);\r\n\r\n  // Trigger cache preheating when component mounts (Reports tab accessed)\r\n  useEffect(() => {\r\n    // Add a small delay to allow the UI to render first, then start preheating\r\n    const preheatingTimer = setTimeout(() => {\r\n      preloadReportingCache();\r\n    }, 100); // 100ms delay to prioritize UI rendering\r\n    \r\n    return () => clearTimeout(preheatingTimer);\r\n  }, [preloadReportingCache]);\r\n\r\n  const handleOpenDashboard = useCallback(() => {\r\n    // Check if we have recent enough data or need a fresh fetch\r\n    const cacheState = getCacheState();\r\n    const now = Date.now();\r\n    const tenMinutesAgo = now - (10 * 60 * 1000); // Allow 10 minutes before forcing refresh\r\n    \r\n    const needsFresh = !hasFetchedOnce || \r\n                       !cacheState.lastCacheTime || \r\n                       cacheState.lastCacheTime < tenMinutesAgo;\r\n    \r\n    if (needsFresh && !isFetching && !isStreamingConnected) {\r\n      debugLog('ReportingHome: Opening dashboard with fresh data fetch');\r\n      void refreshDatasetsWithStreaming(); // Use streaming version\r\n    } else {\r\n      debugLog('ReportingHome: Opening dashboard with cached data');\r\n    }\r\n    setActiveView('dashboard');\r\n  }, [hasFetchedOnce, isFetching, isStreamingConnected, refreshDatasetsWithStreaming, setActiveView]);\r\n\r\n  useEffect(() => {\r\n    if (propUserData !== undefined) {\r\n      setDatasetData((prev) => {\r\n        if (prev.userData === propUserData) {\r\n          return prev;\r\n        }\r\n        const next = { ...prev, userData: propUserData ?? null };\r\n        cachedData = { ...cachedData, userData: propUserData ?? null };\r\n        return next;\r\n      });\r\n    }\r\n  }, [propUserData]);\r\n\r\n  useEffect(() => {\r\n    if (propTeamData !== undefined) {\r\n      setDatasetData((prev) => {\r\n        if (prev.teamData === propTeamData) {\r\n          return prev;\r\n        }\r\n        const next = { ...prev, teamData: propTeamData ?? null };\r\n        cachedData = { ...cachedData, teamData: propTeamData ?? null };\r\n        return next;\r\n      });\r\n    }\r\n  }, [propTeamData]);\r\n\r\n  const datasetSummaries = useMemo(() => (\r\n    DATASETS.map((dataset) => {\r\n      // Check if this dataset is being streamed\r\n      const streamingState = streamingDatasets[dataset.key];\r\n      const useStreamingState = streamingState && (isStreamingConnected || streamingState.status !== 'idle');\r\n\r\n      const value = useStreamingState ? streamingState.data : datasetData[dataset.key];\r\n      const meta = useStreamingState \r\n        ? { status: streamingState.status, updatedAt: streamingState.updatedAt }\r\n        : datasetStatus[dataset.key];\r\n\r\n      const hasValue = Array.isArray(value) ? value.length > 0 : Boolean(value);\r\n      const status: DatasetStatusValue = meta.status === 'loading'\r\n        ? 'loading'\r\n        : hasValue\r\n          ? 'ready'\r\n          : meta.status;\r\n      const count = useStreamingState ? (streamingState.count || 0) : (Array.isArray(value) ? value.length : hasValue ? 1 : 0);\r\n      const cached = useStreamingState ? streamingState.cached : false;\r\n      \r\n      return {\r\n        definition: dataset,\r\n        status,\r\n        updatedAt: meta.updatedAt,\r\n        count,\r\n        cached,\r\n      };\r\n    })\r\n  ), [datasetData, datasetStatus, streamingDatasets, isStreamingConnected]);\r\n\r\n  const refreshElapsedMs = useMemo(\r\n    () => (refreshStartedAt ? currentTime.getTime() - refreshStartedAt : 0),\r\n    [currentTime, refreshStartedAt],\r\n  );\r\n\r\n  const refreshPhaseLabel = useMemo(() => {\r\n    if (!isFetching || !refreshStartedAt) {\r\n      return null;\r\n    }\r\n    const phase = REFRESH_PHASES.find((candidate) => refreshElapsedMs < candidate.thresholdMs);\r\n    return phase?.label ?? 'Finalising reporting data…';\r\n  }, [isFetching, refreshElapsedMs, refreshStartedAt]);\r\n\r\n  const readyCount = datasetSummaries.filter((summary) => summary.status === 'ready').length;\r\n  const formattedDate = currentTime.toLocaleDateString('en-GB', {\r\n    weekday: 'long',\r\n    day: 'numeric',\r\n    month: 'long',\r\n    year: 'numeric',\r\n  });\r\n  const formattedTime = currentTime.toLocaleTimeString('en-GB', {\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n    second: '2-digit',\r\n  });\r\n\r\n  // Determine if we're in an active loading state (vs just completed)\r\n  const isActivelyLoading = isFetching && (isStreamingConnected || refreshStartedAt !== null);\r\n  \r\n  // Debug loading state\r\n  if (isActivelyLoading !== (isFetching && (isStreamingConnected || refreshStartedAt !== null))) {\r\n    debugLog('ReportingHome: Loading state debug:', { \r\n      isActivelyLoading, \r\n      isFetching, \r\n      isStreamingConnected, \r\n      refreshStartedAt,\r\n      readyCount,\r\n      total: datasetSummaries.length\r\n    });\r\n  }\r\n  const canUseReports = hasFetchedOnce && readyCount > 0;\r\n\r\n  const heroSubtitle = isActivelyLoading\r\n    ? (refreshPhaseLabel ?? 'Refreshing')\r\n    : lastRefreshTimestamp\r\n      ? `Updated ${formatRelativeTime(lastRefreshTimestamp)}`\r\n      : 'Not refreshed yet';\r\n\r\n  const heroMetaItems = [\r\n    `${formattedDate} • ${formattedTime}`,\r\n    heroSubtitle,\r\n    `${readyCount}/${datasetSummaries.length} data feeds`,\r\n  ];\r\n\r\n  // Safety: if streaming disconnected and nothing is loading, clear fetching flag\r\n  useEffect(() => {\r\n    const anyLoading = datasetSummaries.some(s => s.status === 'loading');\r\n    if (!isStreamingConnected && !anyLoading && isFetching) {\r\n      debugLog('ReportingHome: Clearing fetching state (no active loads and stream closed)');\r\n      setIsFetching(false);\r\n      setRefreshStartedAt(null);\r\n    }\r\n  }, [isStreamingConnected, datasetSummaries, isFetching]);\r\n\r\n  if (activeView === 'dashboard') {\r\n    return (\r\n      <div style={fullScreenWrapperStyle(isDarkMode)}>\r\n        <ManagementDashboard\r\n          enquiries={datasetData.enquiries}\r\n          allMatters={datasetData.allMatters}\r\n          wip={datasetData.wip}\r\n          recoveredFees={datasetData.recoveredFees}\r\n          teamData={datasetData.teamData}\r\n          userData={datasetData.userData}\r\n          poidData={datasetData.poidData}\r\n          annualLeave={datasetData.annualLeave}\r\n          triggerRefresh={refreshDatasetsWithStreaming}\r\n          lastRefreshTimestamp={lastRefreshTimestamp ?? undefined}\r\n          isFetching={isFetching}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (activeView === 'annualLeave') {\r\n    return (\r\n      <div style={fullScreenWrapperStyle(isDarkMode)}>\r\n        <AnnualLeaveReport\r\n          data={datasetData.annualLeave || []}\r\n          teamData={datasetData.teamData || []}\r\n          triggerRefresh={refreshAnnualLeaveOnly}\r\n          lastRefreshTimestamp={lastRefreshTimestamp ?? undefined}\r\n          isFetching={isFetching}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (activeView === 'enquiries') {\r\n    return (\r\n      <div style={fullScreenWrapperStyle(isDarkMode)}>\r\n        <EnquiriesReport \r\n          enquiries={datasetData.enquiries} \r\n          teamData={datasetData.teamData}\r\n          annualLeave={datasetData.annualLeave}\r\n          metaMetrics={datasetData.metaMetrics}\r\n          triggerRefresh={refreshEnquiriesScoped}\r\n          lastRefreshTimestamp={lastRefreshTimestamp ?? undefined}\r\n          isFetching={isFetching}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (activeView === 'metaMetrics') {\r\n    return (\r\n      <div style={fullScreenWrapperStyle(isDarkMode)}>\r\n        <MetaMetricsReport\r\n          metaMetrics={datasetData.metaMetrics}\r\n          enquiries={datasetData.enquiries}\r\n          triggerRefresh={refreshMetaMetricsOnly}\r\n          lastRefreshTimestamp={lastRefreshTimestamp ?? undefined}\r\n          isFetching={isFetching}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (activeView === 'seoReport') {\r\n    return (\r\n      <div style={fullScreenWrapperStyle(isDarkMode)}>\r\n        <SeoReport />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"reporting-home-container\" style={containerStyle(isDarkMode)}>\r\n      <section style={heroSurfaceStyle(isDarkMode)}>\r\n        <div style={{ display: 'flex', flexDirection: 'column', gap: 8 }}>\r\n          <span\r\n            style={{\r\n              alignSelf: 'flex-start',\r\n              padding: '4px 10px',\r\n              borderRadius: 999,\r\n              fontSize: 11,\r\n              letterSpacing: 0.4,\r\n              textTransform: 'uppercase',\r\n              background: isDarkMode ? 'rgba(148, 163, 184, 0.18)' : 'rgba(37, 99, 235, 0.12)',\r\n              color: isDarkMode ? colours.light.text : colours.missedBlue,\r\n              fontWeight: 600,\r\n              fontFamily: 'Raleway, sans-serif',\r\n            }}\r\n          >\r\n            Restricted access\r\n          </span>\r\n          <h1 style={{ margin: 0, fontSize: 24, fontWeight: 700, fontFamily: 'Raleway, sans-serif' }}>Reporting workspace</h1>\r\n        </div>\r\n        <div style={{ display: 'flex', flexWrap: 'wrap', gap: 8 }}>\r\n          <PrimaryButton\r\n            text={isActivelyLoading ? 'Preparing…' : 'Open management dashboard'}\r\n            onClick={handleOpenDashboard}\r\n            styles={primaryButtonStyles(isDarkMode)}\r\n            disabled={isActivelyLoading}\r\n          />\r\n          <DefaultButton\r\n            text={isActivelyLoading ? 'Refreshing…' : 'Refresh data'}\r\n            onClick={refreshDatasetsWithStreaming}\r\n            styles={subtleButtonStyles(isDarkMode)}\r\n            disabled={isActivelyLoading}\r\n          />\r\n        </div>\r\n        <div style={heroMetaRowStyle}>\r\n          {heroMetaItems.map((item) => (\r\n            <span\r\n              key={item}\r\n              style={{\r\n                display: 'inline-flex',\r\n                alignItems: 'center',\r\n                gap: 6,\r\n                padding: '5px 10px',\r\n                borderRadius: 999,\r\n                background: isDarkMode ? 'rgba(30, 41, 59, 0.6)' : 'rgba(255, 255, 255, 0.9)',\r\n                border: `1px solid ${subtleStroke(isDarkMode)}`,\r\n                boxShadow: 'none',\r\n                color: isDarkMode ? '#E2E8F0' : colours.missedBlue,\r\n              }}\r\n            >\r\n              {item}\r\n            </span>\r\n          ))}\r\n        </div>\r\n        {(isActivelyLoading || isStreamingConnected) && (\r\n          <div style={refreshProgressPanelStyle(isDarkMode)}>\r\n            <div style={refreshProgressHeaderStyle(isDarkMode)}>\r\n              <Spinner size={SpinnerSize.small} />\r\n              <span>\r\n                {isStreamingConnected \r\n                  ? `Streaming datasets… (${streamingProgress.completed}/${streamingProgress.total})`\r\n                  : 'Refreshing reporting datasets…'\r\n                }\r\n              </span>\r\n            </div>\r\n            <span style={refreshProgressDetailStyle(isDarkMode)}>\r\n              {refreshStartedAt && !isStreamingConnected\r\n                ? `Elapsed ${formatDurationMs(refreshElapsedMs)}${refreshPhaseLabel ? ` • ${refreshPhaseLabel}` : ''}`\r\n                : isStreamingConnected\r\n                  ? `Progress: ${Math.round(streamingProgress.percentage)}% • Redis caching active`\r\n                  : 'Preparing data sources…'}\r\n            </span>\r\n            <div style={refreshProgressDatasetListStyle()}>\r\n              {datasetSummaries.map(({ definition, status }) => {\r\n                const palette = STATUS_BADGE_COLOURS[status];\r\n                const iconName = palette.icon;\r\n                const streamState = streamingDatasets[definition.key as keyof typeof streamingDatasets];\r\n                const elapsed = streamState?.elapsedMs;\r\n                const cached = streamState?.cached;\r\n                return (\r\n                  <div key={definition.key} style={refreshProgressDatasetRowStyle(isDarkMode)}>\r\n                    <span style={refreshProgressDatasetLabelStyle(isDarkMode)}>\r\n                      {status === 'loading' ? (\r\n                        <Spinner size={SpinnerSize.xSmall} style={{ width: 16, height: 16 }} />\r\n                      ) : iconName ? (\r\n                        <FontIcon iconName={iconName} style={statusIconStyle(isDarkMode)} />\r\n                      ) : (\r\n                        <span style={statusDotStyle(palette.dot)} />\r\n                      )}\r\n                      {definition.name}\r\n                    </span>\r\n                    <span style={refreshProgressDatasetStatusStyle(isDarkMode)}>\r\n                      {cached && (\r\n                        <FontIcon\r\n                          iconName=\"Database\"\r\n                          style={{ ...statusIconStyle(isDarkMode), marginRight: 6 }}\r\n                          title=\"Cached\"\r\n                        />\r\n                      )}\r\n                      {palette.label}\r\n                      {typeof elapsed === 'number' && elapsed >= 0 && (\r\n                        <span style={{ marginLeft: 8, opacity: 0.8 }}>\r\n                          {formatElapsedTime(elapsed)}\r\n                        </span>\r\n                      )}\r\n                    </span>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {error && (\r\n          <div style={{\r\n            padding: '10px 14px',\r\n            borderRadius: 12,\r\n            background: isDarkMode ? 'rgba(248, 113, 113, 0.22)' : 'rgba(248, 113, 113, 0.18)',\r\n            color: isDarkMode ? '#fecaca' : '#b91c1c',\r\n            fontSize: 12,\r\n            boxShadow: surfaceShadow(isDarkMode),\r\n            border: `1px solid ${isDarkMode ? 'rgba(248, 113, 113, 0.32)' : 'rgba(248, 113, 113, 0.32)'}`,\r\n          }}>\r\n            {error}\r\n          </div>\r\n        )}\r\n      </section>\r\n\r\n      <section style={sectionSurfaceStyle(isDarkMode)}>\r\n        <h2 style={sectionTitleStyle}>Available today</h2>\r\n        <ul style={reportsListStyle()}>\r\n          {AVAILABLE_REPORTS.map((report) => (\r\n            <li key={report.key} style={reportRowStyle(isDarkMode)}>\r\n              <div style={reportRowHeaderStyle(isDarkMode)}>\r\n                <span style={reportNameStyle}>{report.name}</span>\r\n                <span style={reportStatusStyle(isDarkMode)}>{report.status}</span>\r\n              </div>\r\n              {report.action === 'dashboard' && (\r\n                <div style={{ display: 'flex', flexWrap: 'wrap', gap: 8 }}>\r\n                  <PrimaryButton\r\n                    text={isActivelyLoading ? 'Preparing…' : 'Open dashboard'}\r\n                    onClick={handleOpenDashboard}\r\n                    styles={primaryButtonStyles(isDarkMode)}\r\n                    disabled={isActivelyLoading}\r\n                  />\r\n                  <DefaultButton\r\n                    text=\"Refresh data\"\r\n                    onClick={refreshDatasetsWithStreaming}\r\n                    styles={subtleButtonStyles(isDarkMode)}\r\n                    disabled={isActivelyLoading}\r\n                    iconProps={{ iconName: 'Refresh' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {report.action === 'annualLeave' && (\r\n                <div style={{ display: 'flex', flexWrap: 'wrap', gap: 8 }}>\r\n                  <PrimaryButton\r\n                    text={isActivelyLoading ? 'Preparing…' : 'Open annual leave report'}\r\n                    onClick={() => setActiveView('annualLeave')}\r\n                    styles={primaryButtonStyles(isDarkMode)}\r\n                    disabled={isActivelyLoading}\r\n                  />\r\n                  <DefaultButton\r\n                    text=\"Refresh leave data\"\r\n                    onClick={refreshAnnualLeaveOnly}\r\n                    styles={subtleButtonStyles(isDarkMode)}\r\n                    disabled={isActivelyLoading}\r\n                    iconProps={{ iconName: 'Refresh' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {report.action === 'enquiries' && (\r\n                <div style={{ display: 'flex', flexWrap: 'wrap', gap: 8 }}>\r\n                  <PrimaryButton\r\n                    text={isActivelyLoading ? 'Preparing…' : 'Open enquiries report'}\r\n                    onClick={() => setActiveView('enquiries')}\r\n                    styles={primaryButtonStyles(isDarkMode)}\r\n                    disabled={isActivelyLoading}\r\n                  />\r\n                  <DefaultButton\r\n                    text=\"Refresh enquiries data\"\r\n                    onClick={refreshEnquiriesScoped}\r\n                    styles={subtleButtonStyles(isDarkMode)}\r\n                    disabled={isActivelyLoading}\r\n                    iconProps={{ iconName: 'Refresh' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {report.action === 'metaMetrics' && (\r\n                <div style={{ display: 'flex', flexWrap: 'wrap', gap: 8 }}>\r\n                  <PrimaryButton\r\n                    text={isActivelyLoading ? 'Preparing…' : 'Open Meta metrics'}\r\n                    onClick={() => setActiveView('metaMetrics')}\r\n                    styles={primaryButtonStyles(isDarkMode)}\r\n                    disabled={isActivelyLoading}\r\n                  />\r\n                  <DefaultButton\r\n                    text=\"Refresh Meta data\"\r\n                    onClick={refreshMetaMetricsOnly}\r\n                    styles={subtleButtonStyles(isDarkMode)}\r\n                    disabled={isActivelyLoading}\r\n                    iconProps={{ iconName: 'Refresh' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {report.action === 'seoReport' && (\r\n                <div style={{ display: 'flex', flexWrap: 'wrap', gap: 8 }}>\r\n                  <PrimaryButton\r\n                    text={isActivelyLoading ? 'Preparing…' : 'Open SEO report'}\r\n                    onClick={() => setActiveView('seoReport')}\r\n                    styles={primaryButtonStyles(isDarkMode)}\r\n                    disabled={isActivelyLoading}\r\n                  />\r\n                  <DefaultButton\r\n                    text=\"Refresh SEO data\"\r\n                    onClick={refreshMetaMetricsOnly} // SEO report uses Meta metrics data\r\n                    styles={subtleButtonStyles(isDarkMode)}\r\n                    disabled={isActivelyLoading}\r\n                    iconProps={{ iconName: 'Refresh' }}\r\n                  />\r\n                </div>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </section>\r\n\r\n      {!isActivelyLoading && !isStreamingConnected && (\r\n      <section style={sectionSurfaceStyle(isDarkMode)}>\r\n        <h2 style={sectionTitleStyle}>Data feeds powering the dashboard</h2>\r\n        <div style={dataFeedListStyle()}>\r\n          {datasetSummaries.map(({ definition, status, updatedAt, count, cached }) => {\r\n            const palette = STATUS_BADGE_COLOURS[status];\r\n            const details: string[] = [count > 0 ? `${count.toLocaleString()} record${count === 1 ? '' : 's'}` : 'No data'];\r\n            if (cached) {\r\n              details.push('cached');\r\n            }\r\n            if (updatedAt) {\r\n              details.push(formatTimestamp(updatedAt));\r\n            }\r\n            return (\r\n              <div key={definition.key} style={feedRowStyle(isDarkMode)}>\r\n                <div style={feedLabelGroupStyle}>\r\n                  <span style={feedLabelStyle}>{definition.name}</span>\r\n                  <span style={feedMetaStyle}>{details.join(' • ')}</span>\r\n                </div>\r\n                <span style={statusPillStyle(palette, isDarkMode)}>\r\n                  {status === 'loading' ? (\r\n                    <Spinner size={SpinnerSize.xSmall} style={{ width: 14, height: 14 }} />\r\n                  ) : palette.icon ? (\r\n                    <FontIcon iconName={palette.icon} style={statusIconStyle(isDarkMode)} />\r\n                  ) : (\r\n                    <span style={statusDotStyle(palette.dot)} />\r\n                  )}\r\n                  {cached && (\r\n                    <FontIcon\r\n                      iconName=\"Database\"\r\n                      style={{ ...statusIconStyle(isDarkMode), marginLeft: 6 }}\r\n                      title=\"Cached\"\r\n                    />\r\n                  )}\r\n                  {palette.label}\r\n                </span>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </section>\r\n      )}\r\n\r\n      <section style={sectionSurfaceStyle(isDarkMode)}>\r\n        <h2 style={sectionTitleStyle}>Quick metrics snapshot</h2>\r\n        <HomePreview\r\n          enquiries={datasetData.enquiries}\r\n          allMatters={datasetData.allMatters}\r\n          wip={datasetData.wip}\r\n          recoveredFees={datasetData.recoveredFees}\r\n        />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReportingHome;"],"names":["isDebugLogs","process","REACT_APP_DEBUG_LOGS","debugLog","console","log","arguments","debugWarn","warn","RANGE_OPTIONS","key","label","getDatePickerStyles","isDarkMode","baseBorder","root","maxWidth","fontFamily","textField","width","fieldGroup","height","borderRadius","border","background","padding","boxShadow","transition","selectors","transform","colours","highlight","field","fontSize","color","dark","text","light","fontWeight","lineHeight","outline","icon","missedBlue","callout","wrapper","getRangeButtonStyles","active","disabled","length","undefined","activeBackground","resolvedBackground","display","alignItems","whiteSpace","overflow","textOverflow","minHeight","cursor","rootHovered","rootPressed","getTeamButtonStyles","hasWorked","greyedOut","opacity","getRoleButtonStyles","summaryChipStyle","flexDirection","justifyContent","textAlign","rowGap","dateStampButtonStyle","minWidth","gap","clearFilterButtonStyle","computeRange","range","now","Date","end","start","setHours","yesterday","setDate","getDate","setTime","getTime","diff","getDay","thisWeekStart","setMonth","getMonth","quarterStart","Math","floor","currentYear","getFullYear","setFullYear","formatDateRange","formatOptions","day","month","year","startStr","toLocaleDateString","endStr","getRangeLabel","getPreviousRangeLabel","parseDateValue","input","trim","trimmed","normalised","includes","parts","split","padStart","candidate","Number","isNaN","safeNumber","value","isFinite","numeric","formatDateForPicker","date","parseDatePickerInput","matchesInitials","initials","toLowerCase","normalizeName","name","replace","NAME_MAP","mapNameIfNeeded","_NAME_MAP$name","displayName","record","formatHours","hours","whole","minutes","round","calculateWorkingDays","startDate","endDate","workingDays","bankHolidaySet","Set","dayOfWeek","dateString","toISOString","has","getTrendArrow","direction","getTrendColor","formatCurrency","amount","abs","toLocaleString","minimumFractionDigits","maximumFractionDigits","toFixed","formatDateTag","_ref","_hoveredMember$previo","_hoveredMember$previo2","_hoveredMember$previo3","_hoveredMember$previo4","_hoveredMember$previo5","enquiries","rawEnquiries","allMatters","rawMatters","wip","rawWip","recoveredFees","rawFees","teamData","rawTeam","userData","rawUsers","annualLeave","rawAnnualLeave","triggerRefresh","lastRefreshTimestamp","isFetching","useEffect","document","getElementById","style","createElement","id","textContent","head","appendChild","useTheme","rangeStart","rangeEnd","setRangeState","useState","rangeKey","setRangeKey","setStartDate","setEndDate","hoveredMetric","setHoveredMetric","hoveredMember","setHoveredMember","showDatasetInfo","setShowDatasetInfo","showCollectedInfo","setShowCollectedInfo","timeElapsed","setTimeElapsed","colorTimer","setInterval","prev","refreshTimer","clearInterval","getRefreshIndicatorColor","progress","min","wasCompletelyAway","memberInitials","memberLeave","filter","fe","status","totalLeaveDays","leave","leaveStart","start_date","leaveEnd","end_date","overlapStart","overlapEnd","calculateTargetHours","leaveDays","calculateLeaveDays","max","ROLE_OPTIONS","selectedTeams","setSelectedTeams","selectedRoles","setSelectedRoles","showRoleFilter","setShowRoleFilter","sortColumn","setSortColumn","sortDirection","setSortDirection","matters","fees","team","activeStart","useMemo","activeEnd","withinRange","endOfDay","filteredEnquiries","entry","Touchpoint_Date","filteredMatters","_OpenDate","_CloseDate","_ref2","openDate","OpenDate","closeDate","CloseDate","dateToCheck","parsedDate","filteredWip","startTime","endTime","filtered","when","d","s","m","match","y","mo","da","toLocalDay","created_at","updated_at","t","map","e","quantity_in_hours","total","sample","slice","rawDate","rawCreated","filteredFees","kind","payment_date","teamMembers","member","Boolean","_member$Initials2","statusValueRaw","String","isActive","roleValueRaw","_member$Initials","clioId","role","normalizedRole","sort","a","b","localeCompare","displayableTeamMembers","showOps","showInactive","visibleMembers","_member$role","wipByClioId","index","Map","forEach","_record$user","user_id","user","set","get","push","feesByClioId","_record$user_id","enquiriesByContact","byEmail","byInitials","enquiry","Point_of_Contact","email","poc","toUpperCase","mattersBySolicitor","matter","_OriginatingSolicito","_ResponsibleSolicito","rawOriginating","OriginatingSolicitor","rawResponsible","ResponsibleSolicitor","normalizedOriginating","normalizedResponsible","matterId","UniqueID","JSON","stringify","finalIndex","matterMap","solicitor","Array","from","values","metricsByMember","memberEmail","memberFullName","enquiriesForMember","normalizedMemberName","mattersForMember","wipForMember","feesForMember","wipHours","reduce","targetHours","completelyAway","hadLeaveWithNoWork","some","trendDirection","getTrendDirection","actualHours","performance","wipValue","collected","payment_allocated","sortedMetricsByMember","aHasWork","bHasWork","aValue","bValue","result","totals","acc","row","summaryTotals","wipAggregates","collectedTotal","previousRange","React","computePreviousRange","currentStart","currentEnd","prevDay","dayBeforeYesterday","currentDays","ceil","weekStart","previousWeekStart","previousWeekEnd","prevMonth","twoMonthsAgo","dayInMs","rangeLengthInDays","previousEnd","previousStart","prevQuarter","prevYear","prevYearStart","prevYearEnd","hasPreviousRange","previousMetrics","prevEnquiries","prevMatters","_OpenDate2","_CloseDate2","_ref3","prevWip","w","prevFees","f","previousMemberMetrics","_OpenDate3","_CloseDate3","_ref4","memberMap","prevEnquiriesForMember","_member$record$Email","_enquiry$Point_of_Con","Email","enquiriesHandledBy","Call_Taker","prevMattersForMember","matterOwnedBy","prevWipForMember","wipEntry","_wipEntry$user","flat","nested","prevFeesForMember","fee","_fee$user_id","prevWipHours","prevWipValue","prevCollected","totalPrevMatters","sampleMatters","DateOpened","renderTrendIndicator","current","previous","type","metricName","change","calculateChange","percentage","arrow","displayText","difference","absChange","_jsxs","letterSpacing","onMouseEnter","rect","currentTarget","getBoundingClientRect","x","left","top","onMouseLeave","title","children","handleRangeSelect","newRange","handleActivateCustomRange","isCustomRange","initialiseCustomDates","today","fallbackStart","fallbackEnd","memberHasWorked","find","handleColumnSort","column","getSortIcon","iconStyle","marginLeft","_jsx","dashboardThemeClass","allTeamsSelected","allRolesSelected","activePresetKey","option","formattedFromLabel","formattedToLabel","className","DatePicker","styles","onSelectDate","allowTextInput","firstDayOfWeek","DayOfWeek","Monday","formatDate","parseDateFromString","onClick","borderColor","_Fragment","timestamp","formatTimeAgo","Icon","iconName","animation","marginBottom","marginTop","paddingTop","borderTop","fontStyle","_ref5","DefaultButton","_ref6","_ref7","_ref8","_ref9","handleClearAllTime","toggleTeamSelection","item","handleSelectAllTeams","_ref0","isRoleCurrentlySelected","remainingRoles","r","_member$role2","membersWithRole","newSet","toggleRoleSelection","handleSelectAllRoles","gridTemplateColumns","position","right","zIndex","Spinner","userSelect","isInactive","prevRow","isFirstInactive","animationDelay","borderLeft","paddingLeft","previousData","window","innerWidth","pointerEvents","backdropFilter","margin","textTransform","gridColumn","parseDate","hasData","hasRole","hasLeave","containerStyle","surface","normalizeRange","quickRanges","isWithin","time","_customDateRange$star","_customDateRange$end","_range$start","_range$end","_quickRanges$find$lab","_quickRanges$find","_leaveData$find","data","customDateRange","setCustomDateRange","expandedUserDetails","setExpandedUserDetails","timer","useCallback","_preset$get","preset","showCustomPickers","customStartValue","customEndValue","displayRangeStart","displayRangeEnd","fromLabel","toLabel","currentRangeLabel","workingDaysCount","workingDaysBetween","count","endCopy","_record$Role","_record$Email","_record$holiday_entit","tokens","getInitials","holidayEntitlement","holiday_entitlement","memberLookup","filteredLeave","size","roleKey","_parseDate","withinStart","withinEnd","leaveByMember","memberCounts","counts","leaveEntriesForDisplay","_parseDate2","_row$request_id","_member$display","_row$days_taken","formattedStart","formattedEnd","dateLabel","request_id","daysTaken","days_taken","leaveType","leave_type","reason","_a$start$getTime","_a$start","_b$start$getTime","_b$start","aTime","roleCounts","_memberLookup$get","_memberLookup$get$rol","filteredMembers","includeTeam","includeRole","leaveData","_leaveByMember$get","personLeave","standardTaken","l","sum","unpaidTaken","standardRemaining","unpaidRemaining","totalTaken","fullName","entitlement","datasetSummary","booked","uniquePeople","lastRefreshLabel","diffMs","remainingMinutes","days","weeks","months","footerTimestamp","getFinancialYear","handleCustomDateChange","next","handleTeamToggle","delete","add","handleClearTeams","handleRoleToggle","handleClearRoles","handleToggleRoles","handleToggleInfo","handleUserClick","handleRefresh","getLeaveBreakdown","personInitials","_leaveByMember$get2","entries","p","standardLeave","unpaidLeave","startLabel","join","remaining","filteredUserEntries","datasetInfoItems","toString","flexWrap","rangeOption","isSelected","_displayRangeStart$ge","_displayRangeEnd$getT","toLocaleTimeString","hour","minute","overflowX","borderCollapse","borderBottom","zebra","toStr","v","safeLower","getNormalizedEnquirySource","raw","_e$Ultimate_Source","_e$Method_of_Contact","_e$Contact_Referrer","_e$Referring_Company","_e$Referral_URL","_e$Campaign","_e$GCLID","_e$Initial_first_call","ultimate","Ultimate_Source","source","Source","contactRef","Method_of_Contact","method_of_contact","moc","Contact_Referrer","contact_referrer","referringCompany","Referring_Company","referring_company","url","Referral_URL","referral_url","campaign","Campaign","gclid","GCLID","notes","Initial_first_call_notes","isUltimateActuallyMOC","method","utm","params","URL","searchParams","medium","getUtmParams","hasPaidMedium","hasGclid","detail","domain","hostname","extractDomain","n","c","looksLikeFacebookLead","getNormalizedEnquirySourceLabel","getNormalizedEnquiryMOCLabel","_e$Method_of_Contact2","_e$Ultimate_Source2","getNormalizedEnquiryMOC","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","AreaChart","Area","recharts","require","error","isDark","metaMetrics","isRefreshing","setIsRefreshing","adData","setAdData","isLoadingAds","setIsLoadingAds","instructionData","setInstructionData","isLoadingInstructions","setIsLoadingInstructions","clioSearchResults","setClioSearchResults","clioSearchCache","setClioSearchCache","lastClioSearch","setLastClioSearch","isLoadingClioSearch","setIsLoadingClioSearch","interval","startOfWeek","lastWeekStart","quarter","filteredMetrics","totalMetrics","sampleDates","parsed","metric","metricDate","isInRange","comparison","afterStart","beforeEnd","originalCount","filteredCount","filteredDates","stats","totalSpend","totalReach","totalImpressions","totalClicks","totalConversions","avgCtr","avgCpc","avgCpm","avgFrequency","costPerConversion","conversionRate","reachRate","impressionShare","meta","metaAds","spend","reach","impressions","clicks","conversions","ctrSum","ctr","cpcSum","cpc","cpmSum","cpm","frequencySum","frequency","getEnquiryPitchStatus","_enquiry$Email","_enquiry$First_Name","_enquiry$Last_Name","deals","noDealDataLogged","isPitched","pitchDate","dealStructureLogged","Object","keys","enquiryEmail","enquiryFirstName","First_Name","enquiryLastName","Last_Name","matchingDeal","deal","_LeadClientEmail","LeadClientEmail","_FirstName","_LastName","dealFirstName","FirstName","dealLastName","LastName","PitchedDate","getEnquiryInstructionStatus","_enquiry$Email2","_enquiry$First_Name2","_enquiry$Last_Name2","_instructionData$deal","instructions","hasInstruction","instructionRef","isProofOfIdComplete","_LeadClientEmail2","_FirstName2","_LastName2","hasDeal","dealData","InstructionRef","matchingInstruction","inst","ref","stage","Stage","internalStatus","InternalStatus","isInstructed","getEnquiryValue","Value","valueBandMatch","valueBand","metaEnquiryStats","totalEnquiries","enquiriesInPeriod","totalValue","averageValue","roi","costPerEnquiry","pitchedCount","instructedCount","pitchConversionRate","instructionConversionRate","pitchToInstructionRate","_instructionData$inst","_instructionData$deal2","_instructionData$inst2","_instructionData$deal3","_instructionData$inst3","instructionDataLogged","totalInstructions","totalDeals","sampleInstruction","sampleDeal","instructionStages","metaSourcesLogged","metaSources","normalizedSource","metaEnquiries","isMetaSource","enquiryDate","Date_Created","metaEnquiriesLogged","pitchSummaryLogged","noPitchDataLogged","valueText","numMatch","numValue","parseFloat","convertValueBandToNumber","chartData","_metric$metaAds","_metric$metaAds2","_metric$metaAds3","_metric$metaAds4","_metric$metaAds5","_metric$metaAds6","_metric$metaAds7","_metric$metaAds8","fetchAdData","async","response","fetch","ok","json","success","fetchInstructionData","_data$deals","statusText","searchClioContacts","emails","emailsToSearch","cached","headers","body","newResults","results","newCacheEntries","summary","totalFound","totalSearched","clearClioCache","uniqueEmails","Promise","all","Intl","NumberFormat","currency","format","formatNumber","formatPercent","backgroundColor","headerStyle","subHeaderStyle","subText","sectionTitleStyle","PrimaryButton","iconProps","cta","placeholder","SpinnerSize","xSmall","accent","large","FontIcon","foundContacts","contact","contactsWithMatters","cachedCount","maxHeight","overflowY","Area_of_Work","valueDebugLogged","enq","i","ValueType","ValueString","ParsedFloat","enquiryValue","_enquiry$Point_of_Con2","word","pitchStatus","instructionStatus","clioContact","hasOwnProperty","_clioContact$matters","hasMatter","matterCount","ID","strokeDasharray","stroke","dataKey","tick","fill","contentStyle","cardBackground","formatter","fillOpacity","strokeWidth","small","ad","adName","campaignName","adsetName","metrics","adId","cardStyle","SectionTitle","fmtDate","toSeries","rows","_r$key","SeoReport","setIsDark","loading","setLoading","setError","setRows","matchMedia","matches","resp","Error","payload","mapped","isArray","_d$googleAnalytics","_d$googleAnalytics2","_d$googleAnalytics3","_d$googleAnalytics4","_d$googleAnalytics5","_d$googleAnalytics6","_d$googleAnalytics7","googleAnalytics","sessions","activeUsers","screenPageViews","bounceRate","averageSessionDuration","message","users","statCard","last","totalSessions","totalUsers","baseShadow","softBorder","sectionContainerStyle","headerRowStyle","headerTitleStyle","rangeButtonsRowStyle","rangeButtonStyles","metricsGridStyle","metricCardStyle","cardContentStyle","selectedRange","setSelectedRange","parseAndFormatDate","dateStr","getDateRange","enquiriesCount","enquiriesRange","mattersCount","mattersRange","wipTotalPounds","wipTotalHours","wipRange","filteredRecoveredFees","collectedRange","metricCards","fraction","card","Text","variant","greyText","fuzzyMatch","str1","str2","threshold","s1","s2","longer","editDistance","matrix","j","charAt","levenshteinDistance","findMatches","oldEnquiry","newEnquiries","newEnq","matchReasons","score","oldFullName","newFullName","first","date1","date2","daysTolerance","d1","d2","datesMatch","datetime","newId","newEnquiry","bestMatch","best","matchType","migrationStatus","oldId","matchScore","EMPTY_DAY_FILTER","taker","PIE_COLORS","blue","darkBlue","websiteBlue","highlightBlue","subtleGrey","grey","cardHover","CustomPieLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","RADIAN","PI","radius","cos","sin","textAnchor","dominantBaseline","PieChartComponent","activeFilter","onSliceClick","isLoading","setIsLoading","displayData","setDisplayData","setTimeout","clearTimeout","PieChart","Pie","props","labelLine","animationBegin","animationDuration","animationEasing","handleSliceClick","Cell","sectionBackground","labelStyle","hasEnquiries","isTriagedPoc","local","getPocRaw","_candidate$Point_of_C","grid","_lineChartData$","_lineChartData$2","_lineChartData$3","_migrationLegacy$ID","removeChild","sourceFilter","setSourceFilter","mocFilter","setMocFilter","pocFilter","setPocFilter","modalData","setModalData","isOpen","items","filterValue","openModal","filteredItems","filteredEntries","point_of_contact","closeModal","reassignmentDropdown","setReassignmentDropdown","isReassigning","setIsReassigning","reassignmentMessage","setReassignmentMessage","base","normalizedName","enrichedEnquiries","list","byNormalizedName","normalizedLocal","pocname","normalized","call_taker","takerNormalized","_byNormalizedName$get","migrationOverrides","_window","overrides","global","migrationData","allEnquiries","oldArr","newArr","hasLegacyShape","hasNewShape","_x$ID","_x$Date_Created","_x$Email","_x$First_Name","_x$Last_Name","_x$Point_of_Contact","Company","Matter_Ref","_x$id","_ref1","_ref10","_x$datetime","_ref11","_x$first","_ref12","_x$last","_ref13","_x$email","_ref14","_x$poc","claim","oldItem","instructionsId","dataDateRange","dates","earliest","latest","isNull","_ref15","memberRole","_ref16","_ref17","bySource","byMOC","byPoc","claimed","unclaimed","src","getSource","getMOC","pocRaw","claimedFlag","isClaimed","pocKey","wdRaw","perDay","workingDaysLabel","dayGroups","groupsMap","d0","arr","_ref18","visibleGroupCount","setVisibleGroupCount","sentinelRef","el","obs","IntersectionObserver","isIntersecting","rootMargin","observe","disconnect","topSources","topMOCs","topPocs","sourcesPieData","_ref19","mocsPieData","_ref20","pocsPieData","_ref21","lineChartData","level","actualDays","getActualDateSpan","daysDiff","getAggregationConfig","aggregatedGroups","createdDate","aggregationKey","isWeekend","monday","sunday","firstDay","lastDay","existing","_ref22","formattedDate","aggregationLevel","isOnAnnualLeave","checkDate","checkDateObj","_record$fe","dailySummaries","summaries","activeTeamMembers","_ref23","triaged","claimerCounts","_enquiry$Status","_enquiry$Call_Taker","Status","callTaker","claimer","_m$email","topClaimers","_ref24","claimerInitials","nonClaimers","onLeave","toggleDayCollapse","setCollapsedDays","hoverHighlight","setHoverHighlight","hoveredDay","setHoveredDay","dayFilters","setDayFilters","collapsedDays","initializeCollapsedDays","allDays","group","migrationModalOpen","setMigrationModalOpen","migrationLegacy","setMigrationLegacy","migrationDraft","setMigrationDraft","migrationSubmitting","setMigrationSubmitting","migrationError","setMigrationError","manualMigrationOverrides","setManualMigrationOverrides","buildDraftFromLegacy","pick","obj","k","rawSource","rawMOC","cleanSourceAndMOC","cleanedSource","cleanedMOC","aow","phone","tow","rep","rating","rank","company_referrer","pitch","acid","card_id","enhancedNotes","additionalInfo","Title","Website","addressParts","Unit_Building_Name_or_Number","Mailing_Street","Mailing_Street_2","Mailing_Street_3","City","Mailing_County","Postal_Code","Country","Ad_Group","Search_Keyword","Tags","Do_not_Market","DOB","openMigrationModal","legacy","closeMigrationModal","submitMigration","txt","legacyId","updateDayFilter","_prev$date","_omit","rest","teamMemberOptions","handleReassignClick","enquiryId","event","stopPropagation","bottom","handleReassignmentSelect","selectedValue","selectedOption","closeReassignmentDropdown","handleClickOutside","target","closest","addEventListener","removeEventListener","_ref25","updated","MessageBar","messageBarType","MessageBarType","onDismiss","weekendBlocks","weekendStart","dataPoint","ReferenceArea","x1","x2","labelFormatter","aggregationLabel","weekendLabel","connectNulls","dot","isDaily","isWeekendTransition","currentDay","nextDay","activeDot","migrated","partial","notMigrated","instructionsOnly","migrationRate","_metaMetrics","_metaMetrics2","googleAds","cost","cpa","_metaMetrics3","flex","_ref26","_ref27","_ref28","grp","gIdx","_dayFilters$grp$date","isHovered","isoDate","diffDays","dayIndex","endOfWeek","weekday","formatDayHeaderLabel","dateTooltip","connectorStyle","nodeStyle","blockStyle","filters","filterName","filterPoc","filterTaker","filterStatus","hasFilters","displayItems","nameCandidate","Client_Name","Description","Client","pocCandidateRaw","pocCandidate","takerCandidate","headerPillStyle","subtleBadge","onFocus","onBlur","idx","nonClaimer","onChange","idx2","_ref29","_DealId","_ref30","_ProspectId","stageStr","statusStr","instructionRefField","instruction_ref","rRefField","RRef","rref","Rref","dealIdRaw","DealId","deal_id","dealId","prospectIdRaw","ProspectId","prospect_id","prospectId","dealIdNum","parseInt","NaN","prospectIdNum","matter_ref","MatterRef","matterRef","MatterId","MatterID","matterID","Pitched","isUnclaimed","isTriaged","isClaimedEntry","isRowHighlighted","highlightedCellStyle","o","migrationIndicator","getMigrationIndicator","migrationBadge","pocLabel","pocStyle","takerLabel","takerStyle","claimedBadge","marginRight","green","rowDim","statusPrimary","statusPrimaryBadge","tagBase","dealTag","instructionTag","initialsPillStyle","Dialog","hidden","dialogContentProps","DialogType","largeHeader","main","paddingBottom","Phone_Number","Secondary_Phone","Type_of_Work","Rating","Gift_Rank","yellow","red","inputBackground","TextField","_","required","multiline","DialogFooter","actions","rootDisabled","disabledBackground","hoverBackground","paddingRight","_ref31","substring","useStreamingDatasets","options","datasets","entraId","bypassCache","autoStart","maxConcurrent","datasetStates","setDatasetStates","isConnected","setIsConnected","isComplete","setIsComplete","eventSourceRef","useRef","timeoutRef","stop","close","override","_override$bypassCache","effectiveDatasets","effectiveBypass","location","origin","eventSource","EventSource","streamStart","starts","cachedElapsed","freshCount","freshElapsed","onopen","dataset","updatedAt","elapsedMs","onmessage","update","parse","started","elapsed","totalElapsed","avgFresh","avgCached","estSaved","info","onerror","readyState","completed","state","STREAM_SNAPSHOT_KEY","CACHE_STATE_KEY","getCacheState","sessionStorage","getItem","hasFetchedOnce","lastCacheTime","setCacheState","setItem","cachedTimestamp","updateRefreshTimestamp","setLastRefreshTimestamp","DATASETS","AVAILABLE_REPORTS","action","MANAGEMENT_DATASET_KEYS","cachedData","poidData","LIGHT_BACKGROUND_COLOUR","DARK_BACKGROUND_COLOUR","STATUS_BADGE_COLOURS","ready","lightBg","darkBg","idle","surfaceShadow","subtleStroke","sectionSurfaceStyle","heroSurfaceStyle","reportRowStyle","reportRowHeaderStyle","reportNameStyle","reportStatusStyle","feedRowStyle","feedLabelGroupStyle","feedLabelStyle","feedMetaStyle","statusPillStyle","palette","statusDotStyle","colour","statusIconStyle","refreshProgressPanelStyle","refreshProgressHeaderStyle","refreshProgressDetailStyle","refreshProgressDatasetRowStyle","refreshProgressDatasetLabelStyle","refreshProgressDatasetStatusStyle","heroMetaRowStyle","fullScreenWrapperStyle","primaryButtonStyles","subtleButtonStyles","dashboardNavigatorStyle","dashboardNavigatorTitleStyle","dashboardNavigatorButtonStyles","formatDurationMs","ms","totalSeconds","seconds","formatElapsedTime","REFRESH_PHASES","thresholdMs","POSITIVE_INFINITY","_propUserData$","propUserData","propTeamData","setContent","useNavigatorActions","currentTime","setCurrentTime","activeView","setActiveView","handleBackToOverview","datasetData","setDatasetData","datasetStatus","setDatasetStatus","hasValue","setIsFetching","setHasFetchedOnce","cacheState","refreshStartedAt","setRefreshStartedAt","setStatusesFor","_prevMeta$updatedAt","prevMeta","streamableDatasets","streamingDatasets","isStreamingConnected","isStreamingComplete","startStreaming","stopStreaming","streamingProgress","EntraID","snap","statuses","fiveMinutesAgo","hadStream","ts","_prev$annualLeave$upd","_prev$annualLeave","_prev$metaMetrics$upd","_prev$metaMetrics","annualLeaveResponse","credentials","Accept","fetchMetaMetrics","annualLeaveData","all_data","person","rejection_notes","hearing_confirmation","hearing_details","removeItem","snapshot","dailyMetrics","dataSource","dateRange","refreshDatasetsWithStreaming","_previousMeta$updated","previousMeta","_propUserData$2","_datasetStatus$annual","_datasetStatus$annual2","_datasetStatus$metaMe","_datasetStatus$metaMe2","nowTs","tenMinutes","lastAL","lastMeta","shouldFetchAnnualLeave","shouldFetchMeta","metaMetricsData","resolve","annualLeavePayload","_prev$annualLeave$upd2","_prev$annualLeave2","_prev$metaMetrics$upd2","_prev$metaMetrics2","fetchError","refreshAnnualLeaveOnly","refreshMetaMetricsOnly","refreshEnquiriesScoped","needed","then","datasetName","datasetState","_clioState$data","_clioState$data$curre","baseWip","clioState","dbCurrentState","clioActivities","current_week","activities","dbCurrentActivities","activitiesToMerge","seen","_e$user_id","_e$user","_e$quantity_in_hours","_e$total","merged","_a$user_id","_a$user","_a$quantity_in_hours","_a$total","_clioState$data2","_clioState$data2$curr","wipState","hasWip","_prev$wip","_e$user_id2","_e$user2","_e$quantity_in_hours2","_e$total2","_a$user_id2","_a$user2","_a$quantity_in_hours2","_a$total2","added","wipClioCurrentWeek","wipDbCurrentWeek","_previousMeta$updated2","_managementPayload$wi","_managementPayload$wi2","_managementPayload$wi3","_managementPayload$wi4","_managementPayload$wi5","_managementPayload$wi6","_managementPayload$wi7","_clioCurrentWeek$curr","_clioCurrentWeek$curr2","_mergedWip","_clioCurrentWeek$curr3","_managementPayload$te","_managementPayload$en","_managementPayload$al","_managementPayload$re","_managementPayload$po","managementResponse","allDatasets","catch","managementContentType","managementPayload","annualLeaveError","mergedWip","clioCurrentWeek","hasCurrentWeekMerged","wipCurrentAndLastWeek","currentWeekActivitiesCount","clioCurrentWeekActivitiesCount","historicalWipCount","_mergedWip2","currentWeekActivities","currentWeekEntries","historicalWip","clioWipEntries","clioEntries","clioWipSample","nextData","errors","_previous$updatedAt","preloadReportingCache","commonDatasets","_propUserData$3","preheatingTimer","handleOpenDashboard","tenMinutesAgo","datasetSummaries","streamingState","useStreamingState","definition","refreshElapsedMs","refreshPhaseLabel","_phase$label","phase","readyCount","formattedTime","second","isActivelyLoading","heroMetaItems","formatRelativeTime","anyLoading","ManagementDashboard","AnnualLeaveReport","EnquiriesReport","MetaMetricsReport","alignSelf","streamState","listStyle","report","details","HomePreview"],"sourceRoot":""}