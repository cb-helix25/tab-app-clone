{"version":3,"file":"static/js/884.3fe4d602.chunk.js","mappings":"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","sources":["../node_modules/@fluentui/react/lib/components/ChoiceGroup/src/components/ChoiceGroup/ChoiceGroupOption/ChoiceGroupOption.base.tsx","../node_modules/@fluentui/react/lib/components/ChoiceGroup/src/components/ChoiceGroup/ChoiceGroupOption/ChoiceGroupOption.styles.ts","../node_modules/@fluentui/react/lib/components/ChoiceGroup/src/components/ChoiceGroup/ChoiceGroupOption/ChoiceGroupOption.tsx","../node_modules/@fluentui/react/lib/components/src/components/ChoiceGroup/ChoiceGroup.base.tsx","../node_modules/@fluentui/react/lib/components/src/components/ChoiceGroup/ChoiceGroup.styles.ts","../node_modules/@fluentui/react/lib/components/src/components/ChoiceGroup/ChoiceGroup.tsx","../node_modules/date-fns/esm/startOfMonth/index.js"],"sourcesContent":["import * as React from 'react';\nimport { Image } from '../../../Image';\nimport { Icon } from '../../../Icon';\nimport {\n  classNamesFunction,\n  getNativeProps,\n  inputProperties,\n  css,\n  composeRenderFunction,\n  getPropsWithDefaults,\n} from '../../../Utilities';\nimport type {\n  IChoiceGroupOptionProps,\n  IChoiceGroupOptionStyleProps,\n  IChoiceGroupOptionStyles,\n} from './ChoiceGroupOption.types';\n\nconst getClassNames = classNamesFunction<IChoiceGroupOptionStyleProps, IChoiceGroupOptionStyles>();\n\nconst LARGE_IMAGE_SIZE = 71;\n\nconst DEFAULT_PROPS: Partial<IChoiceGroupOptionProps> = {\n  // This ensures default imageSize value doesn't mutate. Mutation can cause style re-calcuation.\n  imageSize: { width: 32, height: 32 },\n};\n\nexport const ChoiceGroupOptionBase: React.FunctionComponent<IChoiceGroupOptionProps> = propsWithoutDefaults => {\n  // Mix the `key` prop back in since custom render functions may be expecting it\n  // (React uses `key` internally rather than passing it through to the component)\n  const props = getPropsWithDefaults({ ...DEFAULT_PROPS, key: propsWithoutDefaults.itemKey }, propsWithoutDefaults);\n\n  const {\n    ariaLabel,\n    focused,\n    required,\n    theme,\n    iconProps,\n    imageSrc,\n    imageSize,\n    disabled,\n    checked,\n    id,\n    styles,\n    name,\n    ...rest\n  } = props;\n\n  const classNames = getClassNames(styles!, {\n    theme: theme!,\n    hasIcon: !!iconProps,\n    hasImage: !!imageSrc,\n    checked,\n    disabled,\n    imageIsLarge: !!imageSrc && (imageSize!.width > LARGE_IMAGE_SIZE || imageSize!.height > LARGE_IMAGE_SIZE),\n    imageSize,\n    focused,\n  });\n\n  const { className, ...nativeProps } = getNativeProps<{ className: string }>(rest, inputProperties);\n\n  // eslint-disable-next-line @typescript-eslint/no-deprecated\n  const defaultOnRenderLabel = (): JSX.Element => {\n    return (\n      <span id={props.labelId} className=\"ms-ChoiceFieldLabel\">\n        {props.text}\n      </span>\n    );\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-deprecated\n  const defaultOnRenderField = (): JSX.Element => {\n    const { imageAlt = '', selectedImageSrc } = props;\n\n    const onRenderLabel = props.onRenderLabel\n      ? composeRenderFunction(props.onRenderLabel, defaultOnRenderLabel)\n      : defaultOnRenderLabel;\n\n    const label = onRenderLabel({ ...props, key: props.itemKey });\n\n    return (\n      <label htmlFor={id} className={classNames.field}>\n        {imageSrc && (\n          <div className={classNames.innerField}>\n            <div className={classNames.imageWrapper}>\n              <Image src={imageSrc} alt={imageAlt} {...imageSize} />\n            </div>\n            <div className={classNames.selectedImageWrapper}>\n              <Image src={selectedImageSrc} alt={imageAlt} {...imageSize} />\n            </div>\n          </div>\n        )}\n        {iconProps && (\n          <div className={classNames.innerField}>\n            <div className={classNames.iconWrapper}>\n              <Icon {...iconProps} />\n            </div>\n          </div>\n        )}\n        {imageSrc || iconProps ? <div className={classNames.labelWrapper}>{label}</div> : label}\n      </label>\n    );\n  };\n\n  const { onRenderField = defaultOnRenderField } = props;\n\n  const onChange = (evt: React.FormEvent<HTMLInputElement>): void => {\n    props.onChange?.(evt, { ...props, key: props.itemKey });\n  };\n\n  const onBlur = (evt: React.FocusEvent<HTMLElement>) => {\n    props.onBlur?.(evt);\n  };\n\n  const onFocus = (evt: React.FocusEvent<HTMLElement>) => {\n    props.onFocus?.(evt, { ...props, key: props.itemKey });\n  };\n\n  return (\n    <div className={classNames.root}>\n      <div className={classNames.choiceFieldWrapper}>\n        <input\n          aria-label={ariaLabel}\n          id={id}\n          className={css(classNames.input, className)}\n          type=\"radio\"\n          name={name}\n          disabled={disabled}\n          checked={checked}\n          required={required}\n          {...nativeProps}\n          onChange={onChange}\n          onFocus={onFocus}\n          onBlur={onBlur}\n        />\n        {onRenderField({ ...props, key: props.itemKey }, defaultOnRenderField)}\n      </div>\n    </div>\n  );\n};\nChoiceGroupOptionBase.displayName = 'ChoiceGroupOption';\n","import { HighContrastSelector, getGlobalClassNames, getHighContrastNoAdjustStyle } from '../../../Styling';\nimport { IsFocusVisibleClassName } from '../../../Utilities';\nimport type { IStyle } from '../../../Styling';\nimport type { IChoiceGroupOptionStyleProps, IChoiceGroupOptionStyles } from './ChoiceGroupOption.types';\n\nconst GlobalClassNames = {\n  root: 'ms-ChoiceField',\n  choiceFieldWrapper: 'ms-ChoiceField-wrapper',\n  input: 'ms-ChoiceField-input',\n  field: 'ms-ChoiceField-field',\n  innerField: 'ms-ChoiceField-innerField',\n  imageWrapper: 'ms-ChoiceField-imageWrapper',\n  iconWrapper: 'ms-ChoiceField-iconWrapper',\n  labelWrapper: 'ms-ChoiceField-labelWrapper',\n  checked: 'is-checked',\n};\n\nconst labelWrapperLineHeight = 15;\nconst labelWrapperHeight = labelWrapperLineHeight * 2 + 2; // adding 2px height to ensure text doesn't get cutoff\nconst iconSize = 32;\nconst choiceFieldSize = 20;\nconst choiceFieldTransitionDuration = '200ms';\nconst choiceFieldTransitionTiming = 'cubic-bezier(.4, 0, .23, 1)';\nconst radioButtonSpacing = 3;\nconst radioButtonInnerSize = 5;\n\nfunction getChoiceGroupFocusStyle(focusBorderColor: string, hasIconOrImage?: boolean): IStyle {\n  return [\n    'is-inFocus',\n    {\n      selectors: {\n        [`.${IsFocusVisibleClassName} &, :host(.${IsFocusVisibleClassName}) &`]: {\n          position: 'relative',\n          outline: 'transparent',\n          selectors: {\n            '::-moz-focus-inner': {\n              border: 0,\n            },\n            ':after': {\n              content: '\"\"',\n              top: -2,\n              right: -2,\n              bottom: -2,\n              left: -2,\n              pointerEvents: 'none',\n              border: `1px solid ${focusBorderColor}`,\n              position: 'absolute',\n              selectors: {\n                [HighContrastSelector]: {\n                  borderColor: 'WindowText',\n                  borderWidth: hasIconOrImage ? 1 : 2,\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  ];\n}\n\nfunction getImageWrapperStyle(isSelectedImageWrapper: boolean, className?: string, checked?: boolean): IStyle {\n  return [\n    className,\n    {\n      paddingBottom: 2,\n      transitionProperty: 'opacity',\n      transitionDuration: choiceFieldTransitionDuration,\n      transitionTimingFunction: 'ease',\n      selectors: {\n        '.ms-Image': {\n          display: 'inline-block',\n          borderStyle: 'none',\n        },\n      },\n    },\n    (checked ? !isSelectedImageWrapper : isSelectedImageWrapper) && [\n      'is-hidden',\n      {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n        opacity: 0,\n      },\n    ],\n  ];\n}\n\nexport const getStyles = (props: IChoiceGroupOptionStyleProps): IChoiceGroupOptionStyles => {\n  const { theme, hasIcon, hasImage, checked, disabled, imageIsLarge, focused, imageSize } = props;\n  const { palette, semanticColors, fonts } = theme;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  // Tokens\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.smallInputBorder\n  const circleBorderColor = palette.neutralPrimary;\n  const circleHoveredBorderColor = semanticColors.inputBorderHovered;\n  const circleCheckedBorderColor = semanticColors.inputBackgroundChecked;\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBackgroundCheckedHovered\n  const circleCheckedHoveredBorderColor = palette.themeDark;\n  const circleDisabledBorderColor = semanticColors.disabledBodySubtext;\n  const circleBackgroundColor = semanticColors.bodyBackground;\n  const dotUncheckedHoveredColor = palette.neutralSecondary;\n  const dotCheckedColor = semanticColors.inputBackgroundChecked;\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBackgroundCheckedHovered\n  const dotCheckedHoveredColor = palette.themeDark;\n  const dotDisabledColor = semanticColors.disabledBodySubtext;\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.bodyTextChecked\n  const labelHoverFocusColor = palette.neutralDark;\n  const focusBorderColor = semanticColors.focusBorder;\n  const iconOrImageChoiceBorderUncheckedHoveredColor = semanticColors.inputBorderHovered;\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBackgroundCheckedHovered\n  const iconOrImageChoiceBorderCheckedColor = semanticColors.inputBackgroundChecked;\n  const iconOrImageChoiceBorderCheckedHoveredColor = palette.themeDark;\n  const iconOrImageChoiceBackgroundColor = palette.neutralLighter;\n\n  const fieldHoverOrFocusProperties = {\n    selectors: {\n      '.ms-ChoiceFieldLabel': {\n        color: labelHoverFocusColor,\n      },\n      ':before': {\n        borderColor: checked ? circleCheckedHoveredBorderColor : circleHoveredBorderColor,\n      },\n      ':after': [\n        !hasIcon &&\n          !hasImage &&\n          !checked && {\n            content: '\"\"',\n            transitionProperty: 'background-color',\n            left: 5,\n            top: 5,\n            width: 10,\n            height: 10,\n            backgroundColor: dotUncheckedHoveredColor,\n          },\n        checked && {\n          borderColor: dotCheckedHoveredColor,\n          background: dotCheckedHoveredColor,\n        },\n      ],\n    },\n  };\n\n  const enabledFieldWithImageHoverOrFocusProperties = {\n    borderColor: checked ? iconOrImageChoiceBorderCheckedHoveredColor : iconOrImageChoiceBorderUncheckedHoveredColor,\n    selectors: {\n      ':before': {\n        opacity: 1,\n        borderColor: checked ? circleCheckedHoveredBorderColor : circleHoveredBorderColor,\n      },\n    },\n  };\n\n  const circleAreaProperties: IStyle = [\n    {\n      content: '\"\"',\n      display: 'inline-block',\n      backgroundColor: circleBackgroundColor,\n      borderWidth: 1,\n      borderStyle: 'solid',\n      borderColor: circleBorderColor,\n      width: choiceFieldSize,\n      height: choiceFieldSize,\n      fontWeight: 'normal',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      boxSizing: 'border-box',\n      transitionProperty: 'border-color',\n      transitionDuration: choiceFieldTransitionDuration,\n      transitionTimingFunction: choiceFieldTransitionTiming,\n      borderRadius: '50%',\n    },\n    disabled && {\n      borderColor: circleDisabledBorderColor,\n      selectors: {\n        [HighContrastSelector]: {\n          borderColor: 'GrayText',\n          background: 'Window',\n          ...getHighContrastNoAdjustStyle(),\n        },\n      },\n    },\n    checked && {\n      borderColor: disabled ? circleDisabledBorderColor : circleCheckedBorderColor,\n      selectors: {\n        [HighContrastSelector]: {\n          borderColor: 'Highlight',\n          background: 'Window',\n          forcedColorAdjust: 'none',\n        },\n      },\n    },\n    (hasIcon || hasImage) && {\n      top: radioButtonSpacing,\n      right: radioButtonSpacing,\n      left: 'auto', // To reset the value of 'left' to its default value, so that 'right' works\n      opacity: checked ? 1 : 0,\n    },\n  ];\n\n  const dotAreaProperties: IStyle = [\n    {\n      content: '\"\"',\n      width: 0,\n      height: 0,\n      borderRadius: '50%',\n      position: 'absolute',\n      left: choiceFieldSize / 2,\n      right: 0,\n      transitionProperty: 'border-width',\n      transitionDuration: choiceFieldTransitionDuration,\n      transitionTimingFunction: choiceFieldTransitionTiming,\n      boxSizing: 'border-box',\n    },\n    checked && {\n      borderWidth: 5,\n      borderStyle: 'solid',\n      borderColor: disabled ? dotDisabledColor : dotCheckedColor,\n      background: dotCheckedColor,\n      left: 5,\n      top: 5,\n      width: 10,\n      height: 10,\n      selectors: {\n        [HighContrastSelector]: {\n          borderColor: 'Highlight',\n          forcedColorAdjust: 'none',\n        },\n      },\n    },\n    checked &&\n      (hasIcon || hasImage) && {\n        top: radioButtonSpacing + radioButtonInnerSize,\n        right: radioButtonSpacing + radioButtonInnerSize,\n        left: 'auto', // To reset the value of 'left' to its default value, so that 'right' works\n      },\n  ];\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        display: 'flex',\n        alignItems: 'center',\n        boxSizing: 'border-box',\n        color: semanticColors.bodyText,\n        minHeight: 26,\n        border: 'none',\n        position: 'relative',\n        marginTop: 8,\n        selectors: {\n          '.ms-ChoiceFieldLabel': {\n            display: 'inline-block',\n          },\n        },\n      },\n      !hasIcon &&\n        !hasImage && {\n          selectors: {\n            '.ms-ChoiceFieldLabel': {\n              paddingLeft: '26px',\n            },\n          },\n        },\n      hasImage && 'ms-ChoiceField--image',\n      hasIcon && 'ms-ChoiceField--icon',\n      (hasIcon || hasImage) && {\n        display: 'inline-flex',\n        fontSize: 0,\n        margin: '0 4px 4px 0',\n        paddingLeft: 0,\n        backgroundColor: iconOrImageChoiceBackgroundColor,\n        height: '100%',\n      },\n    ],\n    choiceFieldWrapper: [\n      classNames.choiceFieldWrapper,\n      focused && getChoiceGroupFocusStyle(focusBorderColor, hasIcon || hasImage),\n    ],\n    // The hidden input\n    input: [\n      classNames.input,\n      {\n        position: 'absolute',\n        opacity: 0,\n        top: 0,\n        right: 0,\n        width: '100%',\n        height: '100%',\n        margin: 0,\n      },\n      disabled && 'is-disabled',\n    ],\n    field: [\n      classNames.field,\n      checked && classNames.checked,\n      {\n        display: 'inline-block',\n        cursor: 'pointer',\n        marginTop: 0,\n        position: 'relative',\n        verticalAlign: 'top',\n        userSelect: 'none',\n        minHeight: 20,\n        selectors: {\n          ':hover': !disabled && fieldHoverOrFocusProperties,\n          ':focus': !disabled && fieldHoverOrFocusProperties,\n\n          // The circle\n          ':before': circleAreaProperties,\n\n          // The dot\n          ':after': dotAreaProperties,\n        },\n      },\n      hasIcon && 'ms-ChoiceField--icon',\n      hasImage && 'ms-ChoiceField-field--image',\n      (hasIcon || hasImage) && {\n        boxSizing: 'content-box',\n        cursor: 'pointer',\n        paddingTop: 22,\n        margin: 0,\n        textAlign: 'center',\n        transitionProperty: 'all',\n        transitionDuration: choiceFieldTransitionDuration,\n        transitionTimingFunction: 'ease',\n        border: '1px solid transparent',\n        justifyContent: 'center',\n        alignItems: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n      },\n      checked && {\n        borderColor: iconOrImageChoiceBorderCheckedColor,\n      },\n      (hasIcon || hasImage) &&\n        !disabled && {\n          selectors: {\n            ':hover': enabledFieldWithImageHoverOrFocusProperties,\n            ':focus': enabledFieldWithImageHoverOrFocusProperties,\n          },\n        },\n      disabled && {\n        cursor: 'default',\n        selectors: {\n          '.ms-ChoiceFieldLabel': {\n            color: semanticColors.disabledBodyText,\n            selectors: {\n              [HighContrastSelector]: {\n                color: 'GrayText',\n                ...getHighContrastNoAdjustStyle(),\n              },\n            },\n          },\n        },\n      },\n      checked &&\n        disabled && {\n          borderColor: iconOrImageChoiceBackgroundColor,\n        },\n    ],\n    innerField: [\n      classNames.innerField,\n      hasImage && {\n        // using non-null assertion because we have a default in `ChoiceGroupOptionBase` class.\n        height: imageSize!.height,\n        width: imageSize!.width,\n      },\n      (hasIcon || hasImage) && {\n        position: 'relative',\n        display: 'inline-block',\n        paddingLeft: 30,\n        paddingRight: 30,\n      },\n      (hasIcon || hasImage) &&\n        imageIsLarge && {\n          paddingLeft: 24,\n          paddingRight: 24,\n        },\n      (hasIcon || hasImage) &&\n        disabled && {\n          opacity: 0.25,\n          selectors: {\n            [HighContrastSelector]: {\n              color: 'GrayText',\n              opacity: 1,\n            },\n          },\n        },\n    ],\n    imageWrapper: getImageWrapperStyle(false, classNames.imageWrapper, checked),\n    selectedImageWrapper: getImageWrapperStyle(true, classNames.imageWrapper, checked),\n    iconWrapper: [\n      classNames.iconWrapper,\n      {\n        fontSize: iconSize,\n        lineHeight: iconSize,\n        height: iconSize,\n      },\n    ],\n    labelWrapper: [\n      classNames.labelWrapper,\n      fonts.medium,\n      (hasIcon || hasImage) && {\n        display: 'block',\n        position: 'relative',\n        margin: '4px 8px 2px 8px',\n        height: labelWrapperHeight,\n        lineHeight: labelWrapperLineHeight,\n        // using non-null assertion because we have a default in `ChoiceGroupOptionBase` class.\n        maxWidth: imageSize!.width * 2,\n        overflow: 'hidden',\n        whiteSpace: 'pre-wrap',\n      },\n    ],\n  };\n};\n","import * as React from 'react';\nimport { styled } from '../../../Utilities';\nimport { ChoiceGroupOptionBase } from './ChoiceGroupOption.base';\nimport { getStyles } from './ChoiceGroupOption.styles';\nimport type {\n  IChoiceGroupOptionProps,\n  IChoiceGroupOptionStyleProps,\n  IChoiceGroupOptionStyles,\n} from './ChoiceGroupOption.types';\n\nexport const ChoiceGroupOption: React.FunctionComponent<IChoiceGroupOptionProps> = styled<\n  IChoiceGroupOptionProps,\n  IChoiceGroupOptionStyleProps,\n  IChoiceGroupOptionStyles\n>(ChoiceGroupOptionBase, getStyles, undefined, { scope: 'ChoiceGroupOption' });\n","import * as React from 'react';\nimport { Label } from '../../Label';\nimport {\n  classNamesFunction,\n  find,\n  FocusRectsContext,\n  getNativeProps,\n  divProperties,\n  setFocusVisibility,\n  useFocusRects,\n} from '../../Utilities';\nimport { ChoiceGroupOption } from './ChoiceGroupOption/index';\nimport { useId, useControllableValue, useMergedRefs, useWarnings } from '@fluentui/react-hooks';\nimport type { IRefObject } from '../../Utilities';\nimport type {\n  IChoiceGroupOption,\n  IChoiceGroupProps,\n  IChoiceGroupStyleProps,\n  IChoiceGroupStyles,\n  IChoiceGroup,\n} from './ChoiceGroup.types';\nimport type { IChoiceGroupOptionProps } from './ChoiceGroupOption/ChoiceGroupOption.types';\nimport { useDocumentEx } from '../../utilities/dom';\n\nconst getClassNames = classNamesFunction<IChoiceGroupStyleProps, IChoiceGroupStyles>();\n\nconst getOptionId = (option: IChoiceGroupOption, id: string): string => {\n  return `${id}-${option.key}`;\n};\n\nconst findOption = (options: IChoiceGroupOption[], key: IChoiceGroupProps['selectedKey']) => {\n  return key === undefined ? undefined : find(options, value => value.key === key);\n};\n\nconst focusSelectedOption = (\n  options: IChoiceGroupOption[],\n  keyChecked: IChoiceGroupProps['selectedKey'],\n  id: string,\n  focusProviders?: React.RefObject<HTMLElement>[],\n  doc?: Document,\n) => {\n  const optionToFocus = findOption(options, keyChecked) || options.filter(option => !option.disabled)[0];\n  const elementToFocus = optionToFocus && doc?.getElementById(getOptionId(optionToFocus, id));\n\n  if (elementToFocus) {\n    elementToFocus.focus();\n    setFocusVisibility(true, elementToFocus as Element, focusProviders);\n  }\n};\n\nconst focusFromFocusTrapZone = (evt: React.FocusEvent<HTMLElement>): boolean => {\n  return evt.relatedTarget instanceof HTMLElement && evt.relatedTarget.dataset.isFocusTrapZoneBumper === 'true';\n};\n\nconst useComponentRef = (\n  options: IChoiceGroupOption[],\n  keyChecked: IChoiceGroupProps['selectedKey'],\n  id: string,\n  componentRef?: IRefObject<IChoiceGroup>,\n  focusProviders?: React.RefObject<HTMLElement>[],\n) => {\n  const doc = useDocumentEx();\n  React.useImperativeHandle(\n    componentRef,\n    () => ({\n      get checkedOption() {\n        return findOption(options, keyChecked);\n      },\n      focus() {\n        focusSelectedOption(options, keyChecked, id, focusProviders, doc);\n      },\n    }),\n    [options, keyChecked, id, focusProviders, doc],\n  );\n};\n\nconst COMPONENT_NAME = 'ChoiceGroup';\n\nexport const ChoiceGroupBase: React.FunctionComponent<IChoiceGroupProps> = React.forwardRef<\n  HTMLDivElement,\n  IChoiceGroupProps\n>((props, forwardedRef) => {\n  const {\n    className,\n    theme,\n    styles,\n    options = [],\n    label,\n    required,\n    disabled,\n    name,\n    defaultSelectedKey,\n    componentRef,\n    onChange,\n  } = props;\n  const id = useId('ChoiceGroup');\n  const labelId = useId('ChoiceGroupLabel');\n\n  const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(props, divProperties, [\n    'onChange',\n    'className',\n    'required',\n  ]);\n\n  const classNames = getClassNames(styles!, {\n    theme: theme!,\n    className,\n    optionsContainIconOrImage: options.some(option => !!(option.iconProps || option.imageSrc)),\n  });\n\n  const ariaLabelledBy = props.ariaLabelledBy || (label ? labelId : props['aria-labelledby']);\n\n  const [keyChecked, setKeyChecked] = useControllableValue(props.selectedKey, defaultSelectedKey);\n  const [keyFocused, setKeyFocused] = React.useState<string | number>();\n\n  const rootRef = React.useRef<HTMLDivElement | null>(null);\n  const mergedRootRefs: React.Ref<HTMLDivElement> = useMergedRefs(rootRef, forwardedRef);\n\n  const focusContext = React.useContext(FocusRectsContext);\n\n  useDebugWarnings(props);\n  useComponentRef(options, keyChecked, id, componentRef, focusContext?.registeredProviders);\n  useFocusRects(rootRef);\n\n  const onFocus = React.useCallback((ev?: React.FocusEvent<HTMLElement>, option?: IChoiceGroupOptionProps) => {\n    if (option) {\n      setKeyFocused(option.itemKey);\n      option.onFocus?.(ev);\n    }\n  }, []);\n\n  const onBlur = React.useCallback((ev: React.FocusEvent<HTMLElement>, option?: IChoiceGroupOptionProps) => {\n    setKeyFocused(undefined);\n    option?.onBlur?.(ev);\n  }, []);\n\n  const onOptionChange = React.useCallback(\n    (evt?: React.FormEvent<HTMLElement | HTMLInputElement>, option?: IChoiceGroupOptionProps) => {\n      if (!option) {\n        return;\n      }\n      setKeyChecked(option.itemKey);\n\n      option.onChange?.(evt);\n      onChange?.(evt, findOption(options, option.itemKey));\n    },\n    [onChange, options, setKeyChecked],\n  );\n\n  const onRadioFocus = React.useCallback(\n    (evt: React.FocusEvent<HTMLElement>) => {\n      // Handles scenarios like this bug: https://github.com/microsoft/fluentui/issues/20173\n      if (focusFromFocusTrapZone(evt)) {\n        focusSelectedOption(options, keyChecked, id, focusContext?.registeredProviders);\n      }\n    },\n    [options, keyChecked, id, focusContext],\n  );\n\n  return (\n    <div className={classNames.root} {...divProps} ref={mergedRootRefs}>\n      <div role=\"radiogroup\" {...(ariaLabelledBy && { 'aria-labelledby': ariaLabelledBy })} onFocus={onRadioFocus}>\n        {label && (\n          <Label className={classNames.label} required={required} id={labelId} disabled={disabled}>\n            {label}\n          </Label>\n        )}\n        <div className={classNames.flexContainer}>\n          {options.map((option: IChoiceGroupOption) => {\n            return (\n              <ChoiceGroupOption\n                itemKey={option.key}\n                {...option}\n                key={option.key}\n                onBlur={onBlur}\n                onFocus={onFocus}\n                onChange={onOptionChange}\n                focused={option.key === keyFocused}\n                checked={option.key === keyChecked}\n                disabled={option.disabled || disabled}\n                id={getOptionId(option, id)}\n                labelId={option.labelId || `${labelId}-${option.key}`}\n                name={name || id}\n                required={required}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n});\nChoiceGroupBase.displayName = COMPONENT_NAME;\n\nfunction useDebugWarnings(props: IChoiceGroupProps) {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n    useWarnings({\n      name: COMPONENT_NAME,\n      props,\n      mutuallyExclusive: {\n        selectedKey: 'defaultSelectedKey',\n      },\n    });\n  }\n}\n","import { getGlobalClassNames } from '../../Styling';\nimport type { IChoiceGroupStyleProps, IChoiceGroupStyles } from './ChoiceGroup.types';\n\nconst GlobalClassNames = {\n  root: 'ms-ChoiceFieldGroup',\n  flexContainer: 'ms-ChoiceFieldGroup-flexContainer',\n};\n\nexport const getStyles = (props: IChoiceGroupStyleProps): IChoiceGroupStyles => {\n  const { className, optionsContainIconOrImage, theme } = props;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      className,\n      classNames.root,\n      theme.fonts.medium,\n      {\n        display: 'block',\n      },\n    ],\n    flexContainer: [\n      classNames.flexContainer,\n      optionsContainIconOrImage && {\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n      },\n    ],\n  };\n};\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { ChoiceGroupBase } from './ChoiceGroup.base';\nimport { getStyles } from './ChoiceGroup.styles';\nimport type { IChoiceGroupProps, IChoiceGroupStyles, IChoiceGroupStyleProps } from './ChoiceGroup.types';\n\nexport const ChoiceGroup: React.FunctionComponent<IChoiceGroupProps> = styled<\n  IChoiceGroupProps,\n  IChoiceGroupStyleProps,\n  IChoiceGroupStyles\n>(ChoiceGroupBase, getStyles, undefined, { scope: 'ChoiceGroup' });\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * const result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport default function startOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}"],"names":["getClassNames","classNamesFunction","DEFAULT_PROPS","imageSize","width","height","ChoiceGroupOptionBase","propsWithoutDefaults","props","getPropsWithDefaults","__assign","key","itemKey","ariaLabel","focused","required","theme","iconProps","imageSrc","disabled","checked","id","styles","name","rest","__rest","classNames","hasIcon","hasImage","imageIsLarge","_a","getNativeProps","inputProperties","className","nativeProps","defaultOnRenderLabel","React","labelId","text","defaultOnRenderField","imageAlt","selectedImageSrc","label","onRenderLabel","composeRenderFunction","htmlFor","field","innerField","imageWrapper","Image","src","alt","selectedImageWrapper","iconWrapper","Icon","labelWrapper","_b","onRenderField","root","choiceFieldWrapper","css","input","type","onChange","evt","call","onFocus","onBlur","displayName","GlobalClassNames","choiceFieldTransitionDuration","choiceFieldTransitionTiming","getChoiceGroupFocusStyle","focusBorderColor","hasIconOrImage","selectors","concat","IsFocusVisibleClassName","position","outline","border","content","top","right","bottom","left","pointerEvents","HighContrastSelector","borderColor","borderWidth","getImageWrapperStyle","isSelectedImageWrapper","paddingBottom","transitionProperty","transitionDuration","transitionTimingFunction","display","borderStyle","overflow","opacity","ChoiceGroupOption","styled","palette","semanticColors","fonts","getGlobalClassNames","circleBorderColor","neutralPrimary","circleHoveredBorderColor","inputBorderHovered","circleCheckedBorderColor","inputBackgroundChecked","circleCheckedHoveredBorderColor","themeDark","circleDisabledBorderColor","disabledBodySubtext","circleBackgroundColor","bodyBackground","dotUncheckedHoveredColor","neutralSecondary","dotCheckedColor","dotCheckedHoveredColor","dotDisabledColor","labelHoverFocusColor","neutralDark","focusBorder","iconOrImageChoiceBorderUncheckedHoveredColor","iconOrImageChoiceBorderCheckedColor","iconOrImageChoiceBorderCheckedHoveredColor","iconOrImageChoiceBackgroundColor","neutralLighter","fieldHoverOrFocusProperties","color","backgroundColor","background","enabledFieldWithImageHoverOrFocusProperties","circleAreaProperties","fontWeight","boxSizing","borderRadius","getHighContrastNoAdjustStyle","forcedColorAdjust","dotAreaProperties","choiceFieldSize","_c","radioButtonSpacing","medium","alignItems","bodyText","minHeight","marginTop","paddingLeft","fontSize","margin","cursor","verticalAlign","userSelect","paddingTop","textAlign","justifyContent","flexDirection","disabledBodyText","_d","paddingRight","_e","lineHeight","labelWrapperLineHeight","maxWidth","whiteSpace","undefined","scope","getOptionId","option","findOption","options","find","value","focusSelectedOption","keyChecked","focusProviders","doc","optionToFocus","filter","elementToFocus","getElementById","focus","setFocusVisibility","ChoiceGroupBase","forwardedRef","defaultSelectedKey","componentRef","useId","divProps","divProperties","optionsContainIconOrImage","some","ariaLabelledBy","useControllableValue","selectedKey","setKeyChecked","keyFocused","setKeyFocused","rootRef","mergedRootRefs","useMergedRefs","focusContext","FocusRectsContext","useDocumentEx","checkedOption","useComponentRef","registeredProviders","useFocusRects","ev","onOptionChange","onRadioFocus","relatedTarget","HTMLElement","dataset","isFocusTrapZoneBumper","focusFromFocusTrapZone","ref","role","Label","flexContainer","map","ChoiceGroup","flexWrap","startOfMonth","dirtyDate","requiredArgs","arguments","date","toDate","setDate","setHours"],"sourceRoot":""}